<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #22476 (Standardize single and double quotes in CSS url()s) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 04 Feb 2013 23:57:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22476#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22476#comment:5/1360022274130595</guid>
      <description>&lt;p&gt;
Added a new patch because there has been new css added that is also inconsistent. Hope this can go into 3.6
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22476.3.diff attached to Ticket #22476</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 04 Feb 2013 23:55:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22476/22476.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22476/22476.3.diff/1360022157425400</guid>
      <description>&lt;p&gt;
updated for new inconsistent styles
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23386 (P2 theme @ trunk version of WP does not add media from the frontpage) created</title>
      
        <dc:creator>davouch</dc:creator>

      <pubDate>Mon, 04 Feb 2013 23:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23386</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23386/1360021467527122</guid>
      <description>&lt;h1 id="Configuration"&gt;Configuration&lt;/h1&gt;
&lt;ul&gt;&lt;li&gt;WP 3.6-alpha-23334
&lt;/li&gt;&lt;li&gt;P2 Version 1.4.2
&lt;/li&gt;&lt;li&gt;localhost @ XAMPP &amp;amp; WinXP Pro
&lt;/li&gt;&lt;/ul&gt;&lt;h1 id="Issue"&gt;Issue&lt;/h1&gt;
&lt;p&gt;
There is no response after the click on the Add media link on top of the front page. After clicking on the link nothing appears and Firebug shows this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;TypeError: e is undefined [Break On This Error]
...},T.memoize=function(e,t){var n={};return t||(t=T.identity),function(){var r=t.a...
.../wp-includes/js/underscore.min.js?ver=1.4.1
&lt;/pre&gt;&lt;p&gt;
The error remains even with no plugins activated.
&lt;/p&gt;
&lt;h1 id="Solvedby"&gt;Solved by&lt;/h1&gt;
&lt;p&gt;
Reverting back to 3.5.1 official release.
&lt;/p&gt;
&lt;h1 id="Somemoreinfo"&gt;Some more info&lt;/h1&gt;
&lt;p&gt;
The error is well described on:
&lt;a class="ext-link" href="http://wordpress.org/support/topic/p2-theme-does-not-add-media-from-front-page?replies=2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the wordpress.org support forum&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23384 (Timezone Overwritten in wp-settings.php) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Mon, 04 Feb 2013 23:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23384#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23384#comment:1/1360020595055652</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In order to simplify timezone issues, WordPress always keeps track of time internally using UTC. Then, when the time is displayed it's converted the the local time that's defined in the Timezone setting on the General Settings page.
&lt;/p&gt;
&lt;p&gt;
If you're getting a UTC time back from PHP's date() function, that's expected. You should be using WordPress' &lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/current_time"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;current_time()&lt;/a&gt; instead.
&lt;/p&gt;
&lt;p&gt;
If that's not the problem, can you give a detailed description of the symptoms you're seeing? A link to the forum post you alluded to would also be helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:49:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:8/1360018198947765</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) closed</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:40:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:7/1360017610225302</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23385#comment:6" title="Comment 6"&gt;MikeHansenMe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You have to open screen options and check the check boxes for both Books and Genres.
&lt;/p&gt;
&lt;p&gt;
Works for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I never looked into there before, Thanks for the tip!
&lt;/p&gt;
&lt;p&gt;
It works as MikeHansenMe has suggested.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:6/1360017232718391</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You have to open screen options and check the check boxes for both Books and Genres.
&lt;/p&gt;
&lt;p&gt;
Works for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23331 (Gmagick support) updated</title>
      
        <dc:creator>dh-shredder</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23331#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23331#comment:3/1360016716071228</guid>
      <description>&lt;p&gt;
If we're going to go for Gmagick support in 3.6, I'd suggest dropping it in for a soak as soon as we can, so that we can discover any hosting compatibility issues that might arise.
&lt;/p&gt;
&lt;p&gt;
My only hesitation would be that there's less hosting support for Gmagick than Imagick.  That said, it's pretty clear that Gmagick/Graphicsmagick is the way forward, both due to its developers support, and performance concerns.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:5/1360016714752765</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Are they not turned on in screen options?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:25:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:4/1360016704531128</guid>
      <description>&lt;p&gt;
Using XAMPP, Windows 7, 32bit and 64bit
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:3/1360016628019841</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Works perfect for me. Not sure what goes wrong for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:2/1360016490403727</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:16:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385#comment:1/1360016196108454</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23385 (Custom Menu metaboxes do not show in the /nav-menus.php page) created</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23385</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23385/1360016177084272</guid>
      <description>&lt;p&gt;
The problem: Custom menu metaboxes does not show for custom post type and custom taxonomy after fresh install.
&lt;/p&gt;
&lt;p&gt;
Insert this code into the function.php file (of the Twenty Twelve theme):
&lt;/p&gt;
&lt;pre class="wiki"&gt;
function codex_custom_init() {
  $labels = array(
    'name' =&amp;gt; 'Books',
    'singular_name' =&amp;gt; 'Book',
    'add_new' =&amp;gt; 'Add New',
    'add_new_item' =&amp;gt; 'Add New Book',
    'edit_item' =&amp;gt; 'Edit Book',
    'new_item' =&amp;gt; 'New Book',
    'all_items' =&amp;gt; 'All Books',
    'view_item' =&amp;gt; 'View Book',
    'search_items' =&amp;gt; 'Search Books',
    'not_found' =&amp;gt;  'No books found',
    'not_found_in_trash' =&amp;gt; 'No books found in Trash',
    'parent_item_colon' =&amp;gt; '',
    'menu_name' =&amp;gt; 'Books'
  );
  $args = array(
    'labels' =&amp;gt; $labels,
    'public' =&amp;gt; true,
    'publicly_queryable' =&amp;gt; true,
    'show_ui' =&amp;gt; true,
    'show_in_menu' =&amp;gt; true,
    'query_var' =&amp;gt; true,
    'rewrite' =&amp;gt; array( 'slug' =&amp;gt; 'book' ),
    'capability_type' =&amp;gt; 'post',
    'has_archive' =&amp;gt; true,
    'hierarchical' =&amp;gt; false,
    'menu_position' =&amp;gt; null,
    'supports' =&amp;gt; array( 'title', 'editor', 'author', 'thumbnail', 'excerpt', 'comments' )
  );
  register_post_type( 'book', $args );
  // Add new taxonomy, make it hierarchical (like categories)
  $labels = array(
    'name'                =&amp;gt; _x( 'Genres', 'taxonomy general name' ),
    'singular_name'       =&amp;gt; _x( 'Genre', 'taxonomy singular name' ),
    'search_items'        =&amp;gt; __( 'Search Genres' ),
    'all_items'           =&amp;gt; __( 'All Genres' ),
    'parent_item'         =&amp;gt; __( 'Parent Genre' ),
    'parent_item_colon'   =&amp;gt; __( 'Parent Genre:' ),
    'edit_item'           =&amp;gt; __( 'Edit Genre' ),
    'update_item'         =&amp;gt; __( 'Update Genre' ),
    'add_new_item'        =&amp;gt; __( 'Add New Genre' ),
    'new_item_name'       =&amp;gt; __( 'New Genre Name' ),
    'menu_name'           =&amp;gt; __( 'Genre' )
  );
  $args = array(
    'hierarchical'        =&amp;gt; true,
    'labels'              =&amp;gt; $labels,
    'show_ui'             =&amp;gt; true,
    'show_admin_column'   =&amp;gt; true,
    'query_var'           =&amp;gt; true,
    'rewrite'             =&amp;gt; array( 'slug' =&amp;gt; 'genre' )
  );
  register_taxonomy( 'genre', array( 'book' ), $args );
}
add_action( 'init', 'codex_custom_init' );
&lt;/pre&gt;&lt;p&gt;
2) Fresh install of WordPress;
3) Update permalinks;
4) Go to the "/nav-menus.php" page.
&lt;/p&gt;
&lt;p&gt;
Expected to see two menu metaboxes, one for Books and the second for Genres.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23384 (Timezone Overwritten in wp-settings.php) created</title>
      
        <dc:creator>sterfry68</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23384</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23384/1360016105282058</guid>
      <description>&lt;p&gt;
wp-settings.php, line 36:
&lt;/p&gt;
&lt;pre class="wiki"&gt;date_default_timezone_set( 'UTC' );
&lt;/pre&gt;&lt;p&gt;
appears to be overriding the timezone selected in the dashboard and held in the options table.  This code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php echo date_default_timezone_get(); ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
always returns UTC no matter what is in the options table.  And when I comment out line 36 in wp-settings, I get the correct timezone.  This problem has been verified by another user on the support forum.
&lt;/p&gt;
&lt;p&gt;
I have employed a temporary fix by manually setting the timezone back to my option before calling a date function or class.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23377 (map_meta_cap() throws error from has_cap() from current_user_can()) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 04 Feb 2013 22:10:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23377#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23377#comment:1/1360015809440244</guid>
      <description>&lt;p&gt;
Your patch would provide a graceful fallback - but if anyone's using &lt;code&gt;current_user_can()&lt;/code&gt; to check permissions for a different &lt;code&gt;$post&lt;/code&gt;, and also forgets the second argument, then it hides the notice, and may actually give incorrect permissions, which may be considered worse than a PHP Notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23383 (High archive page numbers cause invalid database queries) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 04 Feb 2013 21:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23383#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23383#comment:3/1360013996641083</guid>
      <description>&lt;p&gt;
2147483647 is the maximum integer (signed) on 32 bit systems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21256 (New theme feature - add_theme_support( 'content-width', $defaults )) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 04 Feb 2013 21:34:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21256#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21256#comment:11/1360013677810594</guid>
      <description>&lt;p&gt;
For backwards compatibility with older versions, theme authors can use the following code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;global $wp_version;
if ( version_compare( $wp_version, '3.6', '&amp;gt;=' ) ) :
	add_theme_support( 'content-width', 500 );
else :
	if ( ! isset( $content_width ) )
		$content_width = 500;
endif;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21256 (New theme feature - add_theme_support( 'content-width', $defaults )) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 04 Feb 2013 21:30:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21256#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21256#comment:10/1360013448047577</guid>
      <description>&lt;p&gt;
Do not want to jump the gun, but i created a codex page for &lt;a class="ext-link" href="http://codex.wordpress.org/Content_Width"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Content Width&lt;/a&gt; theme-feature.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23383 (High archive page numbers cause invalid database queries) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 04 Feb 2013 20:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23383#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23383#comment:2/1360010422301634</guid>
      <description>&lt;p&gt;
Interestingly I cannot reproduce this locally, so it may be 32bit vs 64bit or something. The same &lt;code&gt;paged&lt;/code&gt; value results in this query:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;SELECT SQL_CALC_FOUND_ROWS wp_trunk_posts.ID FROM wp_trunk_posts INNER JOIN wp_trunk_term_relationships ON (wp_trunk_posts.ID = wp_trunk_term_relationships.object_id) WHERE 1=1 AND ( wp_trunk_term_relationships.term_taxonomy_id IN (1) ) AND wp_trunk_posts.post_type = 'post' AND (wp_trunk_posts.post_status = 'publish' OR wp_trunk_posts.post_status = 'private') GROUP BY wp_trunk_posts.ID ORDER BY wp_trunk_posts.post_date DESC LIMIT 21474836460, 10&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
No idea where this other &lt;code&gt;LIMIT&lt;/code&gt; is coming from.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23383 (High archive page numbers cause invalid database queries) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 04 Feb 2013 20:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23383#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23383#comment:1/1360010247766478</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23383 (High archive page numbers cause invalid database queries) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 04 Feb 2013 20:36:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23383/1360010190220483</guid>
      <description>&lt;p&gt;
Visiting &lt;code&gt;http://www.viper007bond.com/category/videos/page/6805063692754011230&lt;/code&gt; on my site generates the following database query:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;SELECT SQL_CALC_FOUND_ROWS wp_posts.ID FROM wp_posts INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) WHERE 1=1 AND ( wp_term_relationships.term_taxonomy_id IN (21) ) AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 6.805063692754E+19, 10&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Note the scientific notation &lt;code&gt;LIMIT&lt;/code&gt; value.
&lt;/p&gt;
&lt;p&gt;
PHP: 5.3.15-pl0-gentoo&lt;br /&gt;
MySQL: 5.2.12&lt;br /&gt;
WordPress: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23386" title="Compress scripts/styles: 3.6-alpha-23386."&gt;r23386&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23371 (Subdir front-end Toolbar bug on first login) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 04 Feb 2013 20:17:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23371#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23371#comment:3/1360009045302323</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21256 (New theme feature - add_theme_support( 'content-width', $defaults )) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 04 Feb 2013 20:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21256#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21256#comment:9/1360008860982686</guid>
      <description>&lt;p&gt;
+1 for &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21256#comment:8" title="Comment 8"&gt;comment:8&lt;/a&gt; from @ramly
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16047 (Post formats should have its own column on edit.php, hidden by default) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 04 Feb 2013 20:12:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16047#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16047#comment:15/1360008731971250</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16047.4.diff attached to Ticket #16047</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 04 Feb 2013 20:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16047/16047.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16047/16047.4.diff/1360008703982963</guid>
      <description>&lt;p&gt;
Refresh.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14110 (Expose height and width attributes to ...) updated</title>
      
        <dc:creator>anatolbroder</dc:creator>

      <pubDate>Mon, 04 Feb 2013 19:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14110#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14110#comment:13/1360007495593752</guid>
      <description>&lt;p&gt;
Maybe you should combine the functions &lt;em&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/media.php#L544"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;get_attachment_image&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/media.php#L228"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;get_image_tag&lt;/a&gt;&lt;/em&gt;. They try to do similar things, but are both not flexible enough for using in plugins.
&lt;/p&gt;
&lt;p&gt;
We need one low level function &lt;em&gt;lowlevel_image&lt;/em&gt; for just creating an image tag from an attribute array.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;img
    alt='Image'
    class='image'
    data-image='{JSON}'
    height='456'
    id='123'
    src='image.png'
    title='Image'
    width='789'
    …
/&amp;gt;
&lt;/pre&gt;&lt;p&gt;
And we need a high level function &lt;em&gt;highlevel_image&lt;/em&gt; for own attachment images. The &lt;em&gt;highlevel_image&lt;/em&gt; should collect the attributes from image meta an pass them to the &lt;em&gt;lowlevel_image&lt;/em&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23333 (New icons) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 04 Feb 2013 19:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23333#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23333#comment:34/1360006637496952</guid>
      <description>&lt;p&gt;
I vote -1 on icons and on any use of Open Sans in the admin
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 04 Feb 2013 19:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:47/1360006606167588</guid>
      <description>&lt;p&gt;
Perhaps Underscore.js and Backbone.js should be in the &lt;code&gt;$no&lt;/code&gt; list too, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23262" title="#23262: task (blessed): Update Backbone.js to 0.9.10 (closed: fixed)"&gt;#23262&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16047 (Post formats should have its own column on edit.php, hidden by default) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 04 Feb 2013 19:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16047#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16047#comment:14/1360005882649627</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23347 (Theme fallbacks for post format meta data) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 04 Feb 2013 19:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23347#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23347#comment:10/1360005138952369</guid>
      <description>&lt;p&gt;
Linked on Make/Core about the quote format: &lt;a class="ext-link" href="http://synapticism.com/working-with-wordpress-post-formats-and-quotations/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://synapticism.com/working-with-wordpress-post-formats-and-quotations/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For the record, I'm just a personal crankmonster about the chat format. If it's just splitting up lines and applying some markup that can be styled, then that's just fine. :) Would say that it might not be good to use default markup that could potentially look extremely different from paragraphs, though. Maybe in that way we need to think about how a theme could define what the marked-up output is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23382 (WordPress admin panel lags) created</title>
      
        <dc:creator>Looimaster</dc:creator>

      <pubDate>Mon, 04 Feb 2013 19:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23382/1360004540329662</guid>
      <description>&lt;p&gt;
I'm using Windows 7, brand-new laptop with i7 processor, 8GB RAM and 1080p resolution.
&lt;/p&gt;
&lt;p&gt;
I have created a post with 15 1920x1080 images in it and a lot of content (25000 characters). Results:
&lt;/p&gt;
&lt;h3 id="CHROMECHROMECANARY"&gt;CHROME &amp;amp; CHROME CANARY&lt;/h3&gt;
&lt;p&gt;
It's far from being usable at all. It lags that much that cursor doesn't even change from "default" to "pointer" when I hover over "Publish" button. Even switching to WordPress Admin Panel tab takes 5 seconds. Textareas are not resizable because lags prevent my mouse cursor from doing anything. Actually, entire Admin Panel lags, all these Drag&amp;amp;Drop widgets etc.
&lt;/p&gt;
&lt;h3 id="FIREFOX"&gt;FIREFOX&lt;/h3&gt;
&lt;p&gt;
A bit better than Chrome, everything lags but at least I can resize textareas and after 10 seconds it becomes usable. Nonetheless, it's not as smooth as other websites.
&lt;/p&gt;
&lt;h3 id="IE10"&gt;IE10&lt;/h3&gt;
&lt;p&gt;
Excellent. Not even a single slowdown!
&lt;/p&gt;
&lt;h3 id="SAFARI"&gt;SAFARI&lt;/h3&gt;
&lt;p&gt;
Very close to IE10.
&lt;/p&gt;
&lt;p&gt;
I think that WordPress Admin Panel is stuffed with heavy Javascript. Maybe it's worth taking a look at that. The module that seems to be the heaviest is TinyMCE - when this appears then lags appear as well. Chrome works fine everywhere except WP Admin Panel.
&lt;/p&gt;
&lt;p&gt;
Good luck guys and thank you for your hard work during WordPress development :) My complaints are here only to make it better. I can live with these lags (since I can do it in IE10) but those are just my thoughts (many people use Chrome).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Screen Shot 2013-02-04 at 12.24.51 PM.png attached to Ticket #23333</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 04 Feb 2013 18:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23333/Screen%20Shot%202013-02-04%20at%2012.24.51%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23333/Screen%20Shot%202013-02-04%20at%2012.24.51%20PM.png/1360003659212581</guid>
      <description>&lt;p&gt;
core w/ bb's
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23333 (New icons) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 04 Feb 2013 18:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23333#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23333#comment:33/1360003628916578</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
These icons have a legacy that dates back to December 11, 2008 when 2.7 was released. I know that flat icons are the current trend, but we spent at least several man-hours making the existing icons beautiful with HiDPI details... Seems a waste of effort and resources, and they introduce several issues.
&lt;/p&gt;
&lt;p&gt;
I'm attaching a current menu with BuddyPress and bbPress installed. It looks... ugly now.
&lt;/p&gt;
&lt;p&gt;
Technically, flat icons exist because of a lack of flexibility from using a custom webfont. Not that I'd like them more, personally, but is there evidence to support flattening these icons improves the end-user experience or accessibility?
&lt;/p&gt;
&lt;p&gt;
When the ethos is to "use core as the best example" of what to do, and core makes sweeping UI changes that are not backwards compatible with years of developers doing the right thing, it's frustrating to the core audience of contributors to core. I know you all know this, but it's worth reminding about here, how a seemingly small change has impacts that echo through the community in a negative way.
&lt;/p&gt;
&lt;p&gt;
In my imagination, it's not just developers.. The average user has gotten familiar with the existing icons, to the glow color of the current mouse-over state, to them wondering why a few icons look the same, and a large percentage of them changed.
&lt;/p&gt;
&lt;p&gt;
By switching to flat icons, we also /severely/ limit the range of available icons for plugins to use to distinguish themselves in a classy, core-matchy way. In turn, we disregard every icon that was carefully crafted to match core since 2008. Silhouettes work fine for the limited range of core functionality, but tens of thousands of plugins are going to run out of shapes very quickly.
&lt;/p&gt;
&lt;p&gt;
I.E. Imagine if OS X dock icons could only be 1 color...
&lt;/p&gt;
&lt;p&gt;
The icons, alone, are pretty. Ben does great work. The direction we're going on WordPress.com is nice, too. I like the icons there, because they fit an overall brand decision for WordPress.com. For the larger audience of self hosted WordPress installations, if it's not obvious by now, I think flattening these icons is a bad idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 04 Feb 2013 18:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:168/1360001145036189</guid>
      <description>&lt;p&gt;
The idea behind the "zero menu" state is that it simplifies the flow for the majority of new users (based on the assumption that their theme has a single theme location).
&lt;/p&gt;
&lt;p&gt;
Upon clicking "Create Menu" in the "zero menu" state, 23119.23.diff​ auto-saves the users new menu as their primary theme location.  This saves users from having to manually select a menu for their single theme location (at this point we know they only have one of each), thus streamlining the flow, and consolidating two steps into one.
&lt;/p&gt;
&lt;p&gt;
Users with themes that have zero theme locations, or more than one theme location will not see the zero menus state, and are taken right to the add new screen if they don't have any menus.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23119.23.diff attached to Ticket #23119</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 04 Feb 2013 17:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23119/23119.23.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23119/23119.23.diff/1360000370175863</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23333 (New icons) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 04 Feb 2013 17:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23333#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23333#comment:32/1360000200202713</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree entirely. The white icon on hover is awkward. The background image for #adminmenuback does not seem to match the new look. I noticed you removed this image in your example. I do like where it is going overall though.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23333#comment:30" title="Comment 30"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I took a stab at making the whole Dashboard a little flatter, just for fun: &lt;a class="ext-link" href="http://f.cl.ly/items/3Q0e0y1E1X231K1s3i0M/wp-flatter.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://f.cl.ly/items/3Q0e0y1E1X231K1s3i0M/wp-flatter.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
One thing I noticed in trunk is that the icon hover color is white, which ends up being really awkward: &lt;a class="ext-link" href="http://cl.ly/image/130x1a2h2t0k"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/image/130x1a2h2t0k&lt;/a&gt;. Could we try three icon states: grey (normal), orange/red (hover), and white (current selection)?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21256 (New theme feature - add_theme_support( 'content-width', $defaults )) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 04 Feb 2013 16:06:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21256#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21256#comment:8/1359993989328738</guid>
      <description>&lt;p&gt;
As a first step towards this method we can do it much simpler.
&lt;/p&gt;
&lt;p&gt;
Instead of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! isset( $content_width ) )
	$content_width = 500;
&lt;/pre&gt;&lt;p&gt;
We can do this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_theme_support( 'content-width', 500 );
&lt;/pre&gt;&lt;p&gt;
In the future, if we would like to extend this feature, we can use is_array() for different post-types or page-template.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23381 (update_option() stores unserialized value in object cache) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23381#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23381#comment:3/1359992586951195</guid>
      <description>&lt;p&gt;
As per rboren on IRC, changed the patch to switch &lt;code&gt;add_option()&lt;/code&gt; to match &lt;code&gt;update_option()&lt;/code&gt;. Will require fixing APC to handle the specific use-case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22381.alternate.diff attached to Ticket #23381</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23381/22381.alternate.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23381/22381.alternate.diff/1359992500762189</guid>
      <description>&lt;p&gt;
Alternate patch that changes add_option to match update_option (will need fixing in APC instead)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:38:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:48/1359992280162031</guid>
      <description>&lt;p&gt;
Calls to esc_sql(), $wpdb-&amp;gt;escape(), addslashes(), add_magic_quotes() on data passed to core API also need to be audited and probably removed. Escaping should be done with $wpdb-&amp;gt;prepare() ( or update() and insert() ) right before the data goes to the DB.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:167/1359991505890791</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:165" title="Comment 165"&gt;travisnorthcutt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If so, I feel that may be a little confusing/non-obvious. Perhaps some copy explaining that this is the default menu (based on existing pages, right?), and that clicking the button saves it as a custom menu that can be edited, would be best?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
23119.22.diff​ changes it to: "Edit your default menu by adding or removing items. Drag each item into the order you prefer. Click Create Menu to save your changes." (suggestions welcome).
&lt;/p&gt;
&lt;p&gt;
I'll start testing 23119.22.diff​ this afternoon, and will post the results to: &lt;a class="ext-link" href="http://make.wordpress.org/core/2013/02/01/we-had-a-great-discussion-yesterday-during-office/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://make.wordpress.org/core/2013/02/01/we-had-a-great-discussion-yesterday-during-office/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
p.s. Menus office hours will be today at 21:00 UTC (in #wordpress-dev).  Swing past if you have questions/concerns.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23119.22.diff attached to Ticket #23119</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:20:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23119/23119.22.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23119/23119.22.diff/1359991253291714</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23381 (update_option() stores unserialized value in object cache) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23381#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23381#comment:2/1359991125730261</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks like this has been around for a while.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22413 (get_the_excerpt() missing a check on $post-&gt;post_excerpt) updated</title>
      
        <dc:creator>jeherve</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22413#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22413#comment:5/1359990733690855</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23330 (Allow autoloading all options, not just autoload = yes options) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23330#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23330#comment:11/1359990419925080</guid>
      <description>&lt;p&gt;
Tracked it down: it's a result of APC object caching and inconsistent behaviour between &lt;code&gt;update_option()&lt;/code&gt; and &lt;code&gt;add_option()&lt;/code&gt;; filed as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23381" title="#23381: defect (bug): update_option() stores unserialized value in object cache (closed: fixed)"&gt;#23381&lt;/a&gt;. Not a result of autoloading, but rather &lt;code&gt;update_option()&lt;/code&gt;'s broken behaviour, so +1 for autoloading all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>testbroken.php attached to Ticket #23381</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:06:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23381/testbroken.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23381/testbroken.php/1359990369912277</guid>
      <description>&lt;p&gt;
Test file to reproduce the issue. Requires APC to demonstrate
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:47/1359990357831980</guid>
      <description>&lt;p&gt;
That gets a start on introducing and using two new slash functions. Any stripslashes() or stripslashes_deep() calls on GPC data should be converted to wp_unslash(). If a function makes lots of unlsash calls on $_POST data, consider adding $post_data = wp_unslash( $_POST ) at the top of the function and use $post_data instead of $_POST everywhere in the function. This does have the drawback that once wp_unslash() no longer unslashes, the $post_data assignment will be pointless. It's a matter of style whether we want to add wp_unslash() calls for each use of $_POST in a function or change $_POST to $post_data everywhere in the function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22381.diff attached to Ticket #23381</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:04:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23381/22381.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23381/22381.diff/1359990276724053</guid>
      <description>&lt;p&gt;
Partially revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13673" title="make *_option(), *_transient() functions consistently expect unslashed ..."&gt;r13673&lt;/a&gt; to fix update_option's object caching
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23381 (update_option() stores unserialized value in object cache) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:04:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23381#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23381#comment:1/1359990272248921</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23381 (update_option() stores unserialized value in object cache) created</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23381</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23381/1359990233799899</guid>
      <description>&lt;p&gt;
&lt;code&gt;update_option()&lt;/code&gt; and &lt;code&gt;add_option()&lt;/code&gt; have inconsistent behaviour when storing items in the cache. &lt;code&gt;add_option()&lt;/code&gt; stores the serialized version, whereas &lt;code&gt;update_option()&lt;/code&gt; stores the raw data. When using APC for object caching, this can result in objects being loaded in &lt;code&gt;wp_load_alloptions()&lt;/code&gt; before the class for it is defined in a plugin.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;update_option()&lt;/code&gt; (storing raw data):
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$_newvalue = $newvalue;
	$newvalue = maybe_serialize( $newvalue );
	// ...
			$alloptions[$option] = $_newvalue;
			wp_cache_set( 'alloptions', $alloptions, 'options' );
	}
&lt;/pre&gt;&lt;p&gt;
Whereas in &lt;code&gt;add_option()&lt;/code&gt; (storing serialized data):
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$_value = $value;
	$value = maybe_serialize( $value );
	// ...
			$alloptions[$option] = $value;
			wp_cache_set( 'alloptions', $alloptions, 'options' );
&lt;/pre&gt;&lt;p&gt;
Example plugin included, breaks horribly when using the APC cache, as that doesn't enforce serialization internally. This only occurs when using &lt;code&gt;update_option()&lt;/code&gt; on an existing option.
&lt;/p&gt;
&lt;p&gt;
Looks like this was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13673" title="make *_option(), *_transient() functions consistently expect unslashed ..."&gt;r13673&lt;/a&gt;.
&lt;/p&gt;
&lt;h1 id="Stepstoreproduce"&gt;Steps to reproduce&lt;/h1&gt;
&lt;ol&gt;&lt;li&gt;Install markjaquith's APC object caching plugin
&lt;/li&gt;&lt;li&gt;Activate my plugin. Each refresh will append an object to the array
&lt;/li&gt;&lt;li&gt;Note output is:
&lt;pre class="wiki"&gt;array(0) {
}
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Refresh. Note new output is:
&lt;pre class="wiki"&gt;array(1) {
  [0]=&amp;gt;
  object(rmccue_Test_Object)#275 (0) {
  }
}
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Refresh again. Output should be:
&lt;pre class="wiki"&gt;array(2) {
  [0]=&amp;gt;
  object(__PHP_Incomplete_Class)#5 (1) {
    ["__PHP_Incomplete_Class_Name"]=&amp;gt;
    string(18) "rmccue_Test_Object"
  }
  [1]=&amp;gt;
  object(__PHP_Incomplete_Class)#6 (1) {
    ["__PHP_Incomplete_Class_Name"]=&amp;gt;
    string(18) "rmccue_Test_Object"
  }
}
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>21767.3.diff attached to Ticket #21767</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 04 Feb 2013 15:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21767/21767.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21767/21767.3.diff/1359990085626839</guid>
      <description>&lt;p&gt;
Introduce wp_slash()/wp_unslash() and start using them in ajax-actions.php and wp-comments-post.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [23386]: Compress scripts/styles: 3.6-alpha-23386.</title>
      
        <dc:creator>bumpbot</dc:creator>

      <pubDate>Mon, 04 Feb 2013 14:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23386</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23386/1359988683320456</guid>
      <description>&lt;p&gt;
Compress scripts/styles: 3.6-alpha-23386.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23347 (Theme fallbacks for post format meta data) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Mon, 04 Feb 2013 14:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23347#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23347#comment:9/1359986502295578</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #23173,​23206 batch updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23173%2C23206</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23173%2C23206/1359986056273206</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23385" title="In wp_get_archives(), cache queries to individual cache buckets ..."&gt;23385&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
In wp_get_archives(), cache queries to individual cache buckets instead of storing them in one cached array. Use incrementor style passive cache invalidation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23206" title="#23206: task (blessed): Cache incrementors for wp_get_archives() (closed: fixed)"&gt;#23206&lt;/a&gt;&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23173" title="#23173: task (blessed): Don't cache arrays of query results in a single cache bucket (closed: fixed)"&gt;#23173&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [23385]: In wp_get_archives(), cache queries to individual cache buckets ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23385</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23385/1359986055417430</guid>
      <description>&lt;p&gt;
In wp_get_archives(), cache queries to individual cache buckets instead of storing them in one cached array. Use incrementor style passive cache invalidation.
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23206" title="#23206: task (blessed): Cache incrementors for wp_get_archives() (closed: fixed)"&gt;#23206&lt;/a&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23173" title="#23173: task (blessed): Don't cache arrays of query results in a single cache bucket (closed: fixed)"&gt;#23173&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #23173,​23326 batch updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23173%2C23326</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23173%2C23326/1359985727656041</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23384" title="Use incrementors for cache invalidation in get_terms().
fixes #23326 ..."&gt;23384&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use incrementors for cache invalidation in get_terms().&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23326" title="#23326: task (blessed): Cache incrementors for get_terms() (closed: fixed)"&gt;#23326&lt;/a&gt;&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23173" title="#23173: task (blessed): Don't cache arrays of query results in a single cache bucket (closed: fixed)"&gt;#23173&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [23384]: Use incrementors for cache invalidation in get_terms().  fixes #23326 ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:48:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23384</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23384/1359985726193493</guid>
      <description>&lt;p&gt;
Use incrementors for cache invalidation in get_terms().
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23326" title="#23326: task (blessed): Cache incrementors for get_terms() (closed: fixed)"&gt;#23326&lt;/a&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23173" title="#23173: task (blessed): Don't cache arrays of query results in a single cache bucket (closed: fixed)"&gt;#23173&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:14/1359984421265545</guid>
      <description>&lt;p&gt;
Getting a different error after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23383" title="Update Underscore to version 1.4.4. see #23262"&gt;[23383]&lt;/a&gt;, in Firefox:
&lt;/p&gt;
&lt;pre class="wiki"&gt;TypeError: this.frame is undefined
this.frame.on( 'menu:render:' + menu, this._renderMenu, this );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23380 (3gp mime support) updated</title>
      
        <dc:creator>m_uysl</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:22:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23380#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23380#comment:1/1359984149706021</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.patch attached to Ticket #23380</title>
      
        <dc:creator>m_uysl</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23380/functions.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23380/functions.php.patch/1359984046591637</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>functions.php attached to Ticket #23380</title>
      
        <dc:creator>m_uysl</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23380/functions.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23380/functions.php/1359983758036099</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23380 (3gp mime support) created</title>
      
        <dc:creator>m_uysl</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:15:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23380</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23380/1359983709212291</guid>
      <description>&lt;p&gt;
Some devices using 3gp format for wp mobile app.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23119 (UX Improvements to nav-menus.php) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 04 Feb 2013 13:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23119#comment:166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23119#comment:166/1359983330770140</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23119#comment:165" title="Comment 165"&gt;travisnorthcutt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the Zero Menus State, I'm assuming from the presence of the "create menu" button that clicking that button (whether menu items are rearranged or not?) creates a new custom menu. Is that correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that is correct.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If so, I feel that may be a little confusing/non-obvious. Perhaps some copy explaining that this is the default menu (based on existing pages, right?), and that clicking the button saves it as a custom menu that can be edited, would be best?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a great idea.  Will do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23216 (Create "WP Heartbeat" API) updated</title>
      
        <dc:creator>husobj</dc:creator>

      <pubDate>Mon, 04 Feb 2013 12:40:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23216#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23216#comment:43/1359981607232328</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23337 (TinyMCE, webkit and backspace/linebreak/italic issues) updated</title>
      
        <dc:creator>spocke</dc:creator>

      <pubDate>Mon, 04 Feb 2013 10:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23337#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23337#comment:10/1359973840596062</guid>
      <description>&lt;p&gt;
Ok, made a new hack for this annoying WebKit bug:
&lt;a class="ext-link" href="https://github.com/tinymce/tinymce/commit/cd84a63d4addf27c60ef32dcbe1a49bbee30150a"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tinymce/tinymce/commit/cd84a63d4addf27c60ef32dcbe1a49bbee30150a&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Seems to be working fine now and it also fixes a failing unit test we had for the enter key behavior. Though this doesn't solve Ctrl+Delete/Backspace since that would require us to write our own backspace/delete logic from scratch. Not sure I want to do that in a minor since that would probably take a week or so and introduce new bugs until it's ironed out. Will try to get the WebKit folks to fix this one since it's the only browser engine with this problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18264 (Future private posts listed as already published with future date specified) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 04 Feb 2013 09:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18264#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18264#comment:10/1359970037437433</guid>
      <description>&lt;p&gt;
@danielbachhuber I agree, though I don't think deprecating the post status is the way to go. I think it can live, but perhaps it should become like any other post status, and not a UI of its own. I also think that scheduling a transition from one post status to another should work, regardless what the two statuses are, so the new statuses API (as discussed) should be flexible enough to support this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23257 (Add plural versions of Post Format strings) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 04 Feb 2013 08:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23257#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23257#comment:8/1359967532471126</guid>
      <description>&lt;p&gt;
Plurals without numbers in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23257/23257.2.diff" title="Attachment '23257.2.diff' in Ticket #23257"&gt;23257.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23257/23257.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23257.2.diff attached to Ticket #23257</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Mon, 04 Feb 2013 08:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23257/23257.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23257/23257.2.diff/1359967469672912</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23379 (Make it possible to update localization files through subversion ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 04 Feb 2013 08:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23379#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23379#comment:1/1359967095450441</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 04 Feb 2013 06:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:13/1359960022300690</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23383" title="Update Underscore to version 1.4.4. see #23262"&gt;23383&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update Underscore to version 1.4.4. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23262" title="#23262: task (blessed): Update Backbone.js to 0.9.10 (closed: fixed)"&gt;#23262&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23383]: Update Underscore to version 1.4.4. see #23262</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 04 Feb 2013 06:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23383/1359960021647732</guid>
      <description>&lt;p&gt;
Update Underscore to version 1.4.4. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23262" title="#23262: task (blessed): Update Backbone.js to 0.9.10 (closed: fixed)"&gt;#23262&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 04 Feb 2013 06:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:12/1359959286466650</guid>
      <description>&lt;p&gt;
This is the Backbone commit that broke it. The issue appears to be unrelated to Underscore.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/documentcloud/backbone/commit/71b6404d73f506627f0cc516177e39cc8c9947d7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/documentcloud/backbone/commit/71b6404d73f506627f0cc516177e39cc8c9947d7&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23311 (Enable internationalization in PHPMailer) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Mon, 04 Feb 2013 05:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23311#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23311#comment:8/1359954484930319</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23311#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What we can do instead is add every string in PHPMailer::SetLanguage to the WordPress POT file, so it may be translated like any other string in WordPress.
&lt;/p&gt;
&lt;p&gt;
Then, we can set $phpmailer-&amp;gt;language directly, with our own strings.
&lt;/p&gt;
&lt;p&gt;
As $phpmailer-&amp;gt;language is protected, it would probably make the most sense to actually extend PHPMailer and create a WP_PHPMailer class.
&lt;/p&gt;
&lt;p&gt;
Unit tests should then test that we are not missing any strings in WP_PHPMailer that are present in a potential future version of PHPMailer, by confirming that the keys returned by PHPMailer::GetTranslations() line up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's done in 23311.2.diff and 23311.2-unit-tests.diff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23311.2-unit-tests.diff attached to Ticket #23311</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Mon, 04 Feb 2013 05:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23311/23311.2-unit-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23311/23311.2-unit-tests.diff/1359954401163836</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23311.2.diff attached to Ticket #23311</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Mon, 04 Feb 2013 05:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23311/23311.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23311/23311.2.diff/1359954392960769</guid>
      <description>&lt;p&gt;
Creates new class extending PHPMailer
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23379 (Make it possible to update localization files through subversion ...) created</title>
      
        <dc:creator>timdream</dc:creator>

      <pubDate>Mon, 04 Feb 2013 04:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23379</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23379/1359953860553695</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I wrote a script here a couple years ago to update the core WordPress application through subversion, coz I am tired of tracking my own modifications (if there is any)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/timdream/wp-script"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/timdream/wp-script&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However, starting v3.3.1, I am not be able to update mo/po files through wordpress-i18n svn repo. According to the localization site here &lt;a class="ext-link" href="https://tw.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://tw.wordpress.org/&lt;/a&gt;, I would have to export the files through GlotPress myself.
&lt;/p&gt;
&lt;p&gt;
That leave me two choices with my script:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Hack my way through GlotPress, curl the GET requests to download the l10n files. The script would have to figure out 3.5.1 comes from 3.5.x first, and zh_TW -&amp;gt; zh-tw.
&lt;/li&gt;&lt;li&gt;Download &lt;a class="ext-link" href="http://tw.wordpress.org/latest-zh_TW.tar.gz"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://tw.wordpress.org/latest-zh_TW.tar.gz&lt;/a&gt;, extract and discard everything except the language directory.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Neither approach is optimal. So I would like to propose some possible approaches here:
&lt;/p&gt;
&lt;ol class="upperalpha"&gt;&lt;li&gt;Export the po/mo files back to subversion. I think this must have been discussed somewhere with people against it.
&lt;/li&gt;&lt;li&gt;Provide latest-zh_TW-language.tar.gz package.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I am not aware of whether (B) is already exist or not, nor I am aware of where the packaging script is being maintained. If the script is somewhere publicly available through subversion, I am more than happy to provide a patch to it.
&lt;/p&gt;
&lt;p&gt;
Until then, I would probably need to find some time to implement (1) in shell script :-/ Thank you for reading the bug report.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 04 Feb 2013 04:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:11/1359953682839006</guid>
      <description>&lt;p&gt;
Your patch had malformed JS, scribu. Still have issues, but at least underscore parses.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>underscore-1.4.4-fixed.diff attached to Ticket #23262</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 04 Feb 2013 04:53:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/underscore-1.4.4-fixed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/underscore-1.4.4-fixed.diff/1359953632646059</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 04 Feb 2013 04:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:142</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:142/1359952166047470</guid>
      <description>&lt;p&gt;
12706.db.2.diff is my first patch plus the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Abstraction of the Publish meta box such that custom moderation statuses can appear in the dropdown, and contributors can submit to the next moderation status.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_post_states()&lt;/code&gt;, which is used in the Manage Posts list tables, will now add all 'protected' statuses, which includes 'draft', 'pending', and 'private'
&lt;/li&gt;&lt;li&gt;Implementation of a 'labels' argument when registering custom post statuses
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_sample_permalink()&lt;/code&gt;, and editing a post slug, no longer breaks when a post is saved to a custom moderation status
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If you apply the patch, you'll notice there's a JS error when you change a post to a custom moderation status and hit "OK". There's a @todo marker in the patch for this. Essentially, I'm loading the post status data to the clientside using the script loader. The script loader fires too early though (on init:0) for any custom statuses to be registered.
&lt;/p&gt;
&lt;p&gt;
At least these two big areas still need to be touched:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;QuickPress / PressThis
&lt;/li&gt;&lt;li&gt;XML-RPC
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here are some pieces I ran into confusion about:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;wp-admin/includes/post.php:post_preview()&lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;'draft' posts fire edit_post(), where as others do wp_create_post_autosave()
&lt;/li&gt;&lt;li&gt;Two ways of redirecting to a preview link depending on draft vs. pending
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;em&gt;wp-admin/includes/post.php:_wp_translate_postdata()&lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A bunch of different types of input buttons are interpreted
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;em&gt;wp-admin/includes/post.php:wp_edit_posts_query()&lt;/em&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Couple of hardcoded references to 'draft' and 'pending'
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Lastly, I've started logging the individual changes I'm making (and justification) on my Github fork: &lt;a class="ext-link" href="https://github.com/danielbachhuber/WordPress/compare/master...12706-custom-status"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/danielbachhuber/WordPress/compare/master...12706-custom-status&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Would love to have others play with this code and offer feedback during Tuesday's chat.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12706.db.2.diff attached to Ticket #12706</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 04 Feb 2013 04:05:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12706/12706.db.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12706/12706.db.2.diff/1359950715649744</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 04 Feb 2013 03:19:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:36/1359947940769421</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:32" title="Comment 32"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could you and rmccue put together a proposal for a REST API? I'd love to see a full breakdown of the work involved, the design, the testing plan, the apps you'll build to verify that it meets real-world needs, and a schedule for all of that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd be happy to draw up a full plan for an API if there's consensus that we want it. At the moment I've merely been working on a proof of concept so that there's something to push forward.
&lt;/p&gt;
&lt;p&gt;
The main gripe I have with this patch is that it will leave us supporting JSON-RPC far into the future. I'd be more than happy if the filters in &lt;code&gt;serve_request()&lt;/code&gt; go in, as that would allow a plugin to easily add this if needed.
&lt;/p&gt;
&lt;p&gt;
JSON isn't the solution to every problem, and if the problem with implementing XML-RPC in other languages lies with the XML parsing (I'd be surprised if libxml isn't available in those) then that's something that needs to be solved in those languages. Implementing RPC in JSON feels as if we're attaching wheels to a boat. It may have some utility, but in reality, I don't think it's useful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23378.diff attached to Ticket #23378</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 04 Feb 2013 02:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23378/23378.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23378/23378.diff/1359946791922318</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23378 (wp_(insert|update)_term() should accept term slug as 'parent' argument) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Mon, 04 Feb 2013 02:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23378/1359946478227876</guid>
      <description>&lt;p&gt;
For those programmatically using &lt;code&gt;wp_insert_term()&lt;/code&gt; and &lt;code&gt;wp_update_term()&lt;/code&gt;, it would be great if the 'parent' argument could be a term_id or term slug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>23377.patch attached to Ticket #23377</title>
      
        <dc:creator>wpsmith</dc:creator>

      <pubDate>Mon, 04 Feb 2013 02:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23377/23377.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23377/23377.patch/1359946204866300</guid>
      <description>&lt;p&gt;
First pass.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23377 (map_meta_cap() throws error from has_cap() from current_user_can()) created</title>
      
        <dc:creator>wpsmith</dc:creator>

      <pubDate>Mon, 04 Feb 2013 02:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23377/1359946162297558</guid>
      <description>&lt;p&gt;
Based on the &lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/current_user_can"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;current documentation&lt;/a&gt;, current_user_can() only requires one argument, a capability. However, if I call it from the &lt;code&gt;save_post&lt;/code&gt; hook with WP_DEBUG turned on, I will receive the following errors:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Undefined offset: 0 in /var/www/XXXX/htdocs/wp-includes/capabilities.php on line 1067
Notice: Undefined offset: 0 in /var/www/XXXX/htdocs/wp-includes/capabilities.php on line 1067
Notice: Undefined offset: 0 in /var/www/XXXX/htdocs/wp-includes/capabilities.php on line 1067
Warning: Cannot modify header information - headers already sent by (output started at /var/www/XXXX/htdocs/wp-includes/capabilities.php:1067) in /var/www/XXXX/htdocs/wp-includes/pluggable.php on line 876
&lt;/pre&gt;&lt;p&gt;
As a result, the admin save post will die.
&lt;/p&gt;
&lt;p&gt;
Basic Sample Code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ( 'page' == $post-&amp;gt;post_type &amp;amp;&amp;amp; ! current_user_can( 'edit_page' ) ) || ! current_user_can( 'edit_post' ) )
    return;
&lt;/pre&gt;&lt;p&gt;
As a result, in my opinion &lt;code&gt;map_meta_cap()&lt;/code&gt; should ensure that &lt;code&gt;$args[0]&lt;/code&gt; exists.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 04 Feb 2013 01:54:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:10/1359942841290946</guid>
      <description>&lt;p&gt;
Updating to underscore 1.4.4 makes the featured image link work again. see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23262/underscore-1.4.4.diff" title="Attachment 'underscore-1.4.4.diff' in Ticket #23262"&gt;underscore-1.4.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23262/underscore-1.4.4.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
However, Add Media still doesn't work and no JS error now, which sucks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>underscore-1.4.4.diff attached to Ticket #23262</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 04 Feb 2013 01:52:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23262/underscore-1.4.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23262/underscore-1.4.4.diff/1359942772210206</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>revisions.php attached to Ticket #16215</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 04 Feb 2013 00:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16215/revisions.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16215/revisions.php/1359939255832162</guid>
      <description>&lt;p&gt;
1st draft unit test for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16215" title="#16215: defect (bug): Post Revision history displays the incorrect author (closed: fixed)"&gt;#16215&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16215 (Post Revision history displays the incorrect author) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 04 Feb 2013 00:50:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16215#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16215#comment:29/1359939010204762</guid>
      <description>&lt;p&gt;
i am trying to create a unit test for this bug, but need a little help. my attached test goes thru the steps outlined above to reproduce the bog, and should fail if the bug exists, but it passes... (usually anyway -  in my test environment it sometimes fails, i'm not sure why).
&lt;/p&gt;
&lt;p&gt;
i must be doing something, or several things, wrong because the assertions all pass before the patch and fail after the patch.  if someone can help me out here, i'm happy to write more tests for the revisions bugs we are fixing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23216 (Create "WP Heartbeat" API) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 04 Feb 2013 00:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23216#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23216#comment:42/1359936402022924</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23382" title="Heartbeat API: throttle down when the window looses focus or when the ..."&gt;[23382]&lt;/a&gt; there are two additions: detect when the window looses focus and when the user is not present. The first is looking at &lt;code&gt;$(window).blur()&lt;/code&gt; and the second is looking for keyboard and mouse activity every 30 sec. Both ways also temporarily attach events to all iframes on the screen.
&lt;/p&gt;
&lt;p&gt;
On detecting window blur or no user activity the interval is slowed down to 120 sec. Currently the "no activity" timeout is 5 min, so even if the window is in focus but the user doesn't type or move the mouse it will still slow down to 120 sec.
&lt;/p&gt;
&lt;p&gt;
All this would need more testing and perhaps adjusting. There is some debug code in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23382" title="Heartbeat API: throttle down when the window looses focus or when the ..."&gt;[23382]&lt;/a&gt; that outputs to the browser console. To turn that on, type or paste
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.heartbeat.debug = true
&lt;/pre&gt;&lt;p&gt;
in the console and run it on the Edit Post screen, or install &lt;a href="http://core.trac.wordpress.org/attachment/ticket/23216/heartbeat-test-plugin.php"&gt;heartbeat-test-plugin.php&lt;/a&gt; and test on the Dashboard.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sun, 03 Feb 2013 23:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:9/1359934412676763</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Add media button:&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;
Uncaught TypeError: Cannot read property 'map' of undefined underscore.min.js:5
T.map.T.collect underscore.min.js:5
T.(anonymous function) underscore.min.js:5
media.model.Attachments.Backbone.Collection.extend._changeFilteredProps media-models.js:395
w backbone.min.js:8
g.Events.trigger backbone.min.js:10
f.extend.set backbone.min.js:14
media.model.Attachments.Backbone.Collection.extend.initialize media-models.js:353
media.model.Query.Attachments.extend.initialize media-models.js:661
g.Collection backbone.min.js:18
d backbone.min.js:41
d backbone.min.js:41
media.model.Query.Attachments.extend.get media-models.js:833
media.model.Attachments.Backbone.Collection.extend._requery media-models.js:556
media.model.Attachments.Backbone.Collection.extend._changeQuery media-models.js:383
w backbone.min.js:8
g.Events.trigger backbone.min.js:10
f.extend.set backbone.min.js:13
media.model.Attachments.Backbone.Collection.extend.initialize media-models.js:353
g.Collection backbone.min.js:18
d backbone.min.js:41
media.query media-models.js:642
media.view.MediaFrame.Post.media.view.MediaFrame.Select.extend.createStates media-views.js:1611
media.view.MediaFrame.Select.media.view.MediaFrame.extend.initialize media-views.js:1486
media.view.MediaFrame.Post.media.view.MediaFrame.Select.extend.initialize media-views.js:1595
g.View backbone.min.js:36
media.View.Backbone.View.extend.constructor media-views.js:1190
d backbone.min.js:41
d backbone.min.js:41
d backbone.min.js:41
d backbone.min.js:41
wp.media media-models.js:30
wp.media.editor.add media-editor.js:455
wp.media.editor.open media-editor.js:622
(anonymous function) media-editor.js:641
v.event.dispatch jquery.js:2
o.handle.u jquery.js:2
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Featured image&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Uncaught TypeError: Cannot call method 'on' of undefined media-views.js:319
media.controller.State.Backbone.Model.extend._updateMenu media-views.js:319
w backbone.min.js:8
g.Events.trigger backbone.min.js:10
f.extend.set backbone.min.js:13
g.Model backbone.min.js:12
media.controller.State.Backbone.Model.extend.constructor media-views.js:229
d backbone.min.js:41
d backbone.min.js:41
wp.media.featuredImage.frame media-editor.js:351
$.on.on.wp.media.view.settings.post.featuredImageId media-editor.js:382
v.event.dispatch jquery.js:2
o.handle.u jquery.js:2
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 03 Feb 2013 23:31:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:8/1359934308996661</guid>
      <description>&lt;p&gt;
Nevermind, I was still running the old Backbone version. When I press the "Add Media" button, I get a JS error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;TypeError: e is undefined
&lt;/pre&gt;&lt;p&gt;
from underscore.min.js.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 03 Feb 2013 23:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:7/1359934159955971</guid>
      <description>&lt;p&gt;
Works fine for me in both Firefox and Chrome. Could you describe how exactly it "doesn't work"? Any JS errors?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23262 (Update Backbone.js to 0.9.10) reopened</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sun, 03 Feb 2013 23:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23262#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23262#comment:6/1359933463034636</guid>
      <description>&lt;p&gt;
Media doesn't work for me on several trunk sites. Reverting this change does work for me.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #23329 (Issue _doing_it_wrong() for is_main_query()) updated</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sun, 03 Feb 2013 22:13:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23329#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23329#comment:8/1359929596926524</guid>
      <description>&lt;p&gt;
Okay, nacin and johnjamesjacoby made good points, so &lt;code&gt;_doing_it_wrong()&lt;/code&gt; seems like a better idea to me.
&lt;/p&gt;
&lt;p&gt;
I've added a new patch that reflects this, taking nacin's recommended approach of checking the current action; the wording could probably use some work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23329.2.patch attached to Ticket #23329</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Sun, 03 Feb 2013 22:11:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23329/23329.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23329/23329.2.patch/1359929511934963</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23256 (Mitigate Plugins SVN Exponential Storage Growth) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Sun, 03 Feb 2013 21:02:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23256#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23256#comment:6/1359925360245628</guid>
      <description>&lt;p&gt;
For what it's worth, I should have automatically updated git-svn mirrors up for any plugins in the repo for anyone that wants one in the next month or two (it's not quite as difficult as you may be thinking), but you're right, that's not really the solution.
&lt;/p&gt;
&lt;p&gt;
As mentioned before though, I think the first action item for this is to at least build out the changes needed to push new plugins into their own SVN repos. It's a very clear step, and one that would still make a big difference if done as early as possible. I'm surprised this hasn't been in progress already if this has been known about for years. Regardless of what happens with the plugin repo in the next 5 years, it's obvious that it needs to continue supporting Subversion (even if git support is added in at some point), and that this is how it should have been implemented originally.
&lt;/p&gt;
&lt;p&gt;
If everyone else doesn't have the time to do this, I'm available to work on this myself if necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23333-menu-colors.patch attached to Ticket #23333</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 03 Feb 2013 20:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23333/23333-menu-colors.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23333/23333-menu-colors.patch/1359923482470480</guid>
      <description>&lt;p&gt;
Attempt to tweak menu colors to work with the new icons
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sun, 03 Feb 2013 20:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:35/1359921645494982</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:34" title="Comment 34"&gt;maxcutler&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To call that "junking up the code base" is a bit hyperbolic considering the state of the WordPress code base...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm sorry, you're right, that came across as more inflammatory than I meant. I was trying to paint a picture of the kind of mentality that estabslishes the basis for resisting changes like this that feel, for whatever reasons, like half-solutions.
&lt;/p&gt;
&lt;p&gt;
You make a pretty good case for the utility of being able to specify the serialization method. Perhaps that is the right way to frame this patch, than it's not a stop-gap API solution but an affordance for allowing clients to communicate with the canonical WordPress API using alternate serializations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 03 Feb 2013 19:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:34/1359921128684562</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:33" title="Comment 33"&gt;redsweater&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My general impression of the JSON-RPC wrapper proposal on the server is that it's an example of "junking up" the code base for a short-term gain. I think that's the gist of the reaction you are getting from markoheijnen and rmccue as well. The onus is on proponents to argue that the benefits of this patch are so great that they override the stop-gap, junking-up impression it leaves on some of us.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's put some perspective on this: the supplied patch is only about 110 lines of code if you ignore the change in method declarations (re: scribu/nacin comment above). It also adds the ability for plugins to add whatever serialization format they might prefer: YAML, MessagePack, jsonp, plist, custom XML schemas, etc, etc.
&lt;/p&gt;
&lt;p&gt;
To call that "junking up the code base" is a bit hyperbolic considering the state of the WordPress code base...
&lt;/p&gt;
&lt;p&gt;
As someone who writes and maintains a WordPress XML-RPC client, you are probably familiar with the pains of properly implementing said APIs. If you'd like, I can pull up a list of several dozen bugs in the official WP mobile apps from just the last six months that have been caused by poor/buggy XML-RPC implementations.
&lt;/p&gt;
&lt;p&gt;
The fact of the matter is that JSON is much easier to work with than XML for almost all modern development environments, from mobile to desktop to web. I've written WP XML-RPC clients for multiple languages, and it's a pain everywhere.
&lt;/p&gt;
&lt;p&gt;
There are also many scenarios where it would be easier for WP plugins to use a JSON-RPC endpoint than to muck around with the current AJAX hooks. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14618" title="#14618: enhancement: Proposal: Standardize WP Responses to JS Requests as JSON (closed: duplicate)"&gt;#14618&lt;/a&gt; for more discussion.
&lt;/p&gt;
&lt;p&gt;
I agree with everyone that a "proper" RESTful API would be ideal, but the reality of the situation is that it's going to take a long time for it to land in core. In the intervening year+ of time, it would be so nice to make the lives of the mobile and plugin devs better by having a JSON-RPC API in core that can be depended on for talking to all WP.org sites.
&lt;/p&gt;
&lt;p&gt;
That's just my 2 cents. My goal is simply to broaden WordPress' reach by making it easier to integrate with other systems, and in my experience XML-RPC is a really big negative point for outside developers considering such integrations. I understand that the core community's perspective and priorities may be different, but I want this to be a realistic and not an idealistic discussion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23333 (New icons) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 03 Feb 2013 19:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23333#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23333#comment:31/1359919778472337</guid>
      <description>&lt;p&gt;
Keep in mind that the menu colors will need to be adjusted in order for the new icons to match well. Here's a quick attempt:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/23333/menu-colors.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/23333/menu-colors.png" crossorigin="anonymous" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Not sure if we can change the font to open sans as that would make the text longer which is problematic in some languages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>menu-colors.png attached to Ticket #23333</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 03 Feb 2013 19:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23333/menu-colors.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23333/menu-colors.png/1359919237006755</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14110 (Expose height and width attributes to ...) updated</title>
      
        <dc:creator>anatolbroder</dc:creator>

      <pubDate>Sun, 03 Feb 2013 17:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14110#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14110#comment:12/1359913573766289</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23226 (Always use meta caps directly instead of going through the ...) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sun, 03 Feb 2013 17:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23226#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23226#comment:6/1359912005350659</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sun, 03 Feb 2013 17:10:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:13/1359911437342776</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23329 (Issue _doing_it_wrong() for is_main_query()) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sun, 03 Feb 2013 17:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23329#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23329#comment:7/1359910990699495</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23333 (New icons) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 03 Feb 2013 17:00:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23333#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23333#comment:30/1359910851137357</guid>
      <description>&lt;p&gt;
I took a stab at making the whole Dashboard a little flatter, just for fun: &lt;a class="ext-link" href="http://f.cl.ly/items/3Q0e0y1E1X231K1s3i0M/wp-flatter.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://f.cl.ly/items/3Q0e0y1E1X231K1s3i0M/wp-flatter.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
One thing I noticed in trunk is that the icon hover color is white, which ends up being really awkward: &lt;a class="ext-link" href="http://cl.ly/image/130x1a2h2t0k"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cl.ly/image/130x1a2h2t0k&lt;/a&gt;. Could we try three icon states: grey (normal), orange/red (hover), and white (current selection)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sun, 03 Feb 2013 15:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:33/1359907152821548</guid>
      <description>&lt;p&gt;
maxcutler: as the major proponent of the plan, it seems the onus is more on you to provide extensive evidence for why such a stop-gap solution should be implemented, than to put it on markoheijnen and rmccue to develop an elaborate plan for developing a proper JSON-based API.
&lt;/p&gt;
&lt;p&gt;
Am I right that all the client benefits of the  JSON-RPC wrapper you propose, short of the bandwidth savings, would be achieved by implementing a similar wrapper on the client side? Maybe that is the right area to focus on for the short term, to prototype how a JSON-based API should behave and give you the luxury of dealing in JSON for the majority of your client code, while exploring the mechanics of how the JSON API should ideally work.
&lt;/p&gt;
&lt;p&gt;
My general impression of the JSON-RPC wrapper proposal on the server is that it's an example of "junking up" the code base for a short-term gain. I think that's the gist of the reaction you are getting from markoheijnen and rmccue as well. The onus is on proponents to argue that the benefits of this patch are so great that they override the stop-gap, junking-up impression it leaves on some of us.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 03 Feb 2013 15:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:32/1359906572369719</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:31" title="Comment 31"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For me it doesn't really matter why it is worse. We should not implement this in this way if we will get a RESTfull API in 3.7 or 3.8. We should look how we want stuff in the future instead of looking only to the next release.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you and rmccue put together a proposal for a REST API? I'd love to see a full breakdown of the work involved, the design, the testing plan, the apps you'll build to verify that it meets real-world needs, and a schedule for all of that.
&lt;/p&gt;
&lt;p&gt;
Forgive me for being skeptical, but based on my experience with the core community over the past several releases, I have a truly hard time believing that you could land a proper REST API even by 3.8.
&lt;/p&gt;
&lt;p&gt;
In the meantime, there's a demonstrable need for an API that is better than XML-RPC, and I feel JSON-RPC is a way to get there quickly with minimal code churn. As scribu said, if you have real technical or maintainability concerns, I'd love to hear them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23376 (Misspelling in _publish_post_hook function documentation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 15:00:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23376#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23376#comment:1/1359903638119293</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>post.diff attached to Ticket #23376</title>
      
        <dc:creator>roulandf</dc:creator>

      <pubDate>Sun, 03 Feb 2013 14:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23376/post.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23376/post.diff/1359902972178253</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23376 (Misspelling in _publish_post_hook function documentation) created</title>
      
        <dc:creator>roulandf</dc:creator>

      <pubDate>Sun, 03 Feb 2013 14:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23376/1359902915177086</guid>
      <description>&lt;p&gt;
Unfortunately there is a misspelling in the function documentation which is a potential cause of defect. Additionally there is a unused global declaration of $wpdb of a previous version.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16953 (Allow symlinked plugins) updated</title>
      
        <dc:creator>cklosows</dc:creator>

      <pubDate>Sun, 03 Feb 2013 14:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16953#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16953#comment:40/1359901407163090</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sun, 03 Feb 2013 13:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:31/1359897769026800</guid>
      <description>&lt;p&gt;
For me it doesn't really matter why it is worse. We should not implement this in this way if we will get a RESTfull API in 3.7 or 3.8. We should look how we want stuff in the future instead of looking only to the next release.
&lt;/p&gt;
&lt;p&gt;
We could make the current implementation a little bit different so that it can be extended with a plugin. So don't extend IXR_Server and change serve_request() part that Max has in his patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 03 Feb 2013 13:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:30/1359897399624511</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
JSON-RPC looks much worse to me than XML-RPC since it seems like we're squashing two incompatible technologies together.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's very hand-wavy. Any pragmatic arguments for why JSON-RPC is worse than XML-RPC?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sun, 03 Feb 2013 12:58:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:29/1359896285031145</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23099#comment:28" title="Comment 28"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you really want to get a RESTfull API by 3.7, you'd better start now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Already have, &lt;a class="ext-link" href="https://gist.github.com/5022591d312952d1245a"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/5022591d312952d1245a&lt;/a&gt; is the last version that I pushed up.
&lt;/p&gt;
&lt;p&gt;
I still don't think we should implement a stop-gap like this patch. JSON-RPC looks much worse to me than XML-RPC since it seems like we're squashing two incompatible technologies together. It's also something that will need to be supported moving forward, which again, is not something I think we should do for something that should be replaced in the next release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #18807,​23375 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Feb 2013 12:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18807%2C23375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18807%2C23375/1359894927657315</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18807" title="#18807: defect (bug): Switching from HTML to Visual messes up &amp;#34;samp&amp;#34; elements (closed: fixed)"&gt;#18807&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #23375 (Bug in &lt;p&gt;&lt;/p&gt;) created</title>
      
        <dc:creator>Looimaster</dc:creator>

      <pubDate>Sun, 03 Feb 2013 12:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23375/1359894456976523</guid>
      <description>&lt;p&gt;
We all know that WordPress adds unwanted &amp;lt;p&amp;gt; and &amp;lt;/p&amp;gt; everywhere which is alone a frustrating bug for me.
&lt;/p&gt;
&lt;p&gt;
But if you do something like this manually:
&amp;lt;p&amp;gt;test &amp;lt;samp&amp;gt;test2&amp;lt;/samp&amp;gt; test3&amp;lt;/p&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Then it will be displayed like:
&amp;lt;p&amp;gt;test &amp;lt;samp&amp;gt;test2&amp;lt;/samp&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;test3&amp;lt;/p&amp;gt;
&lt;/p&gt;
&lt;p&gt;
But this...:
&amp;lt;p&amp;gt;test &amp;lt;b&amp;gt;test2&amp;lt;/b&amp;gt; test3&amp;lt;/p&amp;gt;
&lt;/p&gt;
&lt;p&gt;
...will be displayed like:
&amp;lt;p&amp;gt;test &amp;lt;b&amp;gt;test2&amp;lt;/b&amp;gt; test3&amp;lt;/p&amp;gt;
&lt;/p&gt;
&lt;p&gt;
It performs wrong match of &amp;lt;/p&amp;gt; with &amp;lt;/samp&amp;gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23099 (Add JSON-RPC support using existing XML-RPC methods) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 03 Feb 2013 11:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23099#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23099#comment:28/1359892502440428</guid>
      <description>&lt;p&gt;
Well, the patch for this is mostly written, so it's not much effort to get it in.
&lt;/p&gt;
&lt;p&gt;
If you really want to get a RESTfull API by 3.7, you'd better start now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23333 (New icons) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 03 Feb 2013 10:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23333#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23333#comment:29/1359888769873474</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have &lt;a class="ext-link" href="https://plus.google.com/101675293278434581718/posts/Tef2dR7khRe"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;asked my followers&lt;/a&gt; what they are thinking about the new icons at this state.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;similar to the metro style (Windows 8 Modern UI)
&lt;/li&gt;&lt;li&gt;flat: The current UI has a lot of the "1px deep", see text shadows, the icons not. Not sure if we should switch to the flat style.
&lt;/li&gt;&lt;li&gt;size: The ratio of font-size and icon size doesn't match, the icons are too big.
&lt;/li&gt;&lt;li&gt;Also noticed (perhaps through the size): Isn't it time for another icon for posts, the pin isn't really a good representation of posts.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23333 (New icons) updated</title>
      
        <dc:creator>ryanhellyer</dc:creator>

      <pubDate>Sun, 03 Feb 2013 08:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23333#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23333#comment:28/1359881734200117</guid>
      <description>&lt;p&gt;
I've been finding these excessively "fat looking". Ipstenu also pointed on Twitter that they make the rest of the icons stand out quite a lot, although I guess that would change over time as plugins updated their built in icons.
&lt;/p&gt;
&lt;p&gt;
You can see an example of them in action here ... &lt;a class="ext-link" href="http://stuff.ryanhellyer.net/wp-icons.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stuff.ryanhellyer.net/wp-icons.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Related conversations:
&lt;a class="ext-link" href="https://twitter.com/ryanhellyer/status/297987117693403136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/ryanhellyer/status/297987117693403136&lt;/a&gt;
&lt;a class="ext-link" href="https://twitter.com/bjornjohansen/status/297990009938653184"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/bjornjohansen/status/297990009938653184&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>heartbeat-test-plugin.php attached to Ticket #23216</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 03 Feb 2013 07:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23216/heartbeat-test-plugin.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23216/heartbeat-test-plugin.php/1359875574224596</guid>
      <description>&lt;p&gt;
Small plugin to demo and test the first run.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20232 (Adding custom link / page to menu item renders  500 Internal Server Error) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 07:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20232#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20232#comment:3/1359875109224041</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14134" title="#14134: defect (bug): Menus item are limited to 16 item and will not save more than that (closed: fixed)"&gt;#14134&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23216 (Create "WP Heartbeat" API) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 03 Feb 2013 07:03:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23216#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23216#comment:41/1359875008310702</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23382" title="Heartbeat API: throttle down when the window looses focus or when the ..."&gt;23382&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Heartbeat API: throttle down when the window looses focus or when the user is inactive, always send 'screen_id', change the interval settings to 'fast' (5sec), 'standard' (15sec) and 'slow' (60sec), the interval can be changed from PHP, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23216" title="#23216: task (blessed): Create &amp;#34;WP Heartbeat&amp;#34; API (closed: fixed)"&gt;#23216&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23382]: Heartbeat API: throttle down when the window looses focus or when the ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 03 Feb 2013 07:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23382/1359875007621019</guid>
      <description>&lt;p&gt;
Heartbeat API: throttle down when the window looses focus or when the user is inactive, always send 'screen_id', change the interval settings to 'fast' (5sec), 'standard' (15sec) and 'slow' (60sec), the interval can be changed from PHP, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23216" title="#23216: task (blessed): Create &amp;#34;WP Heartbeat&amp;#34; API (closed: fixed)"&gt;#23216&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23373 (Limiting get_users() results by meta value with LIKE wildcards) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 06:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23373#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23373#comment:1/1359874587122404</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23374 (Custom photo title is overwritten upon completion of upload) created</title>
      
        <dc:creator>franksvalli</dc:creator>

      <pubDate>Sun, 03 Feb 2013 03:37:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23374/1359862650929133</guid>
      <description>&lt;p&gt;
Version:  3.5.1 (latest)
Environment: Chrome 24.0.1312.57 on Mac OSX 10.8.2
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new post and click the Add Media button.
&lt;/li&gt;&lt;li&gt;Add several large photos (&amp;gt;4MB).  This is necessary to give you time to perform step 3.
&lt;/li&gt;&lt;li&gt;Add new titles to the photos that are in the process of uploading.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Output: after a photo finishes uploading, its newly-added title get overwritten by a default title (taken from the filename)
Expected output: on the completion of a photo upload, the title field should be checked and preserved if necessary, not overwritten
&lt;/p&gt;
&lt;p&gt;
(not related to plugins or theme)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16215 (Post Revision history displays the incorrect author) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 03 Feb 2013 03:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16215#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16215#comment:28/1359861323420788</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16215#comment:27" title="Comment 27"&gt;mdawaffe&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
i don't think we need to worry about upgrade/downgrade/upgrade you mentioned. i'm not even sure we need to upgrade the old db entries, i think just showing them correctly and storing them correctly from now on might suffice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta.php.patch attached to Ticket #23373</title>
      
        <dc:creator>mpwalsh8</dc:creator>

      <pubDate>Sun, 03 Feb 2013 03:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23373/meta.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23373/meta.php.patch/1359860869840043</guid>
      <description>&lt;p&gt;
Patch for meta.php to support this functionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23373 (Limiting get_users() results by meta value with LIKE wildcards) created</title>
      
        <dc:creator>mpwalsh8</dc:creator>

      <pubDate>Sun, 03 Feb 2013 03:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23373/1359860823863160</guid>
      <description>&lt;p&gt;
I want to limit the results returned by get_users() to a subset of the users based on some criteria that will be stored in the User Meta table (e.g. all users whose first name begins with M).
&lt;/p&gt;
&lt;p&gt;
Here arr the args I am passing to get_users():
&lt;/p&gt;
&lt;pre class="wiki"&gt;(
    [include] =&amp;gt;
    [exclude] =&amp;gt;
    [fields] =&amp;gt; all_with_meta
    [meta_key] =&amp;gt; last_name
    [meta_value] =&amp;gt; M%
    [meta_compare] =&amp;gt; LIKE
)
&lt;/pre&gt;&lt;p&gt;
This is the query the WordPress constructs for me:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[01-Feb-2013 16:01:08 UTC] WP_User_Query Object
(
    [query_vars] =&amp;gt; Array
        (
            [blog_id] =&amp;gt; 1
            [role] =&amp;gt;
            [meta_key] =&amp;gt; last_name
            [meta_value] =&amp;gt; M%
            [meta_compare] =&amp;gt; LIKE
            [include] =&amp;gt;
            [exclude] =&amp;gt;
            [search] =&amp;gt;
            [search_columns] =&amp;gt; Array
                (
                )
            [orderby] =&amp;gt; login
            [order] =&amp;gt; ASC
            [offset] =&amp;gt;
            [number] =&amp;gt;
            [count_total] =&amp;gt;
            [fields] =&amp;gt; all_with_meta
            [who] =&amp;gt;
        )
    [results] =&amp;gt; Array
        (
        )
    [total_users] =&amp;gt; 0
    [query_fields] =&amp;gt; wp_users.ID
    [query_from] =&amp;gt; FROM wp_users INNER JOIN wp_usermeta ON (wp_users.ID = wp_usermeta.user_id)
    [query_where] =&amp;gt; WHERE 1=1 AND ( (wp_usermeta.meta_key = 'last_name' AND CAST(wp_usermeta.meta_value AS CHAR) LIKE '%M\\%%') )
    [query_orderby] =&amp;gt; ORDER BY user_login ASC
    [query_limit] =&amp;gt;
&lt;/pre&gt;&lt;hr /&gt;
&lt;p&gt;
As you can see, the LIKE clause is escaped and wrapped with SQL wildcard operators.  I can't figure out how to prevent this from happening as what I want is "LIKE 'M%'" to be my actually query.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Andrew Nacin wp@… via lists.automattic.com
11:24 am (1 day ago) to wp-hackers
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Currently, "LIKE" prepends and appends wildcards, as in %term%. We could add "%LIKE" and "LIKE%", though that would not help with the situation where you want LIKE taken literally, potentially without % wildcards at all. (Such as using _ as a single-character wildcard, or looking for case insensitive matching.) Probably the best way to add to this API would be to allow for a 'like_escape' =&amp;gt; false; that would accept your value as provided. If you'd like to submit a ticket (and patch), this can definitely find its way into 3.6.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Nacin
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
I have prepared a patch to meta.php which allows escaped LIKE and NOT LIKE meta compares to work properly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>mcbenton</dc:creator>

      <pubDate>Sun, 03 Feb 2013 02:38:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:45/1359859123420341</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22896 (Prevent plugins from overriding jQuery in the admin) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sun, 03 Feb 2013 01:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22896#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22896#comment:46/1359854818826515</guid>
      <description>&lt;p&gt;
thanks for the attention, this change will be appreciated :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>mintindeed</dc:creator>

      <pubDate>Sun, 03 Feb 2013 00:28:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:12/1359851301424183</guid>
      <description>&lt;p&gt;
It was simpler just to load it everywhere in the admin, so I did that.  It would be pretty easy to further extend it to show it on non-admin pages if the user is logged in.
&lt;/p&gt;
&lt;p&gt;
I wrapped it in an object so that it's as self-contained as possible, and to make it easy to override &amp;amp; extend as needed.  I'm including the class via wp-settings.php, then adding a "loader" helper function in functions.php, and adding an action to default-filters.php to actually load it.  The action runs in "init" so that plugins, themes, etc can unhook it if desired.  (Not "admin_init"; the WP_Auth_Check class is responsible for determining that it only wants to run in the admin, this also allows plugins to change when/how it's loaded by overriding WP_Auth_Check::_init().)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Block publish/save until login has been verified. Polling duration can be decreased (or maybe even done away with entirely) if we block the Publish/Save/etc actions until we've verified the user's cookie.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The JS will disable the save/publish/move to trash buttons (the plugin had this behaviour).  That's probably fancy enough for now?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Pre-emptive notification. When approaching the user's login cookie expiration time, say 1 hour before, display a message and allow the user to extend their login. For example, how banking sites notify you when you've been inactive too long and they're about to log you out.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We can use the new Heartbeat API from JS to request time left to cookies expiration, or on the PHP side, send notification to the browser one hour before.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The plugin polled every 15 seconds, which is the same duration as the heartbeat, so I'm hooking into the heartbeat API to run the login check.  It would be pretty simple to add a message this way; I'll take a stab at that after I make any necessary revisions to the attached patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23371 (Subdir front-end Toolbar bug on first login) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 00:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23371#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23371#comment:2/1359850906174189</guid>
      <description>&lt;p&gt;
This happens when a front-end cookie with the new path doesn't exist yet. We could probably force a re-login in &lt;code&gt;update_home_siteurl()&lt;/code&gt; (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23371/23371.patch" title="Attachment '23371.patch' in Ticket #23371"&gt;23371.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23371/23371.patch" title="Download"&gt;​&lt;/a&gt;), which would fix &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/13779" title="#13779: defect (bug): Preview doesn’t work - WP installed in its own directory (reviewing)"&gt;#13779&lt;/a&gt; as well.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; wouldn't work there, since &lt;code&gt;COOKIEPATH&lt;/code&gt; still has the old value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23371.patch attached to Ticket #23371</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 00:18:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23371/23371.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23371/23371.patch/1359850720169317</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23372 (Use a human-readable constant in wp_set_auth_cookie()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 00:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23372#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23372#comment:1/1359850057274257</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23372.patch attached to Ticket #23372</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 00:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23372/23372.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23372/23372.patch/1359850002407971</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23372 (Use a human-readable constant in wp_set_auth_cookie()) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 03 Feb 2013 00:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23372</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23372/1359849990123791</guid>
      <description>&lt;p&gt;
Missed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21996" title="Introduce constants to allow for easier expression of time periods in ..."&gt;[21996]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>