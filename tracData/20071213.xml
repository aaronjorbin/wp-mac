<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #4472 (Movable Type importer: MT keywords to WP tags) updated</title>
      
        <dc:creator>shacker</dc:creator>

      <pubDate>Thu, 13 Dec 2007 23:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4472#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4472#comment:5/1197589694000000</guid>
      <description>&lt;p&gt;
Tested successfully on a very large conversion project: 15,665 posts and 5,784 tags integrated perfectly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 13 Dec 2007 22:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:47/1197583716000000</guid>
      <description>&lt;p&gt;
To clarify, I meant using the DB connect information as part of sk, the secret key used when creating k.  DB connect info plus the salt from the DB would be used in sk, not just the DB connect info alone.  Someone without read access to the DB would have to contend with the random salt from the DB in addition to the DB connect info.  Someone with read access to the DB would have the secret key from the DB, leaving just the DB connect info.  So an attacker would have to get DB read info to reduce the sk down to just the DB connect info and then break the sk.  Since the sk is used in the cookie only as a salt for hash_hmac(), how easy is it to brute force?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 13 Dec 2007 21:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:34/1197581938000000</guid>
      <description>&lt;p&gt;
Patch automatically uses generic page rules if a compatible permalink structure is being used.  No need to change the value by hand.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>enable_generic_page_rules.diff attached to Ticket #3614</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 13 Dec 2007 21:38:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/3614/enable_generic_page_rules.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/3614/enable_generic_page_rules.diff/1197581894000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5456 (wxr import: post_parent is handled incorrectly in some circumstances) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Thu, 13 Dec 2007 21:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5456#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5456#comment:2/1197580551000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixed on trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5464 (Set post category via wp-mail.php) updated</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Thu, 13 Dec 2007 21:13:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5464#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5464#comment:3/1197580417000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 13 Dec 2007 20:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:9/1197579293000000</guid>
      <description>&lt;p&gt;
There are both mysql_set_charset() and mysqli_set_charset flavors, I believe.  I think you have to have fairly recent versions of MySQL and PHP for these things to work as they should.  set_charset() is a necessity for us.
&lt;/p&gt;
&lt;p&gt;
It looks like drupal uses mysql_real_escape_string() and SET NAMES without using mysql_set_charset().  I wonder how they get away with that.  I think they upgrade their tables so that they are in UTF-8.  Maybe they force UTF-8 everywhere?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5464 (Set post category via wp-mail.php) closed</title>
      
        <dc:creator>lexhair</dc:creator>

      <pubDate>Thu, 13 Dec 2007 20:50:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5464#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5464#comment:2/1197579057000000</guid>
      <description>invalid: &lt;p&gt;
Thank you! Resolved as 'invalid.'
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5464 (Set post category via wp-mail.php) updated</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Thu, 13 Dec 2007 20:41:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5464#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5464#comment:1/1197578489000000</guid>
      <description>&lt;p&gt;
The Codex says, "The following enhancements may be made to your wp-mail.php so your email will be translated into metadata for your post..."  My interpretation is that you have to make your own code changes; it's not provided by wp-mail.php.  So I think adding this to wp-mail.php would be an enhancement.
&lt;/p&gt;
&lt;p&gt;
At the present time, you can use a plugin and the phone_content filter to change $post_categories as a global to set the category(ies).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5463 (New XML-RPC method: wp.getCommentCount) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Thu, 13 Dec 2007 17:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5463#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5463#comment:4/1197568735000000</guid>
      <description>&lt;p&gt;
Hi Joseph - my faith is in you to do whatever is best. I just wanted to express my gut reaction here, for the record and in case it sparks any rethinking on anybody's part.
&lt;/p&gt;
&lt;p&gt;
By no means do I want to denigrate the work you're doing, though. God, no! ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5463 (New XML-RPC method: wp.getCommentCount) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 13 Dec 2007 17:53:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5463#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5463#comment:3/1197568386000000</guid>
      <description>&lt;p&gt;
The general desire to expose this information certainly did come to the forefront because of this one tool.  But is that really a good reason to disregard it?  It isn't like no one else will be able to use this if they want to.
&lt;/p&gt;
&lt;p&gt;
I agree that an expanded comments API is a good idea, and this new method is a step that direction.  Before submitting this I considered skipping it entirely, but I didn't for two reasons.  One, there is obviously an interest in exposing this specific information (comment numbers) and the difference in the size of the data.  In order to come up with these numbers via a general comment editing API you'd have to send a significantly larger amount of data across the wire.
&lt;/p&gt;
&lt;p&gt;
I have every intention of adding more comment methods, it seems desirable to have the ability to fetch and modify and perhaps even create comments via XML-RPC.  But I'd rather not wait for that to be complete in order to start adding additional useful methods now.
&lt;/p&gt;
&lt;p&gt;
On the embedded query, I totally agree.  I was rather surprised not to see a function for doing this already.  Would a similar wp_get_comment_count() function in wp-includes/comment.php be reasonable?  I can put together a new patch to do that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5464 (Set post category via wp-mail.php) created</title>
      
        <dc:creator>lexhair</dc:creator>

      <pubDate>Thu, 13 Dec 2007 17:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5464</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5464/1197565407000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Blog_by_Email"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;The Codex&lt;/a&gt; indicates you can set a post category in the email subject. However, version 2.3.1 of wp-mail.php does not appear to support this. Defect unless the Codex is revised, then this would be an enhancement.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5341 (New wp.getCommentModerationCount XML-RPC method) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 13 Dec 2007 17:02:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5341#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5341#comment:6/1197565370000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5463 (New XML-RPC method: wp.getCommentCount) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 13 Dec 2007 16:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5463#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5463#comment:2/1197562560000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good patch.
&lt;/p&gt;
&lt;p&gt;
Some comments.
&lt;/p&gt;
&lt;p&gt;
Can we avoid embedding database queries in xmlrpc.php - it would be better to introduce a new wordpress api function to expose the data and have the query there - that way we can use it internally or other plugins can use.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5463 (New XML-RPC method: wp.getCommentCount) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Thu, 13 Dec 2007 16:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5463#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5463#comment:1/1197562211000000</guid>
      <description>&lt;p&gt;
I'm still a little troubled by the fact that this API is being driven by a single plugin with a very specific goal. It seems hasty to implement this very specific API for getting "counts", when probably what should be done is a longer-term thoughtful development of a general "comments" API which would allow fetching and editing them, as well.
&lt;/p&gt;
&lt;p&gt;
I have to admit this API is a lot better than the other one which is being superseded, but it will still look a little embarrassing in the API, I think, to have this strangely orphaned API for getting comment counts, with no other supporting API for comments.
&lt;/p&gt;
&lt;p&gt;
For instance, what if the API for getting posts had been driven from the start by some plugin that just happened to show you your "post count" ? Then we'd have this weird "getPostCount" method to support forever, and it might look kind of weird in the API. I feel like some restraint might be in order to keep the API from bloating in response to nifty plugins.
&lt;/p&gt;
&lt;p&gt;
[Rant Off] :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5341 (New wp.getCommentModerationCount XML-RPC method) closed</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 13 Dec 2007 16:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5341#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5341#comment:5/1197561758000000</guid>
      <description>invalid: &lt;p&gt;
Ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5463" title="#5463: enhancement: New XML-RPC method: wp.getCommentCount (closed: fixed)"&gt;#5463&lt;/a&gt; replaces this one.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5463 (New XML-RPC method: wp.getCommentCount) created</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 13 Dec 2007 16:01:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5463</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5463/1197561680000000</guid>
      <description>&lt;p&gt;
This ticket supersedes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5341" title="#5341: enhancement: New wp.getCommentModerationCount XML-RPC method (closed: invalid)"&gt;#5341&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The new wp.getCommentCount method provides the number of comments that have been approved, are awaiting moderation and have been marked as spam.
&lt;/p&gt;
&lt;p&gt;
An optional post_id can be provided that will limit the comment numbers to just that post.
&lt;/p&gt;
&lt;p&gt;
Example call to get comment count for entire blog:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.getCommentCount(blog_id, username, password)
&lt;/pre&gt;&lt;p&gt;
Example call to get comment count for one post:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.getCommentCount(blog_id, username, password, post_id)
&lt;/pre&gt;&lt;p&gt;
Example struct that is returned:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
  "approved" = 1;
  "awaiting_moderation" = 7;
  "spam" = 369;
}
&lt;/pre&gt;&lt;p&gt;
I've contacted the author of the &lt;a class="ext-link" href="http://www.howtogeek.com/howto/the-geek-blog/how-to-geek-software-wordpress-comment-moderation-notifier/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WordPress Comment Moderation Notifier&lt;/a&gt; and he's fine with adjusting his app to match our API.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5216 (Cannot delete Custom Field after adding another Custom Field without ...) updated</title>
      
        <dc:creator>greftek</dc:creator>

      <pubDate>Thu, 13 Dec 2007 15:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5216#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5216#comment:1/1197561247000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I encounter exactly the same bug using Wordpress version 2.2.2.
&lt;/p&gt;
&lt;p&gt;
Deleting the custom field, then storing the post does not result in the expected removal of the custom field from the database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Thu, 13 Dec 2007 11:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:46/1197546764000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:45" title="Comment 45"&gt;sjmurdoch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That sounds like a bad idea to me. The database password is too short to resist an offline brute force/dictionary attack. If we use it in the cookie, anyone could discover the password with a bit of work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It'd more than just the password, And its allready in use, If you use multiple pieces and do an md5 or so of them, then its unlikely an attacker will back-engineer it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-includes/cache.php:
$this-&amp;gt;secret = DB_PASSWORD . DB_USER .
DB_NAME . DB_HOST . ABSPATH;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Thu, 13 Dec 2007 11:44:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:45/1197546297000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:44" title="Comment 44"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If SECRET_KEY is not set to something unique, use the DB connect info in the secret key?  Good enough?  Does that balance paranoia and practicality well enough?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds like a bad idea to me. The database password is too short to resist an offline brute force/dictionary attack. If we use it in the cookie, anyone could discover the password with a bit of work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5460 (WXR importer doesn't like XML files with &lt;/item&gt;&lt;item&gt;) updated</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Thu, 13 Dec 2007 06:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5460#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5460#comment:2/1197526637000000</guid>
      <description>&lt;p&gt;
If you try and import that file into WordPress, only the post at the bottom of the file, &lt;em&gt;Hello World&lt;/em&gt;, is imported. If you then open the &lt;code&gt;.xml&lt;/code&gt; file in an editor, and insert a linebreak between all the &lt;code&gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&lt;/code&gt;s, the other posts will import successfully.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress.xml attached to Ticket #5460</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Thu, 13 Dec 2007 06:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5460/wordpress.xml</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5460/wordpress.xml/1197526493000000</guid>
      <description>&lt;p&gt;
Hand-crafted WXR file to showcase the bug.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5462 (invalid nested category HTML list in admin) updated</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Thu, 13 Dec 2007 05:07:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5462#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5462#comment:1/1197522460000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for your contributions to WordPress.
&lt;/p&gt;
&lt;p&gt;
First, we will apply the patch to 2.4 (trunk), then backport it to 2.3 if we deem it to be important enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>invalid_nested_category_HTML_llist_in_admin.patch attached to Ticket #5462</title>
      
        <dc:creator>082net</dc:creator>

      <pubDate>Thu, 13 Dec 2007 02:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5462/invalid_nested_category_HTML_llist_in_admin.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5462/invalid_nested_category_HTML_llist_in_admin.patch/1197512363000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5462 (invalid nested category HTML list in admin) created</title>
      
        <dc:creator>082net</dc:creator>

      <pubDate>Thu, 13 Dec 2007 02:17:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5462</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5462/1197512277000000</guid>
      <description>&lt;p&gt;
'dropdown_categories' function in wp-admin/includes/template.php returns invalid html list
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;a&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;b&amp;lt;/li&amp;gt;
 &amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;b-1&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;b-2&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
&amp;lt;li&amp;gt;c&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;&lt;p&gt;
It should be
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ul&amp;gt;
 &amp;lt;li&amp;gt;a&amp;lt;/li&amp;gt;
 &amp;lt;li&amp;gt;b
 &amp;lt;ul&amp;gt;
  &amp;lt;li&amp;gt;b-1&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;b-2&amp;lt;/li&amp;gt;
 &amp;lt;/ul&amp;gt;
 &amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;c&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;&lt;p&gt;
We just need to print '&amp;lt;/li&amp;gt;' after child list if a category has children.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function write_nested_categories( $categories ) {
	foreach ( $categories as $category ) {
		echo '&amp;lt;li id="category-', $category['cat_ID'], '"&amp;gt;&amp;lt;label for="in-category-', $category['cat_ID'], '" class="selectit"&amp;gt;&amp;lt;input value="', $category['cat_ID'], '" type="checkbox" name="post_category[]" id="in-category-', $category['cat_ID'], '"', ($category['checked'] ? ' checked="checked"' : "" ), '/&amp;gt; ', wp_specialchars( apply_filters('the_category', $category['cat_name'] )), "&amp;lt;/label&amp;gt;";
		if ( $category['children'] ) {
			echo "&amp;lt;ul&amp;gt;\n";
			write_nested_categories( $category['children'] );
			echo "&amp;lt;/ul&amp;gt;\n";
		}
		echo "&amp;lt;/li&amp;gt;";
	}
}
&lt;/pre&gt;&lt;p&gt;
It displayed well on blog, but while I was trying to make 'AJAX category adder for specific parent category', it matters.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5461 (Add ability to set description for XML-RPC file uploads) created</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 12 Dec 2007 22:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5461</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5461/1197498977000000</guid>
      <description>&lt;p&gt;
It's been suggested that we provide a way to populate the description field for file uploads.  This is something that we could add to the wp.uploadFile method.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5313 (no user checking if the "post_type" is set to page) closed</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Wed, 12 Dec 2007 17:30:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5313#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5313#comment:7/1197480642000000</guid>
      <description>invalid: &lt;p&gt;
Closing as invalid, because this bug does not have enough information to be resolved. Please open a new ticket with causal details, if you experience a similar issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5313 (no user checking if the "post_type" is set to page) updated</title>
      
        <dc:creator>cbdilger</dc:creator>

      <pubDate>Wed, 12 Dec 2007 14:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5313#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5313#comment:6/1197470794000000</guid>
      <description>&lt;p&gt;
I'm sorry, that wasn't clear. What I meant: since I wrote the post Nov 26 and didn't discover the injected iframe until Dec 10, the access to admin-ajax.php could have been involved. Thanks for letting me know it probably wasn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5460 (WXR importer doesn't like XML files with &lt;/item&gt;&lt;item&gt;) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 12 Dec 2007 13:56:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5460#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5460#comment:1/1197467802000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please attach an example of this file that WordPress cannot parse.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5460 (WXR importer doesn't like XML files with &lt;/item&gt;&lt;item&gt;) created</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Wed, 12 Dec 2007 13:30:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5460</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5460/1197466235000000</guid>
      <description>&lt;p&gt;
I'm trying to import a WXR file that contains the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;
&lt;/pre&gt;&lt;p&gt;
...in between different blog entries. However, WordPress keels over, and doesn't import the file properly.
&lt;/p&gt;
&lt;p&gt;
Getting a text editor and manually find-and-replace'ing all occurrences of &lt;code&gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&lt;/code&gt; with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;/item&amp;gt;
&amp;lt;item&amp;gt;
&lt;/pre&gt;&lt;p&gt;
...works.
&lt;/p&gt;
&lt;p&gt;
The main problem is that WordPress doesn't actually use an XML parser to import stuff. However, I set the ticket severity to "minor", as WordPress itself doesn't generate WXR files that contain &lt;code&gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&lt;/code&gt; â€” it's only when using a particular third-party generator that this happens. However, it's WordPress' fault that it's failing, as there should really be no difference between the above two examples.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>5446.patch attached to Ticket #5446</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Wed, 12 Dec 2007 12:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5446/5446.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5446/5446.patch/1197464022000000</guid>
      <description>&lt;p&gt;
New patch, translatable and escaped text
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5438 (Upgrade inconsistently directs user) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Wed, 12 Dec 2007 12:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5438#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5438#comment:6/1197462220000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>5438.patch attached to Ticket #5438</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Wed, 12 Dec 2007 12:23:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5438/5438.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5438/5438.patch/1197462183000000</guid>
      <description>&lt;p&gt;
Consistent direction
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5313 (no user checking if the "post_type" is set to page) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Wed, 12 Dec 2007 12:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5313#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5313#comment:5/1197461486000000</guid>
      <description>&lt;p&gt;
I'm not sure an access within three days is too useful.
It appears what you're seeing is someone trying to exploit the vulnerability fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4322" title="#4322: defect (bug): Sql injection blind fishing exploit (closed: fixed)"&gt;#4322&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4686 (WXR need a version) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 12 Dec 2007 12:06:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4686#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4686#comment:14/1197461162000000</guid>
      <description>&lt;p&gt;
Hmm &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5454" title="#5454: enhancement: Additional metadata in wxr export format (closed: fixed)"&gt;#5454&lt;/a&gt; gives it a version number but does it have a spec that says what that means yet?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6377]: Query page attachments from page requests so that they can both use ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 11:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6377/1197459955032372</guid>
      <description>&lt;p&gt;
Query page attachments from page requests so that they can both use the same set of rewrite rules. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3614" title="#3614: defect (bug): Scaling issue with hundreds of pages (closed: fixed)"&gt;#3614&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 11:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:33/1197459955000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6377" title="Query page attachments from page requests so that they can both use ..."&gt;[6377]&lt;/a&gt;) Query page attachments from page requests so that they can both use the same set of rewrite rules. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3614" title="#3614: defect (bug): Scaling issue with hundreds of pages (closed: fixed)"&gt;#3614&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Wed, 12 Dec 2007 11:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:8/1197459539000000</guid>
      <description>&lt;p&gt;
Problem: set_charset() never exists in WordPress as it's only available through the improved mysqli interface not mysql. Even so; won't your suggestion still result in the vulnerability being present for people not using the later versions of PHP and MySQL?
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Further notes that may help... &lt;code&gt;(mb_detect_encoding($string)!="ASCII")&lt;/code&gt; will detect multibyte strings, &lt;code&gt;($this-&amp;gt;charset != mysql_client_encoding($this-&amp;gt;dbh))&lt;/code&gt; detects the mismatch between WordPress and db session's character sets.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 10:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:7/1197456745000000</guid>
      <description>&lt;p&gt;
We tried mysql_real_escape_string() some time ago and it caused lots of problems.  That was before mysql_set_charset() came along, however. I think if mysql_set_charset() is available and DB_CHARSET is set, we can safely use mysql_real_escape_string().
&lt;/p&gt;
&lt;p&gt;
Let's try something like this. In wpdb::&lt;span class="underline"&gt;construct(), call mysql_set_charset(), if it exists, instead of SET NAMES.  Flag the fact that we've called mysql_set_charset().  Check this flag in wpdb::escape() and call mysql_real_escape_string() if the charset was set with mysql_set_charset().  If the charset was set with SET NAMES or not set at all, use addslashes().
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>autosave-array.diff attached to Ticket #5459</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Wed, 12 Dec 2007 09:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5459/autosave-array.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5459/autosave-array.diff/1197452992000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5459 (autosave creates new draft on each iteration) created</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Wed, 12 Dec 2007 09:49:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5459/1197452970000000</guid>
      <description>&lt;p&gt;
Expected behaviour: on each auto-save the current post is saved
&lt;/p&gt;
&lt;p&gt;
Current behaviour for some users:
&lt;/p&gt;
&lt;p&gt;
For some users (I can't reproduce) every time a draft is auto-saved it fails with errors like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: Invalid argument supplied for foreach() in .../blog/wp-admin/admin-functions.php on line 30
Warning: array_search() [function.array-search]: Wrong datatype for second argument in .../blog/wp-admin/admin-functions.php on line 117
Warning: Illegal string offset: -1197443547 in .../blog/wp-admin/admin-functions.php on line 124
&lt;/pre&gt;&lt;p&gt;
As a result on each auto-save a new draft is created.
&lt;/p&gt;
&lt;p&gt;
Cause: somehow the &lt;code&gt;autosave_draft_ids&lt;/code&gt; options is both true and not an array and the default value isn't used:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !$draft_ids = get_user_option( 'autosave_draft_ids' ) )
    $draft_ids = array();
&lt;/pre&gt;&lt;p&gt;
Solution: if &lt;code&gt;$draft_ids&lt;/code&gt; isn't tested in boolean, but in array context everything is fine:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !is_array( $draft_ids = get_user_option( 'autosave_draft_ids' ) ) )
    $draft_ids = array();
&lt;/pre&gt;&lt;p&gt;
Patch-attached.
&lt;/p&gt;
&lt;p&gt;
Thanks to Krasimir Dobrev for experiencing and reporting this one.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>skydrak</dc:creator>

      <pubDate>Wed, 12 Dec 2007 09:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:32/1197450117000000</guid>
      <description>&lt;p&gt;
Well, i have tested it... Works fine, permalinks aren't stored in the database now. But same problem as before: i a will save a static page my server will crash, so i have to rename the index.php everytime if i want to save a static page. That sucks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Wed, 12 Dec 2007 07:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:31/1197443062000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3614#comment:30" title="Comment 30"&gt;skydrak&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I use the latest version, 2.3.1.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, You cant just use the latest post.php file, theres too many changes in it which is incompatible with the rest of the 2.3.1 source code.
&lt;/p&gt;
&lt;p&gt;
You'll have to apply the changes in this changeset: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6351" title="Don't save page and attachemtn uris to page_uris and ..."&gt;[6351]&lt;/a&gt; to a stock 2.3.1 file if you want to use them, and even then, i'm not sure if that'll work due to oher file changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>skydrak</dc:creator>

      <pubDate>Wed, 12 Dec 2007 06:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:30/1197442660000000</guid>
      <description>&lt;p&gt;
I use the latest version, 2.3.1.
&lt;/p&gt;
&lt;p&gt;
Tested it again with removing the code by hand in the post.php, but same problem as before: Crashing the server.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4686 (WXR need a version) closed</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4686#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4686#comment:13/1197438264000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5454" title="#5454: enhancement: Additional metadata in wxr export format (closed: fixed)"&gt;#5454&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4393 (phpDoc effort for wp-includes/author-template.php) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4393#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4393#comment:2/1197436512000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6376]: Defer term counting during import. Props tellyworth. fixes #5377</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6376/1197436440326323</guid>
      <description>&lt;p&gt;
Defer term counting during import. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5377" title="#5377: enhancement: Defer term counts during multiple inserts (closed: fixed)"&gt;#5377&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5377 (Defer term counts during multiple inserts) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5377#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5377#comment:4/1197436440000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6376" title="Defer term counting during import. Props tellyworth. fixes #5377"&gt;[6376]&lt;/a&gt;) Defer term counting during import. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5377" title="#5377: enhancement: Defer term counts during multiple inserts (closed: fixed)"&gt;#5377&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6375]: Additional metadata for wxr export from tellyworth. fixes #5454</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6375/1197436284431756</guid>
      <description>&lt;p&gt;
Additional metadata for wxr export from tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5454" title="#5454: enhancement: Additional metadata in wxr export format (closed: fixed)"&gt;#5454&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5454 (Additional metadata in wxr export format) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5454#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5454#comment:3/1197436284000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6375" title="Additional metadata for wxr export from tellyworth. fixes #5454"&gt;[6375]&lt;/a&gt;) Additional metadata for wxr export from tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5454" title="#5454: enhancement: Additional metadata in wxr export format (closed: fixed)"&gt;#5454&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5456 (wxr import: post_parent is handled incorrectly in some circumstances) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5456#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5456#comment:1/1197436129000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6374" title="Correctly handle post_parent during import. Props tellyworth. fixes #5456"&gt;[6374]&lt;/a&gt;) Correctly handle post_parent during import. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5456" title="#5456: defect (bug): wxr import: post_parent is handled incorrectly in some circumstances (closed: fixed)"&gt;#5456&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6374]: Correctly handle post_parent during import. Props tellyworth. fixes #5456</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 12 Dec 2007 05:08:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6374/1197436128218565</guid>
      <description>&lt;p&gt;
Correctly handle post_parent during import. Props tellyworth. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5456" title="#5456: defect (bug): wxr import: post_parent is handled incorrectly in some circumstances (closed: fixed)"&gt;#5456&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5458 (making get_pages and wp_list_pages faster) updated</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Wed, 12 Dec 2007 03:15:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5458#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5458#comment:1/1197429322000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5458 (making get_pages and wp_list_pages faster) created</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Wed, 12 Dec 2007 03:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5458/1197428824000000</guid>
      <description>&lt;p&gt;
When there are a lot of pages, these functions slow down quite a bit.
Should improve on the algorithm so that they speed up. (using logic similar to 5303).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>5303_pages.diff attached to Ticket #5303</title>
      
        <dc:creator>hailin</dc:creator>

      <pubDate>Wed, 12 Dec 2007 02:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5303/5303_pages.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5303/5303_pages.diff/1197427241000000</guid>
      <description>&lt;p&gt;
patch file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4472 (Movable Type importer: MT keywords to WP tags) updated</title>
      
        <dc:creator>shacker</dc:creator>

      <pubDate>Wed, 12 Dec 2007 01:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4472#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4472#comment:4/1197424786000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This 12/12/07 diff is a totally different approach from the earlier one. This one converts  MT keywords directly to WP tags during import. Yes, I noted above that there's no guarantee that people using MT keywords were using them for tagging, but I do think that's the majority case. Now  using wp_add_post_tags() rather  than a direct query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>mt.diff attached to Ticket #4472</title>
      
        <dc:creator>shacker</dc:creator>

      <pubDate>Wed, 12 Dec 2007 01:57:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4472/mt.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4472/mt.diff/1197424676000000</guid>
      <description>&lt;p&gt;
Modifies MT importer to convert keywords to WP  tags.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item>
   </channel>
</rss>