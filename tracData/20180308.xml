<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:53:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:5/1520553185995683</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43496#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the admin doesn't use XHTML I'm not sure why we have to add a value to boolean attributes. The rule should probably be changed to exclude boolean attributes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, thanks, @ocean90 üëç , can you update the handbook to reflect this in the most appropriate way you think possible pelase üòÉ
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42647 (Underline links in the plugin description for installed plugins) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42647#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42647#comment:12/1520551149389967</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42810" title="Accessibility: Underline the links in the Plugins descriptions and ..."&gt;42810&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Underline the links in the Plugins descriptions and update notices.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Links within blocks and lines of text should always be underlined.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Travel_girl, chetan200891, Shital Patel.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42647" title="#42647: defect (bug): Underline links in the plugin description for installed plugins (closed: fixed)"&gt;#42647&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42810]: Accessibility: Underline the links in the Plugins descriptions and ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:19:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42810</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42810/1520551148271677</guid>
      <description>&lt;p&gt;
Accessibility: Underline the links in the Plugins descriptions and update notices.
&lt;/p&gt;
&lt;p&gt;
Links within blocks and lines of text should always be underlined.
&lt;/p&gt;
&lt;p&gt;
Props Travel_girl, chetan200891, Shital Patel.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42647" title="#42647: defect (bug): Underline links in the plugin description for installed plugins (closed: fixed)"&gt;#42647&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504#comment:3/1520551116003257</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42809" title="Docs: Improve documentation for meta capability filters.
Remove ..."&gt;42809&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for meta capability filters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Remove self-references, correct parameter names and descriptions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props milana_cap, ocean90, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43504" title="#43504: defect (bug): Use correct variable name in filter docs for the `$object_id` ... (closed: fixed)"&gt;#43504&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42809]: Docs: Improve documentation for meta capability filters.  Remove ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42809/1520551115510742</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for meta capability filters.
&lt;/p&gt;
&lt;p&gt;
Remove self-references, correct parameter names and descriptions.
&lt;/p&gt;
&lt;p&gt;
Props milana_cap, ocean90, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43504" title="#43504: defect (bug): Use correct variable name in filter docs for the `$object_id` ... (closed: fixed)"&gt;#43504&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504#comment:2/1520551103170766</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42647 (Underline links in the plugin description for installed plugins) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42647#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42647#comment:11/1520550901331771</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42647/42647.3.diff" title="Attachment '42647.3.diff' in Ticket #42647"&gt;42647.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42647/42647.3.diff" title="Download"&gt;‚Äã&lt;/a&gt; refreshes the patch. As mentioned in the original ticket description, better to not touch the links in the line below the plugins description because they're separated with "|" and the context helps clarifying they're links.
&lt;/p&gt;
&lt;p&gt;
See in the screenshot below an example of the links that are going to be underlined (plus the one in the Updates screen):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/SpUzCHRyBU.png"&gt;&lt;img src="https://cldup.com/SpUzCHRyBU.png" alt="https://cldup.com/SpUzCHRyBU.png" crossorigin="anonymous" title="https://cldup.com/SpUzCHRyBU.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42647.3.diff attached to Ticket #42647</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 23:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42647/42647.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42647/42647.3.diff/1520550709188038</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43507 (Update hook docs in wp-admin/edit-tag-form.php to use `WP_Term` ...) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43507</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43507/1520549944739032</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp-admin/edit-tag-form.php&lt;/code&gt; still uses &lt;code&gt;object&lt;/code&gt; for all &lt;code&gt;$tag&lt;/code&gt; parameters although we now have a specific &lt;code&gt;WP_Term&lt;/code&gt; object, see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34997" title="Introduce `WP_Term`.
`get_term()` now returns a `WP_Term` object, ..."&gt;[34997]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/term.php?marks=23,67#L21"&gt;https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-admin/term.php?marks=23,67#L21&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43505 (Display of html encoded text in dashboard.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43505#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43505#comment:2/1520549865693144</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43506 (Ensure a network's `notoptions` cache is an array to reduce lookup overhead) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:29:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43506#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43506#comment:1/1520548185851203</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31147" title="#31147: defect (bug): make sure $notoptions is an array before assigning array key value (closed: fixed)"&gt;#31147&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43506 (Ensure a network's `notoptions` cache is an array to reduce lookup overhead) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:29:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43506</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43506/1520548151990784</guid>
      <description>&lt;p&gt;
In every call to &lt;code&gt;get_network_option()&lt;/code&gt; the global &lt;code&gt;{$network_id}:notoptions&lt;/code&gt; cache is requested. However the function only sets a value for that cache if both the individual network option's cache lookup and its database lookup failed failed, which in most cases will (and should) not be the case.
&lt;/p&gt;
&lt;p&gt;
This isn't a significant problem, but when using an external object cache, this causes that cache to be called every time &lt;code&gt;get_network_option()&lt;/code&gt; is called. If instead &lt;code&gt;get_network_option()&lt;/code&gt; ensured an empty array is set on a cache miss, that would only happen once per request, as the local cache would afterwards have that value stored.
&lt;/p&gt;
&lt;p&gt;
It's admittedly a very minor performance improvement, but I think it's worth it, as there should be no downside to it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42158 (Twenty Seventeen: RSS Social Icon Missing) updated</title>
      
        <dc:creator>jasonlcrane</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42158#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42158#comment:6/1520547711421723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42598 (Twenty Seventeen: Sticky header offset issue) updated</title>
      
        <dc:creator>jasonlcrane</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42598#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42598#comment:5/1520547646533735</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43505 (Display of html encoded text in dashboard.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:04:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43505#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43505#comment:1/1520546646629234</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43505.png attached to Ticket #43505</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 22:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43505/43505.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43505/43505.png/1520546537565893</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43505 (Display of html encoded text in dashboard.) created</title>
      
        <dc:creator>anonym999999</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43505</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43505/1520546396927480</guid>
      <description>&lt;p&gt;
I have discussed the issue in this thread &lt;a class="ext-link" href="https://make.wordpress.org/polyglots/2018/02/26/hello-18/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://make.wordpress.org/polyglots/2018/02/26/hello-18/&lt;/a&gt;, I report here the issue of the display of the text in UI, not the editorial choice of the translation itself.
&lt;/p&gt;
&lt;p&gt;
In fr_FR and fr_CA, there where changes done (last year?) to accomodate french ponctuation typographic rules but also, I guess, make sure the text doesnt fall on two line inadvertantly (ex. "text !", so a non-breaking space is inserted instead of a space).
&lt;/p&gt;
&lt;p&gt;
This non-breaking space is inserted as html encoded entity and it looks like it is displayed as is, without decoding like it is visible in this exemple screenshot : &lt;a class="ext-link" href="https://imgur.com/a/iVy9h"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://imgur.com/a/iVy9h&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:6/1520545451230883</guid>
      <description>&lt;p&gt;
So i upgraded to 7.2.3 and the fatal error disappeared
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;&lt;em&gt;I know what is following occurs on a plugin and is not directly related to WP but may be it can help.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
But i have another error :
&lt;/p&gt;
&lt;p&gt;
[php7:error] [pid 2052:tid 976] [client 127.0.0.1:50008] PHP Fatal error:  Uncaught Error: [] operator not supported for strings in (mypluginfile:line)
Stack trace:
# 0 \wordpress\wp-includes\class-wp-hook.php(286) : MP_AdminPage::print_styles(&lt;em&gt;)
# 1 \wordpress\wp-includes\class-wp-hook.php(310) : WP_Hook-&amp;gt;apply_filters(NULL, Array)
# 2 \wordpress\wp-includes\plugin.php(465) : WP_Hook-&amp;gt;do_action(Array)
# 3 \wordpress\wp-admin\admin-header.php(113) : do_action('admin_print_sty...')
# 4 \wordpress\wp-admin\admin.php(230) : require_once('D:\webserver\Do...')
# 5 {main}  thrown in (mypluginfile) on line (line), referer: &lt;a class="ext-link" href="http://127.0.0.1/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;http://127.0.0.1/wordpress/wp-admin/&lt;/a&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
My analysis is this :
&lt;/p&gt;
&lt;p&gt;
from PHP 5 to PHP 7, PHP becomes more strict on variable types. A string remains a string, an array remains an array ...
&lt;/p&gt;
&lt;p&gt;
The issue is that do_action() uses apply_filters(), which initialize by default an argument ($args) =&amp;gt; var_dump =&amp;gt; string(0) ""
&lt;/p&gt;
&lt;p&gt;
do_action() should not pass &lt;strong&gt;any&lt;/strong&gt; argument if not required.
&lt;/p&gt;
&lt;p&gt;
In a plugin, in a parent class, i am using this line :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_action('admin_print_styles',         array('MP_AdminPage', 'print_styles'));    /* xref.mailpress.org/nav.html?mp-includes/class/MP_adminpage_.class.php.source.html#l16 */
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
i define the print_styles() function  as
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public static function print_styles($styles = array())                          /* xref.mailpress.org/nav.html?mp-includes/class/MP_adminpage_.class.php.source.html#l76 */
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and (for code consistancy) the same print_styles() function in the sub class as
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;public static function print_styles($styles = array())  {                   /*  xref.mailpress.org/nav.html?mp-admin/mails.php.source.html#l60 */
/* some code here */
parent::print_styles($styles);
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43191 (Add aria-current to output of Walker_Nav_Menu for front-end navs) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43191#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43191#comment:12/1520544629899657</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42808" title="Accessibility: Themes: use `aria-current` for the `Walker_Nav_Menu` ..."&gt;42808&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Themes: use &lt;code&gt;aria-current&lt;/code&gt; for the &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; current link.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;aria-current&lt;/code&gt; attribute is a simple, effective way to help assistive&lt;br /&gt;
technologies users orientate themselves within a list of items. Continues the &lt;br /&gt;
introduction in core of &lt;code&gt;aria-current&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42440" title="Accessibility: use `aria-current` for the paginated post links output ..."&gt;[42440]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41683" title="Accessibility: List Tables: use `aria-current` for the views current ..."&gt;[41683]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41359" title="Administration: Admin menu: Use `aria-current` for the current active ..."&gt;[41359]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41371" title="Allow usage of `aria-current` in `paginate_links()`.
The ..."&gt;[41371]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props williampatton, chetan200891, sami.keijonen.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43191" title="#43191: enhancement: Add aria-current to output of Walker_Nav_Menu for front-end navs (reopened)"&gt;#43191&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42808]: Accessibility: Themes: use `aria-current` for the `Walker_Nav_Menu` ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 21:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42808/1520544629434797</guid>
      <description>&lt;p&gt;
Accessibility: Themes: use &lt;code&gt;aria-current&lt;/code&gt; for the &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; current link.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;aria-current&lt;/code&gt; attribute is a simple, effective way to help assistive
technologies users orientate themselves within a list of items. Continues the
introduction in core of &lt;code&gt;aria-current&lt;/code&gt; after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42440" title="Accessibility: use `aria-current` for the paginated post links output ..."&gt;[42440]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41683" title="Accessibility: List Tables: use `aria-current` for the views current ..."&gt;[41683]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41359" title="Administration: Admin menu: Use `aria-current` for the current active ..."&gt;[41359]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41371" title="Allow usage of `aria-current` in `paginate_links()`.
The ..."&gt;[41371]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props williampatton, chetan200891, sami.keijonen.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43191" title="#43191: enhancement: Add aria-current to output of Walker_Nav_Menu for front-end navs (reopened)"&gt;#43191&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43253 (Insert Link Dialog captures shift+arrow and changes selected item ...) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43253#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43253#comment:4/1520542664821367</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42807" title="Accessibility: Insert Link modal: Improve keyboard interaction.
 ..."&gt;42807&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Insert Link modal: Improve keyboard interaction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Avoids to change the selected link when using the Shift and Up/Down arrow keys&lt;br /&gt;
to select text in the form fields.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43253" title="#43253: defect (bug): Insert Link Dialog captures shift+arrow and changes selected item ... (assigned)"&gt;#43253&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42807]: Accessibility: Insert Link modal: Improve keyboard interaction.  ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42807/1520542664329074</guid>
      <description>&lt;p&gt;
Accessibility: Insert Link modal: Improve keyboard interaction.
&lt;/p&gt;
&lt;p&gt;
Avoids to change the selected link when using the Shift and Up/Down arrow keys
to select text in the form fields.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43253" title="#43253: defect (bug): Insert Link Dialog captures shift+arrow and changes selected item ... (assigned)"&gt;#43253&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43253 (Insert Link Dialog captures shift+arrow and changes selected item ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:49:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43253#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43253#comment:3/1520542181668524</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43253/43253.diff" title="Attachment '43253.diff' in Ticket #43253"&gt;43253.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43253/43253.diff" title="Download"&gt;‚Äã&lt;/a&gt; prevents to trigger links selection when the ShIft key is used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43253.diff attached to Ticket #43253</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:47:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43253/43253.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43253/43253.diff/1520542071280289</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40510 (REST API: Post Revisions: Adding support for pagination) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40510#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40510#comment:4/1520540506232765</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1520540504000215"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:20:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:24/1520540435387563</guid>
      <description>&lt;p&gt;
Related: After today's REST API chat, I took a stab at introducing more flexibility regarding query arguments for collection requests in the revisions controller (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40510" title="#40510: enhancement: REST API: Post Revisions: Adding support for pagination (closed: fixed)"&gt;#40510&lt;/a&gt;, which was a fitting existing ticket).
&lt;/p&gt;
&lt;p&gt;
This doesn't directly benefit the autosave problem, but helps with another use-case of Gutenberg. Regarding the discussion taking place here, it is mainly something to consider regarding the implementation of an &lt;code&gt;/autosaves&lt;/code&gt; controller that would extend the &lt;code&gt;/revisions&lt;/code&gt; controller. Also, reviews/feedback always welcome!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38368 (Add front-end revision browsing) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:14:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38368#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38368#comment:11/1520540067436904</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40510" title="#40510: enhancement: REST API: Post Revisions: Adding support for pagination (closed: fixed)"&gt;#40510&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40510 (REST API: Post Revisions: Adding support for pagination) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:12:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40510#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40510#comment:3/1520539936701216</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per today's REST API chat, supporting pagination and generally allowing a bit more flexibility with the revisions controller would also come in handy for Gutenberg.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40510/40510.diff" title="Attachment '40510.diff' in Ticket #40510"&gt;40510.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40510/40510.diff" title="Download"&gt;‚Äã&lt;/a&gt; adds support for the following query parameters for revisions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;exclude&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;include&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;offset&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;order&lt;/code&gt; (default 'desc')
&lt;/li&gt;&lt;li&gt;&lt;code&gt;orderby&lt;/code&gt; (default 'date')
&lt;/li&gt;&lt;li&gt;&lt;code&gt;page&lt;/code&gt; (default 1)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;per_page&lt;/code&gt; (default not provided, falling back to using -1 with &lt;code&gt;WP_Query&lt;/code&gt;, meaning no limit, for BC with current behavior)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;search&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The implementation aligns closer with how the posts controller works. &lt;code&gt;WP_Query&lt;/code&gt; is directly used instead of calling &lt;code&gt;wp_get_post_revisions()&lt;/code&gt;, to be able to run a &lt;code&gt;SELECT FOUND_ROWS()&lt;/code&gt; query and get the result. Since the function is only a simple wrapper for a query object anyway which sets default arguments, this can easily be handled in the controller itself.
&lt;/p&gt;
&lt;p&gt;
The revisions controller will now return &lt;code&gt;X-WP-Total&lt;/code&gt; and &lt;code&gt;X-WP-TotalPages&lt;/code&gt; headers and pagination link headers (if applicable) for collection requests, just how the posts controller does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43123 (Default captions should NOT use max-width) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:02:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43123#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43123#comment:8/1520539367243104</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520539365000409"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40510.diff attached to Ticket #40510</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 20:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40510/40510.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40510/40510.diff/1520539300356844</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:23/1520539172877482</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:22" title="Comment 22"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
can you describe the use case for this? "Autosaves controller to be able to handle updating the post too (without creating another revision)."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's already in the patch, just better to do &lt;code&gt;define( 'DOING_AUTOSAVE', true );&lt;/code&gt; instead of removing and then re-adding the action &lt;code&gt;remove_action( 'post_updated', 'wp_save_post_revision' );&lt;/code&gt;. Plugins may be "watching for" the constant too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43216 (IXR Server Warning) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43216#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43216#comment:6/1520538926201849</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42806" title="XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ..."&gt;42806&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility to avoid PHP Warnings.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42652" title="XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ..."&gt;[42652]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43216" title="#43216: defect (bug): IXR Server Warning (closed: fixed)"&gt;#43216&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42806]: XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42806</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42806/1520538925727832</guid>
      <description>&lt;p&gt;
XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility to avoid PHP Warnings.
&lt;/p&gt;
&lt;p&gt;
Props dd32.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42652" title="XML-RPC: Add default values to IXR_Message for PHP 7.2 compatibility ..."&gt;[42652]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43216" title="#43216: defect (bug): IXR Server Warning (closed: fixed)"&gt;#43216&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:22/1520538773834352</guid>
      <description>&lt;p&gt;
@azaozz  - Sure I'll work on an update of the patch, can you describe the use case for this? "Autosaves controller to be able to handle updating the post too (without creating another revision)."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43255 (WP_Image_Editor::make_image leaves an output buffer open on failure) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43255#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43255#comment:11/1520538682224520</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538680000410"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:18/1520538540052322</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538537000518"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:3/1520538476544592</guid>
      <description>&lt;p&gt;
So thinking about solutions to this. Some notes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Plugins need a way (hook?) to delete their own data for a user as well as core.
&lt;/li&gt;&lt;li&gt;Registered users are not the only people who need to delete data; visitors have the same rights, so this should be done by email.
&lt;/li&gt;&lt;li&gt;Some data needs to be preserved if there is a business need to hold it. E.g. Holding order data for tax purposes.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
With that in mind, the admin needs to be able to control what does and does not get deleted when dealing with a request. In order do to that, plugins and core need to expose what personal data they hold.
&lt;/p&gt;
&lt;p&gt;
My idea is that we:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Agree on a schema which plugins may register to describe the personal data they hold for a user.
&lt;/li&gt;&lt;li&gt;Core loads in these schemas and presents a table to the admin user which shows what data is available to delete, and offers a checkbox/select to:
&lt;ul&gt;&lt;li&gt;Delete/remove
&lt;/li&gt;&lt;li&gt;Anonymize
&lt;/li&gt;&lt;li&gt;Keep
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Admin selections are then passed to a hook for the delete event and each plugin takes care of it's data based on those preferences.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Anything not exposed in this way would be up to the plugin to handle.
&lt;/p&gt;
&lt;p&gt;
Would a tool like I described about be suitable? Am I missing anything?
&lt;/p&gt;
&lt;p&gt;
cc @allendav
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42713 (Users list does not display name if Last Name empty) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42713#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42713#comment:12/1520538438329854</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42805" title="Users: Display partial names in the user listing tables.
This allows ..."&gt;42805&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: Display partial names in the user listing tables. &lt;br /&gt;
This allows showing a name when only the first or last name is provided.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props shital-patel, antipole.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42256" title="Users: Display partial names in the user listing tables.
This allows ..."&gt;[42256]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42257" title="Users: After [42256], remove unnecessary double quotes around ..."&gt;[42257]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42713" title="#42713: defect (bug): Users list does not display name if Last Name empty (closed: fixed)"&gt;#42713&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42805]: Users: Display partial names in the user listing tables.  This allows ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42805</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42805/1520538437861313</guid>
      <description>&lt;p&gt;
Users: Display partial names in the user listing tables.
This allows showing a name when only the first or last name is provided.
&lt;/p&gt;
&lt;p&gt;
Props shital-patel, antipole.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42256" title="Users: Display partial names in the user listing tables.
This allows ..."&gt;[42256]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42257" title="Users: After [42256], remove unnecessary double quotes around ..."&gt;[42257]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42713" title="#42713: defect (bug): Users list does not display name if Last Name empty (closed: fixed)"&gt;#42713&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:21/1520538399838605</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The /autosaves endpoint would be used on the client to "trigger" an autosave.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Currently autosaves would either update or create a revision, or update the actual post if it is a draft. We need the Autosaves controller to be able to handle updating the post too (without creating another revision).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally the server should automatically create a revision if you have made significant changes. this way, if you typed a 10 thousand word document without saving, you would have revisions along the way not just a single autosave.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. This is not a new idea, been around for some years. Not implemented till now because of "revisions use too much resources" concerns. Lately we are using posts (CPTs) for whatnot, lets add it, would be a good user facing enhancement :)
&lt;/p&gt;
&lt;p&gt;
The only thing I'm not sure about is how to detect when significant changes have been made in the incoming autosave. A simple strlen() might work, but... not that good. The other option is to make a diff with the latest revision and count the changes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Currently published posts only get a revision when they are updated, it would be great if published posts captured revisions, the previous item would solve this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it will. Also don't see a problem for the client to save a new revision whenever. There is a revisions controller for that :)
&lt;/p&gt;
&lt;p&gt;
@adamsilverstein could you update your patch as per the above :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42968 (Media: Grid View: new upload, file is in the wrong position in the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42968#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42968#comment:25/1520538328761619</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538327000011"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:9/1520538250932194</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42804" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;42804&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42801" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;[42801]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42804]: Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:44:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42804</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42804/1520538250450618</guid>
      <description>&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42801" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;[42801]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42724 (Options Media page hides breaks on desktop) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42724#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42724#comment:22/1520538099905412</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1520538098000026"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43307 (Error wp-admin &gt; Includes &gt; theme.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43307#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43307#comment:5/1520538090324597</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42803" title="Customize: Correct closing tags in ..."&gt;42803&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Correct closing tags in &lt;code&gt;customize_themes_print_templates()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnpgreen, nandorsky.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42711" title="Customize: Correct closing tags in ..."&gt;[42711]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43307" title="#43307: defect (bug): Error wp-admin &amp;gt; Includes &amp;gt; theme.php (closed: fixed)"&gt;#43307&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42803]: Customize: Correct closing tags in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:41:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42803</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42803/1520538089831789</guid>
      <description>&lt;p&gt;
Customize: Correct closing tags in &lt;code&gt;customize_themes_print_templates()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props johnpgreen, nandorsky.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42711" title="Customize: Correct closing tags in ..."&gt;[42711]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43307" title="#43307: defect (bug): Error wp-admin &amp;gt; Includes &amp;gt; theme.php (closed: fixed)"&gt;#43307&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43190 (Update prefixed CSS properties in about.css) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43190#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43190#comment:6/1520538001912836</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42802" title="Build/Test Tools: Update prefixed CSS properties in `about.css`.
 ..."&gt;42802&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Update prefixed CSS properties in &lt;code&gt;about.css&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Firefox 52+ supports unprefixed &lt;code&gt;column-count&lt;/code&gt; and &lt;code&gt;column-gap&lt;/code&gt; properties.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props netweb, afercia.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42687" title="Build/Test Tools: Update prefixed CSS properties in `about.css`.
 ..."&gt;[42687]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43190" title="#43190: defect (bug): Update prefixed CSS properties in about.css (closed: fixed)"&gt;#43190&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42802]: Build/Test Tools: Update prefixed CSS properties in `about.css`.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42802</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42802/1520538001262598</guid>
      <description>&lt;p&gt;
Build/Test Tools: Update prefixed CSS properties in &lt;code&gt;about.css&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Firefox 52+ supports unprefixed &lt;code&gt;column-count&lt;/code&gt; and &lt;code&gt;column-gap&lt;/code&gt; properties.
&lt;/p&gt;
&lt;p&gt;
Props netweb, afercia.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42687" title="Build/Test Tools: Update prefixed CSS properties in `about.css`.
 ..."&gt;[42687]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43190" title="#43190: defect (bug): Update prefixed CSS properties in about.css (closed: fixed)"&gt;#43190&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:8/1520537583375968</guid>
      <description>&lt;p&gt;
Reopening for 4.9.5 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:7/1520537519899437</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42801" title="Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ..."&gt;42801&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42801]: Filesystem API: Avoid an infinite loop in `wp_mkdir_p()` when trying ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42801</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42801/1520537519420531</guid>
      <description>&lt;p&gt;
Filesystem API: Avoid an infinite loop in &lt;code&gt;wp_mkdir_p()&lt;/code&gt; when trying to determine the parent folder with &lt;code&gt;open_basedir&lt;/code&gt; restriction in effect.
&lt;/p&gt;
&lt;p&gt;
Props soulseekah, 1265578519-1.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43417" title="#43417: defect (bug): Infinite loop in wp_mkdir_p with open_basedir restrictions (closed: fixed)"&gt;#43417&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:6/1520536806320381</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25047" title="Make use of the recursive option in mkdir() in wp_mkdir_p(). Avoids a ..."&gt;[25047]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:09:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:20/1520536146431644</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:19" title="Comment 19"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My suggestion is to use a new route &lt;code&gt;/autosaves&lt;/code&gt; extending the revisions controller.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, this was my original idea in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/autosave-controller.diff" title="Attachment 'autosave-controller.diff' in Ticket #43316"&gt;autosave-controller.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/autosave-controller.diff" title="Download"&gt;‚Äã&lt;/a&gt; and &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/4156"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/4156&lt;/a&gt;. not much has to change since autosaves are so close to revisions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Letting the client decide whether to actually store the autosave or not is not recommend imho, because:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The client does decide sometimes when to save an autosave verses a revision because these are functionally very different:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;An autosave is created automatically by the client on a timed interval, whenever the post has changed from the last autosave. Autosaves protect against content loss if the browser crashes for example. one autosave is created per user, so each user has a backup of their editing session at all times.
&lt;/li&gt;&lt;li&gt;Revisions are created when a draft post is saved, a published post is updated. This is the result of direct user action - clicking a button, and not automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Ideally the server should automatically create a revision if you have made significant changes. this way, if you typed a 10 thousand word document without saving, you would have revisions along the way not just a single autosave.
&lt;/li&gt;&lt;li&gt;Currently published posts only get a revision when they are updated, it would be great if published posts captured revisions, the previous item would solve this.
&lt;/li&gt;&lt;li&gt;Autosaves are used for previews. When previewing, an autosave is created of the current editor state, then that 'post' is previewed on the front end.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Thu, 08 Mar 2018 19:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:5/1520535608848636</guid>
      <description>&lt;p&gt;
I'm against a default privacy policy. The admin should write it. But presenting it along with Sample Page maybe is saying "Hey, this is important. Write something here".
&lt;/p&gt;
&lt;p&gt;
Go to your settings and select the front page, blog page, privacy page and so on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504#comment:1/1520535448297356</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43504.patch attached to Ticket #43504</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43504/43504.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43504/43504.patch/1520535426681203</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:18/1520535285044030</guid>
      <description>&lt;p&gt;
Thats fair, I didn't notice that feature. Need to weigh the usefulness of that against a checkbox for all :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:4/1520535103202460</guid>
      <description>&lt;p&gt;
Hmm. I see. My question is what is worse for a new site.
&lt;/p&gt;
&lt;p&gt;
a) A default privacy policy the user didn't write.
b) No privacy policy at all.
&lt;/p&gt;
&lt;p&gt;
If a policy is general enough to avoid legal issues it could be useful. If it *needs* admin input, it should be manual.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:5/1520534154916910</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43498#comment:4" title="Comment 4"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43498#comment:3" title="Comment 3"&gt;arena&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am using trunk (see attached for function wp_is_stream() )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the additional info! Could you see what the value of &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just updated PHP 7.0.16 to PHP 7.1.15
&lt;/p&gt;
&lt;p&gt;
Here is what "var_dump(stream_get_wrappers());" looks like (out of WP)
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(11) {
  [0]=&amp;gt;
  string(3) "php"
  [1]=&amp;gt;
  string(4) "file"
  [2]=&amp;gt;
  string(4) "glob"
  [3]=&amp;gt;
  string(4) "data"
  [4]=&amp;gt;
  string(4) "http"
  [5]=&amp;gt;
  string(3) "ftp"
  [6]=&amp;gt;
  string(0) ""
  [7]=&amp;gt;
  string(0) ""
  [8]=&amp;gt;
  string(5) "https"
  [9]=&amp;gt;
  string(4) "ftps"
  [10]=&amp;gt;
  string(4) "phar"
}
&lt;/pre&gt;&lt;p&gt;
In WP, now i have that kind of message (appears sooner than on previous php version):
&lt;/p&gt;
&lt;pre class="wiki"&gt;[php7:error] [pid 5840:tid 1052] [client 127.0.0.1:49883] PHP Fatal error:  Possible integer overflow in memory allocation (4 * 8319104478870268257 + 32) in ...wordpress\\wp-includes\\functions.php on line 5472
&lt;/pre&gt;&lt;p&gt;
always same line ...
&lt;/p&gt;
&lt;p&gt;
I am going to update to 7.2.3 to see what is happening.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:3/1520533175337736</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43491#comment:2" title="Comment 2"&gt;mikejolley&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This sounds like the same thing as &lt;a href="https://core.trac.wordpress.org/ticket/43389"&gt;https://core.trac.wordpress.org/ticket/43389&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
More or less.. the decision right now seems to be having the page picker under tools.
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43389" title="#43389: feature request: Add a privacy policy page setting to options-reading.php (closed: wontfix)"&gt;#43389&lt;/a&gt; also doesn't mention the possibility of having a privacy policy page being added on first install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:19/1520532379935919</guid>
      <description>&lt;p&gt;
My suggestion is to use a new route &lt;code&gt;/autosaves&lt;/code&gt; extending the revisions controller.
&lt;/p&gt;
&lt;p&gt;
The concept of an "Autosave" is different to the concept of a "Revision", even though right now, they are technically implemented in a similar manner and stored in the same table. That could potentially change at any moment, though. Routes should be modeled after concepts, not how stuff is stored in the DB.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;/autosaves&lt;/code&gt; endpoint would be used on the client to "trigger" an autosave. The server then decides how (or if) to store that autosave. The server then emits a response to the client, which could contain contextual data that the client needs to provide needed visual feedback. As an example, it could provide the latest valid autosave (=revision) ID. This can be used on the client to adapt its state.
&lt;/p&gt;
&lt;p&gt;
Letting the client decide whether to actually store the autosave or not is not recommend imho, because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The client does not have the necessary knowledge to make this decision. It would either require direct access to the DB or multiple network roundtrips to decide.
&lt;/li&gt;&lt;li&gt;The client should be in control of the logic that defines user interactions, and the server should be in control of the logic that defines the business domain. A client is not to be trusted, so giving it too much decisional power is a security liability.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 18:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:4/1520532085802884</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43498#comment:3" title="Comment 3"&gt;arena&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am using trunk (see attached for function wp_is_stream() )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the additional info! Could you see what the value of &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:18/1520531711738273</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1520531708000686"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43504 (Use correct variable name in filter docs for the `$object_id` ...) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43504</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43504/1520531668240276</guid>
      <description>&lt;p&gt;
Added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41800" title="Docs: add docs for meta authorization filters.
Add filter ..."&gt;[41800]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-includes/capabilities.php?marks=326,348#L312"&gt;https://core.trac.wordpress.org/browser/tags/4.9.4/src/wp-includes/capabilities.php?marks=326,348#L312&lt;/a&gt; the &lt;code&gt;$object_id&lt;/code&gt; parameter is referenced as &lt;code&gt;$post_id&lt;/code&gt;. It should be &lt;code&gt;$object_id Object ID.&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39965 (REST API: Introduce a controller for searching across post types) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39965#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39965#comment:25/1520531089686538</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Say I‚Äôm writing a post and I want to promote one of my products. I want to link to my product. Are you really saying in Gutenberg I have to do that manually? Do you realize this won't be very... welcomed by users?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is still possible in the REST API, just with multiple requests. It's up to the client on how it wants to present multiple types to the user. There's the api client (in this case gutenberg) that can do things for the user, like send multiple requests. Different post types can be very different, so the client should handle these as such. For example, don't assume you can just get "all posts across all types" and then display them. What if a post type doesn't support titles, etc. Different post types can be as different as a Tag and a Post, as far as the API is concerned. That's why the suggestion is a search endpoint (or similar) that would return multiple groupings of different objects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:17/1520531076187976</guid>
      <description>&lt;p&gt;
The cookies do have a use though, for more than just autocomplete :)
&lt;/p&gt;
&lt;p&gt;
The cookies allow you to delete your comments if they are not approved yet, and preview it as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>wpmarkuk</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:16/1520530737576716</guid>
      <description>&lt;p&gt;
On reflection I agree - I think we could just not use a cookie here at all and not have this tbh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39965 (REST API: Introduce a controller for searching across post types) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39965#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39965#comment:24/1520530735156695</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Discussed this issue during today's Gutenberg bug-scrub and heard there are dissenting opinions in the REST API team. I'd propose to do a quick use case example:
&lt;/p&gt;
&lt;p&gt;
Say I‚Äôm writing a post and I want to promote one of my products. I want to link to my product. Are you really saying in Gutenberg I have to do that manually? Do you realize this won't be very... welcomed by users?
&lt;/p&gt;
&lt;p&gt;
As I see it, and I'm pretty sure I'm not the only one, having the ability to link to any post type is paramount in a modern editor. Without this ability, Gutenberg will be pretty limited. At that point, better to switch back to AJAX :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:15/1520530067809619</guid>
      <description>&lt;p&gt;
In the age of browser autocomplete, how useful is this cookie anyway?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:2/1520529682987455</guid>
      <description>&lt;p&gt;
This sounds like the same thing as &lt;a href="https://core.trac.wordpress.org/ticket/43389"&gt;https://core.trac.wordpress.org/ticket/43389&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38036 (Add support for the utf8mb4_0900_ai_ci collation) updated</title>
      
        <dc:creator>sierkb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38036#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38036#comment:4/1520529587499737</guid>
      <description>&lt;p&gt;
Any progress in this issue?
&lt;/p&gt;
&lt;p&gt;
If using MySQL 8.0, would an explicit
define('DB_CHARSET', 'utf8mb4');
define('DB_COLLATE', 'utf8mb4_0900_ai_ci');
in wp-config.php be usefull right now?
&lt;/p&gt;
&lt;p&gt;
If using MySQL 5.7.x, what should be used instead?
What are the defaults in WordPress as of today?
define('DB_CHARSET', 'utf8'); ?
define('DB_COLLATE', 'utf8mb4_unicode_ci'); ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2799 (Cache 'dynamic' Javascript) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2799#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2799#comment:4/1520529221073838</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by iseulde. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1520529218000809"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43502 (`WP_REST_Posts_Controller::prepare_item_for_response()` doesn't reset ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:10:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43502#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43502#comment:1/1520529026788399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @gerbenvandijk, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_REST_Revisions_Controller::prepare_item_for_response()&lt;/code&gt; has the same issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501#comment:3/1520528824533277</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42800" title="General: In `wp_debug_backtrace_summary()`, normalize paths before ..."&gt;42800&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: In &lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt;, normalize paths before replacement for better cross‚Äìplatform compatibility.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Rarst.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43501" title="#43501: defect (bug): Debug backtrace doesn't normalize paths before replacement (closed: fixed)"&gt;#43501&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42800]: General: In `wp_debug_backtrace_summary()`, normalize paths before ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42800</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42800/1520528824041948</guid>
      <description>&lt;p&gt;
General: In &lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt;, normalize paths before replacement for better cross‚Äìplatform compatibility.
&lt;/p&gt;
&lt;p&gt;
Props Rarst.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43501" title="#43501: defect (bug): Debug backtrace doesn't normalize paths before replacement (closed: fixed)"&gt;#43501&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 17:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501#comment:2/1520528772466292</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43503 (Problematic handling of folder name when using upload to add a new ...) updated</title>
      
        <dc:creator>anonym999999</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43503#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43503#comment:1/1520528079828046</guid>
      <description>&lt;p&gt;
Correction :
&lt;/p&gt;
&lt;p&gt;
"fails the upgrade of the &lt;strong&gt;THEME&lt;/strong&gt; because "plugin-update-checker" use "theme-exemple-1.0" as theme identifier."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43503 (Problematic handling of folder name when using upload to add a new ...) created</title>
      
        <dc:creator>anonym999999</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43503</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43503/1520527842124424</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
First bug here. Thanks for the great platform!
&lt;/p&gt;
&lt;p&gt;
I report this as a bug but I think it's probably a bug and a enhancement suggestion.
&lt;/p&gt;
&lt;p&gt;
We are about to release a platform with a plugin and theme that are dependant on each other and could not comply to WordPress official theme and plugin repository, so we will distribute it through Github.
We have a documentation that will be offered in the Wiki to assist with the installation and to offer a simple evaluation installation process, I have used the upload theme feature and another library to install
the required plugin (&lt;a class="ext-link" href="http://tgmpluginactivation.com/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;http://tgmpluginactivation.com/&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
For convenience, I also use this other wonderfull projet (&lt;a class="ext-link" href="https://github.com/YahnisElsts/plugin-update-checker"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/YahnisElsts/plugin-update-checker&lt;/a&gt;) to add upgrade from Github integrated in WordPress UI.
&lt;/p&gt;
&lt;p&gt;
While testing the integration I stumbled with a few problems and it looks like one is on WordPress side.
&lt;/p&gt;
&lt;p&gt;
For my test, I had a theme release in Github that was named "theme-exemple-1.0.zip".
&lt;/p&gt;
&lt;p&gt;
When I import this file using WordPress UI, everything goes well. The folder created in wp-content/themes is named "theme-exemple-1.0".
&lt;/p&gt;
&lt;p&gt;
BUG: If I try to delete the theme from WordPress UI, the delete is not working (theme not found). I have to rename the folder manually to theme-exemple to be able to delete it (from UI).
&lt;/p&gt;
&lt;p&gt;
I traced the code and was actually surprised to discover that there where no way to change the folder name.
&lt;/p&gt;
&lt;p&gt;
1) The upload process doesn't use metadata from the header of style.css to calculate the slug / folder name (I think this is done on plugin side).
2) It's not possible to have a sub-folder to encapsulate the rightly named folder.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
By exemple :
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
release.zip containing a folder "theme-exemple" (the process to find style.css should scan folders and drill down in folders and accept the package and corresponding folder if it can find ONE styles.css?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There was a related issue with "plugin-update-checker" where the name of the theme is calculated from slug and become "theme-exemple-10" (without the dot), so WordPress fails the upgrade of the plugin because
"plugin-update-checker" use "theme-exemple-1.0" as theme identifier.
&lt;/p&gt;
&lt;p&gt;
As a workaround, I will modify the filename of my release on github to not have the version tag on it (which is in some ways convenient).
Maybe a known issue?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43502 (`WP_REST_Posts_Controller::prepare_item_for_response()` doesn't reset ...) created</title>
      
        <dc:creator>gerbenvandijk</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43502</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43502/1520527541655820</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
I seem to have stumbled upon a small oversight in &lt;code&gt;WP_REST_Posts_Controller::prepare_item_for_response()&lt;/code&gt; , where it doesn't reset postdata after calling &lt;code&gt;setup_postdata()&lt;/code&gt;, rendering this part of the API useless for developers who want to use this API in their custom code.
&lt;/p&gt;
&lt;p&gt;
Ran into it while writing a custom function, that uses this part of the API to convert a regular post object into an object that matches the json scheme of the API.
&lt;/p&gt;
&lt;p&gt;
I‚Äôve fixed it temporarily by doing setting &lt;code&gt;$GLOBALS[ 'post' ] = $original_post_id&lt;/code&gt; in my function (and by passing &lt;code&gt;original_post_id&lt;/code&gt; as parameter to my function) - but it seems to me that this should be fixed in core.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function convert_post_object_to_rest_response($post)
{
    global $wp_rest_server;
    $post_type = get_post_type_object($post-&amp;gt;post_type);
    $request = WP_REST_Request::from_url(rest_url(sprintf('wp/v2/%s/%d', $post_type-&amp;gt;rest_base, $post-&amp;gt;ID)));
    $request = rest_do_request($request);
    $data = $wp_rest_server-&amp;gt;response_to_data($request, isset($_GET[ '_embed' ]));
    return $data;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It returns the right data, which is great - but when i in turn use this function to supply a field in one of my endpoints with this dat, all fields below it seem to inherit the ID i‚Äôve passed.
&lt;/p&gt;
&lt;p&gt;
i‚Äôve traced this back to &lt;code&gt;WP_REST_Posts_Controller::prepare_item_for_response&lt;/code&gt;, where it‚Äôs doing a &lt;code&gt;setup_postdata&lt;/code&gt; call without resetting it later.
&lt;/p&gt;
&lt;p&gt;
For now i‚Äôve fixed it by setting &lt;code&gt;$GLOBALS[ 'post' ] = $original_post_id&lt;/code&gt; in my function (and by passing &lt;code&gt;original_post_id&lt;/code&gt; as parameter to my function), but I figured i'd report it here so it can be fixed from the core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501#comment:1/1520527513864058</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Normalized_paths_for_replacement_in_debug_backtrace_.patch attached to Ticket #43501</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43501/Normalized_paths_for_replacement_in_debug_backtrace_.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43501/Normalized_paths_for_replacement_in_debug_backtrace_.patch/1520527500533293</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43501 (Debug backtrace doesn't normalize paths before replacement) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43501</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43501/1520527490125569</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt; tries to truncate admin and content paths from includes for brevity.
&lt;/p&gt;
&lt;p&gt;
However it doesn't normalize paths before replacement, which is necessary for any kind of reliable operation cross‚Äìplatform.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wp_is_stream.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/wp_is_stream.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/wp_is_stream.JPG/1520527438336228</guid>
      <description>&lt;p&gt;
function wp_is_stream
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:43:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:3/1520527403947059</guid>
      <description>&lt;p&gt;
@SergeyBiryukov‚ÄÇ
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I am using trunk (see attached for function wp_is_stream() )
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Can't tell how to reproduce this issue, seems to happen when several instances of the same WordPress are running (several ajax calls)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42008 (Show warning that usernames can't be changed) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42008#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42008#comment:9/1520527291993945</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:6/1520527196109738</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #30988,‚Äã43218 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:38:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30988%2C43218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30988%2C43218/1520527080273143</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42799" title="Tests: Correct assertion in ..."&gt;42799&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Correct assertion in &lt;code&gt;Tests_WP_Customize_Setting::test_constructor_with_args()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jipmoors.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30988" title="#30988: defect (bug): Setting's default value doesn't apply on preview window (closed: fixed)"&gt;#30988&lt;/a&gt;, &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43218" title="#43218: defect (bug): PHPUnit 7.x support (accepted)"&gt;#43218&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [42799]: Tests: Correct assertion in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42799</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42799/1520527079814585</guid>
      <description>&lt;p&gt;
Tests: Correct assertion in &lt;code&gt;Tests_WP_Customize_Setting::test_constructor_with_args()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jipmoors.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30988" title="#30988: defect (bug): Setting's default value doesn't apply on preview window (closed: fixed)"&gt;#30988&lt;/a&gt;, &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43218" title="#43218: defect (bug): PHPUnit 7.x support (accepted)"&gt;#43218&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:11/1520526641190224</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43500 (Improve JS Documentation: gallery-add.js) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43500#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43500#comment:2/1520526256635076</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42798" title="Docs: Improve JSDoc for ..."&gt;42798&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-includes/js/media/controllers/gallery-add.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boblinthorst, bramheijmink, manuelaugustin, ireneyoast, igorsch, nataliashitova.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43500" title="#43500: defect (bug): Improve JS Documentation: gallery-add.js (reopened)"&gt;#43500&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42798]: Docs: Improve JSDoc for ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42798</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42798/1520526256150003</guid>
      <description>&lt;p&gt;
Docs: Improve JSDoc for &lt;code&gt;wp-includes/js/media/controllers/gallery-add.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props boblinthorst, bramheijmink, manuelaugustin, ireneyoast, igorsch, nataliashitova.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43500" title="#43500: defect (bug): Improve JS Documentation: gallery-add.js (reopened)"&gt;#43500&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499#comment:2/1520525368897770</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @carolinegeven, thanks for the patch!
&lt;/p&gt;
&lt;p&gt;
It appears to be created from the stable branch and contains 3.7 MB of unrelated changes :) Could you please refresh it from WordPress trunk?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43500 (Improve JS Documentation: gallery-add.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43500#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43500#comment:1/1520525119651097</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499#comment:1/1520525114013357</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 08 Mar 2018 16:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:10/1520524958067805</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In the patch I have reduce complexity and dependencies wherever possible.
&lt;/p&gt;
&lt;p&gt;
Elements that had to be touched:
The new file "abstract-testcase.php " contains the contents of "testcase.php" without the method that is being overridden en gave an argument declaration error.
&lt;/p&gt;
&lt;p&gt;
Removed the dependency in the &lt;code&gt;PHPUnit_Util_Test&lt;/code&gt; class, as it only needs to use the &lt;code&gt;PHPUnit\Util\Test::parseTestMethodAnnotations&lt;/code&gt; which is a public static method, thus callable from everywhere.
&lt;/p&gt;
&lt;p&gt;
Added a speed-trap loader, which determines what speed-trap class needs to be loaded for the current PHPUnit version.
&lt;/p&gt;
&lt;p&gt;
Fixed a test.
Fixed the type of variable that is being used to show what bug is being reported, this was defaulted to 'null' instead of an empty string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:2/1520524788783597</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @arena, thanks for the report!
&lt;/p&gt;
&lt;p&gt;
Unfortunately, there's not much info to go from, except for a huge value for attempted allocation (1441151880758559780 bytes is 1.44 &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Exabyte"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;exabytes&lt;/a&gt;).
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Are you using WordPress 4.9.4? &lt;code&gt;wp-includes/functions.php on line 5472&lt;/code&gt; is where &lt;code&gt;wp_validate_boolean()&lt;/code&gt; is defined.
&lt;/li&gt;&lt;li&gt;Are there any particular steps to reproducing the issue?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Provide_PHPUnit_7_compatibility.patch attached to Ticket #43218</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:58:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43218/Provide_PHPUnit_7_compatibility.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43218/Provide_PHPUnit_7_compatibility.patch/1520524739011099</guid>
      <description>&lt;p&gt;
Implementing PHPUnit 7 compatibility
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>gallery-add-documentation.diff attached to Ticket #43500</title>
      
        <dc:creator>boblinthorst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43500/gallery-add-documentation.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43500/gallery-add-documentation.diff/1520521441021981</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43500 (Improve JS Documentation: gallery-add.js) created</title>
      
        <dc:creator>boblinthorst</dc:creator>

      <pubDate>Thu, 08 Mar 2018 15:03:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43500</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43500/1520521419530221</guid>
      <description>&lt;p&gt;
In our ongoing effort to improve JavaScript documentation, this patch adds descriptions and JSDoc formatting to the following file:
&lt;/p&gt;
&lt;p&gt;
gallery-add.js
&lt;/p&gt;
&lt;p&gt;
Please also give props to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/bramheijmink"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;bramheijmink&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/manuelaugustin"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;manuelaugustin&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/maartenleenders"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;ireneyoast&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/igorsch"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;igorsch&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://profiles.wordpress.org/nataliashitova"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;nataliashitova&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>update.43443.diff attached to Ticket #43443</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/update.43443.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/update.43443.diff/1520520640171933</guid>
      <description>&lt;p&gt;
Update for 43443
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:10/1520520601649423</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
All the WP_Error messages should end with a full stop.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@ocean90 See check_password_reset_key. If it needs adding it should be added to all strings. I don't want to introduce another localisation string just to add a ., and want to avoid touching other code for the moment :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why are none of the functions prefixed with wp_?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can add - none of the other functions in that file were so I assumed there was no standard.
&lt;/p&gt;
&lt;p&gt;
Addressed the other items of feedback, and renamed some functions with what I think is more logical naming.
&lt;/p&gt;
&lt;p&gt;
@azaozz
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Consider how this can be used through the REST API and add an endpoint.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this would be separate. Consider these to be helper functions than an endpoint could utlize to perform a user action.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps add garbage collection function to delete expired requests.
Log confirmed requests and perhaps show them on the dashboard? Typically an admin will have to perform the requested action. When a site has more than one admin, would be good if all can see pending requests.
Prevent "flood" of requests. If a request is made and it hasn't expired, perhaps limit how many new requests can be made for the same email. Something like 10 should be plenty to cover legitimate user cases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These points would be better addressed by a custom table as I suggested. It would be difficult to scale garbage collection with the current meta/options because it would need to load all and compare the values inside the serialized array.
&lt;/p&gt;
&lt;p&gt;
Which leads on to @allendav's point:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like the idea of a privacy actions log, but since that may lead us to having to have a separate db table, I recommend we break that out into a separate issue and implement this issue as a priority without that sub-feature.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree separate issue but this is the same idea. The generic user action confirmations/requests table I'd like to introduce would not only store the generated key, date of request, action name, UID, it would also store dates of confirmation which serves as a log and could be exposed via a UI. e.g. list table showing all rows for action "delete_account".
&lt;/p&gt;
&lt;p&gt;
Should that be moved out of this issue?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe for V1 we just leave request tracking to the administrator(s) and their email inbox :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I also agree with this. If we just agreed users would contact site administrator to request details or anonomize, this system is probably not needed. If we want to support form's, the confirmation step is still required to verify requests are genuine.
&lt;/p&gt;
&lt;p&gt;
Sidenote; I am in favour of emailing requests to admin for account deletion/details instead of showing new list tables in core. The UI side could be let for plugins. For our use, an email with the details of the request and some shortcuts to the new export/anonymize tools would be sufficient.
&lt;/p&gt;
&lt;p&gt;
Flow without confirmation:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User contacts admin via email.
&lt;/li&gt;&lt;li&gt;Admin generates export via new tools.
&lt;/li&gt;&lt;li&gt;Admin sends export to user.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Flow with confirmation:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User requests export via form or link on site.
&lt;/li&gt;&lt;li&gt;System emails user.
&lt;/li&gt;&lt;li&gt;User clicks confirm link.
&lt;/li&gt;&lt;li&gt;Admin gets email with request and tool links.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Can we discuss this further? If thats an option we should prioritize the new tools over the processes, including this issue.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Anyhow, new code is here in my fork here &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/compare/master...mikejolley:update/43443?expand=1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/WordPress/WordPress/compare/master...mikejolley:update/43443?expand=1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Functions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp_send_account_verification_key
&lt;/li&gt;&lt;li&gt;wp_get_account_verification_key
&lt;/li&gt;&lt;li&gt;wp_check_account_verification_key
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
wp-login action:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;verifyaccount
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Hooks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;account_verification_email_content
&lt;/li&gt;&lt;li&gt;account_verification_expiration
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@azaozz will send a diff too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:16:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:5/1520518593117241</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@birgire  - Thanks for the additional debugging, language details and for testing on another laptop to confirm this is an issue. This should be enough information for work on a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>document-tags-box-js.patch attached to Ticket #43499</title>
      
        <dc:creator>carolinegeven</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43499/document-tags-box-js.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43499/document-tags-box-js.patch/1520518547048413</guid>
      <description>&lt;p&gt;
Document tags-box.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43499 (Document src/wp-admin/js/tags-box.js) created</title>
      
        <dc:creator>carolinegeven</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:15:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43499</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43499/1520518512950227</guid>
      <description>&lt;p&gt;
Adds documentation to src/wp-admin/js/tags-box.js
&lt;/p&gt;
&lt;p&gt;
To see the files changed: &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/pull/40"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/Yoast/wordpress-develop-mirror/pull/40&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please give props to: @atimmer, @carolinegeven, @andizer, @ireneyoast, @herregroen, @jjcomack
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42008 (Show warning that usernames can't be changed) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42008#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42008#comment:8/1520518265850691</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the suggestion @SergeyBiryukov.
&lt;/p&gt;
&lt;p&gt;
I've refreshed the patch to include the wording you mentioned in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42008/42008.3.diff" title="Attachment '42008.3.diff' in Ticket #42008"&gt;42008.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42008/42008.3.diff" title="Download"&gt;‚Äã&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:10:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:8/1520518241036137</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:7/1520518200729280</guid>
      <description>&lt;p&gt;
Yes, thanks for clarifying @danieltj. I didn't read enough into what John had written down to realize his approach was based on email. For this ticket I was indeed shooting for a notification center in the admin with what we might call 'push' notifications. If there is an option to also send an email, no problem, there are sites that do that too (Facebook and Twitter among them), but I see the most gain in focusing on in-admin 'push' notifications first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42008.3.diff attached to Ticket #42008</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:09:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42008/42008.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42008/42008.3.diff/1520518174203371</guid>
      <description>&lt;p&gt;
Patch refresh
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:3/1520517735507393</guid>
      <description>&lt;p&gt;
I am definitely a fan of semantic versioning, but I think it is important to realize that we can't just decide to change how we version core without some major implications. The update code currently treats 4.5.0 as a "major" release, and 4.5.1 as a "minor" release (core's terminology). Both of these effectively map to semver's "minor" release. There is no concept of a "breaking" release or a "patch" release, as semver defines them. The code in core (and probably any plugins/themes/etc.) that relates to core updates will have to be changed. But so will users' perception of what to expect from updates. In short, this would be a breaking change, as @Luciano Croce pointed out, so there is no way that there could be a 4.10.0 following semver. It would have to be a 5.0.0 that made the switch.
&lt;/p&gt;
&lt;p&gt;
In addition, because core attempts to maintain almost-infinite backward compatibility, if we switched to semver WordPress would in theory always be on 5.x, because there would never be a breaking release to usher in 6.x. Of course, the reality is that core just ends up making little breaking changes all of the time, once it is safe to do so without much chance of actually breaking any code out in the wild.
&lt;/p&gt;
&lt;p&gt;
In the end, what we would really be contemplating here would be a complete change of philosophy for WP in regard to versioning, backward compatibility, patches, minor updates, etc. Although part of me would prefer that core embraced semver, core has a somewhat unique situation in regard to its technical debt, scope, and diverse versioning audience, and there is wisdom in some of the philosophies that it has embraced here, which are not really compatible with semver.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR:&lt;/strong&gt; semver is not just a way of specifying version numbers, it implies an entire versioning philosophy, and it runs counter to the versioning philosophy embraced by WordPress core. There is a lot that would have to be considered before a change like this could be made.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 14:00:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:6/1520517646654147</guid>
      <description>&lt;p&gt;
I think some wires are being crossed here as I think from what @hedgefield is actually proposing is what we'd consider 'real notifications' whereas what @johnbillion has proposed in the Core post is not so much a notifications API, but a email API instead.
&lt;/p&gt;
&lt;p&gt;
If you were to ask someone about notifications in this modern age, people will without a shadow of a doubt expect notifications like on iPhone/Android or Facebook/Twitter where it's a dismissible message in some kind of notification area. Email is separate and we already have &lt;code&gt;wp_mail&lt;/code&gt; doing a lot for us already.
&lt;/p&gt;
&lt;p&gt;
We need to be clear on the expectations here I think because the screenshots added to this ticket already indicate a modern, social media approach whereas I think the original expectation was for notifications of things via email. I don't see why we can't have both working harmoniously but it's something we need to decide on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:5/1520515964339940</guid>
      <description>&lt;p&gt;
Didn't think I'd ever encounter this, but I just saw this happen on a migrated client site via a call to &lt;code&gt;wp_upload_dir&lt;/code&gt; from Divi theme, where the &lt;code&gt;et_images_temp_folder&lt;/code&gt; option was not replaced correctly.
&lt;/p&gt;
&lt;p&gt;
An incorrect/badly formed &lt;code&gt;upload_path&lt;/code&gt; would also get into an infinite loop. So this is not a theoretical scenario, this actually happens :(
&lt;/p&gt;
&lt;p&gt;
Patch got rid of infinite loop in &lt;code&gt;wp_mkdir_p&lt;/code&gt; call.
&lt;/p&gt;
&lt;p&gt;
Any ideas on how to automate test for this? Or can this be merged without unit tests due to it being so dangerous to test?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:74/1520515402881476</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Now that &lt;a class="ext-link" href="https://wordpress.org/support/upgrade-php/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/support/upgrade-php/&lt;/a&gt; is up, going to take a stab at implementing the mockups attached above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:5/1520514335695324</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42797" title="Docs: Remove copy/pasted default value description for `$type` in ..."&gt;42797&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Remove copy/pasted default value description for &lt;code&gt;$type&lt;/code&gt; in &lt;code&gt;WP_Customize_Manager::add_setting()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props DannyCooper.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43497" title="#43497: defect (bug): Incorrect Code Comment (closed: fixed)"&gt;#43497&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42797]: Docs: Remove copy/pasted default value description for `$type` in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 13:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42797</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42797/1520514335215131</guid>
      <description>&lt;p&gt;
Docs: Remove copy/pasted default value description for &lt;code&gt;$type&lt;/code&gt; in &lt;code&gt;WP_Customize_Manager::add_setting()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props DannyCooper.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43497" title="#43497: defect (bug): Incorrect Code Comment (closed: fixed)"&gt;#43497&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498#comment:1/1520513094942974</guid>
      <description>&lt;p&gt;
try updating PHP, I had similar issues for a while locally
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:4/1520513089703874</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #38197,‚Äã41842 batch updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38197%2C41842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38197%2C41842/1520511978311477</guid>
      <description>duplicate: &lt;p&gt;
Dupe of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38197" title="#38197: enhancement: Update Pingback function To Add Return (assigned)"&gt;#38197&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38197 (Update Pingback function To Add Return) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:24:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38197#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38197#comment:14/1520511881830515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39960 (Separate Supported Status for Trackbacks and Pingbacks) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 08 Mar 2018 12:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39960#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39960#comment:6/1520511786384182</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:51:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/formatting.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/formatting.JPG/1520509918322367</guid>
      <description>&lt;p&gt;
opening formatting.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>functions.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/functions.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/functions.JPG/1520509895075248</guid>
      <description>&lt;p&gt;
opening functions.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>config.JPG attached to Ticket #43498</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43498/config.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43498/config.JPG/1520509867455733</guid>
      <description>&lt;p&gt;
windows config
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43498 (PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted) created</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43498</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43498/1520509827480873</guid>
      <description>&lt;p&gt;
I am posting here a ticket because i do not know if this is a bug .
&lt;/p&gt;
&lt;p&gt;
Since a few days, i have regularly this error :
&lt;/p&gt;
&lt;p&gt;
[:error] [pid 3408:tid 1020] [client 127.0.0.1:52320] PHP Fatal error:  Allowed memory size of 1073741824 bytes exhausted (tried to allocate 1441151880758559780 bytes) in ...wordpress&lt;br /&gt;wp-includes&lt;br /&gt;functions.php on line 5472, referer: &lt;a class="ext-link" href="http://127.0.0.1/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;http://127.0.0.1/wordpress/wp-admin/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
always the same line, on the same file.
&lt;/p&gt;
&lt;p&gt;
i need to stop/start apache to continue to use my local/dev site.
&lt;/p&gt;
&lt;p&gt;
When i try to open this file with NetBeans i have this error :
&lt;/p&gt;
&lt;p&gt;
"(this) file cannot be safely opened with encoding windows-1252..."
&lt;/p&gt;
&lt;p&gt;
i tried to open other big files from WordPress, it also occurs on formatting.php, but not on all php files :?
&lt;/p&gt;
&lt;p&gt;
hereattached screenshots of my config and the error messages
&lt;/p&gt;
&lt;p&gt;
regards
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 11:07:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:3/1520507232245380</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:4/1520506406100800</guid>
      <description>&lt;p&gt;
The issue showed up when I tested on another labtop (Win10, Chrome 65.0) with another install at another hosting.
&lt;/p&gt;
&lt;p&gt;
Shows up around viewport width 1350px.
&lt;/p&gt;
&lt;p&gt;
This seems to be affected by &lt;code&gt;overflow: auto;&lt;/code&gt; in:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.theme-overlay .theme-about {
    position: absolute;
    top: 49px;
    bottom: 57px;
    right: 0;
    left: 0;
    overflow: auto;
    padding: 2% 4%;
}
&lt;/pre&gt;&lt;p&gt;
and e.g. the non-standard &lt;code&gt;-webkit-paged-y&lt;/code&gt; seems to change it for the better.
&lt;/p&gt;
&lt;p&gt;
But let's see if others can verify this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:2/1520505502605285</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) updated</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497#comment:1/1520505409029572</guid>
      <description>&lt;p&gt;
Correction: the file is wp-includes/class-wp-customize-manager.php:3626
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch.diff attached to Ticket #43497</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43497/patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43497/patch.diff/1520505358371126</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43497 (Incorrect Code Comment) created</title>
      
        <dc:creator>DannyCooper</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43497</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43497/1520505340825975</guid>
      <description>&lt;p&gt;
In class-wp-customize.php:3626 the comment makes no sense in the context of the property.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:73/1520505032047619</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-php by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1520505030000090"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:29:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:72/1520504988520265</guid>
      <description>&lt;p&gt;
Same issue, I was thinking to use a filter and block the update of next version of my plugin of the PHP version is lower then what I specify.
So I will have like a LTS version for this users with a warning to upgrade PHP to get the updates.
I hope that for 4.9.5 this support will be integrated together with ServeHappy to inform users about the upgrade of PHP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:13/1520504519081072</guid>
      <description>&lt;p&gt;
@danieltj I can't for the sake of my sanity ( :D ) go through what anyone thinks and understands as personal data.
&lt;/p&gt;
&lt;p&gt;
I can say this: You are focusing on GDPR ( maybe we should go further than that and we will at some point ) because everything at the moment goes around it. There's also ePD and an extra ton of different stuff to consider that nobody has for years now as they are completely legal (laws, papers etc) and nobody had time to check or the idea that they even existed. So not everything is 'just' about GDPR.
&lt;/p&gt;
&lt;p&gt;
GDPR came as a slap because there where other laws and regulations in place for years now that everybody ignored. So somebody decided 'enough' everybody has to get in-line, for whatever reason that might be either we like it or not.
&lt;/p&gt;
&lt;p&gt;
Point: In some countries it's a fact, everything is personal data and goverments per country will be able to adjust GDPR to an extent that they see fit for their own countrys/peoples interest, we have no idea yet what each country will bring to the table of course until that's done.
&lt;/p&gt;
&lt;p&gt;
So basically the talk you heard has nothing to do with the talks that we hear or the talks in another country so on so forth if you get the idea :D, as they speak with different standards even if the major label is GDPR. We have to include 'everybody' unfortunately not what individuals per country / law system say. If 50% says green and 50% says red, in my opinion we have to bring Green + Red as options to help everyone if possible.
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
I won't force anybody into this mindset, I'm not even forcing myself to be honest :) and that's why all the questions. At the end of the day I could just upload a patch for proposal to save myself from keyboard overload and if it gets turned down then so be it, but I don't like that approach :D .
&lt;/p&gt;
&lt;p&gt;
As for the &lt;code&gt;wp-config.php&lt;/code&gt; you mentioned, I stated on my previous comment that the idea is to give everyday users a way out of techy things I don't know why you're pointing to that direction again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43496.2.patch attached to Ticket #43496</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43496/43496.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43496/43496.2.patch/1520504077568093</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249#comment:54/1520503552073947</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22249#comment:53" title="Comment 53"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If &lt;code&gt;async&lt;/code&gt; or &lt;code&gt;defer&lt;/code&gt; are used, they are added to the script tag as booleans without values:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A reminder that even the W3 Recommendation for HTML 5.2, includes coverage of XHTML syntax (XML-serialized HTML), which, among other things required by XML proper, disallows boolean attributes.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://www.w3.org/TR/html52/introduction.html#html-vs-xhtml"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://www.w3.org/TR/html52/introduction.html#html-vs-xhtml&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There may well be other issues that stop WP from being delivered as &lt;code&gt;application/xhtml+xml&lt;/code&gt;, but let's not introduce new code that moves core output further away from polyglot markup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) updated</title>
      
        <dc:creator>Luciano Croce</dc:creator>

      <pubDate>Thu, 08 Mar 2018 10:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:2/1520503227090034</guid>
      <description>&lt;p&gt;
&lt;strong&gt;I consider this proposal very interesting'''
&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;I am in favor of this introduction, but perhaps we should start from 5.0.0 in order to maintain the backward compatibility with the system adopting up to now with version 4.9+ and earlier.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:4/1520502774646713</guid>
      <description>&lt;p&gt;
So needs to resolve all occurrences also if that coding part is not needed then we have to removed that.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43496#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the admin doesn't use XHTML I'm not sure why we have to add a value to boolean attributes. The rule should probably be changed to exclude boolean attributes.
&lt;/p&gt;
&lt;p&gt;
There are few other occurrences of &lt;code&gt;disabled&lt;/code&gt; and also &lt;code&gt;readonly&lt;/code&gt; without a value.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>casiepa</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:49:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:12/1520502551085354</guid>
      <description>&lt;p&gt;
Just for reference, this is what we have as current info on what is collected:
&lt;a class="ext-link" href="https://github.com/gdpr-compliance/info/blob/master/Synched-info.md#coreversion-check-all-stored-except-for-those-marked"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/gdpr-compliance/info/blob/master/Synched-info.md#coreversion-check-all-stored-except-for-those-marked&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
To be reviewed if still valid for the current version of WP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:3/1520502463317724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since the admin doesn't use XHTML I'm not sure why we have to add a value to boolean attributes. The rule should probably be changed to exclude boolean attributes.
&lt;/p&gt;
&lt;p&gt;
There are few other occurrences of &lt;code&gt;disabled&lt;/code&gt; and also &lt;code&gt;readonly&lt;/code&gt; without a value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41074 (Create new Dashicons (4.9)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41074#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41074#comment:49/1520502075182442</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #design by boemedia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1520502073000179"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Thu, 08 Mar 2018 09:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:11/1520501330221217</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:8" title="Comment 8"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@danieltj I can easily argue about 'personal data' in the way of: it's my server, my localhost/pc so yes PHP version is my personal data basically as it's on my personal computer, you have to inform me that you want it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just because the information exists on your computer/server doesn't mean it's persona data though. &lt;strong&gt;Through the eyes of GDPR, personal data is only data that personally identifies you as a person&lt;/strong&gt;. So &lt;code&gt;xkon&lt;/code&gt; can of course be thought of as personal data as it's your username on WordPress.org. However, an unknown site running WordPress 4.9.4 and PHP 5.6 is not personal data, irrespective of opinion because you cannot use that data to personally identify someone with. Anyone in the world ( &lt;strong&gt;&lt;em&gt;25% of the web ;-)&lt;/em&gt;&lt;/strong&gt; ) could have that data as it's so broad and general, it doesn't really mean anything. That definition isn't from me, but from a trained professional that I listened to at a talk.
&lt;/p&gt;
&lt;p&gt;
However, I do agree that perhaps there should be something to alert users that data is sent, but not necessarily a switch to turn it on or off. There's two reasons for this;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You can use the &lt;code&gt;core_version_check_query_args&lt;/code&gt; to add/remove data that is sent, however removing enough data here will cause any potential upgrade check to fail if it doesn't have enough data to verify an update is needed.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;You can also use the &lt;code&gt;AUTOMATIC_UPDATER_DISABLED&lt;/code&gt; constant to disable all automatic updates and &lt;code&gt;WP_AUTO_UPDATE_CORE&lt;/code&gt; to disable all site updates all together.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I agree that using a plugin for this may be a bit overkill for something so small, but on the other hand, you can put these functions in your themes functions file or inside &lt;code&gt;wp-config.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The next steps here should be about telling users what is collected and why and ensuring people know that personal data is left out of the information that is sent to Dot Org. That seems like the best way forward from here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 08:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:10/1520497367296317</guid>
      <description>&lt;p&gt;
@dd32 thank you for all that information.
&lt;/p&gt;
&lt;p&gt;
So I'll step back a bit and give this question towards everybody in the community as we have a concept about the data:
&lt;/p&gt;
&lt;p&gt;
I'm introducing you the to the non-tech savvy everyday user that has concerns about his privacy or telemetry etc and has no idea what &lt;code&gt;apply_filters()&lt;/code&gt; means when reading the Doc on &lt;code&gt;core_version_check_query_args&lt;/code&gt;, also he does not want to relly on 3rd party ( plugins etc ) installations [ we've all seen these kind of users/comments on forums ].
&lt;/p&gt;
&lt;p&gt;
That filter has to be something given within a UI along with the core as it is already part of it with a simple on/off switch so anyone can easily choose what he likes. Of course the user will be thoroughly informed of what those data are and what switching off means + affects as this might break the updates and everything else that might be included with it, that is a choice that the user has to make though for his website not us.
&lt;/p&gt;
&lt;p&gt;
Our responsibility is to provide the tool and allow the option freelly, the use of it is on their own hands.
&lt;/p&gt;
&lt;p&gt;
Can we add this to our list and do it? From one hand it's a thing that has to be done, from the other it's not 1 individuals decision to just flip a switch as we're a community and collective thinking is the way to go &lt;sup&gt;_&lt;/sup&gt; .
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Note: Sorry if I sometimes seem too blunt or strict but I'm not a lawyer as well not even close, for the last months unfortunately for me ( :P ) I've been dealing with lawyers every day mostly in the company I'm in to get ready for the 25 of May and some stuff needed are above-impossible as we can't just flip a switch and just make everything perfect magically. I can't go through all the conversations of what's being said, but I'm quite familiar with what needs to be done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:58:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:2/1520492314783006</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @mukesh27, spot on üëç
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496#comment:1/1520491486726363</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43496.patch attached to Ticket #43496</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43496/43496.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43496/43496.patch/1520491392557334</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43496 (CS: Fix disabled for user-edit.php) created</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 08 Mar 2018 06:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43496</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43496/1520491344749792</guid>
      <description>&lt;p&gt;
Many apologies if this is a duplicate. I have searched but did not find it yet posted.
&lt;/p&gt;
&lt;p&gt;
According to W3C specifications and as per HTML Coding Standards( &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/html/#quotes"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/coding-standards/html/#quotes&lt;/a&gt; ) handbook all attributes must have a value, and must use double or single-quotes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:5/1520487627584695</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.gif" title="Attachment '43481.1.gif' in Ticket #43481"&gt;43481.1.gif&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/43481.1.gif" title="Download"&gt;‚Äã&lt;/a&gt; is a preview of what we've came up with for now. We're not going to push it further for the time being as patch-on-patch will become a mess from one point on.
&lt;/p&gt;
&lt;p&gt;
@azaozz this will be re-worked and finalized a bit to be implemented when there's a commit of the Privacy Page ticket ( &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; ) as now we're actually duplicating some stuff to able to have parallel patches ready :) .
&lt;/p&gt;
&lt;p&gt;
Tell me if we're splitting the js/css please into extra 'new' files or using existing ones or even keeping everything self-contained in the page for the time being so I know what I'll have to do to make this ready for commit as well asap as I didn't understand much from the core chat yesterday about releases and what can be done :) . Ty!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:9/1520485862582246</guid>
      <description>&lt;p&gt;
Great start @voldemortensen, Perl is &lt;em&gt;not&lt;/em&gt; my go to language but I get the gist of what is going on üëç
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43481.1.gif attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.gif/1520485585649097</guid>
      <description>&lt;p&gt;
preview of 43481.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 05:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:8/1520485304643561</guid>
      <description>&lt;p&gt;
In todays #core dev-chat a discussion arose on the feasibility of including &lt;em&gt;new files&lt;/em&gt; in a &lt;em&gt;minor&lt;/em&gt; release, e.g. 4.9.5, historically this has been avoided due to the how &lt;em&gt;auto-updates&lt;/em&gt; work.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1520481343000204?thread_ts=1520470243.000286&amp;amp;cid=C02RQBWTW"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1520481343000204&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
dd32 Wrote:
&lt;em&gt;I‚Äôd also just like to add, I‚Äôd love to see the core E2E update tests operating before any change to how we treat updates, purely because a lot of it is based on unknowns and the past 4 years of experiences.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
dd32 Wrote: re: 4.9.5 including new files:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I‚Äôm not going to prevent that happening, but I‚Äôll repeat my previous stance that automatic updates wasn‚Äôt designed with that in mind, and was specifically built at a time when minor releases would only ever be bugfix releases with no new files.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There were technical reasons why we only did minor releases and not major ones too - adding new files is effectively a major release when you‚Äôre looking at it from an upgrade point of view.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The largest failing case for autoupdates at present is &lt;code&gt;files_not_writable&lt;/code&gt; where WordPress can‚Äôt modify existing files, let alone create new files (and this is after it‚Äôs already aborted because it knew it couldn‚Äôt write to files).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Adding new files has a chance that a %age of users may no longer receive security auto updates afterwards when the update fails.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Sites may also fatal error if new files are relied upon from another file and the autoupdate couldn‚Äôt create the files - we‚Äôve never really tested the rollback-on-fail code as it‚Äôs only been triggered a handful of times.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There‚Äôs also some environments where if an autoupdate adds a file, the following user-initiated updates using FTP may fail as it‚Äôll be unable to update the file - that‚Äôs one of the reasons we specified no-new-files.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;If I had to guess, the last two use-cases would be in the region of 0.5%~5% of users each.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It‚Äôs also worth reminding that in the event the autoupdate to 4.9.5 fails, it‚Äôll stay on 4.9.4 until the owner updates the site (much like we‚Äôve got with 4.9.3 right now) we won‚Äôt be able to tell that site to update again in any manner, so even a 4.9.4.1 autoupdate would be ignored.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;
Further backgrount can be read (including some detatiled statsistics) here: &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/03/11/continuing-inline-docs-improvements-adjacent-to-4-8/#comment-32248"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://make.wordpress.org/core/2017/03/11/continuing-inline-docs-improvements-adjacent-to-4-8/#comment-32248&lt;/a&gt; , here's my quick extract of the key points:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Generally, update statistics have showed a clear correlation between failures and I/O operations. This is clearly seen in the difference between minor releases of different sizes, and even more pronounced when comparing those to a major release like 4.7 (with hundreds of files changed).
&lt;/p&gt;
&lt;p&gt;
Additionally, we run these updates using partial build packages. Every extra file adds a significant amount of KB to the package, which adds up pretty quickly. This not only stretches the wordpress.org load balancers (when suddenly millions of sites are updating within an hour), but also each individual site, which must download the ZIP, which takes time (partial builds made things, on many shared servers, go from minutes to seconds) and introduces lots of possibilities of download failures, and thus sites needing to retry later (and wait longer) to get patched.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:5/1520483789341523</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43483.diff attached to Ticket #43483</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43483/43483.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43483/43483.diff/1520483758236171</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:34:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:4/1520483684333031</guid>
      <description>&lt;p&gt;
Thanks for the additional information. I can't find a valid reason why it's in there though; I assume it's an oversight.
&lt;/p&gt;
&lt;p&gt;
Adding &lt;code&gt;forms.css&lt;/code&gt; and &lt;code&gt;i10n&lt;/code&gt; as a dependency actually was introduced in changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36341" title="CSS: Stop using `wp-admin.min.css` and instead queue the individual ..."&gt;[36341]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37231 (Allow heading level to be specified when calling `do_meta_boxes()`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 04:02:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37231#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37231#comment:12/1520481734129112</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:9/1520481551562632</guid>
      <description>&lt;p&gt;
Strictly speaking, of the values reported to WordPress.org as part of the core update check (other than the WordPress version), these are required for a proper response:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PHP Version - So as to not offer WordPress 9.0 which requires PHP 7.0 to WordPress 7.5 users who are only running PHP 5.6.
&lt;/li&gt;&lt;li&gt;MySQL Version - Same as above, Last time we increased PHP 4.3 -&amp;gt; PHP 5.2 min, we also bumped MySQL from 4.1 to 5.0
&lt;/li&gt;&lt;li&gt;local_package - Used to offer locale-based installs updates which include their locales customisations
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I note that &lt;a class="ext-link" href="https://wordpress.org/plugins/update-privacy"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/plugins/update-privacy&lt;/a&gt; removes these fields, and core continues to work, it gracefully downgrades and just returns all updates &amp;amp; ignores locale-updates.
&lt;/p&gt;
&lt;p&gt;
As a question was asked about the Active Installs numbers, the main thing relevant to the discussion there is that the Site URL from the WordPress user-agent is used (along with other static information) to determine a unique ID for stats purposes, and is used consistently over core/plugins/themes API's to generate the &lt;code&gt;active_installs&lt;/code&gt; numbers for plugins/themes as well as using the other details sent with core update requests to ultimately generate the stats visible on &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/about/stats/&lt;/a&gt;
The aggregated statistics part is covered by &lt;a class="ext-link" href="https://wordpress.org/about/privacy/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;the WordPress.org Privacy Policy&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43229 (Documentation for add_meta_boxes hook is incorrect) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43229#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43229#comment:8/1520481411360460</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42796" title="Docs: Improve documentation for `add_meta_boxes` and `do_meta_boxes` ..."&gt;42796&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;add_meta_boxes&lt;/code&gt; and &lt;code&gt;do_meta_boxes&lt;/code&gt; actions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danieltj, johnbillion, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43229" title="#43229: defect (bug): Documentation for add_meta_boxes hook is incorrect (closed: fixed)"&gt;#43229&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42796]: Docs: Improve documentation for `add_meta_boxes` and `do_meta_boxes` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:56:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42796</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42796/1520481410903153</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;add_meta_boxes&lt;/code&gt; and &lt;code&gt;do_meta_boxes&lt;/code&gt; actions.
&lt;/p&gt;
&lt;p&gt;
Props danieltj, johnbillion, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43229" title="#43229: defect (bug): Documentation for add_meta_boxes hook is incorrect (closed: fixed)"&gt;#43229&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43229 (Documentation for add_meta_boxes hook is incorrect) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43229#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43229#comment:7/1520481397887954</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42505 (Docblock improvements for 5.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42505#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42505#comment:25/1520481145145000</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42795" title="Docs: Document globals in `wp-admin/revision.php` as `@global` instead ..."&gt;42795&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Document globals in &lt;code&gt;wp-admin/revision.php&lt;/code&gt; as &lt;code&gt;@global&lt;/code&gt; instead of &lt;code&gt;@param&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42795]: Docs: Document globals in `wp-admin/revision.php` as `@global` instead ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Mar 2018 03:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42795</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42795/1520481144050588</guid>
      <description>&lt;p&gt;
Docs: Document globals in &lt;code&gt;wp-admin/revision.php&lt;/code&gt; as &lt;code&gt;@global&lt;/code&gt; instead of &lt;code&gt;@param&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42505" title="#42505: task (blessed): Docblock improvements for 5.1 (new)"&gt;#42505&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Mar 2018 01:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495#comment:1/1520474307491057</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1520474305000164"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43495 (Use Semantic Versioning for releases) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 01:57:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43495</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43495/1520474241361154</guid>
      <description>&lt;p&gt;
Via todays #core dev-chat: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1520470243000286&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://profiles.wordpress.org/dd32"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Dion&lt;/a&gt; wrote:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;4.10 instead of a 5.0 isn‚Äôt likely to work very well, other than the fact that it moves us from using decimal versioning to semantic versioning, I feel we might have some locations where we expect a branch is 3 digits, but that might not be the case. If it‚Äôs simply to avoid the &lt;code&gt;5&lt;/code&gt; number because we‚Äôve suddenly decided the first digit is actually special, then maybe it‚Äôs time to set a plan in place to adopt semantic versioning over the next few releases.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Background context: The question was posed, can a release numbered &lt;code&gt;4.10.0&lt;/code&gt; be released as a &lt;em&gt;major&lt;/em&gt; version instead of a &lt;em&gt;minor&lt;/em&gt; version
&lt;/p&gt;
&lt;p&gt;
What is Semantic Versioning?: &lt;em&gt;Semantic Versioning is a formal convention for specifying compatibility using a three-part version number: &lt;/em&gt;major&lt;em&gt; version; &lt;/em&gt;minor&lt;em&gt; version; and &lt;/em&gt;patch&lt;em&gt;.&lt;/em&gt;  &lt;a class="ext-link" href="https://semver.org/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://semver.org/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 08 Mar 2018 01:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:5/1520470997414590</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Via &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/03/feature-project-proposal-notifications-api/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://make.wordpress.org/core/2016/10/03/feature-project-proposal-notifications-api/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://profiles.wordpress.org/johnbillion"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;John Blackbourn&lt;/a&gt; writes:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Feature Project Proposal: Notifications API&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Most of the situations where WordPress sends an outgoing email can be classified as a notification. X just happened on your website and you should be aware of it.
&lt;/p&gt;
&lt;p&gt;
Back when WordPress was a youngster, the only way to reliably notify a user was via email. In 2016 we have many more options, including push notifications to mobile platforms, desktop notifications to browsers, messages to chat apps, endless services via webhooks, SMS messages, or even notifications in the WordPress admin area. The list goes on. For many users, email is no longer the optimal delivery mechanism for ephemeral notifications.
&lt;/p&gt;
&lt;p&gt;
To that end, let‚Äôs think about replacing &lt;code&gt;wp_mail()&lt;/code&gt; with a modern API that allows developers to route notifications to services other than email, allow them to better modify notifications and the way in which they‚Äôre formatted, and allow them to do so without stepping on each others‚Äô toes.
&lt;/p&gt;
&lt;p&gt;
The current lack of a notifications API (or even an email sending API) can be easily summed up:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;Problem: Plugin A wants to provide HTML emails, and Plugin B wants to send emails via an email delivery service such as Mandrill. Plugin C wants to disregard emails and send Slack notifications. It‚Äôs very difficult for these to co-exist.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;strong&gt;Notification Destinations&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
There are only two types of destination for a notification in WordPress. Most notifications are actually notifications to a user account that get delivered via email because it‚Äôs the only contact information available for every user account. The remaining notifications are explicitly notifications to an email address rather than a user account (or not yet attached to a user account), such as when a user signs up for a blog and needs to click a confirmation link before their user account gets created.
&lt;/p&gt;
&lt;p&gt;
With this in mind, you might be able to imagine a notification class in WordPress core that defaults to delivering notifications via email, but which can be extended by a plugin on a per-user and per-notification basis to deliver notifications via any of the means listed above. WordPress core would support delivery via email and provide the API that allows plugins to implement delivery via other means.
&lt;/p&gt;
&lt;p&gt;
With a well-designed API, multiple plugins can co-exist in order to deliver different notifications via different mechanisms, format email notifications as HTML, easily disable notifications, change the delivery mechanism for email notifications, or provide a UI for users to manage their notification preferences and destinations.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Planning a Notifications API&lt;/strong&gt;
I‚Äôd like to begin work on a feature project with the intent of designing and implementing such an API. I‚Äôd like to get input from authors of existing plugins that provide functionality such as delivering notifications via a service other than email, that override the default email delivery mechanism, or that implement extra notifications (such as e-commerce sale notifications), in order that the API can be backwards compatible and that we can get some plugin implementations built during the API‚Äôs development.
&lt;/p&gt;
&lt;p&gt;
I already have some technical ideas regarding how the API might look, but I‚Äôm conscious that such an API needs to be well-designed before anyone jumps into writing code. Maybe we can even try some test-driven development? Who knows.
&lt;/p&gt;
&lt;p&gt;
In addition, consultation and involvement with the team that are working on &lt;a class="ext-link" href="https://make.wordpress.org/core/tag/two-factor/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;the two-factor authentication feature project&lt;/a&gt; is important as it implements several delivery mechanisms for 2FA codes that could potentially be made simpler with a notifications API.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Note: &lt;em&gt;There &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/10/03/feature-project-proposal-notifications-api/#comment-31197"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;are comments&lt;/a&gt; from the above post discussing the proposal further, what's relevant and related should also be bought into the discussion here on this ticket&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Thu, 08 Mar 2018 00:00:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:9/1520467227859063</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Log confirmed requests and perhaps show them on the dashboard
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was thinking about this a bit more: instead of deleting the confirmation token from the DB perhaps we can set a "confirmed" status on it and keep it until the action is performed?
&lt;/p&gt;
&lt;p&gt;
Also, may be better to have a permanent log. Perhaps we can make a new private CPT (without editor, terms, revisions, etc. support) that will hold the log. Then can use postmeta to store the tokens on it. After the action is performed can add a row with the date and type of action but not the user email so it is anonymous.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like the idea of a privacy actions log, but since that may lead us to having to have a separate db table, I recommend we break that out into a separate issue and implement this issue as a priority without that sub-feature.
&lt;/p&gt;
&lt;p&gt;
A privacy actions to-do-list/log could be useful for demonstrating compliance or even just for knowing who did what and when. I don't get the impression from Article 30 or Recital 82 that the GDPR requires this to be automated or electronically held however, so I recommend a lower priority for privacy actions logging, but IANAL.
&lt;/p&gt;
&lt;p&gt;
Maybe for V1 we just leave request tracking to the administrator(s) and their email inbox :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 23:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:6/1520466609046713</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43494 (Can't change/delete menu items in Customizer on mobile) created</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Wed, 07 Mar 2018 23:30:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43494/1520465418724134</guid>
      <description>&lt;p&gt;
On mobile/tablet browser (only Android, Chrome browser tested), menu items can be added and reorganized, but the drop-down toggle for further options doesn't work. As a result menu items cannot be removed.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Log in to admin in mobile / tablet browser
&lt;/li&gt;&lt;li&gt;Go to Customizer -&amp;gt; Menus
&lt;/li&gt;&lt;li&gt;Add menu item to a menu
&lt;/li&gt;&lt;li&gt;Attempt to edit / delete menu item
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Originally reported by community user Sue Jenkins on Twitter: &lt;a class="ext-link" href="https://twitter.com/LuckychairNews/status/969682449176211456"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://twitter.com/LuckychairNews/status/969682449176211456&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 23:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:8/1520464180435094</guid>
      <description>&lt;p&gt;
@danieltj I can easily argue about 'personal data' in the way of: it's my server, my localhost/pc so yes PHP version is my personal data basically as it's on my personal computer, you have to inform me that you want it.
&lt;/p&gt;
&lt;p&gt;
As for the updates themselves, if these data are actually needed for the update to happen for some reason that is unclear to me at the moment, the idea of the Regulation and the whole Privacy is to inform me first so I can decide on my own to at least just cancel the update process if I like. If you tell me that I can already define that on my wp-config, we have to make it possible for the Dumb &amp;amp; Dubmer pretty much so wp-config is out of the question :D and it should be given by a simple on/off switch within the admin area.
&lt;/p&gt;
&lt;p&gt;
The point &amp;amp; difference here is that all of these are already happening with either hooks or plugins or anything else you can think of. Why not happen within Core itself to be 100% perfect and give the end user the functionality / reassurance needed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:5/1520463512879626</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43438#comment:4" title="Comment 4"&gt;jesperher&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead of returning arrays, would it be a safer approach, to use objects, like in WooCommerce and adding items to cart dynamicly ?
&lt;/p&gt;
&lt;p&gt;
like
$object-&amp;gt;add_callback('plugin_slug','callback');
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Instead of using a filter to register our callback, we could certainly use a global method, like core does today with things like register_post_type.
&lt;/p&gt;
&lt;p&gt;
I do appreciate what you proposed is not entirely dissimilar from the approach your GDPRWP project is using by having plugins call methods on an instance of GdprToolbox, but I don't think calling instance methods will be as familiar to your average plugin developer as using a filter or calling a global method.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:71/1520463047870450</guid>
      <description>&lt;p&gt;
I have to drop PHP 5.2 support in [Caldera Forms](&lt;a class="ext-link" href="https://wordpress.org/plugins/caldera-forms"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/plugins/caldera-forms&lt;/a&gt;) in order to remove a function that is deprecated in PHP 5.2 - &lt;a class="ext-link" href="https://github.com/CalderaWP/Caldera-Forms/issues/2335"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/CalderaWP/Caldera-Forms/issues/2335&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Right now I'm stuck between telling users who are on the right version of to downgrade because there are a few thousands or tens of thousands, I don't know, sites on PHP 5.2 that I could break. These are bad choices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:8/1520462563137271</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520462560000141"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:7/1520461998856490</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not a GDPR expert here by any means, but the data sent in the request wouldn't class as personal information and as such, doesn't matter if it's sent to WordPress.org, does it? Either way, this is integral in ensuring that the site gets security updates (and other feature updates).
&lt;/p&gt;
&lt;p&gt;
This can be somewhat remedied by disabling updates for your site, in which case the request data doesn't need filtering because it's never sent? Or is it sent first but the update is blocked? I haven't checked how Core fully does updates from start to finish.
&lt;/p&gt;
&lt;p&gt;
The biggest problem I see with this is a big rewrite on how updates are performed because ideally you want to prevent an update site-side before the data is compiled and sent to WordPress.org's API to check the request data to see if the site is eligible for the update. This is a very tricky issue for sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38418 (Add telemetry (aka usage data collection) as opt-in feature in core) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38418#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38418#comment:24/1520461708132092</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520461704000587"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40677 (Widgets page is not accessible for keyboard users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40677#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40677#comment:14/1520461599786769</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42794" title="Accessibility: Widgets: Make the &amp;#34;Available Widgets&amp;#34; section operable ..."&gt;42794&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Widgets: Make the "Available Widgets" section operable with a keyboard.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a number of years, the "Available Widgets" section has been off-limits for&lt;br /&gt;
keyboard users. Now it can be used also with the keyboard. This change introduces&lt;br /&gt;
also some improvements for assistive technologies.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;makes the widget toggles focusable and adds an &lt;code&gt;aria-expanded&lt;/code&gt; attribute to indicate their state
&lt;/li&gt;&lt;li&gt;improves the toggles labelling to clarify context (add/edit)
&lt;/li&gt;&lt;li&gt;changes the controls to choose a sidebar from list items to buttons
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-label&lt;/code&gt; attribute to the buttons to clarify their purpose
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-pressed&lt;/code&gt; attribute to the buttons to indicate which one is selected
&lt;/li&gt;&lt;li&gt;improves color contrast of the selected button
&lt;/li&gt;&lt;li&gt;uses a &lt;code&gt;wp.a11y.speak()&lt;/code&gt; message to announce to screen reader users when a widget has been added to a sidebar
&lt;/li&gt;&lt;li&gt;moves focus back to the toggle button when closing a widget
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/40677" title="#40677: defect (bug): Widgets page is not accessible for keyboard users (assigned)"&gt;#40677&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42794]: Accessibility: Widgets: Make the "Available Widgets" section operable ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42794</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42794/1520461599254785</guid>
      <description>&lt;p&gt;
Accessibility: Widgets: Make the "Available Widgets" section operable with a keyboard.
&lt;/p&gt;
&lt;p&gt;
For a number of years, the "Available Widgets" section has been off-limits for
keyboard users. Now it can be used also with the keyboard. This change introduces
also some improvements for assistive technologies.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;makes the widget toggles focusable and adds an &lt;code&gt;aria-expanded&lt;/code&gt; attribute to indicate their state
&lt;/li&gt;&lt;li&gt;improves the toggles labelling to clarify context (add/edit)
&lt;/li&gt;&lt;li&gt;changes the controls to choose a sidebar from list items to buttons
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-label&lt;/code&gt; attribute to the buttons to clarify their purpose
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-pressed&lt;/code&gt; attribute to the buttons to indicate which one is selected
&lt;/li&gt;&lt;li&gt;improves color contrast of the selected button
&lt;/li&gt;&lt;li&gt;uses a &lt;code&gt;wp.a11y.speak()&lt;/code&gt; message to announce to screen reader users when a widget has been added to a sidebar
&lt;/li&gt;&lt;li&gt;moves focus back to the toggle button when closing a widget
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/40677" title="#40677: defect (bug): Widgets page is not accessible for keyboard users (assigned)"&gt;#40677&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:25:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:6/1520461530341121</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520461527000253"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:7/1520461256426245</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core by voldemortensen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520461253000520"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:4/1520460917258495</guid>
      <description>&lt;p&gt;
Added a reviewed UI proposal.
Added a requests tab with what I think the requests table should look like. Or something similar to that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43481.1.diff attached to Ticket #43481</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:14:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.diff/1520460844210363</guid>
      <description>&lt;p&gt;
Revision of xkon initial pass and adding sample request tables
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:70/1520460734781122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #meta by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1520460732000360"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43493 (with date format 'c', the_time() and get_the_time() print wrong time ...) created</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43493</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43493/1520460634428848</guid>
      <description>&lt;p&gt;
With the date format &lt;code&gt;'c'&lt;/code&gt;, &lt;code&gt;the_time()&lt;/code&gt; and &lt;code&gt;get_the_time()&lt;/code&gt; print the wrong time zone offset. They print &lt;code&gt;+00:00&lt;/code&gt;, even though the time shown is in local time, not GMT/UTC.
&lt;/p&gt;
&lt;p&gt;
Example (inside the loop):
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( [
  get_option( 'gmt_offset' ),
  get_option( 'timezone_string' ),
  get_the_time( 'c' ),
  get_post_time( 'c', false ),
  get_post_time( 'c', true )
] );
&lt;/pre&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array (size=5)
  0 =&amp;gt; float -5
  1 =&amp;gt; string 'America/New_York' (length=16)
  2 =&amp;gt; string '2018-01-09T15:02:17+00:00' (length=25) // get_the_time( 'c' ); offset wrong
  3 =&amp;gt; string '2018-01-09T15:02:17+00:00' (length=25) // get_post_time( 'c', false ); offset wrong
  4 =&amp;gt; string '2018-01-09T20:02:17+00:00' (length=25) // correct
&lt;/pre&gt;&lt;p&gt;
Implementation
&lt;code&gt;the_time()&lt;/code&gt; calls &lt;code&gt;get_the_time()&lt;/code&gt;, which calls &lt;code&gt;get_post_time()&lt;/code&gt; with &lt;code&gt;$gmt&lt;/code&gt; set to&lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43480" title="#43480: enhancement: Add $gmt parameter to the_time() function (closed: worksforme)"&gt;#43480&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>kevinwhoffman</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:5/1520459357057029</guid>
      <description>&lt;p&gt;
It would be helpful to clarify what, if any, information that is currently available in the Advanced View of a Plugin page would be affected by requiring an opt in.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/jetpack/advanced/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/plugins/jetpack/advanced/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Active installations
Active versions
Downloads per day
Active install growth
Downloads history
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43487 (WordPress admin list of pages section hangs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43487#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43487#comment:3/1520458690873642</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:27/1520458117931466</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@allendav Tested and re-tested here, it seems seamless and superb from what I saw.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:4/1520457678346419</guid>
      <description>&lt;p&gt;
This is closely related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38418" title="#38418: feature request: Add telemetry (aka usage data collection) as opt-in feature in core (closed: wontfix)"&gt;#38418&lt;/a&gt; which proposes a new robust and transparent opt-in system for telemetry. Lots of history around this ticket:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wptavern.com/wordpress-telemetry-proposal-addresses-long-standing-privacy-concerns-as-gdpr-compliance-deadline-looms"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wptavern.com/wordpress-telemetry-proposal-addresses-long-standing-privacy-concerns-as-gdpr-compliance-deadline-looms&lt;/a&gt;
&lt;a class="ext-link" href="https://mor10.com/the-case-for-wordpress-telemetry/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://mor10.com/the-case-for-wordpress-telemetry/&lt;/a&gt;
&lt;a class="ext-link" href="https://mor10.com/case-telemetry-wordpress/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://mor10.com/case-telemetry-wordpress/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>mattrad</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:3/1520457289480453</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16778" title="#16778: enhancement: wordpress is leaking user/blog information during wp_version_check() (closed: fixed)"&gt;#16778&lt;/a&gt; for history and discussion around this issue.
&lt;/p&gt;
&lt;p&gt;
I'd be more than happy if I had to retire my Update Privacy plugin :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43435.4.diff attached to Ticket #43435</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:01:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.4.diff/1520456497152404</guid>
      <description>&lt;p&gt;
Localize, remove CSS, replace AJAX with action to create privacy policy page, don't timestamp page slug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:6/1520456308917846</guid>
      <description>&lt;p&gt;
I made a thing.
&lt;a class="ext-link" href="https://github.com/voldemortensen/WordPress-Update-Tests"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/voldemortensen/WordPress-Update-Tests&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Currently, it just runs through every version back to 3.7 and runs &lt;code&gt;wp core update &amp;lt;url to update zip&amp;gt;&lt;/code&gt;, but it would be easy to expand on this. Of course, run.pl will need to be converted to PHP, Perl is just my go to language.
&lt;/p&gt;
&lt;p&gt;
In run.pl, instead of running &lt;code&gt;wp core update &amp;lt;url&amp;gt;&lt;/code&gt;, we could run &lt;code&gt;wp eval '//update code'&lt;/code&gt; or any sort of custom thing really.
&lt;/p&gt;
&lt;p&gt;
The first run takes awhile as it has to build custom images, but once those are cached it moves pretty quickly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:2/1520456148177758</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40677 (Widgets page is not accessible for keyboard users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40677#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40677#comment:13/1520456093990960</guid>
      <description>&lt;p&gt;
I'm going to commit the first part related to the "Available Widgets" section because it's a good improvement. Screenshot of the visual changes (darker blue for the selected item, underline for the focused item):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/eEgnTEyoGV.png"&gt;&lt;img src="https://cldup.com/eEgnTEyoGV.png" alt="https://cldup.com/eEgnTEyoGV.png" crossorigin="anonymous" title="https://cldup.com/eEgnTEyoGV.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Still to do:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;headings for the available Sidebars
&lt;/li&gt;&lt;li&gt;Add a link "Deactivate" next to the "Delete" one
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:39:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:1/1520455194244023</guid>
      <description>&lt;p&gt;
Similar to this plugin perhaps, that was shared in the #gdpr-compliance channel on Slack:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://en-gb.wordpress.org/plugins/update-privacy/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://en-gb.wordpress.org/plugins/update-privacy/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) created</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:37:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492/1520455073482612</guid>
      <description>&lt;p&gt;
It has been discussed on the #gdpr-compliance and the question had made it's cycle around some other rooms with various replies as well occasionally but it's time to take a final decision.
&lt;/p&gt;
&lt;p&gt;
When WordPress requests updates it sends more than enough data needed to actually perform the update.
&lt;/p&gt;
&lt;p&gt;
We did a search a bit at some point to take a glimpse of the past and how all those got added in there and why but couldn't find anything specific.
&lt;/p&gt;
&lt;p&gt;
There's already a way to modify the call through &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/core_version_check_query_args/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://developer.wordpress.org/reference/hooks/core_version_check_query_args/&lt;/a&gt; (and may be more as well) but the concept here is to have everything off by default and add a proper UI and opt-in for the Admins to select what exactly they want to send.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:3/1520453337329534</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/43481_first_pass.patch" title="Attachment '43481_first_pass.patch' in Ticket #43481"&gt;43481_first_pass.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/43481_first_pass.patch" title="Download"&gt;‚Äã&lt;/a&gt; creates a UI like &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/privacy_rows.jpg" title="Attachment 'privacy_rows.jpg' in Ticket #43481"&gt;privacy_rows.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/privacy_rows.jpg" title="Download"&gt;‚Äã&lt;/a&gt; to be extended by @fclaussen as it was discussed on slack.
&lt;/p&gt;
&lt;p&gt;
Note: reminder that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; has to be committed first and then we'll rework this to get it in as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:1/1520453244551359</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) created</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:06:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491/1520453195939971</guid>
      <description>&lt;ol&gt;&lt;li&gt;Install WordPress
&lt;/li&gt;&lt;li&gt;Add a Privacy Policy page just like Sample Page. Possibly add a special page status like 'front-page' 'blog posts'
&lt;/li&gt;&lt;li&gt;Add a privacy policy selector to options-reading or customizer like front page and blog posts
&lt;/li&gt;&lt;li&gt;Under tools we have the actual tools for exporting user data, anonymization of data and so on.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
What I'm proposing is that this type of page is important. Specially now. So we need to pay proper attention to it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43481_first_pass.patch attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:04:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481_first_pass.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481_first_pass.patch/1520453073277784</guid>
      <description>&lt;p&gt;
first pass on the UI
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:26/1520451828839242</guid>
      <description>&lt;p&gt;
I'm good with everything you mention ( It was just my cranky early-morning way of doing things ).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:27/1520451659469592</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42793" title="Accessibility: Networks and Sites: mark the New Site required form ..."&gt;42793&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Networks and Sites: mark the New Site required form fields as required.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, adds an &lt;code&gt;aria-describedby&lt;/code&gt; attribute to associate the Admin Email field with its description.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dipesh.kakadiya, jackreichert, rianrietveld.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37331" title="#37331: defect (bug): New site form has non-required fields that have to be filled in (closed: fixed)"&gt;#37331&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42793]: Accessibility: Networks and Sites: mark the New Site required form ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:40:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42793</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42793/1520451658973373</guid>
      <description>&lt;p&gt;
Accessibility: Networks and Sites: mark the New Site required form fields as required.
&lt;/p&gt;
&lt;p&gt;
Also, adds an &lt;code&gt;aria-describedby&lt;/code&gt; attribute to associate the Admin Email field with its description.
&lt;/p&gt;
&lt;p&gt;
Props dipesh.kakadiya, jackreichert, rianrietveld.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37331" title="#37331: defect (bug): New site form has non-required fields that have to be filled in (closed: fixed)"&gt;#37331&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:26/1520451429889067</guid>
      <description>&lt;p&gt;
Note: the patch keeps &lt;code&gt;novalidate="novalidate"&lt;/code&gt; on the form, so the added &lt;code&gt;required&lt;/code&gt; attributes will &lt;em&gt;not&lt;/em&gt; trigger HTML5 browser validation. I'd tend to think using browser validation is a decision that should be made for all the forms in WordPress, and would probably need some discussion and consensus.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:25/1520451317568602</guid>
      <description>&lt;p&gt;
@xkon : If we don't specify the slug, wp_insert_post will work anyways and manage/version any slug - I recommend removing it
&lt;/p&gt;
&lt;p&gt;
A few other comments on the patch:
&lt;/p&gt;
&lt;p&gt;
1) Lets use &lt;code&gt;__( 'Privacy Policy' )&lt;/code&gt; for the post_title argument to wp_insert_post
&lt;/p&gt;
&lt;p&gt;
2) Do we really need the incremental complexity of AJAX for this part? How about just another form+button that posts a create-privacy-page action in a similar manner to how tools-privacy.php (in this patch) currently handles the set-privacy-page action? We can then have add_settings_error emit something like "Privacy policy page created successfully" similar to how the updated action does. If we get rid of the AJAX, the little bit of CSS can go too.
&lt;/p&gt;
&lt;p&gt;
AJAX will be needed later, certainly, for things like exporting or removing a user's personal data, but let's not bother with it for this, ok?
&lt;/p&gt;
&lt;p&gt;
3) Let's keep the view/edit link (if a page is selected) but it needs to be localized. Let's keep the jQuery in the file but just have it hide the view/edit link if the user changes the selected page in the dropdown (i.e. 1) to avoid confusion by having the link no longer link to the page displayed in the SELECT and 2) to avoid people not saving their changes
&lt;/p&gt;
&lt;p&gt;
Mind if I submit a 43435.4 with those changes?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:25/1520451143265266</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37331/37331.2.diff" title="Attachment '37331.2.diff' in Ticket #37331"&gt;37331.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37331/37331.2.diff" title="Download"&gt;‚Äã&lt;/a&gt; adds a translator comment and minor coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37331.2.diff attached to Ticket #37331</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:28:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37331/37331.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37331/37331.2.diff/1520450926106223</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:24/1520450538213529</guid>
      <description>&lt;p&gt;
@allendav
&lt;/p&gt;
&lt;p&gt;
I just added this so we can always have a unique page just in case. Might not be the best option but I don't know another way. They can always go later on and change the slug if they don't like it. We are only doing it for the 'ID' either way, it was an easy trick I thought to avoid conflicts in the case of an existing identical 'slug'. Some sites might already have pages named 'privacy-policy' 'privacy-policy-page' or whatever else we could've thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:23/1520450289221964</guid>
      <description>&lt;p&gt;
@xkon wrote:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A page is simply put in by our code with a slug of like 'privacy-policy-{$timestamp}' so it's always unique.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You had me up to &lt;code&gt;-{$timestamp}&lt;/code&gt; - why do that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43489 (Strengthen resilience of wp_register_plugin_realpath to support Gutenberg) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Mar 2018 18:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43489#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43489#comment:1/1520447773284729</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43489 (Strengthen resilience of wp_register_plugin_realpath to support Gutenberg) created</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Wed, 07 Mar 2018 18:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43489/1520447125852301</guid>
      <description>&lt;p&gt;
For many years now I've been working in a Windows development environment with multiple subdirectory installs referencing plugins using symlinks.
&lt;/p&gt;
&lt;p&gt;
Every now and then I get problems due to plugin files apparently not being present when they quite clearly are. I have not been able to track it down. I think it's a bug in PHP associated with OpCache.
&lt;/p&gt;
&lt;p&gt;
Anyway, the bottom line is that sometimes this problem, or something similar, results in the &lt;code&gt;$wp_plugin_paths&lt;/code&gt; array containing entries with a null value for &lt;code&gt;$realdir&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This can lead to the following:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Warning: strpos(): Empty needle in C:\apache\htdocs\hm\wp-includes\plugin.php on line 658.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This message has the uncanny knack of happening at the most inappropriate times.
&lt;/p&gt;
&lt;p&gt;
Now, with Gutenberg looming, the problem is further reducing my ability to create content locally; Gutenberg can't handle the unexpected Warnings and Notices from a development server and fails. See &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/5439"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/5439&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
To reduce the likelihood of the problem I'd like to propose a change to &lt;code&gt;wp_register_plugin_path()&lt;/code&gt; to cater for a false value being returned from the &lt;code&gt;realpath()&lt;/code&gt; PHP function.
&lt;/p&gt;
&lt;p&gt;
The proposal being that if &lt;code&gt;$plugin_realpath&lt;/code&gt; does appear to be null, then don't add an entry in &lt;code&gt;$wp_plugin_paths&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This change will prevent the warning message being issued from plugin_basename()'s test
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( strpos( $file, $realdir ) === 0 ) {
&lt;/pre&gt;&lt;p&gt;
and therefore increases the robustness of the system.
&lt;/p&gt;
&lt;p&gt;
Bottom line.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;realpath()&lt;/code&gt; may return false.
&lt;/li&gt;&lt;li&gt;This should be catered for.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:17/1520444864916065</guid>
      <description>&lt;p&gt;
From what I gather this means PUTing to &lt;code&gt;/wp/v2/posts&lt;/code&gt; with &lt;code&gt;{ is_autosave: true }&lt;/code&gt; will not necessarily update the item but could instead actually create a new autosave revision for the user. I think this is a very bad idea, because a PUT update to an object should update the object. Breaking that fundamental assumption is creating inconsistent design. If doing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var post = new wp.api.models.Post();
post.set( 'title', 'autosave test' );
post.save();
post.set( 'status', 'publish' );
post.save();
post.set( 'title', 'updated autosave test' );
post.save( { is_autosave: true } );
&lt;/pre&gt;&lt;p&gt;
actually creates a new post in the DB, and that can be fetched via &lt;code&gt;/revisions&lt;/code&gt; then it doesn't make sense (IMO). We should be creating a new revision (with an autosave flag if needed) at &lt;code&gt;/revisions&lt;/code&gt;. The Core behaviour is kinda weird (updates unpublished posts, but creates auto saves for published) which I think would be best left to client implementation to handle, rather than baking this into the endpoint. It breaks assumptions around PUT to &lt;code&gt;object&lt;/code&gt; causes an update, POST to &lt;code&gt;/posts&lt;/code&gt; creates an object, etc.
&lt;/p&gt;
&lt;p&gt;
I think the idea of using &lt;code&gt;autosave&lt;/code&gt; for the post_type might be been discarded, but if not I'd say similar things about that. No need to use an existing field, I think it's likely to just increase complexity rather than a dedicates field on &lt;code&gt;/revisions&lt;/code&gt; for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:2/1520444350283203</guid>
      <description>&lt;p&gt;
@idea15 's article &lt;a class="ext-link" href="https://www.connected-uk.com/gdpr-for-business-owners-senior-executives/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://www.connected-uk.com/gdpr-for-business-owners-senior-executives/&lt;/a&gt; makes me understand that users DON'T universally have the right to erasure, so site administrator approval should be given before erasing their data.
&lt;/p&gt;
&lt;p&gt;
Specifically, she said
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The RTBF (Right-to-be-forgotten) is not a get-out-of-jail card, nor is it means of censoring difficult or embarrassing information. The RTBF can only be invoked if: The personal data is no longer necessary;...there is no legitimate processing need which overrides their request...
Even then, the right to erasure is not automatic. A company may continue to hold and processing data about an individual if they still have a legal basis for doing so and can continue processing that data for its original purpose. (In other words, you can‚Äôt RTBF your credit card bill.)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:16/1520443950811437</guid>
      <description>&lt;p&gt;
After talking through this with @joehoyle, my main question is around how this behaves in situations where you are saving an autosave of a post type which does not support revisions? I suspect he has additional feedback to share soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43488 (Debug backtrace doesn‚Äôt capture hook name for do_action_ref_array) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43488#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43488#comment:1/1520442409539804</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Added_do_action_ref_array_to_hook_functions_in_trace_capture_.patch attached to Ticket #43488</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43488/Added_do_action_ref_array_to_hook_functions_in_trace_capture_.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43488/Added_do_action_ref_array_to_hook_functions_in_trace_capture_.patch/1520442384000391</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43488 (Debug backtrace doesn‚Äôt capture hook name for do_action_ref_array) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43488/1520442359777556</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt; is currently hardcoded to treat &lt;code&gt;do_action()&lt;/code&gt; and &lt;code&gt;apply_filters()&lt;/code&gt; as special output case with invoked hook name appended.
&lt;/p&gt;
&lt;p&gt;
It misses to do the same for &lt;code&gt;do_action_ref_array()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42860 (PHP 7.2 warning - Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42860#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42860#comment:25/1520441648374310</guid>
      <description>&lt;p&gt;
Is this really fixed? I'm still getting this warning in sites under WP 4.9.4 and PHP 7.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43432 (Streamline tests with installation skips) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43432#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43432#comment:4/1520441357461270</guid>
      <description>&lt;p&gt;
I love the idea of speeding up the process. I didn't notice any difference after applying the patch and using &lt;code&gt;WP_TESTS_SKIP_INSTALL=1&lt;/code&gt;, though.
&lt;/p&gt;
&lt;p&gt;
I'll try to find some time to dig into it and see if I'm doing something wrong, or if there are some other conditions needed for it to work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #42713,‚Äã43485 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42713%2C43485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42713%2C43485/1520441274166650</guid>
      <description>duplicate: &lt;p&gt;
Hi @jinyu121, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42713" title="#42713: defect (bug): Users list does not display name if Last Name empty (closed: fixed)"&gt;#42713&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:47:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:14/1520441253055897</guid>
      <description>&lt;p&gt;
@wpmarkuk Correct: unticked by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>wpmarkuk</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:45:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:13/1520441154389721</guid>
      <description>&lt;p&gt;
Is the plan that this would be checked by default? I ask only because I am pretty sure that with GPDR consent works the other way and you have to actively consent by clicking checking the checkbox?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42282 (Provide means of executing PHPUnit continuously over watched files in ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42282#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42282#comment:19/1520441119252347</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42282#comment:18" title="Comment 18"&gt;soulseekah&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you think we should pass on a &lt;code&gt;--filter&lt;/code&gt; as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like that idea, or maybe we could even support arbitrary PHPUnit args instead of a whitelist? I haven't checked if that would have some potential conflicts with Grunt arguments, though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43486 (The Problem with HTML and wpautop) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43486#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43486#comment:1/1520440161197699</guid>
      <description>&lt;p&gt;
Hi @jim5471, welcome to WordPress Trac! Thanks for the ticket.
&lt;/p&gt;
&lt;p&gt;
There are plugins like &lt;a class="ext-link" href="https://wordpress.org/plugins/raw-html/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Raw HTML&lt;/a&gt; that might be helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43448 (Document $wp_registered_sidebars global in wp_map_sidebars_widgets()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:27:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43448#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43448#comment:3/1520440035410076</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>jesperher</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:4/1520439771325912</guid>
      <description>&lt;p&gt;
Instead of returning arrays, would it be a safer approach, to use objects, like in WooCommerce and adding items to cart dynamicly ?
&lt;/p&gt;
&lt;p&gt;
like
$object-&amp;gt;add_callback('plugin_slug','callback');
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43056 (Notice in redirect_guess_404_permalink() when post type is an array) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43056#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43056#comment:3/1520438879828166</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42942 (Provide a post_date_column_time hook for media files) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:07:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42942#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42942#comment:3/1520438832120289</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:4/1520438207583230</guid>
      <description>&lt;p&gt;
Thanks for the feedback feedback so far!
&lt;/p&gt;
&lt;p&gt;
For this PoC, I looked at the wordpress.com notification center, Facebook, Google, Meistertask, Instagram and in general my mental modal of expectations for a notification center. Speaking for myself, I generally prefer simplicity, so the filtering and second expanding sidebar on .com are a bit much, and I appreciate being able to clear the badge asap on facebook, which is why I added the Mark As Read. But hopefully for WP the notifications will be a lot more useful and relevant, so I can see that we move that somewhere else, or just remove it for MVP and make it depend on whether you take action on a notification or maybe look at it for 3-5 seconds. A settings icon would be useful too I'm sure, left it out in the PoC as I didn't have any settings in mind yet.
&lt;/p&gt;
&lt;p&gt;
I'll make a more detailed breakdown of pros and cons of other notification centers, so we can have informed discussions about the separate features.
&lt;/p&gt;
&lt;p&gt;
It may indeed be a good call to start off giving just WP itself access to this. This gives plugin authors time to think about how they can integrate without having to scramble right away because their admin notices now look crappy when frankensteined into that sidebar. That's what I mean with backwards compatibility: introducing the notification center once it has been fully thought out also requires an exit strategy for admin notices, since those can be huge and filled with custom styling and whatnot, which wouldn't translate 1-to-1 to the new notification properties per se.
&lt;/p&gt;
&lt;p&gt;
Regarding the more technical side of notifications, Riad said (in relation to his PoC plugin):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As a V1, I built as a client-side API trying to provide a compatibility layer with existing notices. So client-side code could trigger notifications but without any persistence. I think we should make this step work well to catch all the plugins notifications etc. I was thinking of checking the way these notifications are generated right now in PHP and if there‚Äôs APIs and common ways to do it, and try to provide some kind of backwards compatibility with this plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once this work well, I think we can start thinking about a backend API and a persistence layer. Something like ‚Äúkeep the last 100 notifications persisted‚Äù, ‚ÄúProvide a way to trigger notification from the backend‚Äù,  ‚ÄúClient-side code could also create and persist notifications‚Äù (REST API?). =&amp;gt; this could be the V2.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I know Alain Schlesser and John Billion have ideas about this too. I'd say we first focus on the higher level concepts and architecture here, maybe defer some experimentation and prototyping to the plugin's repository.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #9864,‚Äã43487 batch updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=9864%2C43487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=9864%2C43487/1520436502922930</guid>
      <description>duplicate: &lt;p&gt;
Welcome to WordPress core trac.
&lt;/p&gt;
&lt;p&gt;
This seems to have been reported here &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/9864" title="#9864: defect (bug): Performance issues with large number of pages (assigned)"&gt;#9864&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
So I'm closing this one for now. You're welcome to join that ticket or reopen this one, if this is a different issue.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:3/1520436424879487</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've wanted something like this for ages to unify the notifications within WordPress and to once and for all do away with admin notices if it's possible at all. Something like the WordPress.com notifications centre would be good as it condenses everything down into one side panel and is easy to see.
&lt;/p&gt;
&lt;p&gt;
I can see the following setup for notifications in an API sense:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A notification ID (completely unique)
&lt;/li&gt;&lt;li&gt;Sender (either via Core, Plugin, Theme or User)
&lt;/li&gt;&lt;li&gt;Sent (YYYY-MM-DD HH-MM-SS)
&lt;/li&gt;&lt;li&gt;To (Array of User IDs)
&lt;/li&gt;&lt;li&gt;Read Status (read/unread)
&lt;/li&gt;&lt;li&gt;Message
&lt;/li&gt;&lt;li&gt;Expiries (a timestamp but if blank, until read)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A key concept here that I really like is a group notification function where a collection of users can receive the same notification such as a new comment or user signup etc.
&lt;/p&gt;
&lt;p&gt;
I think for backwards compatibility, an option to merge admin notices into the notifications section but split into notifications and notices so you still keep the list of notices as is, but split them out to remain less cluttered.
&lt;/p&gt;
&lt;p&gt;
A feature plugin is 100% the best way for this and I think I might be getting carried away with it, but this idea seems to be something that most people want. But as @karmatosed has rightly said, lets make sure that this is simple and too the point with the ability to extend functionality through hooks and plugins.
&lt;/p&gt;
&lt;p&gt;
From what I've seen on other sites, notifications are fairly linear and not usually complex in nature like categorises and priority. I think an approach like that is the best way because we have this problem with admin notices at the moment where you can end up in some instances having 5 that don't dismiss.
&lt;/p&gt;
&lt;p&gt;
Also changing to Users component as this is technically a user facing thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:22:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:2/1520436136030605</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cool feature and I am a huge fan of notification systems when useful but not shouty. This seems to be on the useful side :) Thanks for taking the time to work out a mock for this. The current state of messages across most areas of the interface is not optimal and this provides an opportunity to restructure that. I do note, with this we should maybe lock down areas, making this the place to use and encouraging better practices.
&lt;/p&gt;
&lt;p&gt;
What notification systems did you look at when considering the design? What can we learn from what others are doing inside/outside the WordPress space?
&lt;/p&gt;
&lt;p&gt;
There feels like a few things that are super useful to those managing a lot of things missing we could consider:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Filtering the notifications by that day, week and so on
&lt;/li&gt;&lt;li&gt;A link to adjust settings in header
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I wander how useful 'mark all as read' is. My concern is that's quite prominent placing for it. This could easily have a mistaken click and boom all go, not great user experience.
&lt;/p&gt;
&lt;p&gt;
I would also look to the notifications themselves. For example what is the visual hierarchy there:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Do we need to have bold and what are bold?
&lt;/li&gt;&lt;li&gt;Do we need time and is that too small or right placing?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
From a plugin perspective how do they add notifications? I assume this is code?
&lt;/p&gt;
&lt;p&gt;
To answer your direct questions:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we agree on a set of notification properties that provide a consistent experience and that plugin authors can be happy with?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We need to really distill down and build up. Maybe we firstly do not have open to plugins. Get it in and have it just for system, then add for plugins. I would advise this route.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Which notification categories can we define, and should it only ever be possible to assign a category, or are plugin authors allowed to supply icons for their own notifications too?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we need to limit this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How best to approach the backwards compatibility so we don‚Äôt break (all) existing admin notices? Can some type of conversion be made?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What would break? Could we eventually just move all to this?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it enough to only show the notifications in the sidebar, or should there be a separate notifications page, maybe with filtering? (Probably not for MVP at least)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we need to test this, it's an assumption I'm not comfortable making. We need a settings page for this and need to link wherever the notifications show.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43487 (WordPress admin list of pages section hangs) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:19:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43487#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43487#comment:1/1520435945102695</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43144 (Add a language icon next to language selectors) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:10:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43144#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43144#comment:6/1520435412240799</guid>
      <description>&lt;p&gt;
Adding this icon looks like a good visual aid.
&lt;/p&gt;
&lt;p&gt;
With the &lt;code&gt;aria-hidden="true"&lt;/code&gt; added to the span tag, I'm wondering about this approach:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label for="WPLANG"&amp;gt;&amp;lt;?php _e( 'Site Language' ); ?&amp;gt; &amp;lt;span aria-hidden="true" class="dashicons dashicons-translation"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/label&amp;gt;
&lt;/pre&gt;&lt;p&gt;
where we add a space between the &lt;em&gt;Site Language&lt;/em&gt; text and the span tag, similar to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40643" title="Accessibility: Add &amp;#34;(opens in a new window)&amp;#34; screen reader text to the ..."&gt;[40643]&lt;/a&gt;.
If we don't want the space, then it could be added via CSS as in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43144/43144.patch" title="Attachment '43144.patch' in Ticket #43144"&gt;43144.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43144/43144.patch" title="Download"&gt;‚Äã&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:24/1520435391409958</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43487 (WordPress admin list of pages section hangs) created</title>
      
        <dc:creator>heroic</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43487/1520435207094980</guid>
      <description>&lt;p&gt;
We recently imported 0.2 millions pages into our wordpress site, and the admin section for pages became unusable. I retraced the issue to the fact that wordpress happily makes queries at certain places which are not "limit"ed.
&lt;/p&gt;
&lt;p&gt;
Here's one example in wp-admin/includes/post.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;        if ( is_post_type_hierarchical( $post_type ) &amp;amp;&amp;amp; !isset($orderby) ) {
                $query['orderby'] = 'menu_order title';
                $query['order'] = 'asc';
                $query['posts_per_page'] = -1;
                $query['posts_per_archive_page'] = -1;
                $query['fields'] = 'id=&amp;gt;parent';
        }
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:2/1520434780909126</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thoughts in general and 'what went wrong':
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Accordiong (gif preview)&lt;/strong&gt;: this was the first thinking of how we should go with this that seemd playful, a good workflow and by adding the accordion it meant 1 extra click for the 'deletion' tool that might have saved some trouble to well not-so-bright users.
&lt;/p&gt;
&lt;p&gt;
After some chats though this was leading in a way that we had to put in extra time to make it a11y ready etc and I don't think it's worth the time for now that we're trying to get as much as possible done. In a future update we can always come back and re-design everything or add whatever we like, we're trying to 'save' time now though so we can deal with other tickets and have time for Docs etc etc.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Rows&lt;/strong&gt;: this is a plain UI but as you can see the Informational big box is nowhere to be found. That box is supposed to have some basic information of what this new screen is helpful links and other stuff that users HAVE to get aquainted with to understand the whole Privacy/GDPR implementation. So personally I don't like it.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Boxes&lt;/strong&gt;: this is by far the simplest way to go, a11y ready, everything visible on 'common' screens all content &amp;amp; tools is accesible straight away and in general it follows with the idea of the Admin either way. -I'm personally voting this at the moment.-
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Page-Tabs&lt;/strong&gt;: these are either staying as tabs or we are going to pull everything in 1 page. The 2nd tab is supposed to host ( as you can see in the 1st gif ) all of the information that is incoming from the plugins + core that concern Privacy. Think that at some sites this information might be a loooong list, that's why the thinking of having it on an extra tab.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Notes&lt;/strong&gt;: There are patches already for all versions but I'm waiting for the final desision as they will be put over &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; so we can make a starting-clean commit and continue from there as with that ticket 2-3 will close together as well.
&lt;/p&gt;
&lt;p&gt;
The contnet that you see now is subject to change, according to what is decided as final Tools and what we are actually going to show as information etc. But that doesn't matter as they are easy changes, so pay no attention to the content, just the general idea of how the page should / would look.
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Waiting for further input either here or in #gdpr-compliance so I can refine and polish the UI and make it responsive as well before I implement it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5430 (Change is_page() to accept array as argument) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5430#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5430#comment:6/1520431893565832</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by alexander-botteram. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1520431865000041"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>privacy-boxes.jpg attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/privacy-boxes.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/privacy-boxes.jpg/1520431689368393</guid>
      <description>&lt;p&gt;
privacy-boxes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>privacy_rows.jpg attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/privacy_rows.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/privacy_rows.jpg/1520431631715291</guid>
      <description>&lt;p&gt;
privacy-rows
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Wed, 07 Mar 2018 13:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:23/1520430711965221</guid>
      <description>&lt;p&gt;
37331-3.diff‚Äã
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;adds the message Required fields are marked * just above the form
&lt;/li&gt;&lt;li&gt;adds the attribute required="required" to the input field. I did not add the aria-required attribute, as this is already handled and announced by adding the HTML5 required attribute.
&lt;/li&gt;&lt;li&gt;adds a aria-describedby="site-admin-email" to announce the message below the admin email with the input field.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37331-3.diff attached to Ticket #37331</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Wed, 07 Mar 2018 13:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37331/37331-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37331/37331-3.diff/1520430345040641</guid>
      <description>&lt;p&gt;
adds required asterisk and required attribute
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43486 (The Problem with HTML and wpautop) created</title>
      
        <dc:creator>jim5471</dc:creator>

      <pubDate>Wed, 07 Mar 2018 13:24:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43486</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43486/1520429065184638</guid>
      <description>&lt;p&gt;
Most editors use the VISUAL mode in The TinyMCE editor but there are a minority of editors who use the TEXT mode.
&lt;/p&gt;
&lt;p&gt;
The TEXT mode allows editors to input raw HTML code.
&lt;/p&gt;
&lt;p&gt;
If they program in HTML4 then wpautop reformats the code and sometimes introduces paragraph errors.
&lt;/p&gt;
&lt;p&gt;
HTML5 is a greater problem and should be avoided.
&lt;/p&gt;
&lt;p&gt;
wpautop can be turned off but this is not a realistic solution in a multi-user situation.
&lt;/p&gt;
&lt;p&gt;
I would like to propose this easy modification as a possible solution.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Editors who want to turn off wpautop should insert "[WPAUTOP-OFF]" at the top of their script.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;wp-includes/formatting.php should be changed with this additional code
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;LINE  439   function wpautop( $pee, $br = true ) {
	/*
	 * If "[WPAUTOP-OFF]" is present in $pee then
	 * return $pee with "[WPAUTOP-OFF]" removed and no other changes
	 */
	if ( false !== strpos( $pee, "[WPAUTOP-OFF]" ) ) {
		$pee = str_replace("[WPAUTOP-OFF]", "", $pee);
		return $pee; }
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:44/1520427212228145</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20746#comment:43" title="Comment 43"&gt;dchenko&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But this does not simply remove the question mark‚Äîyou're removing the capturing parentheses and changing the $2 to a $1, which makes the string "+/" required as part of the URL in front of wp-* even though it was optional before.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The leading path being optional is the problem the patch is fixing. Apache loops through the rewrite rules until there are no more matches. If the leading path is optional then when the rule matches on the first pass &amp;amp; the leading path is removed, the rule continues to match on subsequent rewrite passes resulting in a rewrite loop.
&lt;/p&gt;
&lt;p&gt;
@jeremyfelt My patch restores the rules to what was merged from WordPress MU about 8 years ago.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43448 (Document $wp_registered_sidebars global in wp_map_sidebars_widgets()) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43448#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43448#comment:2/1520426929647441</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:45:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:1/1520426740931782</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by espellcaste. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1520426739000073"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43448 (Document $wp_registered_sidebars global in wp_map_sidebars_widgets()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43448#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43448#comment:1/1520426269468320</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core by mukeshpanchal27. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520426267000076"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43485 (Name is blank in Network-AllUsers) created</title>
      
        <dc:creator>jinyu121</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43485/1520425449588950</guid>
      <description>&lt;p&gt;
I use &lt;strong&gt;Multi site&lt;/strong&gt; in my wordpress. In Network-All Users, &lt;code&gt;name&lt;/code&gt; is blank even if we set the right user_nicename and display_name in &lt;code&gt;wp_users&lt;/code&gt; table.
&lt;/p&gt;
&lt;p&gt;
For example, My &lt;code&gt;wp_users&lt;/code&gt; table is like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://d.pr/lELM7P+"&gt;&lt;img src="https://d.pr/lELM7P+" alt="https://d.pr/lELM7P+" crossorigin="anonymous" title="https://d.pr/lELM7P+" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But when i switch to Network - All User, It shows like this
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://d.pr/wNrEVx+"&gt;&lt;img src="https://d.pr/wNrEVx+" alt="https://d.pr/wNrEVx+" crossorigin="anonymous" title="https://d.pr/wNrEVx+" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notice, the second column just shows &lt;code&gt;----&lt;/code&gt;, and I do not masaiked this column.
&lt;/p&gt;
&lt;p&gt;
The second column should show the display_name -&amp;gt; user_nicename -&amp;gt; user_login
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:3/1520425408099514</guid>
      <description>&lt;p&gt;
thanks for clarifying that ;-)
&lt;/p&gt;
&lt;p&gt;
Wonder if there's a reason it was kept in there?
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;@import url(forms.css);&lt;/code&gt; and the &lt;code&gt;$styles-&amp;gt;add( 'login', ... &lt;/code&gt; was added in changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27199" title="Make login styles standalone. see #12506.
"&gt;[27199]&lt;/a&gt; for ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12506" title="#12506: task (blessed): Standalone login styles (closed: fixed)"&gt;#12506&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;@import url(l10n.css);&lt;/code&gt; was added in changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28096" title="RTL for login screen.
props yoavf.
fixes #27784.
"&gt;[28096]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Tickets &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35229" title="#35229: enhancement: Stop generating `wp-admin.min.css` (closed: fixed)"&gt;#35229&lt;/a&gt; might also be of interest to understand the setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:7/1520423920264882</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:6" title="Comment 6"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
This is just the "first run" patch committed for easier testing/enhancements. Fixes welcome! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) created</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:48:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484/1520423290008882</guid>
      <description>&lt;p&gt;
For a long time people have been suggesting / daydreaming / &lt;a class="ext-link" href="https://twitter.com/Ipstenu/status/966411791134699520"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;wishing for&lt;/a&gt; a unified notification center in WordPress. People expect it, the notification center has become a staple of almost all apps/sites that have a lot to keep track of - and WordPress definitely fits in that lineup. So there‚Äôs no reason not to add one to WordPress core too.
&lt;/p&gt;
&lt;p&gt;
This ticket aims to explore the details of such an implementation. I think clear limitations, a good backwards compatibility strategy and a strong UX are key to make this work for everyone.
&lt;/p&gt;
&lt;p&gt;
Key features:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;One location for all notifications.
&lt;/li&gt;&lt;li&gt;Easy to hook into, should work out of the box.
&lt;/li&gt;&lt;li&gt;Flexible enough to be useful, limited enough to not get a circus.
&lt;/li&gt;&lt;li&gt;Accessible from anywhere.
&lt;/li&gt;&lt;li&gt;Accessible in the a11y sense.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here‚Äôs my first basic idea for notification properties, feel free to chime in:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A text field, limited to 280 characters, the length of a tweet. Probably wouldn‚Äôt want one notification to get so long that it fills up the whole visible sidebar. Links can be added to the text to trigger actions or visit pages, same as now basically.
&lt;/li&gt;&lt;li&gt;A timestamp.
&lt;/li&gt;&lt;li&gt;An icon. Could be the plugin icon, author avatar, or something like a category/message type, like info, warning, question, error, update, stuff like that, to visually distinguish notifications quickly.
&lt;/li&gt;&lt;li&gt;A status, meaning read or unread basically.
&lt;/li&gt;&lt;li&gt;Persist/show as toast. A suggestion by Joen Asmussen. Shows the notification outside the notification center for a set amount of time in a floating div. Similar to what Android/MacOS/Windows does when a notification comes in. Maybe only WordPress itself can throw notices like that. Probably not for MVP anyway.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I created a quick interactive proof-of-concept in Sketch that you can view here.
&lt;/p&gt;
&lt;p&gt;
Desktop: &lt;a class="ext-link" href="https://sketch.cloud/s/AZz0M/all/notification-center/desktop/play"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://sketch.cloud/s/AZz0M/all/notification-center/desktop/play&lt;/a&gt;
Mobile: &lt;a class="ext-link" href="https://sketch.cloud/s/AZz0M/all/notification-center/iphone-8-plus/play"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://sketch.cloud/s/AZz0M/all/notification-center/iphone-8-plus/play&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Riad Benguella got excited by this idea and built a basic plugin to test it in your own WordPress install. &lt;a class="ext-link" href="https://github.com/youknowriad/newtify"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/youknowriad/newtify&lt;/a&gt;, and also a previous exploration at &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-notification-center/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/plugins/wp-notification-center/&lt;/a&gt;. Developing this as a plugin is a great way to explore the best implementation, and any help is more than welcome.
&lt;/p&gt;
&lt;p&gt;
Some discussion points to get this started:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we agree on a set of notification properties that provide a consistent experience and that plugin authors can be happy with?
&lt;/li&gt;&lt;li&gt;Which notification categories can we define, and should it only ever be possible to assign a category, or are plugin authors allowed to supply icons for their own notifications too?
&lt;/li&gt;&lt;li&gt;How best to approach the backwards compatibility so we don‚Äôt break (all) existing admin notices? Can some type of conversion be made?
&lt;/li&gt;&lt;li&gt;Is it enough to only show the notifications in the sidebar, or should there be a separate notifications page, maybe with filtering? (Probably not for MVP at least)
&lt;/li&gt;&lt;li&gt;Are there any essential features missing from the list?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:6/1520422556717454</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42791" title="Add a method to confirm user requests by email. First run.
Props ..."&gt;42791&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add a method to confirm user requests by email. First run.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;#43443&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;hash()&lt;/code&gt; may not be available, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29518" title="#29518: defect (bug): Fatal error in WP_Session_Tokens::hash_token() (closed: fixed)"&gt;#29518&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;@return WP_ERROR|bool&lt;/code&gt; should be &lt;code&gt;@return WP_Error|bool&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;There should be no empty line between &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; tags.
&lt;/li&gt;&lt;li&gt;All the &lt;code&gt;WP_Error&lt;/code&gt; messages should end with a full stop.
&lt;/li&gt;&lt;li&gt;In &lt;code&gt;check_confirm_account_action_key&lt;/code&gt; the function should bail directly if one of the parameters is empty. So move that &lt;code&gt;return new WP_Error( 'invalid_key', __( 'Invalid key' ) );&lt;/code&gt; line up to avoid one huge if condition.
&lt;/li&gt;&lt;li&gt;All the new actions have no &lt;code&gt;@since&lt;/code&gt; tag.
&lt;/li&gt;&lt;li&gt;Why are none of the functions prefixed with &lt;code&gt;wp_&lt;/code&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:9/1520422113753223</guid>
      <description>&lt;p&gt;
Yeah, I just noticed that in my project I have phpunit 6.4 but I also had globally installed phpunit 7. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:5/1520421151727646</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Log confirmed requests and perhaps show them on the dashboard
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was thinking about this a bit more: instead of deleting the confirmation token from the DB perhaps we can set a "confirmed" status on it and keep it until the action is performed?
&lt;/p&gt;
&lt;p&gt;
Also, may be better to have a permanent log. Perhaps we can make a new private CPT (without editor, terms, revisions, etc. support) that will hold the log. Then can use postmeta to store the tokens on it. After the action is performed can add a row with the date and type of action but not the user email so it is anonymous.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 10:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:22/1520419790952817</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43435#comment:21" title="Comment 21"&gt;danieltj&lt;/a&gt;:
Welcome aboard!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are we currently focusing on just creating the privacy page for now then?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, focusing on all tickets, as much as possible :)
&lt;a href="https://core.trac.wordpress.org/query?status=!closed&amp;amp;keywords=~gdpr"&gt;https://core.trac.wordpress.org/query?status=!closed&amp;amp;keywords=~gdpr&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 10:42:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:21/1520419326723441</guid>
      <description>&lt;p&gt;
@azaozz &amp;amp; @xkon
&lt;/p&gt;
&lt;p&gt;
That makes sense to me now; I was curious as to why one option was in a newly created page but if more privacy options and settings are coming then that seems appropriate for a new page.
&lt;/p&gt;
&lt;p&gt;
To follow on from what @azaozz said about comments, I was thinking about creating a plugin to 'forget' users who leave comments to remove the personal information. I'll direct my efforts here in that case.
&lt;/p&gt;
&lt;p&gt;
Are we currently focusing on just creating the privacy page for now then? Sorry I'm a bit out of the loop with this ticket and Slack channel discussion so I'm trying to keep up as best I can!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>markcallen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 10:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:53/1520417490325702</guid>
      <description>&lt;p&gt;
I just wanted to add a comment about filters on output. It is perhaps the subject of a new discussion or ticket.
&lt;/p&gt;
&lt;p&gt;
If any output is a html tag, then I believe it should be an array of attribute =&amp;gt; value pairs that is filtered.
&lt;/p&gt;
&lt;p&gt;
This gives full control to developers to add, view, edit or remove attributes based on their specific needs. It is more resilient to successive filters being used and more importantly it works for any attributes - current or future.
&lt;/p&gt;
&lt;p&gt;
String manipulation which is relied on too much for a lot of filters is just ugly and messy and often gets  implemented assuming that no previous filter has been called.
&lt;/p&gt;
&lt;p&gt;
In the case of this ticket, this approach would allow developers to add async/defer attributes based on their specific implementations. It wouldn't need other updates to core and is future proof to any other cool attributes that are created in the future.
&lt;/p&gt;
&lt;p&gt;
Whether developers use that to enhance or degrade performance is a matter for the developer, in my opinion. I agree with @azaozz, better to refactor script-loader for 2018 - with my point above included on eventual output :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:20/1520416646597705</guid>
      <description>&lt;p&gt;
@danieltj to comment further on @azaozz reply see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt; so you can understand how this 'empty' for now page will end up being pretty much :). We're still on a chaotic-ticket system as there was a need to open everything as a ticket to see what we can do and start but it will make sense in the end especially after some parent-commits are made. It looks confusing if you're missing the chats &amp;amp; meetings on the #gdpr-compliance that's certain :D .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:2/1520416631308150</guid>
      <description>&lt;p&gt;
No, that's not what I am saying (it's actually the opposite). If you look at the source of &lt;code&gt;wp-admin/css/login.css&lt;/code&gt; it imports &lt;code&gt;forms.css&lt;/code&gt; and &lt;code&gt;i10n.css&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;forms&lt;/span&gt;&lt;span class="nc"&gt;.css&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;l10n&lt;/span&gt;&lt;span class="nc"&gt;.css&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/script-loader.php#L1075"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/script-loader.php#L1075&lt;/a&gt; these two scripts are also added as dependencies to &lt;code&gt;login.css&lt;/code&gt;, which is redundant:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$styles-&amp;gt;add( 'login', "/wp-admin/css/login$suffix.css", array( 'dashicons', 'buttons', 'forms', 'l10n' ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I think we should get rid of the one of the two and I propose removing the &lt;code&gt;@import&lt;/code&gt; statements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:19/1520416420556401</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43435#comment:18" title="Comment 18"&gt;danieltj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should this new interface be integrated into the &lt;code&gt;Settings &amp;gt; Reading&lt;/code&gt; screen...
A whole new page for this seems a bit much
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We've discussed that in #gdpr-compliance in Slack and the consensus was to add all privacy tools on one screen under Tools menu. It's not going to be just the policy page, there will be UI for anonymizing and/or deleting comments and posts, link to anonymizing/deleting a user, help/text explaining how each works and how that will impact the site, warning about change to the suggested policy text, perhaps a list of pending requests, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:18/1520415745717606</guid>
      <description>&lt;p&gt;
Should this new interface be integrated into the &lt;code&gt;Settings &amp;gt; Reading&lt;/code&gt; screen where the select a homepage and blog page? Putting it into the tools section doesn't seem to be the right flow here. I'm inclined to suggest it's move as an option that is always selectable (as opposed to the home/blog page options that require it being switched on).
&lt;/p&gt;
&lt;p&gt;
A whole new page for this seems a bit much to me because once you have a page created, the only useful option here is the select box which doesn't need it's own page.
&lt;/p&gt;
&lt;p&gt;
I've also not tested the patch yet, but if it doesn't already, it should have a 'Privacy Policy' suffix in the page list just like it does with 'Front Page' and 'Blog' pages do to identify they're special pages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:1/1520415077374255</guid>
      <description>&lt;p&gt;
So I guess you mean to introduce &lt;code&gt;login.scss&lt;/code&gt; that imports &lt;code&gt;forms.scss&lt;/code&gt; and &lt;code&gt;i10n.scss&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The only other &lt;code&gt;scss&lt;/code&gt; files I'm aware of is for the admin color schemes in &lt;code&gt;/wp-admin/css/colors/&lt;/code&gt; (e.g. &lt;code&gt;/wp-admin/css/colors/light/colors.scss&lt;/code&gt;), with this sass entry in  &lt;code&gt;Gruntfile.js&lt;/code&gt; :
&lt;/p&gt;
&lt;pre class="wiki"&gt;sass: {
    colors: {
        expand: true,
        cwd: SOURCE_DIR,
        dest: BUILD_DIR,
        ext: '.css',
        src: ['wp-admin/css/colors/*/colors.scss'],
        options: {
            outputStyle: 'expanded'
        }
    }
},
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:8/1520414895518491</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43218#comment:7" title="Comment 7"&gt;dingo_bastard&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just to clarify, for unit tests to pass, we need to use PHPUnit 6? I tried running tests and I got
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP Fatal error: Class PHPUnit_Util_Test may not inherit from final class (PHPUnit\Util\Test) in /vagrant-local/www/wordpress-develop/tests/phpunit/includes/phpunit6-compat.php on line 18
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
error. Will downgrading the PHPUnit to v6 get rid of this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that's the point. PHPUnit 7 and up will probably not be supported for years to come. The PHP 7.x return hinting is just too much for our 5.x files.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;composer require --dev phpunit/phpunit:^6&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:7/1520414502668500</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just to clarify, for unit tests to pass, we need to use PHPUnit 6? I tried running tests and I got
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP Fatal error: Class PHPUnit_Util_Test may not inherit from final class (PHPUnit\Util\Test) in /vagrant-local/www/wordpress-develop/tests/phpunit/includes/phpunit6-compat.php on line 18
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
error. Will downgrading the PHPUnit to v6 get rid of this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:59:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:17/1520413179190305</guid>
      <description>&lt;p&gt;
After my last comment I just went ahead and actually created &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.diff" title="Attachment '43435.3.diff' in Ticket #43435"&gt;43435.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43435/43435.3.diff" title="Download"&gt;‚Äã&lt;/a&gt; since we're 12h apart so 1 wakes up 1 sleeps haha just in case we can save some time. This is based on @allendav 's patch but with the idea of not using redirects straight away.
&lt;/p&gt;
&lt;p&gt;
I'm sure this patch can get a lot prettier + more secure or fail-safe but at least it works as expected for the means of previewing.
&lt;/p&gt;
&lt;p&gt;
@allendav if you are OK with this ( I think it will really play along nicely with the idea of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt; and accordions etc. It will be a seamless experience imho ) please make a pass on this to shape it up so we can commit it maybe asap so I can pass over all the other UI items as well after, this way we can start clearing tickets as well and focus on new ones easier :).
&lt;/p&gt;
&lt;p&gt;
( note: I wasn't sure where to add all the jQuery + minor css stuff for this page so I just bumped them insite tools-privacy.php to at least have them handy for the time being )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43435.3.gif attached to Ticket #43435</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.gif/1520412724974176</guid>
      <description>&lt;p&gt;
no redirect preview
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43435.3.diff attached to Ticket #43435</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:51:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.diff/1520412693174026</guid>
      <description>&lt;p&gt;
different UX idea without redirect
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43407 (Make site_url filter aware of wp-login.php actions) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43407#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43407#comment:1/1520412662340172</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) created</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Wed, 07 Mar 2018 06:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483/1520405951133689</guid>
      <description>&lt;p&gt;
The &lt;code&gt;login.css&lt;/code&gt; (&lt;code&gt;login-rtl.css&lt;/code&gt;) imports &lt;code&gt;forms.css&lt;/code&gt; and &lt;code&gt;i10n.css&lt;/code&gt; (&lt;code&gt;forms-rtl.css&lt;/code&gt; and &lt;code&gt;i10n-rtl.css&lt;/code&gt;) and also has them as dependencies.
&lt;/p&gt;
&lt;p&gt;
I think this should be unified and propose removing the import statements.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 06:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:17/1520405503725775</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;Slack&lt;/a&gt; in #core-committers by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-committers/p1520405502000010"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43228 (register_theme_directory() needs to delete the `theme_roots` transient) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 07 Mar 2018 06:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43228#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43228#comment:8/1520403441202654</guid>
      <description>&lt;p&gt;
&lt;code&gt;register_theme_directory()&lt;/code&gt; is intended to run on every page load AFAICT, so ultimately deleting the &lt;code&gt;theme_roots&lt;/code&gt; transient or &lt;code&gt;update_themes&lt;/code&gt; option isn't a viable option for calling within &lt;code&gt;register_theme_directory()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I suspect that calling &lt;code&gt;search_theme_directories( true )&lt;/code&gt; within the branch that actually appends within &lt;code&gt;register_theme_directory()&lt;/code&gt; will be a bit better, but it'll still cause unexpected IO to happen when the theme roots hasn't actually changed from what's in the transient (ie. this directory was registered on the last page load too).
&lt;/p&gt;
&lt;p&gt;
I think that &lt;code&gt;search_theme_directories()&lt;/code&gt; and &lt;code&gt;get_theme_roots()&lt;/code&gt; needs to hash &lt;code&gt;$wp_theme_directories&lt;/code&gt; and include that as part of it's transient name, which should solve both the reported issue and the issue of extra IO.
&lt;/p&gt;
&lt;p&gt;
Either way, The patch as committed needs reverting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43228 (register_theme_directory() needs to delete the `theme_roots` transient) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 05:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43228#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43228#comment:7/1520399063641712</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 04:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:16/1520397828731560</guid>
      <description>&lt;p&gt;
I have some 'flow' notes that maybe it could be done easier, if not it is more than fine for a start!
&lt;/p&gt;
&lt;p&gt;
The current flow:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You're on Privacy Page you don't have anything selected so you get a message to 'Create' a page.
&lt;/li&gt;&lt;li&gt;You click -&amp;gt; you get redirected -&amp;gt; you publish the page.
&lt;/li&gt;&lt;li&gt;Back to the Privacy Page -&amp;gt; no option set yet -&amp;gt; Message to create yet another new page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That might seem somewhat confusing to some people since they already created a page and might think oh nice it was so easy! yay! ... wait... where are my extra goodies? - oh snap - I have to go back and Select it as well.
&lt;/p&gt;
&lt;p&gt;
So I would suggest to convert this little piece of flow into this if possible:
&lt;/p&gt;
&lt;p&gt;
You get to Policy Page -&amp;gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Your select doesn't have anything.
&lt;/li&gt;&lt;li&gt;You have a message to create a page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Action time:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You click create a page
&lt;/li&gt;&lt;li&gt;You get a notification-success. ( ajax magic ! )
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What Happened in the background? :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A page is simply put in by our code with a slug of like 'privacy-policy-{$timestamp}' so it's always unique.
&lt;/li&gt;&lt;li&gt;Without redirects we are updating instantly the &amp;lt;select&amp;gt; + the &lt;code&gt;option&lt;/code&gt; followed by a message 'Your page is ready! You can view it &amp;lt;here&amp;gt;' or something in that context.
&lt;/li&gt;&lt;li&gt;The user doesn't have to do anything else. User can even continue scrolling through the Privacy Tools page or check the already incoming plugin hooks on the next tab if he wants.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The idea of this is to avoid all of this back and forth and just give them a straight up page that with this idea will show their metabox and everything already as it is properly registered from scratch.
&lt;/p&gt;
&lt;p&gt;
Either way you're keeping the ID for the select so we don't care about slugs / post names they can do whatever they want with them :] as long as there's something bound to that select box.
&lt;/p&gt;
&lt;p&gt;
What do you think about that? I would personally find it perfect to not interrupt with redirects etc my &lt;code&gt;1st click on this new page&lt;/code&gt; :D
&lt;/p&gt;
&lt;p&gt;
The trash notice is super clever btw &lt;sup&gt;_&lt;/sup&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>dchenko</dc:creator>

      <pubDate>Wed, 07 Mar 2018 03:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:43/1520394188474838</guid>
      <description>&lt;p&gt;
But this does not simply remove the question mark‚Äîyou're removing the capturing parentheses and changing the $2 to a $1, which makes the string "+/" required as part of the URL in front of wp-* even though it was optional before.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20746#comment:16" title="Comment 16"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20746#comment:15" title="Comment 15"&gt;jrfoell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks Ron... I amended my comment to show the full .htaccess I'm using.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the full htaccess above the rewrite condition
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteCond %{REQUEST_URI} ^/wp-(content|admin|includes).*$`
&lt;/pre&gt;&lt;p&gt;
will only be met if the requested path begins with &lt;code&gt;//&lt;/code&gt;. The RewriteBase directive tells the rewrite engine to start rewriting after the base value.
&lt;/p&gt;
&lt;p&gt;
Secondly, that .htaccess isn't what I suggested to Pippin. What I suggested was
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteCond %{REQUEST_URI} !^wp-(content|admin|includes).*$
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]
&lt;/pre&gt;&lt;p&gt;
Looking at the original rule it would probably be easier to remove the ? from the original rule
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteRule ^[_0-9a-zA-Z-]+/(wp-(content|admin|includes).*) $1 [L]
&lt;/pre&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) reopened</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:19:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:16/1520385571404931</guid>
      <description>&lt;p&gt;
Reopening for 4.9.5 consideration
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) closed</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:15/1520385489332337</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42792" title="Media: Correctly allow changing PDF thumbnail crop value.
Corrects ..."&gt;42792&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Correctly allow changing PDF thumbnail crop value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Corrects logic that keeping plugins from setting crop value of intermediate image sizes for rendered PDFs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props leemon, SergeyBiryukov, chetan200891, birgire.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43226" title="#43226: defect (bug): Crop setting in thumbnails never set when uploading PDF files (closed: fixed)"&gt;#43226&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42792]: Media: Correctly allow changing PDF thumbnail crop value.  Corrects ...</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42792</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42792/1520385488857352</guid>
      <description>&lt;p&gt;
Media: Correctly allow changing PDF thumbnail crop value.
&lt;/p&gt;
&lt;p&gt;
Corrects logic that keeping plugins from setting crop value of intermediate image sizes for rendered PDFs.
&lt;/p&gt;
&lt;p&gt;
Adds test.
&lt;/p&gt;
&lt;p&gt;
Props leemon, SergeyBiryukov, chetan200891, birgire.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43226" title="#43226: defect (bug): Crop setting in thumbnails never set when uploading PDF files (closed: fixed)"&gt;#43226&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43482 (Draft Posts Throw 404 on Preview when Supporting post_format) created</title>
      
        <dc:creator>marklavin</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43482</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43482/1520384823278832</guid>
      <description>&lt;p&gt;
A client is reporting that they're not able to preview drafts of some of the custom post types we have running on their site. The issue is not occurring for all post types on their site. I believe I've traced the issue to the fact that the errant post types support "post_format."
&lt;/p&gt;
&lt;p&gt;
The preview URL that gets generated when I preview the "ask-the-expert" post is:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;post_format=standard&amp;amp;_thumbnail_id=-1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;post_format=standard&amp;amp;_thumbnail_id=-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That above URL throws a 404 page.
&lt;/p&gt;
&lt;p&gt;
When I pull out the 'post_format=standard' part of the query, so that the URL looks like:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_thumbnail_id=-1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_thumbnail_id=-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
then the preview loads correctly.
&lt;/p&gt;
&lt;p&gt;
Interestingly, just for giggles I also tried:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_post_format=standard&amp;amp;_thumbnail_id=-1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_post_format=standard&amp;amp;_thumbnail_id=-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and that also worked as it should. (notice the added underscore before 'post_format.'
&lt;/p&gt;
&lt;p&gt;
For now I think I'm just going to disable post formats for the offending post types, but methinks I found a bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:15/1520382424442089</guid>
      <description>&lt;p&gt;
This is starting to look good :)
&lt;/p&gt;
&lt;p&gt;
Thinking we can have a "Create Privacy Policy page" button that will act like a submit button and we can insert a new page titled "Privacy Policy" directly, no need to send the user to the New Page screen. After inserting it, or after the user selects a page from the drop-down and saves, we should show a link to edit the policy.
&lt;/p&gt;
&lt;p&gt;
Now comes the fun part: when editing the policy there will be a "postbox" that contains all the text suggested by core and plugins. In addition to showing the text, it will have to store the old text and highlight parts when they are updated. Perhaps not quite a diff, but draw the attention to any changed block of text.
&lt;/p&gt;
&lt;p&gt;
In addition after core or plugin update we should show an admin-wide notice when some privacy text(s) were updated, perhaps until the user dismisses it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:14/1520381748430947</guid>
      <description>&lt;p&gt;
I tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43226/43226.diff" title="Attachment '43226.diff' in Ticket #43226"&gt;43226.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43226/43226.diff" title="Download"&gt;‚Äã&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43226/43226-unit-test.diff" title="Attachment '43226-unit-test.diff' in Ticket #43226"&gt;43226-unit-test.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43226/43226-unit-test.diff" title="Download"&gt;‚Äã&lt;/a&gt; but the unit-test failed.
&lt;/p&gt;
&lt;p&gt;
It ran successfully when I changed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'medium'    =&amp;gt; array(
	'file'      =&amp;gt; 'wordpress-gsoc-flyer-pdf-232x300.jpg',
	'width'     =&amp;gt; 300,
	'height'    =&amp;gt; 300,
	'mime-type' =&amp;gt; 'image/jpeg',
),
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'medium'    =&amp;gt; array(
	'file'      =&amp;gt; 'wordpress-gsoc-flyer-pdf-300x300.jpg',
	'width'     =&amp;gt; 300,
	'height'    =&amp;gt; 300,
	'mime-type' =&amp;gt; 'image/jpeg',
),
&lt;/pre&gt;&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39975" title="#39975: task (blessed): Remove direct calls to '/tmp/' in Unit Tests (new)"&gt;#39975&lt;/a&gt; aims to &lt;em&gt;Remove direct calls to &lt;code&gt;'/tmp/'&lt;/code&gt; in Unit Tests&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
So &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43226/43226.2.diff" title="Attachment '43226.2.diff' in Ticket #43226"&gt;43226.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43226/43226.2.diff" title="Download"&gt;‚Äã&lt;/a&gt; uses &lt;code&gt;get_temp_dir()&lt;/code&gt; instead of &lt;code&gt;'/tmp/'&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If we want to use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$test_file = wp_tempnam( 'wordpress-gsoc-flyer.pdf' );
&lt;/pre&gt;&lt;p&gt;
then we have to deal with files like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/tmp/wordpress-gsoc-flyer-Y5yoVa.tmp
&lt;/pre&gt;&lt;p&gt;
making it a little more involved to create the &lt;code&gt;$expected&lt;/code&gt; array and then to unlink the corresponding files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43226.2.diff attached to Ticket #43226</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:06:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43226/43226.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43226/43226.2.diff/1520381181028684</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:4/1520380954772364</guid>
      <description>&lt;p&gt;
feature.43443.diff works quite well. Only changed it so we always delete the stored token when the hash matches, and fixed a typo in var order. Left the ticket open so we can iterate/enhance it further.
&lt;/p&gt;
&lt;p&gt;
Things to consider:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Prevent "flood" of requests. If a request is made and it hasn't expired, perhaps limit how many new requests can be made for the same email. Something like 10 should be plenty to cover legitimate user cases.
&lt;/li&gt;&lt;li&gt;Perhaps add garbage collection function to delete expired requests.
&lt;/li&gt;&lt;li&gt;Consider how this can be used through the REST API and add an endpoint.
&lt;/li&gt;&lt;li&gt;Log confirmed requests and perhaps show them on the dashboard? Typically an admin will have to perform the requested action. When a site has more than one admin, would be good if all can see pending requests.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>