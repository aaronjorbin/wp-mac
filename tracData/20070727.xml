<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #4678 (PostgreSQL support ( patch included )) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Fri, 27 Jul 2007 22:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4678#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4678#comment:1/1185575477000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>mysql2pgsql.php attached to Ticket #4678</title>
      
        <dc:creator>usleepless</dc:creator>

      <pubDate>Fri, 27 Jul 2007 21:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4678/mysql2pgsql.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4678/mysql2pgsql.php/1185571913000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4678 (PostgreSQL support ( patch included )) created</title>
      
        <dc:creator>usleepless</dc:creator>

      <pubDate>Fri, 27 Jul 2007 21:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4678/1185571863000000</guid>
      <description>&lt;p&gt;
this is a patch to make WP 2.2.1 PostgreSQL compatible.
&lt;/p&gt;
&lt;p&gt;
to make it work:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;edit wp-includes/wp-db.php
add "require_once('mysql2pgsql.php') at the top
&lt;/li&gt;&lt;li&gt;save the attached mysql2pgsql.php to wp-includes
&lt;/li&gt;&lt;li&gt;edit wp-settings.php and remove the MySQL not included warning/die check
&lt;/li&gt;&lt;li&gt;make sure your php doesn't load the mysql client/module
&lt;/li&gt;&lt;li&gt;create a new database ( createdb wordpress ), edit your wp-config.php and complete the wp-installion process
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
afaik, there are no problems.
&lt;/p&gt;
&lt;p&gt;
this is "a" solution to the multiple database support "problem".
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;this patch redefines the mysql_* calls: it would be better to use the PEAR db-wrapper class for example
&lt;/li&gt;&lt;li&gt;this patch manipulates the SQL. stuff can be learned from this though:
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;using "SHOW TABLES" to check if WP is already installed is MySQL specific: trying to "SELECT * FROM wp_posts LIMIT 1" is not.
&lt;/li&gt;&lt;li&gt;a couple of queries use the "`" character for no reason whatsoever
&lt;/li&gt;&lt;li&gt;datatypes: some translation will always be necessary ( text/memo fields for example ). but is using "longtext &amp;amp; mediumtext &amp;amp; tinytext" really sensible? or int(11), int(4), bigint(20) and tinyint(1) ?
&lt;/li&gt;&lt;li&gt;almost all of the schema is lowercase: there are some table using capitals for fields containing "ID". let's get rid of them ( this is probably really pg-speficic )
&lt;/li&gt;&lt;li&gt;there are MySQL specific "IGNORE" qualifiers in INSERT statements. what are they good for? let's get rid of them
&lt;/li&gt;&lt;li&gt;in the db-installation procedure, inserts are performed on tables with auto_increment fields, specifying this very field ( wp_categories, wp_post2cat ). trust the auto_increment, remove the values for the auto_increment fields. this confuses pgsql
&lt;/li&gt;&lt;li&gt;SQL_FOUND_ROWS &amp;amp; FOUND_ROWS() is MySQL specific. i have replaced them with dummy's and didn't notice any difference. let's work around this
&lt;/li&gt;&lt;li&gt;MySQL specific LIMIT syntax is used. let's use ISO "LIMIT x OFFSET y".
&lt;/li&gt;&lt;li&gt;there is seemingly useless use of "GROUP BY" in some statements. let's get rid of them (pgsql complains)
&lt;/li&gt;&lt;li&gt;using "!=" is not ISO afaik. let's write "&amp;lt;&amp;gt;" instead
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
if these suggestions are implemented, WP can be made multiple DB compatible quite easily ( mysql, pgsql, mssql, db2 etc. whatever PHP supports )
&lt;/p&gt;
&lt;p&gt;
i am willing to contribute time &amp;amp; patches to make this work.
&lt;/p&gt;
&lt;p&gt;
regards,
&lt;/p&gt;
&lt;p&gt;
usleep
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4607 (ABSPATH already has a trailing slash) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jul 2007 21:28:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4607#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4607#comment:2/1185571682000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5820" title="ABSPATH already has a trailing slash.  Props Nazgul.  fixes #4607"&gt;[5820]&lt;/a&gt;) ABSPATH already has a trailing slash.  Props Nazgul.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4607" title="#4607: enhancement: ABSPATH already has a trailing slash (closed: fixed)"&gt;#4607&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [5820]: ABSPATH already has a trailing slash.  Props Nazgul.  fixes #4607</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 27 Jul 2007 21:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/5820</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/5820/1185571681866347</guid>
      <description>&lt;p&gt;
ABSPATH already has a trailing slash.  Props Nazgul.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4607" title="#4607: enhancement: ABSPATH already has a trailing slash (closed: fixed)"&gt;#4607&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4620 (Post status transition actions) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 27 Jul 2007 18:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4620#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4620#comment:3/1185559849000000</guid>
      <description>&lt;p&gt;
publish_post is being added in default_filters, but not being called by anything. There's no do_action('publish_post') in all of trunk.
&lt;/p&gt;
&lt;p&gt;
Was this supposed to do something?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4677 (Automatic REPAIR TABLE tablename after MySQL error 127) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 27 Jul 2007 16:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4677#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4677#comment:4/1185553403000000</guid>
      <description>&lt;p&gt;
Well, okay, so that &lt;code&gt;extract($vars, EXTR_OVERWRITE);&lt;/code&gt; is wrong. Still, you could do it with a loop or something. Just need to make it get all of the variables set in the new object.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4677 (Automatic REPAIR TABLE tablename after MySQL error 127) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 27 Jul 2007 16:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4677#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4677#comment:3/1185553292000000</guid>
      <description>&lt;p&gt;
You could do this with a plugin. You'll need to extend the $wpdb class to do it. I have not tested any of this, of course...
&lt;/p&gt;
&lt;pre class="wiki"&gt;class my_wpdb extends wpdb {
	// override the print_error function
	function print_error($str = '') {
		if (mysql_errno($this-&amp;gt;dbh) == 127 ) {
			// do REPAIR TABLE or whatever
		}
		else {
			parent::print_error($str);
		}
	}
	// copy constructor to handle the annoying missing table variables problem
	function my_wpdb($old_wpdb) {
		// casting an object to an array returns the vars in the object
		// in the array.. so $vars['posts']='wp_posts'. Handy, no?
		$vars = (array)$old_wpdb;
		extract($vars, EXTR_OVERWRITE);
	}
}
// create a new object for the database
$my_wpdb = new my_wpdb($wpdb);
// assign it back to the main database
$wpdb = $my_wpdb;
&lt;/pre&gt;&lt;p&gt;
That should work, I think. Should work in a plugin too. But of course, it won't work if you get the 127 error before the plugins get loaded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4577 (Update Incoming Links URI API (Technorati Feeds)) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 26 Jul 2007 22:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4577#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4577#comment:9/1185489845000000</guid>
      <description>&lt;p&gt;
Added patch to use Google Blogsearch instead of Technorati for Incoming Links feed, as per matt's suggestion.
&lt;/p&gt;
&lt;p&gt;
Oh, this still gets a +1 from me too. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>4577-google-trunk.diff attached to Ticket #4577</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 26 Jul 2007 22:43:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4577/4577-google-trunk.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4577/4577-google-trunk.diff/1185489787000000</guid>
      <description>&lt;p&gt;
Patch for trunk to use Google instead of Technorati for Incoming Links display
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4051 (blogroll not functional for internal links) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 26 Jul 2007 21:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4051#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4051#comment:11/1185483728000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a patch that will replace the clean_url call in _walk_bookmarks with a filter. Also added a default filter to hook that to clean_url. By itself, this patch changes nothing. However, it allows plugins to disable it entirely (my preference) or to just modify that filter and thus replace the $protocols parameter of the call to clean_url. Thus a plugin can add allowed protocols and such as well as simply disabling it. Allows for both choices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>4051.diff attached to Ticket #4051</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 26 Jul 2007 20:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4051/4051.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4051/4051.diff/1185483508000000</guid>
      <description>&lt;p&gt;
Replace clean_url in _walk_bookmarks with a default filter.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>flatimport-tuto.html attached to Ticket #4611</title>
      
        <dc:creator>albaran</dc:creator>

      <pubDate>Thu, 26 Jul 2007 17:01:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4611/flatimport-tuto.html</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4611/flatimport-tuto.html/1185469309000000</guid>
      <description>&lt;p&gt;
in-line tutorial
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4677 (Automatic REPAIR TABLE tablename after MySQL error 127) updated</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Thu, 26 Jul 2007 16:31:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4677#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4677#comment:2/1185467489000000</guid>
      <description>&lt;p&gt;
+1 as a plugin (if that's possible when the DB throws a 127?)
-1 as part of the core.
&lt;/p&gt;
&lt;p&gt;
Wordpress is a blogging tool, not a sysadmin tool and therefore (by default) shouldn't pretend to be one.
&lt;/p&gt;
&lt;p&gt;
Also, the 127 error happened/happens for a reason. You should find out why instead of just fixing the symptoms by doing a REPAIR TABLE.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4677 (Automatic REPAIR TABLE tablename after MySQL error 127) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 26 Jul 2007 14:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4677#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4677#comment:1/1185460309000000</guid>
      <description>&lt;p&gt;
+1 sounds like a good idea.
&lt;/p&gt;
&lt;p&gt;
Maybe a page like the upgrade page in the admin area which is shown on detection and allows the admin to run the repair.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4677 (Automatic REPAIR TABLE tablename after MySQL error 127) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 26 Jul 2007 13:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4677</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4677/1185458222000000</guid>
      <description>&lt;p&gt;
Whenever a MySQL error 127 crops up, the solution (for me) has always been to repair the table... and it always works.  Should we detect these errors and attempt to repair automatically?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4674 ("Weblog" is additional unnecessary terminology) updated</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Thu, 26 Jul 2007 02:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4674#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4674#comment:2/1185415735000000</guid>
      <description>&lt;p&gt;
Oh, by the way, that list is from WP 2.2.1, but I'm sure it's more-or-less the same in trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4674 ("Weblog" is additional unnecessary terminology) updated</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Thu, 26 Jul 2007 01:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4674#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4674#comment:1/1185414734000000</guid>
      <description>&lt;p&gt;
Agreed. Weblog is an old term. The following files contain occurrences of the term 'weblog':
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp-admin/install.php
&lt;/li&gt;&lt;li&gt;wp-admin/upgrade-schema.php
&lt;/li&gt;&lt;li&gt;wp-admin/upgrade-functions.php
&lt;/li&gt;&lt;li&gt;wp-admin/options-general.php
&lt;/li&gt;&lt;li&gt;wp-content/themes/default/sidebar.php
&lt;/li&gt;&lt;li&gt;wp-includes/comment.php
&lt;/li&gt;&lt;li&gt;xmlrpc.php
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>