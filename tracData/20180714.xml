<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44574 (Saratov and other cities missing from translations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 19:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44574#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44574#comment:3/1531598214631963</guid>
      <description>&lt;p&gt;
44574.diff adds 5 missing locations (according to my system's zoneinfo files) Punta Arenas, Saratov, Atyrau, Famagusta, Yangon.
&lt;/p&gt;
&lt;p&gt;
Just did &lt;code&gt;timezone_identifiers_list&lt;/code&gt; and looked at what's missing from src/wp-admin/includes/continents-cities.php
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44574 (Saratov and other cities missing from translations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 19:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44574#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44574#comment:2/1531597785609697</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44566 (Warning: count(): Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 19:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44566#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44566#comment:1/1531597154040506</guid>
      <description>&lt;p&gt;
Hey there, welcome to Trac! Are you using a clean install of the latest version of WordPress?
Make sure that there are no plugins activated and a default theme is active.
Does the same still happen?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44568 (Two concurrent post deletes results in invalid return values) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44568#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44568#comment:1/1531594668839243</guid>
      <description>&lt;p&gt;
Hey there, welcome to Trac! Thanks for your ticket.
&lt;/p&gt;
&lt;p&gt;
WordPress operations are non-atomic. WordPress on the whole is not thread-safe. This means that calling most of the APIs that interact with the database is risky.
&lt;/p&gt;
&lt;p&gt;
If you need to protect your resources from concurrent operations you'll have to perform synchornization (mutexing) yourself.
&lt;/p&gt;
&lt;p&gt;
Rewriting WordPress to be thread-safe means rewriting like 80% of its APIs... a very daunting task. To my knowledge there haven't been any attempts at even trying to include synchronization to API calls. Perhaps it's time...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44571.tests.diff attached to Ticket #44571</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44571/44571.tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44571/44571.tests.diff/1531593829435800</guid>
      <description>&lt;p&gt;
Tests for force_balance_tags
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44571 (force_balance_tags breaks JavaScript) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44571#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44571#comment:1/1531593738074800</guid>
      <description>&lt;p&gt;
This is a very common issue among formatting functions in WordPress, wherein "stray" brackets break tag detection. This happens in scripts, styles and even regular HTML attributes with angle brackets in them. There are a bunch of tickets open regarding this.
&lt;/p&gt;
&lt;p&gt;
The issue here is that &lt;code&gt;&amp;lt;=1);&amp;lt;/script&amp;gt;&lt;/code&gt; is detected as a tag.
&lt;/p&gt;
&lt;p&gt;
Also there are no unit tests. Let's start writing some.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44574 (Saratov and other cities missing from translations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44574#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44574#comment:1/1531592897423542</guid>
      <description>&lt;p&gt;
"Saratov" is indeed missing from the cities and continents translations here: &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/cc"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/cc&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Not sure how the list is generated, but Saratov is a valid timezone under Europe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Sat, 14 Jul 2018 16:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:39/1531587033632795</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:38" title="Comment 38"&gt;ddenev&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only thing that I still do not understand (and that was actually my initial question but I guess I did not state it well enough) is the following (and that is based purely on curiosity as 99% is pretty good success rate :)
&lt;/p&gt;
&lt;p&gt;
In what cases (the mentioned 1%) the &lt;code&gt;$path&lt;/code&gt; variable will NOT be a file system path? Any potential scenarios and use cases?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Some plugins may call WP core functions that eventually call &lt;code&gt;wp_is_stream()&lt;/code&gt; with a URL as &lt;code&gt;$path&lt;/code&gt;.  You may not have any such plugins active and so would never see that case.  Sorry I can't be more specific than that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>ddenev</dc:creator>

      <pubDate>Sat, 14 Jul 2018 16:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:38/1531586427257372</guid>
      <description>&lt;p&gt;
Dear @pbiron
&lt;/p&gt;
&lt;p&gt;
thank you very much for the detailed explanation!
&lt;/p&gt;
&lt;p&gt;
Yes, I understand what the patch does and that the root of the problem lies in PHP rather than in WP. I also understand that this patch will significantly reduce the number of calls to the problematic PHP function.
&lt;/p&gt;
&lt;p&gt;
The only thing that I still do not understand (and that was actually my initial question but I guess I did not state it well enough) is the following (and that is based purely on curiosity as 99% is pretty good success rate :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:37" title="Comment 37"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the vast majority (99% ?) of cases, the &lt;code&gt;$path&lt;/code&gt; passed to &lt;code&gt;wp_is_stream()&lt;/code&gt; is a file system path and not a URL so there is no need to call PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt;, which returns an array of protocols or URL "schemes" that PHP supports, to test whether the URL is a stream that PHP can handle.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In what cases (the mentioned 1%) the &lt;code&gt;$path&lt;/code&gt; variable will NOT be a file system path? Any potential scenarios and use cases?
&lt;/p&gt;
&lt;p&gt;
Thanks again for the help!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Sat, 14 Jul 2018 15:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:37/1531583563930923</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:36" title="Comment 36"&gt;ddenev&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can confirm that the provided patch DOES indeed solve the crashes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanx for the confirmation.
&lt;/p&gt;
&lt;p&gt;
It's important to note that the patch does not &lt;span class="underline"&gt;solve&lt;/span&gt; the problem, which is actually a bug in PHP's &lt;a class="ext-link" href="http://php.net/manual/en/function.stream-get-wrappers.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;stream_get_wrappers()&lt;/a&gt;).  Rather, it is simply intended to reduce the likelihood that that PHP bug will be surfaced in WP.  See below for an explantation of &lt;strong&gt;how&lt;/strong&gt; the patch intends to achieve that.
&lt;/p&gt;
&lt;p&gt;
We still need confirmation from others who are experiencing this problem that the patch reduces the occurrences of the problem for you as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What would be the scenarios in which
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( false === strpos( $path, '://' ) )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
would return true and then we will have the crashes again?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let me see if I can explain what the patch is intened to do.
&lt;/p&gt;
&lt;p&gt;
Many (most?) of PHP's file-related functions (e.g., &lt;a class="ext-link" href="http://php.net/manual/en/function.fopen.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;fopen()&lt;/a&gt;, &lt;a class="ext-link" href="http://php.net/manual/en/function.file-get-contents.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;file_get_contents()&lt;/a&gt;, etc) not only operate on files, but are able to seemlessly operate on URLs (referred to, in this context, as &lt;code&gt;streams&lt;/code&gt;) as well:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;file_get_contents( '/path/to/file.txt' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;file_get_contents( 'https://example.com' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In some cases, WP needs to do extra or special processing when asked to operate on a stream; hence, the existence of &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_is_stream/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;wp_is_stream()&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In the vast majority (99% ?) of cases, the &lt;code&gt;$path&lt;/code&gt; passed to &lt;code&gt;wp_is_stream()&lt;/code&gt; is a file system path and not a URL so there is no need to call PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt;, which returns an array of protocols or URL "schemes" that PHP supports, to test whether the URL is a stream that PHP can handle.
&lt;/p&gt;
&lt;p&gt;
To the best of everyone's understanding, the simple act of calling &lt;code&gt;stream_get_wrappers()&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; cause the PHP bug to surface, but repeated calling of it can.
&lt;/p&gt;
&lt;p&gt;
Since &lt;strong&gt;ALL&lt;/strong&gt; URL's will contain the substring &lt;code&gt;://&lt;/code&gt; and &lt;strong&gt;NO&lt;/strong&gt; file system paths will, the
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( false === strpos( $path, '://' ) ) {
        return false;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
test in the patch avoids calling PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt; in the vast majority of cases.
&lt;/p&gt;
&lt;p&gt;
Changes in WP 4.9.7 drasticly increased the number of times &lt;code&gt;wp_is_stream()&lt;/code&gt; is called in a typical WP request; hence, drastically increasing the number of times PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is called.  This appears to be why there have been so many more reports of the problem since the release of 4.9.7.
&lt;/p&gt;
&lt;p&gt;
So the hope is that by reducing the number of times &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is called, the patch will return the number of times the PHP bug surfaces in WP to pre-4.9.7 levels (and maybe even lower).
&lt;/p&gt;
&lt;p&gt;
Does that explanation help?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>ddenev</dc:creator>

      <pubDate>Sat, 14 Jul 2018 12:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:36/1531572279689776</guid>
      <description>&lt;p&gt;
I can confirm that the provided patch DOES indeed solve the crashes.
&lt;/p&gt;
&lt;p&gt;
I enabled debug mode with XDebug and set a breakpoint after the return statement to check if it will be hit. I did testing for half a day and the breakpoint was never hit, so it looks promising.
&lt;/p&gt;
&lt;p&gt;
What would be the scenarios in which
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( false === strpos( $path, '://' ) )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
would return true and then we will have the crashes again?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44582 (Notice: Undefined property:stdClass::$plugin - wordpress) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 14 Jul 2018 12:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44582#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44582#comment:1/1531569817584655</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey sangwan4pankaj, welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Please can you tell us where you are seeing this error message? Steps to reproduce would be very helpful. I think this coming from a core WordPress utility call for creating lists, but it may well also be in use from plugins or themes. The issue may therefore be with the plugin or theme rather than this being a core bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>sedros</dc:creator>

      <pubDate>Sat, 14 Jul 2018 08:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:35/1531556866912817</guid>
      <description>&lt;p&gt;
My PHP:
dev-lang/php-7.1.12::gentoo was built with the following:
USE="acl apache2 berkdb bzip2 cli crypt ctype curl fileinfo filter gd gdbm gmp hash iconv imap ipv6 json ldap ldap-sasl mysql mysqli nls opcache pdo phar posix postgres readline session simplexml sockets spell ssl threads tokenizer truetype unicode xml xmlreader xmlwriter zip zlib -bcmath -calendar -cdb -cgi -cjk -coverage -debug -embed -enchant -exif -firebird -flatfile -fpm -ftp -inifile -intl -iodbc -kerberos -libedit -libressl -mhash -mssql -oci8-instant-client -odbc -pcntl -phpdbg -qdbm -recode (-selinux) -sharedmem -snmp -soap -sqlite -systemd -sysvipc -test -tidy -wddx -webp -xmlrpc -xpm -xslt" ABI_X86="(64)"
&lt;/p&gt;
&lt;p&gt;
www-apps/wordpress-4.9.7::gentoo was built with the following:
USE="akismet themes vhosts -examples" ABI_X86="(64)"
&lt;/p&gt;
&lt;p&gt;
OS: Gentoo &lt;strong&gt;Linux&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>sedros</dc:creator>

      <pubDate>Sat, 14 Jul 2018 08:22:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:34/1531556557372403</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:32" title="Comment 32"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:30" title="Comment 30"&gt;itowhid06&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, I don't want to sound silly, but is there a slightest chance that this issue might be causing due to windows directory separator ??
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not silly at all, given that the problem only seems to affect Windows hosts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hey, I'm affected on Linux as mentioned before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29159 (user-agent checking is removing visual editor in function user_can_richedit) updated</title>
      
        <dc:creator>mcfedr</dc:creator>

      <pubDate>Sat, 14 Jul 2018 07:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29159#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29159#comment:8/1531554065149037</guid>
      <description>&lt;p&gt;
Seeing this pop up a few years later, first thought, surely, by now, the default should be to enable user_can_richedit, and only disable in a few known cases? how many people are using browsers that dont support the rich editor?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41281 (attachment_url_to_postid results in very slow query) updated</title>
      
        <dc:creator>samvthom16</dc:creator>

      <pubDate>Sat, 14 Jul 2018 06:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41281#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41281#comment:5/1531548225313970</guid>
      <description>&lt;p&gt;
I have been facing the same issue as I have close to 40k posts and equivalent number of items in the media library. Lot of plugins like Yoast Seo use the function attachment_url_to_postid() quite often. This causes a slow query because of the huge database.
&lt;/p&gt;
&lt;p&gt;
I agree with @markjaquith on caching the results as these URLs don't change that often. The function can use transient variables instead of querying the posts table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44104 (Customize: Attempt to count uncountable value) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Jul 2018 03:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44104#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44104#comment:4/1531539199222305</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks to me like this warning can be generated in the existing test for &lt;code&gt;search_available_items_query()&lt;/code&gt; by ensuring that the &lt;code&gt;nav_menus_created_posts&lt;/code&gt; setting has been added, which can be done by calling &lt;code&gt;do_action( 'customize_register' )&lt;/code&gt; at the beginning of the test. &lt;code&gt;test_save_nav_menus_created_posts()&lt;/code&gt; uses a similar pattern. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44104/44104.2.diff" title="Attachment '44104.2.diff' in Ticket #44104"&gt;44104.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44104/44104.2.diff" title="Download"&gt;â€‹&lt;/a&gt; adds that line to the test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44104.2.diff attached to Ticket #44104</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Jul 2018 03:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44104/44104.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44104/44104.2.diff/1531538761551111</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44287 (REST API: Declare user capability to perform actions using JSON Hyper ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 13 Jul 2018 23:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44287#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44287#comment:22/1531522871389196</guid>
      <description>&lt;p&gt;
@pbiron The original patch already been backported to the &lt;code&gt;4.9&lt;/code&gt; branch. The only change remaining is to have the &lt;code&gt;@since&lt;/code&gt; tags updated on &lt;code&gt;trunk&lt;/code&gt; and &lt;code&gt;4.9&lt;/code&gt; branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44314 (`user_confirmed_action_email_content` filter run on two different strings) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44314#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44314#comment:10/1531521797043116</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44192 (Title of Privacy Policy Page not used on login page) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44192#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44192#comment:19/1531521694099049</guid>
      <description>&lt;p&gt;
Can this land in 4.9.8?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44141 (Privacy: Don't replace comment author URL and email with anything) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:24:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44141#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44141#comment:13/1531520694869705</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any chance this can land in 4.9.8?  If it does, then it needs a refresh for &lt;code&gt;@since 4.9.8&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Beta is scheduled for July 17, next Tues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44139 (i18n: "About" disambiguation) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44139#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44139#comment:15/1531520430746998</guid>
      <description>&lt;p&gt;
Is this ready to land in 4.9.8?  Beta is scheduled for July 17, next Tues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44130 (Mixed Case of Privacy Policy on Privacy Settings page) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:17:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44130#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44130#comment:14/1531520243805755</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any chance this can land in 4.9.8 (beta releasing is scheduled for July 17, next Tues)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44126 (Adding fields to comments_form args prevents checkbox displaying) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:14:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44126#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44126#comment:7/1531520080371471</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44126 (Adding fields to comments_form args prevents checkbox displaying) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44126#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44126#comment:6/1531520060882932</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>chanthaboune</dc:creator>

      <pubDate>Fri, 13 Jul 2018 22:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:137</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:137/1531519320058511</guid>
      <description>&lt;p&gt;
I've got some suggested copy edits for that third column.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The title seems ill-suited to the action we want people to take. I can't put my finger on why, though.
&lt;/li&gt;&lt;li&gt;I think "point release" vs "major release" is an important distinction here. I think major release makes it clear for technical and non-technical people alike.
&lt;/li&gt;&lt;li&gt;I wouldn't refer to adding the classic editor as a thing to do "in the meantime" which makes it seem like Gutenberg lite or something.
&lt;/li&gt;&lt;li&gt;I would also put the ask at the bottom, and move the contextual info above it.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
The new editor will be enabled by default in the next major release of WordPress. If you're not sure about how compatible your current themes and plugins are, we've got you covered. You can install the Classic Editor Plugin now which will allow you to continue using the classic editor until everything is ready.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32101 (Ability to mark plugin as unmanaged) updated</title>
      
        <dc:creator>lev0</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32101#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32101#comment:61/1531519048172598</guid>
      <description>&lt;p&gt;
Has there been any progress on this? It's always been an issue. I've seen plenty of discussion and examples of preventing updates on themes &amp;amp; plugins, whether it's because they're private or frozen at a specific version, or whatever. All rely on the plugin (or another) being active. Unique names can be discovered, especially themes', thus be commandeered. I don't see why this is not deemed important.
&lt;/p&gt;
&lt;p&gt;
From the comments presented here, and examples in other package managers, it seems pretty sensible to implement a plugin's "private" status as an update namespace. Its absence would mean be an implicit WordPress.org value for backward compatibility of auto-updates; anything else means &lt;em&gt;not&lt;/em&gt; WP.org. The namespace could serve as an install-unique (not universal-) key for attaching hooks to do 3rd party update checks, and archive fetching, so the rest of WordPress's update system is unchanged. If nothing attaches to those unique hooks, WordPress can warn the admin that they aren't receiving the updates they should. A reserved value like "none" could be disallowed for hooks so only manual updates are allowed for those, again warning the admin. The outcome would be passive protection of plugins, and sanctioned update integration.
&lt;/p&gt;
&lt;p&gt;
Surely you can find a header name that does not already exist in the WP.org repo.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43857 (Show the comment / awaiting moderation message even without opt-in) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43857#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43857#comment:37/1531519040530100</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can anyone test &lt;a href="https://core.trac.wordpress.org/raw-attachment/ticket/43857/43857.4.patch"&gt;43857.4.patch&lt;/a&gt;?
&lt;/p&gt;
&lt;p&gt;
4.9.8 beta is scheduled for July 17 (next Tues) and this could land if gets some testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29159 (user-agent checking is removing visual editor in function user_can_richedit) updated</title>
      
        <dc:creator>here</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29159#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29159#comment:7/1531518357529827</guid>
      <description>&lt;p&gt;
Related ticket to add IE11 with new User-Agent string, &lt;a href="https://core.trac.wordpress.org/ticket/42503"&gt;https://core.trac.wordpress.org/ticket/42503&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42691 (WP_Term_Query get_terms generates invalid sql queries) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:41:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42691#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42691#comment:18/1531518088474807</guid>
      <description>&lt;p&gt;
Any chance this can be backported for 4.9.8?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42586 (Code Editor: Inconsistent results between finding in CodeMirror vs browser) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42586#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42586#comment:37/1531517759630328</guid>
      <description>&lt;p&gt;
4.9.8 beta release is scheduled for next Tues (July 17).
&lt;/p&gt;
&lt;p&gt;
Any chance &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42586#comment:22" title="Comment 22"&gt;comment:22&lt;/a&gt; will be addressed by then or should be punt to 4.9.9?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44287 (REST API: Declare user capability to perform actions using JSON Hyper ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44287#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44287#comment:21/1531516989350691</guid>
      <description>&lt;p&gt;
with that refresh, this is good-to-go for 4.9.8, right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44287 (REST API: Declare user capability to perform actions using JSON Hyper ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44287#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44287#comment:20/1531516490131109</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;43438.2.diff&lt;/code&gt; updates the &lt;code&gt;@since&lt;/code&gt; tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43438.2.diff attached to Ticket #44287</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 13 Jul 2018 21:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44287/43438.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44287/43438.2.diff/1531516447376485</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44052 (Missing parameter type for `login_header()`) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 20:51:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44052#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44052#comment:15/1531515117530640</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44287 (REST API: Declare user capability to perform actions using JSON Hyper ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 20:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44287#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44287#comment:19/1531514574448740</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>dontstealmyfish</dc:creator>

      <pubDate>Fri, 13 Jul 2018 19:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:33/1531511818058840</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:29" title="Comment 29"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can those who are experiencing this problem please apply &lt;a href="https://core.trac.wordpress.org/attachment/ticket/44532/44532.1.diff"&gt;44532.1.diff&lt;/a&gt; and let us know if it reduces the occurrence of the problem?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Added the change and will see if it helps. Should have a definite answer by tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44582 (Notice: Undefined property:stdClass::$plugin - wordpress) created</title>
      
        <dc:creator>sangwan4pankaj</dc:creator>

      <pubDate>Fri, 13 Jul 2018 19:15:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44582</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44582/1531509350882980</guid>
      <description>&lt;p&gt;
Notice: Undefined property: stdClass::$plugin in /hermes/bosnaweb07a/b1754/ipg.account_name/folder_name/wp-includes/class-wp-list-util.php on line 150
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14356 (Better string for onbeforeunload event dialog) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 18:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14356#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14356#comment:21/1531505955731182</guid>
      <description>&lt;p&gt;
Works on IE 8-11.
&lt;/p&gt;
&lt;p&gt;
All the other browsers I have (FF 57, Chrome 67, Edge 42) all display their own strings.
&lt;/p&gt;
&lt;p&gt;
Can we land this in 4.9.8?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 15:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:1/1531496928909097</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>success.png attached to Ticket #44581</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 15:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44581/success.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44581/success.png/1531496745926550</guid>
      <description>&lt;p&gt;
this is what users without 'edit_posts' capability see after their upload has succeeded after 44581.diff is applied
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44581.diff attached to Ticket #44581</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 15:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44581/44581.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44581/44581.diff/1531496696737872</guid>
      <description>&lt;p&gt;
report "Success" for users without 'edit_post' capability
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>done-crunching.png attached to Ticket #44581</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 15:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44581/done-crunching.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44581/done-crunching.png/1531496223621266</guid>
      <description>&lt;p&gt;
this is what users with 'edit_posts' capability see after their upload has succeeded
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>crunching.png attached to Ticket #44581</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 15:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44581/crunching.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44581/crunching.png/1531496200188944</guid>
      <description>&lt;p&gt;
this is what users without 'edit_posts' capability see after their upload has succeeded
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9172 (Filter action links for posts, pages, categories, link categories, ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Jul 2018 15:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9172#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9172#comment:10/1531496184669760</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #community-team by remediosgraphic. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/community-team/p1531496183000529"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) created</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 15:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581/1531496147741183</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;create a user with &lt;code&gt;upload_files&lt;/code&gt; capability but &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;edit_posts&lt;/code&gt; capability
&lt;/li&gt;&lt;li&gt;login as that user
&lt;/li&gt;&lt;li&gt;upload a media file
&lt;/li&gt;&lt;li&gt;notice that the status of the upload stays at &lt;code&gt;Crunching...&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;notice also that the filename/post_title eventually ends up blank
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Expected behavior:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;user gets some sort of "Success" notification (analogous to the &lt;code&gt;Edit&lt;/code&gt; link that users with &lt;code&gt;edit_posts&lt;/code&gt; capability get)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I discovered this problem on a site with users whose role is basically &lt;code&gt;Subscriber&lt;/code&gt; but with &lt;code&gt;upload_files&lt;/code&gt; capability.  The problem is that &lt;code&gt;/wp-admin/async-upload.php&lt;/code&gt; contains:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'edit_post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;wp_die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Sorry, you are not allowed to edit this item.'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
My current workaround is to hook into &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/user_has_cap/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;user_has_cap&lt;/a&gt; and add &lt;code&gt;edit_posts&lt;/code&gt; IFF &lt;code&gt;edit_post&lt;/code&gt; is being checked from &lt;code&gt;async-upload.php&lt;/code&gt; and its an attachment whose &lt;code&gt;post_author&lt;/code&gt; is the current user.  This workaround is not ideal (because I don't want these users to be able to edit the attachment), but at least they know the upload succeeded.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43910 (Add actions and filters so plugins can easily extend export/erasure ...) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 13 Jul 2018 14:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43910#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43910#comment:17/1531493184944972</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch refreshed for 4.9.8 release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43910.2.diff attached to Ticket #43910</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 13 Jul 2018 14:45:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43910/43910.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43910/43910.2.diff/1531493150102232</guid>
      <description>&lt;p&gt;
Patch refreshed for 4.9.8 release
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44579 (get_option() is type aware now (returns Integers as Integers)) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 13 Jul 2018 14:32:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44579#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44579#comment:2/1531492363094027</guid>
      <description>&lt;p&gt;
Hi @gdespoulain - Welcome to Trac, and thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
The bit of documentation you cite here was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36234" title="Clarify return types in `get_option()` documentation.
The new note ..."&gt;[36234]&lt;/a&gt;. You can read the backstory in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31820" title="#31820: enhancement: get_option() returns Integers as strings (closed: fixed)"&gt;#31820&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22192" title="#22192: defect (bug): update_metadata() and update_option() strict checks can cause false ... (new)"&gt;#22192&lt;/a&gt;, but briefly: &lt;code&gt;get_option()&lt;/code&gt; and similar functions return all values as strings *except when pulled from memory on the same pageload as when &lt;code&gt;update_option()&lt;/code&gt; is called*. So:
&lt;/p&gt;
&lt;pre class="wiki"&gt;update_option( 'foo', 1 );
var_dump( get_option( 'foo' ) );
// int
update_option( 'foo', 1 );
// refresh page
var_dump( get_option( 'foo' ) );
// string
&lt;/pre&gt;&lt;p&gt;
You may also see the same behavior between pageloads if you're running a persistent cache (Memcache, Redis, etc) depending on the nature of the cache. Can you confirm?
&lt;/p&gt;
&lt;p&gt;
This being said, this bit of documentation could probably be improved. Something like "Note that scalar values may be returned as strings when retrieved from the database" might be a more accurate wording.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 14:21:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:32/1531491675458140</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:30" title="Comment 30"&gt;itowhid06&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, I don't want to sound silly, but is there a slightest chance that this issue might be causing due to windows directory separator ??
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not silly at all, given that the problem only seems to affect Windows hosts.
&lt;/p&gt;
&lt;p&gt;
But, no, I don't think that's a contributing factor.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #44573,â€‹44575 batch updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 13 Jul 2018 14:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=44573%2C44575</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=44573%2C44575/1531491572812275</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44573" title="#44573: enhancement: new site creation consistency (closed: duplicate)"&gt;#44573&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>itowhid06</dc:creator>

      <pubDate>Fri, 13 Jul 2018 13:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:31/1531489715051950</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>itowhid06</dc:creator>

      <pubDate>Fri, 13 Jul 2018 13:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:30/1531489456603156</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
So, I don't want to sound silly, but is there a slightest chance that this issue might be causing due to windows directory separator ?? previously I've faced a problem due to windows directory separator and using something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;str_replace('\\', '/', $path);
&lt;/pre&gt;&lt;p&gt;
solved the issue. Any thoughts?
&lt;/p&gt;
&lt;p&gt;
Edit: sorry, not sure why the reporter-feedback tag got removed. I'm adding it again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #41281,â€‹44580 batch updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 13:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41281%2C44580</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41281%2C44580/1531489406496466</guid>
      <description>duplicate: &lt;p&gt;
Thanks for your report @samvthom16
&lt;/p&gt;
&lt;p&gt;
This has already been reported in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41281" title="#41281: enhancement: attachment_url_to_postid results in very slow query (new)"&gt;#41281&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Please join in there, thanks.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 13:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:29/1531489189966911</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can those who are experiencing this problem please apply &lt;a href="https://core.trac.wordpress.org/attachment/ticket/44532/44532.1.diff"&gt;44532.1.diff&lt;/a&gt; and let us know if it reduces the occurrence of the problem?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44532.1.diff attached to Ticket #44532</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 13 Jul 2018 13:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44532/44532.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44532/44532.1.diff/1531489029559223</guid>
      <description>&lt;p&gt;
implements @dd32's suggestion in &lt;a href="https://core.trac.wordpress.org/ticket/44532#comment:27"&gt;https://core.trac.wordpress.org/ticket/44532#comment:27&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Fri, 13 Jul 2018 11:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:136/1531480458536833</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As already explained, callout image can not be hosted on third party server, leaks user IP, browserinfo, website-url via referer, voids &lt;a class="ext-link" href="https://make.wordpress.org/core/tag/core-privacy/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;#core-privacy&lt;/a&gt; (formerly known as &lt;a class="ext-link" href="https://make.wordpress.org/core/tag/gdpr-compliance/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;#gdpr-compliance&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 11:02:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:135</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:135/1531479722733910</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41316/41316.13.diff" title="Attachment '41316.13.diff' in Ticket #41316"&gt;41316.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41316/41316.13.diff" title="Download"&gt;â€‹&lt;/a&gt; is a first pass at implementing @kjellr's design.
&lt;/p&gt;
&lt;p&gt;
Styling TODO:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fix the column widths.
&lt;/li&gt;&lt;li&gt;Subheading paragraph spacing.
&lt;/li&gt;&lt;li&gt;Link underlining.
&lt;/li&gt;&lt;li&gt;Action button alignment.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Functionality TODO:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Implement Classic Editor plugin installation.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If someone feels like continuing with this, please feel free. I'll pick it up again on Monday.
&lt;/p&gt;
&lt;p&gt;
Note that this patch has been written against the 4.9 branch, not against trunk. ðŸ™‚
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44579 (get_option() is type aware now (returns Integers as Integers)) updated</title>
      
        <dc:creator>pfefferle</dc:creator>

      <pubDate>Fri, 13 Jul 2018 11:00:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44579#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44579#comment:1/1531479639969275</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41316.13.diff attached to Ticket #41316</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 10:57:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41316/41316.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41316/41316.13.diff/1531479428031567</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44580 (The function attachment_url_to_postid in wp-includes/media.php causes ...) created</title>
      
        <dc:creator>samvthom16</dc:creator>

      <pubDate>Fri, 13 Jul 2018 10:37:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44580</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44580/1531478263834845</guid>
      <description>&lt;p&gt;
We have close to 40k posts and equivalent number of items in the media library. Lot of plugins like Yoast Seo use the function attachment_url_to_postid() quite often. This causes a slow query because of the huge database.
&lt;/p&gt;
&lt;p&gt;
Solution:
Since URLs don't change that often. The function can use transient variables instead of querying the posts table.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>current.jpg attached to Ticket #44267</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 10:09:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44267/current.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44267/current.jpg/1531476599754517</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44267 (Privacy Request List Table: A way to show the time of request when ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 10:05:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44267#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44267#comment:5/1531476340553888</guid>
      <description>&lt;p&gt;
@afercia thanks for looking into it.
&lt;/p&gt;
&lt;p&gt;
The status column can also contain a date.
&lt;/p&gt;
&lt;p&gt;
Here are some various versions, that display the time as well:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44267/current.jpg" title="Attachment 'current.jpg' in Ticket #44267"&gt;current.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44267/current.jpg" title="Download"&gt;â€‹&lt;/a&gt; - Shows the current version with &lt;code&gt;date_i18n( get_option( 'date_format' ), $timestamp );&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v1.jpg" title="Attachment 'datetime-v1.jpg' in Ticket #44267"&gt;datetime-v1.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44267/datetime-v1.jpg" title="Download"&gt;â€‹&lt;/a&gt; - Shows the &lt;code&gt;'Y/m/d g:i:s a'&lt;/code&gt; format.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v2.jpg" title="Attachment 'datetime-v2.jpg' in Ticket #44267"&gt;datetime-v2.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44267/datetime-v2.jpg" title="Download"&gt;â€‹&lt;/a&gt; - Shows the &lt;code&gt;'Y/m/d g:i:s a'&lt;/code&gt; format and the &lt;code&gt;Completed&lt;/code&gt; datetime in a new line without parentheses.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v3.jpg" title="Attachment 'datetime-v3.jpg' in Ticket #44267"&gt;datetime-v3.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44267/datetime-v3.jpg" title="Download"&gt;â€‹&lt;/a&gt; - Shows the &lt;code&gt;'Y/m/d' at 'g:i a'&lt;/code&gt; format and the &lt;code&gt;Completed&lt;/code&gt; datetime in a new line without parentheses.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v4.jpg" title="Attachment 'datetime-v4.jpg' in Ticket #44267"&gt;datetime-v4.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44267/datetime-v4.jpg" title="Download"&gt;â€‹&lt;/a&gt; - Shows the &lt;code&gt;'Y/m/d' at 'g:i a'&lt;/code&gt; format.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>datetime-v4.jpg attached to Ticket #44267</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 09:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v4.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v4.jpg/1531475056397815</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>datetime-v3.jpg attached to Ticket #44267</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 09:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v3.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v3.jpg/1531475043702794</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>datetime-v2.jpg attached to Ticket #44267</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 09:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v2.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v2.jpg/1531475029467692</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>datetime-v1.jpg attached to Ticket #44267</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 09:43:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v1.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44267/datetime-v1.jpg/1531475014316190</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44579 (get_option() is type aware now (returns Integers as Integers)) created</title>
      
        <dc:creator>gdespoulain</dc:creator>

      <pubDate>Fri, 13 Jul 2018 09:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44579</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44579/1531472445095193</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I noticed that the get_option() function now returns the value type it was originally given (ex. I give an INT in update_option(), then get_option() returns an INT).
&lt;/p&gt;
&lt;p&gt;
But the doc doesn't seems to agree with that:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;wp-includes/option.php&lt;/strong&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;* Any scalar values will be returned as strings.
&lt;/pre&gt;&lt;p&gt;
This text seems to be there for historical reasons (&lt;a href="https://core.trac.wordpress.org/ticket/31820"&gt;https://core.trac.wordpress.org/ticket/31820&lt;/a&gt;) and something changed in the code since then, but I can't find the related commit.
&lt;/p&gt;
&lt;p&gt;
Proposed text to fix the doc:
&lt;/p&gt;
&lt;pre class="wiki"&gt;* This function is type-aware: the return type will be the same as the last given input value.
&lt;/pre&gt;&lt;p&gt;
Thx!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 13 Jul 2018 08:44:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:18/1531471462259558</guid>
      <description>&lt;p&gt;
I have to say I still feel the note is not needed here. I totally am ok with adding something in for screen reader text but the icon just feels out of place and like it's trying to be an interaction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43632 (Add a screen reader text for Hello Dolly lyrics) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Jul 2018 08:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43632#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43632#comment:17/1531471189245649</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I tried testing this with VoiceOver in Chrome, but I was unable to use the keyboard to actually navigate to the lyrics.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@desrosj to navigate trough all elements use &lt;code&gt;Ctrl-Option-Right arrow&lt;/code&gt; (or Left arrow to go back). Your best option would be testing with VoiceOver and Safari though, not Chrome. Instead, Windows screen readers use the Up and Down arrows.
&lt;/p&gt;
&lt;p&gt;
With regards to the patch, just a small thing: adding a colon &lt;code&gt;:&lt;/code&gt; at the end of the screen reader text would help, making screen readers do a brief pause. Currently, the string is announced all together without any pause:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/JXGoaohrgm.png"&gt;&lt;img src="http://cldup.com/JXGoaohrgm.png" alt="http://cldup.com/JXGoaohrgm.png" crossorigin="anonymous" title="http://cldup.com/JXGoaohrgm.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) updated</title>
      
        <dc:creator>ivankristianto</dc:creator>

      <pubDate>Fri, 13 Jul 2018 08:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280#comment:25/1531470634325667</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38280#comment:24" title="Comment 24"&gt;desrosj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38280#comment:22" title="Comment 22"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also have questions about the "if" conditions where I put the comment &lt;code&gt;are these right?&lt;/code&gt;. I know that these are meant to be shortcuts, but I worry that they have the potential to produce corrupted data. For example, the &lt;code&gt;1 &amp;gt;= count( $taxonomy_object-&amp;gt;object_type )&lt;/code&gt; call assumes that plugins have properly registered their taxonomies with object types - but do we enforce this elsewhere? What if the &lt;code&gt;$taxonomy_object-&amp;gt;object_type&lt;/code&gt; is not the same as &lt;code&gt;$object_type&lt;/code&gt;? It seems better to return no data in these cases than to return something potentially incorrect. Can anyone help to think through the possibilities here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When a taxonomy is registered, no object type validation is performed. So, you could register a &lt;code&gt;foo&lt;/code&gt; object type for a taxonomy even if &lt;code&gt;foo&lt;/code&gt; objects are not registered. Maybe &lt;code&gt;1 &amp;gt;= count( $taxonomy_object-&amp;gt;object_type )&lt;/code&gt; could be changed to count the number of object types that currently exist instead. This would add a need to compare the number of object types stored in &lt;code&gt;_wp_counted_object_types&lt;/code&gt; with the number of active in order to trigger recounting if an object type is removed, but could prevent inaccurate counts when an object type is removed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with @desrosj here, &lt;code&gt;$taxonomy_object-&amp;gt;object_type&lt;/code&gt; could be different and we didn't enforced that. I prefer we remove that condition and go straight get the count from the meta / recount it. It's more safe rather than return false data.
&lt;/p&gt;
&lt;p&gt;
I did add back the unit testing that missing in previous patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38280/38280.17.diff" title="Attachment '38280.17.diff' in Ticket #38280"&gt;38280.17.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38280/38280.17.diff" title="Download"&gt;â€‹&lt;/a&gt;. And also rename the function name as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38280.17.diff attached to Ticket #38280</title>
      
        <dc:creator>ivankristianto</dc:creator>

      <pubDate>Fri, 13 Jul 2018 08:17:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38280/38280.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38280/38280.17.diff/1531469865697732</guid>
      <description>&lt;p&gt;
Added back wpGetTermObjectCount test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44267 (Privacy Request List Table: A way to show the time of request when ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Jul 2018 08:11:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44267#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44267#comment:4/1531469511094064</guid>
      <description>&lt;p&gt;
@desrosj hi, as a general rule if the information is important enough and relevant for all users, then it should be displayed in plain text. Using a title attribute is just a good way to hide the information from some users.
&lt;/p&gt;
&lt;p&gt;
In the last couple years, there's been an ongoing effort to &lt;a href="https://core.trac.wordpress.org/query?keywords=~title-attribute"&gt;remove title attributes&lt;/a&gt; from core. We've made a very few exceptions, and the posts list table is one of them. It was discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35313" title="#35313: defect (bug): Remove title attributes: Posts, Pages, and CPTs screens (closed: fixed)"&gt;#35313&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35391" title="#35391: defect (bug): Remove title attributes: the Posts Date column full date and time (closed: maybelater)"&gt;#35391&lt;/a&gt; and decided to keep the &lt;code&gt;&amp;lt;abbr&amp;gt;&lt;/code&gt; with its title as is. In that case it was an acceptable trade-off, also considering the limited space (we couldn't find a better solution too).
&lt;/p&gt;
&lt;p&gt;
In this case, I'd say the requests table has enough room to display the full date + time. I see it's now based on the &lt;code&gt;date_format&lt;/code&gt; user setting. That means changing the setting under "General Settings" in the admin to something like &lt;code&gt;F j, Y g:i A&lt;/code&gt; would make the time appear. However, that would change all the dates displayed in the admin.
&lt;/p&gt;
&lt;p&gt;
I'm not a lawyer :) but since this is something related to legal stuff, always displaying the full date + time could be beneficial. I'd consider to not use a formatting based on &lt;code&gt;date_format&lt;/code&gt; and always show date + time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #42718,â€‹44572 batch updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 13 Jul 2018 08:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42718%2C44572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42718%2C44572/1531469351867602</guid>
      <description>duplicate: &lt;p&gt;
Thanks @sterndata for reporting the issue.
&lt;/p&gt;
&lt;p&gt;
It's being tracked here &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42718" title="#42718: defect (bug): Video shortcode needs muted attribute for Autoplay to work with Safari ... (new)"&gt;#42718&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Feel free to join in there, thanks.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #30120 (Internationalize Hello Dolly) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Jul 2018 07:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30120#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30120#comment:13/1531465748180198</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1531465747000143"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42537 (Remove title attributes: wp-login.php) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Jul 2018 07:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42537#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42537#comment:4/1531465426944568</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43874 (REST API: Only render fields specific to request when _fields= is used) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43874#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43874#comment:12/1531464652853309</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43445" title="REST API: Filter responses based on the `_fields` parameter, before ..."&gt;43445&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Filter responses based on the &lt;code&gt;_fields&lt;/code&gt; parameter, before data is processed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Historically, the REST API would generate the entire response object, including running expensive filters, then it would apply the &lt;code&gt;_fields&lt;/code&gt; parameter, discarding the fields that weren't specificed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change causes &lt;code&gt;_fields&lt;/code&gt; to be applied earlier, so that only requested fields are processed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43087" title="REST API: Filter responses based on the `_fields` parameter, before ..."&gt;[43087]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43874" title="#43874: defect (bug): REST API: Only render fields specific to request when _fields= is used (closed: fixed)"&gt;#43874&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43445]: REST API: Filter responses based on the `_fields` parameter, before ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43445/1531464651760375</guid>
      <description>&lt;p&gt;
REST API: Filter responses based on the &lt;code&gt;_fields&lt;/code&gt; parameter, before data is processed.
&lt;/p&gt;
&lt;p&gt;
Historically, the REST API would generate the entire response object, including running expensive filters, then it would apply the &lt;code&gt;_fields&lt;/code&gt; parameter, discarding the fields that weren't specificed.
&lt;/p&gt;
&lt;p&gt;
This change causes &lt;code&gt;_fields&lt;/code&gt; to be applied earlier, so that only requested fields are processed.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43087" title="REST API: Filter responses based on the `_fields` parameter, before ..."&gt;[43087]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43874" title="#43874: defect (bug): REST API: Only render fields specific to request when _fields= is used (closed: fixed)"&gt;#43874&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>ddenev</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:28/1531463830239770</guid>
      <description>&lt;p&gt;
Hi @dd32,
&lt;/p&gt;
&lt;p&gt;
Thank you for responding! Here is my info:
&lt;/p&gt;
&lt;pre class="wiki"&gt;== Server Environment ==
    Web server:	Apache/2.4.33 (Win64) OpenSSL/1.1.0h PHP/7.1.19 (Windows NT SOLO AMD64 build 7601 (Windows 7 Enterprise Edition Service Pack 1))
    Memory limit:	256M
    PHP version:	7.1.19
    MySQL version:	5.7.22
    Curl version:	7.59.0 / SSL: OpenSSL/1.0.2o / libz: 1.2.8
    OpenSSL version:	OpenSSL 1.0.2o 27 Mar 2018
    MCrypt:	Yes
    ZipArchive::addFile:	Yes
    zip executable found:	No
    Apache modules:	core, http_core, access_compat, alias, authz_core, autoindex, dir, env, include, isapi, log_config, mime, negotiation, php7, rewrite, setenvif, so, socache_shmcb, ssl, win32, mpm_winnt
== WordPress Environment ==
	Version: 4.9.7
	Site URL: https://bayer-machines.ddev
	Home URL: https://bayer-machines.ddev
	WP Multisite: No
	Max Upload Size: 32 MB
	Memory limit: 128M
        Memory limit: 256M
	Permalink Structure: /%postname%/
	Language: en-US
	Timezone: Europe/Sofia
	Debug Mode: Inactive
== User ==
	Role: administrator
	WP Profile lang: en_US
	User Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36
&lt;/pre&gt;&lt;p&gt;
PHP Streams (from phpinfo()):
&lt;/p&gt;
&lt;pre class="wiki"&gt;Registered PHP Streams             : php, file, glob, data, http, ftp, zip, compress.zlib, compress.bzip2, https, ftps, phar
Registered Stream Socket Transports: tcp, udp, ssl, sslv3, tls, tlsv1.0, tlsv1.1, tlsv1.2
Registered Stream Filters          : convert.iconv.*, mcrypt.*, mdecrypt.*, string.rot13, string.toupper, string.tolower, string.strip_tags, convert.*, consumed, dechunk, zlib.*, bzip2.*
&lt;/pre&gt;&lt;p&gt;
PHP Extensions:
&lt;/p&gt;
&lt;pre class="wiki"&gt;c:\&amp;gt;php -m
[PHP Modules]
bcmath
bz2
calendar
Core
ctype
curl
date
dom
filter
gd
hash
iconv
json
libxml
mbstring
mcrypt
mysqli
mysqlnd
openssl
pcre
PDO
pdo_mysql
Phar
readline
Reflection
session
SimpleXML
soap
sockets
SPL
standard
tokenizer
wddx
xdebug
xml
xmlreader
xmlrpc
xmlwriter
Zend OPcache
zip
zlib
&lt;/pre&gt;&lt;p&gt;
This is the latest PHP 7.1 version and I don't want to change to 7.2 yet (other problems) - so no benefit in upgrading to 7.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44339 (Emoji: Update Twemoji to 11.0) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44339#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44339#comment:22/1531463784679685</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43444" title="Emoji: Update Twemoji to version 11.0.
ðŸ¦¹
Backport of [43377] to the ..."&gt;43444&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Emoji: Update Twemoji to version 11.0.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ðŸ¦¹&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Backport of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43377" title="Emoji: Update Twemoji to version 11.0.
ðŸ¦¹
Props kraftbj,
Fixes #44339.
"&gt;[43377]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kraftbj,&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44339" title="#44339: task (blessed): Emoji: Update Twemoji to 11.0 (closed: fixed)"&gt;#44339&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43444]: Emoji: Update Twemoji to version 11.0.  ðŸ¦¹  Backport of [43377] to the ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43444/1531463783682425</guid>
      <description>&lt;p&gt;
Emoji: Update Twemoji to version 11.0.
&lt;/p&gt;
&lt;p&gt;
ðŸ¦¹
&lt;/p&gt;
&lt;p&gt;
Backport of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43377" title="Emoji: Update Twemoji to version 11.0.
ðŸ¦¹
Props kraftbj,
Fixes #44339.
"&gt;[43377]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
&lt;p&gt;
Props kraftbj,
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44339" title="#44339: task (blessed): Emoji: Update Twemoji to 11.0 (closed: fixed)"&gt;#44339&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44096 (REST API: Taxonomy and term endpoints should use correct permission checks) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44096#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44096#comment:9/1531463310198014</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43443" title="REST API: Tweak permission checks for taxonomy and term endpoints
To ..."&gt;43443&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Tweak permission checks for taxonomy and term endpoints&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To match behaviour in the Classic Editor, we need to slightly loosen permissions on taxonomy and term endpoints. This allows users to create terms to assign to a post that they're editing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43440" title="REST API: Tweak permission checks for taxonomy and term endpoints
To ..."&gt;[43440]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44096" title="#44096: defect (bug): REST API: Taxonomy and term endpoints should use correct permission checks (closed: fixed)"&gt;#44096&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43443]: REST API: Tweak permission checks for taxonomy and term endpoints  To ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:28:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43443/1531463309226771</guid>
      <description>&lt;p&gt;
REST API: Tweak permission checks for taxonomy and term endpoints
&lt;/p&gt;
&lt;p&gt;
To match behaviour in the Classic Editor, we need to slightly loosen permissions on taxonomy and term endpoints. This allows users to create terms to assign to a post that they're editing.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43440" title="REST API: Tweak permission checks for taxonomy and term endpoints
To ..."&gt;[43440]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44096" title="#44096: defect (bug): REST API: Taxonomy and term endpoints should use correct permission checks (closed: fixed)"&gt;#44096&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44321 (REST API: Expose revision count and last revision ID on Post response) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44321#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44321#comment:20/1531462409080769</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43442" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;43442&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Expose revision count and last revision ID on Post response&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So that REST API clients can show appropriate UI for a post's revisions, it needs to know how many revisions the post has, and what the latest revision ID is.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43439" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;[43439]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43441" title="REST API: Update the test fixture generator following [43439]
As ..."&gt;[43441]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kadamwhite, danielbachhuber, birgire, TimothyBlynJacobs, pento.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44321" title="#44321: enhancement: REST API: Expose revision count and last revision ID on Post response (closed: fixed)"&gt;#44321&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43442]: REST API: Expose revision count and last revision ID on Post response  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 06:13:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43442/1531462407999703</guid>
      <description>&lt;p&gt;
REST API: Expose revision count and last revision ID on Post response
&lt;/p&gt;
&lt;p&gt;
So that REST API clients can show appropriate UI for a post's revisions, it needs to know how many revisions the post has, and what the latest revision ID is.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43439" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;[43439]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43441" title="REST API: Update the test fixture generator following [43439]
As ..."&gt;[43441]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
&lt;p&gt;
Props kadamwhite, danielbachhuber, birgire, TimothyBlynJacobs, pento.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44321" title="#44321: enhancement: REST API: Expose revision count and last revision ID on Post response (closed: fixed)"&gt;#44321&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44321 (REST API: Expose revision count and last revision ID on Post response) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44321#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44321#comment:19/1531457136233438</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43441" title="REST API: Update the test fixture generator following [43439]
As ..."&gt;43441&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Update the test fixture generator following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43439" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;[43439]&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43439" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;[43439]&lt;/a&gt; added data that contains object IDs, it can cause &lt;code&gt;wp-api-generated.js&lt;/code&gt; to be unnecessarily regenerated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regenerating our list of fixtures that need normalising rectifies this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44321" title="#44321: enhancement: REST API: Expose revision count and last revision ID on Post response (closed: fixed)"&gt;#44321&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43441]: REST API: Update the test fixture generator following [43439]  As ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:45:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43441/1531457135213818</guid>
      <description>&lt;p&gt;
REST API: Update the test fixture generator following &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43439" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;[43439]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43439" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;[43439]&lt;/a&gt; added data that contains object IDs, it can cause &lt;code&gt;wp-api-generated.js&lt;/code&gt; to be unnecessarily regenerated.
&lt;/p&gt;
&lt;p&gt;
Regenerating our list of fixtures that need normalising rectifies this.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44321" title="#44321: enhancement: REST API: Expose revision count and last revision ID on Post response (closed: fixed)"&gt;#44321&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44096 (REST API: Taxonomy and term endpoints should use correct permission checks) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44096#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44096#comment:8/1531457040473345</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44096 (REST API: Taxonomy and term endpoints should use correct permission checks) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:23:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44096#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44096#comment:7/1531455816637794</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43440" title="REST API: Tweak permission checks for taxonomy and term endpoints
To ..."&gt;43440&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Tweak permission checks for taxonomy and term endpoints&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To match behaviour in the Classic Editor, we need to slightly loosen permissions on taxonomy and term endpoints. This allows users to create terms to assign to a post that they're editing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44096" title="#44096: defect (bug): REST API: Taxonomy and term endpoints should use correct permission checks (closed: fixed)"&gt;#44096&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43440]: REST API: Tweak permission checks for taxonomy and term endpoints  To ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:23:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43440/1531455815597452</guid>
      <description>&lt;p&gt;
REST API: Tweak permission checks for taxonomy and term endpoints
&lt;/p&gt;
&lt;p&gt;
To match behaviour in the Classic Editor, we need to slightly loosen permissions on taxonomy and term endpoints. This allows users to create terms to assign to a post that they're editing.
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44096" title="#44096: defect (bug): REST API: Taxonomy and term endpoints should use correct permission checks (closed: fixed)"&gt;#44096&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44321 (REST API: Expose revision count and last revision ID on Post response) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:06:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44321#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44321#comment:18/1531454815671965</guid>
      <description>&lt;p&gt;
Reopened for backport.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44321 (REST API: Expose revision count and last revision ID on Post response) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44321#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44321#comment:17/1531454784698070</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43439" title="REST API: Expose revision count and last revision ID on Post response
 ..."&gt;43439&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Expose revision count and last revision ID on Post response&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So that REST API clients can show appropriate UI for a post's revisions, it needs to know how many revisions the post has, and what the latest revision ID is.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kadamwhite, danielbachhuber, birgire, TimothyBlynJacobs.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44321" title="#44321: enhancement: REST API: Expose revision count and last revision ID on Post response (closed: fixed)"&gt;#44321&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43439]: REST API: Expose revision count and last revision ID on Post response  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 13 Jul 2018 04:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43439/1531454783648774</guid>
      <description>&lt;p&gt;
REST API: Expose revision count and last revision ID on Post response
&lt;/p&gt;
&lt;p&gt;
So that REST API clients can show appropriate UI for a post's revisions, it needs to know how many revisions the post has, and what the latest revision ID is.
&lt;/p&gt;
&lt;p&gt;
Props kadamwhite, danielbachhuber, birgire, TimothyBlynJacobs.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44321" title="#44321: enhancement: REST API: Expose revision count and last revision ID on Post response (closed: fixed)"&gt;#44321&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41972 (Add Import/Export functionality to the Customizer) updated</title>
      
        <dc:creator>galbaras</dc:creator>

      <pubDate>Fri, 13 Jul 2018 03:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41972#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41972#comment:2/1531452318305416</guid>
      <description>&lt;p&gt;
@westonruter The complexity of importing may be just a result of using the post export for exporting changesets.
&lt;/p&gt;
&lt;p&gt;
Since the customizer can turn a changeset into a rendered page for previewing on the source site, it must first resolve all the references. Exporting at that point (from the customizer, not the WP exporter) should provide enough information for the subsequent import.
&lt;/p&gt;
&lt;p&gt;
There may be caveats, like requiring the same theme(s) and plugins to be present/active on the target site as on the source site, but assuming all the settings are fully included in the export, not referenced, importing should work OK.
&lt;/p&gt;
&lt;p&gt;
I think this enhancement can be a major leap forward once the customizer is fully adopted by plugin developers as a way to save/edit plugin settings. Taking new developments and respective settings live, while not changing content, can then be a far easier matter than it is today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 13 Jul 2018 01:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:27/1531446067682412</guid>
      <description>&lt;p&gt;
As a possible work-around for now, we could skip calling &lt;code&gt;stream_get_wrappers()&lt;/code&gt; in &lt;code&gt;wp_is_stream()&lt;/code&gt; when possible - For most users, where streams aren't actually used, it'll avoid this issue for the majority of users.
&lt;/p&gt;
&lt;p&gt;
Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_is_stream( $stream )
   if  $stream does not contain '://':
      return $stream cannot be a Stream.
   endif
   $wrappers = stream_get_wrappers();
   ... All existing logic, probably with r42432 backported.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 13 Jul 2018 01:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:26/1531444869855425</guid>
      <description>&lt;p&gt;
For those experiencing this issue:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can you detail the version of PHP you're using? 7.0.something? 7.1 / 7.2? Does changing that to a later version help?
&lt;/li&gt;&lt;li&gt;What operating system &amp;amp; Version (Windows Server 20... or similar)
&lt;/li&gt;&lt;li&gt;What PHP extensions do you have active (You can find this in the PHP Info output)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>