<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #185 (wp-login.php segfaults Apache with PHP5.0.1-dev) updated</title>
      
        <dc:creator>Jonathan Stanley</dc:creator>

      <pubDate>Sat, 25 Sep 2004 12:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/185</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/185/1096115582000000</guid>
      <description>&lt;p&gt;
Please read the previous comments. It's fixed (or rather appears to have been a non-issue) in PHP 5.1.x-dev, but given the various timeframes for freezing of PHP 5.0.x(-dev), it's unlikely that the PHP bug will be fixed till at least PHP 5.0.3.
&lt;/p&gt;
&lt;p&gt;
But in the meantime, if this bug affects/affected you, then vote for the bug to get PHP fixed... &lt;a class="ext-link" href="http://bugs.php.net/29944"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://bugs.php.net/29944&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #185 (wp-login.php segfaults Apache with PHP5.0.1-dev) updated</title>
      
        <dc:creator>anonymousbugger</dc:creator>

      <pubDate>Sat, 25 Sep 2004 12:25:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/185</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/185/1096115135000000</guid>
      <description>&lt;p&gt;
Here with php 5.0.2 the problem isn't fixed :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #209 (Subject line of sent e-mails is not UTF-8) updated</title>
      
        <dc:creator>rq</dc:creator>

      <pubDate>Fri, 24 Sep 2004 19:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/209</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/209/1096052616000000</guid>
      <description>&lt;p&gt;
WARNING! you MUST encrypt ALL the headers, not only the subject. Currently, wp isn't following RFC's. With cal's patch, it won't be following them either.
&lt;/p&gt;
&lt;p&gt;
BTW, it would be a lot easier to use Base64 encoding for headers:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt; encode a given header text to base64
function encode_header($header) {
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$ret = '=?' . get_settings('blog_charset') . '?B?' . base64_encode($header) . '?=';
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
return $ret;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would suggest to use this function for encoding MIME headers, and add those MIME-version and Content-type headers on each send mail request. That would allow easy processing of EVERY header or a part of it (i.e., the first part of the "From" header).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #316 (Post with links to large file slows down) closed</title>
      
        <dc:creator>michel v</dc:creator>

      <pubDate>Fri, 24 Sep 2004 17:31:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/316</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/316/1096047117000000</guid>
      <description>20: &lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/pipermail/cvs_wordpress.org/2004-September/000456.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/pipermail/cvs_wordpress.org/2004-September/000456.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Now we check for the Content-Type and stop when we're not processing an (x)html or xml page, then we set a timeout on the number of bytes to fetch before considering that the file doesn't specify a pingback server.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [1709]: added discover_pingback_server_uri, should dramatically speed things up </title>
      
        <dc:creator>michelvaldrighi</dc:creator>

      <pubDate>Fri, 24 Sep 2004 17:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1709</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1709/1096046965000000</guid>
      <description>&lt;p&gt;
added discover_pingback_server_uri, should dramatically speed things up
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #278 (Upgrade from WordPress 1.0 breaks comments) updated</title>
      
        <dc:creator>rq</dc:creator>

      <pubDate>Fri, 24 Sep 2004 16:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/278</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/278/1096043479000000</guid>
      <description>&lt;p&gt;
is there a way to run some check before -1'ing everything?
like:
if ((we have no lines which have comment_approved set to 0) and (we have some lines which have comment_approved set to 2))
then we -1 every value of comment_approved
else we do nothing.
&lt;/p&gt;
&lt;p&gt;
I'm not sure about wether these checks would have any serious meaning, but, i think, Matt could tell that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>