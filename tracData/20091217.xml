<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 23:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:18/1261094001000000</guid>
      <description>&lt;p&gt;
Patch for wp_delete_comment() to function the same way as wp_delete_post() and wp_delete_attachment().  Also adds some phpdoc to clarify how exactly the wp_delete_* functions work.
&lt;/p&gt;
&lt;p&gt;
As azaozz said, these functions will likely be redone in 3.0 into a single function (with wrappers) so they can handle custom post types. Them behaving consistently is an expectation, and would also generate less headaches when we abstract them.
&lt;/p&gt;
&lt;p&gt;
Unless there is a specific reason for wp_delete_comment to not work the same way as wp_delete_post, then this should be a commit. There's nothing drastic here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11477 (UX issues in the Image Editor) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 17 Dec 2009 23:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11477#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11477#comment:2/1261093936000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11470-standardizes-wp_trash_comment.diff attached to Ticket #11470</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 23:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11470/11470-standardizes-wp_trash_comment.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11470/11470-standardizes-wp_trash_comment.diff/1261093748000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11477 (UX issues in the Image Editor) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 17 Dec 2009 23:47:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11477#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11477#comment:1/1261093646000000</guid>
      <description>&lt;ol start="13"&gt;&lt;li&gt;&lt;strong&gt;The "Save" button is broken.&lt;/strong&gt;  It's always greyed out on my screen.  Why is it there?  What does it do?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11477 (UX issues in the Image Editor) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 17 Dec 2009 23:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11477</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11477/1261093556000000</guid>
      <description>&lt;p&gt;
There appear to be several bugs in the Image Crop input fields.  I'll let you decide which of these symptoms are valid.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to the Edit Media screen for an image.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Click &amp;amp; Drag to highlight an area of the image.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Enter an Aspect ratio of 4:3.  &lt;strong&gt;The image selection changes but the Selection fields are not updated.&lt;/strong&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Attempt to change the Aspect ratio to 4:7.  &lt;strong&gt;Input is erased as soon as I type it in.&lt;/strong&gt;  This makes no sense at first, but appears to be some kind of boundary feedback?
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="5"&gt;&lt;li&gt;Attempt to change the Aspect ratio to 10:11.  &lt;strong&gt;Input is impossible unless the second field is empty.&lt;/strong&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="6"&gt;&lt;li&gt;Change the Aspect ratio to 7:8 and then change it to 7.9:8.  &lt;strong&gt;Nothing happens.&lt;/strong&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="7"&gt;&lt;li&gt;In common graphics vocabulary, "Selection" always refers to a pair of rectangular coordinates.  &lt;strong&gt;Using the word "Selection" where "Size" is what you meant&lt;/strong&gt; to say is confusing.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="8"&gt;&lt;li&gt;Scale Image is collapsed by default, with no indiciation that it can be expanded except for a slight difference in text color, and the cursor changes on mouse over.  This is inconsistent with the Image Crop area, which is &lt;strong&gt;not collapsible&lt;/strong&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="9"&gt;&lt;li&gt;There is &lt;strong&gt;no way to enter a decimal coefficient&lt;/strong&gt; for the Aspect ratio.  Even 1.67:1 doesn't work.  Unless the user wants to always use 1:1, 16:9, 8:5, 5:4, or 4:3, the existing Aspect Ratio fields will be useless.  The interface would make more sense with a limited set of radio options.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="10"&gt;&lt;li&gt;&lt;strong&gt;The original image Aspect Ratio is not displayed.&lt;/strong&gt;  If my image has an Aspect of 1.39847, and I want to "lock it in" while cropping, there is no obvious way to do it.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="11"&gt;&lt;li&gt;&lt;strong&gt;The new image Aspect Ratio is not displayed.&lt;/strong&gt;  If I crop by click &amp;amp; drag, or by typing in the Selection fields, there is no way to know the resulting Aspect Ratio without pulling out a calculator.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="12"&gt;&lt;li&gt;The original image &lt;strong&gt;dimensions are not displayed&lt;/strong&gt;, unless the Scale Image area has been expanded.  Cropping is just that much more awkward as a result.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>johnl1479</dc:creator>

      <pubDate>Thu, 17 Dec 2009 22:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:17/1261089876000000</guid>
      <description>&lt;p&gt;
This should be addressed in 2.9 since the Trash was introduced in 2.9.
&lt;/p&gt;
&lt;p&gt;
I understand the arguments against changing the API during an RC, but as nacin intially pointed out, this causes undesired side-effects with existing code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10237 (Implement Content Security Policy to prevent XSS) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 22:43:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10237#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10237#comment:7/1261089832000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>beaulebens</dc:creator>

      <pubDate>Thu, 17 Dec 2009 22:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:49/1261088705000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11476 (Missing percent sign in string passed to sprintf) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 22:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11476#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11476#comment:4/1261087352000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12441" title="Escape percent sign. Props sirzooro. fixes #11476 for 2.9"&gt;[12441]&lt;/a&gt; for 2.9.
&lt;/p&gt;
&lt;p&gt;
Output was busted for me without the escaping.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12441]: Escape percent sign. Props sirzooro. fixes #11476 for 2.9</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 22:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12441/1261087306834795</guid>
      <description>&lt;p&gt;
Escape percent sign. Props sirzooro. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11476" title="#11476: defect (bug): Missing percent sign in string passed to sprintf (closed: fixed)"&gt;#11476&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11476 (Missing percent sign in string passed to sprintf) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 22:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11476#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11476#comment:3/1261087271000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12440" title="Escape percent sign. Props sirzooro. fixes #11476"&gt;[12440]&lt;/a&gt;) Escape percent sign. Props sirzooro. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11476" title="#11476: defect (bug): Missing percent sign in string passed to sprintf (closed: fixed)"&gt;#11476&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12440]: Escape percent sign. Props sirzooro. fixes #11476</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 22:00:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12440/1261087251850485</guid>
      <description>&lt;p&gt;
Escape percent sign. Props sirzooro. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11476" title="#11476: defect (bug): Missing percent sign in string passed to sprintf (closed: fixed)"&gt;#11476&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11476 (Missing percent sign in string passed to sprintf) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11476#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11476#comment:2/1261086764000000</guid>
      <description>&lt;p&gt;
see:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://php.net/manual/en/function.sprintf.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.sprintf.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A type specifier that says what type the argument data should be treated as. Possible types:
&lt;/p&gt;
&lt;p&gt;
% - a literal percent character. No argument is required.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11476 (Missing percent sign in string passed to sprintf) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11476#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11476#comment:1/1261086719000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11407 (Make WP insist that the user upgrades the site after a certain amount ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11407#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11407#comment:15/1261084976000000</guid>
      <description>&lt;p&gt;
I don't think that any software should nag so much that it gets in the way of the user doing there work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>update-core.php.diff attached to Ticket #11476</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11476/update-core.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11476/update-core.php.diff/1261084266000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11476 (Missing percent sign in string passed to sprintf) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11476</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11476/1261084236000000</guid>
      <description>&lt;p&gt;
When you open wp-admin/update-core.php, you may see
&lt;/p&gt;
&lt;pre class="wiki"&gt;Compatibility with WordPress 2.9: 100(according to its author)
&lt;/pre&gt;&lt;p&gt;
instead of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Compatibility with WordPress 2.9: 100% (according to its author)
&lt;/pre&gt;&lt;p&gt;
Attached patch adds fixes this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [12439]: Fix the 'current_user_can' check for 'add-comment' for 2.9</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12439/1261084001729897</guid>
      <description>&lt;p&gt;
Fix the 'current_user_can' check for 'add-comment' for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12438]: Fix the 'current_user_can' check for 'add-comment'.</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12438/1261083758537360</guid>
      <description>&lt;p&gt;
Fix the 'current_user_can' check for 'add-comment'.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11475 (Wrong Version of Akismet in Distro) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 21:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11475#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11475#comment:1/1261083689000000</guid>
      <description>invalid: &lt;p&gt;
Best I'm aware, it's automatic. Akismet got updated in the past 24h.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/log/akismet/trunk/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/log/akismet/trunk/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11475 (Wrong Version of Akismet in Distro) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11475/1261083026000000</guid>
      <description>&lt;p&gt;
I don't know if a ticket is needed for this?  After installing 2.9-RC1 it shows Akismet Version 2.2.6 is installed, and Version 2.2.7 is current.  Put that on the final to-do list if it isn't automatic.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>settings_validation_errors_interim_hack.txt attached to Ticket #11474</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:41:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11474/settings_validation_errors_interim_hack.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11474/settings_validation_errors_interim_hack.txt/1261082511000000</guid>
      <description>&lt;p&gt;
Settings Validation Interim Hack Solution
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11474 (Add validation error reporting system to Settings API) created</title>
      
        <dc:creator>jeremyclarke</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11474/1261082437000000</guid>
      <description>&lt;h2 id="Problem"&gt;Problem&lt;/h2&gt;
&lt;p&gt;
As discussed in this wp-hackers email thread - &lt;a class="ext-link" href="http://groups.google.com/group/wp-hackers/browse_thread/thread/1d70363875bd2e32"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://groups.google.com/group/wp-hackers/browse_thread/thread/1d70363875bd2e32&lt;/a&gt; - the Settings API (which is used to add settings sections and fields to admin settings pages elegantly and automatically) has a distinct lack of ability to return useful information to users about any validation errors that occurred during the validation callback function given in &lt;code&gt;register_setting()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The main problem is that the validation occurs on a seperate pageload from the final return to your settings page that the user sees (it happens on &lt;code&gt;options.php&lt;/code&gt;, the target of forms used in the Settings API, when update_option() is called on the registered setting and thus its validation filter is run). This means that there is no way for a developer using the Settings API to designate error messages for the user from within the validation callback, because any GLOBALS, objects or other variables set during that function will be destroyed when the user is forwarded back to the original page. This forwarding, which causes the message 'Settings Saved' to be shown, regardless of how validation went, happens in &lt;code&gt;options.php&lt;/code&gt; with the following code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$goback = add_query_arg( 'updated', 'true', wp_get_referer() );
wp_redirect( $goback );
&lt;/pre&gt;&lt;h2 id="Importance"&gt;Importance&lt;/h2&gt;
&lt;p&gt;
This missing feature is also a huge defect of the Settings API, both because it gives no sane way for eager developers to add errors to their own settings sections/pages, but also because it fails to inspire them to do so with an elegant framework. IMHO error reporting to users should be a first-class citizen of the Settings API, and pushing error reporting in the faces of developers will cause an overall usability improvement for &lt;strong&gt;all&lt;/strong&gt; WordPress plugins, not just those who's authors were already concerned about reporting validation errors.
&lt;/p&gt;
&lt;p&gt;
Put another way: Usability improvements to the Settings API through easy error reporting should be treated like security improvements through mandatory validation functions: Both are functionalities that remind/inspire developers to do what they should be doing anyway, but often forget about/don't think to do on their own.
&lt;/p&gt;
&lt;p&gt;
The lack of error reporting also exposes itself within the default admin options in WordPress, where no error reporting is done on the core options when they are invalid. The admin_email option in Settings &amp;gt; General is a perfect example. If you give it an invalid email address (no @ sign) it silently removes the entire email address during validation, then shows a 'Settings Saved' message on the resulting screen, along with an empty admin_email field. This is a very dangerous situation to say the least. Like most other core admin options a message about why validation failed is vital, but without an API way to show these errors it is essentially impossible for core settings to output errors. If my solution below is added to core outputting an error for admin_email will involve a 1-line patch to its validation.
&lt;/p&gt;
&lt;h2 id="TemporarySolutionUntil3.0"&gt;Temporary Solution Until 3.0&lt;/h2&gt;
&lt;p&gt;
This should definitely be added by the time 3.0 arrives but that probably won't be for a long time from now (dec17-09). Until then it's still very important that error messaging be possible while using the Settings API.
&lt;/p&gt;
&lt;p&gt;
With the help of Ade Walker and Otto on wp-hackers I worked out an interim solution using a special field inside your option array that you check and remove while on your settings page after the processing has occurred. It is most assuredly a hack and not ideal, but it is a good interim solution for those who want to start using the Settings API but don't want to give up messages. If my solution outlined below is accepted it should be easy to convert from the hack to the API once its ready.
&lt;/p&gt;
&lt;p&gt;
Code exposing the interim solution is available in this pastie.org paste: &lt;a class="ext-link" href="http://pastie.org/747439"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastie.org/747439&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It should also be attached to this ticket as settings_validation_errors_interim_hack.txt
&lt;/p&gt;
&lt;h2 id="Solution"&gt;Solution&lt;/h2&gt;
&lt;p&gt;
This needs a solution regardless of whether I'm the one to think of it, but here is an idea.
&lt;/p&gt;
&lt;h3 id="FunctionsOutline"&gt;Functions Outline&lt;/h3&gt;
&lt;pre class="wiki"&gt;// Add errors to a global array while validating options
add_settings_error( $setting, $name, $message, $type = 'error' );
// Fetch Settings errors that have been defined on the current pageload
get_settings_errors( $setting = '' );
// Display settings errors saved during the previous pageload
settings_errors( $setting = '' );
&lt;/pre&gt;&lt;h3 id="Specifics"&gt;Specifics&lt;/h3&gt;
&lt;p&gt;
A function can be added to the API with the express purpose of defining errors to show to the user when they are returned to the settings page. It should have the ability to handle multiple errors and preferably also have the ability to handle failure AND success messages, so that plugins can do all their messaging from inside the validation function (which inspires further use of validation functions even outside other elements of the Settings API involved in pages).
&lt;/p&gt;
&lt;p&gt;
Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_settings_error( $setting, $name, $message, $type = 'error' );
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;$setting&lt;/strong&gt; The id of the setting the error is related to.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;$name&lt;/strong&gt; A unique identifier for the error message like 'admin_email_fail' (used in a css class on the message and in the resulting messages array). Might be unnecessary but seems like a good idea to include.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;$message&lt;/strong&gt; The actual message text to show
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;$type&lt;/strong&gt; One of: error, success, warning etc (ideally it would map directly to the CSS classes used on error messages).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Alternately the function could be given a more general name, though I think it might be less obvious what its for and 'error' might work better despite its mild innacuracy:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_settings_message( $setting, $name, $message, $type = 'error' );
&lt;/pre&gt;&lt;p&gt;
Either way this function would save the message/error array to a global variable comparable to &lt;code&gt;$wp_settings_fields&lt;/code&gt; (which holds registered settings fields), maybe &lt;code&gt;$wp_settings_errors&lt;/code&gt; (or again, &lt;code&gt;$wp_settings_messages&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
A complementary function would be used to fetch the errors from the global:
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_settings_errors( $setting = '' );
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;$setting&lt;/strong&gt; An optional setting id in case you want to fetch only errors/messages related to one setting.
&lt;/li&gt;&lt;/ul&gt;&lt;h4 id="Passingthedataback"&gt;Passing the data back&lt;/h4&gt;
&lt;p&gt;
The &lt;code&gt;get_settings_errors()&lt;/code&gt; function would then be called in &lt;code&gt;options.php&lt;/code&gt; just before the redirection occurs after saving options, and if errors were present it would use that data for the redirect rather than just 'updated', 'true'. Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ($errors = get_settings_errors()) {
	$goback = add_query_arg( 'settings_errors', $errors, wp_get_referer() );
} else {
	$goback = add_query_arg( 'updated', 'true', wp_get_referer() );
}
wp_redirect( $goback );
&lt;/pre&gt;&lt;p&gt;
Acutally looking at it now it seems like this won't work. We can't really pass back an array using add_query_arg(). This implies we might need to use some database storage for the settings, maybe &lt;code&gt;set_transient()&lt;/code&gt;, that we could save the $errors to, then show them from on the next pageload.
&lt;/p&gt;
&lt;p&gt;
I don't know what would be the best ways to do this, please advise. Is there some way we could pass back the array directly and more simply than using the database?
&lt;/p&gt;
&lt;h4 id="WithoutusingDatabase:messageregistrationawkward"&gt;Without using Database: message registration (awkward)&lt;/h4&gt;
&lt;p&gt;
One non-database solution would be to specifically register each error message with another function like &lt;code&gt;register_settings_error($setting, $error_name, $error_text)&lt;/code&gt;. Then when redirecting back to the settings page we could return a list of comma-separated &lt;strong&gt;$error_name&lt;/strong&gt;s with &lt;code&gt;add_query_arg()&lt;/code&gt; that could later be shown with something like &lt;code&gt;settings_error($setting, $error_name)&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This strikes me as overkill though, and doubles the number of functions people need to learn to use the messaging system. If we can avoid 'message registration' then I think we should as developers will only have to know &lt;code&gt;add_settings_error()&lt;/code&gt; to make use of it. If others think message registration is a good idea though then I'm into it, as it would make things even cleaner and more organized in exchange for the increased complexity.
&lt;/p&gt;
&lt;h4 id="DB-Basedsolution:set_transientsettings_errors"&gt;DB-Based solution: set_transient('settings_errors')&lt;/h4&gt;
&lt;p&gt;
The problem with using the database to store the errors sent back from options.php is that you could end up with situations where, for whatever reason, the messages are not shown to the user right away (e.g. option was saved automatically elsewhere in admin or theme), and end up being displayed later when the user returns to the settings page but hasn't submitted anything.
&lt;/p&gt;
&lt;p&gt;
Thus we'd need to link the saved errors with the subsequent pageload explicitly. Maybe 'nonces' could solve it by verifying that the fields were just submitted, I'm not hip on nonces (I learned the Settings API to avoid them!) so let me know if that would be best.
&lt;/p&gt;
&lt;p&gt;
Based on a quick look at uses of &lt;code&gt;delete_transient()&lt;/code&gt; in core, transients seem to be commonly used for tasks like this, including reporting on updated plugins and core updates across pageloads. A transient based solution could go like this, replacing the current logic in &lt;code&gt;options.php&lt;/code&gt; that I pasted at the top:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ($errors = get_settings_errors()) {
	// Save the $errors into a transient with a short expiration
	set_transient('settings_errors', $errors, 60);
	// Forward back to the settings page with a 'settings_errors' flag
	$goback = add_query_arg( 'settings_errors', 'true', wp_get_referer() );
} else {
	$goback = add_query_arg( 'updated', 'true', wp_get_referer() );
}
wp_redirect( $goback );
&lt;/pre&gt;&lt;p&gt;
If we did it this way then upon return to the original settings page we'd have access to &lt;code&gt;$_GET['settings_errors']&lt;/code&gt;. If it is 'true', we'd know that there were fresh errors to show stored in the 'settings_errors' transient. It would also ensure that only that subsequent pageload would show those particular errors and the transient would quickly expire and become inactive/replaced by other settings manipulations. Just in case we would also delete the transient after displaying the errors.
&lt;/p&gt;
&lt;h4 id="Displayingtheerrors"&gt;Displaying the errors&lt;/h4&gt;
&lt;p&gt;
The last missing piece would be a display function to output the errors in standardized WP format (in case it ever changes from the current &lt;code&gt;&amp;lt;div class="error"&amp;gt;&lt;/code&gt; system):
&lt;/p&gt;
&lt;pre class="wiki"&gt;settings_errors( $setting = '' );
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;$setting&lt;/strong&gt; Optionally limit the displayed errors to only those of a specific option id (not used in my imagined core system but a useful addition for people using the function elsewhere)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I propose this name as comparable to &lt;code&gt;settings_fields($settings)&lt;/code&gt;, which needs to be called inside settings pages that use the Settings API, other ideas for the name of this function are welcome.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;settings_errors()&lt;/code&gt; would run &lt;code&gt;get_transient('settings_errors')&lt;/code&gt; to fetch any current settings errors, then display them one by one using the current html and css for admin errors. It would use the &lt;strong&gt;$type&lt;/strong&gt; argument from &lt;strong&gt;add_settings_error()&lt;/strong&gt; to style the message appropriately. After display it would delete any values in the 'settings_errors' transient.
&lt;/p&gt;
&lt;p&gt;
The idea would be to use this during the &lt;strong&gt;admin_notices&lt;/strong&gt; hook, or after the 'updated'='true' checking done in in &lt;code&gt;/wp-admin/options-head.php&lt;/code&gt;. Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if (isset($_GET['settings_errors']))
	settings_errors();
&lt;/pre&gt;&lt;p&gt;
This would mean that developers using the API would have their messages automatically displayed at the top of their settings page, and would have done so with only one function call that was conveniently done in the midst of their option validation.
&lt;/p&gt;
&lt;h2 id="Conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;
HOO-AH! This is one damn long ticket. Maybe I should have just coded it first but IMHO the work is mostly done by now and maybe it was easier with writing than coding. Either way, please give me some feedback on this and let me know if I'm way off course. A patch will probably be easy enough to put together that I'll actually do it, if not hopefully I gave enough detail for someone to take care of it before feature freeze on 3.0.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:16/1261082274000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Should be handled in 2.9 or set as wontfix and addressed separately in 3.0.
&lt;/p&gt;
&lt;p&gt;
I brought this up for back compat and forward-thinking reasons. The new 2.9 implementation is inconsistent among the different wp_delete_* functions that were modified, and also changes the 2.8 implementation.
&lt;/p&gt;
&lt;p&gt;
If we're fine with the change from 2.8 to 2.9, that wp_delete_* now trashes by default, and I think we are, then they need to be standardized. More or less, that means wp_delete_comment needs a $force_delete parameter and some core calls need to be modified to reflect that.
&lt;/p&gt;
&lt;p&gt;
I submitted the patch as one possible fix only because I agree with azaozz that it is redundant to maintain both. But we can leave that for 3.0 as long as we make them all work the same across post, attachment, and comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:35:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:36/1261082142000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:35" title="Comment 35"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:34" title="Comment 34"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
could &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12343" title="More standardization around Post/Page Image instead of Post/Page Thumbnail"&gt;r12343&lt;/a&gt; potentially update the wp_db_version option in weird circumstances?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not including version.php in global scope. Is that what you mean?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Pretty much so, yes. Phrased like that, it makes much more sense, and my worries were unjustified. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11425 (split wordpress into a completly modular file and db-table structure) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11425#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11425#comment:9/1261081873000000</guid>
      <description>invalid: &lt;blockquote class="citation"&gt;
&lt;p&gt;
sharing needs, ideas and maybe some ideas about a workflow to achieve this..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This sort of broad discussion is best had on mailing lists (wp-hackers), irc and blogs.
&lt;/p&gt;
&lt;p&gt;
After we've setled on a game plan, we can open tickets for specific things that need to be done.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10237 (Implement Content Security Policy to prevent XSS) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10237#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10237#comment:6/1261081852000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This looks interesting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:15/1261081660000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:14/1261081624000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11470#comment:12" title="Comment 12"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/search?q=delete&amp;amp;noquickjump=1&amp;amp;ticket=on&amp;amp;changeset=on&amp;amp;wiki=on"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/search?q=delete&amp;amp;noquickjump=1&amp;amp;ticket=on&amp;amp;changeset=on&amp;amp;wiki=on&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Or even &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/search?q=wp_delete_&amp;amp;noquickjump=1&amp;amp;ticket=on&amp;amp;changeset=on&amp;amp;wiki=on"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/search?q=wp_delete_&amp;amp;noquickjump=1&amp;amp;ticket=on&amp;amp;changeset=on&amp;amp;wiki=on&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
... no plugins whatsoever in the plugin repository would be affected by either change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So... this isn't very important! Based on that, I don't care whether the wp_delete_* functions call the wp_trash_* functions.
&lt;/p&gt;
&lt;p&gt;
But I am against the merging of wp_delete_* and wp_trash_*, as mentioned above, unless all of wp_delete_*, wp_trash_*, and wp_spam_comment into the wp_set_*_status functions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd like to suggest we punt and revisit the whole thing in 3.0, though. I'm extremely suspicious at the idea of introducing API changes in an RC.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. Setting to 3.0, unless someone else wants to change it back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:35/1261081417000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:34" title="Comment 34"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
could &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12343" title="More standardization around Post/Page Image instead of Post/Page Thumbnail"&gt;r12343&lt;/a&gt; potentially update the wp_db_version option in weird circumstances?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not including version.php in global scope. Is that what you mean?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10973 (Grand Unified Upgrader) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10973#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10973#comment:22/1261081192000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12437" title="Give feedback when Upgrade Plugins is clicked but no plugins are ..."&gt;[12437]&lt;/a&gt;) Give feedback when Upgrade Plugins is clicked but no plugins are selected. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10973" title="#10973: task (blessed): Grand Unified Upgrader (closed: fixed)"&gt;#10973&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12437]: Give feedback when Upgrade Plugins is clicked but no plugins are ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12437</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12437/1261081183049169</guid>
      <description>&lt;p&gt;
Give feedback when Upgrade Plugins is clicked but no plugins are selected. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10973" title="#10973: task (blessed): Grand Unified Upgrader (closed: fixed)"&gt;#10973&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10973 (Grand Unified Upgrader) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10973#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10973#comment:21/1261081126000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12436" title="Give feedback when Upgrade Plugins is clicked but no plugins are ..."&gt;[12436]&lt;/a&gt;) Give feedback when Upgrade Plugins is clicked but no plugins are selected. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10973" title="#10973: task (blessed): Grand Unified Upgrader (closed: fixed)"&gt;#10973&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12436]: Give feedback when Upgrade Plugins is clicked but no plugins are ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:18:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12436/1261081092733810</guid>
      <description>&lt;p&gt;
Give feedback when Upgrade Plugins is clicked but no plugins are selected. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10973" title="#10973: task (blessed): Grand Unified Upgrader (closed: fixed)"&gt;#10973&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:11:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:13/1261080669000000</guid>
      <description>&lt;p&gt;
I'd like to suggest we punt and revisit the whole thing in 3.0, though. I'm extremely suspicious at the idea of introducing API changes in an RC.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:12/1261080444000000</guid>
      <description>&lt;p&gt;
based on:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/search?q=delete&amp;amp;noquickjump=1&amp;amp;ticket=on&amp;amp;changeset=on&amp;amp;wiki=on"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/search?q=delete&amp;amp;noquickjump=1&amp;amp;ticket=on&amp;amp;changeset=on&amp;amp;wiki=on&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
... no plugins whatsoever in the plugin repository would be affected by either change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10237 (Implement Content Security Policy to prevent XSS) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10237#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10237#comment:5/1261080113000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to the 3.0 milestone. Let's see if we can make this happen.  Anyone want to get a patch started?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 20:00:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:34/1261080038000000</guid>
      <description>&lt;p&gt;
could &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12343" title="More standardization around Post/Page Image instead of Post/Page Thumbnail"&gt;r12343&lt;/a&gt; potentially update the wp_db_version option in weird circumstances?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10237 (Implement Content Security Policy to prevent XSS) updated</title>
      
        <dc:creator>bsterne</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:57:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10237#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10237#comment:4/1261079840000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm available to help implement this feature.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12435]: Make sure dir() returned a dir object. for 2.9</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:57:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12435/1261079824777167</guid>
      <description>&lt;p&gt;
Make sure dir() returned a dir object. for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12434]: Make sure dir() returned a dir object.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12434/1261079765272031</guid>
      <description>&lt;p&gt;
Make sure dir() returned a dir object.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11473 (error on resize picture in media) updated</title>
      
        <dc:creator>jsarson</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11473#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11473#comment:1/1261079710000000</guid>
      <description>&lt;p&gt;
Sorry, I copy bad "fix" code, in original code is round(..., 2)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11425 (split wordpress into a completly modular file and db-table structure) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11425#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11425#comment:8/1261079664000000</guid>
      <description>&lt;p&gt;
@Denis: 3-4 years... That may be a little too late. Maybe just considering this, when optimzing things or deleting some of the redundant functions, would be not too bad. This way you could easily do the half of the work on the go... as long as some structure is worked out in front of it. that´s what this ticket was meant to be. sharing needs, ideas and maybe some ideas about a workflow to achieve this..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11473 (error on resize picture in media) created</title>
      
        <dc:creator>jsarson</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11473/1261079495000000</guid>
      <description>&lt;p&gt;
When I try to resize (scale) image in media library, It return error message: Error while saving the scaled image. Please reload the page and try again.
&lt;/p&gt;
&lt;p&gt;
Problem is only with some pictures with "bad" resolution and it doesnt fit this condition correctly (different is about 0.01 - 0.03):
&lt;em&gt; check if it has roughly the same w / h ratio
if ( round($sX / $sY, 1) == round($fwidth / $fheight, 1) )
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11236 (Trashed pages can still be opened when logged in) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11236#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11236#comment:3/1261079354000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11387 (Walker Widget System) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11387#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11387#comment:11/1261079214000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:32:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:33/1261078348000000</guid>
      <description>fixed: &lt;p&gt;
I guess we can reopen if there are further issues. Looks good.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11347 (Uploader sometimes uses sanitized/slug version of image name for the ...) closed</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 19:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11347#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11347#comment:2/1261078283000000</guid>
      <description>fixed: &lt;p&gt;
Don't know what fixed this, but nothing changed on my server except a new nightly of WP.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:11/1261076397000000</guid>
      <description>&lt;p&gt;
I don't like the solution in the ticket at all. I see no reason to merge the wp_delete_* functions and the wp_trash_* functions, and think they are much better kept separate (or alternatively, merge &lt;em&gt;all&lt;/em&gt; of wp_delete_*, wp_trash_*, and wp_spam_comment into the wp_set_*_status function).
&lt;/p&gt;
&lt;p&gt;
Whether the wp_delete_* functions should call wp_trash_* functions is another matter. I can see arguments on both sides, and having thought the matter over I don't mind much.&lt;br /&gt;
Can we have some examples of plugins which might be affected by this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:32/1261075620000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12433" title="Add required php and mysql versions to version.php.  Future proof ..."&gt;[12433]&lt;/a&gt;) Add required php and mysql versions to version.php.  Future proof required version check strings.  Props nacin. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12433]: Add required php and mysql versions to version.php.  Future proof ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12433/1261075614109724</guid>
      <description>&lt;p&gt;
Add required php and mysql versions to version.php.  Future proof required version check strings.  Props nacin. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:46:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:31/1261075589000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12432" title="Add required php and mysql versions to version.php.  Future proof ..."&gt;[12432]&lt;/a&gt;) Add required php and mysql versions to version.php.  Future proof required version check strings.  Props nacin. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12432]: Add required php and mysql versions to version.php.  Future proof ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12432/1261075579716081</guid>
      <description>&lt;p&gt;
Add required php and mysql versions to version.php.  Future proof required version check strings.  Props nacin. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>11464.10.diff attached to Ticket #11464</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.10.diff/1261074955000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>11464.9.2.diff attached to Ticket #11464</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:20:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.9.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.9.2.diff/1261074043000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>11464.9.diff attached to Ticket #11464</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 18:15:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.9.diff/1261073741000000</guid>
      <description>&lt;p&gt;
Future proof translations
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11463 (Orphaned comment metadata in DB after comment is removed) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11463#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11463#comment:6/1261072720000000</guid>
      <description>&lt;p&gt;
I committed the wrong patch the first time around.  Committed again with patch 2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) reopened</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:30/1261072666000000</guid>
      <description>&lt;p&gt;
westi brought up an issue with translations.  Since the strings will only be in the catalog for the new version of WP, these won't translate.  We could do hard translations here, or we could live with it for now knowing that once 2.9 is out future upgrades will have the translations.  To future proof those translations, we'd have to move the required versions out of the strings and sprintf them in.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11463 (Orphaned comment metadata in DB after comment is removed) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:56:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11463#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11463#comment:5/1261072563000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12431" title="Delete all comment meta when deleting a comment. Props nacin. fixes ..."&gt;[12431]&lt;/a&gt;) Delete all comment meta when deleting a comment. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11463" title="#11463: defect (bug): Orphaned comment metadata in DB after comment is removed (closed: fixed)"&gt;#11463&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12431]: Delete all comment meta when deleting a comment. Props nacin. fixes ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12431/1261072540015707</guid>
      <description>&lt;p&gt;
Delete all comment meta when deleting a comment. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11463" title="#11463: defect (bug): Orphaned comment metadata in DB after comment is removed (closed: fixed)"&gt;#11463&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12430]: Delete all comment meta when deleting a comment. Props nacin. fixes #11463</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12430</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12430/1261072463837569</guid>
      <description>&lt;p&gt;
Delete all comment meta when deleting a comment. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11463" title="#11463: defect (bug): Orphaned comment metadata in DB after comment is removed (closed: fixed)"&gt;#11463&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10348 (Include PHP-based SSH2 layer for those without the SSH2 PHP extension) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10348#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10348#comment:12/1261071936000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10348#comment:11" title="Comment 11"&gt;centshonor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It looks like this hasn't been fixed as of Wordpress 2.9 RC1.  Hopefully it's still in the pipeline?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is currently an enhancement slated for a future release. Version 2.9 has been feature-frozen for some time. If you have a patch for a PHP-based SSH2 layer for those without the SSH2 PHP extension, that would help in getting it into 3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10348 (Include PHP-based SSH2 layer for those without the SSH2 PHP extension) updated</title>
      
        <dc:creator>centshonor</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10348#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10348#comment:11/1261071559000000</guid>
      <description>&lt;p&gt;
It looks like this hasn't been fixed as of Wordpress 2.9 RC1.  Hopefully it's still in the pipeline?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5066 (Anonymize update checking) updated</title>
      
        <dc:creator>chmac</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5066#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5066#comment:40/1261070641000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5066#comment:39" title="Comment 39"&gt;docwhat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WP.org doesn't have to be compromised, a man-in-the-middle attack would work as well.  But either way, why wouldn't it hold sway?  Unless wordpress.org signs an contract with me that contains penalties for being hacked, I don't see how or why I should trust them with my data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Personally, I agree completely. But, I don't think I'd hold the same view if I were a core dev or an Automattic employee. In that case, I think I'd be willing to tolerate these outside and unlikely problems for a few users. I'd most likely justify my decision saying that it was "for the greater good".
&lt;/p&gt;
&lt;p&gt;
The man in the middle attack is particularly appropriate in the Iranian example. I imagine the Iranian government has the capability to easily monitor all outgoing traffic to the update service without even needing a man in the middle attack. Simple traffic monitoring would probably be sufficient (I'm assuming the data is sent in plain text).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5066 (Anonymize update checking) updated</title>
      
        <dc:creator>docwhat</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5066#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5066#comment:39/1261070373000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5066#comment:38" title="Comment 38"&gt;chmac&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
zamoose, you raise some interesting scenarios where privacy becomes very important. I think because your scenarios are all based on wp.org being compromised, it's unlikely to hold much sway with the decision makers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WP.org doesn't have to be compromised, a man-in-the-middle attack would work as well.  But either way, why wouldn't it hold sway?  Unless wordpress.org signs an contract with me that contains penalties for being hacked, I don't see how or why I should trust them with my data.
&lt;/p&gt;
&lt;p&gt;
The fact they don't need it just rubs salt in the wound.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:29/1261070010000000</guid>
      <description>fixed: &lt;p&gt;
Thanks everyone.  Resolving as fixed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11463 (Orphaned comment metadata in DB after comment is removed) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11463#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11463#comment:4/1261069930000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12429" title="Delete all comment meta when deleting a comment. Props nacin. fixes ..."&gt;[12429]&lt;/a&gt; for 2.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12429]: Delete all comment meta when deleting a comment. Props nacin. fixes ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:11:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12429/1261069881241768</guid>
      <description>&lt;p&gt;
Delete all comment meta when deleting a comment. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11463" title="#11463: defect (bug): Orphaned comment metadata in DB after comment is removed (closed: fixed)"&gt;#11463&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11463 (Orphaned comment metadata in DB after comment is removed) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11463#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11463#comment:3/1261069848000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12428" title="Delete all comment meta when deleting a comment. Props nacin. fixes #11463"&gt;[12428]&lt;/a&gt;) Delete all comment meta when deleting a comment. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11463" title="#11463: defect (bug): Orphaned comment metadata in DB after comment is removed (closed: fixed)"&gt;#11463&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12428]: Delete all comment meta when deleting a comment. Props nacin. fixes #11463</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 17:10:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12428/1261069840022441</guid>
      <description>&lt;p&gt;
Delete all comment meta when deleting a comment. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11463" title="#11463: defect (bug): Orphaned comment metadata in DB after comment is removed (closed: fixed)"&gt;#11463&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nickbohle</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:52:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:28/1261068726000000</guid>
      <description>&lt;p&gt;
Works like a charm!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5066 (Anonymize update checking) updated</title>
      
        <dc:creator>chmac</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:31:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5066#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5066#comment:38/1261067505000000</guid>
      <description>&lt;p&gt;
zamoose, you raise some interesting scenarios where privacy becomes very important. I think because your scenarios are all based on wp.org being compromised, it's unlikely to hold much sway with the decision makers.
&lt;/p&gt;
&lt;p&gt;
I see a fundamental issue here. For early version of WordPress, it was hard to figure out how many times the software was being used. Now with the update mechanism "phoning home", wp.org has a list of every site running their software. There's huge bragging rights, stats geekiness, and all sorts of other benefits to this.
&lt;/p&gt;
&lt;p&gt;
From this perspective, it seems natural that small, obscure, and unlikely privacy concerns would be quashed by the desire to track the number of installs.
&lt;/p&gt;
&lt;p&gt;
The crux for me is that WP phones home immediately, so there's no way to install a plugin to stop that initial call in. One option would be to link the phone home feature, or maybe anonymize it, based on the "Announce this blog to the world" option during install. Honestly though, I think it's unlikely the core devs will do that. Again, it's upside versus downside. Their interest is better served by all sites phoning home.
&lt;/p&gt;
&lt;p&gt;
I think the most sensible scenario all round is a fork. I can see space for a few forks based on different use cases. A privacy focused fork, a security focused fork, and so on. I'd consider them WP flavours. I think using subversion, quilt and one or two custom scripts, it would be minimal work to roll a few custom version of WordPress and publish them in tgz and svn.
&lt;/p&gt;
&lt;p&gt;
To that end, I've started a discussion here:
&lt;a class="ext-link" href="http://www.callum-macdonald.com/2009/12/17/proposing-wp-flavours/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.callum-macdonald.com/2009/12/17/proposing-wp-flavours/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:27/1261067333000000</guid>
      <description>&lt;p&gt;
That looks better. Working here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:26:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:26/1261067192000000</guid>
      <description>&lt;p&gt;
Updating nightlies. Wait a few minutes and try again.
&lt;/p&gt;
&lt;p&gt;
A good way to force the DB check for testing is to edit your wp-db.php and hack db_version() to return '4.1.0'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:25/1261067129000000</guid>
      <description>&lt;p&gt;
Oops, that was me. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:24:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:24/1261067078000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12426" title="Fix typo. see #11464"&gt;[12426]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12427" title="Fix typo. see #11464"&gt;[12427]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12427]: Fix typo. see #11464</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:23:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12427</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12427/1261067016018815</guid>
      <description>&lt;p&gt;
Fix typo. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12426]: Fix typo. see #11464</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12426/1261066974948551</guid>
      <description>&lt;p&gt;
Fix typo. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:23/1261066863000000</guid>
      <description>&lt;p&gt;
Severe typo here:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$mysql_version = $wpdb-&amp;gt;db_version;
&lt;/pre&gt;&lt;p&gt;
needs to be
&lt;/p&gt;
&lt;pre class="wiki"&gt;$mysql_version = $wpdb-&amp;gt;db_version();
&lt;/pre&gt;&lt;p&gt;
Just ran into it, when trying to update to latest nightly build as announced by ryan.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11468 (Most HTTP transport methods in WP_Http process floats as integers for ...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11468#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11468#comment:3/1261066551000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12424" title="Properly handle float timeouts for all transports. Props mdawaffe. ..."&gt;[12424]&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11468 (Most HTTP transport methods in WP_Http process floats as integers for ...) closed</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:14:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11468#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11468#comment:2/1261066483000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12425" title="Properly handle float timeouts for all transports. Props mdawaffe. ..."&gt;[12425]&lt;/a&gt;) Properly handle float timeouts for all transports. Props mdawaffe. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11468" title="#11468: defect (bug): Most HTTP transport methods in WP_Http process floats as integers for ... (closed: fixed)"&gt;#11468&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12425]: Properly handle float timeouts for all transports. Props mdawaffe. ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:14:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12425</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12425/1261066474306013</guid>
      <description>&lt;p&gt;
Properly handle float timeouts for all transports. Props mdawaffe. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11468" title="#11468: defect (bug): Most HTTP transport methods in WP_Http process floats as integers for ... (closed: fixed)"&gt;#11468&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12424]: Properly handle float timeouts for all transports. Props mdawaffe. ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12424</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12424/1261066438691317</guid>
      <description>&lt;p&gt;
Properly handle float timeouts for all transports. Props mdawaffe. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11468" title="#11468: defect (bug): Most HTTP transport methods in WP_Http process floats as integers for ... (closed: fixed)"&gt;#11468&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:10:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:22/1261066228000000</guid>
      <description>&lt;p&gt;
Updated the nightly builds so that have the new checks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:21/1261065947000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12423" title="Check MySQL and PHP versions when auto upgrading. Props westi, ..."&gt;[12423]&lt;/a&gt;) Check MySQL and PHP versions when auto upgrading. Props westi, Denis-de-Bernardy, nacin, caesarsgrunt. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12423]: Check MySQL and PHP versions when auto upgrading. Props westi, ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12423</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12423/1261065933307336</guid>
      <description>&lt;p&gt;
Check MySQL and PHP versions when auto upgrading. Props westi, Denis-de-Bernardy, nacin, caesarsgrunt. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt; for 2.9
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:04:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:20/1261065898000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12422" title="Check MySQL and PHP versions when auto upgrading. Props westi, ..."&gt;[12422]&lt;/a&gt;) Check MySQL and PHP versions when auto upgrading. Props westi, Denis-de-Bernardy, nacin, caesarsgrunt. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12422]: Check MySQL and PHP versions when auto upgrading. Props westi, ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12422</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12422/1261065887724041</guid>
      <description>&lt;p&gt;
Check MySQL and PHP versions when auto upgrading. Props westi, Denis-de-Bernardy, nacin, caesarsgrunt. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11464" title="#11464: defect (bug): MySQL 4.1.2 and automatic update... (closed: fixed)"&gt;#11464&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>11470-trash-functions-become-wrappers.diff attached to Ticket #11470</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11470/11470-trash-functions-become-wrappers.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11470/11470-trash-functions-become-wrappers.diff/1261065631000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 16:00:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:10/1261065612000000</guid>
      <description>&lt;p&gt;
I take back some previous comments. wp_delete_comment() does call wp_trash_comment() -- in fact, there is no $force_delete override if trash is enabled.
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if (wp_get_comment_status($comment_id) != 'trash' &amp;amp;&amp;amp; wp_get_comment_status($comment_id) != 'spam' &amp;amp;&amp;amp; EMPTY_TRASH_DAYS &amp;gt; 0)
		return wp_trash_comment($comment_id);
&lt;/pre&gt;&lt;p&gt;
Patch attached to continue the discussion. This reduces the wp_trash_(post|comment) functions to wrappers for the wp_delete_* functions. wp_delete_* will trash the item if the situation warrants. wp_trash_attachment will be handled in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11455" title="#11455: defect (bug): Bulk &amp;#34;Delete Permanently&amp;#34; moves attachments to trash (closed: fixed)"&gt;#11455&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The only issue I see is this. I understand that calling wp_delete_* on a trashed item should delete it. But should calling wp_trash_* on a trashed item delete it as well? Perhaps a check couldn't hurt. Or, we treat these as strict wrappers and don't do a check, such that calling wp_trash_* on a trashed item will permanently delete the item. (Until now, wp_trash_* did not delete an already trashed item.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 15:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:19/1261063821000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Many patches here, though we need testing.
&lt;/p&gt;
&lt;p&gt;
I just added patch 8 which cleans up patch 7 a bit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11464.8.diff attached to Ticket #11464</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 15:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.8.diff/1261063723000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 15:11:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:9/1261062682000000</guid>
      <description>&lt;p&gt;
This should probably be a dev chat agenda item?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11471-simple.diff attached to Ticket #11471</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 15:06:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11471/11471-simple.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11471/11471-simple.diff/1261062408000000</guid>
      <description>&lt;p&gt;
Alternative: Just urlencode() it and move along.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11471 (After bulk comment actions, spaces in a search are removed) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 15:05:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11471#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11471#comment:2/1261062317000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
edit-comments.php handles redirection after a bulk action unlike the other pages. Instead of using wp_get_referer(), remove the query args it needs to, and adds the query args it needs to, it uses a base of "edit-comments.php" then adds on everything, including existing contextual query args such as the search query.
&lt;/p&gt;
&lt;p&gt;
Patch follows the lead set by other pages. Alternatively, we can simply urlencode()  $_REQUEST&lt;a class="missing wiki"&gt;s?&lt;/a&gt; on what is currently line 106.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11471.diff attached to Ticket #11471</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 15:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11471/11471.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11471/11471.diff/1261062053000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 14:59:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:76/1261061940000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10337#comment:75" title="Comment 75"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's better ways. Even says so in the oEmbed document itself: "Consumers may wish to load the HTML in an off-domain iframe to avoid XSS vulnerabilities."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That might work. Please open a new ticket for 3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 17 Dec 2009 14:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:75/1261060367000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10337#comment:74" title="Comment 74"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We're saving people from themselves. It's not "crippled" as you call it, it's just limited to a whitelist so the novice user doesn't screw themselves over.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Limiting it to a whitelist of sites is what makes it "crippled". The whole point of oEmbed is to not be limited to selected sites, but to work with any site.
&lt;/p&gt;
&lt;p&gt;
Without discovery, oEmbed is basically unnecessary, you can just use a plugin to add compatibility for each site using whatever methods that site supports.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a user happened to paste the URL to something on my blog on it's own line and unhyperlinked, I could easily make that URL turn into a bit of code that'd steal their login cookies without them ever knowing. Then I'd have full access to their blog.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's better ways. Even says so in the oEmbed document itself: "Consumers may wish to load the HTML in an off-domain iframe to avoid XSS vulnerabilities."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 17 Dec 2009 13:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:74/1261055943000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10337#comment:71" title="Comment 71"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm very disappointed that the team decided to cripple this otherwise extremely cool functionality.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We're saving people from themselves. It's not "crippled" as you call it, it's just limited to a whitelist so the novice user doesn't screw themselves over.
&lt;/p&gt;
&lt;p&gt;
If a user happened to paste the URL to something on my blog on it's own line and unhyperlinked, I could easily make that URL turn into a bit of code that'd steal their login cookies without them ever knowing. Then I'd have full access to their blog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 17 Dec 2009 13:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:73/1261055756000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10337#comment:70" title="Comment 70"&gt;navjotjsingh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why the oEmbed has been disabled now? Ordinary users will find it frustrating that even when WP 2.9 promises oEmbeds, it is still not enabled and available?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
oEmbed is &lt;strong&gt;not&lt;/strong&gt; disabled, it's merely limited to a whitelist for security purposes.
&lt;/p&gt;
&lt;p&gt;
And is it really that hard to install a plugin?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/enable-oembed-discovery/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/enable-oembed-discovery/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11465 (custom field duplicated) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:37:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11465#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11465#comment:1/1261053470000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I guess you'll just have to click the "Add Custom Field" button before saving.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11467 (Random addition of categories to Posts when saving) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11467#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11467#comment:2/1261053275000000</guid>
      <description>invalid: &lt;p&gt;
Please reopen when you have exact steps to reproduce.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11467 (Random addition of categories to Posts when saving) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:33:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11467#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11467#comment:1/1261053214000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
You should start your investigation using WP 2.9-RC1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11469 (Additional Admin UI hooks / filters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11469#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11469#comment:3/1261053146000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:26:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:8/1261052760000000</guid>
      <description>&lt;p&gt;
I vote for no. 2:
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11470#comment:2" title="Comment 2"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Separate the two functions and stop calling &lt;code&gt;delete()&lt;/code&gt; from &lt;code&gt;trash()&lt;/code&gt; and back &lt;code&gt;trash()&lt;/code&gt; from &lt;code&gt;delete()&lt;/code&gt;.
&lt;ul&gt;&lt;li&gt;Pros: no API change for plugins.
&lt;/li&gt;&lt;li&gt;Cons: posts that could have been trashed are deleted instead.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Plugins that use wp_delete_*() will probably have AYS warnings. It's not ideal, but it's better than unpredicted behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:7/1261052147000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11470#comment:5" title="Comment 5"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think all the wp_delete_* functions should call wp_trash_* if the item isn't already trashed - for back compat.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
agreeing 100%
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11471 (After bulk comment actions, spaces in a search are removed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:08:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11471#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11471#comment:1/1261051736000000</guid>
      <description>&lt;p&gt;
Confirmed. Really strange.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 12:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:10/1261051230000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:8" title="Comment 8"&gt;novasource&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
re: concatenation--will Google's scheme include # of HTTP requests in the speed factor?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Reducing the number of assets that are downloaded per page load significantly adds to the end user's experience. It makes the page load faster.
&lt;/p&gt;
&lt;p&gt;
(Also, the primary benefit of placing static assets on a CDN that lives on a separate domain name, is to place these assets closer to the end-user, without him sending cookie headers.)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:9" title="Comment 9"&gt;micasuh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:8" title="Comment 8"&gt;novasource&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Denis-de-Bernardy is correct about minify if it consumes a lot of CPU. Have to analyze on cost-benefit. At least on hosts like Dreamhost, lots of minify could push high volume sites into mandatory private virtual host mode.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is mostly true if visitors are downloading on-the-fly minified files. I don't think anyone is recommending this. While minifying files can add increased CPU load, if done right this increase should be very minimal.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The main point I'd like you to understand is that asset concatenation, followed by conditional gzipping using mod_deflate, are low hanging fruits that are fast to generate, and easy to implement. The other two (PHP-level gzipping and minifying) are much less so, and they're prone to introducing more trouble than benefits.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Dec 2009 11:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:6/1261050845000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11470#comment:5" title="Comment 5"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think all the wp_delete_* functions should call wp_trash_* ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then we don't really need all the wp_trash_*, just need to merge them into the wp_delete_* or perhaps can keep them as wrappers. No point in having two different functions do exactly the same thing and cross-call each other.
&lt;/p&gt;
&lt;p&gt;
In any case we will have to revisit this in 3.0 to make it compatible with custom post types. Seems we can have one general function that would delete any post and few wrappers for back-compat, including a private function to handle attachments probably added by a filter/action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 10:30:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:5/1261045818000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think all the wp_delete_* functions should call wp_trash_* if the item isn't already trashed - for back compat. Trash is the default now, and plugins which used ot delete should now trash. Unless there is a specific reason (in which case the force arg can be used), nothing should be deleted directly unless trash is disabled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11472 (Should QuickEdit remove posts from lists as needed?) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 10:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11472/1261045778000000</guid>
      <description>&lt;p&gt;
Create a draft post. Visit Posts / Edit, and quickedit the draft. Set its status to Published and save. It remains around, with the published status, instead of being removed from the list.
&lt;/p&gt;
&lt;p&gt;
Reporting this just in case, as it might be a UI feature rather than a bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11471 (After bulk comment actions, spaces in a search are removed) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 17 Dec 2009 10:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11471/1261045674000000</guid>
      <description>&lt;p&gt;
search for "foo bar" or some other two word term in your comments.
&lt;/p&gt;
&lt;p&gt;
Perform a bulk spam.
&lt;/p&gt;
&lt;p&gt;
On redirect, the space between "foo" and "bar" will be missing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>bi0xid</dc:creator>

      <pubDate>Thu, 17 Dec 2009 10:24:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:4/1261045445000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7092 (Should support separate setting for limiting comments feed) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 17 Dec 2009 09:36:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7092#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7092#comment:10/1261042616000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just setting this to a Future release pending developer feedback..
&lt;/p&gt;
&lt;p&gt;
As for that hack, you can replace it with a single line in your themes functions.php file:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('comment_feed_limits', create_function('$a', 'return "LIMIT 100";'));
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11466 (Add a server diagnosis on tools / upgrade) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 17 Dec 2009 09:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11466#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11466#comment:6/1261041946000000</guid>
      <description>&lt;p&gt;
Maybe something to get ideas from:
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wp-system-health/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wp-system-health/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Thu, 17 Dec 2009 09:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:31/1261040759000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:30" title="Comment 30"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was against the idea of "Core/canonical Plugins" but things like this it really suits better to, A plugin which controls the WordPress HTML output in the way the user wishes. - A plugin has the benefit that it is seperate and can be updated more easily as browser/server compatibility issues pop up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand where you're coming from but there's some fundamental reasons why this should be built into Wordpress rather than become a plugin.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Compression is forward thinking.&lt;/strong&gt; Wordpress is currently one of the only major Blogging/CMS platforms which doesn't inherently offer gzip compression built in. Why does this matter? A platform so popular and so widely used should promote good web practices such as compression and similar bandwidth saving techniques.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Fostering compression usage promotes efficiency and cuts costs.&lt;/strong&gt; It reduces request amounts, speeds up site loading, and is less of a strain on the server. Wordpress could even claim it's going "Green"!
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Compression becomes a standard.&lt;/strong&gt; Arguably, the world is watching what Wordpress does and how it develops. In some sense, Wordpress IS the innovator and should push the envelope by adopting best practices such as compression. This kind of innovation becomes the envy and standard for other platform developers and it helps everyone.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
To address compatibility issues, Wordpress is on an aggressive updating schedule that competes with the schedule that mainstream browser manufacturers release updated versions of popular browsers.
&lt;/p&gt;
&lt;p&gt;
If compatibility issues do arise, there's no reason a patch can't be applied within hours or days of a new browser version. On top of this, especially with Firefox development, it would amaze me that there's not better communication of potential problems in compatibility between these two extremely popular platforms.
&lt;/p&gt;
&lt;p&gt;
I argue that this is a dire necessity to Wordpress' core and shouldn't be dismissed as a plugin. This would bring a certain badge of honor to the Wordpress community to show that Wordpress' developers are serious about speed, performance and efficiency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10555 (number_format_i18n function doesn't check if the number is float or ...) updated</title>
      
        <dc:creator>chombium</dc:creator>

      <pubDate>Thu, 17 Dec 2009 08:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10555#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10555#comment:4/1261039183000000</guid>
      <description>&lt;p&gt;
The problem that I experienced was because there was no documentation that only integers are passed to this function and that there is no remark that the value for the decimals in the translation file should always be 0.
&lt;/p&gt;
&lt;p&gt;
Because the value is already in the translation file and if the function is patched, I think the best way to solve this issue is to add a remark in the translation file and to update the &lt;a class="ext-link" href="http://codex.wordpress.org/Translating_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Translating_WordPress&lt;/a&gt; page, that for now, the msgid "number_format_decimals" should be set to 0.
&lt;/p&gt;
&lt;p&gt;
The comment:
"#. translators: $decimals argument for &lt;a class="ext-link" href="http://php.net/number_format"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/number_format&lt;/a&gt;, default is 0"
in the file &lt;a class="ext-link" href="http://svn.automattic.com/wordpress-i18n/pot/trunk/wordpress.pot"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://svn.automattic.com/wordpress-i18n/pot/trunk/wordpress.pot&lt;/a&gt; should be updated with something like "set it to 0" as well
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 08:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:3/1261038560000000</guid>
      <description>&lt;p&gt;
The issue is partially standardization -- the comment functions use a third option, which is that wp_trash_comment() falls back to wp_delete_comment(), not the other way around. If there is a desire for the wp_delete_* functions to work strictly how they previously did, this is better than option 2. But I think I'm leaning toward 1 over 3 so plugins are exposed to Trash, even though I argued for the opposite.
&lt;/p&gt;
&lt;p&gt;
I had been working with the comments admin recently, in a plugin and some Trac tickets, so I had been used to option 3 and strict back compat. But after looking through how wp_delete_post and wp_delete_attachment are called in core, I'm leaning toward option 1. azaozz had me nearly convinced as it is.
&lt;/p&gt;
&lt;p&gt;
This would require us to only really change the comment functions and admin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Dec 2009 08:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:2/1261037226000000</guid>
      <description>&lt;p&gt;
Yes, basically we have two options:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Merge wp_trash_post() into wp_delete_post() and do both trashing and deleting from there.
&lt;ul&gt;&lt;li&gt;Pros: will catch all posts that are deleted and trash them instead.
&lt;/li&gt;&lt;li&gt;Cons: will need for plugins to adapt by adding second param if they want to instantly delete a post.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Separate the two functions and stop calling &lt;code&gt;delete()&lt;/code&gt; from &lt;code&gt;trash()&lt;/code&gt; and back &lt;code&gt;trash()&lt;/code&gt; from &lt;code&gt;delete()&lt;/code&gt;.
&lt;ul&gt;&lt;li&gt;Pros: no API change for plugins.
&lt;/li&gt;&lt;li&gt;Cons: posts that could have been trashed are deleted instead.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Same applies for attachments and comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11468 (Most HTTP transport methods in WP_Http process floats as integers for ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 17 Dec 2009 08:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11468#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11468#comment:1/1261036876000000</guid>
      <description>&lt;p&gt;
Looks pretty sane to me..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11469 (Additional Admin UI hooks / filters) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 07:59:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11469#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11469#comment:2/1261036749000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
2.9 is now a release candidate, so enhancements belong in a future release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 17 Dec 2009 07:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470#comment:1/1261036460000000</guid>
      <description>&lt;p&gt;
The current implementation means that plugins don't have to know anything about trash and any delete options they offer are automatically converted to trash options I much prefer this behaviour over requiring every plugin author that offers a delete link having to put trash specific code in.
&lt;/p&gt;
&lt;p&gt;
I also don't think we should change this logic this close to release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 17 Dec 2009 07:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:30/1261035757000000</guid>
      <description>&lt;p&gt;
A Personal IMO: This should be built and offered as part of a plugin, Specifically, a Caching plugin. Should have the options of different levels:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;No Caching
&lt;/li&gt;&lt;li&gt;Compressed output
&lt;/li&gt;&lt;li&gt;Dynamic Caching (Compressed)
&lt;/li&gt;&lt;li&gt;Static Caching (Compressed)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Or similar. I was against the idea of "Core/canonical Plugins" but things like this it really suits better to, A plugin which controls the WordPress HTML output in the way the user wishes. - A plugin has the benefit that it is seperate and can be updated more easily as browser/server compatibility issues pop up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11470 (Have wp_delete_comment trash/delete the same way as its post and ...) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 07:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11470/1261035598000000</guid>
      <description>&lt;p&gt;
In 2.8, if a plugin wanted to delete a post, it called wp_delete_post($id).
&lt;/p&gt;
&lt;p&gt;
No more. Now, that simply calls wp_trash_post($id) and sends the post to the trash. You need to call wp_delete_post($id, true) to delete a post now, as in 2.9 the function is now &lt;code&gt;wp_delete_post( $id, $force_delete = false )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Since wp_trash_post() exists, then wp_delete_post() should do what it has always done -- delete the post. If a plugin wanted a post to be trashed, they can use wp_trash_post().
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2009-12-17#m45393"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;an IRC discussion with azaozz&lt;/a&gt;, it appears intended to widen the scope of the Trash. But they're separate and equal functions and should perform their own actions.  These should be standard across the board else the Trash API gets confusing. Otherwise, we have two functions, designed to perform two different actions, peforming the same action by default, which is counter-intuitive.
&lt;/p&gt;
&lt;p&gt;
$force_delete also introduces consistency issues with 3.0. With media trash in core as expected, there will be wp_trash_attachment(). But wp_delete_attachment() has that same $force_delete = false argument that wp_delete_post() now has.
&lt;/p&gt;
&lt;p&gt;
Suggested fix:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove $force_delete arguments from wp_delete_post() and wp_delete_attachment().
&lt;/li&gt;&lt;li&gt;Remove wp_trash_post() call from wp_delete_post().
&lt;/li&gt;&lt;li&gt;Create wp_trash_attachment() -- better to standardize it now than to have a single function with $force_delete later when this whole API likely becomes wider functions with some wrappers.
&lt;/li&gt;&lt;li&gt;Remove trash actions from wp_delete_attachment().
&lt;/li&gt;&lt;li&gt;Go through core references of wp_delete_post() and wp_delete_attachment() and modify them as appropriate.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11469 (Additional Admin UI hooks / filters) updated</title>
      
        <dc:creator>johnl1479</dc:creator>

      <pubDate>Thu, 17 Dec 2009 06:00:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11469#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11469#comment:1/1261029625000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>edit-form-advanced.diff attached to Ticket #11469</title>
      
        <dc:creator>johnl1479</dc:creator>

      <pubDate>Thu, 17 Dec 2009 05:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11469/edit-form-advanced.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11469/edit-form-advanced.diff/1261029271000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11469 (Additional Admin UI hooks / filters) created</title>
      
        <dc:creator>johnl1479</dc:creator>

      <pubDate>Thu, 17 Dec 2009 05:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11469</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11469/1261029244000000</guid>
      <description>&lt;p&gt;
Some might classify this as overkill, others as making Wordpress as completely extendable as people want it.
&lt;/p&gt;
&lt;p&gt;
I'd like to propose the addition of numerou hooks to the Wordpress core Admin UI which would allow the addition of UI elements outside of the current constraints, such as meta boxes.
&lt;/p&gt;
&lt;p&gt;
If that doesn't make sense, I have an example to illustrate:
&lt;/p&gt;
&lt;p&gt;
Given the "Subtitle" example from &lt;a class="ext-link" href="http://digwp.com/2009/10/ideas-for-plugins/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://digwp.com/2009/10/ideas-for-plugins/&lt;/a&gt;, there would be a new hook named "edit_post_form_after_title" (or something along those lines) which would be placed directly after the post title is displayed on the screen and allow a plugin developer to insert a text field for a subtitle directly below the title field. See the attached patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Thu, 17 Dec 2009 04:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:9/1261025315000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:8" title="Comment 8"&gt;novasource&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Denis-de-Bernardy is correct about minify if it consumes a lot of CPU. Have to analyze on cost-benefit. At least on hosts like Dreamhost, lots of minify could push high volume sites into mandatory private virtual host mode.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is mostly true if visitors are downloading on-the-fly minified files. I don't think anyone is recommending this. While minifying files can add increased CPU load, if done right this increase should be very minimal.
&lt;/p&gt;
&lt;p&gt;
For minifying to be a realistic option, client-side website visitors should only be downloading cached CSS and JS files which have been minified/gzipped.
&lt;/p&gt;
&lt;p&gt;
I know there's other factors involved like someone who edits CSS and JS files in an external or desktop editor. I often use Dreamweaver/Coda/Textmate/Notepad++ to make CSS changes. Thus, when would Wordpress minify these files? Maybe there could be a switch to turn off caching and minification while a developer is coding the site which would again not increase CPU load.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10753 (Introduce pre-defined styles that are available in the editor) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Thu, 17 Dec 2009 04:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10753#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10753#comment:16/1261024263000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="ext-link" href="http://blog.estherswhite.net/2009/11/customizing-tinymce/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customizing TinyMCE without Advanced TinyMCE&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is a really good start to replace Wordpress' default custom classes with your own custom classes. It works pretty well with sentences and up to one paragraph, but is screwy with multiple paragraphs. It also defaults to span when selecting incomplete sentences, phrases or words. I'd love to see an option to use span, strong, em, or other inline elements rather than just defaulting to span. It'd also be great to intelligently use div and other block elements at times when selecting multiple paragraphs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>novasource</dc:creator>

      <pubDate>Thu, 17 Dec 2009 03:59:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:8/1261022361000000</guid>
      <description>&lt;p&gt;
Denis-de-Bernardy is correct about minify if it consumes a lot of CPU. Have to analyze on cost-benefit. At least on hosts like Dreamhost, lots of minify could push high volume sites into mandatory private virtual host mode.
&lt;/p&gt;
&lt;p&gt;
re: concatenation--will Google's scheme include # of HTTP requests in the speed factor? If not, then concatenation is 0 value for this purpose. Concat is only a good idea if you have static JS or CSS files. If your concat includes dynamic JS or CSS content, or changes on page-to-page, then you've defeated the advantage of concat because the browser cannot cache it.
&lt;/p&gt;
&lt;p&gt;
CDN makes a lot of sense for static files on a high traffic site but only makes sense to relieve load on primary host. You'd have to get tons and tons and tons of hits for that to make sense, and at that point you probably need professional services that put you in a different league.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>novasource</dc:creator>

      <pubDate>Thu, 17 Dec 2009 03:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:29/1261021717000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:22" title="Comment 22"&gt;petervanderdoes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:7" title="Comment 7"&gt;novasource&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's interesting contrasting this to how warmly the Drupal community embraced the same request. See &lt;a class="ext-link" href="http://drupal.org/node/290280"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://drupal.org/node/290280&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Drupal request is not the same request. The Drupal request has the javascript and CSS files zipped and have rules in .htaccess to serve those files.
I have this setup on my WordPress site, manually done.
&lt;/p&gt;
&lt;p&gt;
The request here is about serving the produced HTML page compressed as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, you're correct, and additionally that is just for one Drupal module. But Drupal does have gzip compression for cached pages built into core, configurable at admin/settings/performance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11468.diff attached to Ticket #11468</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 17 Dec 2009 03:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11468/11468.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11468/11468.diff/1261019510000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11468 (Most HTTP transport methods in WP_Http process floats as integers for ...) created</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Thu, 17 Dec 2009 03:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11468</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11468/1261019463000000</guid>
      <description>&lt;dl class="wiki"&gt;&lt;dt&gt;WP_Http_Curl&lt;/dt&gt;&lt;dd&gt;
&lt;a class="ext-link" href="http://us2.php.net/curl_setopt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us2.php.net/curl_setopt&lt;/a&gt;
&lt;/dd&gt;&lt;/dl&gt;
&lt;blockquote&gt;
&lt;p&gt;
Problem: CURLOPT_TIMEOUT, CURLOPT_CONNECTTIMEOUT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Fix:  Use CURLOPT_TIMEOUT_MS, CURLOPT_CONNECTTIMEOUT_MS instead when possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;dl class="wiki"&gt;&lt;dt&gt;All stream based methods (WP_Http_Fsockopen, WP_Http_Fopen, WP_Http_Streams)&lt;/dt&gt;&lt;dd&gt;
&lt;a class="ext-link" href="http://us2.php.net/manual/en/function.stream-set-timeout.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us2.php.net/manual/en/function.stream-set-timeout.php&lt;/a&gt;
&lt;/dd&gt;&lt;/dl&gt;
&lt;blockquote&gt;
&lt;p&gt;
Problem: stream_set_timeout( $handle, $timeout );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Fix: use stream_set_timeout( $handle, $timeout, $utimeout );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
fsockopen() does accept a (float) timeout argument, but WP_Http_Fsockopen also calls stream_set_timeout().
&lt;/p&gt;
&lt;dl class="wiki"&gt;&lt;dt&gt;WP_Http_ExtHTTP&lt;/dt&gt;&lt;dd&gt;
&lt;a class="ext-link" href="http://us2.php.net/manual/en/http.request.options.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us2.php.net/manual/en/http.request.options.php&lt;/a&gt;
&lt;/dd&gt;&lt;/dl&gt;
&lt;blockquote&gt;
&lt;p&gt;
Problem: timeout, connecttimeout.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
Fix: None.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Attached patches all affected WP_Http transports to send timeouts as ceil()'d integers to their underlying PHP functions.  ceil() is used to prevent sending a timeout of 0.
&lt;/p&gt;
&lt;p&gt;
Setting as Severity:major since this prevents spawn_cron() (which sets a timeout of 0.01) from spawning anything if the WP_Http_ExtHTTP transport is used.
&lt;/p&gt;
&lt;p&gt;
Setting as Milestone:2.9.  Bump as needed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>navjotjsingh</dc:creator>

      <pubDate>Thu, 17 Dec 2009 01:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:72/1261015109000000</guid>
      <description>&lt;p&gt;
Thanks for the fix. Was looking for it. Even I am disappointed at this step. Thousands of users who don't understand PHP and how to enable it, may find themselves possibly unknown of how to embed a video directly when WP 2.9 promised it months earlier.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 01:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:18/1261012435000000</guid>
      <description>&lt;p&gt;
Patch 7 shows a combined error notice if both errors apply. More user-friendly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11464.7.diff attached to Ticket #11464</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 01:12:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.7.diff/1261012357000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11466 (Add a server diagnosis on tools / upgrade) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11466#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11466#comment:5/1261010918000000</guid>
      <description>&lt;p&gt;
+1 for in the core, for the reasons Denis mentioned.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:28/1261010627000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:27" title="Comment 27"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
when you save permalinks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I thought so. Isn't there a better/more relevant place to insert this?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
yeah, my suggest is based on theirs. But their doc's example is actually crappy. it mindlessly compresses audio files, video files, pdfs, etc. those are already compressed, and compressing them prevents some user agents to process them correctly. with the one I suggest, we only compress html/xml/css/js files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can't pdfs be gzipped? But I take your point about compressing things which shouldn't be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11466.diff attached to Ticket #11466</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:41:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11466/11466.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11466/11466.diff/1261010501000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11466 (Add a server diagnosis on tools / upgrade) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11466#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11466#comment:4/1261010483000000</guid>
      <description>&lt;p&gt;
hakre's idea was to put this in a plugin as well, but my objection was that this would only be useful if it's distributed in core directly.
&lt;/p&gt;
&lt;p&gt;
my rational is, whoever bothers to look for such a plugin is savvy enough to worry about it in the first place. fact is, the odds are he's merely looking for confirmation that he configured his server properly.
&lt;/p&gt;
&lt;p&gt;
if the plugin is included in core, of course, it's another story and definitely count me in. we merely need an extra hook...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:27/1261010170000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:26" title="Comment 26"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Denis:&lt;br /&gt;
When does the function &lt;code&gt;save_mod_rewrite_rules&lt;/code&gt; which you've added the code into actually get run?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
when you save permalinks.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, why not compress all content except images? We can use the sample code at &lt;a class="ext-link" href="http://httpd.apache.org/docs/2.0/mod/mod_deflate.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://httpd.apache.org/docs/2.0/mod/mod_deflate.html&lt;/a&gt; (with some of the comments stripped out...) :
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
yeah, my suggest is based on theirs. But their doc's example is actually crappy. it mindlessly compresses audio files, video files, pdfs, etc. those are already compressed, and compressing them prevents some user agents to process them correctly. with the one I suggest, we only compress html/xml/css/js files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11464.6.diff attached to Ticket #11464</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.6.diff/1261010001000000</guid>
      <description>&lt;p&gt;
Checks PHP and MySQL separately, only shows errors it needs to show.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:32:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:17/1261009979000000</guid>
      <description>&lt;p&gt;
Artifact from when I had $wp_version in there. Then I realized that would only return the current version, so I stripped it. Forgot to update that part, obviously.
&lt;/p&gt;
&lt;p&gt;
Patch replaced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:16/1261009775000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:15" title="Comment 15"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Patch attached that incorporates I think everyone's ideas here. Untested.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are running version %2$s will return an insufficient number of arguments from sprintf. It should be %s instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:15/1261009432000000</guid>
      <description>&lt;p&gt;
Patch attached that incorporates I think everyone's ideas here. Untested.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Dec 2009 00:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:9/1261008468000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11455#comment:8" title="Comment 8"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Random thought -- we should add wp_trash_attachment() to 3.0.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, don't really like how &lt;code&gt;wp_trash_post()&lt;/code&gt; calls &lt;code&gt;wp_delete_attachment()&lt;/code&gt; and &lt;code&gt;wp_delete_attachment()&lt;/code&gt; calls back &lt;code&gt;wp_trash_post()&lt;/code&gt; in the above patch...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 16 Dec 2009 23:53:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:14/1261007631000000</guid>
      <description>&lt;p&gt;
Splitting the test in two parts and showing the right error message(s) makes sense. Perhaps we should show both results when there's an error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP version 4.3 or newer: PASS
MySQL version 4.1.2 or newer: FAIL
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 23:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:13/1261005542000000</guid>
      <description>&lt;p&gt;
What you don't want is to test PHP, and find that PHP is too low, so they contact their host, then they come back, and find that their MySQL is too low.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Wed, 16 Dec 2009 23:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:26/1261005371000000</guid>
      <description>&lt;p&gt;
@Denis:&lt;br /&gt;
When does the function &lt;code&gt;save_mod_rewrite_rules&lt;/code&gt; which you've added the code into actually get run?
&lt;/p&gt;
&lt;p&gt;
Also, why not compress all content except images? We can use the sample code at &lt;a class="ext-link" href="http://httpd.apache.org/docs/2.0/mod/mod_deflate.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://httpd.apache.org/docs/2.0/mod/mod_deflate.html&lt;/a&gt; (with some of the comments stripped out...) :
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;IfModule mod_deflate.c&amp;gt;
  SetOutputFilter DEFLATE
  # Drop problematic browsers
  BrowserMatch ^Mozilla/4 gzip-only-text/html
  BrowserMatch ^Mozilla/4\.0[678] no-gzip
  BrowserMatch \bMSI[E] !no-gzip !gzip-only-text/html
  # Don't compress images
  SetEnvIfNoCase Request_URI \
  \.(?:gif|jpe?g|png)$ no-gzip dont-vary
  # Make sure proxies don't deliver the wrong content
  Header append Vary User-Agent env=!dont-vary
&amp;lt;/IfModule&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nickbohle</dc:creator>

      <pubDate>Wed, 16 Dec 2009 23:06:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:12/1261004762000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
At the very least, perhaps we can make it more understandable by breaking it up and only displaying what the real error is.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I second this. Let's just say:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Test PHP --&amp;gt; if not okay:
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
"The update cannot be installed because your web host is running an outdated PHP version"
&lt;/p&gt;
&lt;p&gt;
if okay --&amp;gt; proceed
&lt;/p&gt;
&lt;p&gt;
Test MySQL --&amp;gt; if not okay:
&lt;/p&gt;
&lt;p&gt;
"The update cannot be installed because your web host is running an outdated MySQL version"
&lt;/p&gt;
&lt;p&gt;
if okay ---&amp;gt; proceed&lt;em&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
Regards,
Nick
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:11/1261004033000000</guid>
      <description>&lt;p&gt;
There's no need to provide them four version numbers (current and required for both PHP and MySQL). First, since you're checking both at once and throwing an error if either is not sufficient, then it might say "PHP (4.3.1 vs 4.3 or newer)", which is just confusing.
&lt;/p&gt;
&lt;p&gt;
Second, how much of a point in the right direction does a user need? An end-user will be contacting their host anyway, saying they can't run WordPress and this is the error they're getting. A web developer or sys admin will know exactly what needs to be done. I find this similar to upload file size errors -- we don't bother telling them about post_max_size, max_upload_filesize, .htaccess, or php.ini for these reasons.
&lt;/p&gt;
&lt;p&gt;
At the very least, perhaps we can make it more understandable by breaking it up and only displaying what the real error is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11464.5.diff attached to Ticket #11464</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:38:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.5.diff/1261003082000000</guid>
      <description>&lt;p&gt;
fix the typo as well
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>11464.4.diff attached to Ticket #11464</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.4.diff/1261002986000000</guid>
      <description>&lt;p&gt;
woops
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:10/1261002820000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This would point the user into the right direction.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
please try the new one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11464.2.diff attached to Ticket #11464</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:32:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.2.diff/1261002735000000</guid>
      <description>&lt;p&gt;
highlight the versions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11467 (Random addition of categories to Posts when saving) created</title>
      
        <dc:creator>markhowellsmead</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11467</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11467/1261002625000000</guid>
      <description>&lt;p&gt;
When I create a new article (which WordPress calls a “post”), I assign it to a category using a list I defined when setting up the site. The problem comes when re-editing the post: in many instances, the system then adds the post to another category at random when saving. I can only surmize that WordPress contains a bug when working with nested post categories, so that’s where my investigations will start.
&lt;/p&gt;
&lt;p&gt;
I am using WP 2.8.5 on a standard English installation and the following active plugins.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Askimet
&lt;/li&gt;&lt;li&gt;Duplicate Sidebar Widgets
&lt;/li&gt;&lt;li&gt;Flexi Pages Widget
&lt;/li&gt;&lt;li&gt;Google XML Sitemaps
&lt;/li&gt;&lt;li&gt;Kimili Flash Embed
&lt;/li&gt;&lt;li&gt;List Subpages
&lt;/li&gt;&lt;li&gt;Markdown Extra
&lt;/li&gt;&lt;li&gt;More Fields
&lt;/li&gt;&lt;li&gt;PostMaster
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:27:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:9/1261002470000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:5" title="Comment 5"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
while we're at it, we might as well check the php version too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You mean like the patch does ;-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly. I had stopped reading it upon seeing update-core.php was the file getting patched. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nickbohle</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:26:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:8/1261002417000000</guid>
      <description>&lt;p&gt;
Thank you guys for the fast response!
&lt;/p&gt;
&lt;p&gt;
I would suggest to split the testing for the correct PHP / MySQL version:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Test PHP --&amp;gt; if not okay:
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
"The update cannot be installed because you do not have the correct PHP version (4.3 or newer)"
&lt;/p&gt;
&lt;p&gt;
if okay --&amp;gt; proceed
&lt;/p&gt;
&lt;p&gt;
Test MySQL --&amp;gt; if not okay:
&lt;/p&gt;
&lt;p&gt;
"The update cannot be installed because you do not have the correct MySQL version (4.1.2 or newer)"
&lt;/p&gt;
&lt;p&gt;
if okay ---&amp;gt; proceed&lt;em&gt;
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
This would point the user into the right direction.
&lt;/p&gt;
&lt;p&gt;
And don't forget localization.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11463 (Orphaned comment metadata in DB after comment is removed) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11463#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11463#comment:2/1261001833000000</guid>
      <description>&lt;p&gt;
Second patch looks reasonable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11462 (Documentation for Comments Metadata API refers to posts) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11462#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11462#comment:4/1261001710000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11462 (Documentation for Comments Metadata API refers to posts) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:14:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11462#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11462#comment:3/1261001694000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12421" title="Fix phpDoc for Comment Meta functions to refer to comments not posts. ..."&gt;[12421]&lt;/a&gt;) Fix phpDoc for Comment Meta functions to refer to comments not posts. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11462" title="#11462: defect (bug): Documentation for Comments Metadata API refers to posts (closed: fixed)"&gt;#11462&lt;/a&gt; props sirzooro.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12421]: Fix phpDoc for Comment Meta functions to refer to comments not posts. ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:14:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12421</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12421/1261001681304449</guid>
      <description>&lt;p&gt;
Fix phpDoc for Comment Meta functions to refer to comments not posts. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11462" title="#11462: defect (bug): Documentation for Comments Metadata API refers to posts (closed: fixed)"&gt;#11462&lt;/a&gt; props sirzooro.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11462 (Documentation for Comments Metadata API refers to posts) updated</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11462#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11462#comment:2/1261001642000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12420" title="Fix phpDoc for Comment Meta functions to refer to comments not posts. ..."&gt;[12420]&lt;/a&gt;) Fix phpDoc for Comment Meta functions to refer to comments not posts. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11462" title="#11462: defect (bug): Documentation for Comments Metadata API refers to posts (closed: fixed)"&gt;#11462&lt;/a&gt; props sirzooro.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [12420]: Fix phpDoc for Comment Meta functions to refer to comments not posts. ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12420/1261001633160738</guid>
      <description>&lt;p&gt;
Fix phpDoc for Comment Meta functions to refer to comments not posts. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11462" title="#11462: defect (bug): Documentation for Comments Metadata API refers to posts (closed: fixed)"&gt;#11462&lt;/a&gt; props sirzooro.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:7/1261001228000000</guid>
      <description>&lt;p&gt;
Patch looks good. Just a few minor corrections to the text:
&lt;/p&gt;
&lt;p&gt;
"The update cannot be install&lt;em&gt;ed&lt;/em&gt; because you do not have the correct PHP (4.3 or newer) and &lt;em&gt;MySQL&lt;/em&gt; versions (4.1.2 or newer)"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:6/1261001141000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updating the priority/severity on this - I think we should resolve this prior to release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11466 (Add a server diagnosis on tools / upgrade) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 22:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11466#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11466#comment:3/1261000963000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
These sound like excellent ideas for a WordPress health check.
&lt;/p&gt;
&lt;p&gt;
I am in the process of creating a plugin to do just this sort of thing and I think this would be better served by a canonical/recommended plugin which can have a faster cycle and push out more checks.
&lt;/p&gt;
&lt;p&gt;
I take it you would both be interested in being involved in this plugins development?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11461 (When creating a new WP_Query, running the_post() on the new object ...) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11461#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11461#comment:5/1261000578000000</guid>
      <description>worksforme: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11461#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
call &lt;code&gt;wp_reset_query()&lt;/code&gt; after your custom loop to reset it back to the main loop.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There you go.
&lt;/p&gt;
&lt;p&gt;
Reopen when we drop PHP 4 for good.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11466 (Add a server diagnosis on tools / upgrade) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11466#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11466#comment:2/1261000573000000</guid>
      <description>&lt;p&gt;
register globals certainly qualifies as well.
&lt;/p&gt;
&lt;p&gt;
the key is to get users to nag hosts all over the place into upgrading their servers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:5/1261000500000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11464#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
while we're at it, we might as well check the php version too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You mean like the patch does ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11466 (Add a server diagnosis on tools / upgrade) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:53:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11466#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11466#comment:1/1261000439000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11466 (Add a server diagnosis on tools / upgrade) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11466</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11466/1261000414000000</guid>
      <description>&lt;p&gt;
This is following up on a couple of recent discussions in trac, and one on the phone with hakre. Basically, we should add some kind of diagnosis tool towards the top of Tools / Upgrade.
&lt;/p&gt;
&lt;p&gt;
Specifically, we should highlight the latest know version of Apache/PHP/MySQL at release time vs the ones on the server, and prompt users to bug their host to upgrade when they're not up to date.
&lt;/p&gt;
&lt;p&gt;
We should additionally highlight a few things that slow down and/or are know to occasionally cause problems with WP or plugins, such as:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;safe_mode on (deprecated in PHP6)
&lt;/li&gt;&lt;li&gt;magic quotes on (deprecated in PHP6)
&lt;/li&gt;&lt;li&gt;no mod_rewrite (unless it's IIS, obviously)
&lt;/li&gt;&lt;li&gt;no mod_deflate (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10365" title="#10365: feature request: Gzip compression should be offered by default in Wordpress (closed: wontfix)"&gt;#10365&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;whatever else we think is an annoyance
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:4/1260999947000000</guid>
      <description>&lt;p&gt;
while we're at it, we might as well check the php version too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:45:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:3/1260999913000000</guid>
      <description>&lt;p&gt;
westi beat me to create the patch -- haven't tested, but I'm pretty certain that it'll work indeed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11464.diff attached to Ticket #11464</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11464/11464.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11464/11464.diff/1260999643000000</guid>
      <description>&lt;p&gt;
A possible fix - as yet untested
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:2/1260999250000000</guid>
      <description>&lt;p&gt;
I'm not sure there is something easy we can do here.
&lt;/p&gt;
&lt;p&gt;
We could put a check into &lt;code&gt;wp-admin/includes/update-core.php&lt;/code&gt; as that get copied across and does the core of the work but that check would need to be ignorable in the case that the user is using a replacement db class which has different requirements.
&lt;/p&gt;
&lt;p&gt;
I'm going to throw up a patch which adds a check and see what people think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) updated</title>
      
        <dc:creator>nickbohle</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464#comment:1/1260999128000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11465 (custom field duplicated) created</title>
      
        <dc:creator>ericr23</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:09:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11465</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11465/1260997763000000</guid>
      <description>&lt;p&gt;
When I enter the information for a custom field and click on Preview without first clicking Add Custom Field, the custom field is saved. But then when I click Publish, it is saved again, appearing in the post twice.
&lt;/p&gt;
&lt;p&gt;
If I click Add Custom Field before Preview, subsequent Publish does not duplicate the custom field. But it is very convenient and efficient to be able to avoid a separate save of the custom field.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11461 (When creating a new WP_Query, running the_post() on the new object ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11461#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11461#comment:4/1260997417000000</guid>
      <description>&lt;p&gt;
call &lt;code&gt;wp_reset_query()&lt;/code&gt; after your custom loop to reset it back to the main loop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11454 (Add suffix to table prefix on installation) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 21:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11454#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11454#comment:3/1260997352000000</guid>
      <description>&lt;p&gt;
Having thought about this, I think it would always make more sense to be either really long or completely random. A bot could easily break a table that was a defined number of characters as my first example.
&lt;/p&gt;
&lt;p&gt;
So what is now
&lt;/p&gt;
&lt;pre class="wiki"&gt;table_prefix = wp_
&lt;/pre&gt;&lt;p&gt;
could be
&lt;/p&gt;
&lt;pre class="wiki"&gt;table_prefix = xyz_wp_123_
&lt;/pre&gt;&lt;p&gt;
or
&lt;/p&gt;
&lt;pre class="wiki"&gt;table_prefix = 12_wp_3xyz_
&lt;/pre&gt;&lt;p&gt;
The more random this prefix is, the less likely an attack could be successful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11464 (MySQL 4.1.2 and automatic update...) created</title>
      
        <dc:creator>nickbohle</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:57:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11464</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11464/1260997077000000</guid>
      <description>&lt;p&gt;
Dear all,
&lt;/p&gt;
&lt;p&gt;
I've just tried to update to WP 2.9 RC1 via the beta tester plug-in and the automatic update.
&lt;/p&gt;
&lt;p&gt;
Everything worked like a charm (files downloaded, installled, etc.), until I had to upgrade my database.
&lt;/p&gt;
&lt;p&gt;
Until?
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Make sure the server has MySQL 4.1.2
 	1054	        if ( version_compare($this-&amp;gt;db_version(), '4.1.2', '&amp;lt;') )
 	1055	            return new WP_Error('database_version',sprintf(__('&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: WordPress %s requires MySQL 4.1.2 or higher'), $wp_version));
&lt;/pre&gt;&lt;p&gt;
I know! By using the beta tester plugin, I totally forgot about the database requirements. My fault. And I fixed by downgrading...
&lt;/p&gt;
&lt;p&gt;
But what is the reaction of the average WP user when he updates WP to 2.9 via the automatic update, he starts the database update and  then, his database upgrade will not work due to an old mysql version. Result: he will be stuck with no connection to the back-end.
&lt;/p&gt;
&lt;p&gt;
So, my question:
&lt;/p&gt;
&lt;p&gt;
Why is there no MySQL (and PHP) version check BEFORE the automatic updates starts. A warning about an outdated mysql verion would be more useful BEFORE I try to install WP 2.9
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11215 (Improve naming of child/parent theme functions) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:42:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11215#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11215#comment:2/1260996132000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I know the way phpBB does it is with template/style, but I'm not sure if a phpBB style allows PHP code to override, or if it's just a stylesheet thing.
&lt;/p&gt;
&lt;p&gt;
I think because the terms theme and template have become synonymous, it's hard to say which direction to take. To me, theme/stye are basically the same thing.
&lt;/p&gt;
&lt;p&gt;
Template - HTML
Theme/style - CSS/images
&lt;/p&gt;
&lt;p&gt;
For the purpose of WordPress, parent/child probably makes the most sense, since it isn't template/theme/style specific in any way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11463.2.diff attached to Ticket #11463</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11463/11463.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11463/11463.2.diff/1260995189000000</guid>
      <description>&lt;p&gt;
Second patch works a bit more like wp_delete_post. Adds deleted_comment action and deletes comment after meta is deleted (that way meta hooks can react).
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10973 (Grand Unified Upgrader) updated</title>
      
        <dc:creator>arnee</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10973#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10973#comment:20/1260995088000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11463.diff attached to Ticket #11463</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:23:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11463/11463.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11463/11463.diff/1260994989000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11463 (Orphaned comment metadata in DB after comment is removed) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:22:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11463#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11463#comment:1/1260994975000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I was looking at this the other day but couldn't get around to a patch and never submitted a ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>taxmeta.diff attached to Ticket #10142</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10142/taxmeta.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10142/taxmeta.diff/1260994770000000</guid>
      <description>&lt;p&gt;
1st attempt (diff vs WP 2.9 RC1)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>xmlrpc.diff attached to Ticket #10789</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10789/xmlrpc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10789/xmlrpc.diff/1260994759000000</guid>
      <description>&lt;p&gt;
Moved $version out of if statement for clarity
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10142 (Add metadata support for taxonomy terms) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10142#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10142#comment:5/1260994723000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks that with changes made in WP 2.9 for comments metadata this should be quite easy to implement - see attached path.
&lt;/p&gt;
&lt;p&gt;
TODO: delete metadata when term is removed (and probably other things).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11463 (Orphaned comment metadata in DB after comment is removed) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11463</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11463/1260994114000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_delete_comment()&lt;/code&gt; should delete all comment medadata associated with comment.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11462 (Documentation for Comments Metadata API refers to posts) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 20:02:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11462#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11462#comment:1/1260993772000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:8/1260993502000000</guid>
      <description>&lt;p&gt;
Patch to add MEDIA_TRASH check to wp_trash_post.
&lt;/p&gt;
&lt;p&gt;
Random thought -- we should add wp_trash_attachment() to 3.0.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>11455-wp_delete_attachment.3.diff attached to Ticket #11455</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11455/11455-wp_delete_attachment.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11455/11455-wp_delete_attachment.3.diff/1260993278000000</guid>
      <description>&lt;p&gt;
Also adds MEDIA_TRASH check to wp_trash_post.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>comment.php.diff attached to Ticket #11462</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11462/comment.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11462/comment.php.diff/1260993269000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11462 (Documentation for Comments Metadata API refers to posts) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11462</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11462/1260993243000000</guid>
      <description>&lt;p&gt;
I think this is a copy/paste issue. Attached patch corrects this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11456 (excerpt_more tweak) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11456#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11456#comment:6/1260993066000000</guid>
      <description>&lt;p&gt;
My suggestion is to add comment instead, describing that this space is important.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11456 (excerpt_more tweak) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:48:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11456#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11456#comment:5/1260992890000000</guid>
      <description>&lt;pre class="wiki"&gt;echo implode(' ', explode(' ',
'I' . ' ' . 'thought' . ' ' . 'the' . 'documentation' . ' ' . 'made' . ' ' . 'it' . ' ' . 'clear.'));
If some things are bikeshed issues, this is more of a bike tarpaulin issue. :)
I'm glad some of you get to see conversations in #wordpress-dev.  All I see are dozens of people leaving and joining the freenode servers every five minutes.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:71/1260992376000000</guid>
      <description>&lt;p&gt;
Fix for the now-broken oEmbed functionality:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('embed_oembed_discover', create_function('$a','return true;'));
&lt;/pre&gt;&lt;p&gt;
I'm very disappointed that the team decided to cripple this otherwise extremely cool functionality.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11461 (When creating a new WP_Query, running the_post() on the new object ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:39:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11461#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11461#comment:3/1260992364000000</guid>
      <description>&lt;p&gt;
I like the general idea of trying to move the WP_Query away from being overly dependent on globals.  Unfortunately there are huge backwards-compatibility issues.  Practically everybody assumes $post will be defined in the scope of a template file.  Lots of themes and theme examples use &lt;code&gt;$post-&amp;gt;ID&lt;/code&gt; to get the current post's ID within the Loop.
&lt;/p&gt;
&lt;p&gt;
Someday maybe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11461 (When creating a new WP_Query, running the_post() on the new object ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11461#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11461#comment:2/1260992206000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What nacin said and also, with your patch, how would the global $post be populated in the main query?
&lt;/p&gt;
&lt;p&gt;
Suggest closing as 'worksforme'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11414 (Sidebar Calendar Widget broken) updated</title>
      
        <dc:creator>faltarego</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11414#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11414#comment:7/1260991951000000</guid>
      <description>&lt;p&gt;
P.S. I did upgrade to the latest bleeding edge nightly build.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11414 (Sidebar Calendar Widget broken) updated</title>
      
        <dc:creator>faltarego</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:27:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11414#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11414#comment:6/1260991647000000</guid>
      <description>&lt;p&gt;
This is interesting. I tried twelve timezones, and here are my results:
&lt;/p&gt;
&lt;p&gt;
With the following time zone settings, the sidebar calendar displayed correctly: London, Amsterdam, Sarajevo, Moscow, Baghdad, Singapore.
&lt;/p&gt;
&lt;p&gt;
With the following time zone settings, the sidebar calendar displayed incorrectly as described in my initial post: Halifax (my home region), Bermuda, Toronto, New York, Los Angeles, Honolulu.
&lt;/p&gt;
&lt;p&gt;
I think I see a pattern emerging here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11461 (When creating a new WP_Query, running the_post() on the new object ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:11:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11461#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11461#comment:1/1260990705000000</guid>
      <description>&lt;p&gt;
$post is a global central to a lot of WP functionality. What you're trying to do can be done via numerous multiple loop solutions. See  &lt;a class="ext-link" href="http://codex.wordpress.org/The_Loop#Multiple_Loops"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/The_Loop#Multiple_Loops&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11456 (excerpt_more tweak) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11456#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11456#comment:4/1260990692000000</guid>
      <description>&lt;p&gt;
@hakre:
&lt;/p&gt;
&lt;p&gt;
LOL.  My concatenation is rather unpopular.  And I got rboren into trouble with it. :-D
&lt;/p&gt;
&lt;p&gt;
From the wp-dev channel:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(6:43:37 PM) filosofo: uh, why ' ' . '[...]' in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12414" title="Make the excerpt_more filter include the space. Props demetris. fixes ..."&gt;r12414&lt;/a&gt; ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(6:44:01 PM) filosofo: how is that better than ' [...]'?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
SNIP
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(6:52:03 PM) rboren: filosofo: Thought about changing it but then thought it made the rather extraneous nature of the space more apparent.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(6:52:11 PM) rboren: Would like to just get rid of it though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
SNIP
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(7:01:24 PM) demetris: rboren: filosofo: re &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12414" title="Make the excerpt_more filter include the space. Props demetris. fixes ..."&gt;r12414&lt;/a&gt; -- My patch split the string into two for the reason rboren said.  To make it obvious where the space was added, and also as an indication to people hacking the code in the future, that this space is there on purpose; it is not a typo, for example. But I am not a coder myself, so I dont know if this is good practice.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11456 (excerpt_more tweak) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 19:09:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11456#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11456#comment:3/1260990540000000</guid>
      <description>fixed: &lt;p&gt;
Discussed on #wordpress-dev. Done like that to make it obvious the space is there and is deliberate.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2009-12-16#m44966"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2009-12-16#m44966&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11456 (excerpt_more tweak) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 16 Dec 2009 18:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11456#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11456#comment:2/1260989798000000</guid>
      <description>&lt;p&gt;
Why is there the concatnation in the commit? &lt;code&gt;' ' . '[...]'&lt;/code&gt; seems hard to read, &lt;code&gt;' [...]'&lt;/code&gt; should do the job as well (line 1813 in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12414" title="Make the excerpt_more filter include the space. Props demetris. fixes ..."&gt;[12414]&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>the_post.2.patch attached to Ticket #11461</title>
      
        <dc:creator>bsdeluxe</dc:creator>

      <pubDate>Wed, 16 Dec 2009 18:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11461/the_post.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11461/the_post.2.patch/1260989656000000</guid>
      <description>&lt;p&gt;
Patch to fix scope issue on the_post
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11461 (When creating a new WP_Query, running the_post() on the new object ...) created</title>
      
        <dc:creator>bsdeluxe</dc:creator>

      <pubDate>Wed, 16 Dec 2009 18:53:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11461</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11461/1260989596000000</guid>
      <description>&lt;p&gt;
This happens when running multiple loops in a page.  If a new WP_Query object is created, $post should only be changed within the scope of that object, right?
&lt;/p&gt;
&lt;p&gt;
To replicate:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// in a template called from a page
echo $post-&amp;gt;ID; // the ID of the page
$new_obj = new WP_Query();
$new_obj-&amp;gt;query("some valid querystring");
if ($new_obj-&amp;gt;have_posts()) : while ($new_obj-&amp;gt;have_posts()) : $new_obj-&amp;gt;the_post();
 // .. do your loop stuff
endwhile; endif;
echo $post-&amp;gt;ID; // not the same as the first one
&lt;/pre&gt;&lt;p&gt;
Suggested patch attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [12419]: Update the readme to include new mysql minimum version.</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 18:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12419/1260986706103330</guid>
      <description>&lt;p&gt;
Update the readme to include new mysql minimum version.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12418]: Update the readme to include new mysql minimum version.</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 18:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12418/1260986629303327</guid>
      <description>&lt;p&gt;
Update the readme to include new mysql minimum version.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12417]: 2.9 branch, from [12416]</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12417/1260986136162098</guid>
      <description>&lt;p&gt;
2.9 branch, from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12416" title="RC1"&gt;[12416]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [12416]: RC1</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12416</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12416/1260985818885166</guid>
      <description>&lt;p&gt;
RC1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11390 (Press This entity encoding fix and blank title) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11390#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11390#comment:6/1260984766000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://grafiqa.files.wordpress.com/2008/11/charlie_brown_lucy_football.jpg"&gt;&lt;img src="http://grafiqa.files.wordpress.com/2008/11/charlie_brown_lucy_football.jpg" alt="http://grafiqa.files.wordpress.com/2008/11/charlie_brown_lucy_football.jpg" crossorigin="anonymous" title="http://grafiqa.files.wordpress.com/2008/11/charlie_brown_lucy_football.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11460 (Remove message if Turbo isn't supported by the browser) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11460#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11460#comment:2/1260984371000000</guid>
      <description>wontfix: &lt;p&gt;
Per IRC discussion.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:7/1260983742000000</guid>
      <description>&lt;p&gt;
We might also want to check MEDIA_TRASH in wp_trash_post() if the type is attachment.  This seems good enough for now though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) closed</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:6/1260983671000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12415" title="Delete instead of trash when bulk deleting media. Props nacin. fixes #11455"&gt;[12415]&lt;/a&gt;) Delete instead of trash when bulk deleting media. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11455" title="#11455: defect (bug): Bulk &amp;#34;Delete Permanently&amp;#34; moves attachments to trash (closed: fixed)"&gt;#11455&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12415]: Delete instead of trash when bulk deleting media. Props nacin. fixes #11455</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12415</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12415/1260983661652371</guid>
      <description>&lt;p&gt;
Delete instead of trash when bulk deleting media. Props nacin. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11455" title="#11455: defect (bug): Bulk &amp;#34;Delete Permanently&amp;#34; moves attachments to trash (closed: fixed)"&gt;#11455&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11460 (Remove message if Turbo isn't supported by the browser) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Wed, 16 Dec 2009 17:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11460#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11460#comment:1/1260983279000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:5/1260982004000000</guid>
      <description>&lt;p&gt;
Yep, already repatched.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11455-wp_delete_attachment.2.diff attached to Ticket #11455</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:45:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11455/11455-wp_delete_attachment.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11455/11455-wp_delete_attachment.2.diff/1260981940000000</guid>
      <description>&lt;p&gt;
Typo in patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:44:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:4/1260981860000000</guid>
      <description>&lt;p&gt;
Shouldn't that still check for !$force_delete rather than $force_delete?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11456 (excerpt_more tweak) closed</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11456#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11456#comment:1/1260981552000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12414" title="Make the excerpt_more filter include the space. Props demetris. fixes ..."&gt;[12414]&lt;/a&gt;) Make the excerpt_more filter include the space. Props demetris. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11456" title="#11456: defect (bug): excerpt_more tweak (closed: fixed)"&gt;#11456&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12414]: Make the excerpt_more filter include the space. Props demetris. fixes ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12414</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12414/1260981538048892</guid>
      <description>&lt;p&gt;
Make the excerpt_more filter include the space. Props demetris. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11456" title="#11456: defect (bug): excerpt_more tweak (closed: fixed)"&gt;#11456&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:3/1260981029000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We need to add checks for EMPTY_TRASH_DAYS and MEDIA_TRASH.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>11455-wp_delete_attachment.diff attached to Ticket #11455</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11455/11455-wp_delete_attachment.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11455/11455-wp_delete_attachment.diff/1260980952000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:2/1260980509000000</guid>
      <description>&lt;p&gt;
I can reproduce. Looking into it.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>11460.diff attached to Ticket #11460</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:18:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11460/11460.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11460/11460.diff/1260980301000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11460 (Remove message if Turbo isn't supported by the browser) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:16:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11460</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11460/1260980207000000</guid>
      <description>&lt;p&gt;
Mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11301" title="#11301: task (blessed): Remove Gears (closed: fixed)"&gt;#11301&lt;/a&gt; (the remove gears ticket).
&lt;/p&gt;
&lt;p&gt;
One thing that can probably be done now is removing the conditional message "Turbo is not available for your browser." from tools.php.
&lt;/p&gt;
&lt;p&gt;
When Turbo isn't supported by the browser, there's no Turbo link in the header and no explanation of what Turbo is in tools.php, nor is the "Speed Up WordPress" section title present with gears unavailable, so it's quite the orphaned phrase. It should just be removed.
&lt;/p&gt;
&lt;p&gt;
The fact that it will be phased out and/or replaced soon is just another reason to axe that line.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) closed</title>
      
        <dc:creator>PeteMall</dc:creator>

      <pubDate>Wed, 16 Dec 2009 16:10:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455#comment:1/1260979855000000</guid>
      <description>invalid: &lt;p&gt;
I wasn't able to replicated this. Trash for Media was removed from 2.9 and the "Delete Permanently" action deletes the attachments on my local trunk install.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11459 (category__not_in is either broken or mis-named) created</title>
      
        <dc:creator>holizz</dc:creator>

      <pubDate>Wed, 16 Dec 2009 15:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11459/1260978976000000</guid>
      <description>&lt;p&gt;
category&lt;span class="underline"&gt;not_in=1 gets all posts in category 1 AND which are not uncategorised.
&lt;/span&gt;&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>11458-posts_per_page.diff attached to Ticket #11458</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 15:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11458/11458-posts_per_page.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11458/11458-posts_per_page.diff/1260978475000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11458 (Remove unnecessary $posts_per_page global in admin.php) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 15:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11458/1260978426000000</guid>
      <description>&lt;p&gt;
First discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11385" title="#11385: defect (bug): a couple of uninstantiated options (closed: fixed)"&gt;#11385&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
There is an orphaned &lt;code&gt;$posts_per_page = get_option('posts_per_page')&lt;/code&gt; in the admin.php bootstrap. The variable is never used and appears to be an artifact that is left over from before the time of screen options.
&lt;/p&gt;
&lt;p&gt;
The posts_per_page option is the reading option for the number of posts to display per page in a theme.
&lt;/p&gt;
&lt;p&gt;
In the off-chance a plugin used this variable, it is overwritten in post.php anyway, and would provide incorrect values on any other page, as they have their own *_per_page user options. As of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12375" title="Don't fallback to the options database when retrieving *_per_page user ..."&gt;[12375]&lt;/a&gt; they also have a complete set of filters as well.
&lt;/p&gt;
&lt;p&gt;
If someone feels that broken back compat is necessary here, then we can wontfix.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11457 (Heigh Parameter in wp-admin.css affects the use of multi line selects.) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 12:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11457#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11457#comment:1/1260967729000000</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10331" title="#10331: enhancement: SELECT multiple=&amp;#34;multiple&amp;#34; Size Bug (closed: fixed)"&gt;#10331&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Changed 4 weeks ago by azaozz
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
resolution set to wontfix
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Multiple selects are not used in core and it seems this normalizes the &amp;lt;select&amp;gt; across browsers. If plugins need it they can easily add more specific style.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11457 (Heigh Parameter in wp-admin.css affects the use of multi line selects.) created</title>
      
        <dc:creator>SteveAtty</dc:creator>

      <pubDate>Wed, 16 Dec 2009 11:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11457</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11457/1260963896000000</guid>
      <description>&lt;p&gt;
Currently the wp-admin.css file contains:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#wpcontent select {
padding: 2px;
height: 2em;
font-size: 11px;
}
&lt;/pre&gt;&lt;p&gt;
This means that the following code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
&amp;lt;select id="place_list" name="plid" size="10" multiple="multiple" style="min-width:30em;
width:30em"&amp;gt;
&amp;lt;option value="668u"&amp;gt;Line 1&amp;lt;/option&amp;gt;&amp;lt;option value="o0v9"&amp;gt;Line 2&amp;lt;/option&amp;gt;&amp;lt;option value="o0x1"&amp;gt;Line 3&amp;lt;/option&amp;gt;&amp;lt;/select&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Produces a single line select rather than a 10 line select with only 3 lines in it.
&lt;/p&gt;
&lt;p&gt;
Changing the css file to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#wpcontent select {
padding: 2px;
font-size: 11px;
}
&lt;/pre&gt;&lt;p&gt;
Fixes this issue and does not seem to affect any other part of the admin back end.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 11:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:7/1260963664000000</guid>
      <description>&lt;p&gt;
also related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9242" title="#9242: enhancement: Auto-magically reduce the number of plugin/theme script and css files (closed: duplicate)"&gt;#9242&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>t11456-excerpt-more-tweak.diff attached to Ticket #11456</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Wed, 16 Dec 2009 10:47:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11456/t11456-excerpt-more-tweak.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11456/t11456-excerpt-more-tweak.diff/1260960431000000</guid>
      <description>&lt;p&gt;
excerpt_more tweak, to make the filterable excerpt_more also include the space that WP adds before it.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11456 (excerpt_more tweak) created</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Wed, 16 Dec 2009 10:45:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11456/1260960349000000</guid>
      <description>&lt;p&gt;
I believe this should be considered and accepted or rejected before 2.9 final, that is, before people start using the new EXCERPT_MORE filter.
&lt;/p&gt;
&lt;p&gt;
Currently the MORE that is added to the autogenerated excerpt is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{SPACE}[...]
&lt;/pre&gt;&lt;p&gt;
(EXCERPT_MORE is added to the array with array_push(), and then the array is imploded with SPACE as a string.)
&lt;/p&gt;
&lt;p&gt;
However, the filterable EXCERPT_MORE is just:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[...]
&lt;/pre&gt;&lt;p&gt;
I think the two should be the same.
&lt;/p&gt;
&lt;p&gt;
Here is a case in which the current behaviour is problematic:  I want to replace the default EXCERPT_MORE with a simple ellipsis, expecting to get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Blah Blah.  This is an excerpt autogenerated by{ELLIPSIS}
&lt;/pre&gt;&lt;p&gt;
Instead, I get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Blah Blah.  This is an excerpt autogenerated by{SPACE}{ELLIPSIS}
&lt;/pre&gt;&lt;p&gt;
To get this space removed, you have to go and apply filtering to a lower level, which I think defeats the purpose of introducing a user-friendly EXCERPT_MORE filter.  (On the other hand, if folks do want a space there, there is no easier thing than starting your custom EXCERPT_MORE with a space.)
&lt;/p&gt;
&lt;p&gt;
I’m attaching a patch — more as a demonstration of what I am after, as I don’t know what is the proper way to make this change to wp_trim_excerpt.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 10:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:6/1260960199000000</guid>
      <description>&lt;p&gt;
Also, there is this point to keep in mind if we were to use something php based:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://minify.googlecode.com/svn/tags/release_2.1.3/min/lib/Minify/CSS/Compressor.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://minify.googlecode.com/svn/tags/release_2.1.3/min/lib/Minify/CSS/Compressor.php&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt; * This is a heavy regex-based removal of whitespace, unnecessary
 * comments and tokens, and some CSS value minimization, where practical.
 * Many steps have been taken to avoid breaking comment-based hacks,
 * including the ie5/mac filter (and its inversion), but expect tricky
 * hacks involving comment tokens in 'content' value strings to break
 * minimization badly. A test suite is available.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 10:36:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:5/1260959765000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:4" title="Comment 4"&gt;micasuh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I disagree that minifying is overrated, but I won't sit here and claim it's going to reduce a website by 80 or 90%.
&lt;/p&gt;
&lt;p&gt;
Minifying CSS and JS, &lt;a class="ext-link" href="http://www.phpied.com/reducing-tpayload/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;backed up by a recent report&lt;/a&gt;, does make a double digit percentage effect on load time. If we were talking about 1-9% effect, I would agree with your argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. and based on the above url, from slowest to fastest: no-minify (100%), minify (~45%), no-minify+gzip (~30%), minify+gzip (~17%). Note that his sample is a rather large file, too.
&lt;/p&gt;
&lt;p&gt;
At any rate, the author achieves a 70% saving with little effort (gzipping). Is the extra 15% saving from minifying before gzipping truly worth the effort? To me it seems a bit overkill.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11454 (Add suffix to table prefix on installation) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 10:33:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11454#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11454#comment:2/1260959622000000</guid>
      <description>&lt;p&gt;
Heh, I randomly said 6 characters but yeah, we should just go to the 64 character max! At least then it's almost certainly unbreakable. ;-)
&lt;/p&gt;
&lt;p&gt;
I think at the least there should be some kind of random generated table_prefix even if wp_ isn't the default prefix. It just seems silly that this is and always has been the same table_prefix all this time and is an easy target.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 10:21:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:4/1260958875000000</guid>
      <description>&lt;p&gt;
Thanks for the great feedback. My knowledge is not as extensive as yours but I have a few comments.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:3" title="Comment 3"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="3"&gt;&lt;li&gt;Minifying is overrated, especially when it's done on the fly. The whole idea is to reduce the file size, but a minified, gzipped asset is the same size (give or take) as a non-minified, gzipped asset. Minifying on the fly additionally introduces a lag, which can then lead to concurrent write problems (see below).
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I disagree that minifying is overrated, but I won't sit here and claim it's going to reduce a website by 80 or 90%.
&lt;/p&gt;
&lt;p&gt;
Minifying CSS and JS, &lt;a class="ext-link" href="http://www.phpied.com/reducing-tpayload/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;backed up by a recent report&lt;/a&gt;, does make a double digit percentage effect on load time. If we were talking about 1-9% effect, I would agree with your argument.
&lt;/p&gt;
&lt;p&gt;
When I refered to on-the-fly compression, I was only referring to using the online YUI compressor. I agree that having a continuous, on-the-fly compressor in Wordpress would be hazardous and would introduce a new lag that isn't needed.
&lt;/p&gt;
&lt;p&gt;
CSS and JS compression could be handled in one of two ways:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;As a button you could press in the Editor to create compressed files that are immediately cached. These cached files would then become the client-side files downloaded by visitors.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;When editing or saving CSS/JS in the Editor, you could choose an option to compress and cache a new version of these files and deliver them to client-side requests.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:3" title="Comment 3"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="4"&gt;&lt;li&gt;Placing the concatenated assets on a Content Delivery Network (I'm sure someone will bring that up too) is overrated for a similar reason: placing the file on a CDN on the fly is an extremely messy business, and it introduces further lags as the page is rendered -- since it needs to be completed before the script or style tag is output.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
CDNs, while theoretically sound, are too immature as a technology to rely on for offloading requests. I agree with you on this one.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11453#comment:3" title="Comment 3"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="8"&gt;&lt;li&gt;Lastly, I suspect that the focus on speed is overhyped. Intuitively, google wants to eliminate spammy sites that consistently load in several seconds because they're aggregating data from all over the place while they load. I honestly doubt that they're going to penalize WP installs overnight -- especially considering that most of them load faster than Yahoo! Finance.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I suspect we really won't see Google Caffeine's algorithm (and similar-type changes on competing search engines) to immediately affect search results. But, as I keep hearing from Matt Cutts, Google's official blog and SEO websites, these results could have a great impact on results. Thus, WP sites that use tens of plugins are going to suffer from lags and slow page loads due to increased http and php requests.
&lt;/p&gt;
&lt;p&gt;
While I know Wordpress is still a blogging system at heart, it's increasingly being used as a CMS by folks like me and I realize how much bloat adding tons of plugins can cause to decrease page speed and rendering times.
&lt;/p&gt;
&lt;p&gt;
Wordpress can continue its dominance against even major CMS competitors by taking these issues seriously and promoting best practices with integration for speed and reliability. It's for these reasons why I hope this doesn't just get dismissed as a plugin or for future consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11455 (Bulk "Delete Permanently" moves attachments to trash) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 10:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11455/1260958133000000</guid>
      <description>&lt;p&gt;
On the Media editing screen, choosing "Delete Permanently" moves selected attachments to the trash, instead of deleting them.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11454 (Add suffix to table prefix on installation) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 09:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11454#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11454#comment:1/1260957125000000</guid>
      <description>&lt;p&gt;
As long as it's not too long. :-)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/4.1/en/identifiers.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://dev.mysql.com/doc/refman/4.1/en/identifiers.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 09:43:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:3/1260956620000000</guid>
      <description>&lt;p&gt;
Being in the middle of rewriting my cache plugin at the moment, a couple of remarks on the idea:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;mod_deflate is, imo, better than a php ob_gzhandler, as discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10365" title="#10365: feature request: Gzip compression should be offered by default in Wordpress (closed: wontfix)"&gt;#10365&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Some assets (js and css files) have arguments or are dynamic (eg, cookies for comments) and should not be concatenated. Retrieving assets that aren't inserted using the depends API is messy to say the least. In addition, they generally have no version, are/or are potentially dynamic, so should not get concatenated either.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Minifying is overrated, especially when it's done on the fly. The whole idea is to reduce the file size, but a minified, gzipped asset is the same size (give or take) as a non-minified, gzipped asset. Minifying on the fly additionally introduces a lag, which can then lead to concurrent write problems (see below).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Placing the concatenated assets on a Content Delivery Network (I'm sure someone will bring that up too) is overrated for a similar reason: placing the file on a CDN on the fly is an extremely messy business, and it introduces further lags as the page is rendered -- since it needs to be completed before the script or style tag is output.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="5"&gt;&lt;li&gt;Generating concatenated page assets introduces all sorts of possibilities for concurrent writes, which means we then need to deal with file lock-related problem. This can significantly slow down concurrent page loads. (Sites that are spread over multiple servers are actually easier to manage here, since the assets can be placed in memcached.)
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="6"&gt;&lt;li&gt;Removing concatenated page assets that are no longer used is an extremely messy business.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="7"&gt;&lt;li&gt;There needs to be a non-concatenated mode in the event a user is in the process of editing his site's js and css files; it should also be turned on by default, so as to avoid support problems ("why can't I see my changes?").
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="8"&gt;&lt;li&gt;Lastly, I suspect that the focus on speed is overhyped. Intuitively, google wants to eliminate spammy sites that consistently load in several seconds because they're aggregating data from all over the place while they load. I honestly doubt that they're going to penalize WP installs overnight -- especially considering that most of them load faster than Yahoo! Finance.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
In short, I suggest we close this as plugin material for now, and revisit the idea in a few years when the dependencies API is rock solid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 09:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:2/1260955155000000</guid>
      <description>&lt;p&gt;
Awesome! Glad to see the admin-side is already doing this.
&lt;/p&gt;
&lt;p&gt;
Is it possible for client-side output to use the same feature? I realize that theme development can be continuous (thus CSS and JS files can change from time to time) but with a built-in or referenced compressor, and accompanying cache files to serve to visitors to a website, would increase page speed and optimization. Obviously, rounding this out with gzip compression would be optimal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11443 (Unnecessary has_cap checks for MySQL 4.1) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 09:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11443#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11443#comment:9/1260954210000000</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11443#comment:8" title="Comment 8"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Indeed. I almost punted this but thought removing the cap checks would make us most consistent given the introduction of ON DUPLICATE.  Any breakage that occurs from this could be a good thing because it would forcibly remind drop-in authors to update.  I don't feel strongly either way, however.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is good to remind them to update.
&lt;/p&gt;
&lt;p&gt;
Lets leave these changes in for now and just hi-light in the RC and Release announcements the new minimum mysql version requirement.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 09:01:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:25/1260954082000000</guid>
      <description>&lt;p&gt;
@westi: best I'm aware, apache would conditionally compress the output if the mime fits. if a plugin compresses a js file and doesn't set the headers correctly, it's another issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 16 Dec 2009 08:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:24/1260953905000000</guid>
      <description>&lt;p&gt;
From memory one of the issues with the current patch that will still cause double compression is that if someone has configure php to always compress the output you will get double compression again.
&lt;/p&gt;
&lt;p&gt;
php has a number of ini file settings to enable compression for all pages - e.g. setting an output_handler or zlib.output_compression
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11452 (Stop using _wp_attached_file) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 16 Dec 2009 08:56:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11452#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11452#comment:3/1260953775000000</guid>
      <description>&lt;p&gt;
I'm a bit biased, since the idea would break my uploads folder plugin. So -1/2. :-)
&lt;/p&gt;
&lt;p&gt;
It seems to me that, many times when manipulating this, WP and plugins want an unfiltered value. Example:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/browser/uploads-folder/trunk/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/browser/uploads-folder/trunk/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 16 Dec 2009 08:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453#comment:1/1260953745000000</guid>
      <description>&lt;p&gt;
WordPress core JS/CSS files are already minimized, And served in a single Gzip-compressed stream (If supported by the browser) in 2.9.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8628" title="#8628: enhancement: Extend class WP_Scripts to support concatenating, compressing and ... (closed: fixed)"&gt;#8628&lt;/a&gt; &amp;amp; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10664" title="#10664: defect (bug): Minify Admin CSS (closed: fixed)"&gt;#10664&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Only core-files are supported due to the implementation (Paths are hard-coded in the js/css provider for known types).
&lt;/p&gt;
&lt;p&gt;
I'm thinking that the file is cached.. but i'm not sure.. Oh, and this is also only for admin-side too..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11454 (Add suffix to table prefix on installation) created</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 08:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11454/1260953105000000</guid>
      <description>&lt;p&gt;
The default table prefix easily allows a SQL Injection vulnerability.
&lt;/p&gt;
&lt;p&gt;
Since many hosts use one-click installers, table_prefix often gets overlooked. Wordpress should automatically inject a suffix to the table_prefix field upon installation.
&lt;/p&gt;
&lt;p&gt;
Change the default table prefix:
&lt;/p&gt;
&lt;pre class="wiki"&gt;table_prefix = wp_
&lt;/pre&gt;&lt;p&gt;
to something more random such as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;table_prefix = wp_xyz123_
&lt;/pre&gt;&lt;p&gt;
where &lt;strong&gt;xyz123&lt;/strong&gt; is equal to a randomly generated value no less than 6 characters.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11453 (Use compression for CSS and JS file output) created</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 08:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11453/1260952073000000</guid>
      <description>&lt;p&gt;
2010 will bring awareness to page speed since Google is going to release it's newest version of search called &lt;a class="ext-link" href="http://googlewebmastercentral.blogspot.com/2009/08/help-test-some-next-generation.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Caffeine&lt;/a&gt;. Google's Matt Cutts says Caffeine will bring a new algorithm and a &lt;a class="ext-link" href="http://videos.webpronews.com/2009/11/13/matt-cutts-interview/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;new focus on page speed to affect rankings&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I propose Wordpress use YUI Compressor or similar package to automatically compress CSS and JS files called by an webpage and cache these files for visitors to use. I'd even propose it scan CSS and JS files inserted into wp_head and compress those files but only if this is practical.
&lt;/p&gt;
&lt;p&gt;
If nothing else, can we add a dynamic textbox that uses an &lt;a class="ext-link" href="http://www.refresh-sf.com/yui/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;online YUI compressor&lt;/a&gt; to Appearance&amp;gt;Editor section in Dashboard? An on-the-fly compression input/output would allow the developer to do everything from within Wordpress Dashboard.
&lt;/p&gt;
&lt;p&gt;
Wordpress should be on the forefront to keep up with website optimization and minifying would be a huge benefit to all Wordpress users.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11451 (Stats Plugin defect in three-columns view) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 16 Dec 2009 08:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11451#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11451#comment:1/1260950546000000</guid>
      <description>invalid: &lt;p&gt;
Please report this to the Stats plugin author (Whoever that may be right now), Or on the Plugins trac: &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/&lt;/a&gt; - WordPress trac is for issues related to core, not to Plugins.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8841 (Threaded comments display out of order if conditions are met.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 07:17:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8841#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8841#comment:17/1260947874000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/8841#comment:16" title="Comment 16"&gt;voyagerfan5761&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a Trac ticket for it? Sorry to have bothered everyone on this issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8019" title="#8019: defect (bug): WXR import incorrectly handles comment ID's, Results in threading ... (closed: fixed)"&gt;#8019&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10491 (Proof reader or reviewer role) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 16 Dec 2009 05:20:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10491#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10491#comment:5/1260940841000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>_wp_attached_file.2.diff attached to Ticket #11452</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 04:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11452/_wp_attached_file.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11452/_wp_attached_file.2.diff/1260938692000000</guid>
      <description>&lt;p&gt;
Use '_wp_attachment_metadata' internally
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10187 (wp_redirect and canonical redirect do not work as expected on IIS) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 16 Dec 2009 04:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10187#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10187#comment:15/1260936200000000</guid>
      <description>&lt;p&gt;
As the status code has been passed to the header() function, I don't think we still need to call status_header(). An updated patch has been attached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10187_drop_iis5.patch attached to Ticket #10187</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Wed, 16 Dec 2009 04:02:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10187/10187_drop_iis5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10187/10187_drop_iis5.patch/1260936122000000</guid>
      <description>&lt;p&gt;
Removed the call to status_header()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>micasuh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:23/1260935482000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:17" title="Comment 17"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, not all users know how to switch hosts or can afford to.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then they should switch to &lt;a class="ext-link" href="http://hub.org"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://hub.org&lt;/a&gt;. It's run by one of the postgresql founders, the owner is the very best system admin I can name, they have one-click WP installs (I maintain the script myself) and they migrate sites for free.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This argument sounds like Windows vs. Mac or Ford vs. Chevy. It's not Wordpress community's job to make developers choose a host. There are MANY hosts who support no or only one gzipping method.
&lt;/p&gt;
&lt;p&gt;
I've seen certain hosts &lt;a class="ext-link" href="http://forums.hostgator.com/its-time-enable-mod-gzip-mod-t59242.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;lock down module requests for security or performance reasons&lt;/a&gt;, but that does not mean this host is bad. You have to take into account those people who maintain their own VPS or physical server as well as people who don't have a clue what they are doing. Those on a shared server environment might not be able to choose which method or any method at all.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How many apache 2 hosts don't offer mod_deflate. Personally, I don't know any.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How about Site5.com? A very good host in all other respects.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:13" title="Comment 13"&gt;Denis-de-Bernardy&lt;/a&gt;: We should educate users to switch to better hosts, of the kind that enable this by default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
User education to go with hosts that support mod_deflate or gzip compression is a noble cause but not practical. I'm sure there are countless other hosts which don't offer mod_deflate like Site5.com. Are old Apache 1.3 servers completely out of date? I guess this is a similar debate for which PHP versions Wordpress should support, and obviously anything before PHP 4.3 is not compatible and with good reason.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:15" title="Comment 15"&gt;ceasarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could make it an option when installing - either use mod_deflate, or ob_gzhandler, or neither.
&lt;/p&gt;
&lt;p&gt;
Alternatively, detect whether mod_deflate is enabled, and if not do it through php.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is exactly what I think. Is there any reason why something like this cannot be implemented into Wordpress? It just makes no sense not to do this.
&lt;/p&gt;
&lt;p&gt;
The reason I resurrected this ticket is because of increasing noise from Google (specifically Matt Cutts) about Google's next generation search engine build called Caffeine which is coming out after the holidays. Matt said specifically that &lt;a class="ext-link" href="http://videos.webpronews.com/2009/11/13/matt-cutts-interview/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;site speed is now a factor for page ranking&lt;/a&gt;. While this isn't the main reason for gzip implementation, Google's influence and new position on site speed gives this issue new light.
&lt;/p&gt;
&lt;p&gt;
Finally, and please excuse my ignorance, but are mod_deflate and ob_gzhandler the only two server side methods for gzip compression on Apache 2?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11452 (Stop using _wp_attached_file) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11452#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11452#comment:2/1260934219000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11452 (Stop using _wp_attached_file) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:29:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11452#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11452#comment:1/1260934181000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Working fine on localhost. Haven't tested wp-app.php though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11443 (Unnecessary has_cap checks for MySQL 4.1) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11443#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11443#comment:8/1260933368000000</guid>
      <description>&lt;p&gt;
Indeed. I almost punted this but thought removing the cap checks would make us most consistent given the introduction of ON DUPLICATE.  Any breakage that occurs from this could be a good thing because it would forcibly remind drop-in authors to update.  I don't feel strongly either way, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>_wp_attached_file.diff attached to Ticket #11452</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11452/_wp_attached_file.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11452/_wp_attached_file.diff/1260933144000000</guid>
      <description>&lt;p&gt;
Replace get_post_meta($id, '_wp_attached_file') with get_attached file()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11452 (Stop using _wp_attached_file) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:11:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11452/1260933096000000</guid>
      <description>&lt;p&gt;
Currently, the relative path of each attachment is stored twice in wp_postmeta:
&lt;/p&gt;
&lt;p&gt;
Once in the '_wp_attached_file' and once in '_wp_attachment_metadata'.
&lt;/p&gt;
&lt;p&gt;
I propose that we get rid of '_wp_attached_file'.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11450 (Plugin compatibility info on upgrade page (improvement to r12407)) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11450#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11450#comment:10/1260932917000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12413" title="Consult the tested field when checking plugin compatibility. Props ..."&gt;[12413]&lt;/a&gt;) Consult the tested field when checking plugin compatibility. Props Denis-de-Bernardy. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11450" title="#11450: defect (bug): Plugin compatibility info on upgrade page (improvement to r12407) (closed: fixed)"&gt;#11450&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12413]: Consult the tested field when checking plugin compatibility. Props ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:08:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12413</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12413/1260932897815347</guid>
      <description>&lt;p&gt;
Consult the tested field when checking plugin compatibility. Props Denis-de-Bernardy. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11450" title="#11450: defect (bug): Plugin compatibility info on upgrade page (improvement to r12407) (closed: fixed)"&gt;#11450&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11450 (Plugin compatibility info on upgrade page (improvement to r12407)) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 16 Dec 2009 03:01:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11450#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11450#comment:9/1260932491000000</guid>
      <description>&lt;p&gt;
I'd go with the first patch.  On the api.wp.org side, we can return 2.9.1 (if latest WP release is 2.9.1) if the plugin has 2.9 set. If 2.9.2 introduces security updates that could break some plugins, for example, we'd have the option on api.wp.org of not auto bumping plugins that have 2.9.1 or earlier set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>navjotjsingh</dc:creator>

      <pubDate>Wed, 16 Dec 2009 02:51:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:70/1260931876000000</guid>
      <description>&lt;p&gt;
Why the oEmbed has been disabled now? Ordinary users will find it frustrating that even when WP 2.9 promises oEmbeds, it is still not enabled and available?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>petervanderdoes</dc:creator>

      <pubDate>Wed, 16 Dec 2009 01:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:22/1260928703000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10365#comment:7" title="Comment 7"&gt;novasource&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's interesting contrasting this to how warmly the Drupal community embraced the same request. See &lt;a class="ext-link" href="http://drupal.org/node/290280"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://drupal.org/node/290280&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The Drupal request is not the same request. The Drupal request has the javascript and CSS files zipped and have rules in .htaccess to serve those files.
I have this setup on my WordPress site, manually done.
&lt;/p&gt;
&lt;p&gt;
The request here is about serving the produced HTML page compressed as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11442 (Untrashed comments could be deleted by wp_scheduled_delete()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 16 Dec 2009 01:36:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11442#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11442#comment:24/1260927412000000</guid>
      <description>&lt;p&gt;
If refactoring of the comment trash/untrash is needed, please open another ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11442 (Untrashed comments could be deleted by wp_scheduled_delete()) closed</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Wed, 16 Dec 2009 01:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11442#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11442#comment:23/1260927341000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12412" title="Check post and comment status before emptying trash, fixes #11442"&gt;[12412]&lt;/a&gt;) Check post and comment status before emptying trash, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11442" title="#11442: defect (bug): Untrashed comments could be deleted by wp_scheduled_delete() (closed: fixed)"&gt;#11442&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [12412]: Check post and comment status before emptying trash, fixes #11442</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 16 Dec 2009 01:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/12412</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/12412/1260927329131636</guid>
      <description>&lt;p&gt;
Check post and comment status before emptying trash, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11442" title="#11442: defect (bug): Untrashed comments could be deleted by wp_scheduled_delete() (closed: fixed)"&gt;#11442&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>10337.13.patch attached to Ticket #10337</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Wed, 16 Dec 2009 01:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10337/10337.13.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10337/10337.13.patch/1260925390000000</guid>
      <description>&lt;p&gt;
Disable discovery in the oEmbed class by default
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11442 (Untrashed comments could be deleted by wp_scheduled_delete()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 16 Dec 2009 00:37:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11442#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11442#comment:22/1260923851000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a double-check if the comments/posts have been properly "untrashed" and to prevent deleting them when not. All it needs to do is look at the "status" field and delete the meta timeout if it's not 'trash'.
&lt;/p&gt;
&lt;p&gt;
Don't think we should be removing functions and filters that have been in core for few months, also the posts and the comments trashing API should be similar and easy to read/understand.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10365 (Gzip compression should be offered by default in Wordpress) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Wed, 16 Dec 2009 00:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10365#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10365#comment:21/1260921614000000</guid>
      <description>&lt;p&gt;
Hmmm... I beg to differ! :-)
&lt;/p&gt;
&lt;p&gt;
But anyway, yes, let's get on with testing your patch, and we can discuss ob_gzhandler later...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>