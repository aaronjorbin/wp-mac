<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #35530 (Style and upgrade "Briefly unavailable for scheduled maintenance. ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 23:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35530#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35530#comment:5/1515627894467402</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1515627892000170"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42781 (HTTP Status code should be a 400 instead of a 409 when attempting to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 22:55:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42781#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42781#comment:5/1515624955528518</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1515624953000413"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15936 (IPv6 literal support in multisite broken) updated</title>
      
        <dc:creator>enrico.sorcinelli</dc:creator>

      <pubDate>Wed, 10 Jan 2018 22:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15936#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15936#comment:24/1515624682242732</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I added here the &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42993" title="#42993: enhancement: WordPress Multisite: Allow for different ports (closed: duplicate)"&gt;#42993&lt;/a&gt; patch since it works for me also with IPv6 literal addresses (I tested for example with &lt;em&gt;http://[::1]:8001&lt;/em&gt; in my multisite installation).
&lt;/p&gt;
&lt;p&gt;
The original patch is out of date since the &lt;em&gt;wp-includes/ms-settings.php&lt;/em&gt; has changed and there is no more &lt;code&gt;wp_die()&lt;/code&gt; statement (it has moved into &lt;em&gt;wp-admin/includes/network.php&lt;/em&gt; where I added the filter below).
&lt;/p&gt;
&lt;p&gt;
The proposal patch adds &lt;code&gt;allowed_multisite_ports&lt;/code&gt; new filter that allows to define differents ports in Multisite installs other than &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt;. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'allowed_multisite_ports', function( $ports ) {
	$ports[] = ':8000';
	return $ports;
} );
&lt;/pre&gt;&lt;p&gt;
I thought it was better to explicitly add differents ports instead of allow differents ports by default (or by defining constant like &lt;code&gt;define( 'MULTISITE_ALLOW_DIFFERENT_PORTS', true )&lt;/code&gt;).
PS: Currently I used filter for &lt;code&gt;sanitize_user()&lt;/code&gt; (used in &lt;code&gt;wpmu_create_blog()&lt;/code&gt;) in order to allow ports in domain string, even if the best way would be to add a &lt;code&gt;sanitize_domain()&lt;/code&gt; dedicated function since the first one allows also underscores.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35658 (Provide additional data for registered meta through register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 22:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35658#comment:153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35658#comment:153/1515624114849227</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1515624113000248"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15936.patch attached to Ticket #15936</title>
      
        <dc:creator>enrico.sorcinelli</dc:creator>

      <pubDate>Wed, 10 Jan 2018 22:41:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15936/15936.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15936/15936.patch/1515624113550419</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40878 (Adding menus route) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 22:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40878#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40878#comment:13/1515623698754625</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by dingo_d. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1515623697000270"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 22:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:39/1515622442140990</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1515622439000621"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43060 (register taxonomy should accept a label to affect the description ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 10 Jan 2018 22:13:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43060#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43060#comment:3/1515622432928734</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think it makes sense for these to be taxonomy labels.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42888 (Add a "Show" button next to password fields on mobile) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42888#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42888#comment:6/1515620927837795</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1515620926000260"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:39:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:50/1515620348857982</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1515620346000345"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:10/1515619175169768</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1515619173000157"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39732 (Allowing wp_update_comment() to return WP_Error) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:17:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39732#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39732#comment:25/1515619065355777</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>42999.2.diff attached to Ticket #42999</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42999/42999.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42999/42999.2.diff/1515618951653400</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42999 (A Super Admin can have no caps on a /wp/v2/users/me?context=edit REST ...) updated</title>
      
        <dc:creator>imath</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42999#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42999#comment:3/1515618930814224</guid>
      <description>&lt;p&gt;
Hi @jeremyfelt
&lt;/p&gt;
&lt;p&gt;
Oops sorry i missed this information. I've just checked and i confirm it's working.
&lt;/p&gt;
&lt;p&gt;
I've added the 42999.2.diff patch in order to use the &lt;code&gt;manage_network&lt;/code&gt; capability check.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39732 (Allowing wp_update_comment() to return WP_Error) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39732#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39732#comment:24/1515618816587773</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by enrico.sorcinelli. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1515618814000371"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42327 (WP_Term_Query returns an empty array instead of 0) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:10:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42327#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42327#comment:10/1515618637792250</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by xparham. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1515618635000150"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31192 (Enable sorting of search results on "Add Plugins" admin page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 21:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31192#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31192#comment:10/1515618622609769</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1515618617000438"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42902 (CSS bug in mediaelement) updated</title>
      
        <dc:creator>newventureswest</dc:creator>

      <pubDate>Wed, 10 Jan 2018 19:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42902#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42902#comment:3/1515612351272943</guid>
      <description>&lt;p&gt;
I'm having a similar issue: &lt;a class="ext-link" href="https://www.evernote.com/l/AAL0fZsZMR9MnbWuoXnV2OVATlXwABZXNrg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.evernote.com/l/AAL0fZsZMR9MnbWuoXnV2OVATlXwABZXNrg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43061 (New MediaElement Player Issue) created</title>
      
        <dc:creator>newventureswest</dc:creator>

      <pubDate>Wed, 10 Jan 2018 19:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43061</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43061/1515612229519280</guid>
      <description>&lt;p&gt;
I'm having a CSS issue with the implementation of the upgraded MediaElement. I'm using the default styling and this what is rendered:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.evernote.com/l/AAL0fZsZMR9MnbWuoXnV2OVATlXwABZXNrg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.evernote.com/l/AAL0fZsZMR9MnbWuoXnV2OVATlXwABZXNrg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
How do I resolve this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42787 (Location Search not working for same name cities in different states ...) updated</title>
      
        <dc:creator>shedonist</dc:creator>

      <pubDate>Wed, 10 Jan 2018 19:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42787#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42787#comment:4/1515611594048017</guid>
      <description>&lt;p&gt;
Great news. Thank you for the update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42480 (Consistent suppression of `getimagesize()` errors) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 10 Jan 2018 18:23:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42480#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42480#comment:13/1515608585705219</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @jeremyfelt. I agree that the patch on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35725" title="#35725: enhancement: Add mime-type for Webp (new)"&gt;#35725&lt;/a&gt; is an interesting enhancement for the future, but let's go ahead and get this in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38197 (Update Pingback function To Add Return) updated</title>
      
        <dc:creator>NathanAtmoz</dc:creator>

      <pubDate>Wed, 10 Jan 2018 18:10:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38197#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38197#comment:11/1515607839457493</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42543 (Minor type in class-wp-editor.php) updated</title>
      
        <dc:creator>NathanAtmoz</dc:creator>

      <pubDate>Wed, 10 Jan 2018 18:09:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42543#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42543#comment:12/1515607784377754</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42480 (Consistent suppression of `getimagesize()` errors) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 10 Jan 2018 18:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42480#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42480#comment:12/1515607342894443</guid>
      <description>&lt;p&gt;
@joemcgill Close, but there was one more &lt;code&gt;getimagesize()&lt;/code&gt; that needed to be silenced for our errors to go away. That's updated in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42480/42480.3.diff" title="Attachment '42480.3.diff' in Ticket #42480"&gt;42480.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42480/42480.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
There are a handful of other non-suppressed &lt;code&gt;getimagesize()&lt;/code&gt; calls left in core, though they're only ever called with one parameter. It seems to be only when called with two that it's showing the problem we're seeing (confirmed in the PHP bug report).
&lt;/p&gt;
&lt;p&gt;
I'm +1 on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42480/42480.3.diff" title="Attachment '42480.3.diff' in Ticket #42480"&gt;42480.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42480/42480.3.diff" title="Download"&gt;​&lt;/a&gt;, though it sounds like @blobfolio's patch on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35725" title="#35725: enhancement: Add mime-type for Webp (new)"&gt;#35725&lt;/a&gt; could be interesting for the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42480.3.diff attached to Ticket #42480</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42480/42480.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42480/42480.3.diff/1515607105709286</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42999 (A Super Admin can have no caps on a /wp/v2/users/me?context=edit REST ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:45:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42999#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42999#comment:2/1515606351098786</guid>
      <description>&lt;p&gt;
We've tried to move away from &lt;code&gt;is_super_admin()&lt;/code&gt; where we can. Would checking if the user has the &lt;code&gt;manage_network&lt;/code&gt; capability work in this scenario?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43060 (register taxonomy should accept a label to affect the description ...) updated</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43060#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43060#comment:2/1515605862821105</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43060#comment:1" title="Comment 1"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see why a new label is needed for that. This can be a regular &lt;code&gt;do_action()&lt;/code&gt; call in the edit tag form.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeap that would work aswell. I thought it'd be cleaner to do it in the register_taxonomy as that is where the other labels are defined, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15936 (IPv6 literal support in multisite broken) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15936#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15936#comment:23/1515605809641288</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1515605808000299"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15936 (IPv6 literal support in multisite broken) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15936#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15936#comment:22/1515605711548179</guid>
      <description>&lt;p&gt;
This is one of those old tickets that I run into from time to time, but I haven't really explored much. I don't think there were any real reasons that MU restricted to port 80/443 originally, so consider me hopeful that we can figure this one out now. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #15936,​42993 batch updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15936%2C42993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15936%2C42993/1515605609395005</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the ticket @Blackbam and thanks for the patch @enrico.sorcinelli.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this out as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15936" title="#15936: enhancement: IPv6 literal support in multisite broken (new)"&gt;#15936&lt;/a&gt;. The focus on IPv6 in that ticket is a little different, but goes hand in hand with arbitrary custom port numbers.
&lt;/p&gt;
&lt;p&gt;
That ticket looks old and unfriendly, but I don't think anything is really holding it up more than a lack of activity. Please chime in with comments and patches there!
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43060 (register taxonomy should accept a label to affect the description ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43060#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43060#comment:1/1515605562005102</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't see why a new label is needed for that. This can be a regular &lt;code&gt;do_action()&lt;/code&gt; call in the edit tag form.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>country-taxonomy-shouldbe.PNG attached to Ticket #43060</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43060/country-taxonomy-shouldbe.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43060/country-taxonomy-shouldbe.PNG/1515605347607186</guid>
      <description>&lt;p&gt;
The admin screen with custom term naming guidance giving specific information (and even links to relevant resources)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>country-taxonomy-currently.PNG attached to Ticket #43060</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43060/country-taxonomy-currently.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43060/country-taxonomy-currently.PNG/1515605317520694</guid>
      <description>&lt;p&gt;
The admin screen without custom term naming guidance
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43060 (register taxonomy should accept a label to affect the description ...) created</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:27:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43060</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43060/1515605261565463</guid>
      <description>&lt;p&gt;
Hi
&lt;/p&gt;
&lt;p&gt;
When registering a custom taxonomy WordPress uses the default UI to allow content editors to manage terms in this taxonomy. The descriptions under the Tag name and Slug may in some cases not be adequate and/or require additionnal guidance.  For instance when the names of tags should follow a certain convention or standard.
For instance for a Countries taxonomy we would wish to give the user information on what standard to follow (for instance ISO-3166-2).
&lt;/p&gt;
&lt;p&gt;
I have attached images of what it currently looks like on the Add Tag page, and what it should look like in my opinion.
&lt;/p&gt;
&lt;p&gt;
Since there are no hooks allowing to add extra information under the tag-name field on the edit-tags.php:393, I think the best place for this change would be at the time of register_taxonomy. I would suggest introducing new labels for a taxonomy which would overwrite the labels displayed under each field.
&lt;/p&gt;
&lt;p&gt;
The implementation would then look something like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;register_taxonomy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'countries'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'label'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'labels'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="s1"&gt;'name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'singular_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'menu_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'all_items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'All Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'edit_item'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Edit Country'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'view_item'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'View Country'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'update_item'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Update Country'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'add_new_item'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Add New Country'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'new_item_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'New Country name'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="c1"&gt;// The below would be used on the edit-tags.php:393
&lt;/span&gt;                &lt;span class="s1"&gt;'new_item_name_description'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'This name should adhere to the ISO-3166-2 standard.'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'parent_item'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Parent Country'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'parent_item_colon'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Parent Country:'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'search_items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Search Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'popular_items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Popular Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'separate_items_with_commas'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Separate Countries with commas'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'add_or_remove_items'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Add or remove Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'choose_from_most_used'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Choose from the most used Countries'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="s1"&gt;'not_found'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'No Countries found'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'public'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Wed, 10 Jan 2018 17:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:9/1515603996494828</guid>
      <description>&lt;p&gt;
This is great work so far @omarreiss, thank you.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
2) Allow running from /src after a build step but .gitignore the built files.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This seems like the option least likely to impact existing workflows. If you work on JS, you'll already be used to the existing process and have likely used &lt;code&gt;grunt watch&lt;/code&gt; as part of your workflow. If you work on PHP, then nothing really changes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1) Stop allowing running from /src and only build to /build
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That said, option 1 is much cleaner and I don't think it will be too impactful to users of VVV if we switch to a "must build" workflow. We already have a &lt;code&gt;build.wordpress-develop.test&lt;/code&gt; that's intended to use with the &lt;code&gt;build/&lt;/code&gt; directory and that is built with &lt;code&gt;grunt&lt;/code&gt; by default during provisioning. We'll probably need to dust that off and make sure the docs are good.
&lt;/p&gt;
&lt;p&gt;
Personally - as long as the builds triggered by &lt;code&gt;grunt watch&lt;/code&gt; (or whatever is doing the instant builds) are quick, especially when working on files that don't require a build, then +1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40397 (PHP 7.1.x problem in WP_Query) updated</title>
      
        <dc:creator>apearlman</dc:creator>

      <pubDate>Wed, 10 Jan 2018 16:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40397#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40397#comment:6/1515603409448999</guid>
      <description>&lt;p&gt;
@dglingren - did you ever find a solution to this? I'm having a similar issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43058.2.patch attached to Ticket #43058</title>
      
        <dc:creator>dilipbheda</dc:creator>

      <pubDate>Wed, 10 Jan 2018 16:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43058/43058.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43058/43058.2.patch/1515603222834907</guid>
      <description>&lt;p&gt;
Coding Standard Improvement
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43058 (File search in theme &amp; plugin editor window) updated</title>
      
        <dc:creator>dilipbheda</dc:creator>

      <pubDate>Wed, 10 Jan 2018 16:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43058#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43058#comment:1/1515603154319392</guid>
      <description>&lt;p&gt;
I have made changes to existing .patch to improve coding standard.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Expected 1 space before/after closing bracket.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43059 (Contact Form Not Sent to Email) created</title>
      
        <dc:creator>refan</dc:creator>

      <pubDate>Wed, 10 Jan 2018 13:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43059</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43059/1515592631846504</guid>
      <description>&lt;p&gt;
Dear Wordpress,
&lt;/p&gt;
&lt;p&gt;
When the wordpress release version 4.8.1 have a fiture add contact form in editing text area. I setup the configure and the email submission. I test to submit, and email from website contact form working on it.
&lt;/p&gt;
&lt;p&gt;
The problem is now submit contact, is not working. What happens? I cek the menu Feedback on wordpress. i've got the submission the test submit contact, but not receive to email.
Please to need solutions.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Refan
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43058.patch attached to Ticket #43058</title>
      
        <dc:creator>Mahesh901122</dc:creator>

      <pubDate>Wed, 10 Jan 2018 13:42:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43058/43058.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43058/43058.patch/1515591720361972</guid>
      <description>&lt;p&gt;
File search patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot-1[1].gif attached to Ticket #43058</title>
      
        <dc:creator>Mahesh901122</dc:creator>

      <pubDate>Wed, 10 Jan 2018 13:40:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43058/screenshot-1%5B1%5D.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43058/screenshot-1%5B1%5D.gif/1515591656037834</guid>
      <description>&lt;p&gt;
GIF of file search.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43058 (File search in theme &amp; plugin editor window) created</title>
      
        <dc:creator>Mahesh901122</dc:creator>

      <pubDate>Wed, 10 Jan 2018 13:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43058</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43058/1515591598345817</guid>
      <description>&lt;p&gt;
Now we have using Code mirror for updating theme/plugin files. We have also create a directory tree of theme &amp;amp; plugin files.
&lt;/p&gt;
&lt;p&gt;
It is hard to search the file in the given directory tree. So, File search filed is useful to search particular file. This patch search &lt;code&gt;file name&lt;/code&gt; &amp;amp; &lt;code&gt;file extensions&lt;/code&gt; too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43034 (Multiple times page is added in menu without warning) closed</title>
      
        <dc:creator>pkbhatt</dc:creator>

      <pubDate>Wed, 10 Jan 2018 12:47:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43034#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43034#comment:5/1515588442459495</guid>
      <description>invalid: &lt;p&gt;
As discussed on slack it is not a bug I am closing this ticket
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43057 (Blank space is display at tight side after adding text in visual composer) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 10 Jan 2018 12:42:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43057#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43057#comment:2/1515588165115613</guid>
      <description>worksforme: &lt;p&gt;
As swissspidy points out, this is a feature, not a bug. Have a look at that post on the front-end :)
&lt;/p&gt;
&lt;p&gt;
You can override it by adding another rule in your theme's editor-style.css but I'd advise against it. The theme width also affects images, embeds, and other resizable elements and you won't be able to preview them well if you make the editor display at 100% width.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42917 (Add in htaccess) updated</title>
      
        <dc:creator>gabrielmasson</dc:creator>

      <pubDate>Wed, 10 Jan 2018 12:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42917#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42917#comment:6/1515586042938602</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
But if it is a shared server, like most of my clients, they usually do not have the option and keep the directories without index for free access, this is a big problem for small sites, of which we have to manually correct every installation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43034 (Multiple times page is added in menu without warning) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 11:56:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43034#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43034#comment:4/1515585397599072</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pkbhatt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1515585395000213"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43034 (Multiple times page is added in menu without warning) updated</title>
      
        <dc:creator>pmwebindiainc</dc:creator>

      <pubDate>Wed, 10 Jan 2018 11:52:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43034#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43034#comment:3/1515585155907353</guid>
      <description>&lt;p&gt;
we should close this ticket as I feel that the description is not a bug
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 10 Jan 2018 10:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:8/1515581648811804</guid>
      <description>&lt;p&gt;
Nice work on this, @omarreiss. You've done a great job on this reorg, I think it has the potential to set WordPress up for a much nicer experience for contributors.
&lt;/p&gt;
&lt;p&gt;
I'd like to chat about why I think this change is a a good idea.
&lt;/p&gt;
&lt;h2 id="TheProblems"&gt;The Problems&lt;/h2&gt;
&lt;p&gt;
I've been reflecting on this issue since our discussions at WCUS, and I think it comes down to three issues that we're facing.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;&lt;em&gt;The experience of contributing to WordPress is awful.&lt;/em&gt; There's a high barrier of entry just to get some sort of a local development install running, it takes way too much effort to maintain, and it's really hard to collaborate. Even if you manage to produce a patch, it feels like you're throwing it into the void.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;&lt;em&gt;Adding a build step to the WordPress development flow is unavoidable.&lt;/em&gt; As we move towards our JS future, it's going to be necessary to make that move, Gutenberg is proving to be a useful testing ground for playing with build processes.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;&lt;em&gt;JS build tools are nearly as bad as WordPress,&lt;/em&gt; in terms of the ease of someone being able to contribute to a JS project. They certainly don't tackle any of the hard problems, like setting up complete local dev environment. (If you're talking to an API to store your data, and not setting up a local copy of that API server and corresponding database, your dev environment is not complete.)
&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="TheSolutions"&gt;The Solutions&lt;/h2&gt;
&lt;p&gt;
With those problems in mind, I think there are a few promising options to solve them.
&lt;/p&gt;
&lt;p&gt;
On the topic of where to build things to, I find myself leaning towards option 1, though I can't entirely dismiss option 2. Option 3 is completely out, I don't believe there's anything but pain and maintenance headaches down the road of committing built files to the source repo. Option 2 appeals, as the idea of allowing PHP changes without a build step is nice. That said, I also think it opens us up to a potentially confusing development experience, as we'll have committable PHP files living next to uncommittable JS files. Option 1 requires a build step for PHP changes, but it gives us the cleanest separation between development code and built code, even if the PHP is never really "built", as such.
&lt;/p&gt;
&lt;p&gt;
I have a love/hate relationship with VVV. I love it when it works, I hate whenever I have to setup a new computer, because the VVV part is so often the most painful. I believe we can do a lot better than that, and a lot better than what the current JS process looks like. Gutenberg currently makes limited use of Docker to provide a simple testing environment, I've been playing around with &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/4279"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;expanding that&lt;/a&gt; to include running PHPUnit tests, and generally having a full development environment created automatically. That PR is obviously a little rough around the edges, but I think it points in a good direction - we can easily automate setting up the entire development environment, and it's not difficult for us to detect when something is wrong, and give useful, contextual information for a contributor to get their development environment running again.
&lt;/p&gt;
&lt;p&gt;
Finally, (and this is more of a long term goal), I would be exceedingly happy if my development experience never involved opening a terminal window. App IDEs have been working on making their development experience not suck for many years, and they're a long way ahead of where the JS world is now. But there's a lot we can learn from them, and I think one of the most important lessons is that developing entirely in a GUI is an inherently better experience than typing a command into a terminal.
&lt;/p&gt;
&lt;h2 id="WhatsNext"&gt;What's Next?&lt;/h2&gt;
&lt;p&gt;
Some of the stuff above is beyond this ticket, but it gives some context for why I think this is a necessary change, that on the face of it adds some complexity to the WordPress development experience, but actually sets us up for making the experience awesome.
&lt;/p&gt;
&lt;p&gt;
As @jorbin has mentioned, there are certainly some housekeeping issues to sort out before this can be committed. I agree that a make/core post is important, I'd be inclined to post it before the change is committed, not only so that people are prepared, but so we can get a wider audience on the proposal. This is a big change for WordPress development, it's appropriate that we should be able to make a convincing argument to the wider WordPress community before it lands.
&lt;/p&gt;
&lt;p&gt;
If build tools are relevant to your interest, I would very much like to see more activity on the Gutenberg tools. WordPress' future tools will be heavily influenced by what works in Gutenberg, so get in early if you want to shape what that's going to look like.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42937.2.patch attached to Ticket #42937</title>
      
        <dc:creator>dilipbheda</dc:creator>

      <pubDate>Wed, 10 Jan 2018 09:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42937/42937.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42937/42937.2.patch/1515578255405304</guid>
      <description>&lt;p&gt;
Coding Standard Improvement
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42937 (Success Message should display on insertion of new category in ...) updated</title>
      
        <dc:creator>dilipbheda</dc:creator>

      <pubDate>Wed, 10 Jan 2018 09:56:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42937#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42937#comment:6/1515578200096915</guid>
      <description>&lt;p&gt;
I have made changes to existing .patch to improve coding standard.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Whitespace found at end of line
&lt;/li&gt;&lt;li&gt;Expected 1 space before/after closing bracket.
&lt;/li&gt;&lt;li&gt;if/else/for/while/try blocks should always use braces
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Wed, 10 Jan 2018 09:52:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:7/1515577939850767</guid>
      <description>&lt;p&gt;
@jorbin thanks a lot for these points!
&lt;/p&gt;
&lt;p&gt;
1) Absolutely, will look into it!
2) Yes, was planning on this, but forgot about it again. I think we should. Will do the work.
3) I can definitely prepare a make/core post based on everything I've written up so far. I think @pento or @adamsilverstein would be likely candidates to eventually commit this.
4) Absolutely, I will work on docs explaining the process for managing dependencies, the build process, the directory structure and a process for extracting code from existing &lt;code&gt;_enqueues&lt;/code&gt; scripts for reuse (some kind of boyscout principle). Then I think it would be good to have a README.md in &lt;code&gt;src/js&lt;/code&gt; referencing this documentation.
5) I can add a draft for this to the dependency management documentation. We can always figure out later where this should end up eventually.
6) I would be in favor of that. When I discussed this with @pento he was also thinking along those lines. The most compelling argument I read against only running from &lt;code&gt;build&lt;/code&gt; is that PHP changes will also need to be built in order to take effect. I can imagine that to be an undesireable barrier. There is also something to say for &lt;code&gt;/build&lt;/code&gt; not really being a development build, but more of a distribution artifact. To me it seems like a good balance to allow building the JS to &lt;code&gt;src&lt;/code&gt; as well but just adding the JS build dirs to &lt;code&gt;.gitignore&lt;/code&gt; so that they don't get included in the source. That's still pretty much all-in if you ask me and makes the impact on dev platforms like VVV minimal. They basically only need to add &lt;code&gt;npm install &amp;amp;&amp;amp; grunt build&lt;/code&gt; to their provision scripts. In other words: maximum gain with almost zero cost.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43057 (Blank space is display at tight side after adding text in visual composer) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 10 Jan 2018 09:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43057#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43057#comment:1/1515577775317797</guid>
      <description>&lt;p&gt;
The width of the editor is adjusted to the contend width set by themes so the preview better matches the front end. That's not a bug.
&lt;/p&gt;
&lt;p&gt;
If you prefer 100% width, you could add a custom editor stylesheet to override these styles.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post.png attached to Ticket #43057</title>
      
        <dc:creator>nilamacharya</dc:creator>

      <pubDate>Wed, 10 Jan 2018 09:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43057/post.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43057/post.png/1515577574735044</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>page.png attached to Ticket #43057</title>
      
        <dc:creator>nilamacharya</dc:creator>

      <pubDate>Wed, 10 Jan 2018 09:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43057/page.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43057/page.png/1515577561635951</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43057 (Blank space is display at tight side after adding text in visual composer) created</title>
      
        <dc:creator>nilamacharya</dc:creator>

      <pubDate>Wed, 10 Jan 2018 09:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43057</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43057/1515577545762176</guid>
      <description>&lt;p&gt;
Steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Navigate to admin side and create any page/post
&lt;/li&gt;&lt;li&gt;Add some text in Visual composer
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Issue: Text is left aligned and too much blank white space is display at right side.
&lt;/p&gt;
&lt;p&gt;
Note: same issue for page/post
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) updated</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Wed, 10 Jan 2018 08:56:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054#comment:7/1515574563378022</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43054#comment:6" title="Comment 6"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42432" title="Streams: When checking in `wp_is_stream()` escape the stream wrapper ..."&gt;42432&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Streams: When checking in &lt;code&gt;wp_is_stream()&lt;/code&gt; escape the stream wrapper names for PCRE to avoid PHP warnings when invalid stream wrappers are registered.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43054" title="#43054: defect (bug): wp_is_stream fails with stream definition containing nonascii chars (closed: fixed)"&gt;#43054&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, this is better. Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>ronald_edelschaap</dc:creator>

      <pubDate>Wed, 10 Jan 2018 07:36:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:6/1515569788988120</guid>
      <description>&lt;p&gt;
No, in this case the visitor/user wasn't allowed to visit &lt;code&gt;/wp-admin/&lt;/code&gt;. Just checked, when visiting &lt;code&gt;/wp-admin/&lt;/code&gt;, the browser get's redirected to &lt;code&gt;/wp-login.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We also logged the results of both &lt;code&gt;is_user_logged_in()&lt;/code&gt; and &lt;code&gt;wp_get_current_user()&lt;/code&gt;. In case of an AJAX call, these functions resulted in resp. &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;WP_User&lt;/code&gt; object containing the user data of the user which was logged in before clearing the cookies. In case of a regular call, these functions resulted in resp &lt;code&gt;false&lt;/code&gt; and an empty &lt;code&gt;WP_User&lt;/code&gt; object.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Wed, 10 Jan 2018 07:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:6/1515568247007204</guid>
      <description>&lt;p&gt;
Thanks for working on this @omarreiss! I fully support us doing this, but have a handful of thoughts and questions before I think it should be committed to core.  I still need to review the actual code, but here are some thoughts on the idea and process for proceeding.
&lt;/p&gt;
&lt;p&gt;
1) We should add file mapping to &lt;code&gt;grunt-patch-wordpress&lt;/code&gt; so that we don't invalidate every single patch on trac that has JS in it.
&lt;/p&gt;
&lt;p&gt;
2) Should we also modify the organization of qunit tests? The standard that we have used there is for test file names to match the path and name of files being tested.
&lt;/p&gt;
&lt;p&gt;
3) We should come up with a communication plan for this.  I think something along the lines of:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;announcing it in dev chat the week this will land
&lt;/li&gt;&lt;li&gt;Have a make/core post ready to go live within a few minutes of this landing in core
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
4) We should have some documentation about how to patch libraries that we load and also how to test those patches. &lt;code&gt;npm link&lt;/code&gt; can be a new barrier to testing changes for many developers.
&lt;/p&gt;
&lt;p&gt;
5) If we start relying on more and more external JS, I would love to come up with some philosophy points around it. In general, we should be relying on projects that have a strong commitment to backward compatibility.
&lt;/p&gt;
&lt;p&gt;
6) as far as transitioning, I lean towards going all in and communicating it loud. This may also require working with maintainers of things such as VVV and other common dev platforms so that they are ready for the change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42963 (Improve deletion of $_old_files during upgrades) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 06:11:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42963#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42963#comment:4/1515564660200209</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42434" title="Upgrade: When deleting old files, if deletion fails attempt to empty ..."&gt;42434&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade: When deleting old files, if deletion fails attempt to empty the file instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, dd32.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42433" title="Upgrade: When deleting old files, if deletion fails attempt to empty ..."&gt;[42433]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42963" title="#42963: enhancement: Improve deletion of $_old_files during upgrades (closed: fixed)"&gt;#42963&lt;/a&gt; for 4.9.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42434]: Upgrade: When deleting old files, if deletion fails attempt to empty ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 06:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42434/1515564659680164</guid>
      <description>&lt;p&gt;
Upgrade: When deleting old files, if deletion fails attempt to empty the file instead.
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, dd32.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42433" title="Upgrade: When deleting old files, if deletion fails attempt to empty ..."&gt;[42433]&lt;/a&gt; to the 4.9 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42963" title="#42963: enhancement: Improve deletion of $_old_files during upgrades (closed: fixed)"&gt;#42963&lt;/a&gt; for 4.9.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42963 (Improve deletion of $_old_files during upgrades) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 06:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42963#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42963#comment:3/1515564591467116</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42433" title="Upgrade: When deleting old files, if deletion fails attempt to empty ..."&gt;42433&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade: When deleting old files, if deletion fails attempt to empty the file instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, dd32.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42963" title="#42963: enhancement: Improve deletion of $_old_files during upgrades (closed: fixed)"&gt;#42963&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42433]: Upgrade: When deleting old files, if deletion fails attempt to empty ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 06:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42433/1515564591002423</guid>
      <description>&lt;p&gt;
Upgrade: When deleting old files, if deletion fails attempt to empty the file instead.
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, dd32.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42963" title="#42963: enhancement: Improve deletion of $_old_files during upgrades (closed: fixed)"&gt;#42963&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>43028.patch attached to Ticket #43028</title>
      
        <dc:creator>zalu1512</dc:creator>

      <pubDate>Wed, 10 Jan 2018 06:02:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43028/43028.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43028/43028.patch/1515564153754086</guid>
      <description>&lt;p&gt;
resolved dropdown issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43028 (Remove numbers before month in dropdown, it makes user confused when ...) updated</title>
      
        <dc:creator>zalu1512</dc:creator>

      <pubDate>Wed, 10 Jan 2018 06:01:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43028#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43028#comment:3/1515564103668398</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I have resoled month dropdown problem and please let me know if any other changes.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 03:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:5/1515556609027537</guid>
      <description>&lt;p&gt;
This sounds like a case where the front-end logged in cookies are removed, but the admin/ajax authentication cookies still exist (So the user would still have access to &lt;code&gt;/wp-admin/&lt;/code&gt;). Does that sound correct?
&lt;/p&gt;
&lt;p&gt;
If that's the case, I'm not sure there's anything to do here - unless the admin was to check the front-end cookies still exist and are valid too?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 02:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054#comment:6/1515552589864343</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42432" title="Streams: When checking in `wp_is_stream()` escape the stream wrapper ..."&gt;42432&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Streams: When checking in &lt;code&gt;wp_is_stream()&lt;/code&gt; escape the stream wrapper names for PCRE to avoid PHP warnings when invalid stream wrappers are registered.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43054" title="#43054: defect (bug): wp_is_stream fails with stream definition containing nonascii chars (closed: fixed)"&gt;#43054&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42432]: Streams: When checking in `wp_is_stream()` escape the stream wrapper ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 02:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42432/1515552589401200</guid>
      <description>&lt;p&gt;
Streams: When checking in &lt;code&gt;wp_is_stream()&lt;/code&gt; escape the stream wrapper names for PCRE to avoid PHP warnings when invalid stream wrappers are registered.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43054" title="#43054: defect (bug): wp_is_stream fails with stream definition containing nonascii chars (closed: fixed)"&gt;#43054&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 10 Jan 2018 02:47:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054#comment:5/1515552426291224</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This sounds like a PHP Memory corruption issue, as the stream wrapper name looks completely invalid.
&lt;/p&gt;
&lt;p&gt;
For reference, &lt;a class="ext-link" href="https://github.com/php/php-src/blob/a7fe2570d3ce6915d4ea85c62c0f880ddc225ba7/main/streams/streams.c#L1648-L1665"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP allows the following characters&lt;/a&gt; in a stream wrapper name: &lt;code&gt;a-z, A-Z, 0-9, +, -, .&lt;/code&gt;. The value you've got in there looks like a raw DNS packet data - which certainly shouldn't be there. If this is your own server, update/restart PHP and ensure everything else is up to date.
&lt;/p&gt;
&lt;p&gt;
However, that being said, this function still needs some more escaping, for example, if you have a &lt;code&gt;compress.zlib&lt;/code&gt; wrapper installed (which most PHP's do) this will return &lt;code&gt;true&lt;/code&gt; incorrectly.
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( wp_is_stream( "compressZzlib://testing/invalid/stuff" ) );
&lt;/pre&gt;&lt;p&gt;
Fixing this and avoiding the warning generated in your case here is the same change, so lets fix that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37941 (add rel="noopener noreferrer" to any target="_blank") updated</title>
      
        <dc:creator>nicola.peluchetti</dc:creator>

      <pubDate>Wed, 10 Jan 2018 01:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37941#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37941#comment:16/1515547610889060</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42447 (Mark test_remove_orientation_data_on_rotate as skipped when ...) closed</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 10 Jan 2018 01:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42447#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42447#comment:3/1515547016819382</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42431" title="Media: Skip `test_remove_orientation_data_on_rotate` if missing deps.
 ..."&gt;42431&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Skip &lt;code&gt;test_remove_orientation_data_on_rotate&lt;/code&gt; if missing deps.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;test_remove_orientation_data_on_rotate()&lt;/code&gt; test was failing on systems that did not have the &lt;code&gt;exif&lt;/code&gt; extension available.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Skips test when the &lt;code&gt;exif_read_data()&lt;/code&gt; function does not exist.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber, desrosj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42447" title="#42447: defect (bug): Mark test_remove_orientation_data_on_rotate as skipped when ... (closed: fixed)"&gt;#42447&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42431]: Media: Skip `test_remove_orientation_data_on_rotate` if missing deps.  ...</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 10 Jan 2018 01:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42431/1515547016319962</guid>
      <description>&lt;p&gt;
Media: Skip &lt;code&gt;test_remove_orientation_data_on_rotate&lt;/code&gt; if missing deps.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;test_remove_orientation_data_on_rotate()&lt;/code&gt; test was failing on systems that did not have the &lt;code&gt;exif&lt;/code&gt; extension available.
&lt;/p&gt;
&lt;p&gt;
Skips test when the &lt;code&gt;exif_read_data()&lt;/code&gt; function does not exist.
&lt;/p&gt;
&lt;p&gt;
Props danielbachhuber, desrosj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42447" title="#42447: defect (bug): Mark test_remove_orientation_data_on_rotate as skipped when ... (closed: fixed)"&gt;#42447&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43056 (Notice in redirect_guess_404_permalink() when post type is an array) updated</title>
      
        <dc:creator>junaidbhura</dc:creator>

      <pubDate>Wed, 10 Jan 2018 00:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43056#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43056#comment:1/1515544091991149</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43056.diff attached to Ticket #43056</title>
      
        <dc:creator>junaidbhura</dc:creator>

      <pubDate>Wed, 10 Jan 2018 00:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43056/43056.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43056/43056.diff/1515543929055904</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43056 (Notice in redirect_guess_404_permalink() when post type is an array) created</title>
      
        <dc:creator>junaidbhura</dc:creator>

      <pubDate>Wed, 10 Jan 2018 00:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43056</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43056/1515543751972433</guid>
      <description>&lt;p&gt;
When manipulating URLs, it sometimes becomes necessary to update the query using the &lt;code&gt;pre_get_posts&lt;/code&gt; hook.
&lt;/p&gt;
&lt;p&gt;
If we set the post type to an array in the &lt;code&gt;pre_get_posts&lt;/code&gt; hook like so:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$query-&amp;gt;set( 'post_type', array( 'post', 'page', 'my_cpt' ) );
&lt;/pre&gt;&lt;p&gt;
On a 404 page, we get a notice when &lt;code&gt;WP_DEBUG&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Notice: wpdb::prepare was called incorrectly. The query only expected one placeholder, but an array of multiple placeholders was sent.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This is caused by the following code in &lt;code&gt;redirect_guess_404_permalink()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$where .= $wpdb-&amp;gt;prepare(" AND post_type = %s", get_query_var('post_type'));
&lt;/pre&gt;&lt;p&gt;
This can be fixed by looking for an array and updating the query.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 10 Jan 2018 00:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:38/1515542609643704</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by nikola_pdev. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1515542608000104"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39732.8.patch attached to Ticket #39732</title>
      
        <dc:creator>enrico.sorcinelli</dc:creator>

      <pubDate>Tue, 09 Jan 2018 23:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39732/39732.8.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39732/39732.8.patch/1515542356922970</guid>
      <description>&lt;p&gt;
Updated to the current trunk.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42965 (Widgets not restored to previous widget area after switching back to ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 09 Jan 2018 23:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42965#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42965#comment:4/1515538986921460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@probewise thank you for that excellent screencast showcasing the problem. The soundtrack makes it all the more enjoyable 😀
&lt;/p&gt;
&lt;p&gt;
So the problem is that if you have two widget areas A &amp;amp; B, with widgets A1 and B1 assigned respectively, then you switch to another theme with just a single widget area A, then it will get assigned both widgets A1 and B1. So far so good. But if you then switch back to the previous theme, then widget area A still has both A1 and B1, with widget area B being incorrectly empty.
&lt;/p&gt;
&lt;p&gt;
@obenland I thought the algorithm for restoring widgets was first assigning widgets back to their previous locations before then trying to re-assign any newly-created widgets using best guessing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 09 Jan 2018 22:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:36/1515536930882981</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Reviewing blame logs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the post type archive portion of &lt;code&gt;get_the_archive_description()&lt;/code&gt; wasn't added until 4.9, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40976" title="General: Add support for the post type archive description to ..."&gt;[40976]&lt;/a&gt;, it's always been formatted
&lt;/li&gt;&lt;li&gt;&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42578/42578.3.diff" title="Attachment '42578.3.diff' in Ticket #42578"&gt;42578.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42578/42578.3.diff" title="Download"&gt;​&lt;/a&gt; will need a refresh to remove the partial revert of  &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41232" title="Formatting: Introduce `get_the_post_type_description()` to allow post ..."&gt;[41232]&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28232 (Custom Taxonomy filter on post listing pages) updated</title>
      
        <dc:creator>runofthemill</dc:creator>

      <pubDate>Tue, 09 Jan 2018 21:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28232#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28232#comment:12/1515533828439983</guid>
      <description>&lt;p&gt;
Saw this on Slack and shared with @JoshuaWold &lt;a class="ext-link" href="https://github.com/johnbillion/extended-cpts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/johnbillion/extended-cpts&lt;/a&gt; which provides the functionality (and more) covered by this ticket. Above are a couple of quick screens of how it looks in WP Admin!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>extended_cpt_03.png attached to Ticket #28232</title>
      
        <dc:creator>runofthemill</dc:creator>

      <pubDate>Tue, 09 Jan 2018 21:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28232/extended_cpt_03.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28232/extended_cpt_03.png/1515533729126322</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>extended_cpt_02.png attached to Ticket #28232</title>
      
        <dc:creator>runofthemill</dc:creator>

      <pubDate>Tue, 09 Jan 2018 21:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28232/extended_cpt_02.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28232/extended_cpt_02.png/1515533721649620</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>extended_cpt_01.png attached to Ticket #28232</title>
      
        <dc:creator>runofthemill</dc:creator>

      <pubDate>Tue, 09 Jan 2018 21:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28232/extended_cpt_01.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28232/extended_cpt_01.png/1515533712683110</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43012 (Cannot Update Post in Firefox Due to Editor and TinyMCE JavaScript ...) updated</title>
      
        <dc:creator>johnschulz</dc:creator>

      <pubDate>Tue, 09 Jan 2018 19:48:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43012#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43012#comment:8/1515527330482963</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43012#comment:7" title="Comment 7"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reopen for 4.9.2 consideration.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
👍🏻
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43049 (jQuery-indipendent frontend) updated</title>
      
        <dc:creator>valdrinkoshi</dc:creator>

      <pubDate>Tue, 09 Jan 2018 19:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43049#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43049#comment:2/1515525844514022</guid>
      <description>&lt;p&gt;
Hi @dd32 thanks for the feedback!
I agree, it's best to implement a new theme that is jQuery-independent. I wanted to share this as food for thought, and to see if WordPress would be interested in shipping such theme in the future, or if this can delegated to theme developers.
I'll keep an eye on &lt;a class="ext-link" href="https://make.wordpress.org/core/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/&lt;/a&gt; as you suggested 👌
&lt;/p&gt;
&lt;p&gt;
Cheers
Valdrin
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42993 (WordPress Multisite: Allow for different ports) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Jan 2018 18:57:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42993#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42993#comment:4/1515524241717660</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by enrico.sorcinelli. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1515524240000077"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42450 (Customize: Ensure customize_autosaved requests only use revision of ...) updated</title>
      
        <dc:creator>bpayton</dc:creator>

      <pubDate>Tue, 09 Jan 2018 18:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42450#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42450#comment:9/1515523309643351</guid>
      <description>&lt;p&gt;
I was wrong about being able to take this. This is unfortunately late notice, and I apologize for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Tue, 09 Jan 2018 18:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:77/1515522282388652</guid>
      <description>&lt;p&gt;
I think that the meta functions should return false if site meta is not supported. This is a return type is the expected for these functions. But I do think we should add a &lt;code&gt;_doing_it_wrong&lt;/code&gt; to if site meta is not installed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40948 (Load meta files earlier in `wp-settings.php`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Jan 2018 18:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40948#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40948#comment:11/1515521252599864</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1515521250000634"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40948 (Load meta files earlier in `wp-settings.php`) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 09 Jan 2018 18:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40948#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40948#comment:10/1515521207427629</guid>
      <description>&lt;p&gt;
I'm not really opposed to getting this in earlier than later. It would be nice to know that not having these available earlier is currently blocking someone's external work.
&lt;/p&gt;
&lt;p&gt;
From a core perspective, we'll be moving &lt;code&gt;formatting.php&lt;/code&gt; and &lt;code&gt;meta.php&lt;/code&gt; up in the boot process in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/37923" title="#37923: feature request: Introduce shared wp_blogmeta database table for multisite installation (reopened)"&gt;#37923&lt;/a&gt; anyway. The others can be moved as part of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/40229" title="#40229: enhancement: Add meta_query to wp_site_query (reopened)"&gt;#40229&lt;/a&gt; if they aren't already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Jan 2018 17:51:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:76/1515520265344894</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1515520264000178"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 09 Jan 2018 17:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:75/1515520202780021</guid>
      <description>&lt;p&gt;
Things are looking good in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37923/37923.15.diff" title="Attachment '37923.15.diff' in Ticket #37923"&gt;37923.15.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37923/37923.15.diff" title="Download"&gt;​&lt;/a&gt;. Nice stuff, @flixos90 and @spacedmonkey.
&lt;/p&gt;
&lt;p&gt;
Some notes during a read through:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We'll need a dev note explaining the move of &lt;code&gt;formatting.php&lt;/code&gt; and &lt;code&gt;meta.php&lt;/code&gt; and what that does or does not do to performance during &lt;code&gt;SHORTINIT&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;I'm not sure if I understand the &lt;code&gt;is_site_meta_supported()&lt;/code&gt; test. We've set it up to always pass. Can we rely on the table always being there during the tests? Ideally, this should probably only test that &lt;code&gt;true&lt;/code&gt; is returned and then test &lt;code&gt;false&lt;/code&gt; as a filtered condition.
&lt;/li&gt;&lt;li&gt;Why skip tests when &lt;code&gt;is_site_meta_supported()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;? That the table does not exist could indicate a failure overall.
&lt;/li&gt;&lt;li&gt;There was some conversation earlier about returning &lt;code&gt;false&lt;/code&gt; vs a &lt;code&gt;WP_Error&lt;/code&gt; object. It seems useful to return &lt;code&gt;WP_Error&lt;/code&gt; specifically in the case where &lt;code&gt;is_site_meta_supported()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. Any &lt;code&gt;false&lt;/code&gt; returned via &lt;code&gt;add_metadata()&lt;/code&gt; can probably be passed along as is. Thoughts?
&lt;/li&gt;&lt;li&gt;We aren't testing cache in any way yet. We'll want to add some tests that run when object cache is available.
&lt;/li&gt;&lt;li&gt;There's a repeating &lt;code&gt;@todo use clean_blog_cache here&lt;/code&gt;. Does that need to be addressed?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40948 (Load meta files earlier in `wp-settings.php`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Jan 2018 17:43:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40948#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40948#comment:9/1515519795113528</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1515519793000326"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Jan 2018 17:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:35/1515518188602032</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by rabmalin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1515518186000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Jan 2018 17:13:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:74/1515518037293988</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1515518035000834"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39903 (is_user_logged_in() true on ajax after cookie has been deleted) updated</title>
      
        <dc:creator>ronald_edelschaap</dc:creator>

      <pubDate>Tue, 09 Jan 2018 16:13:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39903#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39903#comment:4/1515514432135942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any update on this? This bug makes AJAX scripts that determine user logged in status unusable in case visitors cleared their cookies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22579 (Confusion of  WP admin Discussion settings) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 09 Jan 2018 15:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22579#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22579#comment:16/1515512276770297</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sounds fine to me. Does it still need the parens?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Probably not anymore.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are you going to change all the usages of the word “article” here? I’m also not sure that “some custom post types” is necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, we should replace all "articles" with "content" and then add the extra posts/pages explanation to the first instance on the page. Do you think we shouldn't mention CPTs at all?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 15:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:5/1515512218037826</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 5.0 for higher visibility
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Tue, 09 Jan 2018 15:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:4/1515512099107205</guid>
      <description>&lt;p&gt;
To share a little more context. Here's an overview of the directory structure I've devised and the idea behind it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;src/js				| All the JavaScript source.
├── _enqueues			| Any script that ends up being enqueued.
│   ├── admin 			| Procedural scripts ran in the admin.
│   ├── deprecated		| All deprecated scripts.
│   ├── lib			| All standalone lib scripts.
│   ├── vendor			| All 3rd party deps that can't be managed with NPM.
│   └── wp			| All scripts that assign something to the wp namespace.
│       ├── customize		| Anything under wp.customize.
│       ├── editor		| Anything under wp.editor.
│       ├── media		| Anything under wp.media.
│       ├── utils		| Anything under wp.utils.
│       └── widgets		| jQuery widgets on the wp namespace.
└── media			| The media library.
&lt;/pre&gt;&lt;p&gt;
As I see it, most of the future source will live outside of the &lt;code&gt;_enqueues&lt;/code&gt; directory. One of the things this would enable us to do is to extract all of the business logic from the customizer into a modular library. This is something that can be done very easily in this structure and will make it much easier for us to get started once we move to the customizer / Gutenberg focus. The only thing that would remain in the &lt;code&gt;_enqueues&lt;/code&gt; would be things like global assignments. An alternative approach is to not have these at all anymore and just configure Webpack to do that, but that is something we can also decide in a later stage. The important thing is that this structure makes it possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Tue, 09 Jan 2018 15:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:3/1515510940524457</guid>
      <description>&lt;p&gt;
This ticket was discussed today in #core-js on WordPress Slack, see &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C5UNMSU4R/p1515505132000043"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C5UNMSU4R/p1515505132000043&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The main concern that was raised was the transition problems that might occur in not being able to run WordPress from the src directory anymore. I took 3 options from the :
&lt;/p&gt;
&lt;p&gt;
1) Stop allowing running from &lt;code&gt;/src&lt;/code&gt; and only build to &lt;code&gt;/build&lt;/code&gt;.
2) Allow running from &lt;code&gt;/src&lt;/code&gt; after a build step but &lt;code&gt;.gitignore&lt;/code&gt; the built files.
3) Allow running from &lt;code&gt;/src&lt;/code&gt; and commit the latest stable version of the built files in &lt;code&gt;/src&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The general consensus seems to be that we need to have a transition period in which we start out with option 3 and after some time transition to option 2 and/or option 1. I will do another iteration to make this possible.
&lt;/p&gt;
&lt;p&gt;
I would personally be in favor of gitignoring the built files from the start, because of the confusion that comes with having a set version of build files in the source. This can lead to a myriad of issues that I'd like to avoid. If we choose option 2 as the initial approach, the configuration / dev workflow impact would be minimal, while the gain would still be complete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28197 (Fallback Languages) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 09 Jan 2018 14:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28197#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28197#comment:57/1515509469477427</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) updated</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Tue, 09 Jan 2018 14:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054#comment:4/1515508945788742</guid>
      <description>&lt;p&gt;
Nope, I still don't know what was causing the nonascii output of &lt;code&gt;stream_get_wrappers()&lt;/code&gt;. It may occur again with different plugins or themes because it's affecting the core methods &lt;code&gt;wp_mkdir_p&lt;/code&gt; and &lt;code&gt;wp_upload_dir()&lt;/code&gt;. I still think it as a failsafe solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28197 (Fallback Languages) updated</title>
      
        <dc:creator>kwadronaut</dc:creator>

      <pubDate>Tue, 09 Jan 2018 14:34:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28197#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28197#comment:56/1515508479812380</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
And they all fall back to 'und'(efined)… @cvedovini is on the right track with fallback to 'generic.' What's used in the &lt;a class="ext-link" href="http://www.unicode.org/reports/tr35/#LanguageMatching"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;cldr&lt;/a&gt; are a distance between 2 pairs and a likelihood to calculate how good another match would be. &lt;a class="ext-link" href="https://github.com/golang/text/blob/master/language/match.go#L338"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Go&lt;/a&gt; takes a similar but simpler approach. It would avoid many frustrated users (my lang_reg_script isn't supported! Stupid imperialists!) and developers (what's this es-419? Do I also need an es_mx? What language symbol do they have there and there for their local currency?).
&lt;/p&gt;
&lt;p&gt;
It must not be achieved by a separate file for each and every localization combination, a combo like: site in es_ec, plugin in es_mx, theme in es_ar could work fine and shouldn't display a single English word. Fallback means for me to be able to set preferences (nl_be, de_au, he, sr_latin, mo…) and that when there's a close enough match, to display that string (to continue the example, if a string isn't translated exactly check if it exists in: nl_nl, de_formal, de_informal, de_ch, il, hr, ro…).
&lt;/p&gt;
&lt;p&gt;
That gives peace to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;developers:
&lt;ul&gt;&lt;li&gt;no need to continue es_ar if next time someone helps whose native tongue is es_mx, they translate only the new missing strings to es_mx and the fallback to es-419 makes most people believe it's well translated
&lt;/li&gt;&lt;li&gt;no need to decide for a Galician website to fallback to Castillian or Portuguese (Iberia), the user will have set their preference
&lt;/li&gt;&lt;li&gt;no need to copy paste 5 different files and claim you support 6 different German variants, with only formal and informal both the Swiss, Austrian and German users will enjoy your localized plugin!
&lt;/li&gt;&lt;li&gt;focus on the engineering and designing, no fiddling with the sorting of Ä in Danish or understanding which scripts are used where for Azerbaijani.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;users:
&lt;ul&gt;&lt;li&gt;in a great spot to know their content and (targeted) audience, see above
&lt;/li&gt;&lt;li&gt;prefer Lingala and forgot to say that you prefer a plugin from a Belgian developer in fr_BE to the en version? No worries, we got your back.
&lt;/li&gt;&lt;li&gt;I detest the dialect those people from across the river speak. Never ever fallback, give me the old behavior. Also the imperial approach of 1 language is faster ;-)
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Translators want their work used and appreciated. Users might prefer nl_be, but when a translation isn't updated for a new release, or some strings are missing, the translation will not get used and the translator will receive blame instead of praise. With fallback there's no blame. More time for quality control.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Things that make sense to me:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;stick to BCP-47 (aka convince @cvedovini I'm not crazy and accept en as English)
&lt;/li&gt;&lt;li&gt;Use CLDR: &lt;a class="ext-link" href="http://www.unicode.org/reports/tr35/#LanguageMatching"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.unicode.org/reports/tr35/#LanguageMatching&lt;/a&gt; it already has a ton of good data for currencies, cities, and localeMatcherTestfiles.
&lt;/li&gt;&lt;li&gt;Go's language matching: &lt;a class="ext-link" href="https://godoc.org/golang.org/x/text/language#Matcher"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://godoc.org/golang.org/x/text/language#Matcher&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;how people pick their preferences is something that can be changed or ameliorated later on, a simple config file change can be a great start.
&lt;/li&gt;&lt;li&gt;those aiming for perfect localization can continue adding more and more specific files. Don't hold yourself back.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 09 Jan 2018 14:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054#comment:3/1515507673321086</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43054#comment:2" title="Comment 2"&gt;tpaksu&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
So what you basically mean is the issue was caused due to a function in the plugin itself and it is not a WordPress core bug. Is this right?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I now can't reproduce it because I changed the settings of the plugin and applied that fix that I've mentioned in the issue. Maybe some setting was interfering with the streams in that plugin which caused another stream to be added to the array. But when the issue was prominent, I tried disabling and uninstalling the plugin (I found out the error is caused by that plugin with &lt;code&gt;debug_print_backtrace()&lt;/code&gt; method) but the warning was still there.
&lt;/p&gt;
&lt;p&gt;
I removed that fix and now the warning doesn't show up. Interesting.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42965 (Widgets not restored to previous widget area after switching back to ...) updated</title>
      
        <dc:creator>probewise</dc:creator>

      <pubDate>Tue, 09 Jan 2018 14:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42965#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42965#comment:3/1515507373726986</guid>
      <description>&lt;p&gt;
Yes, it will be restored if it's only using the default widget column/area, meaning if you're only using the primary sidebar/widget area. But if you'll switch theme with additional widget area, take for example, switching Twenty Fourteen to Twenty Fifteen, Content Sidebar/Widget Area's widget will be reassign to the primary Sidebar of Twenty Fifteen (see screenshots, Calendar was moved to Primary Sidebar/Widget Area). Switching other themes with multiple widget column/area, it will be placed to Inactive Widgets, and other widgets will be reassigned to other widget column/area. See screencast here: &lt;a class="ext-link" href="https://youtu.be/-Oh8_j5UvWU"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://youtu.be/-Oh8_j5UvWU&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 14:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:2/1515507235081036</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>plexusllc</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:34/1515505870418693</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's get a new function
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly.
&lt;/p&gt;
&lt;p&gt;
Revert this breaking change (and that reverting it has taken this long is the problem with all forms of "decisions by committee"), and then add the ability for publishers and theme builders to override the default behavior by opting in to new behavior which leaves the old default behavior alone if the new one is not intentionally used.
&lt;/p&gt;
&lt;p&gt;
That's what should have been done in the first place. That's what should be done now.
&lt;/p&gt;
&lt;p&gt;
And BTW as a "hard working" developer, I say this as someone who had to modify things on sites I manage when they broke in 4.9 and will have to re-modify again when this poorly thought-out change is finally reverted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43028 (Remove numbers before month in dropdown, it makes user confused when ...) updated</title>
      
        <dc:creator>zalak151291</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:49:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43028#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43028#comment:2/1515505770887316</guid>
      <description>&lt;pre class="wiki"&gt;$month_text = $wp_locale-&amp;gt;get_month_abbrev( $wp_locale-&amp;gt;get_month( $i ) );
$months[ $i ]['text']  = sprintf($month_text);
$months[ $i ]['value'] = $i;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:1/1515505632742450</guid>
      <description>&lt;p&gt;
If you wish to checkout the branch for yourself and play around with it, this is what I based the patch on: &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/tree/fresh-js-src-move"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Yoast/wordpress-develop-mirror/tree/fresh-js-src-move&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>js-organization.patch attached to Ticket #43055</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:39:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43055/js-organization.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43055/js-organization.patch/1515505161774688</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) created</title>
      
        <dc:creator>omarreiss</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055/1515505129650838</guid>
      <description>&lt;p&gt;
This ticket aims to introduce a build step and better code management to WordPress core JavaScript. The current way the JavaScript is organized raises some concerns and needs an update to bring it up to par with current day processes for JS development. The last few months I've been busy figuring out what the concerns are with regard to JS code organization in WordPress, what a good process for modernizing it would be and what we need to change in order to facilitate such a process and be ready to include ie. Gutenberg into WordPress. In this project I've consulted  with &lt;a class="ext-link" href="https://profiles.wordpress.org/pento"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Gary Pendergast&lt;/a&gt;, &lt;a class="ext-link" href="https://profiles.wordpress.org/adamsilverstein"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Adam Silverstein&lt;/a&gt;, &lt;a class="ext-link" href="https://profiles.wordpress.org/youknowriad"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Riad Benguella&lt;/a&gt; and &lt;a class="ext-link" href="https://profiles.wordpress.org/aduth"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Andrew Duthie&lt;/a&gt; in #core-js and on WCUS and &lt;a class="ext-link" href="https://profiles.wordpress.org/atimmer"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Anton Timmermans&lt;/a&gt; and &lt;a class="ext-link" href="https://profiles.wordpress.org/herregroen"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Herre Groen&lt;/a&gt; at Yoast HQ.
&lt;/p&gt;
&lt;h2 id="AbuildstepforWordPresscoredevelopentwhatwouldchange"&gt;A build step for WordPress core developent, what would change?&lt;/h2&gt;
&lt;p&gt;
This patch will introduce a build step to WordPress core development. Once this gets committed, it will no longer be possible to run WordPress from the src directory. To make this transition easier for developers, we've added a special page that people running WordPress from source will start seeing:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://user-images.githubusercontent.com/1488816/34698565-0a2cf5d0-f4d9-11e7-981f-6f64b15a0c79.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1488816/34698565-0a2cf5d0-f4d9-11e7-981f-6f64b15a0c79.png" alt="https://user-images.githubusercontent.com/1488816/34698565-0a2cf5d0-f4d9-11e7-981f-6f64b15a0c79.png" crossorigin="anonymous" title="https://user-images.githubusercontent.com/1488816/34698565-0a2cf5d0-f4d9-11e7-981f-6f64b15a0c79.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As the screen says, &lt;code&gt;npm install &amp;amp;&amp;amp; grunt build&lt;/code&gt; will be enough to trigger a build. The JavaScript in the source has been organized to meet the following concerns.
&lt;/p&gt;
&lt;h2 id="Codeorganizationconcerns"&gt;Code organization concerns&lt;/h2&gt;
&lt;h3 id="a1.Needtomaintainbackwardscompatibilitywhileprovidingflexibility."&gt;1. Need to maintain backwards compatibility while providing flexibility.&lt;/h3&gt;
&lt;p&gt;
We've discussed we want all enqueued scripts to still be built and present in the respective &lt;code&gt;wp-admin/js&lt;/code&gt; and &lt;code&gt;wp-includes/js&lt;/code&gt;. As they are there right now, they are really hard to manage. The way the code is organized is very hard to understand and it is very hard to refactor anything. To break out of the current "mess", it would be nice to have all JS source in one directory, from which it is copied or bundled to its legacy location. It's fully backwards compatible but adds an important first layer of flexibility that'll help advance JS development in core.
&lt;/p&gt;
&lt;h3 id="a2.NeedtoseparatescriptsthatendupinWordPressfromsourcecodeandprovidefreedominworkingwiththesourceandorganizingitinthebestway."&gt;2. Need to separate scripts that end up in WordPress from source code and provide freedom in working with the source and organizing it in the best way.&lt;/h3&gt;
&lt;p&gt;
Now that we have all the JS together in one directory, it will still be a mess to change things or split things up. It would not be transparent what would end up being enqueued and what is the source for those enqueues. In an ideal world, enqueued scripts are nothing more than a sort of manifests that load source code, initialize objects and perhaps set a few hooks. They would ideally not contain actual behavior. As we currently don't have a way to distinguish between enqueues and source code, basically everything right now is an enqueue. With the media library we've tried to demonstrate how this could work when you separate the source away. The media library then doesn't assign itself to the &lt;code&gt;wp&lt;/code&gt; global (see &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/blob/prove/src-approach/src/js/media/models.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;src/js/media/models.js&lt;/a&gt; example). Instead this is then done in the enqueue (&lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/blob/prove/src-approach/src/js/_enqueues/wp/media/models.js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;src/js/_enqueues/wp/media/models.js&lt;/a&gt; example). In fact It's practically all the enqueued script does.
&lt;/p&gt;
&lt;h3 id="a3.Needtoorganizetheenqueuedscriptsinabetterway."&gt;3. Need to organize the enqueued scripts in a better way.&lt;/h3&gt;
&lt;p&gt;
In the current setup, vendor scripts are mixed with self contained utility or lib scripts, deprecated scripts that are no longer in use and "other" scripts that are so all over the place that they are hard to classify. It's very hard to understand what's going on from looking at the directory structure. A large part of scripts simply assign something to the &lt;code&gt;wp&lt;/code&gt; namespace. Why not have a directory structure for scripts which just follows the namespace? It also immediately becomes clear what should be the responsibility of those files, namely to assign modules to the namespace. The modules themselves could be moved to the &lt;code&gt;src/js&lt;/code&gt; root and split up easily if deemed useful. This way it will be easy to explain the upgrade path towards a more modern code base. Things can simply be extracted  / abstracted in multiple iterations.
&lt;/p&gt;
&lt;p&gt;
Not every script assigns something to the &lt;code&gt;wp&lt;/code&gt; namespace. We've come up with a &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/tree/prove/src-approach/src/js"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;directory structure&lt;/a&gt; that seems useful to us, but anything is possible really. A very nice advantage is that  deprecated and vendor scripts become much easier identifiable. This what it could look like:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://user-images.githubusercontent.com/1488816/34159855-fa860c66-e4ca-11e7-82f4-aace92ce1918.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1488816/34159855-fa860c66-e4ca-11e7-82f4-aace92ce1918.png" alt="https://user-images.githubusercontent.com/1488816/34159855-fa860c66-e4ca-11e7-82f4-aace92ce1918.png" crossorigin="anonymous" title="https://user-images.githubusercontent.com/1488816/34159855-fa860c66-e4ca-11e7-82f4-aace92ce1918.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3 id="a4.Needtomanagevendorscriptsbetter"&gt;4. Need to manage vendor scripts better&lt;/h3&gt;
&lt;p&gt;
In the current setup. Vendor scripts that exist as NPM packages are actually shipped with WordPress and managed with a sort of copy/paste system. Managing these with NPM and having a copy task or Webpack move them into the right place makes so much more sense. Most of the NPM packages simply ship with the dist files, so we only have to copy them to the right location. But now we actually manage those with NPM and they are listed in the &lt;code&gt;package.json&lt;/code&gt;, which to me seems like a huge improvement.
&lt;/p&gt;
&lt;p&gt;
Sometimes vendor scripts need to be built after install. This holds true for maybe 2 or three dependencies. This can simply be &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/blob/prove/src-approach/Gruntfile.js#L1067-L1076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;part of the build task&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Some vendor scripts cannot be managed with NPM. I've moved them to a separate &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/tree/prove/src-approach/src/js/_enqueues/vendor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;src/js/_enqueues/vendor&lt;/a&gt;  directory and added a &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-develop-mirror/blob/prove/src-approach/Gruntfile.js#L122-L159"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;copy task&lt;/a&gt; to the Gruntfile to copy these files over to their original location.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://user-images.githubusercontent.com/1488816/34160143-044282e2-e4cc-11e7-9b06-8868784f8237.png"&gt;&lt;img src="https://user-images.githubusercontent.com/1488816/34160143-044282e2-e4cc-11e7-9b06-8868784f8237.png" alt="https://user-images.githubusercontent.com/1488816/34160143-044282e2-e4cc-11e7-9b06-8868784f8237.png" crossorigin="anonymous" title="https://user-images.githubusercontent.com/1488816/34160143-044282e2-e4cc-11e7-9b06-8868784f8237.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3 id="a5.NeedtoinstallWordPresspackagesandassignthemtoaglobal."&gt;5. Need to install WordPress packages and assign them to a global.&lt;/h3&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/packages/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Packages&lt;/a&gt; is an initiative to extract general purpose WP libraries to separate NPM packages, so they can also be used outside of the scope of WordPress. The first example of this is &lt;code&gt;wp-includes/wp-a11y.js&lt;/code&gt;. It's easy to configure Webpack to automatically generate that file based on the &lt;a class="ext-link" href="https://github.com/WordPress/packages/tree/master/packages/a11y"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;@wordpress/a11y&lt;/a&gt; package. This was the chore that lead to this undertaking. Technically it's not a very hard thing to do, but I'd like to be as forward compatible as possible, so that's why I decided to zoom out a bit.
&lt;/p&gt;
&lt;p&gt;
Webpack simply provides the &lt;a class="ext-link" href="https://webpack.github.io/docs/library-and-externals.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;library option&lt;/a&gt; for this kind of thing.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;entry&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'src/wp-includes/js/wp-a11y.js'&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'@wordpress/a11y'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'src/wp-includes/js/wp-a11y.js'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;library&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'wp'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'a11y'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'speak'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="a6.Allowingabuildstep."&gt;6. Allowing a build step.&lt;/h3&gt;
&lt;p&gt;
At WCUS, we pretty much agreed a build step is a necessity in modern JS development. While we can do much to help onboard new developers to get used to this, it simply makes sense to run WP from the build directory, no longer directly from source. We definitely intend to create good documentation for this that is also referenced in the notice showed earlier.
&lt;/p&gt;
&lt;h3 id="a7.ManagingpackagesunderWPsource."&gt;7. Managing packages under WP source.&lt;/h3&gt;
&lt;p&gt;
At WCUS, it was pretty much decided WP packages should be managed in WP core after all. This setup can easily facilitate that. I'd propose to simply have a packages directory in &lt;code&gt;src/js&lt;/code&gt; where we can continue managing them with &lt;a class="ext-link" href="https://github.com/lerna/lerna"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;lerna&lt;/a&gt;. This will also make it incredibly easy to publish packages from WordPress core to NPM, which could help us increase our impact in open source even further.
&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="Testing"&gt;Testing&lt;/h2&gt;
&lt;p&gt;
I ran a diff to compare the build that this thing generates with the current build on master. There are still a few minor differences:
&lt;/p&gt;
&lt;pre class="wiki"&gt;➜  wp diff -qr compare/build mirror/build
Files compare/build/wp-admin/css/common-rtl.css and mirror/build/wp-admin/css/common-rtl.css differ
Files compare/build/wp-admin/css/common-rtl.min.css and mirror/build/wp-admin/css/common-rtl.min.css differ
Files compare/build/wp-includes/js/backbone.min.js and mirror/build/wp-includes/js/backbone.min.js differ
Files compare/build/wp-includes/js/hoverIntent.js and mirror/build/wp-includes/js/hoverIntent.js differ
Files compare/build/wp-includes/js/hoverIntent.min.js and mirror/build/wp-includes/js/hoverIntent.min.js differ
Files compare/build/wp-includes/js/imagesloaded.min.js and mirror/build/wp-includes/js/imagesloaded.min.js differ
Files compare/build/wp-includes/js/jquery/jquery-migrate.js and mirror/build/wp-includes/js/jquery/jquery-migrate.js differ
Files compare/build/wp-includes/js/jquery/jquery.color.min.js and mirror/build/wp-includes/js/jquery/jquery.color.min.js differ
Files compare/build/wp-includes/js/jquery/jquery.js and mirror/build/wp-includes/js/jquery/jquery.js differ
Files compare/build/wp-includes/js/masonry.min.js and mirror/build/wp-includes/js/masonry.min.js differ
Files compare/build/wp-includes/js/media-audiovideo.js and mirror/build/wp-includes/js/media-audiovideo.js differ
Files compare/build/wp-includes/js/media-audiovideo.min.js and mirror/build/wp-includes/js/media-audiovideo.min.js differ
Files compare/build/wp-includes/js/media-grid.js and mirror/build/wp-includes/js/media-grid.js differ
Files compare/build/wp-includes/js/media-grid.min.js and mirror/build/wp-includes/js/media-grid.min.js differ
Files compare/build/wp-includes/js/media-models.js and mirror/build/wp-includes/js/media-models.js differ
Files compare/build/wp-includes/js/media-models.min.js and mirror/build/wp-includes/js/media-models.min.js differ
Files compare/build/wp-includes/js/media-views.js and mirror/build/wp-includes/js/media-views.js differ
Files compare/build/wp-includes/js/media-views.min.js and mirror/build/wp-includes/js/media-views.min.js differ
Files compare/build/wp-includes/js/twemoji.js and mirror/build/wp-includes/js/twemoji.js differ
Files compare/build/wp-includes/js/underscore.min.js and mirror/build/wp-includes/js/underscore.min.js differ
Files compare/build/wp-includes/js/zxcvbn.min.js and mirror/build/wp-includes/js/zxcvbn.min.js differ
Files compare/build/wp-includes/version.php and mirror/build/wp-includes/version.php differ
&lt;/pre&gt;&lt;p&gt;
For most of those there is a valid explanation. The media files have been slightly altered to fit the new setup. Some files are now copied over from node_modules and don't end in a newline. I still have to do a little bit of investigation here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) updated</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:28:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054#comment:2/1515504520998727</guid>
      <description>&lt;p&gt;
I now can't reproduce it because I changed the settings of the plugin and applied that fix that I've mentioned in the issue. Maybe some setting was interfering with the streams in that plugin which caused another stream to be added to the array. But when the issue was prominent, I tried disabling and uninstalling the plugin (I found out the error is caused by that plugin with &lt;code&gt;debug_print_backtrace()&lt;/code&gt; method) but the warning was still there.
&lt;/p&gt;
&lt;p&gt;
I removed that fix and now the warning doesn't show up. Interesting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:33/1515504451598002</guid>
      <description>&lt;p&gt;
Let's get a new function
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22579 (Confusion of  WP admin Discussion settings) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22579#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22579#comment:15/1515504220012585</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22579#comment:11" title="Comment 11"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We agree with @joyously that moving the "These settings may be overridden..." caveat to underneath the label makes sense.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds fine to me. Does it still need the parens?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We'd also recommend updating the text to read:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Allow people to post comments on new content (like posts, pages, and some custom post types)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you going to change all the usages of the word “article” here? I’m also not sure that “some custom post types” is necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 09 Jan 2018 13:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054#comment:1/1515503286269054</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
Though I am not sure but can you please try by deactivating Smart Slider 3 plugin.
It seems like the this plugin has some effect!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42888 (Add a "Show" button next to password fields on mobile) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 12:20:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42888#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42888#comment:5/1515500441114382</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested on iOS and Android.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42888-patch-visible-iOS.2.png attached to Ticket #42888</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 12:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-visible-iOS.2.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-visible-iOS.2.png/1515500353098472</guid>
      <description>&lt;p&gt;
42888-patch-visible-iOS
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>42888-patch-hidden-iOS.png attached to Ticket #42888</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 12:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-hidden-iOS.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-hidden-iOS.png/1515500332841741</guid>
      <description>&lt;p&gt;
42888-patch-hidden-iOS
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>42888-patch-visible-iOS.png attached to Ticket #42888</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 12:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-visible-iOS.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-visible-iOS.png/1515500313188262</guid>
      <description>&lt;p&gt;
42888-patch-visible-android
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>42888-patch-hidden-Android.png attached to Ticket #42888</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 12:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-hidden-Android.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-hidden-Android.png/1515500286797442</guid>
      <description>&lt;p&gt;
42888-patch-hidden-Android
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>42888-patch-full-behaviour-on-desktop.gif attached to Ticket #42888</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 12:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-full-behaviour-on-desktop.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/42888-patch-full-behaviour-on-desktop.gif/1515500261881614</guid>
      <description>&lt;p&gt;
42888-patch-full-behaviour-on-desktop
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43054 (wp_is_stream fails with stream definition containing nonascii chars) created</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Tue, 09 Jan 2018 11:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43054</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43054/1515498373428695</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
My &lt;code&gt;stream_get_wrappers&lt;/code&gt; function returns this array:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;array(11) {
  [0]=&amp;gt;
  string(3) "php"
  [1]=&amp;gt;
  string(4) "file"
  [2]=&amp;gt;
  string(4) "glob"
  [3]=&amp;gt;
  string(4) "data"
  [4]=&amp;gt;
  string(0) ""
  [5]=&amp;gt;
  string(163) "0���&amp;gt;�s&amp;gt;����1�DNS_A�&amp;gt;�s&amp;gt;������&amp;gt;�s&amp;gt;��h0�R�DNS_NS�&amp;gt;�"
  [6]=&amp;gt;
  string(3) "zip"
  [7]=&amp;gt;
  string(13) "compress.zlib"
  [8]=&amp;gt;
  string(5) "https"
  [9]=&amp;gt;
  string(4) "ftps"
  [10]=&amp;gt;
  string(4) "phar"
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I don't know what's causing the 5th indexed element to be displayed, but it breaks my wordpress page with this error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning:  preg_match(): Null byte in regex in /wp-includes/functions.php on line 5220
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt; Line number may be different because I added some debugging codes.
&lt;/p&gt;
&lt;p&gt;
And I'm using Smart Slider 3 which obviously calls &lt;code&gt;wp_upload_dir()&lt;/code&gt; which calls &lt;code&gt;wp_mkdir_p()&lt;/code&gt; and it calls &lt;code&gt;wp_is_stream()&lt;/code&gt; which eventually gives this warning.
&lt;/p&gt;
&lt;p&gt;
I suppose this function may use a check like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$wrappers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;stream_get_wrappers&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$wrappers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wrappers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$wrapper&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"!^\w+$!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$wrapper&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>user.php attached to Ticket #43037</title>
      
        <dc:creator>zalak151291</dc:creator>

      <pubDate>Tue, 09 Jan 2018 11:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43037/user.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43037/user.php/1515498037405031</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 09 Jan 2018 10:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:24/1515495504881563</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1515495503000257"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43053 (Dynamic banner codes not working in sidebar widget area) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 09 Jan 2018 10:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43053#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43053#comment:2/1515494063962688</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43051 (Documentation fix for wp_update_user function first parameter) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 09 Jan 2018 10:13:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43051#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43051#comment:1/1515492797726607</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43046.diff attached to Ticket #43046</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 09 Jan 2018 10:01:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43046/43046.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43046/43046.diff/1515492078922573</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43046 (`has_image_size()` returns false for Core image sizes) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 09 Jan 2018 10:00:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43046#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43046#comment:1/1515492050391741</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;has_image_size()&lt;/code&gt; function is specifically used for image sizes that are registered via &lt;code&gt;add_image_size()&lt;/code&gt; function. It is actually using &lt;code&gt;wp_get_additional_image_sizes()&lt;/code&gt; function, which does not consider core image sizes.
&lt;/p&gt;
&lt;p&gt;
On the other hand &lt;code&gt;get_intermediate_image_sizes()&lt;/code&gt; uses the same function (&lt;code&gt;wp_get_additional_image_sizes()&lt;/code&gt;) but it forcefully defines an array of core image sizes and merges it with the array returned by &lt;code&gt;wp_get_additional_image_sizes()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
I agree with @desrosj that the documentation has to be more clear about the limitation.
&lt;/p&gt;
&lt;p&gt;
I have edited description at &lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/has_image_size"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/has_image_size&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43053 (Dynamic banner codes not working in sidebar widget area) closed</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:59:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43053#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43053#comment:1/1515491967865967</guid>
      <description>invalid: &lt;p&gt;
Hi @antya63, welcome to Trac. This isn't the right place because it's for bug reports regarding the WordPress core system. It looks like you're having problems with some custom-built code instead. I'd advise that you either refer back to your development team or &lt;a class="ext-link" href="https://wordpress.org/support/forum/wp-advanced/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ask this on the support forums&lt;/a&gt; instead so other people might be able to help. Thanks!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43053 (Dynamic banner codes not working in sidebar widget area) created</title>
      
        <dc:creator>antya63</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43053/1515491644227626</guid>
      <description>&lt;p&gt;
Using Managed wordpress with Di Business theme. Theme developers told me to raise ticket here. When I insert a dynamic banner code into sidebar widget, I get the following error: ‘$rfsn_creative’ is not defined and the code doesn't work as it should (displays image correctly, but link takes you to a 'Oops something went wrong' page). All other banner codes are fine, so it seems dynamic ones are the issue. I am not a web developer.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43033 (User can not see updated Icon in editing Menu with live preview) updated</title>
      
        <dc:creator>nilamacharya</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:53:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43033#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43033#comment:2/1515491608759745</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:23/1515491026888542</guid>
      <description>&lt;p&gt;
At the request of @schlessera I adjusted the backend notification mockup to have a single CTA that goes to a landing page somewhere in the wordpress ecosystem with the information and instructions (for which we also made a quick mockup). Since the draft of the copy for that page is quite long, we divided it up into expandable sections, kinda like the Gutenberg sidebar. But feel free to run with the layout of that page, this is just an idea. We made a few more sketches if needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41445 (post_parent can prevent media from embedding correctly) updated</title>
      
        <dc:creator>Krstarica</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41445#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41445#comment:9/1515491002239659</guid>
      <description>&lt;p&gt;
Same on 4.9.1.
&lt;/p&gt;
&lt;p&gt;
If post_parent of image is having status other than 'publish', rest_forbidden occurs.
&lt;/p&gt;
&lt;p&gt;
For example, for image having ID 125676, the result of this query has to be 'publish':
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT b.post_status FROM wp_posts a, wp_posts b WHERE a.ID = 125676 AND a.post_parent=b.ID
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>ServeHappy Page_Expanded panels.png attached to Ticket #41191</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:41:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/ServeHappy%20Page_Expanded%20panels.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/ServeHappy%20Page_Expanded%20panels.png/1515490898047106</guid>
      <description>&lt;p&gt;
Mockup of the landing page with the sections expanded
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>ServeHappy Page_Collapsed panels.png attached to Ticket #41191</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/ServeHappy%20Page_Collapsed%20panels.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/ServeHappy%20Page_Collapsed%20panels.png/1515490869395233</guid>
      <description>&lt;p&gt;
Quick mockup of a landing page with the explanation and instructions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:32/1515490855527788</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42578#comment:27" title="Comment 27"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have to kind-of agree with not reverting this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was written without realising that the Bundled themes were also affected by this, which downright sucks :)
&lt;/p&gt;
&lt;p&gt;
It's going to mean that some people who have done work to fix it will have only done it for a short-term relief, but hopefully changing it back doesn't affect them too much.
&lt;/p&gt;
&lt;p&gt;
I'm going to backtrack and agree with reverting, with the intention that this is brought back in 5.0 in a backwards-compatible manner.
That may mean going against &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8776" title="#8776: enhancement: Deprecate all get_the_author_ and the_author_ (closed: fixed)"&gt;#8776&lt;/a&gt; which deprecated multiple functions in preference for &lt;code&gt;the_author_meta( 'description' )&lt;/code&gt; and instead deprecating &lt;code&gt;the_author_meta( 'description' )&lt;/code&gt; in preference for a new similarly named &lt;code&gt;the_new_pretty_author_description()&lt;/code&gt; type function which does output &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags deliberately from inception, and maybe even adds WYSIWYG editing to that field.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ServeHappy notice WP backend.png attached to Ticket #41191</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:40:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/ServeHappy%20notice%20WP%20backend.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/ServeHappy%20notice%20WP%20backend.png/1515490832017995</guid>
      <description>&lt;p&gt;
Backend notification
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:31/1515489682613203</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Fix the affected themes and move on. Its a worthwhile change for our end-user publishers!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is not possible to fix all affected themes.
&lt;/p&gt;
&lt;p&gt;
This "feature" is clearly "plugin-land", plugins for this feature exist since years, no need to mess up the core.
&lt;/p&gt;
&lt;p&gt;
One more affected example, not a theme, but still:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;JetPack: 4+ Million
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
(modules/theme-tools/content-options/author-bio.php)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>rabmalin</dc:creator>

      <pubDate>Tue, 09 Jan 2018 09:02:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:30/1515488547472991</guid>
      <description>&lt;p&gt;
Here are few themes from the Popular page in the directory where themes are not updated for the fix.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Customizr - 100k
&lt;/li&gt;&lt;li&gt;ColorMag - 90k
&lt;/li&gt;&lt;li&gt;Hueman - 80k
&lt;/li&gt;&lt;li&gt;Hestia - 60k
&lt;/li&gt;&lt;li&gt;Astra - 20k
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This is not only about 4 default themes. We should consider thousands of themes in the ecosystem. Back Compat is the motto of WordPress. Or if any breaking changes then developers should be well informed prior pushing to the core.
&lt;/p&gt;
&lt;p&gt;
As of Theme Review Team, we have not asked theme authors to fix the author description as we were hoping this will be reverted. Even recently live themes have this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42984 (Widget Save button problem) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 09 Jan 2018 08:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42984#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42984#comment:6/1515487731897453</guid>
      <description>&lt;p&gt;
Ok, I made this widget save after some testings... Thanks for your reply.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>jeremyescott</dc:creator>

      <pubDate>Tue, 09 Jan 2018 08:39:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:29/1515487155113190</guid>
      <description>&lt;p&gt;
@Ov3rfly: All the core theme installs can be fixed by changing 1 line on four themes. I'll volunteer to do if core team commits to not reverting. It will be easy.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Revert it, do not add it back.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So never give publishers rich text options for their bios? That doesn't fit our mission of democratizing publishing. Even if this is reverted, a future with rich text/wysiwyg for all user input fields should be in our heads. Hence why this will be changed one day.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
do not add it back.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why hold WordPress back forever because of a short-term frustration? Fix the affected themes and move on. Its a worthwhile change for our end-user publishers!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42984 (Widget Save button problem) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 09 Jan 2018 08:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42984#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42984#comment:5/1515486545837810</guid>
      <description>&lt;p&gt;
I took a look and It does not work as you say, If I change the color then this trigger change action will be called 100 + times - take a look in the video I uploaded to youtube if you don't believe me - youtube.com/watch?v=W9BI5t-riDA
&lt;/p&gt;
&lt;p&gt;
We need to make the button clickable or to add a new callback action/function to Color Picker that will get executed/called at the end of selecting color.
&lt;/p&gt;
&lt;p&gt;
I created a new ticket - &lt;a href="https://core.trac.wordpress.org/ticket/43052"&gt;https://core.trac.wordpress.org/ticket/43052&lt;/a&gt; You can take a look.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Tue, 09 Jan 2018 08:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:28/1515485910238400</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd be interested in seeing more data about how many themes are actually broken by this now
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Twenty Sixteen: 700.000+
Twenty Fifteen: 400.000+
Twenty Thirteen: 100.000+
Twenty Twelve: 300.000+
Child themes of above: uncountable
Custom themes based on these official WordPress themes: uncountable
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reverting .. and adding it back ..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Revert it, do not add it back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43052 (Add an End action function to Color Picker) created</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 09 Jan 2018 08:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43052/1515485403306432</guid>
      <description>&lt;p&gt;
I need to call a function after color was selected using Color Picker...
&lt;a class="ext-link" href="https://make.wordpress.org/core/2012/11/30/new-color-picker-in-wp-3-5/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2012/11/30/new-color-picker-in-wp-3-5/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I want to trigger a change action that I am using into a widget after I change the color... &lt;a href="https://core.trac.wordpress.org/ticket/42984"&gt;https://core.trac.wordpress.org/ticket/42984&lt;/a&gt; but the problem is I can't do this now, I can call functions when I change the color but I want &lt;strong&gt;after&lt;/strong&gt; I changed, so it will be called only once.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43051.1.patch attached to Ticket #43051</title>
      
        <dc:creator>nextendweb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 08:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43051/43051.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43051/43051.1.patch/1515485294863665</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43051 (Documentation fix for wp_update_user function first parameter) created</title>
      
        <dc:creator>nextendweb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 08:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43051</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43051/1515484952666153</guid>
      <description>&lt;p&gt;
/wp-includes/users.php
&lt;/p&gt;
&lt;p&gt;
wp_update_user functions expects array, but it accepts object (which converted to array) and WP_User object (which converted to array).
&lt;/p&gt;
&lt;p&gt;
So I think the comment for the $userdata parameter should be improved.
&lt;/p&gt;
&lt;p&gt;
Current documentation
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Update a user in the database.
 *
 * It is possible to update a user's password by specifying the 'user_pass'
 * value in the $userdata parameter array.
 *
 * If current user's password is being updated, then the cookies will be
 * cleared.
 *
 * @since 2.0.0
 *
 * @see wp_insert_user() For what fields can be set in $userdata.
 *
 * @param object|WP_User $userdata An array of user data or a user object of type stdClass or WP_User.
 * @return int|WP_Error The updated user's ID or a WP_Error object if the user could not be updated.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_update_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="k"&gt;stdClass&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get_object_vars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;WP_User&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;to_array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'invalid_user_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Invalid user ID.'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Improved documentation
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Update a user in the database.
 *
 * It is possible to update a user's password by specifying the 'user_pass'
 * value in the $userdata parameter array.
 *
 * If current user's password is being updated, then the cookies will be
 * cleared.
 *
 * @since 2.0.0
 *
 * @see wp_insert_user() For what fields can be set in $userdata.
 *
 * @param array|object|WP_User $userdata An array of user data or a user object of type stdClass or WP_User.
 * @return int|WP_Error The updated user's ID or a WP_Error object if the user could not be updated.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_update_user&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="k"&gt;stdClass&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;get_object_vars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="nx"&gt;instanceof&lt;/span&gt; &lt;span class="nx"&gt;WP_User&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$userdata&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;to_array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$userdata&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'ID'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$ID&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'invalid_user_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Invalid user ID.'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42984 (Widget Save button problem) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 09 Jan 2018 07:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42984#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42984#comment:4/1515484483475160</guid>
      <description>&lt;p&gt;
I don't like this approach... I will try to add this action to color picker but what if I can't add?
Does color picked has an end action where I can attach this trigger function? I don't think so...
&lt;/p&gt;
&lt;p&gt;
Should I make a new ticket about Color Picker or what should I do If your solution does not work?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40594 (Reset box shadow for links in the admin bar) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 09 Jan 2018 07:48:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40594#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40594#comment:2/1515484102909476</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Reviving this so we can look at implementing something. A CSS reset should be simple enough to get something worked out. I'll see if I can test the patch that @FlorianBrinkmann has provided on 4.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36036 (Multiple CDATA regressions in wp-includes) updated</title>
      
        <dc:creator>sephr</dc:creator>

      <pubDate>Tue, 09 Jan 2018 07:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36036#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36036#comment:24/1515481862467163</guid>
      <description>&lt;p&gt;
I will re-do this patch if someone on the dev team is willing to assist with review &amp;amp; merge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42972 (XHTML CDATA compliance regression in preview script) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 07:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42972#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42972#comment:3/1515481756109623</guid>
      <description>&lt;p&gt;
The codex is a Wiki and not an official support document, it's community powered.
Most of the article was written between 2005 and 2009, the only changes in the last 8 years have been minor changes. Please feel free to update it.
&lt;/p&gt;
&lt;p&gt;
As far as I'm concerned, WordPress never supported it well, and it was never adopted by enough people to matter (I used to use it FYI).
&lt;/p&gt;
&lt;p&gt;
This is still a duplicate of a 2 year old ticket, and is unlikely to ever be fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42972 (XHTML CDATA compliance regression in preview script) updated</title>
      
        <dc:creator>sephr</dc:creator>

      <pubDate>Tue, 09 Jan 2018 07:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42972#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42972#comment:2/1515481438775481</guid>
      <description>&lt;p&gt;
@dd32 I understand that XHTML isn't very popular nowadays. I've been using XHTML(5) with my custom theme on WordPress since 2007, and the codex still says that you support it (and has ever since I started using WordPress). I would really appreciate if the core devs could take a definite stance on this issue so that I don't need to manually patch my site after every couple updates.
&lt;/p&gt;
&lt;p&gt;
If you wish to officially drop XHTML support, codex.wordpress.org will need to be revised. Here are some codex.wordpress.org links that suggest that XHTML is still supported by WordPress:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress prints XHTML from all its internal functions
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
― &lt;a class="ext-link" href="https://codex.wordpress.org/HTML_to_XHTML#Why_Should_I_use_XHTML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/HTML_to_XHTML#Why_Should_I_use_XHTML&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
improving XHTML compatibility (don't mess up people's code)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
― &lt;a class="ext-link" href="https://codex.wordpress.org/Testing#Testing.2FJavascript_and_WYSIWYG"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Testing#Testing.2FJavascript_and_WYSIWYG&lt;/a&gt; (Implies that there was usage of XHTML and that WordPress developers should be mindful of compatibility)
&lt;/p&gt;
&lt;p&gt;
Some changelog entries with descriptions related to fixing XHTML compatibility: &lt;a class="ext-link" href="https://www.google.com/search?q=inurl%3Ahttps%3A%2F%2Fcodex.wordpress.org%2FChangelog%2F+XHTML"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.google.com/search?q=inurl%3Ahttps%3A%2F%2Fcodex.wordpress.org%2FChangelog%2F+XHTML&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I haven't had any issues with WP core XHTML support until recently the past couple years. The majority of my issues have been from components that I've been using for over a decade emitting proper XHTML that have been absorbed by Jetpack (e.g. WP Stats) and recently updated to emit malformed XHTML.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43037-2.diff attached to Ticket #43037</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 09 Jan 2018 06:56:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43037/43037-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43037/43037-2.diff/1515480993184885</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43037 (Login error message "Invalid username. Lost your password?" is confusing) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 09 Jan 2018 06:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43037#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43037#comment:8/1515480968430625</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43037#comment:5" title="Comment 5"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
You are right. If a user forgets both Username and Email address, it would be a complete mess!
&lt;/p&gt;
&lt;p&gt;
I have uploaded a modified diff file which uses specific error messages for Username and Email address.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43037" title="#43037: defect (bug): Login error message &amp;#34;Invalid username. Lost your password?&amp;#34; is confusing (reviewing)"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While this link makes perfectly sense when users enter a wrong &lt;em&gt;password&lt;/em&gt;, it doesn't when they enter a wrong &lt;em&gt;username&lt;/em&gt;. The error is a wrong username, why I should ever be offered a link to retrieve my password?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it still makes sense when they enter a wrong username. If a user only remembers the email address, password reset email can be used to remember the correct username (the email contains the site name and the username).
&lt;/p&gt;
&lt;p&gt;
Same for "Invalid email address" error, if a user only remembers the username, they can use the password reset form and then check their inboxes to find where the email went.
&lt;/p&gt;
&lt;p&gt;
Maybe the link text could be changed to something else (e.g. "Lost your username?", "Recover account", "Try password reset"), but I think the link should stay. There's already a "Lost your password?" link below the form, but it's not very noticeable, and getting an error message without any hint for a resolution is not very user-friendly :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43037#comment:2" title="Comment 2"&gt;subrataemfluence&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since self hosted WordPress does not really provide any inbuilt functionality for retrieving username/email address
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does allow you to see the username in the password reset email if you remember the email address.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43017 (Plugin Performance) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 06:13:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43017#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43017#comment:1/1515478426677758</guid>
      <description>maybelater: &lt;p&gt;
Hi @hatschiii and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
At this point in time, WordPress core is not a good location for a performance profiler such as what P3 is.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, as you've noted, P3 is no longer actively maintained, as while it still works with the latest WordPress releases, it no longer works with PHP 7 and above.
&lt;/p&gt;
&lt;p&gt;
If anyone would be interested in working on this type of functionality, the P3 plugin author seems open to accepting help to get it working with PHP7 again:
&lt;a class="ext-link" href="https://github.com/godaddy/wp-p3-profiler/issues/2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/godaddy/wp-p3-profiler/issues/2&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/php-7-compatibility-144/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/php-7-compatibility-144/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm closing this as &lt;code&gt;maybelater&lt;/code&gt; as it's possible we'll add something in the future, but I firmly believe it's plugin territory for the foreseeable future (And if it can't be done in a plugin, it won't be able to be done in WordPress).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42991 (Customizer: Search Menu item not working on Custom Link) updated</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Tue, 09 Jan 2018 05:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42991#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42991#comment:2/1515476554381741</guid>
      <description>&lt;p&gt;
Thanks @melchoyce
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41477 (Back Button issue to Login page with Safari) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 05:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41477#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41477#comment:1/1515475795541803</guid>
      <description>invalid: &lt;p&gt;
Hi @robersolari
&lt;/p&gt;
&lt;p&gt;
I apologise for the significant delay in replying to your ticket.
&lt;/p&gt;
&lt;p&gt;
This doesn't sound like a bug in WordPress, but rather a bug in the plugin you're using for managing a authentication-only blog.
&lt;/p&gt;
&lt;p&gt;
Trac is used for reporting issues in the open-source project WordPress only, for support you should use the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As this doesn't appear to be a core WordPress bug, I'm marking this as &lt;code&gt;invalid&lt;/code&gt;, however please note that replies to the ticket can be made without re-opening and will be seen.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42963 (Improve deletion of $_old_files during upgrades) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 05:19:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42963#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42963#comment:2/1515475197236628</guid>
      <description>&lt;p&gt;
&lt;code&gt;is_file( $old_file )&lt;/code&gt; won't work as expected here, as &lt;code&gt;$to&lt;/code&gt; is not always a full filesystem path.
&lt;/p&gt;
&lt;p&gt;
Personally I think we can skip the &lt;code&gt;is_file()&lt;/code&gt; check, as &lt;code&gt;delete()&lt;/code&gt; should return correctly.
In the worst case scenario, where &lt;code&gt;delete()&lt;/code&gt; returns incorrectly, it'll get removed on the next run hopefully.
&lt;/p&gt;
&lt;p&gt;
This seems like a good addition overall. I think we should also consider back-porting the change to all autoupdate branches so that all updates are consistent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36036,​42972 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 05:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36036%2C42972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36036%2C42972/1515474853178560</guid>
      <description>duplicate: &lt;p&gt;
I believe this is covered in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/36036" title="#36036: defect (bug): Multiple CDATA regressions in wp-includes (assigned)"&gt;#36036&lt;/a&gt; which never got any traction.
&lt;/p&gt;
&lt;p&gt;
Serving sites as &lt;code&gt;application/xhtml+xml&lt;/code&gt; never really gained traction, and HTML5 moved away from that requirement of strictness.
&lt;/p&gt;
&lt;p&gt;
@sephr you should probably consider moving away for a smoother experience in the future IMHO. If &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/36036" title="#36036: defect (bug): Multiple CDATA regressions in wp-includes (assigned)"&gt;#36036&lt;/a&gt; ever gets any traction, it'll break again in the future for sure.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #35560 (Use of undefined constant DB_USER - assumed 'DB_USER') updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 05:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35560#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35560#comment:10/1515474465760322</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This does actually need to be fixed, and is an issue.
Although most users should not see this warning, as error visibility is turned off at the point in time.
&lt;code&gt;wp-admin/setup-config.php&lt;/code&gt; includes &lt;code&gt;wp-settings.php&lt;/code&gt; which calls &lt;code&gt;require_wp_db()&lt;/code&gt; which references these constants.
&lt;/p&gt;
&lt;p&gt;
As of PHP 7.2 the warning reads: (wrapping for readability here only)
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: Use of undefined constant DB_USER - assumed 'DB_USER'
(this will throw an Error in a future version of PHP)
&lt;/pre&gt;&lt;p&gt;
According to &lt;a class="ext-link" href="http://php.net/manual/en/migration72.deprecated.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/migration72.deprecated.php&lt;/a&gt; the next major PHP version will throw a fatal error instead of an undefined constant warning.
&lt;/p&gt;
&lt;p&gt;
I think &lt;code&gt;require_wp_db()&lt;/code&gt; can probably just define &lt;code&gt;DB_(USER|PASSWORD|HOST|NAME)&lt;/code&gt; etc as &lt;code&gt;null&lt;/code&gt; in the event that they're not already defined.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42998 (Custom HTML Widget uses widget_text twice in markup) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42998#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42998#comment:7/1515473997784958</guid>
      <description>&lt;p&gt;
I found we can add the 4th parameter "1" in the preg_replace function, that will replace only once, so it will look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args['before_widget'] = preg_replace( '/(?&amp;lt;=\sclass=["\'])/', 'widget_text ', $args['before_widget'], 1 );
&lt;/pre&gt;&lt;p&gt;
But what if we have wrapper div elements? ... that will appear before not only after.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42998 (Custom HTML Widget uses widget_text twice in markup) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:57:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42998#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42998#comment:6/1515473836043335</guid>
      <description>&lt;p&gt;
So is my code good? Or we need only to use REGEX algorithm?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$widget_id&lt;/code&gt; is the string name of the widget
&lt;/p&gt;
&lt;p&gt;
So the code is this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args['before_widget'] = str_replace( 'id="' . $widget_id . '" class="', 'id="' . $widget_id . '" class="widget_text ', $args['before_widget'] );
&lt;/pre&gt;&lt;p&gt;
It will replace only once because it will search for widget ID too, and the first div will be changed...
&lt;/p&gt;
&lt;p&gt;
Or If someone is good at REGEX &lt;strong&gt;to make this code replace only once&lt;/strong&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args['before_widget'] = preg_replace( '/(?&amp;lt;=\sclass=["\'])/', 'widget_text ', $args['before_widget'] );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42980 (get_plugin_data does not support PHP Version) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42980#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42980#comment:3/1515473621949986</guid>
      <description>invalid: &lt;p&gt;
I don't think this is in scope of &lt;code&gt;get_plugin_data()&lt;/code&gt; which returns the php headers.
&lt;/p&gt;
&lt;p&gt;
Perhaps this could be proposed as a separate ticket, however, there'd need to be a need for it in core for it to be accepted.
&lt;/p&gt;
&lt;p&gt;
I'm going to close this ticket as &lt;code&gt;invalid&lt;/code&gt; for now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #41041,​42927,​42973,​42976,​43047 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:50:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41041%2C42927%2C42973%2C42976%2C43047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41041%2C42927%2C42973%2C42976%2C43047/1515473458241438</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #42986 (Insert default filters to wp_delete_file to don't delete core files.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42986#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42986#comment:1/1515473306325923</guid>
      <description>wontfix: &lt;p&gt;
Hey @lenon and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Thanks for submitting this, however, this doesn't seem like something which is needed in WordPress.
&lt;/p&gt;
&lt;p&gt;
My issues with this is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Plugins could bypass this by using &lt;code&gt;unlink()&lt;/code&gt; directly
&lt;/li&gt;&lt;li&gt;We can't enforce plugins to use &lt;code&gt;wp_delete_file()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;We can't prevent plugins from using &lt;code&gt;unlink()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Plugins should not allow deletion of arbitrary files, if a plugin allows for &lt;code&gt;wp_delete_file()&lt;/code&gt; to be passed &lt;code&gt;ABSPATH&lt;/code&gt; it's not sanitizing it's input correctly.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm going to close this as &lt;code&gt;wontfix&lt;/code&gt;, however, you can still reply and we can re-open it if you can explain the benefits of adding this.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43035 (Url Trailing  dot value Remove Automatic In My Url when I update New ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43035#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43035#comment:5/1515472938638594</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43035 (Url Trailing  dot value Remove Automatic In My Url when I update New ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43035#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43035#comment:4/1515472930379900</guid>
      <description>invalid: &lt;p&gt;
Dots are not supported in WordPress URLs.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/redirect_canonical/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;redirect_canonical filter&lt;/a&gt; can be used to alter the canonical redirection behaviour.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter( 'redirect_canonical', '__return_false' );&lt;/code&gt; will disable redirects completely, and may cause unintended consequences.
&lt;/p&gt;
&lt;p&gt;
I'm marking this as &lt;code&gt;wontfix&lt;/code&gt; as it's an intentional change, and &lt;code&gt;.&lt;/code&gt; has never been supported in a WordPress URL (and won't be any time soon).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43050 (User profile) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 04:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43050#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43050#comment:1/1515472517314816</guid>
      <description>invalid: &lt;p&gt;
Hi @mrdonut,
&lt;/p&gt;
&lt;p&gt;
This Trac instance is for reporting bugs in the open-source application WordPress, and not for support.
Please direct all future support enquiries to &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
You can reset the account password by following instructions available here:
&lt;a class="ext-link" href="https://codex.wordpress.org/Resetting_Your_Password"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Resetting_Your_Password&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you don't know the username, &lt;code&gt;admin&lt;/code&gt; is often the default login. You may need to view the users by following the PHPMyAdmin reset instructions above and viewing the users table directly.
&lt;/p&gt;
&lt;p&gt;
That's the limit of help I can supply here, the clients web hoster may also be of assistance (Appears to be Zuver).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43050 (User profile) created</title>
      
        <dc:creator>mrdonut</dc:creator>

      <pubDate>Tue, 09 Jan 2018 03:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43050</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43050/1515468847710904</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
I am doing some consulting for a client who has a website written in WordPress but doesn't have the login credentials.  How do I go about getting this information
the site is www.mrdonut.com.au
&lt;/p&gt;
&lt;p&gt;
Is it possible to get assistance.
Many Thansk
&lt;/p&gt;
&lt;p&gt;
Rod
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43044 (Data inconsistencies) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 03:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43044#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43044#comment:1/1515467730169726</guid>
      <description>maybelater: &lt;p&gt;
Hey @robertorodes and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
You're correct in that WordPress does not currently use Transactions, and does not have any database-layer restrictions set up to enforce data consistency.
&lt;/p&gt;
&lt;p&gt;
WordPress, WordPress plugins, etc are encouraged to use the available API's and database funtions such as &lt;code&gt;$wpdb-&amp;gt;insert()&lt;/code&gt; and &lt;code&gt;$wpdb-&amp;gt;update()&lt;/code&gt; and checking their return values for whether a SQL command has succeeded or not.
&lt;/p&gt;
&lt;p&gt;
There's also no guarantee given that the data will not be changed by another process between ProcessA writing it and then reading it.
If a plugin requires an absolute transaction to occur, they're free to initiate a transaction and save it at the end, it's just not "supported" in core.
&lt;/p&gt;
&lt;p&gt;
I'm closing this as &lt;code&gt;maybelater&lt;/code&gt; as while I do agree with you, there's currently no active plans to change how the database layer operates at this point. Discussions can continue with the ticket closed, and if a committer feels dedicated to it, they can re-open it when the time comes to work on it.
WordPress also currently supports a wide range of MySQL versions (and variants) and table types, not all of which support transactions AFAIK. There's also the database dropins available which use MSSQL or PostgreSQL &amp;amp; SQLite.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43048 (Can't Access Dashboard After Login) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 03:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43048#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43048#comment:1/1515466861136053</guid>
      <description>invalid: &lt;p&gt;
Hi @meganjade and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
This Trac is for reporting bugs in the core WordPress software, and is not for support.
Unfortunately this doesn't look like a bug in WordPress specifically, but more of an issue with your WordPress installation which would be better suited for the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
With the above in mind, it looks like your &lt;code&gt;wp-config.php&lt;/code&gt; file may be corrupted or missing part of it, you should check that the end of the file matches what is in the &lt;code&gt;wp-config-sample.php&lt;/code&gt; file, specifically the lines highlighted here: &lt;a href="https://core.trac.wordpress.org/browser/trunk/wp-config-sample.php?marks=82-90#L82"&gt;https://core.trac.wordpress.org/browser/trunk/wp-config-sample.php?marks=82-90#L82&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Your website hoster (Dreamhost) may also be able to offer additional support.
&lt;/p&gt;
&lt;p&gt;
Due to this not appearing as if it's a bug with WordPress, I'm marking this as &lt;code&gt;invalid&lt;/code&gt;. Replies may be made without re-opening the ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43049 (jQuery-indipendent frontend) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 02:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43049#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43049#comment:1/1515466525048490</guid>
      <description>maybelater: &lt;p&gt;
Hey @valdrinkoshi and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
While I see the benefit in not using jQuery, looking at &lt;code&gt;global.js&lt;/code&gt; and &lt;code&gt;navigation.js&lt;/code&gt; it looks like dropping jQuery is going to increase the maintenance burden with having to deal with cross-browser quirks which many of the jQuery methods we call already works around.
Furthermore, if we were to change the default themes, it'd have a onward effect upon themes built on top of them, and due to the length of time that &lt;code&gt;twentyseventeen&lt;/code&gt; (or all of the &lt;code&gt;twenty*&lt;/code&gt; themes) has been out there, that's a lot of sites. It's not only sites which expect these files to have been written the way they are, but also sites who assume jQuery will be available as it's a dependancy of the theme.
&lt;/p&gt;
&lt;p&gt;
I don't think this is something we can change at this point in time, however, I'd urge you to bring it up for when the next default theme gets developed - I don't know when that will be, keep an eye on &lt;a class="ext-link" href="https://make.wordpress.org/core/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/&lt;/a&gt; if you're interested in getting involved.
&lt;/p&gt;
&lt;p&gt;
Unfortunately due to the above I don't think this is something we can work on right now for the existing bundled themes, but hopefully future themes will be able to take that into consideration.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #42780 (Code Editor: Linter (HTMLHint) should show error if checkbox doesn't ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 09 Jan 2018 02:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42780#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42780#comment:6/1515463210171275</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There's a pull request for HTMLHint already created, sadly not merged for this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Rule: &lt;code&gt;input-requires-label&lt;/code&gt; &lt;a class="ext-link" href="https://github.com/yaniswang/HTMLHint/pull/159"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/yaniswang/HTMLHint/pull/159&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Unfortunately, it appears the HTMLHint project is unmaintained for now, there's been &lt;a class="ext-link" href="https://github.com/yaniswang/HTMLHint/issues/214"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;no response from the maintainer in ~6 months&lt;/a&gt;, there are quite a few forks though I'm not sure if it would be possible to use a fork
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43049 (jQuery-indipendent frontend) created</title>
      
        <dc:creator>valdrinkoshi</dc:creator>

      <pubDate>Tue, 09 Jan 2018 01:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43049</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43049/1515461690273425</guid>
      <description>&lt;p&gt;
It would be great to have a jQuery-independent theme shipped by WordPress.
Removing jQuery and using native platform features can result in big improvements of loading and Time-To-Interactive times - see these examples:
&lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/17877"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/17877&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/woocommerce/storefront/issues/631"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/storefront/issues/631&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at the twentyseventeen theme, only 3 files rely on jQuery:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;global.js
&lt;/li&gt;&lt;li&gt;navigation.js
&lt;/li&gt;&lt;li&gt;customize-preview.js
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
jQuery is mainly used to interact with the DOM. These interactions should be easy to replace with native DOM APIs, and eventually free the theme from the jQuery dependency.
&lt;/p&gt;
&lt;p&gt;
Would you be interested in exploring this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42578 (PHP functions inside &lt;p&gt; tags creates new &lt;p&gt; tag, breaking the parent ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 01:10:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42578#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42578#comment:27/1515460223360852</guid>
      <description>&lt;p&gt;
I have to kind-of agree with not reverting this.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The damage is done, and we didn't fix it within a reasonable timeframe (IMHO 8 weeks is not reasonable) which has caused themes to update for it.
&lt;/li&gt;&lt;li&gt;The user expectation of being able to add line breaks, and in the future, rich-text is made harder by reverting
&lt;/li&gt;&lt;li&gt;Reverting this in 4.9.x, and adding it back in 5.0~5.5 isn't a viable method forward IMHO, all it does is delay breakages, which have already been broken for weeks.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So while I agree reverting was the best method forward 6-8 weeks ago, I'm not sure it's still the best way forward.
&lt;/p&gt;
&lt;p&gt;
I'd be interested in seeing more data about how many themes are actually broken by this now - have the majority of WordPress.org-hosted themes updated? Did they break in the first place?
Does anyone have a copy of all themes locally they could scan through?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40613 (Add query cache to WP_User_Query class) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 09 Jan 2018 00:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40613#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40613#comment:6/1515458745357245</guid>
      <description>&lt;p&gt;
I have some serious concerns about adding caching here - it seems like it's something that for the majority of sites will fall into one of the following buckets
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's a small site, and &lt;code&gt;get_users()&lt;/code&gt; is called with the same set of simple arguments, resulting in cache hits
&lt;/li&gt;&lt;li&gt;It's a large site, where &lt;code&gt;get_users()&lt;/code&gt; is seldom called but when it is it's a few simple arguments, resulting in cache hits
&lt;/li&gt;&lt;li&gt;It's a large site, where &lt;code&gt;get_users()&lt;/code&gt; is called often, with varied arguments (often complex) resulting in many cache misses due to varying keys
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the first two cases, a cache here would be useful, however, I don't think they would really need the cache at all.
The 3rd case is where caching would be thought to be needed, but if the query arguments change often then caching wouldn't actually be of benefit.
If the reasoning for this change is simply to reduce queries, that seems like the incorrect way to go, and I'd suggest that looking at what is calling &lt;code&gt;get_users()&lt;/code&gt; often is a better case of a location for the caching.
&lt;/p&gt;
&lt;p&gt;
While we could make the caching for &lt;code&gt;get_users()&lt;/code&gt; in-memory non-persistent (like we do with say &lt;code&gt;comments&lt;/code&gt; IIRC), I'm not convinced that it'll actually help site performance and instead just make this part of the code more complex.
&lt;/p&gt;
&lt;p&gt;
To tack on to @westi's comment though - in-memory non-persistent query caching sounds like an interesting approach, and one that i believe some DB caching dropins may already do. I'd like to see that built up in a plugin myself to see exactly what impact it has on a regular site (and then a site which would actually benefit from it) past memory usage - but i suspect it wouldn't be of great benefit to the majority of installs (and probably a detriment to a lot of them).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Reference Screenshot 2.png attached to Ticket #43048</title>
      
        <dc:creator>meganjade</dc:creator>

      <pubDate>Tue, 09 Jan 2018 00:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43048/Reference%20Screenshot%202.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43048/Reference%20Screenshot%202.png/1515458613593496</guid>
      <description>&lt;p&gt;
Reference Screenshot 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Reference Screenshot 1.png attached to Ticket #43048</title>
      
        <dc:creator>meganjade</dc:creator>

      <pubDate>Tue, 09 Jan 2018 00:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43048/Reference%20Screenshot%201.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43048/Reference%20Screenshot%201.png/1515458574471816</guid>
      <description>&lt;p&gt;
Reference Screenshot 1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43048 (Can't Access Dashboard After Login) created</title>
      
        <dc:creator>meganjade</dc:creator>

      <pubDate>Tue, 09 Jan 2018 00:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43048</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43048/1515458536293109</guid>
      <description>&lt;p&gt;
When I try to login to our Wordpress Dashboard I receive the following error message instead of being directed to our dashboard (Reference Screenshot 1):
&lt;/p&gt;
&lt;p&gt;
"Warning: require_once(ABSPATHwp-admin/includes/dashboard.php): failed to open stream: No such file or directory in /home/singleestate/honeymamas.com/wp-admin/index.php on line 13
&lt;/p&gt;
&lt;p&gt;
Fatal error: require_once(): Failed opening required 'ABSPATHwp-admin/includes/dashboard.php' (include_path='.:/usr/local/lib/php:/usr/local/php5/lib/pear') in /home/singleestate/honeymamas.com/wp-admin/index.php on line 13"
&lt;/p&gt;
&lt;p&gt;
However, when I go to the main page of our site it shows that I'm logged int (Reference Screenshot 2). If I click any of the links on that top banner that shows I'm logged in, I receive an error message again (unlesss I click log out, in which case it logs me out).
&lt;/p&gt;
&lt;p&gt;
Please let me know how to fix this as soon as possible, as we have some important updates/edits to our site that need to me made. Thank you!
&lt;/p&gt;
&lt;p&gt;
Megan McGarry
Honey Mama's
949.289.3092 / megan@…
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>