<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44728 (Quick edit for taxonomies is using filtered data) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sat, 22 Sep 2018 22:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44728#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44728#comment:3/1537656204693499</guid>
      <description>&lt;p&gt;
I think this is not just in Quick Edit.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Edit a post.
&lt;/li&gt;&lt;li&gt;Add a tag with a special character. (I used test&amp;amp;frac12;)
&lt;/li&gt;&lt;li&gt;Update post.
&lt;/li&gt;&lt;li&gt;Go to Tags and see the new tag is there. (but quick edit does not show the entity)
&lt;/li&gt;&lt;li&gt;Go back to edit the post.
&lt;/li&gt;&lt;li&gt;Change a little something in the content and click Update.
&lt;/li&gt;&lt;li&gt;Go back to Tags and see another new tag (with the special character in the slug).
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Sat, 22 Sep 2018 20:21:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:10/1537647713748862</guid>
      <description>&lt;p&gt;
If there is a way to register a control type, shouldn’t there be to deregister?
&lt;/p&gt;
&lt;p&gt;
Currently working on a project where we have a need to remove totally from the customizer the js wp.template code of a custom control created by the active theme.
&lt;/p&gt;
&lt;p&gt;
Without a way to deregister it, it will still be printed to customizer.
&lt;/p&gt;
&lt;p&gt;
I hope that answers your question.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 22 Sep 2018 20:15:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:9/1537647319498305</guid>
      <description>&lt;p&gt;
What's the use case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37782 (Duplicate Page Entry in View All Pages when generating a Menu) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 19:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37782#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37782#comment:6/1537643503694774</guid>
      <description>&lt;p&gt;
Reviewing this further I thought the implementation would benefit from expanding to include &lt;code&gt;page_for_posts&lt;/code&gt; and &lt;code&gt;wp_page_for_privacy_policy&lt;/code&gt; as found in &lt;code&gt;_post_states()&lt;/code&gt;;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/56c162fbc9867f923862f64f1b4570d885f1ff03/wp-admin/includes/template.php#L1908-L1920"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/56c162fbc9867f923862f64f1b4570d885f1ff03/wp-admin/includes/template.php#L1908-L1920&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Posted a new concept.
&lt;/p&gt;
&lt;p&gt;
Sadly I had to create a &lt;code&gt;get_post_status&lt;/code&gt; method instead of just using &lt;code&gt;_post_states&lt;/code&gt; as it just echos and I needed to append. Was that the right approach? Or should I have updated it to simply use a param default &lt;code&gt;$echo = true&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Also am going to revise I believe to use the &lt;code&gt;posts__not_in&lt;/code&gt; array on the original query rather than running a foreach to unset posts.
&lt;/p&gt;
&lt;p&gt;
But thoughts on current direction appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37782.2.diff attached to Ticket #37782</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 19:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37782/37782.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37782/37782.2.diff/1537643477687130</guid>
      <description>&lt;p&gt;
Second iteration to affect posts_page and privacy_page as well
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>44983.patch attached to Ticket #44983</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 22 Sep 2018 18:22:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44983/44983.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44983/44983.patch/1537640579168526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44983 (REST API: Undefined-property notice when setting term parent to 0) created</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 22 Sep 2018 18:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44983</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44983/1537640501823654</guid>
      <description>&lt;p&gt;
Attempting to create or update a term with a parent of &lt;code&gt;0&lt;/code&gt; using the REST API generates a undefined-property notice because a &lt;code&gt;WP_Error&lt;/code&gt; object is treated as a &lt;code&gt;WP_Term&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;WP_Error&lt;/code&gt; comes from calling &lt;code&gt;get_term( 0 )&lt;/code&gt;, and the terms controller checks for only a truthy response before attempting to access the &lt;code&gt;term_id&lt;/code&gt; property.
&lt;/p&gt;
&lt;p&gt;
The attached patch includes tests demonstrating the issue, adds verification that the response from &lt;code&gt;get_term()&lt;/code&gt; is a term, and, as a tiny optimization, skips the &lt;code&gt;get_term()&lt;/code&gt; check when the provided parent is &lt;code&gt;0&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42888 (Add a "Show" button next to password fields on mobile) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 17:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42888#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42888#comment:30/1537638452884475</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43151 (Media widgets shouldn't use a clickable div as an UI control) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 17:20:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43151#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43151#comment:5/1537636804035941</guid>
      <description>&lt;p&gt;
Worth noting a similar case in Gutenberg was solved simply removing the second button and making the "visual placeholder" a button:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/qkWlzb9k9g.png"&gt;&lt;img src="http://cldup.com/qkWlzb9k9g.png" alt="http://cldup.com/qkWlzb9k9g.png" crossorigin="anonymous" title="http://cldup.com/qkWlzb9k9g.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Special care should be taken when crafting the button text: it should not indicate the state (No image selected). Instead, it should indicate the available action: "Select image". The only presence of the button implies the state (no image selected).
&lt;/p&gt;
&lt;p&gt;
It would be nice to align with the Gutenberg implementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43178 (Rethinking what “captions” means for video) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 17:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43178#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43178#comment:10/1537636067310364</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@joemcgill @postphotos as 4.9.9 focuses also on small accessibility fixes, do you think this can be milestoned for 4.9.9?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43412 (Comments: row action links and forms accessibility improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 15:25:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43412#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43412#comment:5/1537629930696266</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, to start implementing the "proximity of controls" principle (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40822" title="#40822: defect (bug): Addressing Proximity in the admin area (new)"&gt;#40822&lt;/a&gt;) and to introduce consistency, the patch aligns the Reply and Quick edit forms buttons on the left.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To give more visibility to the "proximity of controls" issue, I'd be in favor of splitting this part in a separate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44267 (Privacy Request List Table: A way to show the time of request when ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 15:12:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44267#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44267#comment:10/1537629162961761</guid>
      <description>&lt;p&gt;
Not sure using &lt;code&gt;@&lt;/code&gt; adds any value. Instead, I doubt it's announced correctly from assistive technologies in other languages. In Italian, for example, the &lt;code&gt;@&lt;/code&gt; symbol is called &lt;code&gt;chiocciola&lt;/code&gt; and its main meaning is "snail" :) Or it's a particular type of stairs.
&lt;/p&gt;
&lt;p&gt;
Firefox and NVDA do read out &lt;code&gt;@&lt;/code&gt; as "chiocciola". This makes sense only in the context of email addresses, where we usually say "xyx chiocciola xyz.com". However, "chiocciola" doesn't make any sense in the context of a date format. I guess this happens also in many other languages.
&lt;/p&gt;
&lt;p&gt;
I guess only in English there's an association between the &lt;code&gt;@&lt;/code&gt; symbol and the word &lt;code&gt;at&lt;/code&gt;. I'd tend to think &lt;code&gt;@&lt;/code&gt; doesn't have an universal meaning in the context of dates and it shouldn't be used this way. I'd rather just use the word &lt;code&gt;at&lt;/code&gt; like, for example, in the Comments screen.
&lt;/p&gt;
&lt;p&gt;
We should also try to remove &lt;code&gt;@&lt;/code&gt; in all the places in WordPress where it's used for dates, but I guess it should be addressed in a separate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44506 (Can not edit image without caption on Microsoft Edge) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 14:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44506#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44506#comment:2/1537627325763997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @tatthiennguyen and welcome to Trac! Sorry it took a while to have a reply.
I can reproduce on trunk too, same Edge version reported above.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;normal image: click on the image, for a fraction of a second the selection and image toolbar appear (while clicking) and then disappear: not able to edit the image
&lt;/li&gt;&lt;li&gt;image with a caption: clicking the image, selection and image toolbar appear normally and it's possible to edit the image
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;selecting the image with the keyboard is almost impossible
&lt;/li&gt;&lt;li&gt;after several trials and errors I've been able to select the image with the keyboard and at that point the toolbar appeared normally
&lt;/li&gt;&lt;li&gt;the "fake" caret that should appear on the image sides is missing
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Seems to me something that should be addressed as soon as possible, hopefully for 4.9.9
&lt;/p&gt;
&lt;p&gt;
/Cc @azaozz
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44536 (Twenty Seventeen: article tag lacks role="article" parameter) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 14:08:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44536#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44536#comment:4/1537625327257998</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @webest and welcome to Trac.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As recommended by WCAG
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe I've missed something, but I'm not sure the &lt;a class="ext-link" href="https://www.w3.org/TR/WCAG21/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WCAG 2.1&lt;/a&gt; recommend in any way to add a role to an HTML element that already conveys the same semantics natively. Also, the a11yproject checklist you linked mentions that this should be done only if there's the need to support old browsers.
&lt;/p&gt;
&lt;p&gt;
Twenty Seventeen is doing it for this exact reason, to support (very) old browser / screen reader combinations, but only for elements that have a native, default, role which is also a landmark (the main &amp;lt;header&amp;gt;, &amp;lt;nav&amp;gt;, &amp;lt;main&amp;gt;, &amp;lt;aside&amp;gt;, etc.), as these elements are really important to communicate the main section of a page and allow navigation through landmarks.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element isn't a landmark and I'm not sure what the value added by &lt;code&gt;role="article"&lt;/code&gt; would be. Also, modern browsers already correctly expose the &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; element native role and if I remember correctly it was discussed a few times to remove the redundant roles from all the WordPress bundled themes.
&lt;/p&gt;
&lt;p&gt;
For reference, see the article element in HTML 5.2:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/TR/html52/sections.html#the-article-element"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/html52/sections.html#the-article-element&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Allowed ARIA role attribute values:
&lt;/p&gt;
&lt;p&gt;
article (default - &lt;strong&gt;do not set&lt;/strong&gt;)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44229 (Use CDNs where possible to serve external assets like jQuery) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Sat, 22 Sep 2018 13:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44229#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44229#comment:10/1537623353552310</guid>
      <description>&lt;p&gt;
The main issue with this suggestion, other than the above mentions about GDPR-FUD or countries blocking CDNs, is actually quite simple: WordPress is used on lots of sites by users without unrestricted internet access. Local intranets run WordPress too, and those users with browsers on an internal company system may not have outside access, but still need to access internal sites. The site should run properly for such cases as well.
&lt;/p&gt;
&lt;p&gt;
Given how easy it is for plugins to adjust the source of a enqueued item, and thus that CDN enabler plugins can exist, this seems best left in plugin terrority. Tying WordPress core to a specific CDN provider (even if it's one we serve up ourselves like s.w.org) doesn't seem to be a good strategy. It can break in edge cases like intranets and country blocking, and it ties a fairly important piece of the core to some external provider, which can break or go down or just change out from underneath us.
&lt;/p&gt;
&lt;p&gt;
So, nice thought, but not a good idea for core.
&lt;/p&gt;
&lt;p&gt;
-1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44621 (Privacy Policy Guide: Improve the readability of the suggested text) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 13:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44621#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44621#comment:11/1537622363545436</guid>
      <description>&lt;p&gt;
I'd agree italic shouldn't be used for big blocks of text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44714 (Title should toggle to Show details to Hide details as per the event fired) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 13:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44714#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44714#comment:5/1537621511029437</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Screenshot for reference:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cldup.com/RPqM7xXtLx.png"&gt;&lt;img src="http://cldup.com/RPqM7xXtLx.png" alt="http://cldup.com/RPqM7xXtLx.png" crossorigin="anonymous" title="http://cldup.com/RPqM7xXtLx.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Generally, I wouldn't recommend to dynamically change the accessible name of a control, whether it's a button text, &lt;code&gt;aria-label&lt;/code&gt;, a link text, etc. The name of an UI control shouldn't change.
&lt;/p&gt;
&lt;p&gt;
Scenario:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a blind screen reader user navigates the content and learns there's a "Show details" button
&lt;/li&gt;&lt;li&gt;the user activates the button and explores the content underneath
&lt;/li&gt;&lt;li&gt;then the user wants to collapse the details and will look for a "Show details" button, either by navigating backwards or by other means (e.g. screen readers can list all the controls in a page)
&lt;/li&gt;&lt;li&gt;however, there's no control named "Show details" any longer, because the name has changed
&lt;/li&gt;&lt;li&gt;the user will have to figure out what happened and guess that's really the button he/she was looking for
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
While that's not an impossible task, changing the name will certainly make it harder.
&lt;/p&gt;
&lt;p&gt;
Additionally: this button uses an &lt;code&gt;aria-expanded&lt;/code&gt; attribute to communicate the collapsed / expanded state of the content it toggles. &lt;code&gt;aria-expanded&lt;/code&gt; is automatically announced by screen readers and gives an important feedback to users. Changing the text of the button would make the perceived information a bit confusing. Screen readers will read out:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Show details {collapsed}"
&lt;/li&gt;&lt;li&gt;"Hide details {expanded}"
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Worth also considering the potential confusion for many other users, for example users with cognitive impairments, non tech-savvy users, etc.
&lt;/p&gt;
&lt;p&gt;
Visually, I'm not sure what's the value added by changing the button text. It's pretty clear the button toggles the content. Instead, what is missing is a visual representation of the collapsed / expanded state. Not sure this visual representation of the state is really necessary in this specific case, but in several other places in the WordPress admin a down / up arrow icon is used for this purpose.
&lt;/p&gt;
&lt;p&gt;
From an UI perspective, one more source of confusion is that this control is a button but looks like a link. Alas, this happens in many other places in the admin. As a user, I would be in doubt: as it looks like a link, does this mean it navigates to another page? Ideally, buttons should look like buttons. This is part of a broader issue though and it would need some design feedback.
&lt;/p&gt;
&lt;p&gt;
To recap: I'd rather consider to not use the word "Show" to start with. Worth noting also the word "toggle" shouldn't be used, as it's very hard to translate in many languages, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34753" title="#34753: enhancement: Remove use of &amp;#34;Toggle&amp;#34; in strings (new)"&gt;#34753&lt;/a&gt;. I'd recommend to simplify and just not use "Show". A simpler wording like "More details" or even just "Details" could work. Optionally, worth considering using a down / up arrow. Visually and semantically this would be perceived as something like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"More details {down arrow} {collapsed}"
&lt;/li&gt;&lt;li&gt;"More details {up arrow} {expanded}"
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44949 (Add support for JSON Schema string pattern to REST API) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 22 Sep 2018 12:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44949#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44949#comment:6/1537619598048207</guid>
      <description>&lt;p&gt;
Regarding the PCRE/u modifier:
&lt;/p&gt;
&lt;p&gt;
There exists the &lt;code&gt;_wp_can_use_pcre_u()&lt;/code&gt; core function, used in the compatible version of &lt;code&gt;mb_substr()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In &lt;a href="https://core.trac.wordpress.org/ticket/44296#comment:9"&gt;https://core.trac.wordpress.org/ticket/44296#comment:9&lt;/a&gt; I noticed that core seems to make &lt;code&gt;PCRE_UTF8&lt;/code&gt; checks inconsistently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44966 (Safari + Voiceover does not allow tags entry in editor) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 11:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44966#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44966#comment:4/1537616820595834</guid>
      <description>&lt;p&gt;
@konainm interesting, thanks. I'd rather recommend to be as clean as possible. An empty placeholder sounds like a small hack to me. Instead, I'd recommend to just remove the paragraph and adjust the margins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44749 (Redesign input fields, checkboxes and other form components for ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 11:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44749#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44749#comment:1/1537616173696467</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Previously: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44606" title="#44606: defect (bug): Color contrast: input fields, textareas, select elements etc. (new)"&gt;#44606&lt;/a&gt;, &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/35596" title="#35596: defect (bug): Color contrast: checkboxes and radio buttons (assigned)"&gt;#35596&lt;/a&gt;, and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38150" title="#38150: defect (bug): Stop using dashicons to show checked state of checkboxes (new)"&gt;#38150&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44778 (Update to TinyMCE 4.8.2) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 11:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44778#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44778#comment:5/1537615933891444</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44778 (Update to TinyMCE 4.8.2) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 11:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44778#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44778#comment:4/1537615878877409</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket and the patch. To keep the ticket reports clean, I'm going to remove the accessibility focus. While TinyMCE new versions often bring in small accessibility improvements, this issue is not strictly related to web content accessibility (a11y).
&lt;/p&gt;
&lt;p&gt;
Looking at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44134" title="#44134: task (blessed): Update to TinyMCE 4.7.13 (closed: fixed)"&gt;#44134&lt;/a&gt; I guess this ticket should be a "task" rather than a bug. /Cc @azaozz
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44781 (Filter for Bypass or customize admin notification email after site creation) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 11:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44781#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44781#comment:6/1537614716955778</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket and the patch, and welcome to Trac. To keep the ticket reports clean, I'm going to remove the accessibility focus, as this issue is not related to web content accessibility (a11y).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44851 (Offer LTS (Long Term Support) version of WordPress 4.9.x when 5.0 ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 22 Sep 2018 10:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44851#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44851#comment:11/1537613544757244</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Well, I guess this ticket should be discussed &lt;em&gt;before&lt;/em&gt; 5.0 :) so I'm going to set the milestone accordingly, for better visibility. Leaving it in "Awaiting Review" doesn't make much sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44982 (Add additional prefix suppression for Homepage in nav menu) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 10:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44982</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44982/1537610959602786</guid>
      <description>&lt;p&gt;
A suppression for the 'Home: ' prefix was added here;
&lt;a href="https://core.trac.wordpress.org/ticket/25410#comment:11"&gt;https://core.trac.wordpress.org/ticket/25410#comment:11&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With Homepage being synonymous with Home and having a translation available in core am wondering if the code here should also check for Homepage before applying the prefix;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/f4e1cf65c1f13a4ffb07e292e477890de5601afb/wp-admin/includes/class-walker-nav-menu-checklist.php#L97"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/f4e1cf65c1f13a4ffb07e292e477890de5601afb/wp-admin/includes/class-walker-nav-menu-checklist.php#L97&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37782 (Duplicate Page Entry in View All Pages when generating a Menu) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 10:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37782#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37782#comment:5/1537610677518337</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've posted an initial loop to suppress the duplicate home entry and would appreciate your review @SergeyBiryukov
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37782.diff attached to Ticket #37782</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 10:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37782/37782.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37782/37782.diff/1537610595596954</guid>
      <description>&lt;p&gt;
Suppress duplicate front_page menu item
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Sat, 22 Sep 2018 09:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:8/1537608771013106</guid>
      <description>&lt;p&gt;
@westonruter please look into this trac.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36860 (Introduce filter for users_have_content within delete action of users.php) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 09:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36860#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36860#comment:2/1537607380342330</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @lukecavanagh
&lt;/p&gt;
&lt;p&gt;
I've put together an initial patch for this but will require review and unit tests.
&lt;/p&gt;
&lt;p&gt;
I placed the filter prior to the WordPress checks to avoid plugins suppressing them and possibly losing users content. If needed another filter can be added after to support suppression but I fear that may have negative consequences.
&lt;/p&gt;
&lt;p&gt;
If you could review and help me with next steps I'd appreciate the help.
&lt;/p&gt;
&lt;p&gt;
Cheers
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36860.diff attached to Ticket #36860</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 09:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36860/36860.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36860/36860.diff/1537607071714287</guid>
      <description>&lt;p&gt;
Initial Concept
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44538 (WordPress does not offer a way to show WHAT changed when it nags me ...) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 08:17:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44538#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44538#comment:8/1537604231611089</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44538#comment:7" title="Comment 7"&gt;javorszky&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@idea15 brought this to my attention while I was working on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/44669" title="#44669: defect (bug): Privacy Notification doesn't clear after dismissing notification (assigned)"&gt;#44669&lt;/a&gt;. My question there was "why are we storing the entire text and everything along with it in meta instead of storing a hash of the last content and comparing that?", however if diffs are an enhancement, then that would make sense.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This makes sense, maybe as a dictionary of hashes so core can flag/hightlight individual sections that've changed.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44538#comment:7" title="Comment 7"&gt;javorszky&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A few other questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;would it make sense to create an internal hidden post type for these and add the different versions of the suggested privacy notice texts to those? That way the built in diff utility that revisions uses could be reused.
&lt;/li&gt;&lt;li&gt;for different plugins an internal taxonomy could be used with taxonomy slugs as the theme / plugin slugs (with a special one for WP internal)
&lt;/li&gt;&lt;li&gt;that also means that we could store the array of IDs of this hidden post type against the privacy policy page on the meta thereby reducing the amount of data that's getting stored in the postmeta table
&lt;/li&gt;&lt;li&gt;versioning could be done according to date, or, potentially according to version number of core / plugins. That way one wouldn't need to figure out "what version of core was installed on 8th September 2018 at 15:43?"
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I wonder if this advanced functionality of versioning and the ability to diff would make more sense as a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44669 (Privacy Notification doesn't clear after dismissing notification) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 08:13:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44669#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44669#comment:9/1537604036226268</guid>
      <description>&lt;p&gt;
I was going to propose the Dismiss Privacy Nag plugin - &lt;a class="ext-link" href="https://wordpress.org/plugins/dismiss-privacy-nag/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/dismiss-privacy-nag/&lt;/a&gt; &lt;br /&gt;
But that is for the pointer and doesn't cover this specific case
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44669 (Privacy Notification doesn't clear after dismissing notification) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 07:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44669#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44669#comment:8/1537601698797911</guid>
      <description>&lt;p&gt;
As to the behaviour of the notice on the Privacy Settings page this ticket discusses I wonder if this would make more sense as custom code or plugin land as disabling the notice completely is a single line;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'admin_notices'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Privacy_Policy_Content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'policy_text_changed_notice'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
For the basic user who hasn't gotten their policy created professionally the nag is a helpful prompt to understand their Privacy coverage has changed.
&lt;/p&gt;
&lt;p&gt;
That aside if it's deemed this moves forward an AJAX call would have to be added on a &lt;code&gt;$document.on( 'click', '.policy-text-updated.is-dismissable .notice-dismiss'...&lt;/code&gt; to force the update of &lt;code&gt;_wp_suggested_privacy_policy_content&lt;/code&gt; post meta content so as to make &lt;code&gt;$new == $old&lt;/code&gt; as this is how the &lt;code&gt;text_change_check&lt;/code&gt; is handled;&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/f7ba175491b725a5f3d636072c8b432774d38ae3/wp-admin/includes/misc.php#L1345-L1417"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/f7ba175491b725a5f3d636072c8b432774d38ae3/wp-admin/includes/misc.php#L1345-L1417&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44669 (Privacy Notification doesn't clear after dismissing notification) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 07:16:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44669#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44669#comment:7/1537600587070186</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44669#comment:4" title="Comment 4"&gt;norcross&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe the UI has changed a bit, but the same issue is presented on the post editor itself. I'm happy to write the patch, but curious if anyone has a preferred approach (ajax call + option setting?)
&lt;/p&gt;
&lt;p&gt;
example: &lt;a class="ext-link" href="https://www.dropbox.com/s/vfoqd6snlw7iprs/privacy-guide-notice.png?dl=0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.dropbox.com/s/vfoqd6snlw7iprs/privacy-guide-notice.png?dl=0&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @norcross, patches are always appreciated
&lt;/p&gt;
&lt;p&gt;
The example you provided is a unique notice from the one discussed in this ticket so I've created a unique one for your concern. I'd love your thoughts and input there.
Ticket - &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/44981" title="#44981: enhancement: Make notice on Privacy Policy page to 'Check out our guide' dismissable (assigned)"&gt;#44981&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0Yv8SNzA.png attached to Ticket #44981</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 07:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44981/0Yv8SNzA.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44981/0Yv8SNzA.png/1537600555075456</guid>
      <description>&lt;p&gt;
Notice to make dismissable
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44981 (Make notice on Privacy Policy page to 'Check out our guide' dismissable) created</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Sat, 22 Sep 2018 07:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44981/1537600538633366</guid>
      <description>&lt;p&gt;
This ticket branches from &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/44669" title="#44669: defect (bug): Privacy Notification doesn't clear after dismissing notification (assigned)"&gt;#44669&lt;/a&gt; with this comment from @norcross;
&lt;a href="https://core.trac.wordpress.org/ticket/44669?replyto=4#comment:4"&gt;https://core.trac.wordpress.org/ticket/44669?replyto=4#comment:4&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The notice reference can be found here;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/f7ba175491b725a5f3d636072c8b432774d38ae3/wp-admin/includes/misc.php#L1613-L1629"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/f7ba175491b725a5f3d636072c8b432774d38ae3/wp-admin/includes/misc.php#L1613-L1629&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With this notice the &lt;code&gt;is-dismissable&lt;/code&gt; class could be added;
&lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Action_Reference/admin_notices"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Action_Reference/admin_notices&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If a new Privacy Policy page is created this notice should re-appear until dismissed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44980 (When using a mobile browser (iOS 12) and the Visual Editor you won’t ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Sat, 22 Sep 2018 06:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44980#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44980#comment:1/1537597391983835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44949.3.patch attached to Ticket #44949</title>
      
        <dc:creator>jason_the_adams</dc:creator>

      <pubDate>Sat, 22 Sep 2018 03:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44949/44949.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44949/44949.3.patch/1537587370651864</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44949 (Add support for JSON Schema string pattern to REST API) updated</title>
      
        <dc:creator>jason_the_adams</dc:creator>

      <pubDate>Sat, 22 Sep 2018 03:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44949#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44949#comment:5/1537587352943719</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
My understanding is that the &lt;code&gt;[a-zA-Z]&lt;/code&gt; part is the actual regex and for convenience purposes you can pass flags to the regex by using the delimiter syntax to instantiate the &lt;code&gt;RegExp&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, I'm confused by this sentence. It sounds like you're saying the pattern would include the delimiter and flags, but I know that's not what you're saying because you said I should change the current patch to not do that. So... I'm not sure what you're saying, then. 😄
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Interestingly, looking at the PHP validators, they all use the &lt;code&gt;u&lt;/code&gt; flag. Presumably to reject non UTF-8 characters. I believe PHP requires JSON to be in UTF-8. To be consistent, we might also want to add this flag so it rejects non UTF-8 strings since request data might not come from JSON.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can't say I've played around with that flag (just did to understand it). Makes sense and seems like it's good to have when one wants it.
&lt;/p&gt;
&lt;p&gt;
Adding another patch to reflect what we've discussed so far.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44169 (New filter to short circuit WP_User_Query results) updated</title>
      
        <dc:creator>10up</dc:creator>

      <pubDate>Sat, 22 Sep 2018 03:01:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44169#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44169#comment:9/1537585264917190</guid>
      <description>&lt;p&gt;
Thanks, Adam!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44169.2.diff attached to Ticket #44169</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 22 Sep 2018 02:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44169/44169.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44169/44169.2.diff/1537582341315067</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44980 (When using a mobile browser (iOS 12) and the Visual Editor you won’t ...) created</title>
      
        <dc:creator>Geost</dc:creator>

      <pubDate>Fri, 21 Sep 2018 23:46:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44980</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44980/1537573560543276</guid>
      <description>&lt;p&gt;
Hi folks!
&lt;/p&gt;
&lt;p&gt;
I was able to reproduce this issue by using the latest version of WordPress.org and also on a WordPress.com site.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Steps to reproduce the problem:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Log in to your WordPress site using a browser (Safari or Chrome) on any device with iOS 12.
&lt;/li&gt;&lt;li&gt;Edit or create a post/page with text on it using the Visual Editor
&lt;/li&gt;&lt;li&gt;Select/highlight any word. Then try to highlight the next or previous word.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;What happens&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
It won't let you highlight what you want. Instead, it will highlight all the paragraph or nothing.
Here's a video:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://cld.wthms.co/NwMb1X"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cld.wthms.co/NwMb1X&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(You will notice this only happens with the Visual Editor and not the Text Editor)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What I expected&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
To be able to highlight the text as in the Text Editor
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Devices where I was able to replicate this:&lt;/strong&gt;
iPhone 6 Plus and iPad Air 2 (A1567)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;OS:&lt;/strong&gt;
iOS 12.0
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Browser:&lt;/strong&gt;
Safari &amp;amp; Chrome
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44169 (New filter to short circuit WP_User_Query results) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 21 Sep 2018 22:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44169#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44169#comment:8/1537570448587550</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@tlovett1 - Thanks for the ticket, patch and tests! This looks good and I can see how this would be useful!
&lt;/p&gt;
&lt;p&gt;
I posted a new combined diff with your patch and tests in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44169/44169.1.diff" title="Attachment '44169.1.diff' in Ticket #44169"&gt;44169.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44169/44169.1.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The diff is unfortunately complicated and hard to look at because of the existing lines that are intended in the patch (because they sit inside a conditional); the diff has them oddly interspersed and that makes it hard to see what you are actually changing.
&lt;/p&gt;
&lt;p&gt;
I created &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44169/44169-indent-fixed.diff" title="Attachment '44169-indent-fixed.diff' in Ticket #44169"&gt;44169-indent-fixed.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44169/44169-indent-fixed.diff" title="Download"&gt;​&lt;/a&gt; as a workaround - in this diff i left the existing lines unindented so you can much more clearly see what is added by your patch. in this diff it is clearer that your code runs the filter passing null, then if the result is still null it runs the existing code that queries the database. if the result is not null it continues as normal with the results just after the existing database code executes.
&lt;/p&gt;
&lt;p&gt;
I'm seeing some test failures I'll look into: &lt;a class="ext-link" href="https://travis-ci.org/adamsilverstein/wordpress-develop-fork/jobs/431694171"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/adamsilverstein/wordpress-develop-fork/jobs/431694171&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'd love to see what @boonebgorges thinks since he did so much of the original work on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36687" title="#36687: feature request: Feature to override WP_Query to provide results from other source (closed: fixed)"&gt;#36687&lt;/a&gt; and has a deep understanding of the implications of any changes here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44169-indent-fixed.diff attached to Ticket #44169</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 21 Sep 2018 22:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44169/44169-indent-fixed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44169/44169-indent-fixed.diff/1537568724775124</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44169.1.diff attached to Ticket #44169</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 21 Sep 2018 22:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44169/44169.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44169/44169.1.diff/1537568714823539</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 20:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280#comment:28/1537563464819931</guid>
      <description>&lt;p&gt;
Diving back into this today, I thought of an issue with the conditionals in &lt;code&gt;wp_get_term_object_count()&lt;/code&gt;. The first condition checked is &lt;code&gt;0 === $term-&amp;gt;count&lt;/code&gt;. If the object types registered to a taxonomy change and the count is 0, a recount will not occur until a term is added or removed from an object. This could result in inaccurate counts,
&lt;/p&gt;
&lt;p&gt;
Maybe we have been thinking about this the wrong way. Maybe, instead of checking the number of object types registered to a taxonomy (which could be the same even if you remove one taxonomy and add another), the object types themselves should be compared. Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$new_types = array_diff( $registered_object_types, $counted_object_types );
$missing_counted_types = array_diff( $counted_object_types, $registered_object_types );
if ( ! empty( $new_types ) || ! empty( $missing_counted_types ) {
    // Object types have changed. Recount.
} elseif ( 0 === $term-&amp;gt;count ) {
    // Check for 0 count.
} else {
    $count = wp_get_term_object_count_from_meta( $term_id, $object_type );
}
&lt;/pre&gt;&lt;p&gt;
This would also require &lt;code&gt;_wp_counted_object_types&lt;/code&gt; for &lt;em&gt;every&lt;/em&gt; term, which I am also undecided on and want to think about a bit more. The only alternative I can think of in the current state is storing a cache as an option when there is only one object type on a taxonomy. But, I think that introduces some needless complexity.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What information would the error provide to a developer?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The scenarios where a count could not be determined, I think, are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;An error occurred trying to recount
&lt;/li&gt;&lt;li&gt;Post type does not exist.
&lt;/li&gt;&lt;li&gt;A custom callback was not properly implemented.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44966 (Safari + Voiceover does not allow tags entry in editor) updated</title>
      
        <dc:creator>konainm</dc:creator>

      <pubDate>Fri, 21 Sep 2018 20:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44966#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44966#comment:3/1537562767795677</guid>
      <description>&lt;p&gt;
@parbaugh @afercia
&lt;/p&gt;
&lt;p&gt;
This problem can also be fixed by adding placeholder text to the input box. Even a blank placeholder with a single space works.
&lt;/p&gt;
&lt;p&gt;
Please see the modified code for the tags meta box below:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function tagsdiv-post_tag( $post, $box ) {
	$defaults = array( 'taxonomy' =&amp;gt; 'post_tag' );
	if ( ! isset( $box['args'] ) || ! is_array( $box['args'] ) ) {
		$args = array();
	} else {
		$args = $box['args'];
	}
	$r = wp_parse_args( $args, $defaults );
	$tax_name = esc_attr( $r['taxonomy'] );
	$taxonomy = get_taxonomy( $r['taxonomy'] );
	$user_can_assign_terms = current_user_can( $taxonomy-&amp;gt;cap-&amp;gt;assign_terms );
	$comma = _x( ',', 'tag delimiter' );
	$terms_to_edit = get_terms_to_edit( $post-&amp;gt;ID, $tax_name );
	if ( ! is_string( $terms_to_edit ) ) {
		$terms_to_edit = '';
	}
?&amp;gt;
&amp;lt;div class="tagsdiv" id="&amp;lt;?php echo $tax_name; ?&amp;gt;"&amp;gt;
	&amp;lt;div class="jaxtag"&amp;gt;
	&amp;lt;div class="nojs-tags hide-if-js"&amp;gt;
		&amp;lt;label for="tax-input-&amp;lt;?php echo $tax_name; ?&amp;gt;"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;add_or_remove_items; ?&amp;gt;&amp;lt;/label&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;textarea name="&amp;lt;?php echo "tax_input[$tax_name]"; ?&amp;gt;" rows="3" cols="20" class="the-tags" id="tax-input-&amp;lt;?php echo $tax_name; ?&amp;gt;" &amp;lt;?php disabled( ! $user_can_assign_terms ); ?&amp;gt; aria-describedby="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;-desc"&amp;gt;&amp;lt;?php echo str_replace( ',', $comma . ' ', $terms_to_edit ); // textarea_escaped by esc_attr() ?&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
 	&amp;lt;?php if ( $user_can_assign_terms ) : ?&amp;gt;
	&amp;lt;div class="ajaxtag hide-if-no-js"&amp;gt;
		&amp;lt;label class="screen-reader-text" for="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;add_new_item; ?&amp;gt;&amp;lt;/label&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;input data-wp-taxonomy="&amp;lt;?php echo $tax_name; ?&amp;gt;" placeholder=" " type="text" id="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;" name="newtag[&amp;lt;?php echo $tax_name; ?&amp;gt;]" class="newtag form-input-tip" size="16" autocomplete="off" aria-describedby="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;-desc" value="" /&amp;gt;
		&amp;lt;input type="button" class="button tagadd" value="&amp;lt;?php esc_attr_e('Add'); ?&amp;gt;" /&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;p class="howto" id="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;-desc"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;separate_items_with_commas; ?&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;?php elseif ( empty( $terms_to_edit ) ): ?&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;no_terms; ?&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;?php endif; ?&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;ul class="tagchecklist" role="region"&amp;gt;&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php if ( $user_can_assign_terms ) : ?&amp;gt;
&amp;lt;p class="hide-if-no-js"&amp;gt;&amp;lt;button type="button" class="button-link tagcloud-link" id="link-&amp;lt;?php echo $tax_name; ?&amp;gt;" aria-expanded="false"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;choose_from_most_used; ?&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&amp;lt;?php
}
&lt;/pre&gt;&lt;p&gt;
I have also created a plugin that can be activated to push the above fix please find it on:
&lt;a class="ext-link" href="https://github.com/KonainM/NYU-Tags-Accessibility-Fix"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/KonainM/NYU-Tags-Accessibility-Fix&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44234 (Add missing unit tests for erasing personal data by username or email ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 19:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44234#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44234#comment:14/1537556774730284</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I only used the first input argument of those filter, so it's open for improvements to add the other arguments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think tests for filters should just confirm that a filtered value effects the outcome of the function, so this should be sufficient.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The unit tests are a useful documentation, so what about changing the order of methods; show first the methods that explain how it should work, then after that the methods for failing/error?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is just preference, but fine with your changes. I usually organize my tests in a top down manner, testing the scenarios from the first line of the function to the last.
&lt;/p&gt;
&lt;p&gt;
All your changes look good, though. I think this one is ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18450 (New safe action to add rewrite rules on) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 21 Sep 2018 18:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18450#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18450#comment:38/1537553252957136</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by cybr. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1537553251000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 21 Sep 2018 16:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:7/1537548475839155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mukeshpanchal27. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1537548474000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44845 (_get_list_table: Support for privacy requests tables) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 16:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44845#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44845#comment:2/1537546286606750</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like this idea, and the patch looks good. But, unfortunately, this is blocked by two issues.
&lt;/p&gt;
&lt;p&gt;
First, &lt;code&gt;_get_list_table()&lt;/code&gt; will try to include &lt;code&gt;wp-admin/includes/class-wp-' . $required . '-list-table.php&lt;/code&gt;, which does not exist yet (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43895" title="#43895: enhancement: Organize privacy functions into logical files and classes (new)"&gt;#43895&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Second, there is a problem with the privacy request class table names that will need to be resolved. The class names do not follow the correct pattern. &lt;code&gt;WP_Privacy_Data_Export_Requests_Table&lt;/code&gt;, for example should be &lt;code&gt;WP_Privacy_Data_Export_Requests_List_Table&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When a class is in its own file, the name should be &lt;code&gt;class-actualclassname.php&lt;/code&gt;. In the current state, the file for &lt;code&gt;WP_Privacy_Data_Export_Requests_Table&lt;/code&gt; would be &lt;code&gt;class-wp-privacy-data-export-requests-table.php&lt;/code&gt;, which does not match the pattern &lt;code&gt;_get_list_table()&lt;/code&gt; expects. Changing the class name is a backward compatibility issue, so it needs to be handled carefully.
&lt;/p&gt;
&lt;p&gt;
Going to move this to 5.0 for visibility and because this is at a minimum blocked by &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43895" title="#43895: enhancement: Organize privacy functions into logical files and classes (new)"&gt;#43895&lt;/a&gt;. Ideally, both of these tickets should land in 5.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43895 (Organize privacy functions into logical files and classes) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 15:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43895#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43895#comment:5/1537545377875231</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44845" title="#44845: enhancement: _get_list_table: Support for privacy requests tables (new)"&gt;#44845&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 21 Sep 2018 15:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963#comment:40/1537543016577802</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by blobfolio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1537543016000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44976.2.patch attached to Ticket #44976</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 14:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/44976.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/44976.2.patch/1537541872705534</guid>
      <description>&lt;p&gt;
Updated patch. change array_search to in_array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44979 (Parameter 1 to wp_default_styles() expected to be a reference, value given) created</title>
      
        <dc:creator>jqz</dc:creator>

      <pubDate>Fri, 21 Sep 2018 13:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44979/1537537711927091</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37772" title="#37772: defect (bug): Not working &amp;#34;wp_default_styles&amp;#34; on PHP 7.1.0 (closed: fixed)"&gt;#37772&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The bug still manifests if the UOPZ extension is loaded.
&lt;/p&gt;
&lt;p&gt;
(It is a PHP warning, so functionality is okay, but log files will get cluttered and performance hit as server writes to log file on each page request.)
&lt;/p&gt;
&lt;p&gt;
Environment:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Windows 10 x64
&lt;/li&gt;&lt;li&gt;Apache 2.4.27
&lt;/li&gt;&lt;li&gt;PHP 7.1.9 VC14-x64 Thread Safe
&lt;/li&gt;&lt;li&gt;UOPZ extension 5.0.2 (PHP 7.1 Thread Safe x64 - &lt;a class="ext-link" href="https://pecl.php.net/package/uopz/5.0.2/windows"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://pecl.php.net/package/uopz/5.0.2/windows&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fresh install of WordPress 4.9.8.
&lt;/p&gt;
&lt;p&gt;
It can be fixed by removing the &lt;code&gt;&amp;amp;&lt;/code&gt; from the function parameter declaration for &lt;code&gt;wp_default_styles()&lt;/code&gt; and &lt;code&gt;wp_default_scripts()&lt;/code&gt; - the &lt;code&gt;&amp;amp;&lt;/code&gt; is not required as the parameter is an object and thus the original object is referenced in any case.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44236 (Maintain consistency between privacy export report and archive filenames) updated</title>
      
        <dc:creator>GripsArt</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44236#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44236#comment:16/1537534752608815</guid>
      <description>&lt;p&gt;
before sending a new patch, i want discuss these three points:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The filter can add characters not supported by the file system.
&lt;/li&gt;&lt;li&gt;The filter can add non-unique file names and override previous files.
&lt;/li&gt;&lt;li&gt;If the filter returns an empty string, the file becomes: .html.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
i talked with some other devs on the contributer day in Würzburg, we think it is not the job of a filter to protect for bad using from plugins/themes.
&lt;/p&gt;
&lt;p&gt;
@birgire
@desrosj
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44978 (Reset admin mail not receiving confirmation) closed</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44978#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44978#comment:1/1537533593101246</guid>
      <description>invalid: &lt;p&gt;
Hi @webdeveloper2018, Welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44978 (Reset admin mail not receiving confirmation) created</title>
      
        <dc:creator>webdeveloper2018</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:28:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44978/1537532936578791</guid>
      <description>&lt;p&gt;
Hello Support,
&lt;/p&gt;
&lt;p&gt;
For &lt;a class="ext-link" href="https://www.ustunner.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.ustunner.com/&lt;/a&gt; site, I am trying to change Email Address        from backend General -&amp;gt; Email Address. But it not sending any confirmation email on new email to confirm email address. Let me know what I need to do to fix this issue.
&lt;/p&gt;
&lt;p&gt;
Waiting for your kind reply.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44977 (Transient fill fail delete to itself if it's timeout option is missing) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:26:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44977#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44977#comment:1/1537532775914696</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:6/1537532099514496</guid>
      <description>&lt;p&gt;
You patch look great. Kindly change array_search to a simply in_array. Array_search is an overkill for something as simple as this.
&lt;/p&gt;
&lt;p&gt;
I don’t have the time now otherwise I will do it myself when I am free.
&lt;/p&gt;
&lt;p&gt;
Do that please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:01:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:5/1537531273333482</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44976.patch attached to Ticket #44976</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 11:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/44976.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/44976.patch/1537530856496624</guid>
      <description>&lt;p&gt;
New working patch with thee new functions.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 11:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:4/1537530759479945</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Collizo4sky, So you want to deregister control type not control.
&lt;/p&gt;
&lt;p&gt;
I have tested your patch and found that it is not remove control type when i call below function in theme functions.php file.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; $wp_customize-&amp;gt;deregister_control_type( 'WP_Customize_Color_Control' ); &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
i have checked your code and found that it's return notice when we try to deregister any controls. You can please try rewise patch that i have do and added two new functions to deregister panel and section also.
&lt;/p&gt;
&lt;p&gt;
After applying patch you can check like below functions.
&lt;/p&gt;
&lt;p&gt;
To deregister any control type add below function in &lt;code&gt; customize_register &lt;/code&gt; action like below
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;customize_deregister_control_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;deregister_control_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Customize_Color_Control'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customize_deregister_control_type'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To deregister any panel type add below function in &lt;code&gt; customize_register &lt;/code&gt; action like below
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;customize_deregister_panel_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;deregister_panel_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Customize_Themes_Panel'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customize_deregister_panel_type'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To deregister any section type add below function in &lt;code&gt; customize_register &lt;/code&gt; action like below
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;customize_deregister_section_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;deregister_section_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Customize_Section'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customize_deregister_section_type'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44977 (Transient fill fail delete to itself if it's timeout option is missing) created</title>
      
        <dc:creator>nlozovan</dc:creator>

      <pubDate>Fri, 21 Sep 2018 11:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44977/1537529144362862</guid>
      <description>&lt;p&gt;
Just faced this issue - for some reason, the transient was not deleting itself. While checking the DB, the option with the transient was there, while the timeout option was missing (probably a glitch while saving to DB).
Now, if you check get_transient() in option.php (quick link &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-includes/option.php#L0"&gt;https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-includes/option.php#L0&lt;/a&gt; ) you can see that these are deleted only if both exist and both pass the test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[...]
 if ( false !== $timeout &amp;amp;&amp;amp; $timeout &amp;lt; time() ) { DELETING TRANSIENT}
[...]
&lt;/pre&gt;&lt;p&gt;
Otherwise transient will hang... forever. This should be tuned up so it also checks that these options exist, and delete transient if timeout is absolete.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 09:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:3/1537522453447244</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44976#comment:2" title="Comment 2"&gt;mukesh27&lt;/a&gt;:
remove_control() removes a control and not the control type. These are two different thing. Ask yourself, why do we have to register a control type when we already have add_control()
&lt;/p&gt;
&lt;p&gt;
A control and control type are two different concept.
&lt;/p&gt;
&lt;p&gt;
The former is what is shown on customizer and the latter is the php Class definition of the control.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Collizo4sky, remove_control already remove the control for customizer so why we need other function for same functionality?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 08:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:2/1537517955085129</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Collizo4sky, remove_control already remove the control for customizer so why we need other function for same functionality?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:1/1537510997272048</guid>
      <description>&lt;p&gt;
Couldn't find how to remove the duplicate patch. So here we are. Two similar patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-customize-manager.2.diff attached to Ticket #44976</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:20:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.2.diff/1537510835540017</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>class-wp-customize-manager.diff attached to Ticket #44976</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.diff/1537510705144855</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) created</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:17:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976/1537510644453830</guid>
      <description>&lt;p&gt;
Today was the time I wish I am able to remove a registered customizer control.
&lt;/p&gt;
&lt;p&gt;
I also have a patch to implement a deregister_control_type()
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>paragoninitiativeenterprises</dc:creator>

      <pubDate>Fri, 21 Sep 2018 05:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:41/1537508907108184</guid>
      <description>&lt;p&gt;
We released &lt;a class="ext-link" href="https://github.com/paragonie/sodium_compat/releases/tag/v1.6.6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;sodium_compat v1.6.6&lt;/a&gt; tonight, which introduced a &lt;em&gt;significant&lt;/em&gt; speedup on 32-bit platforms (i.e. &lt;code&gt;PHP_INT_SIZE === 4&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I believe it is now reasonably practical to consider Ed25519 signature verification on future WordPress updates.
&lt;/p&gt;
&lt;p&gt;
Questions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;What are the specific infrastructure blockers on the WordPress.org side that need to be resolved before my patches can be considered for merging?
&lt;ul&gt;&lt;li&gt;To be preemptive, demanding HSM support is &lt;a class="ext-link" href="https://www.psychologytoday.com/us/blog/happiness-in-world/201106/why-perfect-is-the-enemy-good"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;making perfect the enemy of good&lt;/a&gt;. But even if that demand is still on the table, YubiHSM supports Ed25519 so this problem is solved. Surely the companies that depend on WordPress can swing for one?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What additional code changes need to be made to accommodate this patch?
&lt;ul&gt;&lt;li&gt;e.g. making sure update servers push the Ed25519 header alongside the update file
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What are the social (and/or office-political) objections to this change?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
In the event of a security concern, I'd like to remind everyone that libsodium is in the PHP standard library as of 7.2, so any concerns over the security of Ed25519 need to be raised in a lot of places (and probably published on the IACR if you've discovered a new attack).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
As far as code audits go, I'm not sure what to suggest.
&lt;/p&gt;
&lt;p&gt;
The quotes I received ranged from $2k to $4k per person-day, for a minimum of two weeks. One firm issued a flat rate quote in the $20-30k range. This isn't the sort of thing you can solve with Fiverr.
&lt;/p&gt;
&lt;p&gt;
But more pertinently:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;None of the firms who specialize in cryptography (save ours) also specializes in PHP.
&lt;/li&gt;&lt;li&gt;None of the software security firms specializing in PHP that we're aware of have cryptography experts on staff.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A first-party cryptography audit is &lt;a class="ext-link" href="https://www.schneier.com/blog/archives/2011/04/schneiers_law.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;useless&lt;/a&gt;; only through third party verification can we hope to gain confidence that a specific implementation is secure.
&lt;/p&gt;
&lt;p&gt;
This presents a unique challenge for us: Who else has the prerequisite experience and specialized domain knowledge to check our work? Furthermore, an audit of sodium_compat would also require auditing the various PHP versions that WordPress supports. To wit:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PHP 5.2.4
&lt;/li&gt;&lt;li&gt;PHP 5.2.5
&lt;/li&gt;&lt;li&gt;PHP 5.2.6
&lt;/li&gt;&lt;li&gt;PHP 5.2.7
&lt;/li&gt;&lt;li&gt;PHP 5.2.8
&lt;/li&gt;&lt;li&gt;PHP 5.2.9
&lt;/li&gt;&lt;li&gt;PHP 5.2.10
&lt;/li&gt;&lt;li&gt;PHP 5.2.11
&lt;/li&gt;&lt;li&gt;PHP 5.2.12
&lt;/li&gt;&lt;li&gt;PHP 5.2.13
&lt;/li&gt;&lt;li&gt;PHP 5.2.14
&lt;/li&gt;&lt;li&gt;PHP 5.2.15
&lt;/li&gt;&lt;li&gt;PHP 5.2.16
&lt;/li&gt;&lt;li&gt;PHP 5.3.0
&lt;/li&gt;&lt;li&gt;PHP 5.3.1
&lt;/li&gt;&lt;li&gt;PHP 5.3.2
&lt;/li&gt;&lt;li&gt;PHP 5.3.3
&lt;/li&gt;&lt;li&gt;PHP 5.3.4
&lt;/li&gt;&lt;li&gt;PHP 5.3.5
&lt;/li&gt;&lt;li&gt;PHP 5.3.6
&lt;/li&gt;&lt;li&gt;PHP 5.3.7
&lt;/li&gt;&lt;li&gt;PHP 5.3.8
&lt;/li&gt;&lt;li&gt;PHP 5.3.9
&lt;/li&gt;&lt;li&gt;PHP 5.3.10
&lt;/li&gt;&lt;li&gt;PHP 5.3.11
&lt;/li&gt;&lt;li&gt;PHP 5.3.12
&lt;/li&gt;&lt;li&gt;PHP 5.3.13
&lt;/li&gt;&lt;li&gt;PHP 5.3.14
&lt;/li&gt;&lt;li&gt;PHP 5.3.15
&lt;/li&gt;&lt;li&gt;PHP 5.3.16
&lt;/li&gt;&lt;li&gt;PHP 5.3.17
&lt;/li&gt;&lt;li&gt;PHP 5.3.18
&lt;/li&gt;&lt;li&gt;PHP 5.3.19
&lt;/li&gt;&lt;li&gt;PHP 5.3.20
&lt;/li&gt;&lt;li&gt;PHP 5.3.21
&lt;/li&gt;&lt;li&gt;PHP 5.3.22
&lt;/li&gt;&lt;li&gt;PHP 5.3.23
&lt;/li&gt;&lt;li&gt;PHP 5.3.24
&lt;/li&gt;&lt;li&gt;PHP 5.3.25
&lt;/li&gt;&lt;li&gt;PHP 5.3.26
&lt;/li&gt;&lt;li&gt;PHP 5.3.27
&lt;/li&gt;&lt;li&gt;PHP 5.3.28
&lt;/li&gt;&lt;li&gt;PHP 5.3.29
&lt;/li&gt;&lt;li&gt;PHP 5.4.0
&lt;/li&gt;&lt;li&gt;PHP 5.4.1
&lt;/li&gt;&lt;li&gt;PHP 5.4.2
&lt;/li&gt;&lt;li&gt;PHP 5.4.3
&lt;/li&gt;&lt;li&gt;PHP 5.4.4
&lt;/li&gt;&lt;li&gt;PHP 5.4.5
&lt;/li&gt;&lt;li&gt;PHP 5.4.6
&lt;/li&gt;&lt;li&gt;PHP 5.4.7
&lt;/li&gt;&lt;li&gt;PHP 5.4.8
&lt;/li&gt;&lt;li&gt;PHP 5.4.9
&lt;/li&gt;&lt;li&gt;PHP 5.4.10
&lt;/li&gt;&lt;li&gt;PHP 5.4.11
&lt;/li&gt;&lt;li&gt;PHP 5.4.12
&lt;/li&gt;&lt;li&gt;PHP 5.4.13
&lt;/li&gt;&lt;li&gt;PHP 5.4.14
&lt;/li&gt;&lt;li&gt;PHP 5.4.15
&lt;/li&gt;&lt;li&gt;PHP 5.4.16
&lt;/li&gt;&lt;li&gt;PHP 5.4.17
&lt;/li&gt;&lt;li&gt;PHP 5.4.18
&lt;/li&gt;&lt;li&gt;PHP 5.4.19
&lt;/li&gt;&lt;li&gt;PHP 5.4.20
&lt;/li&gt;&lt;li&gt;PHP 5.4.21
&lt;/li&gt;&lt;li&gt;PHP 5.4.22
&lt;/li&gt;&lt;li&gt;PHP 5.4.23
&lt;/li&gt;&lt;li&gt;PHP 5.4.24
&lt;/li&gt;&lt;li&gt;PHP 5.4.25
&lt;/li&gt;&lt;li&gt;PHP 5.4.26
&lt;/li&gt;&lt;li&gt;PHP 5.4.27
&lt;/li&gt;&lt;li&gt;PHP 5.4.28
&lt;/li&gt;&lt;li&gt;PHP 5.4.29
&lt;/li&gt;&lt;li&gt;PHP 5.4.30
&lt;/li&gt;&lt;li&gt;PHP 5.4.31
&lt;/li&gt;&lt;li&gt;PHP 5.5.0
&lt;/li&gt;&lt;li&gt;PHP 5.5.1
&lt;/li&gt;&lt;li&gt;PHP 5.5.2
&lt;/li&gt;&lt;li&gt;PHP 5.5.3
&lt;/li&gt;&lt;li&gt;PHP 5.5.4
&lt;/li&gt;&lt;li&gt;PHP 5.5.5
&lt;/li&gt;&lt;li&gt;PHP 5.5.6
&lt;/li&gt;&lt;li&gt;PHP 5.5.7
&lt;/li&gt;&lt;li&gt;PHP 5.5.8
&lt;/li&gt;&lt;li&gt;PHP 5.5.9
&lt;/li&gt;&lt;li&gt;PHP 5.5.10
&lt;/li&gt;&lt;li&gt;PHP 5.5.11
&lt;/li&gt;&lt;li&gt;PHP 5.5.12
&lt;/li&gt;&lt;li&gt;PHP 5.5.13
&lt;/li&gt;&lt;li&gt;PHP 5.5.14
&lt;/li&gt;&lt;li&gt;PHP 5.5.15
&lt;/li&gt;&lt;li&gt;PHP 5.5.16
&lt;/li&gt;&lt;li&gt;PHP 5.5.17
&lt;/li&gt;&lt;li&gt;PHP 5.5.18
&lt;/li&gt;&lt;li&gt;PHP 5.5.19
&lt;/li&gt;&lt;li&gt;PHP 5.5.20
&lt;/li&gt;&lt;li&gt;PHP 5.5.21
&lt;/li&gt;&lt;li&gt;PHP 5.5.22
&lt;/li&gt;&lt;li&gt;PHP 5.5.23
&lt;/li&gt;&lt;li&gt;PHP 5.5.24
&lt;/li&gt;&lt;li&gt;PHP 5.5.25
&lt;/li&gt;&lt;li&gt;PHP 5.5.26
&lt;/li&gt;&lt;li&gt;PHP 5.5.27
&lt;/li&gt;&lt;li&gt;PHP 5.5.28
&lt;/li&gt;&lt;li&gt;PHP 5.5.29
&lt;/li&gt;&lt;li&gt;PHP 5.5.30
&lt;/li&gt;&lt;li&gt;PHP 5.5.31
&lt;/li&gt;&lt;li&gt;PHP 5.5.32
&lt;/li&gt;&lt;li&gt;PHP 5.5.33
&lt;/li&gt;&lt;li&gt;PHP 5.5.34
&lt;/li&gt;&lt;li&gt;PHP 5.5.35
&lt;/li&gt;&lt;li&gt;PHP 5.5.36
&lt;/li&gt;&lt;li&gt;PHP 5.5.37
&lt;/li&gt;&lt;li&gt;PHP 5.5.38
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
... and those are just the &lt;a class="ext-link" href="https://secure.php.net/supported-versions.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;versions of PHP that are no longer supported by the PHP team&lt;/a&gt;!
&lt;/p&gt;
&lt;p&gt;
So if "we need an audit" is the big blocker issue, as Matt Mullenweg as expressed in the past, then it bears emphasizing the level of effort being demanded here.
&lt;/p&gt;
&lt;p&gt;
An auditor would be required to:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Verify that there are no security bugs in sodium_compat itself. This is the easy part.
&lt;/li&gt;&lt;li&gt;Verify that there are no security-affecting side-channel attacks made possible by the PHP interpreter (and/or OpCache).
&lt;/li&gt;&lt;li&gt;Verify that any null findings in step 2 hold for every PHP version I listed above, and also for all the versions that are still supported by the developers of PHP.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
A team of three security experts (consisting of at least one cryptographer) would likely burn months of their lives on making sure this is done right. And that's just for one audit; a single data point.
&lt;/p&gt;
&lt;p&gt;
Speaking of points, I hope mine is clear: Please tell me what the specific obstacles are to getting this merged, and I will do what I can to solve them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 21 Sep 2018 05:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:39/1537507163779710</guid>
      <description>&lt;p&gt;
Created &lt;a href="https://core.trac.wordpress.org/ticket/44975"&gt;https://core.trac.wordpress.org/ticket/44975&lt;/a&gt; for the ability to switch a non-date-floating post back into a date-floating post. So this ticket can just focus on allowing posts to remain "date floating" even when the &lt;code&gt;date&lt;/code&gt; parameter is provided in update requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44975 (REST API support switching draft to unscheduled) created</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 21 Sep 2018 05:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44975/1537506954026548</guid>
      <description>&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39953" title="#39953: enhancement: REST API: Do not update date when preparing post if date is known to ... (new)"&gt;#39953&lt;/a&gt; allows REST API clients to send a post's date in a POST request, and either leave the post as "date floating" (draft that says 'Publish immediately') switch it to be "non-date-floating" (draft that says 'Schedule for...').
&lt;/p&gt;
&lt;p&gt;
However, REST API clients cannot make a request to switch the post BACK to being "date floating" (mentioned on &lt;a href="https://core.trac.wordpress.org/ticket/39953#comment:25"&gt;https://core.trac.wordpress.org/ticket/39953#comment:25&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/ticket/39953#comment:34"&gt;https://core.trac.wordpress.org/ticket/39953#comment:34&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
This option isn't available in WordPress' default editor either (see &lt;a href="https://core.trac.wordpress.org/ticket/8368#comment:20"&gt;https://core.trac.wordpress.org/ticket/8368#comment:20&lt;/a&gt;). However, from my testing, WordPress.com's Calypso editor DOES allow this. Also there's a very old ticket suggesting it be added: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8368" title="#8368: enhancement: Scheduling post time behavior and language refinements (assigned)"&gt;#8368&lt;/a&gt;, so it seems reasonable that the REST API should support this (and maybe Gutenberg too someday).
&lt;/p&gt;
&lt;p&gt;
So how should a REST API client specify they want to switch a post back to date floating (say "Publish immediately" in the classic editor)?
&lt;/p&gt;
&lt;p&gt;
Should they provide a post's &lt;code&gt;date&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, or maybe even to the same value as &lt;code&gt;modified&lt;/code&gt;? (I suggest that last one because that's how you leave a currently-"date floating" post as-is, see &lt;a href="https://core.trac.wordpress.org/ticket/39953#comment:25"&gt;https://core.trac.wordpress.org/ticket/39953#comment:25&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>WPMS.jpg attached to Ticket #44974</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Fri, 21 Sep 2018 02:34:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44974/WPMS.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44974/WPMS.jpg/1537497296734350</guid>
      <description>&lt;p&gt;
Screen grab of incorrect wording
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44974 (On WordPress MultiSite &gt; Sites, when deactivating, the verbiage says ...) created</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Fri, 21 Sep 2018 02:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44974/1537497273255283</guid>
      <description>&lt;p&gt;
On WordPress MultiSite &amp;gt; Sites, when deactivating, the verbiage says "Deleted" rather than "Deactivated".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>