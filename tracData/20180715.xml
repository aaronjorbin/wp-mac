<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) reopened</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 15 Jul 2018 23:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:19/1531697934646191</guid>
      <description>&lt;p&gt;
Reopening for possible backport.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44195 ("Silence is golden" index.html generates output) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 15 Jul 2018 23:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44195#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44195#comment:18/1531697895457254</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43446" title="Privacy: Silence is golden and invisible.
&amp;#34;Be more discrete.&amp;#34; ..."&gt;43446&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Privacy: Silence is golden and invisible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"Be more discrete." declared matt in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3155" title="Be more discrete."&gt;[3155]&lt;/a&gt;, and since then, "Silence is Golden" has been the calling card of placeholder index files. Historically, these have been php files, but &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43012" title="Privacy: add means to export personal data by username or email ..."&gt;[43012]&lt;/a&gt; changed that and added index.html files for privacy export generated folders.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The php silence files produce no visible content. This adds consistency with these new html files in that there will be no visible content. Silence will fall when the question is asked.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44195" title="#44195: defect (bug): &amp;#34;Silence is golden&amp;#34; index.html generates output (closed: fixed)"&gt;#44195&lt;/a&gt;.&lt;br /&gt;
Props audrasjb, rafsuntaskin, Ov3rfly, johnbillion, pento&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43446]: Privacy: Silence is golden and invisible.  "Be more discrete." ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 15 Jul 2018 23:38:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43446/1531697894425549</guid>
      <description>&lt;p&gt;
Privacy: Silence is golden and invisible.
&lt;/p&gt;
&lt;p&gt;
"Be more discrete." declared matt in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3155" title="Be more discrete."&gt;[3155]&lt;/a&gt;, and since then, "Silence is Golden" has been the calling card of placeholder index files. Historically, these have been php files, but &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43012" title="Privacy: add means to export personal data by username or email ..."&gt;[43012]&lt;/a&gt; changed that and added index.html files for privacy export generated folders.
&lt;/p&gt;
&lt;p&gt;
The php silence files produce no visible content. This adds consistency with these new html files in that there will be no visible content. Silence will fall when the question is asked.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44195" title="#44195: defect (bug): &amp;#34;Silence is golden&amp;#34; index.html generates output (closed: fixed)"&gt;#44195&lt;/a&gt;.
Props audrasjb, rafsuntaskin, Ov3rfly, johnbillion, pento
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44586 (SQL mode test results broken in MySQL 8.0.11) created</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Jul 2018 23:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44586</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44586/1531696899868610</guid>
      <description>&lt;p&gt;
I have 2 failing tests related to SQL modes when using MySQL 8.0.11 locally:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_DB::test_set_sql_mode
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&amp;gt; 'IGNORE_SPACE'
-    1 =&amp;gt; 'NO_AUTO_CREATE_USER'
+    0 =&amp;gt; 'ERROR_FOR_DIVISION_BY_ZERO'
+    1 =&amp;gt; 'NO_ENGINE_SUBSTITUTION'
+    2 =&amp;gt; 'NO_ZERO_IN_DATE'
/tests/phpunit/includes/testcase.php:533
/tests/phpunit/tests/db.php:303
2) Tests_DB::test_set_allowed_incompatible_sql_mode
Failed asserting that an array contains 'ONLY_FULL_GROUP_BY'.
/tests/phpunit/tests/db.php:345
&lt;/pre&gt;&lt;p&gt;
A 3rd test failure is documented as part of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44384" title="#44384: defect (bug): InnoDB doesn't support SPATIAL indexes for query CREATE TEMPORARY TABLE (new)"&gt;#44384&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44384 (InnoDB doesn't support SPATIAL indexes for query CREATE TEMPORARY TABLE) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Sun, 15 Jul 2018 23:13:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44384#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44384#comment:1/1531696405969889</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm seeing a similar thing in the &lt;code&gt;test_spatial_indices&lt;/code&gt; test after installing MySQL 8.0.11 via Homebrew in OSX. When I look at that &lt;code&gt;$updates&lt;/code&gt; array, the message returned is &lt;code&gt;Changed type of wptests_spatial_index_test.spatial_value from geomcollection to geometrycollection&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The addition of the now preferred "geomcollection" name is listed as an incompatible change in the 8.0.11 release notes. &lt;a class="ext-link" href="https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-11.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dev.mysql.com/doc/relnotes/mysql/8.0/en/news-8-0-11.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm guessing we may need to do some version detection in this test.
&lt;/p&gt;
&lt;p&gt;
Edit: "Same thing" is wrong on my end. :) Different, but in the same test with likely a similar resolution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44042 (Hook for ‘delete_option’ behaviour required) updated</title>
      
        <dc:creator>RobertoDonPedro</dc:creator>

      <pubDate>Sun, 15 Jul 2018 22:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44042#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44042#comment:6/1531692901001714</guid>
      <description>&lt;p&gt;
@kkarpieszuk My software is a highly available virtualization layer, therefore I cannot accept a solution where a required option gets deleted, even if it is just for a fraction of a second.
&lt;/p&gt;
&lt;p&gt;
And I really do not understand why it is so hard to get this hook into core. The source is available yet, it does no harm and above this, it is completely in line with the already available hooks for add_option and update_option...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43789 (the_posts_pagination() outputs the slash at the first link) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 19:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43789#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43789#comment:3/1531683184675869</guid>
      <description>&lt;p&gt;
Attached a fix that seemingly works.
&lt;/p&gt;
&lt;p&gt;
What are the edge cases? Paginated loops inside shortcodes inserted in posts displayed on date archives?
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43789.diff attached to Ticket #43789</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 19:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43789/43789.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43789/43789.diff/1531683122045132</guid>
      <description>&lt;p&gt;
Prototype fix. Comments needed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29161 ($pagenow variable not set in admin pages on Windows systems) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 18:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29161#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29161#comment:3/1531680248921750</guid>
      <description>&lt;p&gt;
This sounds like a server configuration issue.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;PHP_SELF&lt;/code&gt; may indeed contain backslashes on Windows machines on certain servers (think very old Apache+mod_php or some old PHP-FPM version).
&lt;/p&gt;
&lt;p&gt;
Would be good to find out what server was being run. If this is a common configuration occurrence (probably not) &lt;code&gt;wp_fix_server_vars()&lt;/code&gt; should be fixing the path in &lt;code&gt;PHP_SELF&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43772 (Undefined property: WP_Error::$term_id in ...) updated</title>
      
        <dc:creator>mahnunchik</dc:creator>

      <pubDate>Sun, 15 Jul 2018 18:26:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43772#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43772#comment:5/1531679168484885</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43772#comment:4" title="Comment 4"&gt;soulseekah&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does this still happen or did you figure things out?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, this still happen if parent is null.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30049 (wp_load_translations_early does not without WPLANG defined) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 18:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30049#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30049#comment:13/1531678917433367</guid>
      <description>&lt;p&gt;
Attached a simple HTTP_ACCEPT_LANGUAGE-based locale detection.
&lt;/p&gt;
&lt;p&gt;
Regular expression based on a locale list from here &lt;a class="ext-link" href="https://stackoverflow.com/questions/3191664/list-of-all-locales-and-their-short-codes#3191729"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://stackoverflow.com/questions/3191664/list-of-all-locales-and-their-short-codes#3191729&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is in no way a substitute for the deprecated &lt;code&gt;WPLANG&lt;/code&gt; constant. We need to find a way to set the language for those notices without using &lt;code&gt;WPLANG&lt;/code&gt; now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30049.diff attached to Ticket #30049</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 18:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30049/30049.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30049/30049.diff/1531678822856133</guid>
      <description>&lt;p&gt;
HTTP_ACCEPT_LANGUAGE
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44585 (Docs: $wpdb-&gt;prepare should point to $wpdb-&gt;esc_like method) created</title>
      
        <dc:creator>felipeelia</dc:creator>

      <pubDate>Sun, 15 Jul 2018 18:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44585/1531678577313594</guid>
      <description>&lt;p&gt;
There is a broken link into &lt;code&gt;$wpdb-&amp;gt;prepare()&lt;/code&gt; docs: it points to &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/esc_like"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/esc_like&lt;/a&gt; where it should point to &lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/wpdb/esc_like/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/classes/wpdb/esc_like/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm not sure, but I guess it's generated from inline docs, and should be solved simply changing &lt;code&gt;{@see esc_like()}&lt;/code&gt; to &lt;code&gt;{@see wpdb::esc_like()}&lt;/code&gt; in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/wp-db.php#L1276"&gt;this line&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37640 (Add WPLANG to `.maintenance`) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 18:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37640#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37640#comment:2/1531678156402741</guid>
      <description>&lt;p&gt;
As you mentioned, &lt;code&gt;WPLANG&lt;/code&gt; is deprecated. Its definition might trigger a deprecated notice in the logs. Using it, even from core code is no longer recommended.
&lt;/p&gt;
&lt;p&gt;
Maybe WPLANG should be UNdeprecated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43960 (Support for sorting columns in WP_Privacy_Requests_Table) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sun, 15 Jul 2018 18:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43960#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43960#comment:16/1531677656082001</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43960/43960.4.diff" title="Attachment '43960.4.diff' in Ticket #43960"&gt;43960.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43960/43960.4.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The default sort is &lt;code&gt;Requested (post_date) DESC&lt;/code&gt;. First click on &lt;code&gt;Requested&lt;/code&gt; gives &lt;code&gt;post_date ASC&lt;/code&gt;. When other field's sorting is active, and we click again on &lt;code&gt;Requested&lt;/code&gt; it gives &lt;code&gt;post_date DESC&lt;/code&gt;. It also respects the search sorting by relevance.
&lt;/li&gt;&lt;li&gt;Takes the approach from here &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32416" title="#32416: defect (bug): List table: the link on the initial sorted column header should always ... (closed: wontfix)"&gt;#32416&lt;/a&gt;, regarding the initial order, while a more general approach is being worked on here &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/32170" title="#32170: defect (bug): List table: sortable column headers accessibility (assigned)"&gt;#32170&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Adds unit test for the sorting (all passes). We have an abstract class &lt;code&gt;WP_Privacy_Requests_Table&lt;/code&gt;, so we use same approach as in &lt;code&gt;Test_WP_Widget_Media&lt;/code&gt; using &lt;code&gt;getMockForAbstractClass()&lt;/code&gt;. In the tests I had to set the global &lt;code&gt;hook_suffix&lt;/code&gt; to handle the screen though, as setting it via mocked arguments input didn't seem to work or using &lt;code&gt;set_current_screen()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43960.4.diff attached to Ticket #43960</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sun, 15 Jul 2018 17:29:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43960/43960.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43960/43960.4.diff/1531675790022484</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44103 (change the type attribute of #menu_order from 'text' to 'number') updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 17:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44103#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44103#comment:1/1531675631917907</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for bring this to our attention. Patch attached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44103.diff attached to Ticket #44103</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 17:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44103/44103.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44103/44103.diff/1531675577923380</guid>
      <description>&lt;p&gt;
type="text" to type="number" on menu_order inputs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44584 (Custom HTML and Text widgets don't work (I can't edit them)) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 17:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44584#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44584#comment:3/1531674648459543</guid>
      <description>&lt;p&gt;
Hi there! Welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
This sounds like a plugin issue/theme incompatibility. Are you using the latest clean install of WordPress with a default theme and no other plugins active?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43772 (Undefined property: WP_Error::$term_id in ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sun, 15 Jul 2018 17:10:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43772#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43772#comment:4/1531674606027338</guid>
      <description>&lt;p&gt;
Does this still happen or did you figure things out?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>itowhid06</dc:creator>

      <pubDate>Sun, 15 Jul 2018 16:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:41/1531672398666942</guid>
      <description>&lt;p&gt;
Is it possible that a filepath is being passed as "&lt;a class="ext-link" href="file://path/file.ext"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;file://path/file.ext&lt;/a&gt;" ?
In that case the following code won't execute and we are back to square one!
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( false === strpos( $path, '://' ) ) {
        return false;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44583.patch attached to Ticket #44583</title>
      
        <dc:creator>burhandodhy</dc:creator>

      <pubDate>Sun, 15 Jul 2018 15:07:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44583/44583.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44583/44583.patch/1531667241914707</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44584 (Custom HTML and Text widgets don't work (I can't edit them)) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 15 Jul 2018 14:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44584#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44584#comment:1/1531664416560262</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44584 (Custom HTML and Text widgets don't work (I can't edit them)) created</title>
      
        <dc:creator>zarnicolaii123</dc:creator>

      <pubDate>Sun, 15 Jul 2018 14:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44584</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44584/1531663719349188</guid>
      <description>&lt;p&gt;
Hi,
The widgets custom HTML and text widgets don't work...I can add them to widget place but I can't edit them because the editor doesn't open. I try to deactivate all plugin but the problem persist. How can I fix this problem?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>lucasbustamante</dc:creator>

      <pubDate>Sun, 15 Jul 2018 12:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:110/1531658745970115</guid>
      <description>&lt;p&gt;
As a professional PHP developer, I've lost count on how many times my client's websites broke during migration because of images with accents being converted to symbols upon unzipping on Linux. Sanitizing filenames is a must.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ajax-actions.php attached to Ticket #44583</title>
      
        <dc:creator>burhandodhy</dc:creator>

      <pubDate>Sun, 15 Jul 2018 11:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44583/ajax-actions.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44583/ajax-actions.php/1531655931742283</guid>
      <description>&lt;p&gt;
Update file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44583 (Invalid comment for wp_ajax_update_widget()) created</title>
      
        <dc:creator>burhandodhy</dc:creator>

      <pubDate>Sun, 15 Jul 2018 11:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44583</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44583/1531655724217535</guid>
      <description>&lt;p&gt;
In ajax-actions.php, For the function
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_ajax_update_widget()
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
following comment is used "Ajax handler for saving a widget." whereas it should be "Ajax handler for updating a widget." because this function is been used for updating the widget not to save the widget.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40175 (Upload Validation / MIME Handling) updated</title>
      
        <dc:creator>okvee</dc:creator>

      <pubDate>Sun, 15 Jul 2018 08:50:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40175#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40175#comment:30/1531644625029321</guid>
      <description>&lt;p&gt;
I come to this bug from using &lt;code&gt;wp_handle_upload()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
My code:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$overrides['action'] = $_POST['action'];
$overrides['mimes'] = [
    'jpg|jpeg|jpe' =&amp;gt; 'image/jpeg',
    'gif' =&amp;gt; 'image/gif',
    'png' =&amp;gt; 'image/png',
];
$uploadResult = wp_handle_upload($_FILES['meter_elec_photo_url'], $overrides);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I have fake .jpg image file which really is .txt text file, I try to upload using this code and it allow me to upload without checking the real file's mime type.
&lt;/p&gt;
&lt;p&gt;
I follow into &lt;code&gt;wp_handle_upload()&lt;/code&gt; and &lt;code&gt;_wp_handle_upload()&lt;/code&gt; functions. It use &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt; function to check file extension.
&lt;/p&gt;
&lt;p&gt;
Other than this &lt;code&gt;if&lt;/code&gt; condition:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;0 === strpos( $real_mime, 'application' )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I think instead of currently using &lt;code&gt;$allowed = get_allowed_mime_types();&lt;/code&gt;, it is better use &lt;code&gt;$mimes&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if (empty($mimes)) {
   $allowed = get_allowed_mime_types();
} else {
    $allowed = $mimes;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
With this code, this function can use inherit &lt;code&gt;$mimes&lt;/code&gt; value from &lt;code&gt;wp_handle_upload()&lt;/code&gt; function perfectly and safety.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>ddenev</dc:creator>

      <pubDate>Sun, 15 Jul 2018 08:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:40/1531642569321551</guid>
      <description>&lt;p&gt;
Unfortunately, I got another crash today. Here is the Apache error log:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP Fatal error:  Allowed memory size of 268435456 bytes exhausted (tried to allocate 17179869232 bytes) in D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\functions.php on line 5158, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP Stack trace:, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   1. {main}() D:\\Projects\\Websites\\bayer-machines\\web\\index.php:0, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   2. require() D:\\Projects\\Websites\\bayer-machines\\web\\index.php:17, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   3. require_once() D:\\Projects\\Websites\\bayer-machines\\web\\wp-blog-header.php:13, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   4. require_once() D:\\Projects\\Websites\\bayer-machines\\web\\wp-load.php:37, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   5. require_once() D:\\Projects\\Websites\\bayer-machines\\web\\wp-config.php:111, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   6. do_action() D:\\Projects\\Websites\\bayer-machines\\web\\wp-settings.php:327, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   7. WP_Hook-&amp;gt;do_action() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\plugin.php:453, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   8. WP_Hook-&amp;gt;apply_filters() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\class-wp-hook.php:310, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP   9. {closure:D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\bootstrap.php:45-53}() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\class-wp-hook.php:286, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  10. Codelight\\GDPR\\Setup-&amp;gt;__construct() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\bootstrap.php:51, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  11. Codelight\\GDPR\\Setup-&amp;gt;runComponents() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Setup.php:36, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  12. Codelight\\GDPR\\Container-&amp;gt;make() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Setup.php:87, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  13. Codelight\\GDPR\\Container-&amp;gt;resolve() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:575, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  14. Codelight\\GDPR\\Container-&amp;gt;build() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:608, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  15. ReflectionClass-&amp;gt;() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:762, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  16. Codelight\\GDPR\\Components\\WordpressComments\\WordpressComments-&amp;gt;__construct() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:762, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  17. Codelight\\GDPR\\Components\\WordpressComments\\WordpressComments-&amp;gt;setup() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Components\\WordpressComments\\WordpressComments.php:17, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  18. Codelight\\GDPR\\Options\\Options-&amp;gt;get() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Components\\WordpressComments\\WordpressComments.php:22, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  19. get_option() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Options\\Options.php:25, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  20. QM_DB-&amp;gt;get_row() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\option.php:98, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  21. QM_DB-&amp;gt;query() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:2413, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  22. QM_DB-&amp;gt;query() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\query-monitor\\wp-content\\db.php:100, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  23. QM_DB-&amp;gt;_do_query() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:1813, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  24. QM_DB-&amp;gt;get_caller() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:1931, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.857012 2018] [php7:notice] [pid 29440:tid 860] [client 192.168.88.11:22465] PHP  25. wp_debug_backtrace_summary() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:3412, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP Fatal error:  Allowed memory size of 268435456 bytes exhausted (tried to allocate 17179869232 bytes) in D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\functions.php on line 5158, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP Stack trace:, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   1. {main}() D:\\Projects\\Websites\\bayer-machines\\web\\index.php:0, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   2. require() D:\\Projects\\Websites\\bayer-machines\\web\\index.php:17, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   3. require_once() D:\\Projects\\Websites\\bayer-machines\\web\\wp-blog-header.php:13, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   4. require_once() D:\\Projects\\Websites\\bayer-machines\\web\\wp-load.php:37, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   5. require_once() D:\\Projects\\Websites\\bayer-machines\\web\\wp-config.php:111, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   6. do_action() D:\\Projects\\Websites\\bayer-machines\\web\\wp-settings.php:327, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   7. WP_Hook-&amp;gt;do_action() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\plugin.php:453, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   8. WP_Hook-&amp;gt;apply_filters() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\class-wp-hook.php:310, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP   9. {closure:D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\bootstrap.php:45-53}() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\class-wp-hook.php:286, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  10. Codelight\\GDPR\\Setup-&amp;gt;__construct() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\bootstrap.php:51, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  11. Codelight\\GDPR\\Setup-&amp;gt;runComponents() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Setup.php:36, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  12. Codelight\\GDPR\\Container-&amp;gt;make() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Setup.php:87, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  13. Codelight\\GDPR\\Container-&amp;gt;resolve() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:575, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  14. Codelight\\GDPR\\Container-&amp;gt;build() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:608, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  15. ReflectionClass-&amp;gt;() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:762, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.951018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  16. Codelight\\GDPR\\Components\\WordpressComments\\WordpressComments-&amp;gt;__construct() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\vendor\\illuminate\\container\\Container.php:762, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  17. Codelight\\GDPR\\Components\\WordpressComments\\WordpressComments-&amp;gt;setup() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Components\\WordpressComments\\WordpressComments.php:17, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  18. Codelight\\GDPR\\Options\\Options-&amp;gt;get() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Components\\WordpressComments\\WordpressComments.php:22, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  19. get_option() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\gdpr-framework\\src\\Options\\Options.php:25, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  20. QM_DB-&amp;gt;get_row() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\option.php:98, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  21. QM_DB-&amp;gt;query() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:2413, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  22. QM_DB-&amp;gt;query() D:\\Projects\\Websites\\bayer-machines\\web\\wp-content\\plugins\\query-monitor\\wp-content\\db.php:100, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  23. QM_DB-&amp;gt;_do_query() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:1813, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  24. QM_DB-&amp;gt;get_caller() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:1931, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:27.952018 2018] [php7:notice] [pid 29440:tid 852] [client 192.168.88.11:22468] PHP  25. wp_debug_backtrace_summary() D:\\Projects\\Websites\\bayer-machines\\web\\wp-includes\\wp-db.php:3412, referer: https://bayer-machines.ddev/products/plasma-cutting-machines/
[Sun Jul 15 11:03:30.567167 2018] [mpm_winnt:notice] [pid 29428:tid 356] AH00428: Parent: child process 29440 exited with status 255 -- Restarting.
&lt;/pre&gt;&lt;p&gt;
Honestly, I am not sure that this is related since the line in functions.php is completely different:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$caller[] = "{$call['class']}{$call['type']}{$call['function']}";
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
in &lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt; but I'm posting it here as it seems again as a memory leak.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36612 (Add Ratings into the Add New Theme page) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Jul 2018 00:44:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36612#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36612#comment:20/1531615485347188</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36612/36612.diff" title="Attachment '36612.diff' in Ticket #36612"&gt;36612.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36612/36612.diff" title="Download"&gt;​&lt;/a&gt; links the ratings text in the theme details modal to wordpress.org. This appears to work; however, it would probably be better if the .org API can return a link to the ratings (not sure how this works for other languages, for example). &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36612/36612.api.diff" title="Attachment '36612.api.diff' in Ticket #36612"&gt;36612.api.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36612/36612.api.diff" title="Download"&gt;​&lt;/a&gt; covers the core changes to facilitate that approach.
&lt;/p&gt;
&lt;p&gt;
@dd32 can you weigh in on the preferred strategy and adjust the .org themes API as needed? This would be a nice improvement to bring into a minor release in the near future, depending on any API needs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36612.api.diff attached to Ticket #36612</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Jul 2018 00:32:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36612/36612.api.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36612/36612.api.diff/1531614779485308</guid>
      <description>&lt;p&gt;
Add a link (which needs to be returned by the .org themes API) to view theme ratings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36612.diff attached to Ticket #36612</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 15 Jul 2018 00:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36612/36612.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36612/36612.diff/1531614742690652</guid>
      <description>&lt;p&gt;
Add a (hardcoded) link to view ratings on WordPress.org to the theme browser in the customizer
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44574 (Saratov and other cities missing from translations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 19:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44574#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44574#comment:3/1531598214631963</guid>
      <description>&lt;p&gt;
44574.diff adds 5 missing locations (according to my system's zoneinfo files) Punta Arenas, Saratov, Atyrau, Famagusta, Yangon.
&lt;/p&gt;
&lt;p&gt;
Just did &lt;code&gt;timezone_identifiers_list&lt;/code&gt; and looked at what's missing from src/wp-admin/includes/continents-cities.php
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44574 (Saratov and other cities missing from translations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 19:49:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44574#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44574#comment:2/1531597785609697</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44566 (Warning: count(): Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 19:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44566#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44566#comment:1/1531597154040506</guid>
      <description>&lt;p&gt;
Hey there, welcome to Trac! Are you using a clean install of the latest version of WordPress?
Make sure that there are no plugins activated and a default theme is active.
Does the same still happen?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44568 (Two concurrent post deletes results in invalid return values) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:57:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44568#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44568#comment:1/1531594668839243</guid>
      <description>&lt;p&gt;
Hey there, welcome to Trac! Thanks for your ticket.
&lt;/p&gt;
&lt;p&gt;
WordPress operations are non-atomic. WordPress on the whole is not thread-safe. This means that calling most of the APIs that interact with the database is risky.
&lt;/p&gt;
&lt;p&gt;
If you need to protect your resources from concurrent operations you'll have to perform synchornization (mutexing) yourself.
&lt;/p&gt;
&lt;p&gt;
Rewriting WordPress to be thread-safe means rewriting like 80% of its APIs... a very daunting task. To my knowledge there haven't been any attempts at even trying to include synchronization to API calls. Perhaps it's time...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44571.tests.diff attached to Ticket #44571</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44571/44571.tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44571/44571.tests.diff/1531593829435800</guid>
      <description>&lt;p&gt;
Tests for force_balance_tags
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44571 (force_balance_tags breaks JavaScript) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44571#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44571#comment:1/1531593738074800</guid>
      <description>&lt;p&gt;
This is a very common issue among formatting functions in WordPress, wherein "stray" brackets break tag detection. This happens in scripts, styles and even regular HTML attributes with angle brackets in them. There are a bunch of tickets open regarding this.
&lt;/p&gt;
&lt;p&gt;
The issue here is that &lt;code&gt;&amp;lt;=1);&amp;lt;/script&amp;gt;&lt;/code&gt; is detected as a tag.
&lt;/p&gt;
&lt;p&gt;
Also there are no unit tests. Let's start writing some.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44574 (Saratov and other cities missing from translations) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 14 Jul 2018 18:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44574#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44574#comment:1/1531592897423542</guid>
      <description>&lt;p&gt;
"Saratov" is indeed missing from the cities and continents translations here: &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/cc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/cc&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Not sure how the list is generated, but Saratov is a valid timezone under Europe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Sat, 14 Jul 2018 16:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:39/1531587033632795</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:38" title="Comment 38"&gt;ddenev&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The only thing that I still do not understand (and that was actually my initial question but I guess I did not state it well enough) is the following (and that is based purely on curiosity as 99% is pretty good success rate :)
&lt;/p&gt;
&lt;p&gt;
In what cases (the mentioned 1%) the &lt;code&gt;$path&lt;/code&gt; variable will NOT be a file system path? Any potential scenarios and use cases?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Some plugins may call WP core functions that eventually call &lt;code&gt;wp_is_stream()&lt;/code&gt; with a URL as &lt;code&gt;$path&lt;/code&gt;.  You may not have any such plugins active and so would never see that case.  Sorry I can't be more specific than that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>ddenev</dc:creator>

      <pubDate>Sat, 14 Jul 2018 16:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:38/1531586427257372</guid>
      <description>&lt;p&gt;
Dear @pbiron
&lt;/p&gt;
&lt;p&gt;
thank you very much for the detailed explanation!
&lt;/p&gt;
&lt;p&gt;
Yes, I understand what the patch does and that the root of the problem lies in PHP rather than in WP. I also understand that this patch will significantly reduce the number of calls to the problematic PHP function.
&lt;/p&gt;
&lt;p&gt;
The only thing that I still do not understand (and that was actually my initial question but I guess I did not state it well enough) is the following (and that is based purely on curiosity as 99% is pretty good success rate :)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:37" title="Comment 37"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the vast majority (99% ?) of cases, the &lt;code&gt;$path&lt;/code&gt; passed to &lt;code&gt;wp_is_stream()&lt;/code&gt; is a file system path and not a URL so there is no need to call PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt;, which returns an array of protocols or URL "schemes" that PHP supports, to test whether the URL is a stream that PHP can handle.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In what cases (the mentioned 1%) the &lt;code&gt;$path&lt;/code&gt; variable will NOT be a file system path? Any potential scenarios and use cases?
&lt;/p&gt;
&lt;p&gt;
Thanks again for the help!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Sat, 14 Jul 2018 15:52:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:37/1531583563930923</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:36" title="Comment 36"&gt;ddenev&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can confirm that the provided patch DOES indeed solve the crashes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanx for the confirmation.
&lt;/p&gt;
&lt;p&gt;
It's important to note that the patch does not &lt;span class="underline"&gt;solve&lt;/span&gt; the problem, which is actually a bug in PHP's &lt;a class="ext-link" href="http://php.net/manual/en/function.stream-get-wrappers.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;stream_get_wrappers()&lt;/a&gt;).  Rather, it is simply intended to reduce the likelihood that that PHP bug will be surfaced in WP.  See below for an explantation of &lt;strong&gt;how&lt;/strong&gt; the patch intends to achieve that.
&lt;/p&gt;
&lt;p&gt;
We still need confirmation from others who are experiencing this problem that the patch reduces the occurrences of the problem for you as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What would be the scenarios in which
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( false === strpos( $path, '://' ) )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
would return true and then we will have the crashes again?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let me see if I can explain what the patch is intened to do.
&lt;/p&gt;
&lt;p&gt;
Many (most?) of PHP's file-related functions (e.g., &lt;a class="ext-link" href="http://php.net/manual/en/function.fopen.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;fopen()&lt;/a&gt;, &lt;a class="ext-link" href="http://php.net/manual/en/function.file-get-contents.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;file_get_contents()&lt;/a&gt;, etc) not only operate on files, but are able to seemlessly operate on URLs (referred to, in this context, as &lt;code&gt;streams&lt;/code&gt;) as well:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;file_get_contents( '/path/to/file.txt' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;file_get_contents( 'https://example.com' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In some cases, WP needs to do extra or special processing when asked to operate on a stream; hence, the existence of &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_is_stream/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp_is_stream()&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In the vast majority (99% ?) of cases, the &lt;code&gt;$path&lt;/code&gt; passed to &lt;code&gt;wp_is_stream()&lt;/code&gt; is a file system path and not a URL so there is no need to call PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt;, which returns an array of protocols or URL "schemes" that PHP supports, to test whether the URL is a stream that PHP can handle.
&lt;/p&gt;
&lt;p&gt;
To the best of everyone's understanding, the simple act of calling &lt;code&gt;stream_get_wrappers()&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; cause the PHP bug to surface, but repeated calling of it can.
&lt;/p&gt;
&lt;p&gt;
Since &lt;strong&gt;ALL&lt;/strong&gt; URL's will contain the substring &lt;code&gt;://&lt;/code&gt; and &lt;strong&gt;NO&lt;/strong&gt; file system paths will, the
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( false === strpos( $path, '://' ) ) {
        return false;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
test in the patch avoids calling PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt; in the vast majority of cases.
&lt;/p&gt;
&lt;p&gt;
Changes in WP 4.9.7 drasticly increased the number of times &lt;code&gt;wp_is_stream()&lt;/code&gt; is called in a typical WP request; hence, drastically increasing the number of times PHP's &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is called.  This appears to be why there have been so many more reports of the problem since the release of 4.9.7.
&lt;/p&gt;
&lt;p&gt;
So the hope is that by reducing the number of times &lt;code&gt;stream_get_wrappers()&lt;/code&gt; is called, the patch will return the number of times the PHP bug surfaces in WP to pre-4.9.7 levels (and maybe even lower).
&lt;/p&gt;
&lt;p&gt;
Does that explanation help?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>ddenev</dc:creator>

      <pubDate>Sat, 14 Jul 2018 12:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:36/1531572279689776</guid>
      <description>&lt;p&gt;
I can confirm that the provided patch DOES indeed solve the crashes.
&lt;/p&gt;
&lt;p&gt;
I enabled debug mode with XDebug and set a breakpoint after the return statement to check if it will be hit. I did testing for half a day and the breakpoint was never hit, so it looks promising.
&lt;/p&gt;
&lt;p&gt;
What would be the scenarios in which
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( false === strpos( $path, '://' ) )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
would return true and then we will have the crashes again?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44582 (Notice: Undefined property:stdClass::$plugin - wordpress) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 14 Jul 2018 12:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44582#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44582#comment:1/1531569817584655</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey sangwan4pankaj, welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Please can you tell us where you are seeing this error message? Steps to reproduce would be very helpful. I think this coming from a core WordPress utility call for creating lists, but it may well also be in use from plugins or themes. The issue may therefore be with the plugin or theme rather than this being a core bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>sedros</dc:creator>

      <pubDate>Sat, 14 Jul 2018 08:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:35/1531556866912817</guid>
      <description>&lt;p&gt;
My PHP:
dev-lang/php-7.1.12::gentoo was built with the following:
USE="acl apache2 berkdb bzip2 cli crypt ctype curl fileinfo filter gd gdbm gmp hash iconv imap ipv6 json ldap ldap-sasl mysql mysqli nls opcache pdo phar posix postgres readline session simplexml sockets spell ssl threads tokenizer truetype unicode xml xmlreader xmlwriter zip zlib -bcmath -calendar -cdb -cgi -cjk -coverage -debug -embed -enchant -exif -firebird -flatfile -fpm -ftp -inifile -intl -iodbc -kerberos -libedit -libressl -mhash -mssql -oci8-instant-client -odbc -pcntl -phpdbg -qdbm -recode (-selinux) -sharedmem -snmp -soap -sqlite -systemd -sysvipc -test -tidy -wddx -webp -xmlrpc -xpm -xslt" ABI_X86="(64)"
&lt;/p&gt;
&lt;p&gt;
www-apps/wordpress-4.9.7::gentoo was built with the following:
USE="akismet themes vhosts -examples" ABI_X86="(64)"
&lt;/p&gt;
&lt;p&gt;
OS: Gentoo &lt;strong&gt;Linux&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44532 (Extreme memory leak related to wp_is_stream in ...) updated</title>
      
        <dc:creator>sedros</dc:creator>

      <pubDate>Sat, 14 Jul 2018 08:22:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44532#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44532#comment:34/1531556557372403</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:32" title="Comment 32"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44532#comment:30" title="Comment 30"&gt;itowhid06&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, I don't want to sound silly, but is there a slightest chance that this issue might be causing due to windows directory separator ??
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not silly at all, given that the problem only seems to affect Windows hosts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hey, I'm affected on Linux as mentioned before.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29159 (user-agent checking is removing visual editor in function user_can_richedit) updated</title>
      
        <dc:creator>mcfedr</dc:creator>

      <pubDate>Sat, 14 Jul 2018 07:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29159#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29159#comment:8/1531554065149037</guid>
      <description>&lt;p&gt;
Seeing this pop up a few years later, first thought, surely, by now, the default should be to enable user_can_richedit, and only disable in a few known cases? how many people are using browsers that dont support the rich editor?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41281 (attachment_url_to_postid results in very slow query) updated</title>
      
        <dc:creator>samvthom16</dc:creator>

      <pubDate>Sat, 14 Jul 2018 06:03:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41281#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41281#comment:5/1531548225313970</guid>
      <description>&lt;p&gt;
I have been facing the same issue as I have close to 40k posts and equivalent number of items in the media library. Lot of plugins like Yoast Seo use the function attachment_url_to_postid() quite often. This causes a slow query because of the huge database.
&lt;/p&gt;
&lt;p&gt;
I agree with @markjaquith on caching the results as these URLs don't change that often. The function can use transient variables instead of querying the posts table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44104 (Customize: Attempt to count uncountable value) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Jul 2018 03:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44104#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44104#comment:4/1531539199222305</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks to me like this warning can be generated in the existing test for &lt;code&gt;search_available_items_query()&lt;/code&gt; by ensuring that the &lt;code&gt;nav_menus_created_posts&lt;/code&gt; setting has been added, which can be done by calling &lt;code&gt;do_action( 'customize_register' )&lt;/code&gt; at the beginning of the test. &lt;code&gt;test_save_nav_menus_created_posts()&lt;/code&gt; uses a similar pattern. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44104/44104.2.diff" title="Attachment '44104.2.diff' in Ticket #44104"&gt;44104.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44104/44104.2.diff" title="Download"&gt;​&lt;/a&gt; adds that line to the test.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44104.2.diff attached to Ticket #44104</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sat, 14 Jul 2018 03:26:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44104/44104.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44104/44104.2.diff/1531538761551111</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>