<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Tickets #30402,​39456 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:45:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30402%2C39456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30402%2C39456/1483487130915304</guid>
      <description>duplicate: &lt;p&gt;
Welcome to Trac @WordPresslover7
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this, we're currently tracking this over in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/30402" title="#30402: defect (bug): WordPress does not respect the bit-depth of the original image when ... (new)"&gt;#30402&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm going to mark this as a duplicate to keep the conversation in one place.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39448 (To-do: remove at the end of 2016) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:42:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39448#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39448#comment:1/1483486958701830</guid>
      <description>&lt;p&gt;
Source: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32677" title="Editor:
- Remove the old DFW.
- Add back-compat stub for ..."&gt;[32677]&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We can probably leave it in place honestly, but pinging @azaozz
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39456 (WP does not respect original image bit-depth creating thumbnails) created</title>
      
        <dc:creator>wordpresslover7</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39456/1483486797616873</guid>
      <description>&lt;p&gt;
The result is that thumbnails double in size as illustrated below:
&lt;/p&gt;
&lt;p&gt;
Original image is 616x192px and weighs 8 KB...
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://s23.postimg.org/6pb16yl0b/PNG_bit_depth.png"&gt;&lt;img src="https://s23.postimg.org/6pb16yl0b/PNG_bit_depth.png" alt="https://s23.postimg.org/6pb16yl0b/PNG_bit_depth.png" crossorigin="anonymous" title="https://s23.postimg.org/6pb16yl0b/PNG_bit_depth.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is a serious defect hitting SEO, server resources consumption and web speed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36613 (Browser back button doesn't work in Theme Browser) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36613#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36613#comment:4/1483486733086585</guid>
      <description>&lt;p&gt;
@adamsilverstein In my testing it seemed to work well - I say commit it.
&lt;/p&gt;
&lt;p&gt;
I didn't discover this directly myself, I was watching someone else attempt to install a theme who got confused by the previous behaviour - I'm going to try to do another look-over-the-shoulder test, just to ensure things seem right.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39449 (`customize_loaded_components` filter is too late for themes) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39449#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39449#comment:2/1483486313956328</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39449#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For that specific use-case of what you're requesting here, wouldn't it be better for the Customizer to just not register the menu components &lt;code&gt;if ( ! $supports_widgets &amp;amp;&amp;amp; ! $menu_locations )&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I think this is sensible behavior.
&lt;/p&gt;
&lt;p&gt;
I know the menu components are still loaded if no menus are registered when the menu widget is present, but it doesn't make sense to load the menu components if widgets aren't available either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39449 (`customize_loaded_components` filter is too late for themes) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:24:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39449#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39449#comment:1/1483485893070810</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I want to remove nav menus from the Customizer when the theme doesn't make use of widgets or menus.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For that specific use-case of what you're requesting here, wouldn't it be better for the Customizer to just not register the menu components &lt;code&gt;if ( ! $supports_widgets &amp;amp;&amp;amp; ! $menu_locations )&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34679 (Replace use of wp_get_http() in the WordPress Importer) updated</title>
      
        <dc:creator>RDall</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34679#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34679#comment:14/1483485829244743</guid>
      <description>&lt;p&gt;
I am also getting notices for:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Undefined variable: _menu_item_type in
Notice: Array to string conversion in
&lt;/pre&gt;&lt;p&gt;
Using Importer in WordPress 4.7
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39391 (fatal error Call to a member function add_filter() on array in ...) updated</title>
      
        <dc:creator>glenroy99</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39391#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39391#comment:3/1483485576925534</guid>
      <description>&lt;p&gt;
I will have to wait for this update of 4.7.1 then, as I also have had to do a full roll back to 4.6.1 to solve the same issue.
&lt;/p&gt;
&lt;p&gt;
I did not have any cache plugin active, or any Object Cache installed on the site, so that wasn't the case for me.  I did the full plugin/theme check for conflicts first and was never able to recover the site until rolling back my WP version.
&lt;/p&gt;
&lt;p&gt;
Hopefully they get to the bottom of this completely with the new update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34679 (Replace use of wp_get_http() in the WordPress Importer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34679#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34679#comment:13/1483485333082951</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dd32. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1483485329003881"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37182 (Collections are not compatible to HAL standard) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:12:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37182#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37182#comment:12/1483485153696606</guid>
      <description>&lt;p&gt;
I have updated &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/linking-and-embedding/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/linking-and-embedding/&lt;/a&gt; to clarify that our mechanism is inspired by the HAL standard without asserting that we are compliant. This is not a perfect fix but should reduce, if not eliminate, the confusion. I believe linking to HAL is still useful because it explains a very similar and at times identical mechanism in more depth.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37182 (Collections are not compatible to HAL standard) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 23:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37182#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37182#comment:11/1483484629014772</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1483484626001890"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39452 (add the rest API root url to the admin header) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 22:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39452#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39452#comment:5/1483484178958677</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe that the api is lighter weight than admin ajax
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My point was about using &lt;code&gt;wp-api&lt;/code&gt; which exposes a &lt;code&gt;wp.api&lt;/code&gt; javascript handler with models and collections of api endpoints, vs rolling their own XHR requests to the rest api endpoints (as previously done with admin-ajax.php)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39452 (add the rest API root url to the admin header) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 03 Jan 2017 22:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39452#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39452#comment:4/1483483081307008</guid>
      <description>&lt;p&gt;
Yes not have the rest nonoce it a valid point and we can add that to this patch as that will help and use of the API in the admin.
&lt;/p&gt;
&lt;p&gt;
I believe that the api is lighter weight than admin ajax
&lt;/p&gt;
&lt;p&gt;
Yes I agree about the documentation may this ticket will kick that off abit more
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39452 (add the rest API root url to the admin header) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 22:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39452#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39452#comment:3/1483482647904446</guid>
      <description>&lt;p&gt;
Passing &lt;code&gt;rest_url( '/' )&lt;/code&gt; into the header isn't useful, as it lacks the nonce, but ignoring that - I guess the main question is should we be pushing most clients to utilising the &lt;code&gt;wp-api&lt;/code&gt; script, or rolling their own XHR handlers?
&lt;/p&gt;
&lt;p&gt;
One of the main reasons I've avoided using &lt;code&gt;wp-api&lt;/code&gt; personally is that I haven't found any documentation of how I'm supposed to utilise it, I'm not sure others would've faired much better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29807,​39455 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Jan 2017 21:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29807%2C39455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29807%2C39455/1483480516879227</guid>
      <description>duplicate: &lt;p&gt;
Hello @drrobotnik,
&lt;/p&gt;
&lt;p&gt;
thanks for your report, we're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29807" title="#29807: enhancement: add support for picture element and srcset attribute on img in wp_kses (new)"&gt;#29807&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39455 (wp_kses_post strips srcset and sizes) created</title>
      
        <dc:creator>drrobotnik</dc:creator>

      <pubDate>Tue, 03 Jan 2017 21:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39455/1483479867645579</guid>
      <description>&lt;p&gt;
Now that RICG images are a part of Core, it seems like srcset and sizes should be added to wp_kses_post allowed_html.
&lt;/p&gt;
&lt;p&gt;
Is this something that could be added?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39141 (RSS feeds have incorrect lastBuildDate when using alternate languages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 21:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39141#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39141#comment:20/1483478593896696</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1483478591005850"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36613 (Browser back button doesn't work in Theme Browser) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 03 Jan 2017 20:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36613#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36613#comment:3/1483476741019453</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36613/36613.diff" title="Attachment '36613.diff' in Ticket #36613"&gt;36613.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36613/36613.diff" title="Download"&gt;​&lt;/a&gt;
Themes: Fix issues when navigating browser history in the theme installer. Show correct theme and close previewer when backing out to install page.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Store a reference to the current preview when the theme installer preview view is opened
&lt;/li&gt;&lt;li&gt;Add a listener to the preview so we can send it close events more easily
&lt;/li&gt;&lt;li&gt;When navigating themes with next/back and adding the url to the browser history, use &lt;code&gt;replace: false&lt;/code&gt; so we build up some history
&lt;/li&gt;&lt;li&gt;When going back all the way to main install screen (the &lt;code&gt;sort&lt;/code&gt; route), close the preview if open so view is back to the theme browser
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@dd32 can you please review and see if this works for you?
&lt;/p&gt;
&lt;p&gt;
Here is a screencast testing locally for the record: &lt;a class="ext-link" href="https://cl.ly/1z2r2G0c0z0q"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cl.ly/1z2r2G0c0z0q&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36613.diff attached to Ticket #36613</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 03 Jan 2017 20:36:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36613/36613.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36613/36613.diff/1483475802968740</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33507 (Allow widget controls to be JS-driven) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 03 Jan 2017 19:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33507#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33507#comment:21/1483473283807065</guid>
      <description>&lt;p&gt;
I just released &lt;a class="ext-link" href="https://github.com/xwp/wp-js-widgets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;JS Widgets&lt;/a&gt; v0.2.0 which includes JS-driven adaptations of all the core widgets (aside from Links), as well as a Post Collection bonus widget. Another standalone widget plugin called &lt;a class="ext-link" href="https://github.com/xwp/wp-next-recent-posts-widget"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Next Recent Posts Widget&lt;/a&gt; takes the concept of JS widgets a step further and uses client-side JS templating for rendering the widget as well, implementing instant updates to changes. In this widget, selective refresh used to obtain &lt;code&gt;rendered&lt;/code&gt; REST API data, while the &lt;code&gt;raw&lt;/code&gt; value is used until the &lt;code&gt;rendered&lt;/code&gt; data is returned. So this means that when entering &lt;code&gt;--&lt;/code&gt; into the widget's title will result in &lt;code&gt;--&lt;/code&gt; appearing in the rendered widget while waiting for the server to return with &lt;code&gt;—&lt;/code&gt; that &lt;code&gt;wptexturize&lt;/code&gt; applies. In this way it behaves similarly to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33738" title="#33738: defect (bug): Quotes and other texturize characters are displayed differently in the ... (closed: fixed)"&gt;#33738&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39454 (I can't figure out how to create a new question in the support forums!) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 19:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39454#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39454#comment:2/1483472963777185</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by pross. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1483472961005740"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39454 (I can't figure out how to create a new question in the support forums!) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Tue, 03 Jan 2017 19:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39454#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39454#comment:1/1483472938245815</guid>
      <description>invalid: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
The form to create new topics is at the bottom of any given page in the forums once you've picked a category to post in.
&lt;/p&gt;
&lt;p&gt;
Please do create your question there and I'm sure one of our volunteers will be able to assist you withj your problems.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39451 (Javascript error when link_manager_enabled ( WP_Widget_Links) and ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 03 Jan 2017 19:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39451#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39451#comment:3/1483472784146489</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39451 (Javascript error when link_manager_enabled ( WP_Widget_Links) and ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 03 Jan 2017 19:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39451#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39451#comment:2/1483472756803822</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Coincidentally I also ran across this issue myself in working on the &lt;a class="ext-link" href="https://github.com/xwp/wp-js-widgets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;JS Widgets plugin&lt;/a&gt; for &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/33507" title="#33507: enhancement: Allow widget controls to be JS-driven (accepted)"&gt;#33507&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35574" title="#35574: enhancement: Add REST API JSON schema information to WP_Widget (new)"&gt;#35574&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39454 (I can't figure out how to create a new question in the support forums!) created</title>
      
        <dc:creator>anonymouse909</dc:creator>

      <pubDate>Tue, 03 Jan 2017 19:36:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39454/1483472165199198</guid>
      <description>&lt;p&gt;
I see no link for "create post" anywhere on this site?!
&lt;/p&gt;
&lt;p&gt;
I'm trying to apply some custom styles to my site. But when I add them in functions.php, they also apply to the admin area of the site, and it looks all messed up. When I include a &amp;lt;link /&amp;gt; tag in the body, it gets stripped out of the HTML! It annoys me so much that I can't just write some raw valid html into a raw text and not have wordpress mangle the hell out of it and strip out anything it doesn't like.
&lt;/p&gt;
&lt;p&gt;
How do I apply custome styles just to my pages and not the admin pages too?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39453 (WP REST API Response Media Type) created</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Tue, 03 Jan 2017 19:33:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39453/1483471985423413</guid>
      <description>&lt;p&gt;
The WP REST API responses in JSON format are sent using the media type &lt;code&gt;application/json&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However, the API documentation states that it complies to the HAL spec. The HAL spec defines a separate media type, which is identified as &lt;code&gt;application/hal+json&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So, if the WP REST API does indeed use the HAL media type as its response format, it should also use the corresponding identifier.
&lt;/p&gt;
&lt;p&gt;
Note: I assume that it is too late at this point to change the response media type. However, the reasons for keeping the "incorrect" media type should be recorded in a ticket for posteriority.
&lt;/p&gt;
&lt;p&gt;
Link to HAL spec: &lt;a class="ext-link" href="https://tools.ietf.org/html/draft-kelly-json-hal-07"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://tools.ietf.org/html/draft-kelly-json-hal-07&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39452 (add the rest API root url to the admin header) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 03 Jan 2017 18:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39452#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39452#comment:2/1483468263393919</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39452 (add the rest API root url to the admin header) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 03 Jan 2017 18:30:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39452#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39452#comment:1/1483468250311409</guid>
      <description>&lt;p&gt;
I have added in this patch the url to main admin header the ajaxurl is set in few other location but I am not sure which other we should change as well
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-header.php.patch attached to Ticket #39452</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 03 Jan 2017 18:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39452/admin-header.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39452/admin-header.php.patch/1483468148367704</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39452 (add the rest API root url to the admin header) created</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 03 Jan 2017 18:26:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39452/1483468013811562</guid>
      <description>&lt;p&gt;
we add by default the the ajaxurl to the js vars we should also add the rest root url
&lt;/p&gt;
&lt;pre class="wiki"&gt;resturl = '&amp;lt;?php echo rest_url( '/' ); ?&amp;gt;',
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39451 (Javascript error when link_manager_enabled ( WP_Widget_Links) and ...) updated</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:53:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39451#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39451#comment:1/1483466011745813</guid>
      <description>&lt;p&gt;
There's a typo in my description. I meant : The error occurs in the customizer when a user uses the &lt;code&gt;WP_Widget_Links&lt;/code&gt; widget &lt;strong&gt;and&lt;/strong&gt; has enabled support for &lt;code&gt;customize-selective-refresh-widgets&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39451 (Javascript error when link_manager_enabled ( WP_Widget_Links) and ...) created</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39451/1483465529822822</guid>
      <description>&lt;p&gt;
The error occurs in the customizer when a user uses the &lt;code&gt;WP_Widget_Links&lt;/code&gt; widget has enabled support for &lt;code&gt;customize-selective-refresh-widgets&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;WP_Widget_Links&lt;/code&gt; is now deprecated, but it is retro-compatible if user had it already installed.
&lt;/p&gt;
&lt;p&gt;
The error message in the browser js console looks like this :
&lt;/p&gt;
&lt;pre class="wiki"&gt;customize-preview-widgets.js?ver=4.7:63 Uncaught Error: Illegal id for widget partial.
    at child.initialize (customize-preview-widgets.js?ver=4.7:63)
    at child.api.Class (customize-base.js?ver=4.7:93)
    at child [as constructor] (customize-base.js?ver=4.7:34)
    at new child (customize-base.js?ver=4.7:34)
    at HTMLDivElement.&amp;lt;anonymous&amp;gt; (customize-selective-refresh.js?ver=4.7:863)
    at Function.each (jquery.js?ver=1.12.4:2)
    at jQuery.fn.init.each (jquery.js?ver=1.12.4:2)
    at Object.wp.customize.selectiveRefresh.self.addPartials (customize-selective-refresh.js?ver=4.7:850)
    at Function.&amp;lt;anonymous&amp;gt; (customize-selective-refresh.js?ver=4.7:961)
    at i (jquery.js?ver=1.12.4:2)
&lt;/pre&gt;&lt;p&gt;
Theme or plugin developers can fix the problem by removing the support for &lt;code&gt;customize-selective-refresh-widgets&lt;/code&gt; if &lt;code&gt;link_manager_enabled&lt;/code&gt; is set to true. But a core fix would be better of course.
&lt;/p&gt;
&lt;p&gt;
Temporary solution :
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! get_option( 'link_manager_enabled' ) ) {
   add_theme_support( 'customize-selective-refresh-widgets' );
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39000 (REST API: Require the reassign parameter when deleting users) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39000#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39000#comment:13/1483463800259700</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1483463796000747"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38962 (REST API: Don't delete posts/links when deleting/removing a user from ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38962#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38962#comment:27/1483463800152997</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1483463796000747"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38562 (Move "Site Language" setting above "Timezone") updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38562#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38562#comment:6/1483463800045002</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1483463796000747"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39155 (REST API: User with default admin role cannot create or edit users via ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39155#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39155#comment:7/1483463799905364</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1483463796000747"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38211 (Interference of AJAX search with input field auto-complete) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38211#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38211#comment:11/1483463109569419</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38211/38211.2.diff" title="Attachment '38211.2.diff' in Ticket #38211"&gt;38211.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38211/38211.2.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add autocomplete="off" to plugin list table search field which is also ajaxified
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38211.2.diff attached to Ticket #38211</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 03 Jan 2017 17:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38211/38211.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38211/38211.2.diff/1483463028183689</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #38211,​39450 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 03 Jan 2017 16:56:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38211%2C39450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38211%2C39450/1483462617615981</guid>
      <description>duplicate: &lt;p&gt;
@Craig Ralston thanks for your report! This issue is already tracked on another ticket, see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38211" title="#38211: defect (bug): Interference of AJAX search with input field auto-complete (assigned)"&gt;#38211&lt;/a&gt;. Do feel free to join the conversation and follow the progress there. Your report is perfectly valid but I'm going to close this ticket as it basically duplicates the previous one.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #28988 (Detect Time Zones automatically at installation) updated</title>
      
        <dc:creator>danielmount</dc:creator>

      <pubDate>Tue, 03 Jan 2017 16:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28988#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28988#comment:8/1483461614399529</guid>
      <description>&lt;p&gt;
I favor the option to select a timezone hidden behind a timezone selected by default.
&lt;/p&gt;
&lt;p&gt;
Selecting the admin's time zone automatically should be correct in most cases, but I can think of several exceptions where ability to change would be useful, e.g. a developer in one time zone building a site for an organization in another, or a website being built through a VPN in a country with restricted Internet access, like China.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39450 (Plugin search prevents autocomplete from working properly) created</title>
      
        <dc:creator>Craig Ralston</dc:creator>

      <pubDate>Tue, 03 Jan 2017 16:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39450/1483460281858715</guid>
      <description>&lt;p&gt;
In most browsers, autofill / autocomplete is enabled by default for input fields. This is very handy functionality but I am unable to use this feature with the plugin search since the results constantly refresh. I am not entirely sure if it is possible with the way the search results are handled now but I figured it would be worth finding out.
&lt;/p&gt;
&lt;p&gt;
Here is an example of exactly what I am referring to. I am looking to install &lt;strong&gt;'All in One WP Security &amp;amp; Firewall&lt;/strong&gt;'
&lt;/p&gt;
&lt;p&gt;
Plugins &amp;gt; Add new
Start typing 'all' and I see my browser remembers 'all in one wp security' but when I try to click that to have the browser auto complete the field, the results quickly refresh and the autocomplete options disappear. The plugin I am looking for is not on the screen so I continue to spell out the exact name of the plugin, each time I am unable to autocomplete the field and the results are refreshed with every new letter. So I have to type out the name of the plugin until it is unique enough to show up on the top of the list.
&lt;/p&gt;
&lt;p&gt;
Again, this may not even be possible and it really isn't a major issue but I find it pretty frustrating at times.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39157 (Feed returns 404 when there are no posts) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Tue, 03 Jan 2017 16:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39157#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39157#comment:15/1483460069562274</guid>
      <description>&lt;p&gt;
@alfredo49 @marlloftus This is slated for 4.7.1 (the next release) pending a review from a Core Committer.  However, if you are desperate for a fix, you can apply patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39157/39157.4.patch" title="Attachment '39157.4.patch' in Ticket #39157"&gt;39157.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39157/39157.4.patch" title="Download"&gt;​&lt;/a&gt; using this guide: &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/working-with-patches/#applying-a-patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/working-with-patches/#applying-a-patch&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39449 (`customize_loaded_components` filter is too late for themes) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Tue, 03 Jan 2017 15:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39449</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39449/1483456325402736</guid>
      <description>&lt;p&gt;
As a WordPress theme developer, I want to remove nav menus from the Customizer when the theme doesn't make use of widgets or menus.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;customize_loaded_components&lt;/code&gt; filter fires on &lt;code&gt;plugins_loaded&lt;/code&gt; though, which mean my theme can't use it to filter components to load. Instead, I have to use an imprecise set of &lt;code&gt;remove_action&lt;/code&gt; and &lt;code&gt;remove_filter&lt;/code&gt; calls.
&lt;/p&gt;
&lt;p&gt;
It would be better to have an explicit API for themes to filter which components to load.
&lt;/p&gt;
&lt;p&gt;
Previously &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33552" title="#33552: enhancement: Facilitate plugins to override Customizer features (closed: fixed)"&gt;#33552&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39448 (To-do: remove at the end of 2016) created</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Tue, 03 Jan 2017 14:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39448/1483454809266848</guid>
      <description>&lt;p&gt;
I found some code comment "To-do: remove at the end of 2016"
&lt;/p&gt;
&lt;p&gt;
in script-loader.php (L. 125) &amp;amp;  related wp-fullscreen-stub.js
&lt;/p&gt;
&lt;p&gt;
I tried to find out when/why this has been put in, but cannot. I'm sure you know how to deal with this - have fun :)
&lt;/p&gt;
&lt;p&gt;
I was asking @sergey about this, but he seems offline.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39447 (Improvment to the get_the_posts_navigation) created</title>
      
        <dc:creator>thirumani02</dc:creator>

      <pubDate>Tue, 03 Jan 2017 14:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39447/1483454191897265</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/link-template.php"&gt;https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/link-template.php&lt;/a&gt; Here at &lt;em&gt;get_the_posts_navigation&lt;/em&gt; the function check global wp query(&lt;strong&gt;Globals['wp_query'\]&lt;/strong&gt;) for displaying markup.  But in many cases we may need to display the navigation for &lt;strong&gt;custom wp query&lt;/strong&gt; which has unique query options(max_num_page, post_per_page). So it would be great, if we can check the our custom query's max_num_page.
&lt;/p&gt;
&lt;p&gt;
Hope it make sense.
&lt;/p&gt;
&lt;p&gt;
Thank you
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>user.php.diff attached to Ticket #39446</title>
      
        <dc:creator>ajoah</dc:creator>

      <pubDate>Tue, 03 Jan 2017 14:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39446/user.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39446/user.php.diff/1483454146357173</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39446 (Apostrophes in blog title presented as &amp;#039; in multisite new user email) created</title>
      
        <dc:creator>ajoah</dc:creator>

      <pubDate>Tue, 03 Jan 2017 14:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39446/1483454129482165</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
When an admin create an user in a multisite installation, an email is send :
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi,
You've been invited to join Someone&amp;amp;#039;s site at &lt;a class="ext-link" href="http://example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com&lt;/a&gt; with the role of [Role].
If you do not want to join this site please ignore
this email. This invitation will expire in a few days.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please click the following link to activate your user account:
&lt;a class="ext-link" href="http://example.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As you can see apostrophe is not decoded.
&lt;/p&gt;
&lt;p&gt;
It is the same problem that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35283" title="#35283: defect (bug): Apostrophes in blog title presented as &amp;amp;#039; in some system emails (closed: fixed)"&gt;this ticket&lt;/a&gt;. I hesitated to reopen it instead of create this one. I hope I made the right choice &lt;sup&gt;&lt;/sup&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39435 (cannot advance by typing in page number) updated</title>
      
        <dc:creator>kailanitish90</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:59:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39435#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39435#comment:1/1483451995021449</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @taxman10m,
&lt;/p&gt;
&lt;p&gt;
I have attached a patch for above issue.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39435.patch attached to Ticket #39435</title>
      
        <dc:creator>kailanitish90</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39435/39435.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39435/39435.patch/1483451886646091</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39445 (Add class_exists() check before defining the PasswordHash class) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39445#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39445#comment:1/1483450438856897</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We should probably just revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38371" title="Load: load `class-phpass.php` (`PasswordHash` class) early in ..."&gt;[38371]&lt;/a&gt; here honestly. I can't see any benefits in loading the class on every pageload when it's not needed.
&lt;/p&gt;
&lt;p&gt;
Failing that, switching it back to a &lt;code&gt;require_once()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm milestoning this for 4.7.x for review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31948 (Make wp-content an svn external to official repositories) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:22:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31948#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31948#comment:1/1483449775889652</guid>
      <description>wontfix: &lt;p&gt;
Honestly, I just can't see this happening for a myriad of reasons - and doing something like this and keeping it through something like a moving-to-git scenario is going to be impossible.
&lt;/p&gt;
&lt;p&gt;
I'm closing this out mostly as it's unreachable.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21883 (WP_Plugin action/filter concept) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21883#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21883#comment:5/1483449619995730</guid>
      <description>maybelater: &lt;p&gt;
"polluting" the global filter/action space isn't necessarily an issue, prefix everything is a pretty standard WordPress "thing".
&lt;/p&gt;
&lt;p&gt;
I'm going to close this as &lt;code&gt;maybelater&lt;/code&gt; as a &lt;code&gt;WP_Plugin&lt;/code&gt; class will probably happen sometime down the line - but not likely for action/filter segregation.
See proposals such as &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37677" title="#37677: enhancement: Introduce WP_Plugin class analogous to WP_Theme (new)"&gt;#37677&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37656" title="#37656: enhancement: Improve plugin bootstrapping processes (new)"&gt;#37656&lt;/a&gt; for other examples.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>phppass.diff attached to Ticket #39445</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39445/phppass.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39445/phppass.diff/1483449586195888</guid>
      <description>&lt;p&gt;
Do not define the PasswordHash class if it already exists
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39445 (Add class_exists() check before defining the PasswordHash class) created</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39445/1483449559511354</guid>
      <description>&lt;p&gt;
I have a project that calls wp-load.php, but after already loading the PasswordHash class. (It authenticates the user before loading WP).
&lt;/p&gt;
&lt;p&gt;
After the update from WP 4.6.1 to WP 4.7, this now causes a PHP fatal error, because now wp-settings.php unconditionally calls require().
&lt;/p&gt;
&lt;p&gt;
The attached patch will not define the PasswordHash class if it already exists.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35477 (archive-$post_type.php in get_taxonomy_template) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35477#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35477#comment:2/1483449338646687</guid>
      <description>wontfix: &lt;p&gt;
I'm going to close this as &lt;code&gt;wontfix&lt;/code&gt; as I don't think core should be doing this by default - but that themes which are designed for it should by all means add a placeholder and include the template it wants to share.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36265 (SHOW FULL COLUMNS FROM from `wp_posts`) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36265#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36265#comment:3/1483448915334952</guid>
      <description>invalid: &lt;p&gt;
As above, post types longer than 20char are not supported and an error is thrown.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #31564 (Page won't update on Mac) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:05:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31564#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31564#comment:7/1483448744182030</guid>
      <description>worksforme: &lt;p&gt;
I'm closing this as &lt;code&gt;worksforme&lt;/code&gt; as there are no reproducible steps to follow. It sounds like the original issue was likely caused by conflicting plugin javascript.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16925 (Move the WP_Filesystem_SSH2 class to a plugin) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 13:04:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16925#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16925#comment:16/1483448674099264</guid>
      <description>maybelater: &lt;p&gt;
Closing this as &lt;code&gt;maybelater&lt;/code&gt; the SSH support in core isn't doing any harm, although I highly recommend users use &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/ssh-sftp-updater-support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/ssh-sftp-updater-support/&lt;/a&gt; if they don't already have the SSH extension installed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #34653 (TypeError: undefined is not an object (evaluating '$pass1Text.prop')) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34653#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34653#comment:5/1483448134308532</guid>
      <description>worksforme: &lt;p&gt;
Based on the above comments, marking as &lt;code&gt;worksforme&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #34116 (Rethink default install content like "Sample Page", etc.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34116#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34116#comment:8/1483447973042231</guid>
      <description>&lt;p&gt;
Sample Theme Content has largely replaced the default content in a way, does that resolve this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20531 (Version No. removed from theme name in themes) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:51:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20531#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20531#comment:11/1483447871965932</guid>
      <description>wontfix: &lt;p&gt;
5 years on from removing the version numbers, and I just can't see the need for a user to see the version number anymore.
&lt;/p&gt;
&lt;p&gt;
Theme authors giving updates as zips which are then uploaded with a new folder name have hopefully moved to automated updates now, and those who run multiple versions of the same theme should be far fewer.
&lt;/p&gt;
&lt;p&gt;
I'm marking this as &lt;code&gt;wontfix&lt;/code&gt; as a result of the above.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #28658,​31288 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:45:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28658%2C31288</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28658%2C31288/1483447521862753</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28658" title="#28658: defect (bug): is_ssl() may fail on ssl, relying on mod_ssl. (closed: duplicate)"&gt;#28658&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #28557 (Add Theme/Plugin-Version to URL not the WP-Version) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28557#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28557#comment:7/1483447260335753</guid>
      <description>wontfix: &lt;p&gt;
Calling &lt;code&gt;filemtime()&lt;/code&gt; multiple times on each pageload isn't an option, nor can you rely upon it being a cascading timestamp update (not all filesystems do).
&lt;/p&gt;
&lt;p&gt;
IMHO it's up to the plugin or theme to specify the version parameter here for cache-busting. The main issue is performance - not just of how to get the data, but determining that a resource is being enqueued by a specific plugin or theme.
&lt;/p&gt;
&lt;p&gt;
If you run into a problem caused by this, tell the plugin or theme author that they should bump the cache busters on their enqueued resources during updates - that's what the parameter is for.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19986 (Issue with add_filter() and add_action() when using anonymous functions.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:32:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19986#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19986#comment:10/1483446772806495</guid>
      <description>wontfix: &lt;p&gt;
5 years on, I'm marking this as &lt;code&gt;wontfix&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;create_function()&lt;/code&gt; has mostly been replaced by utilising anonymous functions directly (which don't use the null naming scheme, but instead go through &lt;code&gt;spl_object_hash()&lt;/code&gt;), and if XDebug hasn't been updated to support null array items yet, I don't think we need to work around it's issues.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39444 (Text Decoration Underline removes on hover in Customizer) updated</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39444#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39444#comment:1/1483446145194663</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch 39444.diff is attached!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39444.diff attached to Ticket #39444</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39444/39444.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39444/39444.diff/1483446042509094</guid>
      <description>&lt;p&gt;
Patch attached
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>control-hover.png attached to Ticket #39444</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39444/control-hover.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39444/control-hover.png/1483445880311800</guid>
      <description>&lt;p&gt;
Hover state
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>control.png attached to Ticket #39444</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39444/control.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39444/control.png/1483445868519111</guid>
      <description>&lt;p&gt;
Normal state
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39444 (Text Decoration Underline removes on hover in Customizer) created</title>
      
        <dc:creator>monikarao</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39444/1483445850385675</guid>
      <description>&lt;p&gt;
I noticed that the action link "Delete Menu" in Customizer has text underline property. This underline gets removed on hover over the link.
&lt;/p&gt;
&lt;p&gt;
But in all other action links that have underline remain same on the hover.
&lt;/p&gt;
&lt;p&gt;
CSS class I am referring to this bug: .menu-delete
&lt;/p&gt;
&lt;p&gt;
On hover:
.menu-delete:focus, .menu-delete:hover
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #13822,​37164 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13822%2C37164</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13822%2C37164/1483445833728424</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13822" title="#13822: defect (bug): Menu items that get unpublished still appear (reopened)"&gt;#13822&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #20232 (Adding custom link / page to menu item renders  500 Internal Server Error) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 12:10:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20232#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20232#comment:7/1483445428794504</guid>
      <description>worksforme: &lt;p&gt;
A number of things have changed since this ticket was originally reported, and a number of issues related to menu saving still exist.
The most common issue that was run into was related to the maximum post variable limits - that's been fixed which fixed a lot of the menu saving issues.
&lt;/p&gt;
&lt;p&gt;
Other issues related to performance of menu saving will be progressively fixed using javascript+rest api menu interfaces.
&lt;/p&gt;
&lt;p&gt;
For now I'm closing this old ticket as worksforme, as it's not a scenario most people run into today.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27303 (Make the "Plugins bubble-link" only show plugins that have an update ...) updated</title>
      
        <dc:creator>bhaveshkhadodara</dc:creator>

      <pubDate>Tue, 03 Jan 2017 11:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27303#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27303#comment:6/1483443010187376</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I have added link in plugin bubble.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>#27303.patch attached to Ticket #27303</title>
      
        <dc:creator>bhaveshkhadodara</dc:creator>

      <pubDate>Tue, 03 Jan 2017 11:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27303/%2327303.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27303/%2327303.patch/1483442955063950</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29069 (Proposal: wp-pluggable.php patch to send email through SMTP, not mail()) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 10:24:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29069#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29069#comment:10/1483439071723042</guid>
      <description>maybelater: &lt;p&gt;
I'm going to close this as &lt;code&gt;maybelater&lt;/code&gt;.
My reasons are as follows
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WordPress follows the Decisions, Not Options philosophy. WordPress users shouldn't be given options which they don't actually need.
&lt;/li&gt;&lt;li&gt;Mail sending should just work for users, if it doesn't work with &lt;code&gt;mail()&lt;/code&gt; the PHP settings are probably wrong on the host, and something should be done there.
&lt;/li&gt;&lt;li&gt;Plugins fill the need very well, as shown by the number of plugins and usage figures of them. I am however surprised by the amount of sites utilising SMTP plugins, but I'm not sure all of them actually need them.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In the event that we decide to add native SMTP settings into WordPress, a committer can re-open this. Discussion can also continue while the ticket is closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30213 (Zlib does not work on fresh ubuntu installations...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 10:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30213#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30213#comment:8/1483438673674872</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30213 (Zlib does not work on fresh ubuntu installations...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 10:17:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30213#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30213#comment:7/1483438643434401</guid>
      <description>invalid: &lt;p&gt;
@thefarlilacfield Sorry for the much delayed response, Thanks a bunch for the full background on the issue at play here.
&lt;/p&gt;
&lt;p&gt;
Due to the amount of time that we've survived without working around this issue, that PHP 5.5 is now EOL and 5.6 is in security-fixes-only I'm confident that the majority of servers which would've been affected by this would have moved to a more recent version of PHP (be that 5.5.20+ or otherwise).
&lt;/p&gt;
&lt;p&gt;
I'm marking this as &lt;code&gt;wontfix&lt;/code&gt;. In the highly unlikely case we get a lot of reports about this some day, we'll work out how to handle it then.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10660 (Time zone suggester based on nascent WordPress.org API call) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 10:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10660#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10660#comment:25/1483438392719210</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
FWIW &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/28988#comment:7" title="Comment 7 for #28988: enhancement: Detect Time Zones automatically at installation (new)"&gt;see this comment on #28988&lt;/a&gt; by myself:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It looks like we'll be able to use &lt;code&gt;Intl.DateTimeFormat().resolvedOptions().timeZone&lt;/code&gt; here now.
&lt;/p&gt;
&lt;p&gt;
It's supported by recent Chrome &amp;amp; Safari, Firefox 52 will support it (Currently in the Developer channel), however IE is likely not implementing it. Progressive enhancement to support it when possible seems like a good option to me.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37283 (/* LOCK */ in SQL query crashes mysqli with no error message and ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 10:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37283#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37283#comment:3/1483437776864790</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@pento mind taking a look here and making a decision?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28988 (Detect Time Zones automatically at installation) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 10:00:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28988#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28988#comment:7/1483437654864794</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like we'll be able to use &lt;code&gt;Intl.DateTimeFormat().resolvedOptions().timeZone&lt;/code&gt; here now.
&lt;/p&gt;
&lt;p&gt;
It's supported by recent Chrome &amp;amp; Safari, Firefox 52 will support it (Currently in the Developer channel), however IE is likely not implementing it. Progressive enhancement to support it when possible seems like a good option to me.
&lt;/p&gt;
&lt;p&gt;
I'm unsure of what UI it should have though, transparent in the background? option to select timezone hidden behind a &lt;code&gt;Timezone: Australia/Brisbane [change]&lt;/code&gt; section, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22631 (Allow change of dropins folder) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 09:26:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22631#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22631#comment:8/1483435614817274</guid>
      <description>maybelater: &lt;p&gt;
I'm quite okay with dropins living in &lt;code&gt;WP_CONTENT_DIR&lt;/code&gt; for now.
&lt;/p&gt;
&lt;p&gt;
I can see reasons for allowing it to be loaded from elsewhere (for example, being able to define a host-wide dropins folder), however utilising the early filters in WordPress + a &lt;code&gt;pre_append_file&lt;/code&gt; and early inclusion of filters seems like a far more robust mechanism for that.
I suspect that we'd probably change to a different mechanism of detecting/enabling dropins before we added a custom directory for them.
&lt;/p&gt;
&lt;p&gt;
I'm marking this as &lt;code&gt;maybelater&lt;/code&gt; for now, discussion can continue, and a committer can re-open it in the future if we see the need to go in this direction.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38923 (Introduce `WP_Action_Handler` to clean up admin action mess) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 08:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38923#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38923#comment:2/1483433305985220</guid>
      <description>&lt;p&gt;
I'm not sure abstracting this away is a good use of developer time.
&lt;/p&gt;
&lt;p&gt;
It's working as-is right now, and going forward there'll more reliance upon using the REST API for most of these kind of actions.
We're probably at the point where a no-js fallback action isn't likely to be needed in a good proportion of cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24913 (comment_text filter used differently in two places in core) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 08:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24913#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24913#comment:6/1483432381024025</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IMHO: The pre-check filter should pass &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;array()&lt;/code&gt; for &lt;code&gt;$args&lt;/code&gt;, and the filter documentation should be updated to account for it. The documentation should explicitly point out that the comment context is unavailable during comment creation/checking which is why it's &lt;code&gt;null&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Ideally they'd be differently named filters, but we can't change that now.
Historically the filter probably wasn't passed the context of the comment object, which is why it'd have made sense once upon a time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39043 (HTTP API :: Its Not Possible To Send Data In Body For GET Requests) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 08:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39043#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39043#comment:11/1483432095018744</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15936 (IPv6 literal support in multisite broken) updated</title>
      
        <dc:creator>arnalyse</dc:creator>

      <pubDate>Tue, 03 Jan 2017 08:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15936#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15936#comment:20/1483431746903572</guid>
      <description>&lt;p&gt;
I just wanted to chime in on what @jamietelin said: We would absolutely love to see support of other than standard ports, maybe at least ports commonly used for local development (think :8080, :8080, :8090). Or a way to extend WordPress Multisite to allow their usage (via hook or dropin) without hacking core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39443 (Search Page Template the_category() bug) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Tue, 03 Jan 2017 07:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39443#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39443#comment:1/1483429594955747</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39443 (Search Page Template the_category() bug) created</title>
      
        <dc:creator>cybentizen</dc:creator>

      <pubDate>Tue, 03 Jan 2017 07:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39443/1483429083843932</guid>
      <description>&lt;p&gt;
Suppose If I've selected three categories following a structure HR -&amp;gt; Reports -&amp;gt; Daily Reports.
&lt;/p&gt;
&lt;p&gt;
Single.php shows the structure in the right way but when I use the same the_category () function inside Search template then it shows the different result. Rather than showing it in the default structure, it shows it like Daily Reports -&amp;gt; HR -&amp;gt; Reports. In search template the structure changes to order by name. The_category working perfectly in other pages.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38583 (Support for objects in schema validation and sanitization) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 03 Jan 2017 06:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38583#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38583#comment:1/1483424086667775</guid>
      <description>&lt;p&gt;
I've taken a stab at implementing support for object validation in &lt;a class="ext-link" href="https://github.com/xwp/wp-js-widgets/blob/062c571f5ea77c5c0e3a069b6db3f40f763c97e8/php/class-js-widgets-rest-controller.php#L300-L365"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-js-widgets/blob/062c571f5ea77c5c0e3a069b6db3f40f763c97e8/php/class-js-widgets-rest-controller.php#L300-L365&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39294 (Incorrect docs for pre_do_shortcode_tag and do_shortcode_tag filters) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 03:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39294#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39294#comment:3/1483415935472658</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
After chatting with @DrewAPicture I'm punting this to 4.8.
&lt;/p&gt;
&lt;p&gt;
If the docs are critical enough, Scott can manually update it, but it's obscure and trivial enough that I don't expect anyone to really run into it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39294 (Incorrect docs for pre_do_shortcode_tag and do_shortcode_tag filters) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 03:57:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39294#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39294#comment:2/1483415825973187</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39665" title="Shortcodes: Clarify the docs for `pre_do_shortcode_tag` and ..."&gt;39665&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Shortcodes: Clarify the docs for &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; and &lt;code&gt;do_shortcode_tag&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dhanendran.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39294" title="#39294: defect (bug): Incorrect docs for pre_do_shortcode_tag and do_shortcode_tag filters (closed: fixed)"&gt;#39294&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39665]: Shortcodes: Clarify the docs for `pre_do_shortcode_tag` and ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 03:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39665</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39665/1483415823401785</guid>
      <description>&lt;p&gt;
Shortcodes: Clarify the docs for &lt;code&gt;pre_do_shortcode_tag&lt;/code&gt; and &lt;code&gt;do_shortcode_tag&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dhanendran.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39294" title="#39294: defect (bug): Incorrect docs for pre_do_shortcode_tag and do_shortcode_tag filters (closed: fixed)"&gt;#39294&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39376 (Pass WP_REST_Request object to registered callback for a route schema.) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Tue, 03 Jan 2017 03:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39376#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39376#comment:6/1483414243082195</guid>
      <description>wontfix: &lt;p&gt;
After giving this some more thought I'd rather fix this issue by revising the documentation rather than adding another parameter in the code.  The schema callback shouldn't care what the route is or about the details of the request, because the schema is the description of a single item regardless of what you are doing to that item.
&lt;/p&gt;
&lt;p&gt;
More generally, I would also recommend one &lt;code&gt;register_rest_route&lt;/code&gt; call per endpoint, preferring explicit code over implicit dynamic registration.  This makes it easier to follow what endpoints are registered, and where and how.  This isn't always possible though - @nerrad and I chatted some in DMs where he shared his code that led to this request:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/eventespresso/event-espresso-core/blob/ca9e8ea/modules/core_rest_api/EED_Core_Rest_Api.module.php#L77"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`rest_api_init` callback&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/eventespresso/event-espresso-core/blob/ca9e8ea/modules/core_rest_api/EED_Core_Rest_Api.module.php#L178"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`register_rest_route` call&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/eventespresso/event-espresso-core/blob/ca9e8ea/modules/core_rest_api/EED_Core_Rest_Api.module.php#L390"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`schema_callback` argument&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/eventespresso/event-espresso-core/blob/ca9e8ea/core/libraries/rest_api/controllers/model/Read.php#L92"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;schema callback code&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/eventespresso/event-espresso-core/blob/ca9e8ea/core/libraries/rest_api/controllers/model/Read.php#L129"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;current code to determine the request route&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As an alternative solution, I suggested something like &lt;code&gt;schema_callback =&amp;gt; create_schema_callback( 'some_model_type' )&lt;/code&gt; which seems like a better level of abstraction than relying on the REST route.
&lt;/p&gt;
&lt;p&gt;
I've fixed the incorrect documentation linked in the original report, so we can close this ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35835 (_deprecated_file undefined in rss-functions.php) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 03 Jan 2017 01:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35835#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35835#comment:6/1483405398845209</guid>
      <description>invalid: &lt;p&gt;
Remarking as invalid. Discussion can continue; a committer can re-open if they feel the need to.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39442 (Custom rewrite endpoints and wp_old_slug_redirect) created</title>
      
        <dc:creator>batmoo</dc:creator>

      <pubDate>Tue, 03 Jan 2017 00:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39442/1483402863022888</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33920" title="#33920: defect (bug): `wp_old_slug_redirect` ignores rewrite endpoints (closed: fixed)"&gt;#33920&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_old_slug_redirect&lt;/code&gt; currently only handles core rewrite endpoints (like &lt;code&gt;feed&lt;/code&gt; and &lt;code&gt;embed&lt;/code&gt;). If you have a custom rewrite endpoint, you end up redirected back to the new permalink.
&lt;/p&gt;
&lt;p&gt;
You can use the [old_slug_redirect_url &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/old_slug_redirect_url/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/hooks/old_slug_redirect_url/&lt;/a&gt;] filter to redirect correctly but the filter does not pass the post id, which makes things a bit challenging (especially if you need to do any processing beyond just appending the endpoint).
&lt;/p&gt;
&lt;p&gt;
It would be nice if the post id was passed into the &lt;code&gt;old_slug_redirect_url&lt;/code&gt; filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$link = apply_filters( 'old_slug_redirect_url', $link, $id );
&lt;/pre&gt;&lt;p&gt;
It would be even nicer if the redirect handled custom endpoints automatically as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) updated</title>
      
        <dc:creator>ccprog</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:4/1483397166379331</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15953 (when category slug is changed, old uri also should redirect to new, as ...) updated</title>
      
        <dc:creator>kevinlangleyjr</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15953#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15953#comment:7/1483396928601038</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached a patch above with functionality and the unit tests for it
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15953.patch attached to Ticket #15953</title>
      
        <dc:creator>kevinlangleyjr</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15953/15953.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15953/15953.patch/1483396873670785</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) updated</title>
      
        <dc:creator>ccprog</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:3/1483396296307413</guid>
      <description>&lt;p&gt;
The public website has PHP 5.6.27, Apache/2.2.31 (Unix) with this .htaccess:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# BEGIN WordPress
&amp;lt;IfModule mod_rewrite.c&amp;gt;
RewriteEngine On
RewriteBase /
RewriteRule ^index\.php$ - [L]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule . /index.php [L]
&amp;lt;/IfModule&amp;gt;
# END WordPress
&lt;/pre&gt;&lt;p&gt;
cgi-fcgi settings:
&lt;/p&gt;
&lt;pre class="wiki"&gt;cgi.check_shebang_line	1	1
cgi.discard_path	0	0
cgi.fix_pathinfo	1	1
cgi.force_redirect	0	0
cgi.ignore_repeated_errors	1	1
cgi.nph	0	0
cgi.redirect_status_env	no value	no value
cgi.rfc2616_headers	0	0
fastcgi.logging	1	1
&lt;/pre&gt;&lt;p&gt;
Permalinks settings are "Month and name", Link header points to &lt;code&gt;/wp-json/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
My development system is a PHP 5.6.29-0+deb8u1, lighttpd/1.4.35, no equivalent to .htaccess.
&lt;/p&gt;
&lt;p&gt;
cgi-fcgi settings:
&lt;/p&gt;
&lt;pre class="wiki"&gt;cgi.check_shebang_line	1	1
cgi.discard_path	0	0
cgi.fix_pathinfo	1	1
cgi.force_redirect	1	1
cgi.nph	0	0
cgi.redirect_status_env	no value	no value
cgi.rfc2616_headers	0	0
fastcgi.logging	1	1
&lt;/pre&gt;&lt;p&gt;
Permalinks settings are "Post name", Link header points to &lt;code&gt;/index.php/wp-json/&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I am aware that &lt;code&gt;?rest_route=/&lt;/code&gt; works, but that is not what the Link header and &lt;code&gt;rest_url('')&lt;/code&gt; deliver, and therefore autodiscovery fails. For example in the &lt;a class="ext-link" href="http://wordpress.org/plugins/rest-api-console/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;REST API Console&lt;/a&gt; plugin, the reference panel remains empty.
&lt;/p&gt;
&lt;p&gt;
The essence is, as I understand it now, there are setups where
&lt;/p&gt;
&lt;pre class="wiki"&gt;$_SERVER[REQUEST_URI] = '/index.php/wp-json/'
$_SERVER[PATH_INFO] = '/wp-json/'
&lt;/pre&gt;&lt;p&gt;
The uri is then run through wp_rewrite, but PATH_INFO is not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39389 (Customize: Make sure selective refreshed partial placement is scrolled ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39389#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39389#comment:5/1483395905278648</guid>
      <description>&lt;p&gt;
I've been trying out the implementation in JS Widgets and it's been quite annoying for the scrolling to happen whenever the widget changes. Limiting it to just when the control is expanded is working better for me. I agree that the scrolling shouldn't be done if the user clicked the edit shortcut as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 22:11:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441#comment:1/1483395098866409</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39441/39441.diff" title="Attachment '39441.diff' in Ticket #39441"&gt;39441.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39441/39441.diff" title="Download"&gt;​&lt;/a&gt; is an initial take on the technical part of the improvements from the ticket description (except implementing the single array parameter support of &lt;code&gt;add_settings_field()&lt;/code&gt;). What the patch does:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Support passing one out of a few predefined strings as the &lt;code&gt;$callback&lt;/code&gt; parameter in &lt;code&gt;add_settings_field()&lt;/code&gt;, which then refer to core callback functions (happens in &lt;code&gt;do_settings_fields()&lt;/code&gt;): What these strings and core-supported field types are needs to be discussed, I just added a few very basic ones that I think we should support. Four of the five callbacks are actually not yet implemented and only exist for demonstration purposes.
&lt;/li&gt;&lt;li&gt;Enhance the &lt;code&gt;$args&lt;/code&gt; parameter in &lt;code&gt;add_settings_field()&lt;/code&gt;. It now supports more arguments and does some sanitization by filling defaults in. The only complex new argument is probably the &lt;code&gt;value_callback&lt;/code&gt; one: It will be used to fetch the current value for the field. It usually does not need to be used, as most developers are probably using a regular &lt;code&gt;get_option()&lt;/code&gt; call here. The default value for this argument is a new function &lt;code&gt;get_settings_field_option()&lt;/code&gt; which retrieves the option based on the field's &lt;code&gt;input_name&lt;/code&gt; argument. The function also supports fetching option values for multidimensional names, similar how it happens currently in the Customizer.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I also created a small plugin &lt;a class="missing attachment"&gt;settings-api-tests.php&lt;/a&gt; that can be used to test this functionality. Note that some fields there won't have any output yet, simply because I didn't implement their functions yet, as I mentioned above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39441.diff attached to Ticket #39441</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 21:59:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39441/39441.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39441/39441.diff/1483394370431172</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39441 (Improve the Settings API for accessibility and ease of use.) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 21:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39441/1483394294067454</guid>
      <description>&lt;p&gt;
Today a kickoff meeting for the Settings API took place on Slack (Archive: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1483376507000492"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/accessibility/p1483376507000492&lt;/a&gt;) where we discussed ways to improve it, both in terms of accessibility and ease of use.
&lt;/p&gt;
&lt;p&gt;
After a good discussion we came to the conclusion that we would like to focus on the existing Settings API for now and do what we can to improve it. The Fields API project will eventually make the process of registering settings and having them automatically rendered even easier and complete, but we should not wait until it is ready for a core-merge, as some issues in the existing Settings API should be solved sooner than later.
&lt;/p&gt;
&lt;p&gt;
We figured out two main goals:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add some basic support to automatically render fields so that plugin developers no longer need to write their own callback functions for basic fields.
&lt;/li&gt;&lt;li&gt;Get rid of the table structure to improve accessibility. Furthermore the accessibility team should also ensure that the markup generated as the core field output is accessible.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the technical improvements, we would like to do the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adjust &lt;code&gt;add_settings_field()&lt;/code&gt; to support a predefined set of identifiers for a field type instead of a callback function. In that case a default callback function that we would introduce in core would take care of rendering the field. The requirement to write custom callbacks for even the most basic fields is one major issue with the current Settings API and why most people rely on external libraries for that.
&lt;/li&gt;&lt;li&gt;Enhance the &lt;code&gt;$args&lt;/code&gt; parameter of &lt;code&gt;add_settings_field()&lt;/code&gt;. It should become more significant and probably go through some validation, filling it with default values. This is especially important for the new default callbacks.
&lt;/li&gt;&lt;li&gt;Possibly support providing one &lt;code&gt;$args&lt;/code&gt; array as sole parameter to &lt;code&gt;add_settings_field()&lt;/code&gt; that contains the other parameters as well. This would of course need to work in a backward-compatible way.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the accessibility part, we would like to do the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Scaffold an HTML prototype for what a settings page should look like. This will give a good overview of the accessibility approach we should take without having to deal with the PHP implementation.
&lt;/li&gt;&lt;li&gt;Get rid of the current table structure. Whatever the above prototype looks like, it will not have tables anymore. We can generally remove the table structure and change it to something else easily, since all the table output is generated by core (in particular by &lt;code&gt;do_settings_sections()&lt;/code&gt; and &lt;code&gt;do_settings_fields()&lt;/code&gt;). For everyone who uses the API as recommended, this will not bring any BC issues unless they are using specific table-related selectors (like &lt;code&gt;td&lt;/code&gt;) in CSS or JS code. It is unclear whether these should be considered edge-cases and whether a dev-note reflecting the changes is sufficient, or whether we should only support the new markup through an additional parameter which would default to the current &lt;code&gt;table&lt;/code&gt; way. The latter is backward-compatible, but on the other hand it would decrease the amount of sites that become more accessible out-of-the-box.
&lt;/li&gt;&lt;li&gt;Do not deal with people who completely write the table markup manually. We simply cannot do this, other than recommending them to switch to using the Settings API or at least changing their markup. The only thing to keep in mind here is that we should never remove any CSS related to these tables, in order to keep their code working.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of these enhancements would also benefit &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38734" title="#38734: enhancement: Dogfood the Settings API (assigned)"&gt;#38734&lt;/a&gt; as it would become a lot easier to change core's own settings pages to actually use the Settings API.
&lt;/p&gt;
&lt;p&gt;
We will from now on have meetings on Slack to continue discussion in detail every 2 weeks on Monday at 17:00 UTC. However, general opinions and discussion can and should also be placed in this ticket.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39363 (New custom css customizer saved as a published post) updated</title>
      
        <dc:creator>superpoincare</dc:creator>

      <pubDate>Mon, 02 Jan 2017 21:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39363#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39363#comment:3/1483391158142293</guid>
      <description>&lt;p&gt;
I also observed this.
&lt;/p&gt;
&lt;p&gt;
Is this because of Jetpack and compatibility issues?
&lt;/p&gt;
&lt;p&gt;
I think Jetpack stores it as a post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>nhangen</dc:creator>

      <pubDate>Mon, 02 Jan 2017 20:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:111/1483388107237394</guid>
      <description>&lt;p&gt;
Experienced this issue on 4.7 w/ PHP 5.5.38. All files were under 1MB.
&lt;/p&gt;
&lt;p&gt;
Both patches worked, but required max_execution_time to be increased to 45s
&lt;/p&gt;
&lt;p&gt;
max post set to 32M
max filesize set to 16M
&lt;/p&gt;
&lt;p&gt;
On a MediaTemple DV
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #31101,​39280 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 20:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31101%2C39280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31101%2C39280/1483387619979425</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39664" title="Ignore the 'comment_order' setting when determining comment ..."&gt;39664&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when&lt;br /&gt;
'comment_order' was set to 'desc'. This is in violation of the design&lt;br /&gt;
of the comment pagination system: a comment's page is designed not to&lt;br /&gt;
change when 'comment_order' or 'default_comment_page' are changed.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39663" title="Ignore the 'comment_order' setting when determining comment ..."&gt;[39663]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39664]: Ignore the 'comment_order' setting when determining comment ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 20:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39664</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39664/1483387619126037</guid>
      <description>&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when
'comment_order' was set to 'desc'. This is in violation of the design
of the comment pagination system: a comment's page is designed not to
change when 'comment_order' or 'default_comment_page' are changed.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39663" title="Ignore the 'comment_order' setting when determining comment ..."&gt;[39663]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #31101,​39280 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:58:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31101%2C39280</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31101%2C39280/1483387092089636</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39663" title="Ignore the 'comment_order' setting when determining comment ..."&gt;39663&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when&lt;br /&gt;
'comment_order' was set to 'desc'. This is in violation of the design&lt;br /&gt;
of the comment pagination system: a comment's page is designed not to&lt;br /&gt;
change when 'comment_order' or 'default_comment_page' are changed.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39663]: Ignore the 'comment_order' setting when determining comment ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39663</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39663/1483387089096867</guid>
      <description>&lt;p&gt;
Ignore the 'comment_order' setting when determining comment pagination.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;[38740]&lt;/a&gt; incorrectly introduced logic that changed a comment's page when
'comment_order' was set to 'desc'. This is in violation of the design
of the comment pagination system: a comment's page is designed not to
change when 'comment_order' or 'default_comment_page' are changed.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39280" title="#39280: defect (bug): comment permalink wrong in WordPress 4.7 (closed: fixed)"&gt;#39280&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39280 (comment permalink wrong in WordPress 4.7) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39280#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39280#comment:15/1483386987613652</guid>
      <description>&lt;p&gt;
Thanks for reviewing, @rachelbaker. Revert looks good to me.
&lt;/p&gt;
&lt;p&gt;
I will add tests demonstrating the behavior of pagination alongside &lt;code&gt;comment_order&lt;/code&gt; and &lt;code&gt;default_comment_page&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also seems like after this ticket is fixed, we should change &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt; to be "works as intended".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll reference the ticket in the commit message, for future viewers of that ticket. I don't want to change the resolution on a ticket that was closed against an old milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39315 (WP_Tax_Query::transform_query() double escapes name term arguments) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39315#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39315#comment:3/1483385891705774</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39662" title="Don't double-escape `terms` payload in ..."&gt;39662&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't double-escape &lt;code&gt;terms&lt;/code&gt; payload in &lt;code&gt;WP_Tax_Query::transform_query()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;terms&lt;/code&gt; values are passed through &lt;code&gt;sanitize_term_field()&lt;/code&gt; with the 'db'&lt;br /&gt;
flag, which add slashes. Because &lt;code&gt;terms&lt;/code&gt; are subsequently run through&lt;br /&gt;
&lt;code&gt;esc_sql()&lt;/code&gt;, these slashes must be removed. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36348" title="Don't double-escape the 'name' param in `get_terms()`.
[32353] ..."&gt;[36348]&lt;/a&gt;, which added&lt;br /&gt;
a similar step to sanitization in &lt;code&gt;get_terms()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props bcworkz.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39315" title="#39315: defect (bug): WP_Tax_Query::transform_query() double escapes name term arguments (closed: fixed)"&gt;#39315&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39662]: Don't double-escape `terms` payload in ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:38:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39662</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39662/1483385887481361</guid>
      <description>&lt;p&gt;
Don't double-escape &lt;code&gt;terms&lt;/code&gt; payload in &lt;code&gt;WP_Tax_Query::transform_query()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;terms&lt;/code&gt; values are passed through &lt;code&gt;sanitize_term_field()&lt;/code&gt; with the 'db'
flag, which add slashes. Because &lt;code&gt;terms&lt;/code&gt; are subsequently run through
&lt;code&gt;esc_sql()&lt;/code&gt;, these slashes must be removed. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36348" title="Don't double-escape the 'name' param in `get_terms()`.
[32353] ..."&gt;[36348]&lt;/a&gt;, which added
a similar step to sanitization in &lt;code&gt;get_terms()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props bcworkz.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39315" title="#39315: defect (bug): WP_Tax_Query::transform_query() double escapes name term arguments (closed: fixed)"&gt;#39315&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39432 (index.php/wp-json/ does not work) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 19:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39432#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39432#comment:2/1483384651277442</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@ccprog Can you provide details on your server and mod_rewrite configuration?
&lt;/p&gt;
&lt;p&gt;
FYI: Discovery does work even if mod_rewrite is not enabled via &lt;a class="ext-link" href="https://browser-unplugged.net/index.php?rest_route=/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://browser-unplugged.net/index.php?rest_route=/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37188 (Add New Media button does not give aria feedback) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37188#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37188#comment:12/1483383418428441</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1483383416000832"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433#comment:4/1483383036268851</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39661" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;39661&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Update copyright year to 2017 in license.txt.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39659" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;[39659]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39661]: General: Update copyright year to 2017 in license.txt.  Props ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:50:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39661</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39661/1483383035788706</guid>
      <description>&lt;p&gt;
General: Update copyright year to 2017 in license.txt.
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39659" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;[39659]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39399 (REST API: Tests for the view or embed response data for the Users ...) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39399#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39399#comment:6/1483382543859717</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39660" title="REST API: Add missing assertions to the view and embed context ..."&gt;39660&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Add missing assertions to the view and embed context response data for the Users Controller.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds tests for responses where &lt;code&gt;context != 'edit'&lt;/code&gt; the following properties are not included in the response data:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;locale&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;registered_date&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props thepelkus, jnylen0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39399" title="#39399: enhancement: REST API: Tests for the view or embed response data for the Users ... (closed: fixed)"&gt;#39399&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39660]: REST API: Add missing assertions to the view and embed context ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39660</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39660/1483382542166568</guid>
      <description>&lt;p&gt;
REST API: Add missing assertions to the view and embed context response data for the Users Controller.
&lt;/p&gt;
&lt;p&gt;
Adds tests for responses where &lt;code&gt;context != 'edit'&lt;/code&gt; the following properties are not included in the response data:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;locale&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;registered_date&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props thepelkus, jnylen0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39399" title="#39399: enhancement: REST API: Tests for the view or embed response data for the Users ... (closed: fixed)"&gt;#39399&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26601 (Inappropriate content in headings on admin screens) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:36:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26601#comment:136</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26601#comment:136/1483382169609292</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) reopened</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 18:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433#comment:3/1483380211370981</guid>
      <description>&lt;p&gt;
Reopening to be merged into the 4.7 branch to resolve the failing unit test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Basic::test_license
license.txt's year needs to be updated to 2017.
Failed asserting that two strings are equal.
--- Expected
+++ Actual
@@ @@
-'2017'
+'2016'
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39433 (Update copyright year in license.txt) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39433#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39433#comment:2/1483379862473549</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39659" title="General: Update copyright year to 2017 in license.txt.
Props ..."&gt;39659&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Update copyright year to 2017 in license.txt.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39659]: General: Update copyright year to 2017 in license.txt.  Props ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39659</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39659/1483379862016974</guid>
      <description>&lt;p&gt;
General: Update copyright year to 2017 in license.txt.
&lt;/p&gt;
&lt;p&gt;
Props Nikschavan.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39433" title="#39433: defect (bug): Update copyright year in license.txt (closed: fixed)"&gt;#39433&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:4/1483378170689015</guid>
      <description>&lt;p&gt;
@MattyRob Yes definitely need a core developer opinion on this. I'm aware it's not a simple patch and a core developer might bring light on the impact of updating an attachment &lt;code&gt;guid&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38734 (Dogfood the Settings API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38734#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38734#comment:13/1483377650147382</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by sc0ttkclark. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1483377648000549"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 02 Jan 2017 17:16:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:3/1483377374400002</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jlambe
&lt;/p&gt;
&lt;p&gt;
Having looked at the core code wp_insert_attachment() calls wp_insert_post(). This latter function is specifically written to create a GUID but use any existing GUID in preference so it's not going to be a simple patch.
&lt;/p&gt;
&lt;p&gt;
Perhaps we need a core developer to give an opinion.
&lt;/p&gt;
&lt;p&gt;
My personal opinion is that this is straying into a risky area and that GUIDs should not really be changed, the code I use simply moves them about in the database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39280 (comment permalink wrong in WordPress 4.7) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 16:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39280#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39280#comment:14/1483376185484326</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@boonebgorges Wow.  Comment permalinks are amazing.  I agree, a revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;r38740&lt;/a&gt; is what should happen here.  The revert diff is &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39280/39280.diff" title="Attachment '39280.diff' in Ticket #39280"&gt;39280.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39280/39280.diff" title="Download"&gt;​&lt;/a&gt;.  Can you do a final sanity check on my diff?
&lt;/p&gt;
&lt;p&gt;
Before committing, it would be nice to have unit tests for the expected behavior.  Also seems like after this ticket is fixed, we should change &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31101" title="#31101: defect (bug): get_page_of_comment returns wrong page if comments are ordered with ... (closed: fixed)"&gt;#31101&lt;/a&gt; to be "works as intended".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39280.diff attached to Ticket #39280</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 02 Jan 2017 16:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39280/39280.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39280/39280.diff/1483375729377850</guid>
      <description>&lt;p&gt;
revert of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38740" title="Comments: Account for the `comment_order` option in ..."&gt;r38740&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39440 (Database errors on install with WP_DEBUG:true - wp_create_nonce( ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:52:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39440#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39440#comment:3/1483372364246336</guid>
      <description>&lt;p&gt;
@thomas.mery: Some people use Google to search for existing tickets as their search is very good (&lt;code&gt;site:core.trac.wordpress.org &amp;lt;search terms&amp;gt;&lt;/code&gt;). For example, &lt;code&gt;site:core.trac.wordpress.org install nonce&lt;/code&gt; shows &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39047" title="#39047: defect (bug): Installer tries to create nonce before options table exists (closed: fixed)"&gt;#39047&lt;/a&gt; on the first position
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:2/1483371391186497</guid>
      <description>&lt;p&gt;
@MattyRob It's not a bug but can't choose another term for this issue discussion :)
&lt;/p&gt;
&lt;p&gt;
Currently our code do not update the &lt;code&gt;guid&lt;/code&gt;. We use the &lt;code&gt;wp_insert_attachment()&lt;/code&gt; function to create or update the attachment post and set the &lt;code&gt;guid&lt;/code&gt; property for its &lt;code&gt;$args&lt;/code&gt; on each import like so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$args = array_merge($args, [
    'post_title' =&amp;gt; $file['basename'],
    'post_content' =&amp;gt; '',
    'post_status' =&amp;gt; 'inherit',
    'post_mime_type' =&amp;gt; $image['type'],
    'guid' =&amp;gt; $image['url'],
]);
/*
 * Insert/update attachment to posts table.
 */
$id = wp_insert_attachment($args, $image['file'], $parent_id);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When the core function is called, the &lt;code&gt;guid&lt;/code&gt; property passed on update is different from the one already stored. The issue is that the core function do not update the &lt;code&gt;guid&lt;/code&gt; because of this RSS feed unique identifier thing but in our case it is non sense even if it doesn't break things (at least for now) as it do not reflects "reality" as the &lt;code&gt;guid&lt;/code&gt; value points to a file that no longer exists.
&lt;/p&gt;
&lt;p&gt;
So the discussion here is, should we update the core function to also handle the &lt;code&gt;guid&lt;/code&gt; for attachments (on update) if the original file no longer exists? or perhaps provide an option to authorize &lt;code&gt;guid&lt;/code&gt; update whatever post type is (but this is dangerous as the developer should provide an expected &lt;code&gt;guid&lt;/code&gt; to avoid to break things) ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439#comment:1/1483370480034467</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@jlambe
&lt;/p&gt;
&lt;p&gt;
Thanks for posting this issue, I'm not entirely sure it's a bug though as the GUID is not expected to change by the WordPress core code.
&lt;/p&gt;
&lt;p&gt;
That said - it is possible to force the issue if desired. You said above you set it to change - how have you done this? Something similat to the code snippet below works for me in a different situation where I change GUIDs. You'll need to create your new GUID and insert it into the database table at the correct point.
&lt;/p&gt;
&lt;p&gt;
Obviously messing with the database directly can cause issues so be careful when testing this and your own code.
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'inherit' === $post-&amp;gt;post_status ) {
	$guid = get_option( 'siteurl' ) . '/?p=' . $new_id;
	// update the GUID
	$wpdb-&amp;gt;update( $wpdb-&amp;gt;posts,
		array(
			'guid' =&amp;gt; $guid,
		),
		array(
			'ID' =&amp;gt; $post_id,
		)
	);
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39440 (Database errors on install with WP_DEBUG:true - wp_create_nonce( ...) updated</title>
      
        <dc:creator>thomas.mery</dc:creator>

      <pubDate>Mon, 02 Jan 2017 15:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39440#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39440#comment:2/1483370102067743</guid>
      <description>&lt;p&gt;
thanks,
&lt;/p&gt;
&lt;p&gt;
looked for it but apparently not well enough
&lt;/p&gt;
&lt;p&gt;
any tip for next time? (with this issue as an example I searched for 'install' 'db' 'errors' 'rest-api')
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39130 (Docblock improvements for 4.8) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Mon, 02 Jan 2017 14:35:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39130#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39130#comment:6/1483367716828381</guid>
      <description>&lt;p&gt;
These hooks should be documented:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;load-page-new.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-page.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-categories.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-edit-link-categories.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;load-edit-tags.php&lt;/code&gt; in /wp-admin/admin.php
&lt;/li&gt;&lt;li&gt;&lt;code&gt;header_video_settings&lt;/code&gt; in /wp-includes/theme.php
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For the &lt;code&gt;header_video_settings&lt;/code&gt; filter there's &lt;a href="https://core.trac.wordpress.org/attachment/ticket/39130/39130.12.patch"&gt;this patch&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The actions in &lt;code&gt;/wp-admin/admin.php&lt;/code&gt; are deprecated but should still be documented because of &lt;a class="ext-link" href="https://github.com/WordPress/phpdoc-parser/issues/185"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this issue&lt;/a&gt; with the parser.
&lt;/p&gt;
&lt;p&gt;
In the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP Documentation Standards&lt;/a&gt; handbook we should make it more clear that DocBlocks start with a double asterisk (&lt;code&gt;/**&lt;/code&gt;) and should &lt;strong&gt;only be used&lt;/strong&gt; for &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#what-should-be-documented"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;these elements&lt;/a&gt;. For all other inline documentation &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#5-2-multi-line-comments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;multi-line&lt;/a&gt; or &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#5-1-single-line-comments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;single-line&lt;/a&gt; comments should be used. This is &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/theme.php#L800"&gt;an example of wrong DocBlock usage&lt;/a&gt; that the parser picks up as a DocBlock and could potentially assign to a hook.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #39047,​39440 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 02 Jan 2017 14:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39047%2C39440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39047%2C39440/1483367266307622</guid>
      <description>duplicate: &lt;p&gt;
Hello @thomas.mery and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39047" title="#39047: defect (bug): Installer tries to create nonce before options table exists (closed: fixed)"&gt;#39047&lt;/a&gt; so I'm closing this one as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39440 (Database errors on install with WP_DEBUG:true - wp_create_nonce( ...) created</title>
      
        <dc:creator>thomas.mery</dc:creator>

      <pubDate>Mon, 02 Jan 2017 14:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39440/1483367046601766</guid>
      <description>&lt;p&gt;
On a fresh install it seems like there are db calls made before the db is installed
&lt;/p&gt;
&lt;p&gt;
This appears to originate in &lt;code&gt;wp-admin/install.php&lt;/code&gt;line 421
with a &lt;code&gt;wp_print_scripts&lt;/code&gt; call
&lt;/p&gt;
&lt;p&gt;
and more precisely in &lt;code&gt;scripts-loader.php&lt;/code&gt; line 510
where &lt;code&gt;wp_create_nonce( 'wp_rest' )&lt;/code&gt; is called
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39439 (Should wp_insert_attachment() update GUID) created</title>
      
        <dc:creator>jlambe</dc:creator>

      <pubDate>Mon, 02 Jan 2017 12:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39439/1483361888576414</guid>
      <description>&lt;p&gt;
I have a "special" case scenario related to media library attachments.
&lt;/p&gt;
&lt;p&gt;
For the context, I've built a plugin that connects to an external server and sync images stored into the remote server into local WordPress media library. The importer upload files, generate the thumbnails and create a new "attachment" post.
&lt;/p&gt;
&lt;p&gt;
Now, an import process is ran everyday, and basically we re-import the remote images into WordPress but in order to avoid duplicates, we're updating existing attachments if exist. Now, during this update process, we only remove the files stored into the &lt;code&gt;uploads&lt;/code&gt; directory, import the new one with its thumbnails and update the attachment post.
&lt;/p&gt;
&lt;p&gt;
Before doing so, our first approach was to check if an attachment exists, if exists, delete the attachment + its files and then simply create a new attachment. This first approach works but we're having huge ID number into the DB after the import as it generates thousand of new records which we didn't want. So now, only the files are updated, if an attachment post exists, we update its metadata and everything works as expected.
&lt;/p&gt;
&lt;p&gt;
Now the issue/remark we have is that during the update of the attachment post, each time we import the new image file, we set the &lt;code&gt;guid&lt;/code&gt; property to change and use the new imported file path. But when we check the database table, the &lt;code&gt;guid&lt;/code&gt; is not updated at all and reflects the path to the image file imported the first time. Looking at source code, during an update, the &lt;code&gt;guid&lt;/code&gt; is not modified in general as for RSS feeds we need that unique &lt;code&gt;guid&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Our question is, is it relevant in this scenario to keep old &lt;code&gt;guid&lt;/code&gt; property that points to a file that no longer exists? and so should we allow the &lt;code&gt;guid&lt;/code&gt; to be updated by default in core for the attachment?
&lt;/p&gt;
&lt;p&gt;
If RSS readers need that &lt;code&gt;guid&lt;/code&gt;, why attachments use the file path and not an attachment page permalink ? Is there another location that uses this &lt;code&gt;guid&lt;/code&gt; property in place of the meta data for the file path ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39438 (Issue: Every links in customize page have changeset_uuid) created</title>
      
        <dc:creator>behzadg</dc:creator>

      <pubDate>Mon, 02 Jan 2017 12:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39438/1483361570012488</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Working on my new theme in customize page and i noticed all the links inside my theme are like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://localhost/my_theme/?customize_changeset_uuid=c08410ff-d476-410e-83b9-f80dc156370c&amp;amp;customize_messenger_channel=preview-3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/my_theme/?customize_changeset_uuid=c08410ff-d476-410e-83b9-f80dc156370c&amp;amp;customize_messenger_channel=preview-3&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So i tried making some changes on options then save customize page, for exmaple when i right click on logo and open link in new tab, site showing me old settings and not new changes.
&lt;/p&gt;
&lt;p&gt;
Then when i removing query args from link, theme changes works fine.
&lt;/p&gt;
&lt;p&gt;
Where is the problem ?!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39436 (Formatting the text at the registration page) updated</title>
      
        <dc:creator>Soean</dc:creator>

      <pubDate>Mon, 02 Jan 2017 12:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39436#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39436#comment:2/1483359956601459</guid>
      <description>&lt;p&gt;
Hey @edwarddekker1978
I can't reproduce the bug, maybe its caused by a plugin or browser.
Which browser are you using?
Please deactivate all plugins for testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35130 (.wp-full-overlay-main prevents touch scrolling in theme preview iframe ...) updated</title>
      
        <dc:creator>mbiais</dc:creator>

      <pubDate>Mon, 02 Jan 2017 10:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35130#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35130#comment:3/1483352611347153</guid>
      <description>&lt;p&gt;
Looks like this one was fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>Marcoevich</dc:creator>

      <pubDate>Mon, 02 Jan 2017 08:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:105/1483346929467096</guid>
      <description>&lt;p&gt;
+1 too
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27575,​39426 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 02 Jan 2017 02:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27575%2C39426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27575%2C39426/1483322801279350</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the report and conversation. However, the Delete vs Remove distinction is intentional. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27575" title="#27575: defect (bug): Widget Customizer: Inconsistent use of Delete / Remove (closed: wontfix)"&gt;#27575&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39437 (TinyMCE: better way to remove spaces from empty paragraphs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 02:00:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39437#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39437#comment:1/1483322456974963</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 39437.patch: remove empty spaces from paragraphs in the DOM instead of searching through the source HTML with regex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39437.patch attached to Ticket #39437</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 01:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39437/39437.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39437/39437.patch/1483322172121744</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39437 (TinyMCE: better way to remove spaces from empty paragraphs) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 01:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39437</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39437/1483322097160843</guid>
      <description>&lt;p&gt;
Follow up from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35890" title="#35890: defect (bug): TinyMCE downs with the given piece of html text (closed: fixed)"&gt;#35890&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38294" title="#38294: defect (bug): Visual editor hangs in Chrome and Firefox when a sequence of no-break ... (closed: fixed)"&gt;#38294&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It seems better to remove the white space chars (and &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;) in the DOM after the post content is loaded instead of searching through the HTML string with regex. It could be slower in some cases, but is a lot "cleaner".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38978 (Update TinyMCE) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 00:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38978#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38978#comment:4/1483317257903014</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
By the time 4.8 reaches beta, there will probably be newer version of TinyMCE.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39423 (Create add_editor_script, analogous to add_editor_style (add ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 02 Jan 2017 00:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39423#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39423#comment:2/1483316961493104</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>