<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10910 (Standardize comment form) updated</title>
      
        <dc:creator>alexdunae</dc:creator>

      <pubDate>Mon, 05 Oct 2009 23:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10910#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10910#comment:2/1254787137000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with exposing the comment form from the default theme as a function in core, just for simplicity's sake, but I strongly disagree with only letting theme developers customize the form via hooks.
&lt;/p&gt;
&lt;p&gt;
In the past I've added multiple fields to comment forms (marketing opt-in, hometown, etc...), removed the URL field and reduced the comment textarea to input[type=text].  I also frequently re-write the HTML to put the labels above the fields.  To accomplish all that, I'd have to 'complain' to get a lot of hooks added.
&lt;/p&gt;
&lt;p&gt;
So while it would be nice to be able to pull up a standard form when needed, it needs to be tempered with flexibility for theme creators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10908 (Impossible to exclude categries in a category listing) updated</title>
      
        <dc:creator>dimitryz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 22:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10908#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10908#comment:3/1254781154000000</guid>
      <description>&lt;p&gt;
When you're listing the posts for a category. Currently, all posts for that category and posts for that category's children are displayed. If you wanted to exclude the posts of one or more child categories, 'category__not_in' should do the trick.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10908 (Impossible to exclude categries in a category listing) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Oct 2009 22:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10908#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10908#comment:2/1254780882000000</guid>
      <description>&lt;p&gt;
What would be the use-case of this?
&lt;/p&gt;
&lt;p&gt;
category_name is asking to query for a specific item, category__not_in is saying, for the following generic query, i do not want the following  items to be there.. When would they be used together?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10909 (wrong taxonomy structure) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Oct 2009 21:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10909#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10909#comment:1/1254779702000000</guid>
      <description>&lt;p&gt;
I'm pretty sure the Description field is not designed for describing Terms, Rather, Its the description of a Taxonomy.
&lt;/p&gt;
&lt;p&gt;
But you are right... It looks like the field is in a odd location for it, and instead, Appears  to describe a Taxonomy-Term relationship instead.
&lt;/p&gt;
&lt;p&gt;
However, I do not think the WordPress taxonomy system was designed for Term in multiple Taxonomies..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10910 (Standardize comment form) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 05 Oct 2009 20:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10910#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10910#comment:1/1254776042000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
I'd love to be able to easily insert a login form or login prompt in the comment form area on wordpress.com. If we changed all themes to use a well-hooked comment_form(), this would be simple.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10910 (Standardize comment form) created</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Mon, 05 Oct 2009 20:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10910/1254773091000000</guid>
      <description>&lt;p&gt;
Every theme includes a substantially similar piece of code: the comments form. Largely, this form goes unchanged, except in extremely minor ways, from theme to theme. It's ripe for being pulled out of the theme and standardized in the core.
&lt;/p&gt;
&lt;p&gt;
Points of note:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The form contains all the same elements (name, email, url, comment text), which must have all the same names in order for the comment form to actually work.
&lt;/li&gt;&lt;li&gt;Virtually every theme uses styling to adjust the form, not changes to the HTML.
&lt;/li&gt;&lt;li&gt;Any plugin which enhances comments has to have code manually inserted into the theme, in most all cases. A more standardized form could have useful action hooks around the elements in the form, letting plugins work on the form in a simpler way (adding fields to sane locations, etc).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I suggest that this proceed in phases:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Copy the comments form code from default and classic themes into the core, and replace it with a function call. comment_form(), for example.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Add action hooks everywhere in it. Maybe some filters on the minor amounts of text in it, if it makes sense to do so. Add to these as needed, as the theme authors complain about not being able to easily adjust the HTML anymore. Should be a minority, almost all themes leave this verbatim from whatever theme they started out with.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Encourage themes to adjust. Maybe start suggesting themes in the Expand section to use it, like threaded comments did.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9471 (Attachments uploaded before post is saved or autosaved get 0 (zero) ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 05 Oct 2009 19:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9471#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9471#comment:44/1254772536000000</guid>
      <description>&lt;p&gt;
iwords, please open a separate ticket for Quickpress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10909 (wrong taxonomy structure) created</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Mon, 05 Oct 2009 19:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10909/1254770831000000</guid>
      <description>&lt;p&gt;
IMHO there is an logic problem with taxonomy:
&lt;/p&gt;
&lt;p&gt;
category (tag) &lt;strong&gt;name&lt;/strong&gt; is defined in wp_terms table
&lt;/p&gt;
&lt;p&gt;
category (tag) &lt;strong&gt;slug&lt;/strong&gt; is defined in wp_terms table, but
&lt;/p&gt;
&lt;p&gt;
category (tag) &lt;strong&gt;description&lt;/strong&gt; is defined in wp_term_taxonomy table
&lt;/p&gt;
&lt;p&gt;
this is IMHO problem in logic, i do not see any reason for spliting it in different tables and it can be problem for some future needs e.g. if someone (as me now) would need to have more parents for one category.
It would be only logic if it would be possible to define one term as tag AND as category AND as link_category with one name but with different descriptions (but i do not see a point of such need)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10906 (incorrect logic in upgrader class) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 05 Oct 2009 18:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10906#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10906#comment:2/1254766490000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
mm, there should actually be a better patch, which is to cache ABSPATH over in find_folder(). it'll give a performance bonus on top.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10885.4.diff attached to Ticket #10885</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 05 Oct 2009 17:36:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10885/10885.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10885/10885.4.diff/1254764207000000</guid>
      <description>&lt;p&gt;
Alternative that adds an output argument to get_post_types()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10908 (Impossible to exclude categries in a category listing) updated</title>
      
        <dc:creator>dimitryz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 16:49:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10908#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10908#comment:1/1254761371000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10901 (wp.getPages gives different results if Blog pages show at most is ...) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Mon, 05 Oct 2009 16:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10901#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10901#comment:2/1254761073000000</guid>
      <description>&lt;p&gt;
Well the good news that I can't reproduce this on my test install of WP -trunk, so it's probably already been fixed.  I need to test this with an older version of WP to confirm this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10908 (Impossible to exclude categries in a category listing) created</title>
      
        <dc:creator>dimitryz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 16:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10908/1254761025000000</guid>
      <description>&lt;p&gt;
Setting the 'category__not_in' &lt;code&gt;query_var&lt;/code&gt; in a &lt;code&gt;WP_Query&lt;/code&gt; object does nothing if 'category_name' is also present. The consequence is that it's impossible to hide the posts of some child categories for a category listing.
&lt;/p&gt;
&lt;p&gt;
The offending code is in line 1843:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$whichcat = " AND $wpdb-&amp;gt;term_taxonomy.taxonomy = 'category' ";
&lt;/pre&gt;&lt;p&gt;
A dot (.) should be added before the equal (=) to indicate concatenation:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$whichcat .= " AND $wpdb-&amp;gt;term_taxonomy.taxonomy = 'category' ";
&lt;/pre&gt;&lt;p&gt;
The proposed solution enabled the addition of categories ('category__in') and exclusion of categories ('category__not_in') when the following condition is met:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( '' != $q['category_name'] &amp;amp;&amp;amp; !$this-&amp;gt;is_singular ) {
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10907 (get_queried_object does not always return a category) created</title>
      
        <dc:creator>dimitryz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 16:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10907/1254760537000000</guid>
      <description>&lt;p&gt;
I've noticed that retrieving a category with &lt;code&gt;WP_Query::get_queried_object()&lt;/code&gt; does not always work. When the query_var 'cat' is not set and 'category_name' is, nothing is returned. Shouldn't &lt;code&gt;get_queried_object()&lt;/code&gt; also look in 'category_name' and, if present, retrieve the category using &lt;code&gt;get_category_by_path()&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Here is a solution that seems appropriate:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_queried_object() {
...
if ($this-&amp;gt;is_category) {
	$cat = $this-&amp;gt;get('cat');
	if ($cat) {
		$category = &amp;amp;get_category($cat);
	} else {
		$cat = $this-&amp;gt;get('category_name');
		$category = &amp;amp;get_category_by_path($cat);
	}
	if ( is_wp_error( $category ) )
		return NULL;
	$this-&amp;gt;queried_object = &amp;amp;$category;
	$this-&amp;gt;queried_object_id = (int) $category-&amp;gt;term_id;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10885 (Custom post types show up in search) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 05 Oct 2009 15:55:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10885#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10885#comment:9/1254758106000000</guid>
      <description>&lt;p&gt;
get_post_type_objects() returns objects. get_post_types() returns names.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10885.3.diff attached to Ticket #10885</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 05 Oct 2009 15:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10885/10885.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10885/10885.3.diff/1254758068000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Mon, 05 Oct 2009 15:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:3/1254757185000000</guid>
      <description>&lt;p&gt;
Can you comment on what changed on your view in regards to this very discussion you had on the wp-hackers list.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-hackers/2009-February/025019.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://lists.automattic.com/pipermail/wp-hackers/2009-February/025019.html&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Seems that your last comment was:
&lt;/p&gt;
&lt;p&gt;
"Ok, I suppose it wouldn't be a good idea. Nevermind."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10906 (incorrect logic in upgrader class) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 05 Oct 2009 15:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10906#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10906#comment:1/1254755375000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>10906.2.diff attached to Ticket #10906</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 05 Oct 2009 15:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10906/10906.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10906/10906.2.diff/1254755316000000</guid>
      <description>&lt;p&gt;
patch also fixes a typo in the code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10906.diff attached to Ticket #10906</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 05 Oct 2009 15:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10906/10906.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10906/10906.diff/1254755251000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10906 (incorrect logic in upgrader class) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 05 Oct 2009 15:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10906/1254755012000000</guid>
      <description>&lt;p&gt;
on sites where FTP maps the WP ABSPATH to /, the core ugprader fails.
&lt;/p&gt;
&lt;p&gt;
fs_connect() ends up testing !find_folder() at one point, instead of bailing on abspath.
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>mark-k</dc:creator>

      <pubDate>Mon, 05 Oct 2009 13:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:14/1254749854000000</guid>
      <description>&lt;p&gt;
I don't know about what other people do, but for me it is required in every project which need some images to be associated with a post and not in the form of gallery. It results in copying almost the same code which was suggested here from project to project, which I consider to be a needless waste of time.
&lt;/p&gt;
&lt;p&gt;
And not always the image has to be associated with a post. In one project I provided the ability to control an header image of a category page.
&lt;/p&gt;
&lt;p&gt;
I don't know about lazy plugin authors, but if they are doing something more complicated then adding the JS lines, at some day they will probably wise up and use it.
&lt;/p&gt;
&lt;p&gt;
I do know about performance. I know that I am using the lowest broadband I can get and it is 96k upstream. The minimal VPS I am using for my personal blog and a small WPMU installation and a small RSS aggregator is far from reaching its bandwidth limits. I find it hard to believe that even if there will be an extra 1k wasted for each form, and since this is the admin interface we are talking about, it will have any measurable real life implication.
On the contrary, adding JS for every admin page load, even when you are just inspecting the data, can prove to be more wasteful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 05 Oct 2009 13:30:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:2/1254749422000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 05 Oct 2009 13:14:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905#comment:1/1254748472000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When trying to add a UNIQUE index to post_id, meta_key and meta_value I get an error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#1170 - BLOB/TEXT column 'meta_value' used in key specification without a key length
&lt;/pre&gt;&lt;p&gt;
So this will have to be resolved through the *_metadata() API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10905 (Do not allow duplicate (post_id, meta_key, meta_value) rows in meta tables) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 05 Oct 2009 13:09:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10905/1254748158000000</guid>
      <description>&lt;p&gt;
Having these two rows in a meta table shouldn't be allowed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;meta_id		post_id		meta_key	meta_value
1000		1		foo		bar
1001		1		foo		bar
&lt;/pre&gt;&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10904 (Contributors can see titles of the pending posts and comments in their ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Oct 2009 05:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10904#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10904#comment:1/1254719268000000</guid>
      <description>duplicate: &lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8111" title="#8111: defect (bug): Edit Posts lists for contributors should not list drafts by other users (closed: wontfix)"&gt;#8111&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #8111 (Edit Posts lists for contributors should not list drafts by other users) updated</title>
      
        <dc:creator>sg11111</dc:creator>

      <pubDate>Mon, 05 Oct 2009 04:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8111#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8111#comment:7/1254717443000000</guid>
      <description>&lt;p&gt;
If they want to work as a team, you can give them author roles or higher. I don't think the contributors should be able to see these titles of the pending posts and comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10904 (Contributors can see titles of the pending posts and comments in their ...) created</title>
      
        <dc:creator>sg11111</dc:creator>

      <pubDate>Mon, 05 Oct 2009 04:25:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10904/1254716716000000</guid>
      <description>&lt;p&gt;
Greetings. I think this is a serious privacy issue which should be fixed asap. I want to give contributor rights for all users on my blog to post for promoting participation on the blog. But when I give contributor rights, they can even see the titles of the pending unapproved posts and comments in their admin. I think such a capability should only be given to moderator and above or even authors and above but not to contributors as contributors don't want to know about how the blog is moderated or which spam comments are rejected etc. Kindly do fix this in 2.8.5. Thank you.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8644 (wpautop breaks &lt;fieldset&gt; and &lt;legend&gt; markup) updated</title>
      
        <dc:creator>Sam_a</dc:creator>

      <pubDate>Mon, 05 Oct 2009 02:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8644#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8644#comment:9/1254710483000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attached patch autop_fieldset_legend.diff seems to fix the problem in trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>autop_fieldset_legend.diff attached to Ticket #8644</title>
      
        <dc:creator>Sam_a</dc:creator>

      <pubDate>Mon, 05 Oct 2009 02:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8644/autop_fieldset_legend.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8644/autop_fieldset_legend.diff/1254710074000000</guid>
      <description>&lt;p&gt;
Stops autop from breaking fieldset &amp;amp; legend markup
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2659 (Comment meta) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 01:56:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2659#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2659#comment:59/1254707788000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/2659#comment:57" title="Comment 57"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is a bug which I'm pretty sure is in the commentmeta handler...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, delete_metadata() was ignoring comment_id/post_id and deleting all fields with the meta name for all comments/posts. Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11996" title="Fix delete_metadata(), see #2659"&gt;[11996]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 01:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:98/1254707363000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11997" title="Add conditional to handle get_comment_meta() return value, make ..."&gt;[11997]&lt;/a&gt;) Add conditional to handle get_comment_meta() return value, make #comment_id required arg for wp_trash_comment() and wp_untrash_comment(), see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11997]: Add conditional to handle get_comment_meta() return value, make ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 01:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11997</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11997/1254707359603005</guid>
      <description>&lt;p&gt;
Add conditional to handle get_comment_meta() return value, make #comment_id required arg for wp_trash_comment() and wp_untrash_comment(), see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2659 (Comment meta) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 01:08:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2659#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2659#comment:58/1254704888000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11996" title="Fix delete_metadata(), see #2659"&gt;[11996]&lt;/a&gt;) Fix delete_metadata(), see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2659" title="#2659: task (blessed): Comment meta (closed: fixed)"&gt;#2659&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11996]: Fix delete_metadata(), see #2659</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 05 Oct 2009 01:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11996</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11996/1254704886243535</guid>
      <description>&lt;p&gt;
Fix delete_metadata(), see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2659" title="#2659: task (blessed): Comment meta (closed: fixed)"&gt;#2659&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10903 (Plugin editor removes valid backslashes) created</title>
      
        <dc:creator>takayukister</dc:creator>

      <pubDate>Sun, 04 Oct 2009 20:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10903/1254687525000000</guid>
      <description>&lt;p&gt;
After updating a file in the "Plugins" &amp;gt; "Editor" menu, all backslashes in the source file disappear. For example, a "\n" will be replaced with just a "n" and newlines have no meaning. I tested this on the latest trunk revision 11995.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10902 (Display problem with exclude option in wp_list_pages) created</title>
      
        <dc:creator>toutantic</dc:creator>

      <pubDate>Sun, 04 Oct 2009 19:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10902/1254685538000000</guid>
      <description>&lt;p&gt;
Create pages A,B,C and D, A parent of B, B of C and C of D
&lt;/p&gt;
&lt;pre class="wiki"&gt;A
-B
--C
---D
&lt;/pre&gt;&lt;p&gt;
call in a template
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php wp_list_pages("exclude=6"); ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
(6 is the ID of page B)
&lt;/p&gt;
&lt;p&gt;
I get this display:
&lt;/p&gt;
&lt;pre class="wiki"&gt;* A
* C
* D
&lt;/pre&gt;&lt;p&gt;
when I expect:
&lt;/p&gt;
&lt;pre class="wiki"&gt;* A
* C
-* D
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10901 (wp.getPages gives different results if Blog pages show at most is ...) updated</title>
      
        <dc:creator>jb6262</dc:creator>

      <pubDate>Sun, 04 Oct 2009 18:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10901#comment:1/1254682190000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10901 (wp.getPages gives different results if Blog pages show at most is ...) created</title>
      
        <dc:creator>jb6262</dc:creator>

      <pubDate>Sun, 04 Oct 2009 18:49:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10901/1254682165000000</guid>
      <description>&lt;p&gt;
This comes up as a result of testing and working with the iPhone app.  The ticket on the iPhone app is here: &lt;a class="ext-link" href="https://iphone.trac.wordpress.org/ticket/162"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://iphone.trac.wordpress.org/ticket/162&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Briefly, output from the wp.getPages call appears to be different if the "Blog pages show at most" setting is changed to 1.  This was tested and verified on a bare-bones wordpress.com blog.
&lt;/p&gt;
&lt;p&gt;
In that case, the wp.getPages call appears to only return one page, regardless of the number of pages in the blog.
&lt;/p&gt;
&lt;p&gt;
For convenience, the last post in the iPhone app ticket is included below.  It includes a test to show this problem occuring outside of the iPhone app using an HTTP Client tool.
&lt;/p&gt;
&lt;p&gt;
========
&lt;/p&gt;
&lt;p&gt;
Resolving as "invalid" because the problem appears to be on the WP server itself. Naturally this should be added as a bug on the WP side, which I will do right after finishing this ticket.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce this proof...
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Change Settings&amp;gt;Reading&amp;gt;Blog pages show at most to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
2 Using an HTTP Client, submit a wp.getPages post to the blog's rpc endpoint thus. (Obviously you'll need to your username, password and blog id number)
&lt;/p&gt;
&lt;ol start="3"&gt;&lt;li&gt;Note that only one page comes back
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Change the setting on the Blog to 10 and try again
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="5"&gt;&lt;li&gt;Note that 10 pages now come back.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
==========
&lt;/p&gt;
&lt;p&gt;
To find this data for your blog(s), put the following line in XMLRPCEncoder.m : -encode just before the return statement at the end of the method. Put a breakpoint on that line, then compile the app, and delete and re-add your blog. Continue through the breakpoint several times (one for each different method call to the WP Server) and you will get the wp.getPages call on the 6th or 7th try.
&lt;/p&gt;
&lt;p&gt;
The NSLog line will output the XML being used to build the XMLRPC request... You can then use copy/paste that into an HTTP client tool to test.
&lt;/p&gt;
&lt;p&gt;
NSLog(@"buffer:: %@", buffer);
&lt;/p&gt;
&lt;p&gt;
Post XML:
&lt;/p&gt;
&lt;p&gt;
&amp;lt;?xml version="1.0"?&amp;gt;
&amp;lt;methodCall&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;methodName&amp;gt;wp.getPages&amp;lt;/methodName&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;params&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;string&amp;gt;YourBlogIDNumber&amp;lt;/string&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;string&amp;gt;YourUserName&amp;lt;/string&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;string&amp;gt;YourPassword&amp;lt;/string&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/params&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/methodCall&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>general-template.php.diff attached to Ticket #10900</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 04 Oct 2009 16:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10900/general-template.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10900/general-template.php.diff/1254672716000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10900 (Consistent filters for single_*_title()) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 04 Oct 2009 16:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10900/1254672675000000</guid>
      <description>&lt;p&gt;
In WP 2.9-rare, single_tag_title() doesn't have strip_tags() applied to it, while single_cat_title() and single_post_title() do.
&lt;/p&gt;
&lt;p&gt;
Additionally, single_post_title() also has wptexturize() applied.
&lt;/p&gt;
&lt;p&gt;
This should be fixed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>alanjohndix</dc:creator>

      <pubDate>Sun, 04 Oct 2009 14:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:39/1254665053000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I missed this thread and submitted a separate bug report with a patch &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10490"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/10490&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The patch seems to cover all the cases discussed.
&lt;/p&gt;
&lt;p&gt;
A core problem is the back reference "\2" in the regular expression which which changes its meaning when used in a different context by wpautop.
&lt;/p&gt;
&lt;p&gt;
I also describe it in a short blog as I couldn't work out how to get some things to format in the comment box.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.alandix.com/blog/2009/07/26/fix-for-wordpress-shortcode-bug/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.alandix.com/blog/2009/07/26/fix-for-wordpress-shortcode-bug/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10899 (FTP password doesn't work if it contains an apostrophe) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 04 Oct 2009 12:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10899#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10899#comment:1/1254658193000000</guid>
      <description>duplicate: &lt;p&gt;
See: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11808" title="Strip slashes from POST data in request_filesystem_credentials(), ..."&gt;[11808]&lt;/a&gt; Strip slashes from POST data in request_filesystem_credentials(), props dd32, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10567" title="#10567: defect (bug): Automatic update FTP Username Bug (closed: fixed)"&gt;#10567&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10899 (FTP password doesn't work if it contains an apostrophe) created</title>
      
        <dc:creator>ChadCloman</dc:creator>

      <pubDate>Sun, 04 Oct 2009 11:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10899/1254657255000000</guid>
      <description>&lt;p&gt;
When automatically updating a plugin, I was asked for my FTP credentials. The FTP login always failed. I tried multiple times to get it to work, on multiple occasions.
&lt;/p&gt;
&lt;p&gt;
My password happened to include an apostrophe. I changed the password so that it no longer had the apostrophe. Then when I re-tried the FTP update, it worked.
&lt;/p&gt;
&lt;p&gt;
Note that it's not only the plugin update FTP that didn't work. There were other occasions where the WP admin pages asked for FTP credentials, and none of them worked with the apostrophe.
&lt;/p&gt;
&lt;p&gt;
I haven't looked through the code, but I'm assuming there's a generic input function that escapes special characters like apostrophes, and that this is why it didn't work.
&lt;/p&gt;
&lt;p&gt;
WordPress 2.8.4, Windows XP, Firefox 3.5.3
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10891 (Internal support for conditional scripts (same as existing conditional ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 04 Oct 2009 10:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10891#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10891#comment:1/1254651826000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 04 Oct 2009 09:24:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:13/1254648262000000</guid>
      <description>&lt;p&gt;
Yes, there are better ways to handle uploading (perhaps not as simple).
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10518#comment:11" title="Comment 11"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I ask, because I know for a fact that this doesn't:
...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;    jQuery(':text').attr('type', 'hidden');
&lt;/pre&gt;&lt;p&gt;
Yeah, there's no point in trying to set a text field to hidden and the otherway round with js. There's no real difference between &lt;code&gt;type="text" style="display: none"&lt;/code&gt; and &lt;code&gt;type="hidden"&lt;/code&gt; from form functionality point of view except that you can show/hide the text field later with js.
&lt;/p&gt;
&lt;p&gt;
As far as I can see changing the enctype with js works since it's checked when the form is submitted not when the page is loading.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6837 (New hook to replace the admin color scheme chooser in user-edit.php) updated</title>
      
        <dc:creator>Jick</dc:creator>

      <pubDate>Sun, 04 Oct 2009 09:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6837#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6837#comment:8/1254648207000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:12/1254646074000000</guid>
      <description>&lt;p&gt;
Adding to this I don't think this is a very desirable thing to do. As DD32 suggests, it'll be bait for plugin authors to not deal with uploads asynchronously.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:11/1254645995000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10518#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is very easy to change all forms to this at the moment too:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('admin_print_footer_scripts', 'my_form_type', 20);
function my_form_type(){ ?&amp;gt;
    jQuery('form').attr('enctype', 'multipart/form-data');
&amp;lt;?php
}
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
are you sure that works? I ask, because I know for a fact that this doesn't:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('admin_print_footer_scripts', 'my_form_type', 20);
function my_form_type() { ?&amp;gt;
    &amp;lt;script&amp;gt;
    jQuery(':text').attr('type', 'hidden');
    &amp;lt;/script&amp;gt;
&amp;lt;?php
}
&lt;/pre&gt;&lt;p&gt;
when you try it, Safari spits out an error along the lines of "Can't modify this attribute"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:43:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:30/1254645794000000</guid>
      <description>&lt;p&gt;
UNIQUE autoloaded_options (autoload, option_name) makes sense, yeah.
&lt;/p&gt;
&lt;p&gt;
D.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10720 (pre_option_gmt_offset is never applied) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:07:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10720#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10720#comment:3/1254643635000000</guid>
      <description>&lt;p&gt;
Ohhh, meta programming. Excellent :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 08:05:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:29/1254643518000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/2699#comment:27" title="Comment 27"&gt;johnjosephbachir&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the most common query on that table by far is this (found in functions.php around line 347):
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually I forgot about preloading autoloaded options (functions.php around line 423):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;wpdb&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;options&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; autoload &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'yes'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So, adding an index to cover that:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; option_name &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; autoloaded_options &lt;span class="p"&gt;(&lt;/span&gt;autoload&lt;span class="p"&gt;,&lt;/span&gt; option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Note that each of the indexes is needed to cover each of the mentioned queries, because the order of the columns is crucial.
&lt;/p&gt;
&lt;p&gt;
Actually, now I'm realizing that there isn't an index on autoload at all, which is kind of wild, because that means that query results in a tablescan on the options table. Since that table rarely gets big, MySQL's own on-the-fly optimizations must be sufficient (I certainly have never seen that query in a slow query log).
&lt;/p&gt;
&lt;p&gt;
Or maybe there aren't a lot of options with the autoload flag set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 07:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:28/1254642961000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2699 (Make option_name index unique) updated</title>
      
        <dc:creator>johnjosephbachir</dc:creator>

      <pubDate>Sun, 04 Oct 2009 07:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2699#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2699#comment:27/1254642954000000</guid>
      <description>&lt;p&gt;
Hey folks -- cool to see my ticket resurrected after 3 years :-)
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/2699#comment:25" title="Comment 25"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some WPMU installs use InnoDB for the options table.  Having a varchar as the primary key isn't the best for InnoDB since it prefers small, sequential primary keys.  Should we make option_id primary and option_name unique?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's true -- it's a pretty bad idea to make an innodb primary key non-numeric or non-sequential, and here we are doing both.
&lt;/p&gt;
&lt;p&gt;
Having a primary key on option_id, and then a separate unique key covering whatever columns we like, will provide the same performance benefits, with a slight increase in disk space used by that table and its indexes (but maybe not compared to what we had before-- I'd have to think a little harder to be sure). At any rate, it's a good design.
&lt;/p&gt;
&lt;p&gt;
in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11883" title="Make option_name the primary key for the options table. Props ..."&gt;r11883&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;KEY&lt;/span&gt; option_id &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Best for InnoDB (and probably best or equivalent in myisam as well:)
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; option_name &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And while we're at it, having the unique key cover all of the columns in popular queries would allow for innodb to not have to go back to the primary data store to get the info, and only stay in the index, cutting down on a spindle access or two, per query.
&lt;/p&gt;
&lt;p&gt;
Because the most common query on that table by far is this (found in functions.php around line 347):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; option_value &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;wpdb&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;options&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; option_name &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'$setting'&lt;/span&gt; &lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
We could get a big performance win with this index:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;option_id&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="k"&gt;UNIQUE&lt;/span&gt; option_name &lt;span class="p"&gt;(&lt;/span&gt;option_name&lt;span class="p"&gt;,&lt;/span&gt; option_value &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And that's what I recommend as the least obtrusive optimization. (assuming we do still want to enforce uniqueness of option_name at the DBMS layer-- otherwise just make it a straight &lt;code&gt;INDEX&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
Now, something to consider is that
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;option_id is currently a &lt;code&gt;bigint&lt;/code&gt;, which means it is 8 bytes. This restricts the number of rows in that table to (wait for it…) &lt;strong&gt;18,446,744,073,709,551,615&lt;/strong&gt;
&lt;/li&gt;&lt;li&gt;the bigger the column on which a primary key is made, the worse the performance (both for space and time complexity), &lt;em&gt;especially&lt;/em&gt; if it is bigger than 4 bytes (&lt;code&gt;int&lt;/code&gt;).
&lt;/li&gt;&lt;li&gt;so, assuming that we are okay with that table holding only the number of rows allowed by &lt;code&gt;int&lt;/code&gt; (4,294,967,295 -- yes, that's 4.3 billion), it would be beneficial to make option_id an &lt;code&gt;int&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
But-- that's the case with all the tables in the system that won't need to hold more than 4.2 billion entries. I can make a separate ticket for that if you guys think that's an idea that should be discussed further.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10518 (Make the post editing form file upload friendly) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 04 Oct 2009 00:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10518#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10518#comment:10/1254615616000000</guid>
      <description>&lt;p&gt;
It is very easy to change all forms to this at the moment too:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('admin_print_footer_scripts', 'my_form_type', 20);
function my_form_type(){ ?&amp;gt;
    jQuery('form').attr('enctype', 'multipart/form-data');
&amp;lt;?php
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>