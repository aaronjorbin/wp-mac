<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #12943 (Feeds for custom post types) updated</title>
      
        <dc:creator>matthewhollett</dc:creator>

      <pubDate>Sat, 10 Apr 2010 23:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12943#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12943#comment:5/1270943306000000</guid>
      <description>&lt;p&gt;
Thanks, that works perfectly, and will be very useful for a couple of projects I'm working on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12959 (New menu systems unrecoverable error) created</title>
      
        <dc:creator>Dickie</dc:creator>

      <pubDate>Sat, 10 Apr 2010 23:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12959/1270941833000000</guid>
      <description>&lt;p&gt;
I had one of the new menu system set up that included a set of categories.
I then decided to delete some of the categories (in the category menu) that were still included in the menu, and now get the following error message on the menu admin screen, (and the front end as well) with no option to delete the offending menu or create a new one.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Catchable fatal error:
Object of class WP_Error could not be converted to string in
/home/*******/public_html/wp-includes/formatting.php on line 433
&lt;/pre&gt;&lt;p&gt;
I tried re-adding the categories that I deleted, but to no avail. It looks like I may need to delve into the database to fix this one.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11608 (wpdb-&gt;prepare() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 10 Apr 2010 23:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11608#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11608#comment:76/1270940902000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12942" title="#12942: defect (bug): Change str_replace to preg_replace for $wpdb-&amp;gt;prepare function (closed: wontfix)"&gt;#12942&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12942 (Change str_replace to preg_replace for $wpdb-&gt;prepare function) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 10 Apr 2010 23:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12942#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12942#comment:6/1270940881000000</guid>
      <description>&lt;p&gt;
This is more or less a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11608" title="#11608: defect (bug): wpdb-&amp;gt;prepare() is broken (closed: fixed)"&gt;#11608&lt;/a&gt; or let's say, that ticket provides code that removes vsprintf / sprintf from prepare and implements its own parser so that such problems as this one are not an issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11869 (Multisite upgrade notice at wpmu-upgrade-site.php isn't steadily visible.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 10 Apr 2010 22:39:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11869#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11869#comment:6/1270939194000000</guid>
      <description>&lt;p&gt;
In &lt;em&gt;ajax_upgrade_works.diff&lt;/em&gt; I completed the idea of ptahdunbar, so that the update process works.&lt;br /&gt;
If there is a failure in a site, we have now a &lt;em&gt;retry&lt;/em&gt; button. If you click the button this site will be updated again.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe wpmuguru and donncha can give some feedback on this idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12958 (locate_template restricts the use of get_template_part) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 21:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12958#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12958#comment:4/1270933217000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12958 (locate_template restricts the use of get_template_part) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 20:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12958#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12958#comment:3/1270933160000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's actually load_template() that does the requiring. We could probably add a $once paramater to it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12958 (locate_template restricts the use of get_template_part) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 20:53:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12958#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12958#comment:2/1270932786000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
locate_template() doesn't do any including or requiring; it just finds the first available file and returns it's path. So I'm not sure what you're refering to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12279 (Allow to asign multiple parents to a taxonomy term) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 20:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12279#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12279#comment:5/1270932548000000</guid>
      <description>&lt;p&gt;
vlasky, what you're really asking for is many-to-many relationships between terms. This can be easily achieved with a non-hierarchical taxonomy plus an extra terms2terms table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 20:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:1/1270932379000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12949 (Nav Menu throws a fatal error for invalid taxonomies) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 20:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12949#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12949#comment:2/1270930473000000</guid>
      <description>&lt;p&gt;
get_term_link() can also return WP_Error. We're then running esc_attr on that, and it's causing the same issue.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #12958 (locate_template restricts the use of get_template_part) updated</title>
      
        <dc:creator>w3prodigy</dc:creator>

      <pubDate>Sat, 10 Apr 2010 18:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12958#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12958#comment:1/1270923696000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry, originally referenced get_generic_template when that function has been renamed to get_template_part.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12877 (Modular themes: Apply template hierarchy to folders within a theme) updated</title>
      
        <dc:creator>rovo89</dc:creator>

      <pubDate>Sat, 10 Apr 2010 17:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12877#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12877#comment:7/1270920850000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12913 (Notification mechanism for deprecated actions) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Sat, 10 Apr 2010 17:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12913#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12913#comment:6/1270919699000000</guid>
      <description>&lt;p&gt;
Note: the patch is still useful for the _deprecated_action and _deprecated_filter functions.
&lt;/p&gt;
&lt;p&gt;
Nacin -- also note that $type does indicate in the error message whether it's an action or filter.  If there are other types of hooks it could be wrapped just as _deprecated_action does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12913 (Notification mechanism for deprecated actions) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Sat, 10 Apr 2010 17:08:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12913#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12913#comment:5/1270919318000000</guid>
      <description>&lt;p&gt;
Okay... here's a thought:  Is there a definitive "last" hook in WordPress?  Right after that fires we could fire off a function that looks at did_action and compares it to an array of deprecated hooks, and fires _deprecated_filter as needed.
&lt;/p&gt;
&lt;p&gt;
I was first trying to figure how to hook it after the do_action is called, but of course the problem there is that do_action fires even if there are no hooks attached to it.
&lt;/p&gt;
&lt;p&gt;
Would it slow down do_action/apply_filter too much if we simply added an in_array to compare $tag to an array of deprecated hooks?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12958 (locate_template restricts the use of get_template_part) created</title>
      
        <dc:creator>w3prodigy</dc:creator>

      <pubDate>Sat, 10 Apr 2010 16:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12958</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12958/1270918797000000</guid>
      <description>&lt;p&gt;
The locate_template functions utilizes require_once to include files. With get_generic_template providing the ability to simply include template files we should make it more flexible so users can include the same file twice from one template file.
&lt;/p&gt;
&lt;p&gt;
For example if I wanted to create a custom template for a parent page with children and display the content from the children on the parent page I would use get_generic_template('loop','page') for the loop for the parent page, followed by another get_generic_template('loop','page') for each child page.
&lt;/p&gt;
&lt;p&gt;
I suggest we replace the require_once function of locate_template with a require function to increase the administrators accessibility to template files.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12957 (Auto generated Password Issue) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 16:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12957#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12957#comment:1/1270916286000000</guid>
      <description>duplicate: &lt;p&gt;
Should be fixed in the next nightly (or if you svn up).
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12926" title="#12926: defect (bug): warning message dashboard (closed: fixed)"&gt;#12926&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>wp30.JPG attached to Ticket #12957</title>
      
        <dc:creator>ryan_accuwebhosting</dc:creator>

      <pubDate>Sat, 10 Apr 2010 16:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12957/wp30.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12957/wp30.JPG/1270916237000000</guid>
      <description>&lt;p&gt;
Screen Capture
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12957 (Auto generated Password Issue) created</title>
      
        <dc:creator>ryan_accuwebhosting</dc:creator>

      <pubDate>Sat, 10 Apr 2010 16:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12957/1270916206000000</guid>
      <description>&lt;p&gt;
Hello Guys,
&lt;/p&gt;
&lt;p&gt;
This is a really very good release. I was testing the installation, and found one bug.
&lt;/p&gt;
&lt;p&gt;
I did not enter a password while installation, so it generated a random password for me. Then it asked me to reset the password (like I have attached). Then I reset the password by clicking that link, but it keeps me asking to reset my password. Even if I clicked on "No thanks, do not remind me again"...
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10654 (Remove Classic and Kubrick Themes) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 16:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10654#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10654#comment:42/1270916034000000</guid>
      <description>&lt;p&gt;
That said, removing Akismet will be more difficult, as that is actually used by a lot of people on svn, versus say classic and default. Ignoring externals on packaging would need to leave Akismet for now.
&lt;/p&gt;
&lt;p&gt;
I think the long term goal is a core plugin for spam (that includes Akismet and other services as well, IIRC). Then we could stop packaging Akismet in core, and phase it out as an external.
&lt;/p&gt;
&lt;p&gt;
Bottom line is, we'll need to take this in steps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12944 (Post status cannot be changed without publish_posts cap) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 16:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12944#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12944#comment:1/1270915687000000</guid>
      <description>&lt;p&gt;
Are you referring to custom stati? The current capabilities are enough to handle the built-in statuses.
&lt;/p&gt;
&lt;p&gt;
future and publish require publish caps. pending and draft requires edit_posts. trash and private depend on the situation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10654 (Remove Classic and Kubrick Themes) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Sat, 10 Apr 2010 16:05:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10654#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10654#comment:41/1270915529000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10654#comment:40" title="Comment 40"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it possible to add externals like with Akismet? That should help keeping current while doning dev-work in core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What we would like to end up moving towards is not bundling anything at all in wp-content.  That goes for akismet as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10654 (Remove Classic and Kubrick Themes) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 10 Apr 2010 15:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10654#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10654#comment:40/1270915130000000</guid>
      <description>&lt;p&gt;
Is it possible to add externals like with Akismet? That should help keeping current while doning dev-work in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12279 (Allow to asign multiple parents to a taxonomy term) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 14:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12279#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12279#comment:4/1270910993000000</guid>
      <description>wontfix: &lt;p&gt;
There are zero plans to change the term/taxonomy schema in the future. Additionally, even if there were minor adjustments, multiple parents completely destroy the concept of a hierarchy and would likely have absolutely zero traction from the core developers.
&lt;/p&gt;
&lt;p&gt;
Multiple parents would result in a half-baked schema, UI, and changes to the taxonomy API for hierarchical taxonomies. It's just not going to happen.
&lt;/p&gt;
&lt;p&gt;
Based on your proposed solution, a plugin could implement what you're looking for.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12956 (© and ™ not stripped from sanitize_title) created</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Sat, 10 Apr 2010 14:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12956</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12956/1270910592000000</guid>
      <description>&lt;p&gt;
© and ™ (&amp;amp;copy; &amp;amp;trade;) and probably many other symbols are not stripped out when sanitizing title.
&lt;/p&gt;
&lt;p&gt;
quick workaround:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function mc_sanitize_title( $title ) {
	return str_replace(array("%e2%84%a2", "%c2%a9"), "", $title);
}
add_filter('sanitize_title', 'mc_sanitize_title');
&lt;/pre&gt;&lt;p&gt;
but i guess that there should be some most robust and standard solution, e.g. using PHP transliteration first and then removing anything but alphanumeric, coma and underscore like in this function
&lt;/p&gt;
&lt;pre class="wiki"&gt;function friendly_url($raw_title) {
    $url = $raw_title;
    $url = preg_replace('~[^\\pL0-9_]+~u', '-', $url);
    $url = trim($url, "-");
    $url = iconv("utf-8", "us-ascii//TRANSLIT", $url);
    $url = strtolower($url);
    $url = preg_replace('~[^-a-z0-9_]+~', '', $url);
    return $url;
}
&lt;/pre&gt;&lt;p&gt;
this should also create nice url even for special alphabets. (setlocale must be set, but imho it is somewhere in wordpress core)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12279 (Allow to asign multiple parents to a taxonomy term) updated</title>
      
        <dc:creator>vlasky</dc:creator>

      <pubDate>Sat, 10 Apr 2010 14:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12279#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12279#comment:3/1270910412000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I and a number of other WordPress users I know want the ability to assign multiple parents to a child category.
&lt;/p&gt;
&lt;p&gt;
Perhaps major changes to the schema can be avoided by having the concept of a 'primary' parent category/taxonomy and then having a separate table/structure with the additional parent categories?
&lt;/p&gt;
&lt;p&gt;
I am prepared to offer money to someone that is prepared to implement this support.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>get_delete_post_link.2.diff attached to Ticket #12708</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 14:25:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12708/get_delete_post_link.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12708/get_delete_post_link.2.diff/1270909515000000</guid>
      <description>&lt;p&gt;
deprecate $context arg
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12708 (get_delete_post_link() doesn't check EMPTY_TRASH_DAYS) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 14:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12708#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12708#comment:4/1270909329000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
get_delete_post_link.2.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;deprecate $context arg
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;use add_query_arg()
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12751 (Future wordpress post changed to past, wordpress status still Scheduled) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 14:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12751#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12751#comment:3/1270908033000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14062" title="Update Future Scheduled posts publish status to Published upon ..."&gt;[14062]&lt;/a&gt;) Update Future Scheduled posts publish status to Published upon updating the date to a past date. Props bumbu. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12751" title="#12751: defect (bug): Future wordpress post changed to past, wordpress status still Scheduled (closed: fixed)"&gt;#12751&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14062]: Update Future Scheduled posts publish status to Published upon ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 14:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14062/1270908030682502</guid>
      <description>&lt;p&gt;
Update Future Scheduled posts publish status to Published upon updating the date to a past date. Props bumbu. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12751" title="#12751: defect (bug): Future wordpress post changed to past, wordpress status still Scheduled (closed: fixed)"&gt;#12751&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>post.php.diff attached to Ticket #12955</title>
      
        <dc:creator>JohnLamansky</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:50:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12955/post.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12955/post.php.diff/1270907430000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) created</title>
      
        <dc:creator>JohnLamansky</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:50:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955/1270907407000000</guid>
      <description>&lt;p&gt;
This patch filters the return value of the get_post() function. I would find this very helpful for a plugin I'm developing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12919 (Show details link on plugin upgrade doesn't change when expanded) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12919#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12919#comment:1/1270906696000000</guid>
      <description>&lt;p&gt;
Should probably be replaced with "Show Details" (and "Hide Details")
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12708 (get_delete_post_link() doesn't check EMPTY_TRASH_DAYS) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12708#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12708#comment:3/1270906408000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12922 (Setting featured image does not require the post to be saved) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12922#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12922#comment:2/1270906361000000</guid>
      <description>&lt;p&gt;
I'd agree. It's expected behavior, or at least has been for a while now, and it certainly won't change for 3.0. I say that because media/upload will probably be a big 3.1 project, and most of the UI will change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [14061]: Script bump.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:22:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14061</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14061/1270905762451094</guid>
      <description>&lt;p&gt;
Script bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12922 (Setting featured image does not require the post to be saved) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12922#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12922#comment:1/1270904973000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As with all operations in the media dialogue, the operation happens when you click on the action links.
&lt;/p&gt;
&lt;p&gt;
Aside from inserting data into the post content (images/gallery) all operations are saved at that point in time.
&lt;/p&gt;
&lt;p&gt;
Thats the expected behaviour to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12926 (warning message dashboard) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12926#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12926#comment:2/1270904785000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This will be fixed for future installs.
&lt;/p&gt;
&lt;p&gt;
You'll need to manually delete any &lt;code&gt;'default_password_nag' =&amp;gt; 1&lt;/code&gt; rows in your usermeta table however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12926 (warning message dashboard) closed</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12926#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12926#comment:1/1270904706000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14060" title="Password nag should be a global user option. Fixes #12926"&gt;[14060]&lt;/a&gt;) Password nag should be a global user option. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12926" title="#12926: defect (bug): warning message dashboard (closed: fixed)"&gt;#12926&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14060]: Password nag should be a global user option. Fixes #12926</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 13:05:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14060</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14060/1270904704192378</guid>
      <description>&lt;p&gt;
Password nag should be a global user option. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12926" title="#12926: defect (bug): warning message dashboard (closed: fixed)"&gt;#12926&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [14059]: Fix notice in get_media_items().</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:49:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14059</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14059/1270903798014571</guid>
      <description>&lt;p&gt;
Fix notice in get_media_items().
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12820 (get_blog_prefix() does not return prefix for current blog when no blog ...) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:40:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12820#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12820#comment:8/1270903231000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14058]: Some wpdb cleanups.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14058</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14058/1270903165899423</guid>
      <description>&lt;p&gt;
Some wpdb cleanups.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12938 (Autosave draft page deletes parent_id) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:39:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12938#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12938#comment:1/1270903143000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14057" title="Remember the post_parent during autosaves. Props duck_. Fixes #12938"&gt;[14057]&lt;/a&gt;) Remember the post_parent during autosaves. Props duck_. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12938" title="#12938: defect (bug): Autosave draft page deletes parent_id (closed: fixed)"&gt;#12938&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14057]: Remember the post_parent during autosaves. Props duck_. Fixes #12938</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14057</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14057/1270903141213261</guid>
      <description>&lt;p&gt;
Remember the post_parent during autosaves. Props duck_. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12938" title="#12938: defect (bug): Autosave draft page deletes parent_id (closed: fixed)"&gt;#12938&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12942 (Change str_replace to preg_replace for $wpdb-&gt;prepare function) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:17:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12942#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12942#comment:5/1270901869000000</guid>
      <description>wontfix: &lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Does not support argument numbering/swapping.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Inline docs are already present. Re-closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12842 (Future dated custom posts miss schedule) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12842#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12842#comment:9/1270901841000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14056" title="Handle future-scheduled custom post_type's. Props waltervos. Fixes #12842"&gt;[14056]&lt;/a&gt;) Handle future-scheduled custom post_type's. Props waltervos. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12842" title="#12842: defect (bug): Future dated custom posts miss schedule (closed: fixed)"&gt;#12842&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14056]: Handle future-scheduled custom post_type's. Props waltervos. Fixes #12842</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:17:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14056</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14056/1270901839180363</guid>
      <description>&lt;p&gt;
Handle future-scheduled custom post_type's. Props waltervos. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12842" title="#12842: defect (bug): Future dated custom posts miss schedule (closed: fixed)"&gt;#12842&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12912 (Admin Notice Feed Message) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12912#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12912#comment:4/1270901649000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12912 (Admin Notice Feed Message) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12912#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12912#comment:3/1270901540000000</guid>
      <description>&lt;p&gt;
I was referencing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11254" title="#11254: defect (bug): update_usermeta and delete_usermeta do not update or destroy cache (closed: fixed)"&gt;#11254&lt;/a&gt; for the user API fix.
&lt;/p&gt;
&lt;p&gt;
This one should be good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12954 (Javascript error upon updating scheduling date) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:11:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12954</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12954/1270901515000000</guid>
      <description>&lt;p&gt;
Schedule a post for publish at a later date, Click OK, Save the post.
&lt;/p&gt;
&lt;p&gt;
Edit the scheduling on the post to a future date(note: previous date not affected), attempt to click OK, experience a JS error
&lt;/p&gt;
&lt;p&gt;
Error:
&lt;/p&gt;
&lt;pre class="wiki"&gt;JavaScript - http://localhost/wordpress-commit/wp-admin/post.php?post=438&amp;amp;action=edit
Uncaught exception: ReferenceError: Undefined variable: page
Error thrown at line 388, column 4 in updateText() in http://localhost/wordpress-commit/wp-admin/js/post.dev.js?ver=20100403:
    if ( page )
called from line 510, column 3 in &amp;lt;anonymous function&amp;gt;() in http://localhost/wordpress-commit/wp-admin/js/post.dev.js?ver=20100403:
    if ( updateText() )
called via Function.prototype.apply() from line 55, column 294 in &amp;lt;anonymous function: handle&amp;gt;(a) in http://localhost/wordpress-commit/wp-includes/js/jquery/jquery.js?ver=1.4.2:
    i=i.handler.apply(this,arguments);
called via Function.prototype.apply() from line 49, column 569 in &amp;lt;anonymous function: o&amp;gt;() in http://localhost/wordpress-commit/wp-includes/js/jquery/jquery.js?ver=1.4.2:
    return typeof c!=="undefined"&amp;amp;&amp;amp;!c.event.triggered?c.event.handle.apply(o.elem,arguments):w
&lt;/pre&gt;&lt;p&gt;
Code in question:
&lt;/p&gt;
&lt;pre class="wiki"&gt;				if ( page )
					$('#publish').val( postL10n.updatePage );
				else
					$('#publish').val( postL10n.updatePost );
&lt;/pre&gt;&lt;p&gt;
page is referenced twice in the same format, I cant see anywhere in the file its mentioned.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12728 (Duplicate mime headers in MS activation emails) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12728#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12728#comment:2/1270901466000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14055" title="Don't set MIME headers in MS activation/welcome emails. fixes #12728, ..."&gt;[14055]&lt;/a&gt;) Don't set MIME headers in MS activation/welcome emails. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12728" title="#12728: defect (bug): Duplicate mime headers in MS activation emails (closed: fixed)"&gt;#12728&lt;/a&gt;, props barry.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14055]: Don't set MIME headers in MS activation/welcome emails. fixes #12728, ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14055</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14055/1270901463459462</guid>
      <description>&lt;p&gt;
Don't set MIME headers in MS activation/welcome emails. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12728" title="#12728: defect (bug): Duplicate mime headers in MS activation emails (closed: fixed)"&gt;#12728&lt;/a&gt;, props barry.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11969 (Theme-Editor - Relocates to a URL containing full path after a change ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11969#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11969#comment:7/1270901207000000</guid>
      <description>&lt;p&gt;
Is the only purpose here to move the dir to the end of the URL, so the URL better reflects the file being edited?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 12:04:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:17/1270901051000000</guid>
      <description>&lt;p&gt;
I'd prefer just "[ # ] Posts", though, what about "Show [ # ] Posts"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12796 (Inline-editing for custom tax needs 'singular_label' in update button) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12796#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12796#comment:3/1270900476000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14054" title="Quick edit taxonomy label. props scribu, keighl, fixes #12796"&gt;[14054]&lt;/a&gt;) Quick edit taxonomy label. props scribu, keighl, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12796" title="#12796: defect (bug): Inline-editing for custom tax needs 'singular_label' in update button (closed: fixed)"&gt;#12796&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14054]: Quick edit taxonomy label. props scribu, keighl, fixes #12796</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:54:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14054</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14054/1270900473555084</guid>
      <description>&lt;p&gt;
Quick edit taxonomy label. props scribu, keighl, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12796" title="#12796: defect (bug): Inline-editing for custom tax needs 'singular_label' in update button (closed: fixed)"&gt;#12796&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>deprecated2.diff attached to Ticket #11254</title>
      
        <dc:creator>hawy.php</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11254/deprecated2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11254/deprecated2.diff/1270900202000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12950 (Introduce is_post_type_hierarchical()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12950#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12950#comment:2/1270899849000000</guid>
      <description>&lt;p&gt;
Leaving this open for implementation throughout WordPress.
&lt;/p&gt;
&lt;p&gt;
I changed the patch slightly, adding a few sanity checks to prevent PHP Warnings (Accessing non-existant properties, attempting to use a object as a array indicy, etc)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12950 (Introduce is_post_type_hierarchical()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12950#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12950#comment:1/1270899768000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14053" title="Introduce is_post_type_hierarchical(). Props ptahdunbar. See #12950"&gt;[14053]&lt;/a&gt;) Introduce is_post_type_hierarchical(). Props ptahdunbar. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12950" title="#12950: enhancement: Introduce is_post_type_hierarchical() (closed: fixed)"&gt;#12950&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [14053]: Introduce is_post_type_hierarchical(). Props ptahdunbar. See #12950</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:42:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14053/1270899765368730</guid>
      <description>&lt;p&gt;
Introduce is_post_type_hierarchical(). Props ptahdunbar. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12950" title="#12950: enhancement: Introduce is_post_type_hierarchical() (closed: fixed)"&gt;#12950&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12942 (Change str_replace to preg_replace for $wpdb-&gt;prepare function) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12942#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12942#comment:4/1270899724000000</guid>
      <description>&lt;p&gt;
%1$s only works if you single-quote them. I'd rather add inline docs that say they should not be used, than to account for them.
&lt;/p&gt;
&lt;p&gt;
As it is, the first two str_replace's are for misuse of prepare(). Accounting for %X$s seems to me like a wasteful regexp.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12952 (Permalinks Options page bug) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12952#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12952#comment:1/1270899234000000</guid>
      <description>fixed: &lt;p&gt;
Also noticed during the patching, that index.php/xxx (Pathinfo links) were improperly prefixed for multisite.
&lt;/p&gt;
&lt;p&gt;
Commit moved the prefixing from the textbox to the text in front as well for index.php/ to match the /blog prefixing methodology.
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14051" title="Check the appropriate radio option on the Permalinks page for the Root ..."&gt;[14051]&lt;/a&gt; Check the appropriate radio option on the Permalinks page for the Root blog; Display index.php prefixes properly for the root Multisite Blog. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12952" title="#12952: defect (bug): Permalinks Options page bug (closed: fixed)"&gt;#12952&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11254 (update_usermeta and delete_usermeta do not update or destroy cache) updated</title>
      
        <dc:creator>hawy.php</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11254#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11254#comment:8/1270899193000000</guid>
      <description>&lt;p&gt;
so the only edit here could be using super global $GLBALS as (nacin) wrote above instead of global $current_user;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [14052]: Mark Snoopy as deprecated. see #12882</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14052</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14052/1270899122369800</guid>
      <description>&lt;p&gt;
Mark Snoopy as deprecated. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12882" title="#12882: enhancement: Cleanup HTTP Inline Docs. (closed: fixed)"&gt;#12882&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12942 (Change str_replace to preg_replace for $wpdb-&gt;prepare function) reopened</title>
      
        <dc:creator>gplaurin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12942#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12942#comment:3/1270899103000000</guid>
      <description>&lt;p&gt;
That was a prepare example... not a working one. Why having a prepare function with:
$query = str_replace("'%s'", '%s', $query); &lt;em&gt; in case someone mistakenly already singlequoted it
$query = str_replace('"%s"', '%s', $query); &lt;/em&gt; doublequote unquoting
$query = str_replace('%s', "'%s'", $query); &lt;em&gt; quote the strings
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
and after that using sprintf that can take care of %1$s but not the replaces below. Prepare statement will not add quotes to %1$s. Reclosed this if you want but this is a real bug, sprintf take care of %s and %1$s, prepare statement takes only care of %s but use sprintf.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [14051]: Check the appropriate radio option on the Permalinks page for the Root ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:30:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14051</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14051/1270899034556538</guid>
      <description>&lt;p&gt;
Check the appropriate radio option on the Permalinks page for the Root blog; Display index.php prefixes properly for the root Multisite Blog. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12952" title="#12952: defect (bug): Permalinks Options page bug (closed: fixed)"&gt;#12952&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11254 (update_usermeta and delete_usermeta do not update or destroy cache) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11254#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11254#comment:7/1270898831000000</guid>
      <description>&lt;p&gt;
Stand corrected again... $userdata is populated with meta keys by _fill_user().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11254 (update_usermeta and delete_usermeta do not update or destroy cache) updated</title>
      
        <dc:creator>hawy.php</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:26:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11254#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11254#comment:6/1270898766000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11254#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's been pointed out (thanks hawy) that setup_userdata() is incorrect. Proper approach would be &lt;code&gt;$GLOBALS['current_user'] = new WP_User($id, $name);&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
We shouldn't need to call setup_userdata() at all, as that doesn't set up any meta in the back compat globals it maintains.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
we need setup_userdata() cause it fills the old global variable ( $userdata ) with user's metadata
&lt;/p&gt;
&lt;p&gt;
so if we didn't call it
and assume we have meta_key = "somemeta" and it's value was "old_value"
and some one made
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
update_usermeta( 1, "somemeta","new_value");
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
then
var_dump($userdata);
&lt;/p&gt;
&lt;p&gt;
we still get old_value
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12882 (Cleanup HTTP Inline Docs.) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12882#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12882#comment:3/1270898603000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14050" title="Clean up the HTTP inline docs to reflect the times. props jacobsantos, ..."&gt;[14050]&lt;/a&gt;) Clean up the HTTP inline docs to reflect the times. props jacobsantos, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12882" title="#12882: enhancement: Cleanup HTTP Inline Docs. (closed: fixed)"&gt;#12882&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14050]: Clean up the HTTP inline docs to reflect the times. props jacobsantos, ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14050</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14050/1270898601084460</guid>
      <description>&lt;p&gt;
Clean up the HTTP inline docs to reflect the times. props jacobsantos, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12882" title="#12882: enhancement: Cleanup HTTP Inline Docs. (closed: fixed)"&gt;#12882&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12943 (Feeds for custom post types) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12943#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12943#comment:4/1270898519000000</guid>
      <description>worksforme: &lt;p&gt;
As rovo89 proved, this can be done easily enough already.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11254 (update_usermeta and delete_usermeta do not update or destroy cache) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11254#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11254#comment:5/1270898421000000</guid>
      <description>&lt;p&gt;
It's been pointed out (thanks hawy) that setup_userdata() is incorrect. Proper approach would be &lt;code&gt;$GLOBALS['current_user'] = new WP_User($id, $name);&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
We shouldn't need to call setup_userdata() at all, as that doesn't set up any meta in the back compat globals it maintains.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12942 (Change str_replace to preg_replace for $wpdb-&gt;prepare function) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12942#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12942#comment:2/1270898367000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12935 (Evolve the URL routing system) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12935#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12935#comment:2/1270898303000000</guid>
      <description>&lt;p&gt;
Why do some routes have %% and some don't? i.e. 'top10' vs '%month%'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12708 (get_delete_post_link() doesn't check EMPTY_TRASH_DAYS) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12708#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12708#comment:2/1270898016000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks fine to me. Removing commit as I'm noticing that the manual $context/&amp;amp;amp;/&amp;amp; juggling is unnecessary, as wp_nonce_url replaces &amp;amp;amp; with &amp;amp; anyway.
&lt;/p&gt;
&lt;p&gt;
So, unless I'm missing something, I think we can thus deprecate $context and further simplify this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11254 (update_usermeta and delete_usermeta do not update or destroy cache) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 11:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11254#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11254#comment:4/1270897630000000</guid>
      <description>&lt;p&gt;
Patch looks like a good approach. We only need the call to setup_userdata() as that will handle creating a new WP_User object if necessary.
&lt;/p&gt;
&lt;p&gt;
I think I agree with not using set_current_user/wp_set_current_user here, as I don't think we should be triggering the set_current_user action there. Unless that's used as part of caching?
&lt;/p&gt;
&lt;p&gt;
Calling setup_userdata() in update_user_meta() and delete_user_meta(), right after the calls to update_metadata() and delete_metadata(), should complete this for the non-deprecated functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12953 (Post Editor is not allowing to 'deselect' a category) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12953#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12953#comment:1/1270896734000000</guid>
      <description>worksforme: &lt;p&gt;
Unable to reproduce.
&lt;/p&gt;
&lt;p&gt;
Please disable all plugins and/or try on a fresh install.
&lt;/p&gt;
&lt;p&gt;
Editing a post, unchecking a category, and clicking Update appears to work for me.
&lt;/p&gt;
&lt;p&gt;
Re-open if you can provide reproducable steps which occur on new installs.
&lt;/p&gt;
&lt;p&gt;
You may seek help in the &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress support forums&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12951 (Admin Menu Items overwritten with custom post types) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12951#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12951#comment:2/1270896512000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14049" title="Prevent $post_type_object-&amp;gt;menu_position from conflicting with another ..."&gt;[14049]&lt;/a&gt;) Prevent $post_type_object-&amp;gt;menu_position from conflicting with another plugin, or core menu item. Props blepoxp. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12951" title="#12951: defect (bug): Admin Menu Items overwritten with custom post types (closed: fixed)"&gt;#12951&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14049]: Prevent $post_type_object-&gt;menu_position from conflicting with another ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:48:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14049</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14049/1270896510289739</guid>
      <description>&lt;p&gt;
Prevent $post_type_object-&amp;gt;menu_position from conflicting with another plugin, or core menu item. Props blepoxp. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12951" title="#12951: defect (bug): Admin Menu Items overwritten with custom post types (closed: fixed)"&gt;#12951&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12949 (Nav Menu throws a fatal error for invalid taxonomies) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:47:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12949#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12949#comment:1/1270896454000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14048" title="Account for WP_Error from get_terms() in the nav menu tax metabox. ..."&gt;[14048]&lt;/a&gt;) Account for WP_Error from get_terms() in the nav menu tax metabox. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12949" title="#12949: defect (bug): Nav Menu throws a fatal error for invalid taxonomies (closed: fixed)"&gt;#12949&lt;/a&gt;, props ptahdunbar.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14048]: Account for WP_Error from get_terms() in the nav menu tax metabox. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14048</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14048/1270896451337230</guid>
      <description>&lt;p&gt;
Account for WP_Error from get_terms() in the nav menu tax metabox. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12949" title="#12949: defect (bug): Nav Menu throws a fatal error for invalid taxonomies (closed: fixed)"&gt;#12949&lt;/a&gt;, props ptahdunbar.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #12248,​12941 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:40:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12248%2C12941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12248%2C12941/1270896050000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14047" title="Tweaks to the action in get_template_part(). fixes #12248, fixes #12941."&gt;[14047]&lt;/a&gt;) Tweaks to the action in get_template_part(). fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12248" title="#12248: defect (bug): get_generic_template action should pass both slug and name as parameters (closed: fixed)"&gt;#12248&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12941" title="#12941: defect (bug): do_action(get_template_part{$slug}) could use and underscore or dash ... (closed: fixed)"&gt;#12941&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [14047]: Tweaks to the action in get_template_part(). fixes #12248, fixes #12941.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14047</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14047/1270896047306469</guid>
      <description>&lt;p&gt;
Tweaks to the action in get_template_part(). fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12248" title="#12248: defect (bug): get_generic_template action should pass both slug and name as parameters (closed: fixed)"&gt;#12248&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12941" title="#12941: defect (bug): do_action(get_template_part{$slug}) could use and underscore or dash ... (closed: fixed)"&gt;#12941&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10219 ("Older Entries" and "Newer Entries" links are wrong when entries ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 10:31:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10219#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10219#comment:4/1270895491000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12953 (Post Editor is not allowing to 'deselect' a category) created</title>
      
        <dc:creator>Frumph</dc:creator>

      <pubDate>Sat, 10 Apr 2010 07:23:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12953</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12953/1270884215000000</guid>
      <description>&lt;p&gt;
This has been since 2.8 of wordpress, the post editor, if you have multiple categories checked, and you want to change the category while inside the post editor and 'uncheck' a category and then 'update' it will not update with the change.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Sat, 10 Apr 2010 04:04:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:16/1270872245000000</guid>
      <description>&lt;p&gt;
Patch 3 is with "at a time". Rather than add it to each string I've made "%s at a time" a separate string for translation, which I think is better than the previous system of having a load of individual but similar strings.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12872.3.diff attached to Ticket #12872</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Sat, 10 Apr 2010 04:01:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12872/12872.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12872/12872.3.diff/1270872106000000</guid>
      <description>&lt;p&gt;
Change label to "# [post_type] at a time"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:15/1270871847000000</guid>
      <description>&lt;p&gt;
There it is without "at a time". It's trivial enough to change that I'll upload it with as well, then you can commit whichever you like.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12872.2.diff attached to Ticket #12872</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12872/12872.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12872/12872.2.diff/1270871738000000</guid>
      <description>&lt;p&gt;
Change label to "# [post_type]"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11869 (Multisite upgrade notice at wpmu-upgrade-site.php isn't steadily visible.) updated</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11869#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11869#comment:5/1270871416000000</guid>
      <description>&lt;p&gt;
Logic behind &lt;em&gt;ajax_upgrade_script_incomplete.diff&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The goal is to upgrade all sites on the network.
&lt;/p&gt;
&lt;p&gt;
The script grabs the first 5, gives the user some feedback so they know which blogs are being updated, and once their done, update their status (either success, or failed.) grab the next batch and rise and repeat until there's no more sites left.
&lt;/p&gt;
&lt;p&gt;
Hopefully that'll give you some sort of starting point. Sorry I wasn't able to finish it :/
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12916 (Update text on Themes (manage) when only 1 theme installed) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12916#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12916#comment:3/1270871145000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
ocean90 — 12 hours ago
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 12916.diff  added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, I didn't see your patch here, just adding attachments doesn't cause the email notifications. In future, If you could post a comment that you've added a patch, it'd be appreciated (Also set the has-patch keyword in those cases).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ajax_upgrade_script_incomplete.diff attached to Ticket #11869</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11869/ajax_upgrade_script_incomplete.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11869/ajax_upgrade_script_incomplete.diff/1270871067000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:35:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:14/1270870548000000</guid>
      <description>&lt;p&gt;
I speak multiple languages and can't see a problem re translation with "at a time" - eg Spanish, "# [post-type] a la vez" - but okay, I'll do it without.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12916 (Update text on Themes (manage) when only 1 theme installed) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12916#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12916#comment:2/1270870044000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14046" title="Update the text on the Manage Themes page for when there is only 1 ..."&gt;[14046]&lt;/a&gt;) Update the text on the Manage Themes page for when there is only 1 theme available. Props jane &amp;amp; IRC people for strings. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12916" title="#12916: task (blessed): Update text on Themes (manage) when only 1 theme installed (closed: fixed)"&gt;#12916&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14046]: Update the text on the Manage Themes page for when there is only 1 ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 03:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14046</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14046/1270870042317804</guid>
      <description>&lt;p&gt;
Update the text on the Manage Themes page for when there is only 1 theme available. Props jane &amp;amp; IRC people for strings. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12916" title="#12916: task (blessed): Update text on Themes (manage) when only 1 theme installed (closed: fixed)"&gt;#12916&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12930 (Unserialize error?) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 10 Apr 2010 02:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12930#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12930#comment:8/1270868354000000</guid>
      <description>&lt;p&gt;
After some investigating (thanks sivel), looks like there may be something going on here. I want to look at this some more.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [14045]: Removing stray svn:ignore property</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 10 Apr 2010 02:49:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14045</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14045/1270867756354824</guid>
      <description>&lt;p&gt;
Removing stray svn:ignore property
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12951 (Admin Menu Items overwritten with custom post types) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Sat, 10 Apr 2010 02:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12951#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12951#comment:1/1270867686000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>menu_overwrite_fix.diff attached to Ticket #12951</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Sat, 10 Apr 2010 02:47:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12951/menu_overwrite_fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12951/menu_overwrite_fix.diff/1270867657000000</guid>
      <description>&lt;p&gt;
fixes admin menu items from being overwritten
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>permalinks.jpg attached to Ticket #12952</title>
      
        <dc:creator>martythornley</dc:creator>

      <pubDate>Sat, 10 Apr 2010 02:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12952/permalinks.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12952/permalinks.jpg/1270866434000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12952 (Permalinks Options page bug) created</title>
      
        <dc:creator>martythornley</dc:creator>

      <pubDate>Sat, 10 Apr 2010 02:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12952/1270866408000000</guid>
      <description>&lt;p&gt;
The permalinks seem to work as selected but always show as 'Custom' being selected, not the one I chose, i.e. "Month and name' or 'Day and name'. They work on site and show up in the correct format within that 'Custom' text input.
&lt;/p&gt;
&lt;p&gt;
Screenshot attached.
&lt;/p&gt;
&lt;p&gt;
Using beta 3.0-beta-1
Network setup in a folder on a subdomain as main site:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://subdomain.domain.com/mainsite/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://subdomain.domain.com/mainsite/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12951 (Admin Menu Items overwritten with custom post types) created</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Sat, 10 Apr 2010 02:11:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12951/1270865465000000</guid>
      <description>&lt;p&gt;
When the arg for menu_position in register_post_type == an existing menu position before that point in the code, it overwrites it. In the case where it is the same as core menu positions further along in the code, it gets overwritten.
&lt;br /&gt;
&lt;br /&gt;
I discussed solutions in dev chat with jane and dion. The solution in my patch is 5 lines and resolves both instances of the problem mentioned above.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>is_post_type_hierarchical.diff attached to Ticket #12950</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 10 Apr 2010 00:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12950/is_post_type_hierarchical.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12950/is_post_type_hierarchical.diff/1270858786000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12950 (Introduce is_post_type_hierarchical()) created</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Sat, 10 Apr 2010 00:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12950</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12950/1270858767000000</guid>
      <description>&lt;p&gt;
Patch adds a new is_post_type_hierarchical() function to wp-includes/post.php.
&lt;/p&gt;
&lt;p&gt;
It accepts one parameter which can be the post type name, id, or a post object and it will return a boolean result.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12934 (Allow a menu to be added as a menuitem to be a submenu.) updated</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Fri, 09 Apr 2010 23:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12934#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12934#comment:2/1270856544000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>menus_fatal_error_bug.diff attached to Ticket #12949</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Fri, 09 Apr 2010 23:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12949/menus_fatal_error_bug.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12949/menus_fatal_error_bug.diff/1270856296000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12949 (Nav Menu throws a fatal error for invalid taxonomies) created</title>
      
        <dc:creator>ptahdunbar</dc:creator>

      <pubDate>Fri, 09 Apr 2010 23:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12949/1270856281000000</guid>
      <description>&lt;p&gt;
Reported by Ron from &lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-testers/2010-April/012539.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-testers mailinglist&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I go to Menus I get the following error:&lt;br /&gt;
" Object of class WP_Error could not be converted to string in
\...deleted...\wp-includes\formatting.php
on line 433"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Patch fixes this issue by checking if the terms retrieved by get_terms() is a WP_Error object.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12948 (Post tags using cyrillic chars multiply in tables wp_term* when ...) created</title>
      
        <dc:creator>StefanMz</dc:creator>

      <pubDate>Fri, 09 Apr 2010 23:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12948</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12948/1270855676000000</guid>
      <description>&lt;p&gt;
Having the post tag български (with slug bulgarski) and saving changes on a post using this tag, the tag is not recognized as already existent (not increasing "count" in wp_term_taxonomy), but recreated in tables wp_terms, wp_term_taxonomy, and wp_term_relationships again and again.
&lt;/p&gt;
&lt;p&gt;
My observation is, that the previous entry in wp_term_taxonomy linking the existing term with the last post version is replaced by a new entry linking the redundant new term and the post.
&lt;/p&gt;
&lt;p&gt;
The same behavior occurs when using HTML-entities instead of the cyrillic characters български.
&lt;/p&gt;
&lt;p&gt;
MySQL database, db-connection and tables use utf8_general_ci.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11254 (update_usermeta and delete_usermeta do not update or destroy cache) updated</title>
      
        <dc:creator>hawy.php</dc:creator>

      <pubDate>Fri, 09 Apr 2010 23:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11254#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11254#comment:3/1270855372000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12947 (Slugs are reset when updating post via XML-RPC) created</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Fri, 09 Apr 2010 22:54:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12947</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12947/1270853661000000</guid>
      <description>&lt;ol&gt;&lt;li&gt;Publish a post from the Web dashboard, and give it a custom slug. e.g., "my-custom-slug" for a post titled "How to use custom slugs."
&lt;/li&gt;&lt;li&gt;Edit that post via the XML-RPC API, but don't send a new value (or even mention) the wp_slug field.
&lt;/li&gt;&lt;li&gt;The post's slug will be reset to "how-to-use-custom-slugs"
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Here's the XML I sent when editing the post (generated by ScribeFire for Chrome, which I'm currently writing):
&lt;/p&gt;
&lt;p&gt;
&amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt;
&amp;lt;methodCall&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;methodName&amp;gt;&amp;lt;![CDATA[metaWeblog.editPost]]&amp;gt;&amp;lt;/methodName&amp;gt;
&amp;lt;params&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;string&amp;gt;&amp;lt;![CDATA&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1126" title="IE padding problems.
"&gt;[1126]&lt;/a&gt;]&amp;gt;&amp;lt;/string&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;&amp;lt;![CDATA[cfinke]]&amp;gt;&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;&amp;lt;![CDATA[XXXXXXX]]&amp;gt;&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;struct&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;title&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;&amp;lt;![CDATA[How to use custom slugs.]]&amp;gt;&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;description&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;&amp;lt;![CDATA[&amp;lt;p&amp;gt;        This is a test. Testing. Testing.&amp;lt;/p&amp;gt;]]&amp;gt;&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;categories&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;array&amp;gt;&amp;lt;data&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;&amp;lt;![CDATA[Life]]&amp;gt;&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/data&amp;gt;&amp;lt;/array&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
&amp;lt;member&amp;gt;&amp;lt;name&amp;gt;mt_keywords&amp;lt;/name&amp;gt;&amp;lt;value&amp;gt;&amp;lt;string&amp;gt;&amp;lt;![CDATA[]]&amp;gt;&amp;lt;/string&amp;gt;&amp;lt;/value&amp;gt;&amp;lt;/member&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/struct&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&amp;lt;param&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;value&amp;gt;&amp;lt;boolean&amp;gt;1&amp;lt;/boolean&amp;gt;&amp;lt;/value&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/param&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/params&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/methodCall&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>12789.diff attached to Ticket #12789</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Apr 2010 22:30:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12789/12789.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12789/12789.diff/1270852236000000</guid>
      <description>&lt;p&gt;
dashboard CSS fix
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12789 (Inconsistent left or right margins on admin screens) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Apr 2010 22:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12789#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12789#comment:1/1270851983000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11869.diff attached to Ticket #11869</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Apr 2010 22:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11869/11869.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11869/11869.diff/1270851118000000</guid>
      <description>&lt;p&gt;
Its not perfect, only a first try.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11869 (Multisite upgrade notice at wpmu-upgrade-site.php isn't steadily visible.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Apr 2010 22:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11869#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11869#comment:4/1270851077000000</guid>
      <description>&lt;p&gt;
I created a first version, how it looks: &lt;a class="ext-link" href="http://grab.by/3Ew4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://grab.by/3Ew4&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For the code you can take a look at the attachment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12945 (Constrain wp_page_menu()) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 09 Apr 2010 21:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12945#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12945#comment:2/1270847894000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12943 (Feeds for custom post types) updated</title>
      
        <dc:creator>rovo89</dc:creator>

      <pubDate>Fri, 09 Apr 2010 21:09:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12943#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12943#comment:3/1270847346000000</guid>
      <description>&lt;p&gt;
Using this in a plugin, the default feed will return the posts of all types:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function myfeed_request($qv) {
	if (isset($qv['feed']))
		$qv['post_type'] = get_post_types();
	return $qv;
}
add_filter('request', 'myfeed_request');
&lt;/pre&gt;&lt;p&gt;
If you use it like that, the &lt;code&gt;post_type&lt;/code&gt; parameter in the URL will be ignored, so you might want to add &lt;code&gt;&amp;amp;&amp;amp; !isset($qv['post_type'])&lt;/code&gt;. Also, &lt;code&gt;get_post_types()&lt;/code&gt; can be called with attributes that the post type needs have, such as &lt;code&gt;publicly_queryable =&amp;gt; true&lt;/code&gt;. Or you could use a hardcoded list. Or only apply the filter if some special GET parameter was passed. Or... ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 09 Apr 2010 21:04:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:13/1270847093000000</guid>
      <description>&lt;p&gt;
@caesarsgrunt: Yes, you understand correctly. Part of me likes "at at time", but the part of me that thinks about translation thinks just "# [post-type]s" is probably better, so I'd say no 'at a time'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:12/1270846755000000</guid>
      <description>&lt;p&gt;
If I understand right, you're saying
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Remove the "Options" header&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;Change the "# posts per page" to "# [post_type]" or "# [post_type] at a time".
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Sounds good to me.
&lt;/p&gt;
&lt;p&gt;
Which string do you prefer? With or without at a time?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12327.diff attached to Ticket #12327</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:50:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12327/12327.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12327/12327.diff/1270846251000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:11/1270846247000000</guid>
      <description>&lt;p&gt;
Forgot how trac autoformats with underlines, not my intention. Restating underlined parts to be more understandable.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12872#comment:10" title="Comment 10"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Screen refers to everything within the browser, while items-per refers to paginated views, so page is more correct than screen. "Show # [post-type]s" would be better stated as "List # [post-type]s" based on how we use Show currently in the media uploader. Not that I like the sound of it.
&lt;/p&gt;
&lt;p&gt;
Side note: I just went and looked at Screen Options as it is in 2.9. I thought we'd agreed to get rid of that "Options" header above the #-per-page back in 2.9 (the whole thing is for screen options, and the # is for displaying on screen, after all (which is the label for the upper section). When this ticket gets done one way or another, could the person making the patch also get rid of that Options header? It almost makes it look like you can decide how many posts per page to show on your blog or something.
&lt;/p&gt;
&lt;p&gt;
If that gets fixed, then whatever the #-per-page language is, it will be the completion of the header, "Show on screen," and just having "# [post-type]s" would be adequate. Alternately, "# [post-type]s at a time" would work.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12327 (Draft pages do not show parent pages in prospective URL) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12327#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12327#comment:2/1270846240000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
get_page_uri (wp-includes/post.php, line 2910) is passed a page id and retrieves this page from DB, this retrieved page doesn't have post_name set if it's a draft. Hierarchy handling in get_sample_permalink (wp-admin/includes/post.php) assumes that the last part of the returned uri is the page's name, so the last portion of the parent path is replaced with %pagename%.
&lt;/p&gt;
&lt;p&gt;
Fix allows get_page_uri to accept post object so that the temporary post_name set in get_sample_permalink can be used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:10/1270846051000000</guid>
      <description>&lt;p&gt;
Screen refers to everything within the browser, while items-per refers to paginated views, so page is more correct than screen. "Show &lt;span class="underline"&gt; [post-type]s" would be better stated as "List &lt;/span&gt; [post-type]s" based on how we use Show currently in the media uploader. Not that I like the sound of it.
&lt;/p&gt;
&lt;p&gt;
Side note: I just went and looked at Screen Options as it is in 2.9. I thought we'd agreed to get rid of that "Options" header above the #-per-page back in 2.9 (the whole thing is for screen options, and the # is for displaying on screen, after all (which is the label for the upper section). When this ticket gets done one way or another, could the person making the patch also get rid of that Options header? It almost makes it look like you can decide how many posts per page to show on your blog or something.
&lt;/p&gt;
&lt;p&gt;
If that gets fixed, then whatever the #-per-page language is, it will be the completion of the header, "Show on screen," and just having "&lt;span class="underline"&gt;_ [post-type]s" would be adequate. Alternately, "&lt;/span&gt;_ [post-type]s at a time" would work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12943 (Feeds for custom post types) updated</title>
      
        <dc:creator>matthewhollett</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:35:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12943#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12943#comment:2/1270845320000000</guid>
      <description>&lt;p&gt;
Thanks, I hadn't realized you could get a feed for a single post type like that. A way to query multiple post types just as easily would be super useful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12940 (Add filter for contents of Quick Edit panel) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12940#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12940#comment:2/1270845184000000</guid>
      <description>&lt;p&gt;
This patch uses the exact same method as the current filter for Comments Quick Edit does. I don't like it at all, but it's the same as the existing filter.
&lt;/p&gt;
&lt;p&gt;
Next I'll do a patch which I like better - keeps the standard structure but allows you to replace the contents.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12940.1.diff attached to Ticket #12940</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12940/12940.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12940/12940.1.diff/1270844931000000</guid>
      <description>&lt;p&gt;
Method 1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:9/1270844273000000</guid>
      <description>&lt;p&gt;
Alternatively, what do you think about "Show [input] {{post_type_label}}", without mentioning that it's per page?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:8/1270844190000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12872#comment:7" title="Comment 7"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I like using the word screen instead of page in general, but when we're talking specifically about pagination, which is what this is, page is probably more appropriate. "Items per page" would be my suggestion (and was, via IRC, before reading this thread, ha).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for weighing in, Jane.
&lt;/p&gt;
&lt;p&gt;
I personally feel that "{{post type}} per screen" is more in keeping with language elsewhere in the admin, such as "Screen Options", "Show on screen", etc, and I also think that it could cause a certain amount of confusion with Pages as a post type.
&lt;/p&gt;
&lt;p&gt;
However, your suggestion of "Items per page" does have the advantage of being more similar to the existing label, which it's true doesn't seem to cause much confusion, so I am happy with it as a second-best option.
&lt;/p&gt;
&lt;p&gt;
So long as one or other gets committed I'll be happy!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12945 (Constrain wp_page_menu()) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12945#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12945#comment:1/1270844168000000</guid>
      <description>&lt;p&gt;
+1 to limiting by default in some way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12946 (Replace twentyten_term_list()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12946#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12946#comment:2/1270844133000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
(Gah, I can't type.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12946 (Replace twentyten_term_list()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12946#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12946#comment:1/1270844078000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>12946.diff attached to Ticket #12946</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12946/12946.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12946/12946.diff/1270844008000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12946 (Replace twentyten_term_list()) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:12:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12946</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12946/1270843979000000</guid>
      <description>&lt;p&gt;
twentyten_term_list() produces some really cool results, but it'd be great if we better leveraged the term template API instead of going it alone.
&lt;/p&gt;
&lt;p&gt;
Attached is a quick proof of concept patch. I've made two minor modifications to one core function (only one of which is required; we can work around the second) and used a filter in that function, a dependency of the_tags(), to produce the same magic.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12943 (Feeds for custom post types) updated</title>
      
        <dc:creator>rovo89</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:12:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12943#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12943#comment:1/1270843963000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If you want to have a feed for only one custom post type, that's easy: Simply use &lt;a class="ext-link" href="http://example.com/feed/?post_type=yourposttype"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/feed/?post_type=yourposttype&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Queries for multiple post types at once are supported internally, however all request parameters are converted to strings by this line: &lt;a href="https://core.trac.wordpress.org/browser/trunk/wp-includes/classes.php?rev=14031#L277"&gt;https://core.trac.wordpress.org/browser/trunk/wp-includes/classes.php?rev=14031#L277&lt;/a&gt;. Otherwise you could probably use something like &lt;a class="ext-link" href="http://example.com/feed/?post_type[]=yourposttype1&amp;amp;post_type[]=yourposttype2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/feed/?post_type[]=yourposttype1&amp;amp;post_type[]=yourposttype2&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12930 (Unserialize error?) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:08:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12930#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12930#comment:7/1270843723000000</guid>
      <description>&lt;p&gt;
*sigh*. maybe_unserialize is only half of it. That plugin is trying to unserialize a result from get_post_meta(). The meta, options and transients APIs all handle that transparently. There should be no unserialize call there at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12842 (Future dated custom posts miss schedule) updated</title>
      
        <dc:creator>waltervos</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12842#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12842#comment:8/1270843354000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12842 (Future dated custom posts miss schedule) updated</title>
      
        <dc:creator>waltervos</dc:creator>

      <pubDate>Fri, 09 Apr 2010 20:01:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12842#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12842#comment:7/1270843272000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could someone take a look at this please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12930 (Unserialize error?) updated</title>
      
        <dc:creator>ipstenu</dc:creator>

      <pubDate>Fri, 09 Apr 2010 19:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12930#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12930#comment:6/1270842964000000</guid>
      <description>&lt;p&gt;
I went to some examples for you:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: unserialize() expects parameter 1 to be string, array given in /home/ipstenu/public_html/blog/wp-content/plugins/journalpress/jpconfig.php  on line 696
Warning: unserialize() expects parameter 1 to be string, array given in /home/ipstenu/public_html/blog/wp-content/plugins/journalpress/jpconfig.php on line 703
Warning: unserialize() expects parameter 1 to be string, array given in /home/ipstenu/public_html/blog/wp-content/plugins/journalpress/jpconfig.php on line 709
&lt;/pre&gt;&lt;p&gt;
And I saw sivel's comment. Changing unserialize to maybe_unserialize fixes everything.
&lt;/p&gt;
&lt;p&gt;
Interesting, that. I'm passing it on to the devs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12945 (Constrain wp_page_menu()) created</title>
      
        <dc:creator>technosailor</dc:creator>

      <pubDate>Fri, 09 Apr 2010 19:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12945</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12945/1270841991000000</guid>
      <description>&lt;p&gt;
The wp_page_menu() function is the default callback for wp_nav_menu(). IOW, when a user is not using the new menu system, it defaults to this function. While that is good, any number of pages over, say 10, will make a theme puke in many cases.
&lt;/p&gt;
&lt;p&gt;
As a workaround, I suggest we make a default of wp_page_menu() to exclude all pages() except home. It's a stupid idea, I think, but something needs to be done to make this manageable so I'm looking for feedback.
&lt;/p&gt;
&lt;p&gt;
The Pro of taking this approach is that it encourages customization of menus via the WP menu system. It also does not lock theme devs into a particular approach because this stuff can be overidden via arguments and filters.
&lt;/p&gt;
&lt;p&gt;
The con is that the default callback becomes pretty benign and useless. Almost pointless.
&lt;/p&gt;
&lt;p&gt;
Ideas?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 09 Apr 2010 19:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:53/1270841857000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:48" title="Comment 48"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This seems more like a conversation better served as a wp-hackers thread, not a Trac ticket (and I don't mean that in a disparaging way). It's just a better venue to discuss these opinions. Trac should be for code, not discussions on the theory/idea.
&lt;/p&gt;
&lt;p&gt;
Let's leave this one open until 3.1 scope discussions are held, and if there's no traction for an image shortcode when media/upload is presumably on the table, we can wontfix this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Point taken.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:45" title="Comment 45"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Look, I'll give you an example. This code will find all img tags in a post and parse them, then spit out their src and class.
&lt;/p&gt;
&lt;p&gt;
global $post;
if ( preg_match_all('/&amp;lt;img (.+?)&amp;gt;/', $post-&amp;gt;post_content, $matches) ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
foreach ($matches&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; as $match) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
foreach ( wp_kses_hair($match, array('http')) as $attr)
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
echo $img&lt;a class="missing wiki"&gt;src?&lt;/a&gt;;
echo $img&lt;a class="missing wiki"&gt;class?&lt;/a&gt;;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I know this is off-topic (forgive me please) but I've both studied and looked for documentation for KSES but to no avail. I think there is great functionality that many WP developers could use but the lack of docs or blog posts on the subject tell me almost nobody understands how to use it other than you and a few others.
&lt;/p&gt;
&lt;p&gt;
Any chance you'd go to the effort to do a KSES tutorial on your blog?  Thanks in advance...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12796 (Inline-editing for custom tax needs 'singular_label' in update button) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Apr 2010 19:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12796#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12796#comment:2/1270841656000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Translatable strings can't have variables in them. Updated patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>template.php.2.diff attached to Ticket #12796</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Apr 2010 19:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12796/template.php.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12796/template.php.2.diff/1270841604000000</guid>
      <description>&lt;p&gt;
Better way to do it
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12944 (Post status cannot be changed without publish_posts cap) created</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Fri, 09 Apr 2010 19:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12944</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12944/1270841147000000</guid>
      <description>&lt;p&gt;
Post statuses cannot be changed without the publish_posts capability. I think it would make more sense to limit status changes to users with edit_posts or edit_others_posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 09 Apr 2010 19:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:7/1270839613000000</guid>
      <description>&lt;p&gt;
I like using the word screen instead of page in general, but when we're talking specifically about pagination, which is what this is, page is probably more appropriate. "Items per page" would be my suggestion (and was, via IRC, before reading this thread, ha).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12872 (Screen Options calls all post types "posts") updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 18:53:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12872#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12872#comment:6/1270839235000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
"per screen" has UX sign-off. Patch looks good, will kick the tires on it and check it in soon when I have a chance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 09 Apr 2010 18:41:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:19/1270838462000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 09 Apr 2010 18:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:18/1270837933000000</guid>
      <description>&lt;p&gt;
Patch now includes a warning message to the user that there was a permalink conflict and the untrashed post's permalink was updated.  Still not sure if this is the best way to trigger the error message, but wanted to give it a shot!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>conflict.patch attached to Ticket #11863</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 09 Apr 2010 18:30:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11863/conflict.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11863/conflict.patch/1270837824000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12930 (Unserialize error?) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Fri, 09 Apr 2010 18:17:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12930#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12930#comment:5/1270837064000000</guid>
      <description>&lt;p&gt;
If I am correct in my assumption it is something with get_post_meta.  I had to update a plugin for WP 3.0 to use maybe_unserialize instead of unserialize because get_post_meta is unserializing the data it returns.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 18:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:52/1270836283000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:51" title="Comment 51"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:50" title="Comment 50"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides, it's a rather ugly hack. If you're going to treat the HTML as a shortcode, better to just have a shortcode.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree that the use of &amp;lt;&amp;gt;'s is in any way prettier or uglier than the use of [], which is the only substantial difference between either implementation. At least my way lets the content fit with an existing standard known as HTML.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was referring to the method of handling it, not to the type of bracket used to represent it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, nacin is correct, and this discussion is not suitable for this venue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Okay; let's go to wp-hackers then. I'll have to subscribe first; I'm not subscribed yet because of the volume of emails in the list...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12877 (Modular themes: Apply template hierarchy to folders within a theme) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 09 Apr 2010 18:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12877#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12877#comment:6/1270836271000000</guid>
      <description>&lt;p&gt;
I think this is a promising idea.  Since it can be implemented via plugin, why don't you create the plugin and get a few theme developers to use it?  Getting their feedback while it's still relatively malleable (in other words, as a plugin rather than in core) and seeing it used in practice would be among the best ways to demonstrate its worth as a core feature.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:51/1270835896000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:50" title="Comment 50"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides, it's a rather ugly hack. If you're going to treat the HTML as a shortcode, better to just have a shortcode.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree that the use of &amp;lt;&amp;gt;'s is in any way prettier or uglier than the use of [], which is the only substantial difference between either implementation. At least my way lets the content fit with an existing standard known as HTML.
&lt;/p&gt;
&lt;p&gt;
However, nacin is correct, and this discussion is not suitable for this venue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>deprecated.diff attached to Ticket #11254</title>
      
        <dc:creator>hawy.php</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11254/deprecated.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11254/deprecated.diff/1270835677000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:50/1270835643000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:45" title="Comment 45"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What really bugs me is that you don't need to make a shortcode to accomplish any of the stated goals in the original ticket. It's overkill.
&lt;/p&gt;
&lt;p&gt;
Look at the goals:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;allowing images to be trashed
&lt;/li&gt;&lt;li&gt;allowing plugins and themes to modify the code used to show images
&lt;/li&gt;&lt;li&gt;removing broken img tags from posts when the image is deleted
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of these can be done with some clever use of classes and preg_matching. And it would be simpler and faster than using shortcodes to do it, in fact, because you wouldn't need to modify the existing code much at all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not changing the existing code much != easier and faster. You can change the existing code to something as fast or faster, or your "small" change can be slower than a more in-depth rewrite of a portion of the code.
&lt;/p&gt;
&lt;p&gt;
I think your solution is probably slightly slower actually, because it means the post has to parsed another time, in addition to the existing shortcode parser.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Look, I'll give you an example. This code will find all img tags in a post and parse them, then spit out their src and class.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
...
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Pretty simple, really. If the class contained something like, attachment-123, then finding the 123 and checking to see if the image was deleted would be rather straightforward, wouldn't it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but you've just broken your data portability concept. Because now, when you use the post straight from the database, you'll end up with broken images in it, which you wouldn't have looking at it in WordPress.
&lt;/p&gt;
&lt;p&gt;
Besides, it's a rather ugly hack. If you're going to treat the HTML as a shortcode, better to just have a shortcode.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:49/1270835083000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:46" title="Comment 46"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I'd like to point out that the current system actually makes it &lt;em&gt;harder&lt;/em&gt; to move your content to a different platform - since your image paths are hardcoded and so you &lt;em&gt;have&lt;/em&gt; to keep the WP directory structure. It even makes it hard to change your domain, since the full domain is currently used instead of relative paths.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, both of those make it *easier*, not harder.
&lt;/p&gt;
&lt;p&gt;
It's easier to use a existing tools (such as a straightforward search and replace tool or a database access tool) than have to wrie platform-specific PHP code to produce what you're trying to make.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The problem with that is that most users are likely to want the added functionality
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We're not talking about the functionality, because shortcodes are not required to create that functionality.
&lt;/p&gt;
&lt;p&gt;
I'm all for the functionality. I'm against your suggested implementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:43:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:48/1270834989000000</guid>
      <description>&lt;p&gt;
This seems more like a conversation better served as a wp-hackers thread, not a Trac ticket (and I don't mean that in a disparaging way). It's just a better venue to discuss these opinions. Trac should be for code, not discussions on the theory/idea.
&lt;/p&gt;
&lt;p&gt;
Let's leave this one open until 3.1 scope discussions are held, and if there's no traction for an image shortcode when media/upload is presumably on the table, we can wontfix this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:47/1270834893000000</guid>
      <description>&lt;p&gt;
Whoops. Pasting error. Here's the fixed code example for above:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	global $post;
	if ( preg_match_all('/&amp;lt;img (.+?)&amp;gt;/', $post-&amp;gt;post_content, $matches) ) {
	        foreach ($matches[1] as $match) {
	                foreach ( wp_kses_hair($match, array('http')) as $attr)
	                	$img[$attr['name']] = $attr['value'];
	                echo $img['src'];
	                echo $img['class'];
	                }
	        }
 	}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:46/1270834812000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:43" title="Comment 43"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for the explanations; I now understand your point of view on the matter, I think. And I do agree that your concerns are valid to a certain extent, but I think they are mitigated to a huge extent by the fact the WP is open source, so you'll never end up with your content locked in by the use on non-standard shortodes, since anyone will be able create an exporter straight to HTML or another standard. Also, I'd like to point out that the current system actually makes it &lt;em&gt;harder&lt;/em&gt; to move your content to a different platform - since your image paths are hardcoded and so you &lt;em&gt;have&lt;/em&gt; to keep the WP directory structure. It even makes it hard to change your domain, since the full domain is currently used instead of relative paths.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd rather it be opt-in only, not opt-out.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The problem with that is that most users are likely to want the added functionality, whereas it is most likely to be power users who prefer the data to be stored using standard HTML rather than shortcodes. And power users have no difficulty in disabling a feature like this using wp-config.php, whereas a normal user would probably find it very difficult.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:38:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:45/1270834716000000</guid>
      <description>&lt;p&gt;
What really bugs me is that you don't need to make a shortcode to accomplish any of the stated goals in the original ticket. It's overkill.
&lt;/p&gt;
&lt;p&gt;
Look at the goals:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;allowing images to be trashed
&lt;/li&gt;&lt;li&gt;allowing plugins and themes to modify the code used to show images
&lt;/li&gt;&lt;li&gt;removing broken img tags from posts when the image is deleted
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All of these can be done with some clever use of classes and preg_matching. And it would be simpler and faster than using shortcodes to do it, in fact, because you wouldn't need to modify the existing code much at all.
&lt;/p&gt;
&lt;p&gt;
Look, I'll give you an example. This code will find all img tags in a post and parse them, then spit out their src and class.
&lt;/p&gt;
&lt;p&gt;
global $post;
if ( preg_match_all('/&amp;lt;img (.+?)&amp;gt;/', $post-&amp;gt;post_content, $matches) ) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
foreach ($matches&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; as $match) {
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
foreach ( wp_kses_hair($match, array('http')) as $attr)
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
echo $img&lt;a class="missing wiki"&gt;src?&lt;/a&gt;;
echo $img&lt;a class="missing wiki"&gt;class?&lt;/a&gt;;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
}
&lt;/p&gt;
&lt;p&gt;
Pretty simple, really. If the class contained something like, attachment-123, then finding the 123 and checking to see if the image was deleted would be rather straightforward, wouldn't it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11515 (Admin needs standardized way of handling messages (notices) displayed ...) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11515#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11515#comment:13/1270834691000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Running into this same issue on &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/11863"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#11863&lt;/a&gt;.  Need an easier way to display a notice when a permalink is changed because of a conflict.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:36:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:44/1270834617000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:42" title="Comment 42"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:41" title="Comment 41"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for an option to disable shortcodes, I don't think that is really a viable option considering how many things can be done with shortcodes from plugins.  Disabling them stunts far too much available functionality.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just meant an option (a wp-config.php constant) to disable this particular shortcode, so that for people like Otto who don't like it, they can keep the current behaviour.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Reading Otto's latest comments "I don't like shortcodes" it comes down to a philosophy of what WP should be doing.  I actually am agnostic about shortcodes, but I think we should either do them right or not at all.  I think giving options to turn them off simple avoids doing them right.
&lt;/p&gt;
&lt;p&gt;
So it comes down to this: the people who control the direction of WordPress should decide if shortcodes are core to WP or not. If they &lt;strong&gt;are&lt;/strong&gt; core then go full force to make them fully usable in WP and let Otto just suck it up.  If they are &lt;strong&gt;not&lt;/strong&gt; going to be core then mark them as deprecated, transition to get rid of them and provide an alternate solution to meet the same need.
&lt;/p&gt;
&lt;p&gt;
But this straddling the fence, providing tacit acknowledgement of them while fighting them in the same breath is simply not helpful. At least IMHO. ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:29:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:43/1270834154000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:39" title="Comment 39"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is the content of the post, as in the database, shown straight in feeds without being parsed at all? If it's parsed anyway then being shown in feeds isn't different from being shown on the site - but I don't actually know whether it is or not. (Out of interest, if it's not, what happens about embedded videos, galleries, etc?)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is parsed, but it doesn't necessarily need to be.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why would you simply delete all shortcodes? Obviously, if you delete them, then what they represent won't be there anymore. Do you want your image tags to still be there if you delete all HTML too? If you remove all forms of formatting so you just have plain text? Where do you draw the line?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I draw the line at having something that is only meaningful in the context of WordPress itself in my post content.
&lt;/p&gt;
&lt;p&gt;
In other words, &amp;lt;img src=...&amp;gt; has meaning in an actual standard. Shortcodes are part of no standard anywhere.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides, there is already a [gallery] shortcode. If you delete it; the images it represents won't be shown anymore. Why's that OK, when a shortcode for individual images isn't?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I never said that it was okay. I dislike the use of [gallery]. I don't use it myself.
&lt;/p&gt;
&lt;p&gt;
I don't like shortcodes in general. They are non-standard, they require my content to be parsed through WordPress, and they blur the distinction between content and code too far, IMO. I'm okay with them, in general, as they usually don't carry particularly meaningful content. And when they do, it's in a plugin.
&lt;/p&gt;
&lt;p&gt;
But I don't want the core code doing that. I hate the idea of making my content dependent upon the code in WordPress itself, taking it out of my hands and putting it into the developers hands. It's a damned poor way of doing things.
&lt;/p&gt;
&lt;p&gt;
I don't want to upgrade and have the actual content on my site change just because some code got committed into a new update.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe we should have an option to disable the shortcode - enable it for normal users who are more concerned about ease of use and the enhanced feature set which it helps to enable, and allow advanced users who are more concerned about direct data portability without using an exporter to disable the shortcode. What do you think of that concept?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd rather it be opt-in only, not opt-out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:42/1270834106000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:41" title="Comment 41"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for an option to disable shortcodes, I don't think that is really a viable option considering how many things can be done with shortcodes from plugins.  Disabling them stunts far too much available functionality.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just meant an option (a wp-config.php constant) to disable this particular shortcode, so that for people like Otto who don't like it, they can keep the current behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12943 (Feeds for custom post types) created</title>
      
        <dc:creator>matthewhollett</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:24:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12943</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12943/1270833878000000</guid>
      <description>&lt;p&gt;
Right now, there is no easy way to get a feed that includes custom post types. The &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/rss-includes-pages/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RSS Includes Pages&lt;/a&gt; plugin by Marios Alexandrou modifies feeds to include pages, and could easily be updated to apply to other post types. Perhaps this functionality could be included in core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12941 (do_action(get_template_part{$slug}) could use and underscore or dash ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12941#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12941#comment:2/1270833669000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My guess is just a typo.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:41/1270833467000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:40" title="Comment 40"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:38" title="Comment 38"&gt;mikeschinkel&lt;/a&gt;:
I agree with everything mikeschinkel said, except that I'm not sure that saving two copies of the post is the best solution - rather, I would suggest adding an option to disable the generation of the shortcode and make WP use HTML tags instead.&lt;br /&gt;
Of course, it would still be able to interpret the shortcode, but inserting an image would put HTML tags into the post instead of a shortcode.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm actually not sure that saving two copies is a good idea either, there are pros &amp;amp; cons to any solution. Saving two copies solves the display performance problem and Otto's "I want everything to stay as HTML" desire but does cause other issues.
&lt;/p&gt;
&lt;p&gt;
As for an option to disable shortcodes, I don't think that is really a viable option considering how many things can be done with shortcodes from plugins.  Disabling them stunts far too much available functionality.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12941 (do_action(get_template_part{$slug}) could use and underscore or dash ...) updated</title>
      
        <dc:creator>ev3rywh3re</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12941#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12941#comment:1/1270833463000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12942 (Change str_replace to preg_replace for $wpdb-&gt;prepare function) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12942#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12942#comment:1/1270833221000000</guid>
      <description>&lt;p&gt;
$wpdb-&amp;gt;prepare adds quotes for you when you use %s. You would just do user.email = %s, not user.email = '%s'. Hence the preparation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12930 (Unserialize error?) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12930#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12930#comment:4/1270833112000000</guid>
      <description>&lt;p&gt;
We can't do anything unless we know more about the error. At the very least, line numbers?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:40/1270833050000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:38" title="Comment 38"&gt;mikeschinkel&lt;/a&gt;:
I agree with everything mikeschinkel said, except that I'm not sure that saving two copies of the post is the best solution - rather, I would suggest adding an option to disable the generation of the shortcode and make WP use HTML tags instead.&lt;br /&gt;
Of course, it would still be able to interpret the shortcode, but inserting an image would put HTML tags into the post instead of a shortcode.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12942 (Change str_replace to preg_replace for $wpdb-&gt;prepare function) created</title>
      
        <dc:creator>gplaurin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:09:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12942/1270832943000000</guid>
      <description>&lt;p&gt;
When using a prepare query like $db-&amp;gt;prepare("SELECT usr.id FROM &lt;code&gt;tmp_users&lt;/code&gt; AS usr WHERE (usr.&lt;code&gt;email&lt;/code&gt; = '%1\$s' AND usr.&lt;code&gt;date&lt;/code&gt; = %2\$s) OR usr.&lt;code&gt;oemail&lt;/code&gt; = '%1\$s'"); wordpress won't properly handle the quote and double quote replacement.
&lt;/p&gt;
&lt;p&gt;
I'm not an expert with regex but I think this should replace the str_replace's that are there: $query = preg_replace('/[\',"]?(%\d?\$?s)[\',"]?/i', "'\$1'", $query);
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:05:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:39/1270832753000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:37" title="Comment 37"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ugh, absolutely not. Caption is separate from the image for a reason, and it should stay that way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to be clear : I wasn't suggesting that the caption and the image necessarily be merged, I was just answering sbressler's question by pointing out that (a) there are already duplicated attributes; this wouldn't be something new introduced by an image shortcode, and (b) the only way of avoiding duplicate attributes altogether is to merge the caption and image tags. I didn't suggest that this actually be done.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Look, the image is just the image. But the caption is the box surrounding the image. They are separate in style and display and everything else. The caption shortcode surrounds the image because that's the way it works on the page itself.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even if you merged the two shortcodes, the HTML output would be the same as it is currently.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I was to simply delete all shortcodes, then I would still want my img html to be in there. Remember, post content is not confined to being displayed on the website. It's also in feeds, it can be seen in Google Reader, it could be pulled into other things... Shortcodes violate this principle of one-content-multiple-displays, but they tend to do so in a minor and manageable way. If we expand shortcodes to actually *being* content, then we change that dynamic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is the content of the post, as in the database, shown straight in feeds without being parsed at all? If it's parsed anyway then being shown in feeds isn't different from being shown on the site - but I don't actually know whether it is or not. (Out of interest, if it's not, what happens about embedded videos, galleries, etc?)
&lt;/p&gt;
&lt;p&gt;
Why would you simply delete all shortcodes? Obviously, if you delete them, then what they represent won't be there anymore. Do you want your image tags to still be there if you delete all HTML too? If you remove all forms of formatting so you just have plain text? Where do you draw the line?&lt;br /&gt;
Besides, there is already a [gallery] shortcode. If you delete it; the images it represents won't be shown anymore. Why's that OK, when a shortcode for individual images isn't?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm -1 to this ticket now, if we're talking about making the media handled by a shortcode. I want my content to be at least mostly free of being generated by the WordPress core code. I'd rather not have to process it through WordPress just to make it capable of being displayed elsewhere.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe we should have an option to disable the shortcode - enable it for normal users who are more concerned about ease of use and the enhanced feature set which it helps to enable, and allow advanced users who are more concerned about direct data portability without using an exporter to disable the shortcode. What do you think of that concept?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>get_template_part-r14044.txt attached to Ticket #12941</title>
      
        <dc:creator>ev3rywh3re</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12941/get_template_part-r14044.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12941/get_template_part-r14044.txt/1270832726000000</guid>
      <description>&lt;p&gt;
Patch to bing back underscore to get_template_part action
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12941 (do_action(get_template_part{$slug}) could use and underscore or dash ...) created</title>
      
        <dc:creator>ev3rywh3re</dc:creator>

      <pubDate>Fri, 09 Apr 2010 17:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12941/1270832691000000</guid>
      <description>&lt;p&gt;
in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13815" title="Rename get_specific_template as get_template_part so as to make it ..."&gt;[13815]&lt;/a&gt; the function and action were renamed, but that removed the underscore in the do_action part. Attached is a quick patch to bring back the underscore in the action name for (hopefully!) better consistency and readability. I'm marking as a defect since leaving off the underscore may have been accidental.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12930 (Unserialize error?) updated</title>
      
        <dc:creator>ipstenu</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12930#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12930#comment:3/1270832368000000</guid>
      <description>&lt;p&gt;
If it had only been ONE plugin, I'd have agreed ocean90, but once it comes up twice, I get suspicious.  And it ONLY happened once I upgraded to 3.0 (worked FINE in 2.9.x).
&lt;/p&gt;
&lt;p&gt;
I can reproduce the LJ plugin every time I try and save ANY post while it's activated.  And the Google Analyticator one just by trying to view the dashboard 'plugin'.
&lt;/p&gt;
&lt;p&gt;
The problem is I'm the user, not the dev. I'll ping them for support and ask them to come here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:38/1270832212000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:36" title="Comment 36"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my mind the current system is very messy, and an &lt;code&gt;[image]&lt;/code&gt; or &lt;code&gt;[media]&lt;/code&gt; shortcode would allow us to tidy it up immensely.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:37" title="Comment 37"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:36" title="Comment 36"&gt;caesarsgrunt&lt;/a&gt;:
Ugh, absolutely not. Caption is separate from the image for a reason, and it should stay that way.
&lt;/p&gt;
&lt;p&gt;
Look, the image is just the image. But the caption is the box surrounding the image. They are separate in style and display and everything else. The caption shortcode surrounds the image because that's the way it works on the page itself.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Shortcodes need not equate one-to-one to underlying implementation.  A user doesn't think of them as two things; they think of them as a picture that has a caption.  Using the same logic we would argue against a single [calendar] shortcode preferring instead [calendar] surrounding [week]s that surrounds [day]s.  Requiring image and caption to be separate is similarly favoring pedancy over usability and content mantainability.
&lt;/p&gt;
&lt;p&gt;
I'm not saying that there shouldn't be an option to use a caption separately but forcing them to be separate simply adds a burden on the user while providing almost no value to anyone that I can see.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I was to simply delete all shortcodes, then I would still want my img html to be in there. Remember, post content is not confined to being displayed on the website. It's also in feeds, it can be seen in Google Reader, it could be pulled into other things... Shortcodes violate this principle of one-content-multiple-displays, but they tend to do so in a minor and manageable way. If we expand shortcodes to actually *being* content, then we change that dynamic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Forcing separate shortcode for image and caption doesn't address your stated concern. Any image shortcode triggers your concern; with caption as an attribute or caption as a separate shortcode.
&lt;/p&gt;
&lt;p&gt;
While I agree with the value of HTML being HTML and not HTML+Shortcodes the reality is that the WordPress community is heading in the direction of using more and more shortcodes (just look at how many plugins provide them.)  Rather that fight it I'd suggest improving the support for shortcodes to make generation of raw HTML easier and to make it easier to add TinyMCE support for shortcodes similar to how images are currently handled in the editor.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm -1 to this ticket now, if we're talking about making the media handled by a shortcode. I want my content to be at least mostly free of being generated by the WordPress core code. I'd rather not have to process it through WordPress just to make it capable of being displayed elsewhere.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Rather than fight shortcodes, another option (and I mean "option" as in the user of the site gets to turn this off) would be to have WordPress store two copies of a post, one with shortcodes and one that has raw HTML.  It could even be designed where it only stores the copy &lt;em&gt;if&lt;/em&gt; a particular post used a shortcode.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12541 (Core post types should respect the show_ui parameter in ...) updated</title>
      
        <dc:creator>matthewhollett</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12541#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12541#comment:11/1270831430000000</guid>
      <description>&lt;p&gt;
Upon further testing, I have noticed some problems with the new 'menu_position' parameter in register_post_type(). Setting the 'menu_position' parameter when registering new post types results in new menu items replacing core menu items.
&lt;/p&gt;
&lt;p&gt;
For example, registering a new post type with "'menu_position' =&amp;gt; 5" will entirely replace "Posts" in the menu.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:42:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:17/1270831364000000</guid>
      <description>&lt;p&gt;
I was thinking the same.  I made some mods to that function you can see here:
&lt;a class="ext-link" href="http://pastewp.org/5900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastewp.org/5900&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Problem is add_query_arg doesn't work in this case.  Trying to figure out how to set the proper message ID in the query string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:37/1270830809000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11394#comment:36" title="Comment 36"&gt;caesarsgrunt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are already attributes duplicated between the &lt;code&gt;[caption]&lt;/code&gt; shortcode and the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag. If we kept the &lt;code&gt;[caption]&lt;/code&gt; shortcode separate, then these would still have to be duplicated. On the other hand, if we were to give the &lt;code&gt;[image]&lt;/code&gt; shortcode a &lt;code&gt;caption&lt;/code&gt; attribute, then we needn't wrap it in the &lt;code&gt;[caption]&lt;/code&gt; shortcode and the attributes wouldn't need to be duplicated.
&lt;/p&gt;
&lt;p&gt;
In my mind the current system is very messy, and an &lt;code&gt;[image]&lt;/code&gt; or &lt;code&gt;[media]&lt;/code&gt; shortcode would allow us to tidy it up immensely.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ugh, absolutely not. Caption is separate from the image for a reason, and it should stay that way.
&lt;/p&gt;
&lt;p&gt;
Look, the image is just the image. But the caption is the box surrounding the image. They are separate in style and display and everything else. The caption shortcode surrounds the image because that's the way it works on the page itself.
&lt;/p&gt;
&lt;p&gt;
If I was to simply delete all shortcodes, then I would still want my img html to be in there. Remember, post content is not confined to being displayed on the website. It's also in feeds, it can be seen in Google Reader, it could be pulled into other things... Shortcodes violate this principle of one-content-multiple-displays, but they tend to do so in a minor and manageable way. If we expand shortcodes to actually *being* content, then we change that dynamic.
&lt;/p&gt;
&lt;p&gt;
I'm -1 to this ticket now, if we're talking about making the media handled by a shortcode. I want my content to be at least mostly free of being generated by the WordPress core code. I'd rather not have to process it through WordPress just to make it capable of being displayed elsewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11394 (Image shortcode) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11394#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11394#comment:36/1270830486000000</guid>
      <description>&lt;p&gt;
There are already attributes duplicated between the &lt;code&gt;[caption]&lt;/code&gt; shortcode and the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag. If we kept the &lt;code&gt;[caption]&lt;/code&gt; shortcode separate, then these would still have to be duplicated. On the other hand, if we were to give the &lt;code&gt;[image]&lt;/code&gt; shortcode a &lt;code&gt;caption&lt;/code&gt; attribute, then we needn't wrap it in the &lt;code&gt;[caption]&lt;/code&gt; shortcode and the attributes wouldn't need to be duplicated.
&lt;/p&gt;
&lt;p&gt;
In my mind the current system is very messy, and an &lt;code&gt;[image]&lt;/code&gt; or &lt;code&gt;[media]&lt;/code&gt; shortcode would allow us to tidy it up immensely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:16/1270830373000000</guid>
      <description>&lt;p&gt;
I think it makes more sense to put the check in wp_untrash_post().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12940 (Add filter for contents of Quick Edit panel) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12940#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12940#comment:1/1270830119000000</guid>
      <description>&lt;p&gt;
One point that needs consideration is whether to pass the existing contents of Quick Edit to the filter or not.&lt;br /&gt;
The existing filter for Comment Quick Edit doesn't pass the existing contents, but I'm not sure why not...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12939 (Counterpart to content_save_pre hook not called when getting post ...) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12939#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12939#comment:2/1270829902000000</guid>
      <description>&lt;p&gt;
I have confirmed that the same problem affects WordPress's AtomPub API implementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12940 (Add filter for contents of Quick Edit panel) created</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 09 Apr 2010 16:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12940/1270829767000000</guid>
      <description>&lt;p&gt;
Quick Edit / Reply for comments has a filter called &lt;code&gt;wp_comment_reply&lt;/code&gt; which allows plugins to replace its contents.
&lt;/p&gt;
&lt;p&gt;
However, there is no such filter for Quick Edit for posts.
With the new custom post type support, it can be very important for plugins to be able to replace the contents of the Quick Edit panel.&lt;br /&gt;
I would therefore like to create a similar filter for Quick Edit for posts.
&lt;/p&gt;
&lt;p&gt;
Does anyone have any comments or suggestions?&lt;br /&gt;
And will it get into 3.0, or is it too late even though it's just a very minor change? I personally think it is very important that it gets into 3.0, since the utility of custom post types is severely limited in some cases by the lack of it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>12916.diff attached to Ticket #12916</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Apr 2010 15:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12916/12916.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12916/12916.diff/1270827273000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12928 (Issues related to posting) updated</title>
      
        <dc:creator>shdus</dc:creator>

      <pubDate>Fri, 09 Apr 2010 15:31:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12928#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12928#comment:3/1270827094000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12939 (Counterpart to content_save_pre hook not called when getting post ...) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Fri, 09 Apr 2010 15:28:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12939#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12939#comment:1/1270826921000000</guid>
      <description>&lt;p&gt;
For testing purposes, you can use the syntax highlighter plugin and provide this literal HTML content from the web editor or from the API:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Testing "&amp;amp;lt;
[sourcecode]Testing "&amp;amp;lt;[/sourcecode]
&lt;/pre&gt;&lt;p&gt;
When the Syntax Highlighter plugin saves the post, it encodes the content inside [sourcecode] short tag. When you read the post back into the wordpress HTML editor, it is preserved exactly, because the plugin has the opportunity to decode the content back to original forma.t
&lt;/p&gt;
&lt;p&gt;
If you load the text via the API e.g. wtih getRecentPosts or with getPost, you end up with content:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Testing "&amp;amp;lt;
[sourcecode]Testing &amp;amp;quot;&amp;amp;amp;lt;[/sourcecode]
&lt;/pre&gt;&lt;p&gt;
The encoding that was done by the plugin has not been reversed.  Note well that this is NOT simply XML encoding that you would expect from the API. The literal content as it is transferred over the wire is further encoded and then decoded by the client.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [14044]: add_meta_boxes actions for comment and link forms.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 09 Apr 2010 15:17:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14044</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14044/1270826277936357</guid>
      <description>&lt;p&gt;
add_meta_boxes actions for comment and link forms.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12939 (Counterpart to content_save_pre hook not called when getting post ...) created</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Fri, 09 Apr 2010 13:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12939/1270821237000000</guid>
      <description>&lt;p&gt;
When a post is submitted either through the web editor interface or from an API call to newPost or editPost, the content of the post is inevitably passed through the content_save_pre filter.
&lt;/p&gt;
&lt;p&gt;
And when a post is opened for editing in the web editor, the content is passed through filters such as the_editor_content and  content_edit_pre.
&lt;/p&gt;
&lt;p&gt;
However, when a post is fetched for editing via XMLRPC API calls such as getPost or getRecentPosts, the content_edit_pre filter is never reached.
&lt;/p&gt;
&lt;p&gt;
This leads to a situation where whatever massaging of the content that a plugin may peform on the way into the database is not reversed on the way back out, for clients of the API. A concrete example of this problem is with the popular Syntax Highlighter Evolved:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.viper007bond.com/wordpress-plugins/syntaxhighlighter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.viper007bond.com/wordpress-plugins/syntaxhighlighter/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This plugin performs encoding of the post content before it is stored in the database, and it counts on being able to decode that content by adding filters to hooks such as the_editor_content. However, none of these filters are reached via the API, leading to "corrupted content" when users try to edit posts from API clients such as the iPhone WordPress app, or my desktop editor, MarsEdit.
&lt;/p&gt;
&lt;p&gt;
(My previous bug report &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10802" title="#10802: defect (bug): XMLRPC content_save_pre redundant when calling wp_insert_post (closed: fixed)"&gt;#10802&lt;/a&gt; exhibits the same symptoms of this bug, but this is a different cause).
&lt;/p&gt;
&lt;p&gt;
In summary:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;WordPress needs to establish a clear, baseline hooks for massaging content before it is saved to the database, and for un-massaging the content on the way out of the database. Currently there seems to be uncertainty about which hooks need to be overridden and under what circumstances. It seems to me that content_save_pre and content_edit_pre are probably good candidates for this.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Whatever hooks are established as the guarantees need to be applied once and only once in both the web-based editing scenario, and in the API editing scenario.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I think that having a well documented pair of hooks for this purpose that works identically in the web editing and API editing cases will do a lot to ensure correct behavior when plugins are installed that massage content, and will make it easy for plugin developers to "do the right thing" without relying on hooks that are specific only to the web editor, or to the API.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11863 (Trashed items interfere with page/post slug generation) updated</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 09 Apr 2010 13:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11863#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11863#comment:15/1270820061000000</guid>
      <description>&lt;p&gt;
Does it make sense to put some type of flag in the wp_unique_post_slug() function to determine if a permalink was changed because of a conflict?  Or should this check exist in wp_untrash_post() function after wp_insert_post is called?
&lt;/p&gt;
&lt;p&gt;
I'm just not sure the best place to put the check to trigger a message that there was a permalink conflict.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>link-template-patch.diff attached to Ticket #12197</title>
      
        <dc:creator>wojtekszkutnik</dc:creator>

      <pubDate>Fri, 09 Apr 2010 13:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12197/link-template-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12197/link-template-patch.diff/1270819789000000</guid>
      <description>&lt;p&gt;
patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>autosave.dev.js.diff attached to Ticket #12938</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 09 Apr 2010 13:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12938/autosave.dev.js.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12938/autosave.dev.js.diff/1270819163000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12938 (Autosave draft page deletes parent_id) created</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 09 Apr 2010 13:19:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12938/1270819156000000</guid>
      <description>&lt;p&gt;
Create a new page. Add title, content and set a parent page. Save draft and then wait for autosave. Reload the page.
&lt;/p&gt;
&lt;p&gt;
Actual: Parent page is reset to Main page (no parent)
&lt;/p&gt;
&lt;p&gt;
Expected: Parent page should stay the same
&lt;/p&gt;
&lt;p&gt;
This is caused by drafts being completely overwritten by autosaves (not just title, content, excerpt) combined with no parent_id being sent by autosave.js.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12937 (cannot login with IE with 4th level subdomain) created</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Fri, 09 Apr 2010 11:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12937/1270813970000000</guid>
      <description>&lt;p&gt;
when trying to login using IE (tried version 8) on 4.th level subdomain (htttp://first.second.third.tld) it does not log you in, no error is thrown, even with WP_DEBUG = true
Trying 2.9.2 and latest (2 days old) SVN, trying on more computers by more people on more subdomains, without plugins and functions, on any other browser it works
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10317 (Add features to export) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 10:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10317#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10317#comment:21/1270807753000000</guid>
      <description>&lt;p&gt;
I've posted a new patch here that needs some testing and probably serious massaging. Anyone up for it?
&lt;/p&gt;
&lt;p&gt;
It attempts to leverage the post types, taxonomies and stati API as much as possible, though that may require a new export flag or something (for cases when 'all' is selected), as I don't think we'd want to show "Trash" or "Menu Item" in the drop-downs, or as it is now, not show them and then export them when "All" is left selected.
&lt;/p&gt;
&lt;p&gt;
Anyway, could use someone to pick this up and run with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10317.diff attached to Ticket #10317</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 09:59:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10317/10317.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10317/10317.diff/1270807140000000</guid>
      <description>&lt;p&gt;
Untested. Whole feature needs urgent massaging to bring it up to par.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12916 (Update text on Themes (manage) when only 1 theme installed) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Apr 2010 09:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12916#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12916#comment:1/1270804009000000</guid>
      <description>&lt;p&gt;
Sounds reasonable to me, Given that new installs will only have one theme (this was never the case before in recent times) it makes sense to push them in that direction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12933 (super-admin has lost all super powers) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 08:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12933#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12933#comment:3/1270801579000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14043" title="More grant/revoke super admin improvements. fixes #12933."&gt;[14043]&lt;/a&gt;) More grant/revoke super admin improvements. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12933" title="#12933: defect (bug): super-admin has lost all super powers (closed: fixed)"&gt;#12933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [14043]: More grant/revoke super admin improvements. fixes #12933.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 08:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14043</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14043/1270801576662024</guid>
      <description>&lt;p&gt;
More grant/revoke super admin improvements. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12933" title="#12933: defect (bug): super-admin has lost all super powers (closed: fixed)"&gt;#12933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12933 (super-admin has lost all super powers) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 07:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12933#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12933#comment:2/1270797466000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14042" title="Fix revoke_super_admin(). see #12933."&gt;[14042]&lt;/a&gt;) Fix revoke_super_admin(). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12933" title="#12933: defect (bug): super-admin has lost all super powers (closed: fixed)"&gt;#12933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [14042]: Fix revoke_super_admin(). see #12933.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 07:17:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/14042</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/14042/1270797462998317</guid>
      <description>&lt;p&gt;
Fix revoke_super_admin(). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12933" title="#12933: defect (bug): super-admin has lost all super powers (closed: fixed)"&gt;#12933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12933 (super-admin has lost all super powers) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 09 Apr 2010 07:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12933#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12933#comment:1/1270797377000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixing this one now.
&lt;/p&gt;
&lt;p&gt;
To restore, execute (in a plugin) &lt;code&gt;if ( is_admin() ) grant_super_admin( # );&lt;/code&gt;, where # is your user ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12932 (Use the enqueue API for twentyten) updated</title>
      
        <dc:creator>freddyware</dc:creator>

      <pubDate>Fri, 09 Apr 2010 04:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12932#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12932#comment:1/1270787114000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Isn't it pretty pointless to remove a hardcoded stylesheet in a template? After all, themes are supposed to be associated with a stylesheet... unless this modification is supposed to make it possible to remove the stylesheet from a theme? (Why would someone do that?)
&lt;/p&gt;
&lt;p&gt;
To date, I have not yet seen a single theme that uses enqueue to load their stylesheets. It would make theme development (e.g. in a testing / IDE environment) a LOT harder.
&lt;/p&gt;
&lt;p&gt;
Moreover, this isn't really a bug; it's an enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12936 (Add visual editor) updated</title>
      
        <dc:creator>shdus</dc:creator>

      <pubDate>Fri, 09 Apr 2010 02:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12936#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12936#comment:1/1270781444000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12936 (Add visual editor) created</title>
      
        <dc:creator>shdus</dc:creator>

      <pubDate>Fri, 09 Apr 2010 02:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12936/1270781170000000</guid>
      <description>&lt;p&gt;
If you want to edit a comment, you can go to this page: &lt;a class="ext-link" href="http://shdus.x10hosting.com/wp/wp-admin/edit-comments.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://shdus.x10hosting.com/wp/wp-admin/edit-comments.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It is nice that you can edit them, but I would like to suggest that the visual editor be implemented in comments, just like it is by posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12924 (Insert/edit link) reopened</title>
      
        <dc:creator>shdus</dc:creator>

      <pubDate>Fri, 09 Apr 2010 02:42:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12924#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12924#comment:2/1270780955000000</guid>
      <description>&lt;p&gt;
No. If you use that button to create a link, and then set it to link to somewhere. Say I select the text 'link'. The button will activate. I clicked it and added the link &lt;a class="ext-link" href="http://google.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://google.com&lt;/a&gt; It adds it.
&lt;/p&gt;
&lt;p&gt;
Now. If I select the text (which is now a hyperlink) again and click the inset/edit link button, the fields are blank. I think that this is a bug.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #12607 (ASCII Characters - Apostrophies) updated</title>
      
        <dc:creator>UncleLar</dc:creator>

      <pubDate>Fri, 09 Apr 2010 00:28:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12607#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12607#comment:8/1270772915000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12607#comment:7" title="Comment 7"&gt;norwat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes ... sorry I haven't maintained my ticket (I originally posted the issue).  UncleLar got the issue correct ... apostrophies get rendered &amp;lt;&amp;amp;apos;&amp;gt; in Press This.  This must be a regression (as mentioned) because it used to work correctly.  It may be possible that a new version of Firefox (my browser) is to blame ... but I'll leave that to you to investigate.
&lt;/p&gt;
&lt;p&gt;
I've posted &amp;lt;a href="&lt;a class="ext-link" href="http://northernwaterways.com/MYCCR/2010/WP_Example.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://northernwaterways.com/MYCCR/2010/WP_Example.jpg&lt;/a&gt;"&amp;gt;a screenshot&amp;lt;/a&amp;gt; for more information:
&lt;/p&gt;
&lt;p&gt;
It's a blurb from &amp;lt;a href="&lt;a class="ext-link" href="http://www.pc.gc.ca/apps/cp-nr/release_e.asp?id=1534&amp;amp;andor1=nr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.pc.gc.ca/apps/cp-nr/release_e.asp?id=1534&amp;amp;andor1=nr&lt;/a&gt;"&amp;gt;this site&amp;lt;/a&amp;gt;, one of the apostrophies (the curly kind) is rendered correctly (see pink shaded area), the second as "&amp;amp;apos;".
&lt;/p&gt;
&lt;p&gt;
Please let me know if you need further explanation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not Firefox.  I have the problem using Chrome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>