<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>39352.diff attached to Ticket #39352</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Fri, 23 Dec 2016 23:15:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39352/39352.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39352/39352.diff/1482534922171995</guid>
      <description>&lt;p&gt;
Prevent adding edit shortcut for nav menus inside widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39352 (Customize: menu widgets have two edit shortcuts) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Fri, 23 Dec 2016 23:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39352#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39352#comment:3/1482534838457498</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
tl;dr: hide the menu shortcut.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll attach the patch that does that in case we decide to go that route.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39385 (Set $current_user global in wp_signon() after successful authentication) created</title>
      
        <dc:creator>fjarrett</dc:creator>

      <pubDate>Fri, 23 Dec 2016 23:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39385</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39385/1482534720170161</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$current_user&lt;/code&gt; global should be set after successful authentication inside &lt;code&gt;wp_signon()&lt;/code&gt; instead of waiting for the next load of WordPress.
&lt;/p&gt;
&lt;p&gt;
Although the &lt;code&gt;$user_login&lt;/code&gt; string and &lt;code&gt;$user&lt;/code&gt; object are passed through the &lt;code&gt;wp_login&lt;/code&gt; hook, there are some functions that don't allow user parameters and rely solely on &lt;code&gt;get_current_user_id()&lt;/code&gt;, such as &lt;code&gt;wp_destroy_other_sessions()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is easy enough to work around, but it seems reasonable to expect that user-related function calls should "just work" at any point after authentication.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_current_user_id&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// int(0)
&lt;/span&gt;
        &lt;span class="nv"&gt;$GLOBALS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'current_user'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_current_user_id&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// int(1)
&lt;/span&gt;
        &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39280 (comment permalink wrong in WordPress 4.7) updated</title>
      
        <dc:creator>fumbo</dc:creator>

      <pubDate>Fri, 23 Dec 2016 20:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39280#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39280#comment:11/1482525759038770</guid>
      <description>&lt;p&gt;
I have the same problem.
&lt;/p&gt;
&lt;p&gt;
I use comment.php from my wp 4.5.3 and it works. For me is OK.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 23 Dec 2016 19:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:4/1482520966635688</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Overriding this function in the test suite is asking for trouble. The pluggable function should be refactored to make it testable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39384 (TwentySeventeen Navbar z-index) created</title>
      
        <dc:creator>halgatewood</dc:creator>

      <pubDate>Fri, 23 Dec 2016 17:17:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39384</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39384/1482513438173062</guid>
      <description>&lt;p&gt;
The current z-index for the fixed navigation is 7. This seems a bit low as it should be above all other items on the page. For instance this widget getting mixed up with the navigation items:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://halgatewood.com/wp-content/uploads/2016/12/twentyseventeen-zindex.jpg"&gt;&lt;img src="https://halgatewood.com/wp-content/uploads/2016/12/twentyseventeen-zindex.jpg" alt="https://halgatewood.com/wp-content/uploads/2016/12/twentyseventeen-zindex.jpg" crossorigin="anonymous" title="https://halgatewood.com/wp-content/uploads/2016/12/twentyseventeen-zindex.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Something much higher may be appropriate:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.site-navigation-fixed.navigation-top { z-index: 9999; }
&lt;/pre&gt;&lt;p&gt;
Thanks,
Hal Gatewood
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39383 (Add username to “Assign Authors” step of WP import) created</title>
      
        <dc:creator>macbookandrew</dc:creator>

      <pubDate>Fri, 23 Dec 2016 16:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39383/1482512266286546</guid>
      <description>&lt;p&gt;
If a WP site has multiple authors with the same display name (either because of having a large user base with common names or because of having several testing users with the same display name), why not show the user’s login name in the dropdown menu?
&lt;/p&gt;
&lt;p&gt;
This step in the import process shows the display name and the user name of the new user(s) to be imported, but leaves existing users ambiguous if they have the same name.
&lt;/p&gt;
&lt;p&gt;
Current behavior:
&lt;a style="padding:0; border:none" href="http://images.andrewrminion.com/wp-import-user-existing-behavior.png"&gt;&lt;img src="http://images.andrewrminion.com/wp-import-user-existing-behavior.png" alt="http://images.andrewrminion.com/wp-import-user-existing-behavior.png" crossorigin="anonymous" title="http://images.andrewrminion.com/wp-import-user-existing-behavior.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Proposed behavior:
&lt;a style="padding:0; border:none" href="http://images.andrewrminion.com/wp-import-user-proposed-behavior.png"&gt;&lt;img src="http://images.andrewrminion.com/wp-import-user-proposed-behavior.png" alt="http://images.andrewrminion.com/wp-import-user-proposed-behavior.png" crossorigin="anonymous" title="http://images.andrewrminion.com/wp-import-user-proposed-behavior.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I’m more than willing to work on this and submit a patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39379 (Twenty Seventeen: Error font-family for Simplified Chinese (zh_CN) in CSS) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Fri, 23 Dec 2016 16:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39379#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39379#comment:3/1482510782997886</guid>
      <description>&lt;p&gt;
Hey @ze3kr! Thanks for the bug report, and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Can you explain in more detail what's not working? So the CSS should be applied to &lt;code&gt;zh-CN&lt;/code&gt; but isn't unless you specify it specifically?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39379 (Twenty Seventeen: Error font-family for Simplified Chinese (zh_CN) in CSS) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Fri, 23 Dec 2016 16:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39379#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39379#comment:2/1482510549113695</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38395 (Twenty Seventeen: iPad mini: Images on the front page badly pixelated) updated</title>
      
        <dc:creator>mapk</dc:creator>

      <pubDate>Fri, 23 Dec 2016 16:23:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38395#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38395#comment:29/1482510222299860</guid>
      <description>&lt;p&gt;
I still get the distorted image on iOS devices here: &lt;a class="ext-link" href="https://make.wordpress.org/core/features/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/features/&lt;/a&gt; when I preview the theme on my iOS device.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39350 (Twenty Seventeen: Customise location of the Social Links Menu) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Fri, 23 Dec 2016 16:21:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39350#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39350#comment:2/1482510094858824</guid>
      <description>&lt;p&gt;
Thanks for the request @pento!
&lt;/p&gt;
&lt;p&gt;
This is an interesting request, and something I'd consider. It &lt;em&gt;can&lt;/em&gt; be accomplished with a child theme.
&lt;/p&gt;
&lt;p&gt;
This doesn't work out of the box because the markup is different. Plus, the social navigation uses other special functions to display the SVG icons. So it's harder to pull this off, as it is now.
&lt;/p&gt;
&lt;p&gt;
As @sami.keijonen mentions, a custom widget might be needed to do this. I wouldn't be for adding a custom widget for this. But maybe there's a way to do this more easily and with less code... I'd be open to ideas.
&lt;/p&gt;
&lt;p&gt;
Also, I'd want to hear from @melchoyce about any necessary tweaks to the icon styles, like sizing, to make sure they would look good in the sidebar area.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39382 (Skipping term cache cleaning when cache invalidation is suspended) created</title>
      
        <dc:creator>zachop</dc:creator>

      <pubDate>Fri, 23 Dec 2016 16:15:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39382/1482509741912333</guid>
      <description>&lt;p&gt;
Since v4.3, &lt;code&gt;clean_term_cache&lt;/code&gt; checks if cache invalidation is suspended, and bails early if it is.
&lt;/p&gt;
&lt;p&gt;
This behavior might be a bit obscure and unexpected, based on the documentation of &lt;code&gt;wp_suspend_cache_invalidation&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I understand that the responsibility of ensuring that the cache is properly invalidated falls on the caller of &lt;code&gt;wp_suspend_cache_invalidation&lt;/code&gt;, according to the Codex, but I believe that the word "&lt;em&gt;cache&lt;/em&gt;" can be easily misinterpreted as the &lt;em&gt;object cache&lt;/em&gt;, not including the (persistent) &lt;em&gt;term cache&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
Furthermore, even if persistent caches are not invalidated during invalidation suspension, there should probably be a simple function call to purge them all at once. One might suggest using &lt;code&gt;wp_cache_flush&lt;/code&gt;, as its description states that it "&lt;em&gt;removes all cache items&lt;/em&gt;", but that is also not exactly true, since the word "&lt;em&gt;cache&lt;/em&gt;" does refer to the object cache at this point (expluding persistent caches, e.g. the term cache).
&lt;/p&gt;
&lt;p&gt;
I don't exactly think of this as a bug, and I can imagine the performance-related considerations and decisions that led to that behavior. I just believe that, even if nothing changes, a more detailed description of &lt;code&gt;wp_suspend_cache_invalidation&lt;/code&gt; and &lt;code&gt;wp_cache_flush&lt;/code&gt; would be really helpful.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28084 (Post and page permalink's text getting cut in Firefox.) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 23 Dec 2016 15:49:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28084#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28084#comment:16/1482508197815974</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My apologies, drove by and didn't catch up everything. Let's flag this for commit then and hopefully it gets into a point release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28084 (Post and page permalink's text getting cut in Firefox.) updated</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Fri, 23 Dec 2016 15:38:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28084#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28084#comment:15/1482507516136798</guid>
      <description>&lt;p&gt;
@karmatosed Patch is already added for fixing this issue in Firefox. Also tested for Chrome. It's not creating issue on other browsers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39381 (Export-&gt;Import WordPress menu bug when image is saved as label) created</title>
      
        <dc:creator>KestutisIT</dc:creator>

      <pubDate>Fri, 23 Dec 2016 15:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39381</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39381/1482505888971413</guid>
      <description>&lt;p&gt;
So I use this as "Home" content value:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;img src="http://SITE.com/wp-content/uploads/2016/01/home-icon.png" alt="Home" /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
And then I export with:
WordPress -&amp;gt; Tools -&amp;gt; Export -&amp;gt; All
&lt;/p&gt;
&lt;p&gt;
And then I import with this official plugin:
wordpress-importer.0.6.3.zip
( &lt;a class="ext-link" href="https://wordpress.org/plugins/wordpress-importer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wordpress-importer/&lt;/a&gt; )
And then I see that it was 'Home' text imported (the actual page name).
&lt;/p&gt;
&lt;p&gt;
Another bug is if I leave the field empty, after saving it get gone from Navigation menu at all. While I may want to use CSS for that. And assigning a CSS class to menu item is gone/missing. (or maybe that was from the theme), but I want to have an option to leave a blank element and hook to it's css.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28084 (Post and page permalink's text getting cut in Firefox.) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 23 Dec 2016 15:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28084#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28084#comment:14/1482505788743528</guid>
      <description>&lt;p&gt;
@karmatosed There is a patch above!? However, I did a refresh. The issue is still to see in Firefox 50, and I think it's an easy and feasable patch. I was thinking about other places where we possibly should raise height to 24px but was unable to find one with a need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28084.diff attached to Ticket #28084</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 23 Dec 2016 15:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28084/28084.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28084/28084.diff/1482505725887069</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 23 Dec 2016 15:07:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:3/1482505621508002</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39367.1.diff attached to Ticket #39367</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 23 Dec 2016 15:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39367/39367.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39367/39367.1.diff/1482505588374835</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39371 (Fix DocBlocks for duplicate hooks) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Fri, 23 Dec 2016 14:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39371#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39371#comment:3/1482501972404017</guid>
      <description>&lt;p&gt;
I just found out the hooks are in fact, not imported when a DocBlock isn't found by the parser. But we should adhere to the DocBlock syntax &lt;code&gt;/**&lt;/code&gt; where possible.
&lt;/p&gt;
&lt;p&gt;
There is a &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#5-2-multi-line-comments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;note for multi-line comments&lt;/a&gt; in the handbook documenting this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39067 (wp_insert_user custom validation) updated</title>
      
        <dc:creator>shamim51</dc:creator>

      <pubDate>Fri, 23 Dec 2016 13:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39067#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39067#comment:1/1482500214933762</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39067.patch attached to Ticket #39067</title>
      
        <dc:creator>shamim51</dc:creator>

      <pubDate>Fri, 23 Dec 2016 13:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39067/39067.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39067/39067.patch/1482500155311607</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39321 (Issue with get_permalink when using wp_update_post() and %author% is ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 13:29:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39321#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39321#comment:3/1482499788210467</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not sure that's actually true, because in this situation $author = $authordata-&amp;gt;user_nicename; never actually worked when post_author=0, $authordata is not an object and $authordata-&amp;gt;user_nicename; is just NULL, so my change just leave it the same but with the added bonus of not throwing a PHP Notice :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, I didn't mean "worse than it currently is". I meant that we'd be setting a precedent that, in some cases, the permalinks are different by design :)
&lt;/p&gt;
&lt;p&gt;
Let me think about non-pretty permalinks for revisions. If anyone else has thoughts about potential compatibility issues, please chime in here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39135 (Update to WP 4.7 results in white screen bug) updated</title>
      
        <dc:creator>conradkleinespel</dc:creator>

      <pubDate>Fri, 23 Dec 2016 13:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39135#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39135#comment:21/1482498597693219</guid>
      <description>&lt;p&gt;
Thanks @swissspidy and @Frank6tg . Disabling opcache during the upgrade worked for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39321 (Issue with get_permalink when using wp_update_post() and %author% is ...) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Fri, 23 Dec 2016 12:51:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39321#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39321#comment:2/1482497518379101</guid>
      <description>&lt;p&gt;
Thanks @boonebgorges!
&lt;/p&gt;
&lt;p&gt;
I was programmatically importing and updating data when I noticed this. With this part:
&lt;code&gt;Your change would make this worse, since the structure of the URL would be different for authorless revisions: example.com/authorname/postname vs example.com/postname. Perhaps revisions should always have permalinks of the form ?p=123, as is the case with draft, pending, auto-draft, and future.&lt;/code&gt;
Not sure that's actually true, because in this situation &lt;code&gt;$author = $authordata-&amp;gt;user_nicename;&lt;/code&gt; never actually worked when &lt;code&gt;post_author=0&lt;/code&gt;, &lt;code&gt;$authordata&lt;/code&gt; is not an object and &lt;code&gt;$authordata-&amp;gt;user_nicename;&lt;/code&gt; is just &lt;code&gt;NULL&lt;/code&gt;, so my change just leave it the same but with the added bonus of not throwing a PHP Notice :-)
&lt;/p&gt;
&lt;p&gt;
I like the idea of reverting to non-pretty permalinks for revisions as I think this is the safest course of action and follows suit with draft, pending, auto-draft statuses.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39380 (wp_update_comment can cause database error with new filter) created</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 23 Dec 2016 12:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39380</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39380/1482494802002585</guid>
      <description>&lt;p&gt;
In 4.6, the comment data array was passed into the edit_comment action. In 4.7, the wp_update_comment_data filter was added to wp_update_comment.
&lt;/p&gt;
&lt;p&gt;
However, wp_array_slice_assoc is called to filter keys out of the array before it is passed to both.
&lt;/p&gt;
&lt;p&gt;
It should be called after and only to filter the data going into the database. By adding a key to the array at the filter you can cause a database error.
&lt;/p&gt;
&lt;p&gt;
By removing extra keys from the data before it hits edit_comment, it also makes it impossible to pass data to be saved as metadata.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28084 (Post and page permalink's text getting cut in Firefox.) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 23 Dec 2016 11:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28084#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28084#comment:13/1482494078994106</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Ankit K Gupta as there is no 4.8 released, this would be down to someone adding into a point release. We need a patch however before we can fix, if someone wants to work on one we can then get the eyes of a committer on this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39379 (Twenty Seventeen: Error font-family for Simplified Chinese (zh_CN) in CSS) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 23 Dec 2016 11:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39379#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39379#comment:1/1482493982479729</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39320 (Add filter hook to username_exists function) updated</title>
      
        <dc:creator>shamim51</dc:creator>

      <pubDate>Fri, 23 Dec 2016 11:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39320#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39320#comment:2/1482493249694198</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39320.patch attached to Ticket #39320</title>
      
        <dc:creator>shamim51</dc:creator>

      <pubDate>Fri, 23 Dec 2016 11:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39320/39320.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39320/39320.patch/1482493074705490</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39282-1.patch attached to Ticket #39282</title>
      
        <dc:creator>sanket.parmar</dc:creator>

      <pubDate>Fri, 23 Dec 2016 10:06:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39282/39282-1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39282/39282-1.patch/1482487589689533</guid>
      <description>&lt;p&gt;
Hi @johnbillion, This patch will solve that scenarios. Let me know if it is correct.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37430 (Add Plugins: Improve the error messages displaying) updated</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Fri, 23 Dec 2016 08:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37430#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37430#comment:7/1482483482738978</guid>
      <description>&lt;p&gt;
Can we consider this ticket for 4.8 ?
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37822 (Text area misaligned on network setting.php) updated</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Fri, 23 Dec 2016 08:55:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37822#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37822#comment:15/1482483323900401</guid>
      <description>&lt;p&gt;
Can we consider this ticket for 4.8 ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28084 (Post and page permalink's text getting cut in Firefox.) updated</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Fri, 23 Dec 2016 08:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28084#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28084#comment:12/1482483135357612</guid>
      <description>&lt;p&gt;
@karmatosed Can we fix this in 4.8 ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39282 (The process for approving and then replying to a comment can be made ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 23 Dec 2016 08:28:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39282#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39282#comment:5/1482481704796778</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch @sanket.parmar but the issue is more complex than this.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The link text only needs to change for unapproved comments. The behaviour of replying to an approved comment doesn't change.
&lt;/li&gt;&lt;li&gt;The link text needs to be aware of AJAX actions. For an unapproved comment that gets approved, the link text needs to change from &lt;code&gt;Approve and Reply&lt;/code&gt; to &lt;code&gt;Reply&lt;/code&gt;, and vice versa. This will need some JavaScript work.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39379 (Twenty Seventeen: Error font-family for Simplified Chinese (zh_CN) in CSS) created</title>
      
        <dc:creator>ze3kr</dc:creator>

      <pubDate>Fri, 23 Dec 2016 07:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39379</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39379/1482479886811880</guid>
      <description>&lt;p&gt;
In the style.css of the new theme twentyseventeen (both stable and nightly build), line 664, which defines Chinese font:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* Typography for Chinese Font */
html[lang^="zh-"] body,
html[lang^="zh-"] button,
html[lang^="zh-"] input,
html[lang^="zh-"] select,
html[lang^="zh-"] textarea {
	font-family: "PingFang TC", "Helvetica Neue", Helvetica, STHeitiTC-Light, Arial, sans-serif;
}
&lt;/pre&gt;&lt;p&gt;
However, this CSS is only suitable for zh-HK and zh-TW, but not for zh-CN, which should not use traditional Chinese (TC), but Simplified Chinese (SC)
&lt;/p&gt;
&lt;p&gt;
So it needs to add these line after that, and it works well:
&lt;/p&gt;
&lt;pre class="wiki"&gt;html[lang="zh-CN"] body,
html[lang="zh-CN"] button,
html[lang="zh-CN"] input,
html[lang="zh-CN"] select,
html[lang="zh-CN"] textarea {
    font-family: "PingFang SC", "Helvetica Neue", Helvetica, STHeitiSC-Light, Arial, sans-serif
}
&lt;/pre&gt;&lt;p&gt;
See: &lt;a class="ext-link" href="https://wordpress.org/support/topic/error-font-family-for-simplified-chinese-zh_cn-in-twentyseventeens-css-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/error-font-family-for-simplified-chinese-zh_cn-in-twentyseventeens-css-2/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>39055.diff attached to Ticket #39055</title>
      
        <dc:creator>sanket.parmar</dc:creator>

      <pubDate>Fri, 23 Dec 2016 06:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39055/39055.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39055/39055.diff/1482476118508396</guid>
      <description>&lt;p&gt;
I think we need to sort the &lt;code&gt;post__in&lt;/code&gt; array based on &lt;code&gt;order&lt;/code&gt;. I mean if &lt;code&gt;order&lt;/code&gt; is &lt;code&gt;desc&lt;/code&gt; then we have to sort &lt;code&gt;post__in&lt;/code&gt; in reverse order and when &lt;code&gt;order&lt;/code&gt; is &lt;code&gt;asc&lt;/code&gt;, we have to sort &lt;code&gt;post__in&lt;/code&gt; in normal order.   So if  &lt;code&gt;include=5,2,1&amp;amp;orderby=include&lt;/code&gt; or &lt;code&gt;include=5,2,1&amp;amp;orderby=include&amp;amp;order=desc&lt;/code&gt; is passed then result should be &lt;code&gt;[ { id: 5...}, { id: 2...}, { id: 1... } ]&lt;/code&gt; and when &lt;code&gt;include=5,2,1&amp;amp;orderby=include&amp;amp;order=asc&lt;/code&gt; is passed then result should be &lt;code&gt;[ { id: 1...}, { id: 2...}, { id: 5... } ]&lt;/code&gt;.   Let me know if it is correct.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39360 (wp_mail throws a phpmailerException when the sender address is incorrect) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 23 Dec 2016 05:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39360#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39360#comment:1/1482470664350393</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39360/39360.diff" title="Attachment '39360.diff' in Ticket #39360"&gt;39360.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39360/39360.diff" title="Download"&gt;​&lt;/a&gt; is a patch which catches this fatal error, it doesn't attempt to set a proper sender email address though.
&lt;/p&gt;
&lt;p&gt;
I'm going to redirect conversation for setting a proper sender address over to &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/25239" title="#25239: defect (bug): $_SERVER['SERVER_NAME'] not a reliable when generating email host names (reviewing)"&gt;#25239&lt;/a&gt;, leaving this ticket open to get rid of the fatal. I feel like this should probably be pushed into 4.7.1 too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39360.diff attached to Ticket #39360</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 23 Dec 2016 05:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39360/39360.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39360/39360.diff/1482470415275291</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 23 Dec 2016 04:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:13/1482465800081534</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it's helpful to keep in mind a specific use case that the change tries to address. Assume someone uploads a file with a name like "large-monarch.jpg" but then renames the title of the attachment to something like "A Butterfly"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I definitely understand the use-case and want to keep it, the options I presented were in a least-desired to most-desired order. Ditching it, or disabling it under certain conditions, is only really a last-ditch effort if there's no way for it to be performant - sorry if that wasn't clear from reading :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
b) I think that the current implementation (through a filter) allows large sites to turn this off if they so choose. That said, I'm more than happy to discuss ways the developer UX could be improved (e.g., moving away from the filter approach to some other configuration). In fact, we should pursue improvement here regardless.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think the ability to disable something through a filter solves this at all, if it was purely a developer thing, or something people ran into with plugins, it might be okay. But we're talking about the speed and functionality of the end-users interface - a slow interface is a bad experience.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
c) I don't think exact matches are helpful here for reasons illustrated by the use case above.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I hadn't considered that you were after wildcard matching within filenames, that makes it even harder as wildcard matches don't tend to utilise indexes. That suggests that we do indeed need to filter down the data using something stored within the posts table before it gets matched against postmeta.
&lt;/p&gt;
&lt;p&gt;
The suggestion of using the &lt;code&gt;guid&lt;/code&gt; was never really going to fly, but was more to encourage thinking of how to go about it.
An option that might be more realistic would be to still use the join, but to only match against a subsection of postmetas based on filtering on the posts table, for example the following would only hit a small percentage of postmeta:
&lt;code&gt; ( wp_posts.post_name LIKE '%zJv%' AND sq1.meta_value LIKE '%08W0zJv.jpg%' )&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16567 (Can't create categories with different names but similar slugs on Edit ...) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 03:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16567#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16567#comment:27/1482462636762017</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39637" title="Taxonomy: Eliminate redundant and inaccurate dupe check when creating ..."&gt;39637&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Eliminate redundant and inaccurate dupe check when creating categories from post.php.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;term_exists()&lt;/code&gt; check is not needed because of existing dupe&lt;br /&gt;
checks in &lt;code&gt;wp_insert_term()&lt;/code&gt;. Furthermore, &lt;code&gt;term_exists()&lt;/code&gt; conflates&lt;br /&gt;
term names and sanitized slugs, so incorrectly marks terms like&lt;br /&gt;
'C' and 'C+' as duplicates of one another.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props garyc40, SergeyBiryukov, kovshenin, MikeHansenMe.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16567" title="#16567: defect (bug): Can't create categories with different names but similar slugs on Edit ... (closed: fixed)"&gt;#16567&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39637]: Taxonomy: Eliminate redundant and inaccurate dupe check when creating ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 03:10:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39637</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39637/1482462636290765</guid>
      <description>&lt;p&gt;
Taxonomy: Eliminate redundant and inaccurate dupe check when creating categories from post.php.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;term_exists()&lt;/code&gt; check is not needed because of existing dupe
checks in &lt;code&gt;wp_insert_term()&lt;/code&gt;. Furthermore, &lt;code&gt;term_exists()&lt;/code&gt; conflates
term names and sanitized slugs, so incorrectly marks terms like
'C' and 'C+' as duplicates of one another.
&lt;/p&gt;
&lt;p&gt;
Props garyc40, SergeyBiryukov, kovshenin, MikeHansenMe.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16567" title="#16567: defect (bug): Can't create categories with different names but similar slugs on Edit ... (closed: fixed)"&gt;#16567&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16567 (Can't create categories with different names but similar slugs on Edit ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 03:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16567#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16567#comment:26/1482462424314496</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@pavelevap Yes, you're correct. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16567/16567.4.diff" title="Attachment '16567.4.diff' in Ticket #16567"&gt;16567.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16567/16567.4.diff" title="Download"&gt;​&lt;/a&gt; looks like the right fix to me. &lt;code&gt;term_exists()&lt;/code&gt; should be banished to the flames.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39321 (Issue with get_permalink when using wp_update_post() and %author% is ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 02:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39321#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39321#comment:1/1482461884690929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good catch, @mauteri.
&lt;/p&gt;
&lt;p&gt;
It seems that this specific set of circumstances - a &lt;code&gt;revision&lt;/code&gt; having &lt;code&gt;post_author=0&lt;/code&gt; - only happens when programatically updating posts. When a post is updated through the interface, there's a logged-in user, and that user is assigned to the revision. This dates back to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/8480" title="Store current user rather than original post author when saving ..."&gt;[8480]&lt;/a&gt;; see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7317" title="#7317: defect (bug): Revision function displays incorrect user (closed: fixed)"&gt;#7317&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Aside from programatically-created revisions, it's possible to have posts with &lt;code&gt;post_author=0&lt;/code&gt; in other ways. So I think there are a couple separate questions here:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;What do we expect the permalink of a &lt;code&gt;revision&lt;/code&gt; to look like? More specifically, are there places in core or in plugins where we expect it to be the same as the parent post? At the moment, this is not the case, at least when &lt;code&gt;%author%&lt;/code&gt; is part of the permastruct: Different revisions of the same post could have different authors. Your change would make this worse, since the structure of the URL would be different for authorless revisions: &lt;code&gt;example.com/authorname/postname&lt;/code&gt; vs &lt;code&gt;example.com/postname&lt;/code&gt;. Perhaps revisions should always have permalinks of the form &lt;code&gt;?p=123&lt;/code&gt;, as is the case with &lt;code&gt;draft&lt;/code&gt;, &lt;code&gt;pending&lt;/code&gt;, &lt;code&gt;auto-draft&lt;/code&gt;, and &lt;code&gt;future&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;What do we expect the permalink of an authorless post to look like, if &lt;code&gt;%author%&lt;/code&gt; is part of the permalink structure? &lt;code&gt;post_author&lt;/code&gt; can be set to 0 in cases other than when the post is a &lt;code&gt;revision&lt;/code&gt;. Simply excluding the &lt;code&gt;%author%&lt;/code&gt; chunk seems like it could introduce weird bugs. Should we have a dummy slug of some sort? Or maybe we should revert to non-pretty permalinks &lt;code&gt;?p=123&lt;/code&gt; when no author is available?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
As a workaround, try providing a &lt;code&gt;post_author&lt;/code&gt; when calling &lt;code&gt;wp_update_post()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38978 (Update TinyMCE) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Fri, 23 Dec 2016 02:54:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38978#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38978#comment:3/1482461689965761</guid>
      <description>&lt;p&gt;
4.5.1 is latest
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.tinymce.com/docs/changelog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.tinymce.com/docs/changelog/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39336 (Document WP_Query orderby=relevance) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 02:30:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39336#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39336#comment:6/1482460254582565</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39636" title="Query: Improve documentation for `orderby=relevance` in `WP_Query`.
 ..."&gt;39636&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Improve documentation for &lt;code&gt;orderby=relevance&lt;/code&gt; in &lt;code&gt;WP_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dots.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39336" title="#39336: defect (bug): Document WP_Query orderby=relevance (closed: fixed)"&gt;#39336&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39636]: Query: Improve documentation for `orderby=relevance` in `WP_Query`.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 02:30:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39636</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39636/1482460254073741</guid>
      <description>&lt;p&gt;
Query: Improve documentation for &lt;code&gt;orderby=relevance&lt;/code&gt; in &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dots.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39336" title="#39336: defect (bug): Document WP_Query orderby=relevance (closed: fixed)"&gt;#39336&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39317 (Trying to get property of non-object wp_terms_checklist) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 23 Dec 2016 02:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39317#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39317#comment:3/1482460090221866</guid>
      <description>invalid: &lt;p&gt;
@jevuska Thanks for the clarification. On closer examination, it appears that you're using &lt;code&gt;descendants_and_self&lt;/code&gt; incorrectly. This parameter expects a term ID, not a boolean. If you pass it &lt;code&gt;53&lt;/code&gt;, it'll return term 53 and all descendants. &lt;code&gt;true&lt;/code&gt; gets cast to &lt;code&gt;1&lt;/code&gt;, and you're probably seeing the notice because you're getting a &lt;code&gt;WP_Error&lt;/code&gt; or some other weird response back (maybe because you deleted term &lt;code&gt;1&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7/src/wp-admin/includes/template.php?marks=63-64#L50"&gt;https://core.trac.wordpress.org/browser/tags/4.7/src/wp-admin/includes/template.php?marks=63-64#L50&lt;/a&gt; for more info on the parameter.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39047 (Installer tries to create nonce before options table exists) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 23 Dec 2016 00:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39047#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39047#comment:13/1482454753384902</guid>
      <description>&lt;p&gt;
Thanks @nullvariable, I was able to reproduce it with that. :-) Could you try out &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39047/39047.diff" title="Attachment '39047.diff' in Ticket #39047"&gt;39047.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39047/39047.diff" title="Download"&gt;​&lt;/a&gt;? Instead of removing the nonce through the entire installation process, it only happens while the tables don't exist (which is a reasonable proxy for determining when the REST API is able to be used, too).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39047.diff attached to Ticket #39047</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 23 Dec 2016 00:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39047/39047.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39047/39047.diff/1482454651983924</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39320 (Add filter hook to username_exists function) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 23 Dec 2016 00:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39320#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39320#comment:1/1482451405862784</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39272 (Twenty Seventeen: Incorrect $content_width) reopened</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 23:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39272#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39272#comment:16/1482449244173424</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39272 (Twenty Seventeen: Incorrect $content_width) closed</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 23:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39272#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39272#comment:15/1482449004784395</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39635" title="Twenty Seventeen: Fix incorrect `$content_width` value in theme
This ..."&gt;39635&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Seventeen: Fix incorrect &lt;code&gt;$content_width&lt;/code&gt; value in theme&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This addresses a major bug. Incorrectly setting the &lt;code&gt;$content_width&lt;/code&gt; causes media embeds to end up with the wrong aspect ratio, among other issues. This fix uses &lt;code&gt;template_redirect&lt;/code&gt;,  to ensure conditional theme tags can be used. It also defines a default value at &lt;code&gt;after_theme_setup&lt;/code&gt; so that plugins have something to work with at &lt;code&gt;init&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sstoqnov, laurelfulford, obenland.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39272" title="#39272: defect (bug): Twenty Seventeen: Incorrect $content_width (closed: fixed)"&gt;#39272&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39635]: Twenty Seventeen: Fix incorrect `$content_width` value in theme  This ...</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 23:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39635</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39635/1482449003223579</guid>
      <description>&lt;p&gt;
Twenty Seventeen: Fix incorrect &lt;code&gt;$content_width&lt;/code&gt; value in theme
&lt;/p&gt;
&lt;p&gt;
This addresses a major bug. Incorrectly setting the &lt;code&gt;$content_width&lt;/code&gt; causes media embeds to end up with the wrong aspect ratio, among other issues. This fix uses &lt;code&gt;template_redirect&lt;/code&gt;,  to ensure conditional theme tags can be used. It also defines a default value at &lt;code&gt;after_theme_setup&lt;/code&gt; so that plugins have something to work with at &lt;code&gt;init&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props sstoqnov, laurelfulford, obenland.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39272" title="#39272: defect (bug): Twenty Seventeen: Incorrect $content_width (closed: fixed)"&gt;#39272&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:57:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:8/1482443834202449</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39377 (wpautop adds a extra &lt;/p&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39377#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39377#comment:1/1482443822178324</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a patch that does fix it but the fix is to add span to the block items which does feel right
&lt;/p&gt;
&lt;p&gt;
This was caused by &lt;a href="https://core.trac.wordpress.org/changeset/38592"&gt;https://core.trac.wordpress.org/changeset/38592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39376 (Pass WP_REST_Request object to registered callback for a route schema.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39376#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39376#comment:2/1482443713033809</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting.php.patch attached to Ticket #39377</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39377/formatting.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39377/formatting.php.patch/1482443702180595</guid>
      <description>&lt;p&gt;
fixes it
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39378 (Allow passing custom class to the post pagination functions) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39378#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39378#comment:1/1482443524501158</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39378.patch attached to Ticket #39378</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39378/39378.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39378/39378.patch/1482443511602212</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31071 (media / post_mime_type related queries are very slow on larger sites) updated</title>
      
        <dc:creator>shakeels</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:49:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31071#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31071#comment:51/1482443356390672</guid>
      <description>&lt;p&gt;
@GunGeekATX That's the same issue that we have here.  It's a large site and based on how we are doing things, we know that it's always going to be a certain way.  There is no sense in even doing the lookup.  A filter on it would probably be an ideal setup for us as well.
&lt;/p&gt;
&lt;p&gt;
I basically ended up using @sboisvert patch that adds a filter.  Like in @GunGeekATX case, we always know that the value will be constant because of how we are using it.  In that case, for me, it's far easier to just bypass the entire query and just return false.  For us, that works right now, but it would be nice to get this into core so I don't have to patch it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39376.diff attached to Ticket #39376</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39376/39376.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39376/39376.diff/1482443079484792</guid>
      <description>&lt;p&gt;
Pass $route to the registered schema callback.  Also adds tests for this.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39378 (Allow passing custom class to the post pagination functions) created</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39378/1482443042220501</guid>
      <description>&lt;p&gt;
The functions &lt;code&gt;the_posts_pagination()&lt;/code&gt; and &lt;code&gt;get_the_posts_pagination()&lt;/code&gt; should accept a class to be used instead of only defaulting to &lt;code&gt;.pagination&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If anyone wishes to achieve this meanwhile, it must be done with the &lt;code&gt;navigation_markup_template&lt;/code&gt; filter, unfortunately:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;navigvation_markup_template_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$class&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'pagination'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$class&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'%1$s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'posts-pagination'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'navigation_markup_template'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'navigvation_markup_template_filter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Autop-extra-p.php.2.patch attached to Ticket #39377</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.2.patch/1482442808780060</guid>
      <description>&lt;p&gt;
fixed the uses comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:7/1482442782072646</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have added a test for this while I was creating one the other ticket
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Autop-extra-p-in-figure.php.patch attached to Ticket #39307</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:39:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39307/Autop-extra-p-in-figure.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39307/Autop-extra-p-in-figure.php.patch/1482442740965526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Autop-extra-p.php.patch attached to Ticket #39377</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.patch/1482442436091683</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:21:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:6/1482441700975119</guid>
      <description>&lt;p&gt;
I am seeing similar problem in this ticket &lt;a href="https://core.trac.wordpress.org/ticket/39377"&gt;https://core.trac.wordpress.org/ticket/39377&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39377 (wpautop adds a extra &lt;/p&gt;) created</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39377/1482441674378078</guid>
      <description>&lt;p&gt;
I am seeing similar problem  this code
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wpautop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
renders
&lt;/p&gt;
&lt;pre class="wiki"&gt; "&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
"
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39361 (Object not properly tested against in wp-includes/post-template.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39361#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39361#comment:1/1482440307600258</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @fourstringfail.
&lt;/p&gt;
&lt;p&gt;
Can you tell us in what situation the &lt;code&gt;post_content&lt;/code&gt; property would not be set here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39376 (Pass WP_REST_Request object to registered callback for a route schema.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39376#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39376#comment:1/1482439629932170</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39376" title="#39376: enhancement: Pass WP_REST_Request object to registered callback for a route schema. (closed: wontfix)"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I did a patch for this is it something that would be considered?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 from me, it's a harmless and potentially useful change that probably somebody intended to make at some point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39376 (Pass WP_REST_Request object to registered callback for a route schema.) created</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39376/1482439015637391</guid>
      <description>&lt;p&gt;
The documentation here (&lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/schema/#resource-schema"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/schema/#resource-schema&lt;/a&gt;) indicates that an instance of &lt;code&gt;WP_REST_Request&lt;/code&gt; is passed along to the registered callback for schema.
&lt;/p&gt;
&lt;p&gt;
However, as found in &lt;code&gt;\WP_REST_Server::get_data_for_route&lt;/code&gt; it is clear that the callback recieves nothing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isset( $this-&amp;gt;route_options[ $route ] ) ) {
    $options = $this-&amp;gt;route_options[ $route ];
    if ( isset( $options['namespace'] ) ) {
        $data['namespace'] = $options['namespace'];
    }
    if ( isset( $options['schema'] ) &amp;amp;&amp;amp; 'help' === $context ) {
        $data['schema'] = call_user_func( $options['schema'] );
    }
}
&lt;/pre&gt;&lt;p&gt;
It's very clear the documentation is in error, and I realize that the request instance isn't even really exposed where the callback is invoked.  For the purpose of dynamic schema generation when there is a single schema callback used, it would be useful if we exposed the &lt;code&gt;$route&lt;/code&gt; to the callback.
&lt;/p&gt;
&lt;p&gt;
If I did a patch for this is it something that would be considered?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #38561,​39375 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38561%2C39375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38561%2C39375/1482437199734580</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38561" title="#38561: defect (bug): Custom header sections show in the Customizer without any choices (closed: fixed)"&gt;#38561&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Thanks for the report. You are correct 😀
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39371 (Fix DocBlocks for duplicate hooks) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:51:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39371#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39371#comment:2/1482436308860912</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We should add something to the handbook here documenting this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filters&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:18/1482435943042798</guid>
      <description>&lt;p&gt;
Okay, NOW we're making progress!
&lt;/p&gt;
&lt;p&gt;
You have a heavily customized install :) That's important for us to know to debug.
&lt;/p&gt;
&lt;p&gt;
The main site (example.com) is meant to be a publicly viewable site. Obviously there are ways around it, like WordPress.com (not sure how they did it TBH). But by making it so example.com is NOT accessible at all, that's why this happened. If it was, just as a landing page or what have you, it should properly redirect people where they need to go.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All I am concerned about here are the links on the welcome page. It seems to be an artificial restriction
that I must have have a publicly accessible main site so that magic redirection works, when it is trivially
easy to change the welcome page to avoid this. Honestly, what is the principle behind this? Why does
magic redirection have to be used in this case, when it is so easy to avoid?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're falling to the original intent of WordPress Multisite, which was to manage a network of related, but not fully interconnected sites. That's why knowing the history of a thing helps us debug and why I was digging into the history of what YOU are doing. :) With the right information, we can understand the real problem based on your real intent.
&lt;/p&gt;
&lt;p&gt;
So!
&lt;/p&gt;
&lt;p&gt;
Why is yours breaking?
&lt;/p&gt;
&lt;p&gt;
Because your main site isn't 'not accessible to login' but 'not accessible AT ALL.' Meaning, as I understand it, if I went to your example.com, I would be blocked.
&lt;/p&gt;
&lt;p&gt;
You can use &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/wpmu_signup_user_notification_email/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/hooks/wpmu_signup_user_notification_email/&lt;/a&gt; to rewrite the email so it links to the per-site :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39375 (Custom css error check looks for parenthesis, quotes, and single ...) created</title>
      
        <dc:creator>michelgreenwood</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:38:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39375/1482435486940114</guid>
      <description>&lt;p&gt;
When writing custom css within the customizer's new menu option, WordPress automatically looks for errors. If if finds errors, the user will not be able to "save and publish" the css. However, the error-check is examining use of parenthesis, quotes, and single quotes WITHIN comments - /*This would be flagged. Which s'cks*/
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39374 (Update plugin translations immediately when updating plugin) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39374#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39374#comment:1/1482435429044605</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365#comment:4/1482431353211399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39374 (Update plugin translations immediately when updating plugin) created</title>
      
        <dc:creator>internationils</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39374/1482430940756899</guid>
      <description>&lt;p&gt;
Often when I run infinitewp to check for updates, I find plugins that haven't auto-updated yet, so I quickly manually update them from iwp. When I rescan my sites, many have translation updates, which are probably for the plugins that just upgraded, as they weren't there before.
&lt;/p&gt;
&lt;p&gt;
Idea: why not immediately check and update translations after a plugin upgrade?
&lt;/p&gt;
&lt;p&gt;
I can see no reason not to, esp. as the translation is a "data" component and nothing executable (until someone uses a translation for a buffer overflow, but then again, with auto-updating plugins there are bigger risks than that...)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>tmoore41</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:17/1482430411401633</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39311#comment:16" title="Comment 16"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;The entire install is a network install with a network admin: WP-admin/network
&lt;/li&gt;&lt;li&gt;Each site has a front: example.com and sub,example.com
&lt;/li&gt;&lt;li&gt;And an admin: example.com/WP-admin
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
But the network does not have a public front facing aspect, hence there is no 'network site' that one is directed to.
&lt;/p&gt;
&lt;p&gt;
Moving on.
&lt;/p&gt;
&lt;p&gt;
By default, the main site doesn't need to be accessible to log in, because WordPress redirects you to YOUR site if you try to log in to it and don't have an account there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is this really true?  What if I use htaccess rules to prevent access to the 'main site', because that is only there for the network admin to log in to.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If that's not happening on your install, there's the problem. But I did just build a brand new install to test that on and the results on a clean install were clear. WP properly redirects. This sounds a lot like your configuration broke default behavior so now... what did you do? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Access to the main site is denied to everyone except the network admin because a) security and b) this is not a public site... there is nothing here for people to see.  I have only left a couple of exceptions to this (wp-cron, wp-login, etc).
&lt;/p&gt;
&lt;p&gt;
All I am concerned about here are the links on the welcome page.  It seems to be an artificial restriction that I must have have a publicly accessible main site so that magic redirection works, when it is trivially easy to change the welcome page to avoid this.  Honestly, what is the principle behind this?  Why does magic redirection have to be used in this case, when it is so easy to avoid?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Try it on a CLEAN install. Then we can start adding min your features to see where this broke and why.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I believe it broke in the design phase.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because WP does know your primary site already and should be redirecting you.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39373 (url_to_postid() returning post ID for external URL) updated</title>
      
        <dc:creator>troutacular</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39373#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39373#comment:1/1482429958648503</guid>
      <description>&lt;p&gt;
As jkhongusc described, the iframe being returned was being altered to being the post itself.  Due to this site being a production site, we have applied a filter patch as noted in &lt;a href="https://core.trac.wordpress.org/ticket/37359"&gt;37359&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_filter( 'pre_oembed_result', 'wp_filter_pre_oembed_result' );
&lt;/pre&gt;&lt;p&gt;
The iframe source being returned before this patch was &lt;a class="ext-link" href="https://bedrosian.usc.edu/podcast/drown/embed/#?secret=z5fm4h1xpp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bedrosian.usc.edu/podcast/drown/embed/#?secret=z5fm4h1xpp&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;iframe sandbox="allow-scripts" security="restricted" src="https://bedrosian.usc.edu/podcast/drown/embed/#?secret=z5fm4h1xpp" width="200" height="339" title="“Drown” — Bedrosian Center" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" class="wp-embedded-content" data-secret="z5fm4h1xpp"&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>post_to_id-embed-sample.png attached to Ticket #39373</title>
      
        <dc:creator>troutacular</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39373/post_to_id-embed-sample.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39373/post_to_id-embed-sample.png/1482429613823119</guid>
      <description>&lt;p&gt;
Sample iframe returned for Soundcloud oEmbed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31071 (media / post_mime_type related queries are very slow on larger sites) updated</title>
      
        <dc:creator>GunGeekATX</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:54:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31071#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31071#comment:50/1482429275257878</guid>
      <description>&lt;p&gt;
Was looking at this myself today and wonder if this might be part of the solution:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$defaults = array(
	'post' =&amp;gt; null,
	'has_media' =&amp;gt; null,
	'has_video' =&amp;gt; null,
);
$args = wp_parse_args( $args, $defaults );
if ( null === $args['has_audio'] ) {
	// Run get_var() here.
}
&lt;/pre&gt;&lt;p&gt;
If we allow the developer to pass in a true/false value for those (or make the args filterable), the database queries could be skipped altogether.  On the huge site I'm working on, those values are always going to be true, so there's no need to run the database query, indexed or not.  Developers could also handle caching those values themselves if they needed to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) updated</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365#comment:3/1482427599088109</guid>
      <description>&lt;p&gt;
@flixos90 Updated as per your feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39365.2.diff attached to Ticket #39365</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39365/39365.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39365/39365.2.diff/1482427557351941</guid>
      <description>&lt;p&gt;
Patch from &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/263"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/263&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:23:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:26/1482427437878826</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31218/31218.6.diff" title="Attachment '31218.6.diff' in Ticket #31218"&gt;31218.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31218/31218.6.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add some QUnit tests for the expected event triggers
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31218.6.diff attached to Ticket #31218</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31218/31218.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31218/31218.6.diff/1482427404730457</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39373 (url_to_postid() returning post ID for external URL) created</title>
      
        <dc:creator>jkhongusc</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:07:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39373/1482426434609518</guid>
      <description>&lt;p&gt;
One our site has a post that has a SoundCloud embed in it.  The WP embed is embedding the post instead of the SoundCloud content.  See  bug&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37359" title="#37359: defect (bug): wp_filter_pre_oembed_result() breaks SoundCloud embeds (closed: worksforme)"&gt;#37359&lt;/a&gt; as another person reported but flagged the wrong function.
&lt;/p&gt;
&lt;p&gt;
Unfortunately I dont have a fix.  This is what I see, the post (&lt;a class="ext-link" href="https://bedrosian.usc.edu/podcast/drown/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bedrosian.usc.edu/podcast/drown/&lt;/a&gt;) embed eventually makes this call:
&lt;/p&gt;
&lt;p&gt;
url_to_postid ('&lt;a class="ext-link" href="https://soundcloud.com/uscbedrosian/drown"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://soundcloud.com/uscbedrosian/drown&lt;/a&gt;')
&lt;/p&gt;
&lt;p&gt;
This is obviously (to human eyes) an external url but url_to_postid() returns the postid of the post  itself.  This site uses rewrites, I see url_to_postid() make this database call:
&lt;/p&gt;
&lt;p&gt;
SELECT wp_334_posts.* FROM wp_334_posts WHERE 1=1 AND wp_334_posts.post_name = 'drown' AND wp_334_posts.post_type = 'post' ORDER BY wp_334_posts.post_date DESC " &lt;a class="missing wiki"&gt;posts?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Due to rewrites, all it has to match is 'drown' to be flagged as an internal url... and returns the original post.  Happens to all SoundCloud embeds on the same site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30240 (Tell if theme is a child theme in wp-admin/network/themes.php) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30240#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30240#comment:20/1482425690133796</guid>
      <description>&lt;p&gt;
@karmatosed Hello, this is the same screenshot of the first patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/30240/30420-patched.png"&gt;https://core.trac.wordpress.org/attachment/ticket/30240/30420-patched.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My updated patch is just to respect WordPress coding standards if the patch is accepted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39372 (Allow count for wp_terms query to count other post statuses as well as ...) created</title>
      
        <dc:creator>roperjonathan</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39372</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39372/1482425515366869</guid>
      <description>&lt;p&gt;
While it is great to use the wp_terms query to get the terms, when counting the number of posts assigned to each of these terms, it would be great if there was a way to be able to include the number of posts that have other post statuses and not just count the number of posts that have been published.
&lt;/p&gt;
&lt;p&gt;
At the moment if I want to do this, I have to return all of the terms from a taxonomy and then go through each one and count how many posts are associated with each term for both published posts and draft posts which is a lot more inefficient.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37359 (wp_filter_pre_oembed_result() breaks SoundCloud embeds) updated</title>
      
        <dc:creator>jkhongusc</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37359#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37359#comment:5/1482424117555685</guid>
      <description>&lt;p&gt;
Our Enterprise just hit this exact issue.  We upgraded from 4.4.2 to 4.7.  After the upgrade we noticed SoundCloud embeds was broken on one of our sites exactly as the OP reports:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
resulting in the post embedding itself where the SoundCloud Iframe is expected to be
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Through debugging, yes by modifying WP 4.7 core, on a staging system.  I was able to backtrace to wp_filter_pre_oembed_result().  IMO the bug resides in url_to_postid().  url_to_postid ('&lt;a class="ext-link" href="https://soundcloud.com/path"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://soundcloud.com/path&lt;/a&gt;') is returning the postid of the post that contains the SoundCloud embed.  The configuration of the site has url_to_postid() returning self referencing postids.  If I put the same SoundCloud embed on another site, it works perfectly.  I am going to open a new bug for url_to_postid().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39371 (Fix DocBlocks for duplicate hooks) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39371#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39371#comment:1/1482423795670259</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39371.patch attached to Ticket #39371</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39371/39371.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39371/39371.patch/1482423717029440</guid>
      <description>&lt;p&gt;
Fix DocBlocks for duplicate hooks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39371 (Fix DocBlocks for duplicate hooks) created</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:18:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39371</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39371/1482423538063608</guid>
      <description>&lt;p&gt;
DocBlocks should start with &lt;code&gt;/**&lt;/code&gt; to be recognized as a DocBlock by the &lt;a class="ext-link" href="https://github.com/WordPress/phpdoc-parser"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;phpdoc-parser&lt;/a&gt;. Duplicate undocumented hooks are imported if normal comments (/*  */) are used.
&lt;/p&gt;
&lt;p&gt;
These hooks don't have a correct DocBlock.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;load-widgets.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;widgets.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;sidebar_admin_setup&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;comment_email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;session_token_manager&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_attachment&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_comment&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_{$this-&amp;gt;post_type}&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_{$this-&amp;gt;taxonomy}&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_user&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30240 (Tell if theme is a child theme in wp-admin/network/themes.php) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30240#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30240#comment:19/1482422665362542</guid>
      <description>&lt;p&gt;
@Mista-Flo can you upload a screenshot of your patch please? It makes it easier for people to comment and see.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39004 (Alt attributes should be searchable in media library) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39004#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39004#comment:10/1482422307385124</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;strong&gt;Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39358" title="#39358: defect (bug): Media search speed has been dramatically reduced (reopened)"&gt;#39358&lt;/a&gt;.&lt;/strong&gt; We'll need to be aware of query performance concerns introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38625" title="Media: Make media library searchable by filename.
This applies a new ..."&gt;[38625]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22744" title="#22744: enhancement: Media search doesn't include file name (closed: fixed)"&gt;#22744&lt;/a&gt; before finalizing the approach here.
&lt;/p&gt;
&lt;p&gt;
Setting aside performance concerns for the moment, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39004/39004.2.patch" title="Attachment '39004.2.patch' in Ticket #39004"&gt;39004.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39004/39004.2.patch" title="Download"&gt;​&lt;/a&gt; looks like a good initial approach. Thanks @rommelxcastro.  We may need to handle some backwards compatibility for anyone who has decided to do something like: &lt;code&gt;remove_filter( 'posts_clauses', '_filter_query_attachment_filenames' );&lt;/code&gt; or if someone is calling that function directly to apply the filter to other query cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:43:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:12/1482421391260654</guid>
      <description>&lt;p&gt;
@dd32 Thanks for the detailed and thoughtful feedback here. You have rightly (in my view) identified the main challenge presented by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22744" title="#22744: enhancement: Media search doesn't include file name (closed: fixed)"&gt;#22744&lt;/a&gt;, which is how to balance the desire to improve the user experience for searching the media library with the fact that doing so requires non-optimal queries of postmeta.
&lt;/p&gt;
&lt;p&gt;
Before discussing the merits/downsides of each option you've proposed, I think it's helpful to keep in mind a specific use case that the change tries to address. Assume someone uploads a file with a name like "large-monarch.jpg" but then renames the title of the attachment to something like "A Butterfly". Later, someone searches for a photo of a monarch in the media library but doesn't find the file because WordPress only searched the title and content fields. This is a simplified example, but imagine a scenario where an organization uses file name conventions as an organizational scheme, where the file name maps to the date, photographer, job ID, and photo number (i.e. 20161222_jdm_5555_32.jpg). This is a case where you may need to search by parts of file names that have no relationship to the post title assigned within the library.
&lt;/p&gt;
&lt;p&gt;
Now, onto the proposals:
&lt;/p&gt;
&lt;p&gt;
a) If it's agreed that the cost of this change is not worth the performance hit, I have no reservations in reverting. However I would strongly prefer we explore other options first.
&lt;/p&gt;
&lt;p&gt;
b) I think that the current implementation (through a filter) allows large sites to turn this off if they so choose. That said, I'm more than happy to discuss ways the developer UX could be improved (e.g., moving away from the filter approach to some other configuration). In fact, we should pursue improvement here regardless.
&lt;/p&gt;
&lt;p&gt;
c) I don't think exact matches are helpful here for reasons illustrated by the use case above. Often, it's not that someone knows the exact name of a file, but needs to search by partial information included in a file name. In my mind, this is the least applicable option.
&lt;/p&gt;
&lt;p&gt;
d) Storing the information in another way seems like the best option, as your example using GUID demonstrates. I was hesitant in using GUID because we've not relied on the GUID for file names since &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7622" title="#7622: defect (bug): wp_get_attachment_url() uses the GUID as the URL (closed: fixed)"&gt;#7622&lt;/a&gt; and I assume some plugins modify the filename as postmeta while ignoring the GUID altogether. Perhaps it is worth sacrificing those edge cases for the performance benefits? Here it's worth noting that there is a request to also make image &lt;code&gt;alt&lt;/code&gt; attributes searchable from the media library, and alt information is similarly stored as postmeta. This cannot as easily be searched from our current post schema.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:19:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:16/1482419961700986</guid>
      <description>&lt;ul&gt;&lt;li&gt;The entire install is a network install with a network admin: WP-admin/network
&lt;/li&gt;&lt;li&gt;Each site has a front: example.com and sub,example.com
&lt;/li&gt;&lt;li&gt;And an admin: example.com/WP-admin
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
But the network does not have a public front facing aspect, hence there is no 'network site' that one is directed to.
&lt;/p&gt;
&lt;p&gt;
Moving on.
&lt;/p&gt;
&lt;p&gt;
By default, the main site doesn't need to be accessible to log in, because WordPress redirects you to YOUR site if you try to log in to it and don't have an account there.
&lt;/p&gt;
&lt;p&gt;
If that's not happening on your install, there's the problem. But I did just build a brand new install to test that on and the results on a clean install were clear. WP properly redirects. This sounds a lot like your configuration broke default behavior so now... what did you do? :)
&lt;/p&gt;
&lt;p&gt;
Try it on a CLEAN install. Then we can start adding min your features to see where this broke and why. Because WP does know your primary site already and should be redirecting you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39272 (Twenty Seventeen: Incorrect $content_width) updated</title>
      
        <dc:creator>sstoqnov</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:17:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39272#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39272#comment:14/1482419843808957</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39370.patch attached to Ticket #39370</title>
      
        <dc:creator>alfhen</dc:creator>

      <pubDate>Thu, 22 Dec 2016 14:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39370/39370.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39370/39370.patch/1482416470381611</guid>
      <description>&lt;p&gt;
Patch with the mentioned fix
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39370 (wp_insert_user() appends suffix to nicename when updating already ...) created</title>
      
        <dc:creator>alfhen</dc:creator>

      <pubDate>Thu, 22 Dec 2016 14:11:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39370</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39370/1482415881849528</guid>
      <description>&lt;p&gt;
wp_insert_user() appends suffix to nicename when updating already existing user, even though the user_nicename prop is set to exactly the same value as it currently has.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Asuming you have a user in your wordpress database with the ID 1 and user_nicename set to 'test-nicename'.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt; If you then make an update using wp_insert_user() of that user and in the update set the user_nicename to 'test-nicename', then wordpress will update the user, but append -2 as a suffix to the nicename.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This happens because of a check located on line 1597 - 1609 in wp-includes/user.php
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// user_nicename allows 50 chars. Subtract one for a hyphen, plus the length of the suffix.
&lt;/span&gt;                        &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;mb_strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mb_substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"-&lt;/span&gt;&lt;span class="si"&gt;$suffix&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="nv"&gt;$suffix&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This code is there to make sure that there are no duplicate nicenames in the wp_users table, which is fine. However it does not take into account updating the nicename of a user with the same value as it currently has.
&lt;/p&gt;
&lt;p&gt;
The way to solve it is very easy, only simply changes the if() statement to check the id fethced in $user_nicename_check against the ID of the user currently being updated, like so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$ID&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// user_nicename allows 50 chars. Subtract one for a hyphen, plus the length of the suffix.
&lt;/span&gt;                        &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;mb_strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mb_substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"-&lt;/span&gt;&lt;span class="si"&gt;$suffix&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="nv"&gt;$suffix&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This makes prevents the code from appending the suffix when the $user_nicename_check ID matches the ID of the user currently being updated
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18532 (resized image dimensions incorrectly floored instead of rounded) updated</title>
      
        <dc:creator>maniu</dc:creator>

      <pubDate>Thu, 22 Dec 2016 13:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18532#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18532#comment:14/1482414367206568</guid>
      <description>&lt;p&gt;
I just wanted to note that this fix breaks linking to some old images (old enough to use previous method of calculating size) when importing. It replaces the link but dimensions are different by one pixel and post content ends up with broken image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39047 (Installer tries to create nonce before options table exists) updated</title>
      
        <dc:creator>nullvariable</dc:creator>

      <pubDate>Thu, 22 Dec 2016 13:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39047#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39047#comment:12/1482413554644582</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39047#comment:11" title="Comment 11"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@nullvariable: I haven't been able to reproduce this error.
&lt;/p&gt;
&lt;p&gt;
Could you please upload a copy of the &lt;code&gt;wp-config.php&lt;/code&gt; you're using that causes this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_HOME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://wordpress.dev'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_SITEURL'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://wordpress.dev'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_NAME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wordpress'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_USER'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'root'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'root'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_HOST'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_CHARSET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf8'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_COLLATE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'AUTH_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SECURE_AUTH_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'LOGGED_IN_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'NONCE_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'AUTH_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SECURE_AUTH_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'LOGGED_IN_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'NONCE_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$table_prefix&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'wp_'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_DEBUG'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have the database user and database name defined in your &lt;code&gt;wp-config.php&lt;/code&gt; been created in MySQL?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there any other tables in that database using the same table prefix as defined in your &lt;code&gt;wp-config.php&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
no, brand new database, no tables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24152 (Use JSON as alternative to headers) updated</title>
      
        <dc:creator>wturrell</dc:creator>

      <pubDate>Thu, 22 Dec 2016 12:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24152#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24152#comment:28/1482408431456317</guid>
      <description>&lt;p&gt;
+1 for the person who suggested YAML was worth a look - it's arguably very expressive / human readable and &lt;strong&gt;supports comments&lt;/strong&gt; (no one's brought this up), although maybe it's not as beginner friendly to write (no tabs etc.) and apparently it's slower to parse due to the larger feature set.
&lt;/p&gt;
&lt;p&gt;
YAML is being heavily used for config files these days (Symfony, all of Drupal 8…)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39317 (Trying to get property of non-object wp_terms_checklist) updated</title>
      
        <dc:creator>jevuska</dc:creator>

      <pubDate>Thu, 22 Dec 2016 11:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39317#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39317#comment:2/1482406941465009</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39317#comment:1" title="Comment 1"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @jevuska - Can you share some additional details? What is the code you're using to filter &lt;code&gt;wp_terms_checklist_args&lt;/code&gt;? Are you modifying a default WP taxonomy, or a custom one? What is the full text of the "Trying to get property..." error (including line number and backtrace, if possible)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @boonebgorges, thanks for response, here my code, just for testing,
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'wp_terms_checklist_args', function( $args, $post_id )
{
 if ( is_admin() )
   $args['descendants_and_self'] = true;
 return $args;
}, 1, 2 );
&lt;/pre&gt;&lt;p&gt;
With notice:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Trying to get property of non-object in ...\wp-admin\includes\template.php on line 156
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39369 (The document of wp_list_pages() is not clear.) updated</title>
      
        <dc:creator>Kenshino</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39369#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39369#comment:1/1482403489824988</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39369.patch attached to Ticket #39369</title>
      
        <dc:creator>doublehhh</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39369/39369.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39369/39369.patch/1482401993031955</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39369 (The document of wp_list_pages() is not clear.) created</title>
      
        <dc:creator>doublehhh</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39369</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39369/1482401949309701</guid>
      <description>&lt;p&gt;
The document of wp_list_pages() is not clear. Developers can use non-hierarchical post type. It makes them confused.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16567 (Can't create categories with different names but similar slugs on Edit ...) reopened</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16567#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16567#comment:25/1482401710927169</guid>
      <description>&lt;p&gt;
It is still broken in WordPress 4.7. I can create both "C" and "C+" categories in &lt;code&gt;wp-admin/edit-tags.php?taxonomy=category&lt;/code&gt;, but second category is not created on Edit Post screen (there is no error message).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 08:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:11/1482394438632032</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39358#comment:10" title="Comment 10"&gt;merts&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 Maybe I can suggest another option:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A table per field will always be faster, but where do you draw the line? Bluntly, we're not going to take that route.
Metadata stored in postmeta is fine and having a thousand post metas per post isn't an issue - it just needs to be recognised that you can't query globally by postmeta, and it should only be used to narrow an already reduced data set.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;edit: and adding a filename field to the existing &lt;code&gt;posts&lt;/code&gt; table probably isn't needed either, especially if it can be inferred from existing data&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39362.2.patch attached to Ticket #39362</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Thu, 22 Dec 2016 08:12:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39362/39362.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39362/39362.2.patch/1482394364262987</guid>
      <description>&lt;p&gt;
Patch of the customize-nav-menus.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>merts</dc:creator>

      <pubDate>Thu, 22 Dec 2016 07:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:10/1482390267559700</guid>
      <description>&lt;p&gt;
@dd32 Maybe I can suggest another option:
&lt;/p&gt;
&lt;p&gt;
The size of the table "Post_meta" is not just directly related to Wordpress's standard usage. Many plugins such as Advanced Custom Fields (highly used by the community) can increase the size of this table dramatically. An ordinary user may not be aware of this and he/she is probably using a lot of plugins like ACF anyway. As you know, even if you remove a plugin you may still find records in the table.
&lt;/p&gt;
&lt;p&gt;
A non optimized query like the one above can result degradation in performance but it is okay because we all make mistakes. However, I believe isolating this table in the first place could at least improve the performance. Personally, I don't like any plugins to touch post_meta table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39349.diff attached to Ticket #39349</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Thu, 22 Dec 2016 05:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39349/39349.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39349/39349.diff/1482383771184502</guid>
      <description>&lt;p&gt;
Remove global title/widget padding added when edit shortcuts are visible
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39349 (Customizer (mobile preview) site title extra padding) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Thu, 22 Dec 2016 05:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39349#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39349#comment:7/1482383718196766</guid>
      <description>&lt;p&gt;
@westonruter nice find! :-) Looks like I copy-and-pasted those rules from this patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/38651/38651.5.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/38651/38651.5.diff&lt;/a&gt; into the next one without looking very carefully.
&lt;/p&gt;
&lt;p&gt;
I still think it's not wise for the edit shortcut styles to move anything in the preview if there's any way to prevent it.
&lt;/p&gt;
&lt;p&gt;
I'll drop a patch here to strip those styles out and we can see what it looks like.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38946 (WP_Upgrader: Protection against deleting files in destination directory) updated</title>
      
        <dc:creator>shivapoudel</dc:creator>

      <pubDate>Thu, 22 Dec 2016 05:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38946#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38946#comment:4/1482383151375730</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31405 (upgrade.php fails with mixed HTTPS (SSL) and simple HTTP sites) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Dec 2016 03:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31405#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31405#comment:20/1482376743553491</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-http by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-http/p1482376741000017"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 22 Dec 2016 03:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365#comment:2/1482376578404683</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch @greatislander!
&lt;/p&gt;
&lt;p&gt;
I think we should continue to use &lt;code&gt;esc_url()&lt;/code&gt; to escape the entire URL here instead of using &lt;code&gt;esc_attr()&lt;/code&gt; on the individual parts - other than that this looks like a solid change to make. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39349 (Customizer (mobile preview) site title extra padding) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39349#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39349#comment:6/1482367556375884</guid>
      <description>&lt;p&gt;
@sirbrillig see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38651" title="#38651: defect (bug): Customizer edit icons may be partially off-screen in Device Preview mode (closed: fixed)"&gt;#38651&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:9/1482367375650910</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
c) Limit it to exact matches only for the postmeta, which with the help of a new DB index would make it much faster.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To follow that up, it'd actually have to be done with the help of a new meta key.. The reason being, is that the meta values are currently stored like so: &lt;code&gt;2015/01/08W0zJv.jpg&lt;/code&gt; OR &lt;code&gt;/home/someuser/public_html/wp-content/uploads/08W0zJv.jpg&lt;/code&gt;. Exact-matching and/or indexing isn't going to help here without a rethink of where the filename is available.
&lt;/p&gt;
&lt;p&gt;
We could use the fact that the &lt;code&gt;post_name&lt;/code&gt; field is going contain the basename of the filename, ie. &lt;code&gt;08w0zjv&lt;/code&gt; in the case of &lt;code&gt;08W0zJv.jpg&lt;/code&gt;, combined with the fact that the Guid field &lt;em&gt;currently&lt;/em&gt; contains the filename. That would at least cause it to hit indexes and not require a table join, for example (note the 4th search OR in both the previous and this example)
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS wp_posts.id
FROM   wp_posts
WHERE  1 = 1
       AND (( ( wp_posts.post_title LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_excerpt LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_content LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_name = '08W0zjv' AND wp_posts.guid LIKE '%08W0zJv.jpg%' )
        ))
       AND wp_posts.post_type = 'attachment'
       AND (( wp_posts.post_status = 'inherit'
               OR wp_posts.post_status = 'private' ))
GROUP  BY wp_posts.id
ORDER  BY wp_posts.post_title LIKE '%08W0zJv.jpg%' DESC,
          wp_posts.post_date DESC
LIMIT  0, 10
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:8/1482365122254612</guid>
      <description>&lt;p&gt;
I should add, that I never really liked this as a standalone filter, it's likely to break at some point.
&lt;/p&gt;
&lt;p&gt;
A fifth option would also be to only add the postmeta searching when the search *looked* like a filename, so &lt;code&gt;ABC.def&lt;/code&gt; but not  &lt;code&gt;ABC DEF GHI&lt;/code&gt; (which isn't entirely accurate, but would help)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:7/1482364987904509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The issue we have here, is quite simple - You cannot search postmeta on large sites, there's no way around that, it's just not possible to do it in a performant way.
&lt;/p&gt;
&lt;p&gt;
The user experience gained by this change is good however, it works as an end-user may intend the search to.
&lt;/p&gt;
&lt;p&gt;
IMHO there's a few options of varying usefulness
a) Drop it entirely
b) Drop it for "large sites" (ie. more than x number of post) - The UX of this is bad
c) Limit it to exact matches only for the postmeta, which with the help of a new DB index would make it much faster.
d) Store the attachment data in another way.
&lt;/p&gt;
&lt;p&gt;
For reference, this is what the SQL ends up looking like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS wp_posts.id
FROM   wp_posts
       LEFT JOIN wp_postmeta AS sq1
              ON ( wp_posts.id = sq1.post_id
                   AND sq1.meta_key = '_wp_attached_file' )
WHERE  1 = 1
       AND (( ( wp_posts.post_title LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_excerpt LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_content LIKE '%08W0zJv.jpg%' )
               OR ( sq1.meta_value LIKE '%08W0zJv.jpg%' ) ))
       AND wp_posts.post_type = 'attachment'
       AND (( wp_posts.post_status = 'inherit'
               OR wp_posts.post_status = 'private' ))
GROUP  BY wp_posts.id
ORDER  BY wp_posts.post_title LIKE '%08W0zJv.jpg%' DESC,
          wp_posts.post_date DESC
LIMIT  0, 10
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>