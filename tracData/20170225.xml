<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39967 (Customize Site Logo + Icon) created</title>
      
        <dc:creator>zzakari</dc:creator>

      <pubDate>Sat, 25 Feb 2017 21:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39967</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39967/1488056612346015</guid>
      <description>&lt;p&gt;
hi,
&lt;/p&gt;
&lt;p&gt;
Im using the same pictures, when selecting either logo either icon, from media library (online images) I dont have option #skip crop# and 'An error occured' when try to crop it (maybe because is smaller than the required dimensions&amp;gt;). When on the same dialog upload the image, I have the option #skip crop#.
&lt;/p&gt;
&lt;p&gt;
using v4.7.2
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 25 Feb 2017 20:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:125/1488054129128068</guid>
      <description>&lt;p&gt;
&lt;code&gt;get_responsive_style()&lt;/code&gt; is setting a &lt;code&gt;widgth: 100%&lt;/code&gt; on everything, which is causing stretching. Most themes should already have &lt;code&gt;img, video { max-width: 100%; }&lt;/code&gt;, and we could also add styles for that scoped with widget instances from the core side, so this function should be removed entirely as I suggested on GitHub.
&lt;/p&gt;
&lt;p&gt;
The UI controls here should be consistent with WP_Customize_Media_Control to provide a consistent user experience. That means:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There should be a visual placeholder when no media is selected.
&lt;/li&gt;&lt;li&gt;The images shouldn't be clickable (this is what I was referring to @aferica).
&lt;/li&gt;&lt;li&gt;The media should be playable within the widget controls.
&lt;/li&gt;&lt;li&gt;The text within the widget controls needs to be removed.
&lt;/li&gt;&lt;li&gt;I don't think we should bring the remove button over since you can delete the widget, so that part would be different.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There's no need to reinvent the wheel and introduce something different here. It would be nice to make improvements here, such as clickable placeholders, but if we do that we should update the other media UI controls to match in the process.
&lt;/p&gt;
&lt;p&gt;
Themes are encouraged to style MediaElement players. Usually this is done by customizing the colors and/or icons. There's no reason that that shouldn't also apply to widget by default, just like your global theme link colors will also apply to widgets unless you set a different link color in widgets with your CSS. Themes could always customize widgets further, but by default they should match media in content. At a minimum we should make this fix in bundled themes and give theme authors ample notice that they may need to update to account for this. Otherwise, sites will have oddly-inconsistent results.
&lt;/p&gt;
&lt;p&gt;
The latest version of the patch has several JS errors that I can quickly tack down so I can't test and iterate further right now. Once that's fixed I can look at improving the fallback media type behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38571 (Customizer preview blocked by content security policy) updated</title>
      
        <dc:creator>ABTOP</dc:creator>

      <pubDate>Sat, 25 Feb 2017 20:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38571#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38571#comment:9/1488053319791612</guid>
      <description>&lt;p&gt;
I am having the same problem with a site hosted at Site Builder. The local installation is almost identical, except for the URL, naturally, and works fine. Firefox 51.0.1. WordPress 7.4.2
&lt;/p&gt;
&lt;p&gt;
Here's the security console entry:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Content Security Policy: The page’s settings blocked the loading of a resource at http://angleškitečaj.com/wp-admin/customize.php?url=http%3A%2F%2Fxn--anglekiteaj-vnb10i.com%2F%3Fpage_id%3D417 (“frame-ancestors http://xn--anglekiteaj-vnb10i.com”).
&lt;/pre&gt;&lt;p&gt;
Looks like the problem with angleškitečaj.com vs. xn--anglekiteaj-vnb10i.com
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) reopened</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 25 Feb 2017 16:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:124/1488038941582462</guid>
      <description>&lt;p&gt;
Reopening to fix in previous branches.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #39550,​39552 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 25 Feb 2017 16:07:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39550%2C39552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39550%2C39552/1488038846633264</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40124" title="Media: Reduce failing uploads following 4.7.1.
[39831] introduced ..."&gt;40124&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Reduce failing uploads following 4.7.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39831" title="Media: Improve image filetype checking.
This adds a new function ..."&gt;[39831]&lt;/a&gt; introduced more strict MIME type checking for uploads, which&lt;br /&gt;
resulted in unintetionally blocking several filetypes that were&lt;br /&gt;
previously valid. This change uses  a more targeted approach to MIME&lt;br /&gt;
validation to restore previous behavior for most types.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props blobfolio, iandunn, ipstenu, markoheijnen, xknown, joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39552" title="#39552: defect (bug): SVG upload support broken in 4.7.1 (closed: fixed)"&gt;#39552&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40124]: Media: Reduce failing uploads following 4.7.1.  [39831] introduced ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 25 Feb 2017 16:07:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40124/1488038845980076</guid>
      <description>&lt;p&gt;
Media: Reduce failing uploads following 4.7.1.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39831" title="Media: Improve image filetype checking.
This adds a new function ..."&gt;[39831]&lt;/a&gt; introduced more strict MIME type checking for uploads, which
resulted in unintetionally blocking several filetypes that were
previously valid. This change uses  a more targeted approach to MIME
validation to restore previous behavior for most types.
&lt;/p&gt;
&lt;p&gt;
Props blobfolio, iandunn, ipstenu, markoheijnen, xknown, joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39552" title="#39552: defect (bug): SVG upload support broken in 4.7.1 (closed: fixed)"&gt;#39552&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39966 (Twenty Ten: Featured Images on Category/Archive pages) created</title>
      
        <dc:creator>ashercantrell</dc:creator>

      <pubDate>Sat, 25 Feb 2017 15:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39966/1488037445779269</guid>
      <description>&lt;p&gt;
Currently, Twenty Ten only shows featured images from posts on its front page. This means that other pages, such as Categories and Archive pages, don't show them and look pretty plain.
&lt;/p&gt;
&lt;p&gt;
I think it'd be a nice improvement to show featured images on all pages that list blog posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31818 (Uniform Search Form Display/Experience) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 25 Feb 2017 15:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31818#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31818#comment:25/1488036887963527</guid>
      <description>&lt;p&gt;
We should probably consider this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
2.1.1 Keyboard: All functionality of the content is operable through a keyboard interface without requiring specific timings for individual keystrokes ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/TR/WCAG20/#keyboard-operation"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/WCAG20/#keyboard-operation&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9777 (Add "delete" button to term pages) updated</title>
      
        <dc:creator>arshidkv12</dc:creator>

      <pubDate>Sat, 25 Feb 2017 15:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9777#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9777#comment:58/1488036870735452</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
js file &lt;code&gt;wp_enqueue_script('admin-tags');&lt;/code&gt; not working on my system. I think, it is not registered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36613 (Browser back button doesn't work in Theme Browser) reopened</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 25 Feb 2017 15:07:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36613#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36613#comment:8/1488035235251862</guid>
      <description>&lt;p&gt;
Noticed a JS error while navigating through themes, sorry for reopening 😬 To reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add Themes screen &amp;gt; click on a theme, let's say the first one
&lt;/li&gt;&lt;li&gt;the theme installer opens
&lt;/li&gt;&lt;li&gt;navigate a couple themes forward
&lt;/li&gt;&lt;li&gt;then use your browser's back button to navigate backwards
&lt;/li&gt;&lt;li&gt;after the third click, the theme installer correctly closes
&lt;/li&gt;&lt;li&gt;now click on another theme in the same screen, let's say the second one
&lt;/li&gt;&lt;li&gt;the theme installer opens
&lt;/li&gt;&lt;li&gt;click on the theme installer next or previous arrows
&lt;/li&gt;&lt;li&gt;no navigation happens
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here's what I get in the console:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Uncaught TypeError: Cannot read property 'at' of undefined
theme.js?ver=4.8-alpha-39357-src:526
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 25 Feb 2017 14:47:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:16/1488034038485953</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488034036484544"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39875.2.patch attached to Ticket #39875</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Sat, 25 Feb 2017 14:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39875/39875.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39875/39875.2.patch/1488033932795973</guid>
      <description>&lt;p&gt;
Uses &lt;code&gt;wp_unique_filename()&lt;/code&gt; with no random string in PDF file previews.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 25 Feb 2017 14:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:29/1488033443745976</guid>
      <description>&lt;p&gt;
I think the issue in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39516#comment:24" title="Comment 24"&gt;comment:24&lt;/a&gt; is not because of changes in the media views JS, but it's because of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37727" title="Media: Pass allowed file extensions to Plupload.
Plupload's ..."&gt;[37727]&lt;/a&gt;. The related ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14244" title="#14244: defect (bug): Upload file types should be checked BEFORE uploading. (closed: fixed)"&gt;#14244&lt;/a&gt; omitted to highlight the (unintended?) change in the UI behaviour. Not a big deal I guess, just a bit difficult to trace down.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) updated</title>
      
        <dc:creator>sanchothefat</dc:creator>

      <pubDate>Sat, 25 Feb 2017 14:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:3/1488032654329413</guid>
      <description>&lt;p&gt;
@flixos90 look at the list_users capability in particular. It's mentioned in schema.php and added only when installing or creating a site. There's no mention of it in capabilities.php so is never added dynamically from anywhere other than the database.
&lt;/p&gt;
&lt;p&gt;
The list_users cap is used on a bunch of current_user_can() checks in the admin menu for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39944 (Site wp_X_user_roles option not updated when network settings change) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 25 Feb 2017 12:30:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39944#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39944#comment:2/1488025852226775</guid>
      <description>&lt;p&gt;
@sanchothefat I might be misunderstanding you, but as far as I can see the behavior controlled by the options is properly applied. The administrator role always has the &lt;code&gt;create_users&lt;/code&gt; capability regardless of the value of that option, but then this option is checked in &lt;code&gt;map_meta_cap()&lt;/code&gt; and the capability gets adjusted as necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39888.1.diff attached to Ticket #39888</title>
      
        <dc:creator>arshidkv12</dc:creator>

      <pubDate>Sat, 25 Feb 2017 12:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39888/39888.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39888/39888.1.diff/1488024454769962</guid>
      <description>&lt;p&gt;
If user not exist return false
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39955.1.diff attached to Ticket #39955</title>
      
        <dc:creator>arshidkv12</dc:creator>

      <pubDate>Sat, 25 Feb 2017 11:36:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39955/39955.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39955/39955.1.diff/1488022601752661</guid>
      <description>&lt;p&gt;
Unescaped html tag
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39965 (REST API: Introduce a controller for searching across post types) created</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 25 Feb 2017 10:44:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39965/1488019470015478</guid>
      <description>&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38920" title="#38920: enhancement: Use REST API for link query in editor (new)"&gt;#38920&lt;/a&gt; for a simple core use case.
&lt;/p&gt;
&lt;p&gt;
There seems to be no way to query posts across multiple (or all) post types as you can do with &lt;code&gt;WP_Query&lt;/code&gt;. You have to start making multiple requests, which is an inconvenient and non-optimal approach? Ideally this should be directly passed to the server and &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39851" title="#39851: task (blessed): WP_REST_Posts_Controller::get_items() has too many concerns (new)"&gt;#39851&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37569 (REST API: refresh expired nonces) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sat, 25 Feb 2017 09:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37569#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37569#comment:7/1488015729413283</guid>
      <description>&lt;p&gt;
At first glance this looks great. It's fine not having a separate script IMO, as long as there is an endpoint for it, it's the canonical way to refresh the nonce, and it's documented as such.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39964 (changes to variable products shown before pressing update) created</title>
      
        <dc:creator>ekuk</dc:creator>

      <pubDate>Sat, 25 Feb 2017 08:24:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39964/1488011061516850</guid>
      <description>&lt;p&gt;
don't know if this is a bug but my client certainly does and I don't recall it doing this before. If you have woocommerce installed and have a published variable product, then you go to edit that product and make changes to the attributes or variations and press save attribute or save on the variations, these changes are shown instantly on the front end rather than as you would expect when you press update on the product itself.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 25 Feb 2017 06:05:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:41/1488002740972846</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.3.diff" title="Attachment '37140-1.3.diff' in Ticket #37140"&gt;37140-1.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37140/37140-1.3.diff" title="Download"&gt;​&lt;/a&gt; feature-checks to make sure both the constant and method are available.
&lt;/p&gt;
&lt;p&gt;
It looks like they've been around for at least 9 years, so this should succeed most of the time, but it's better to be safe.
&lt;/p&gt;
&lt;p&gt;
Since we're on edge cases, is there any reason we should make sure this only happens with JPGs, or may as well handle it for other image types as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37140-1.3.diff attached to Ticket #37140</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 25 Feb 2017 06:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.3.diff/1488002496179274</guid>
      <description>&lt;p&gt;
feature check before orientation set
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:40/1488001473835171</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Annnd, I've realized I missed something (that took a while).
&lt;/p&gt;
&lt;p&gt;
We need to double-check for existence of both the method and constant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) reopened</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:31:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:39/1488000664810517</guid>
      <description>&lt;p&gt;
Reopening for 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #14459,​37140 batch updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:25:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14459%2C37140</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14459%2C37140/1488000341409065</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40123" title="Media: Reset Exif orientation after rotate in ..."&gt;40123&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Reset Exif orientation after rotate in &lt;code&gt;WP_Image_Editor_Imagick&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Due to inconsistencies in the way browsers handle Exif orientation data,&lt;br /&gt;
if a user manually rotates an image within WordPress, set the Exif orientation to&lt;br /&gt;
the default (1) so that the image displays with the same rotation/flip in every browser.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sanchothefat, triplejumper12, joemcgill, azaozz, markoheijnen, mikeschroder.&lt;br /&gt;
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14459" title="#14459: enhancement: Rotate Full Size Images on Upload (reviewing)"&gt;#14459&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37140" title="#37140: defect (bug): Rotating images doesn't adjust orientation for imagick (closed: fixed)"&gt;#37140&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40123]: Media: Reset Exif orientation after rotate in ...</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:25:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40123/1488000340466956</guid>
      <description>&lt;p&gt;
Media: Reset Exif orientation after rotate in &lt;code&gt;WP_Image_Editor_Imagick&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Due to inconsistencies in the way browsers handle Exif orientation data,
if a user manually rotates an image within WordPress, set the Exif orientation to
the default (1) so that the image displays with the same rotation/flip in every browser.
&lt;/p&gt;
&lt;p&gt;
Props sanchothefat, triplejumper12, joemcgill, azaozz, markoheijnen, mikeschroder.
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14459" title="#14459: enhancement: Rotate Full Size Images on Upload (reviewing)"&gt;#14459&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37140" title="#37140: defect (bug): Rotating images doesn't adjust orientation for imagick (closed: fixed)"&gt;#37140&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37140-1.2.diff attached to Ticket #37140</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:23:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37140/37140-1.2.diff/1488000225231580</guid>
      <description>&lt;p&gt;
Merged with existing Imagick tests, shifted to 90 degree rotation in test, moved to using one test image, comments.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14459 (Rotate Full Size Images on Upload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14459#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14459#comment:63/1487999773901843</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487999771001762"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:37/1487999740794103</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487999738001760"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:11/1487999016565895</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.  The tests added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40122" title="REST API: Fix behavior of `sticky` posts filter when no posts are ..."&gt;[40122]&lt;/a&gt; depend on &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40037" title="REST API: Improve posts orderby tests
This commit adds tests for ..."&gt;[40037]&lt;/a&gt; so that commit should probably be merged here as well.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:10/1487998937913470</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40122" title="REST API: Fix behavior of `sticky` posts filter when no posts are ..."&gt;40122&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Fix behavior of &lt;code&gt;sticky&lt;/code&gt; posts filter when no posts are sticky.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, when getting posts from the API with &lt;code&gt;sticky=true&lt;/code&gt;, if there were no sticky posts set, the query would return all posts  as if the &lt;code&gt;sticky&lt;/code&gt; argument was not set.  In this situation, the query should return an empty array instead.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;sticky=true&lt;/code&gt; query that should return an empty array (in the previous situation, or with &lt;code&gt;include&lt;/code&gt; and no intersecting post IDs) was also broken in that it would query the post with ID 1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, this commit significantly improves test coverage for the &lt;code&gt;sticky&lt;/code&gt; filter argument, including direct testing of the &lt;code&gt;WHERE&lt;/code&gt; clauses generated by &lt;code&gt;WP_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ryelle.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39947" title="#39947: defect (bug): REST API: Sticky post query returns unsticky posts when no posts are sticky (closed: fixed)"&gt;#39947&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40122]: REST API: Fix behavior of `sticky` posts filter when no posts are ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 25 Feb 2017 05:02:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40122/1487998937444167</guid>
      <description>&lt;p&gt;
REST API: Fix behavior of &lt;code&gt;sticky&lt;/code&gt; posts filter when no posts are sticky.
&lt;/p&gt;
&lt;p&gt;
Previously, when getting posts from the API with &lt;code&gt;sticky=true&lt;/code&gt;, if there were no sticky posts set, the query would return all posts  as if the &lt;code&gt;sticky&lt;/code&gt; argument was not set.  In this situation, the query should return an empty array instead.
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;sticky=true&lt;/code&gt; query that should return an empty array (in the previous situation, or with &lt;code&gt;include&lt;/code&gt; and no intersecting post IDs) was also broken in that it would query the post with ID 1.
&lt;/p&gt;
&lt;p&gt;
Finally, this commit significantly improves test coverage for the &lt;code&gt;sticky&lt;/code&gt; filter argument, including direct testing of the &lt;code&gt;WHERE&lt;/code&gt; clauses generated by &lt;code&gt;WP_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ryelle.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39947" title="#39947: defect (bug): REST API: Sticky post query returns unsticky posts when no posts are sticky (closed: fixed)"&gt;#39947&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 25 Feb 2017 04:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:21/1487997952637752</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40121" title="REST API: Update the client test fixtures after changes to post ..."&gt;40121&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Update the client test fixtures after changes to post formats.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit updates the &lt;code&gt;wp-api-generated.js&lt;/code&gt; fixture file after recent changes to the way post formats work in the API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40121]: REST API: Update the client test fixtures after changes to post ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 25 Feb 2017 04:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40121/1487997952168391</guid>
      <description>&lt;p&gt;
REST API: Update the client test fixtures after changes to post formats.
&lt;/p&gt;
&lt;p&gt;
This commit updates the &lt;code&gt;wp-api-generated.js&lt;/code&gt; fixture file after recent changes to the way post formats work in the API.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 25 Feb 2017 04:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:9/1487997733862746</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39947/39947.2.diff" title="Attachment '39947.2.diff' in Ticket #39947"&gt;39947.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39947/39947.2.diff" title="Download"&gt;​&lt;/a&gt; adds more test cases and also tests the &lt;code&gt;WHERE&lt;/code&gt; clauses generated by &lt;code&gt;WP_Query&lt;/code&gt; using a similar approach to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39079" title="#39079: enhancement: REST API: Improve posts orderby tests (closed: fixed)"&gt;#39079&lt;/a&gt;.  This catches the &lt;code&gt;IN(0)&lt;/code&gt; fix on this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39947.2.diff attached to Ticket #39947</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Sat, 25 Feb 2017 04:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39947/39947.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39947/39947.2.diff/1487997575439302</guid>
      <description>&lt;p&gt;
Add more tests; test the generated SQL to catch the &lt;code&gt;IN(0)&lt;/code&gt; fix.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 25 Feb 2017 02:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:36/1487988564159187</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1487988562001729"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:20/1487978973393480</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.  Edit: Two commits to backport - &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40120" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;[40120]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40121" title="REST API: Update the client test fixtures after changes to post ..."&gt;[40121]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:19/1487978944692182</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40120" title="REST API: Allow setting post formats even if they are not supported by ..."&gt;40120&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Allow setting post formats even if they are not supported by the theme.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;post_format&lt;/code&gt; not used by the current theme, but supported by core is not a wrong/broken piece of information.  It's just not used at this point in time.  Therefore we should allow setting and retrieving any of the standard post formats supported in core, even if the current theme doesn't use them.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After this commit, a post's &lt;code&gt;format&lt;/code&gt; value can survive a round trip through the API, which is a good general design principle for an API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props JPry, iseulde, davidakennedy, Drivingralle.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40120]: REST API: Allow setting post formats even if they are not supported by ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40120/1487978944207101</guid>
      <description>&lt;p&gt;
REST API: Allow setting post formats even if they are not supported by the theme.
&lt;/p&gt;
&lt;p&gt;
A &lt;code&gt;post_format&lt;/code&gt; not used by the current theme, but supported by core is not a wrong/broken piece of information.  It's just not used at this point in time.  Therefore we should allow setting and retrieving any of the standard post formats supported in core, even if the current theme doesn't use them.
&lt;/p&gt;
&lt;p&gt;
After this commit, a post's &lt;code&gt;format&lt;/code&gt; value can survive a round trip through the API, which is a good general design principle for an API.
&lt;/p&gt;
&lt;p&gt;
Props JPry, iseulde, davidakennedy, Drivingralle.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39232" title="#39232: defect (bug): REST API: Can't set existing post format if theme does not support it (2) (closed: fixed)"&gt;#39232&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>35958-varchar-191-object-property.diff attached to Ticket #35958</title>
      
        <dc:creator>caseypatrickdriscoll</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-object-property.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-object-property.diff/1487978389786160</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35958-varchar-191-string-literal.diff attached to Ticket #35958</title>
      
        <dc:creator>caseypatrickdriscoll</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-string-literal.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35958/35958-varchar-191-string-literal.diff/1487978378397146</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35958 (Failing dbDelta tests due to MySQL error) updated</title>
      
        <dc:creator>caseypatrickdriscoll</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:18:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35958#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35958#comment:6/1487978312973475</guid>
      <description>&lt;p&gt;
I can confirm this on a new VVV instance with MariaDB 5.5. A similar thread is here &lt;a href="https://core.trac.wordpress.org/ticket/35249"&gt;https://core.trac.wordpress.org/ticket/35249&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since WP 4.6, all tables are set with &lt;code&gt;utf8mb4&lt;/code&gt; charset and collation if it is available.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/wp-db.php#L758"&gt;https://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/wp-db.php#L758&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The magic number should be &lt;code&gt;191&lt;/code&gt; as that is the amount of four-byte characters available under the 767 &lt;code&gt;ENGINE=MyISAM&lt;/code&gt; limit &lt;code&gt;(191 * 4 = 764 bytes)&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As string literal:
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/s/x30kpsxv5nzyoko/2017-02-24%20at%2018.10.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/s/x30kpsxv5nzyoko/2017-02-24%20at%2018.10.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As object property:
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/s/2apntbcurpwwn74/2017-02-24%20at%2018.16.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/s/2apntbcurpwwn74/2017-02-24%20at%2018.16.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Attached are two patches, one with the &lt;code&gt;191&lt;/code&gt; string literal in every location, the other with it set as an Object Property. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:13/1487977971664583</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40119" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;40119&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40118" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;[40118]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40119]: Plugins: After [38703], adjust the selector for checkbox selection to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40119/1487977971154565</guid>
      <description>&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40118" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;[40118]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:12/1487977822825207</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:09:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:11/1487977792391441</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40118" title="Plugins: After [38703], adjust the selector for checkbox selection to ..."&gt;40118&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40118]: Plugins: After [38703], adjust the selector for checkbox selection to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40118/1487977791901678</guid>
      <description>&lt;p&gt;
Plugins: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38703" title="Plugins: Fix checkbox selection when searching for installed plugins.
 ..."&gt;[38703]&lt;/a&gt;, adjust the selector for checkbox selection to account for nested tables.
&lt;/p&gt;
&lt;p&gt;
Props afercia, swissspidy, reldev.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39881 (`WP_REST_Posts_Controller::check_read_permission()` should check if ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 23:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39881#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39881#comment:4/1487977564233304</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I investigated this a bit more, thinking that it might be pretty simple to fix, but I'm going to stick with my earlier recommendation to punt.  Here's why:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's not clear to me how a post would get into this situation in the first place.  &lt;code&gt;wp_delete_post&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/post.php?marks=2467-2468,2486#L2465"&gt;handles this situation&lt;/a&gt; by resetting the &lt;code&gt;post_parent&lt;/code&gt; of any attachments, so this is likely to be very uncommon.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;WP core itself is pretty broken when this situation does occur.  I forced it manually for the following attachment - &lt;a class="ext-link" href="https://nylen.io/wp-dev/i-need-dis-otter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nylen.io/wp-dev/i-need-dis-otter/&lt;/a&gt; - you'll note the page 404s, which is also the case when I'm logged in.  However, wp-admin still points here for the attachment description page, and this is the value of the &lt;code&gt;link&lt;/code&gt; field in the REST API response.  (The API URL is &lt;a class="ext-link" href="https://nylen.io/wp-dev/wp-json/wp/v2/media/21"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://nylen.io/wp-dev/wp-json/wp/v2/media/21&lt;/a&gt;, which I can only view when authenticated.)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Given the above, this needs more discussion, probably a broader fix than just the REST API, and of course unit tests.  The existing behavior is kind of broken, but at least it's consistently broken in wp-admin and the REST API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:18/1487976467545536</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40117" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;40117&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek, adamsilverstein, jnylen0.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;[40109]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40117]: REST API: JavaScript client - improve route discovery for custom ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40117/1487976467023471</guid>
      <description>&lt;p&gt;
REST API: JavaScript client - improve route discovery for custom namespaces.
&lt;/p&gt;
&lt;p&gt;
Fix parsing of custom namespace routes. Transform class names, removing dashes and capitalizing each word/route part so a route path of &lt;code&gt;widgets/recent-posts&lt;/code&gt; becomes a collection with the name &lt;code&gt;WidgetsRecentPosts&lt;/code&gt;. Correct parent route part when routes are longer than expected, reversing parse direction.
&lt;/p&gt;
&lt;p&gt;
Props westonruter, jazbek, adamsilverstein, jnylen0.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;[40109]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:18/1487975960266148</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is good to go with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39232/39232.2.diff" title="Attachment '39232.2.diff' in Ticket #39232"&gt;39232.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39232/39232.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39232.2.diff attached to Ticket #39232</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39232/39232.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39232/39232.2.diff/1487975861130915</guid>
      <description>&lt;p&gt;
Modify the existing "unsupported post format" tests instead of removing them.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:50/1487975586473383</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40116" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;40116&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Add QUnit tests for wp-api.js and PHPUnit fixture generation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests: verify that wp-api loads correctly, verify that the expected base models and collections exist and can be instantiated, verify that collections contain the correct models, verify that expected helper functions are in place for each collection.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The QUnit tests rely on two fixture files: &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt; contains the data response from each core endpoint and is generated by running the PHPUnit &lt;code&gt;restapi-jsclient&lt;/code&gt; group. &lt;code&gt;tests/qunit/fixtures/wp-api.js&lt;/code&gt; maps the generated data to endpoint routes, and overrides &lt;code&gt;Backbone.ajax&lt;/code&gt; to mock the responses for the tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add PHPUnit tests in &lt;code&gt;tests/phpunit/tests/rest-api/rest-schema-setup.php&lt;/code&gt;. First, verify that the API returns the expected routes via &lt;code&gt;server-&amp;gt;get_routes()&lt;/code&gt;. Then, the &lt;code&gt;test_build_wp_api_client_fixtures&lt;/code&gt; test goes thru each endpoint and requests it from the API, tests that it returns data, and builds up the data for the mocked QUnit tests, saving the final results to &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add a new grunt task &lt;code&gt;restapi-jsclient&lt;/code&gt; which runs the phpunit side data generation and the qunit tests together.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, welcher, adamsilverstein, netweb, ocean90, rachelbaker.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40058" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;[40058]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40061" title="REST API: improve test fixture generation, normalizing data.
Add a ..."&gt;[40061]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;[40066]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;[40077]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40116]: REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:33:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40116/1487975585907061</guid>
      <description>&lt;p&gt;
REST API: Add QUnit tests for wp-api.js and PHPUnit fixture generation.
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests: verify that wp-api loads correctly, verify that the expected base models and collections exist and can be instantiated, verify that collections contain the correct models, verify that expected helper functions are in place for each collection.
&lt;/p&gt;
&lt;p&gt;
The QUnit tests rely on two fixture files: &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt; contains the data response from each core endpoint and is generated by running the PHPUnit &lt;code&gt;restapi-jsclient&lt;/code&gt; group. &lt;code&gt;tests/qunit/fixtures/wp-api.js&lt;/code&gt; maps the generated data to endpoint routes, and overrides &lt;code&gt;Backbone.ajax&lt;/code&gt; to mock the responses for the tests.
&lt;/p&gt;
&lt;p&gt;
Add PHPUnit tests in &lt;code&gt;tests/phpunit/tests/rest-api/rest-schema-setup.php&lt;/code&gt;. First, verify that the API returns the expected routes via &lt;code&gt;server-&amp;gt;get_routes()&lt;/code&gt;. Then, the &lt;code&gt;test_build_wp_api_client_fixtures&lt;/code&gt; test goes thru each endpoint and requests it from the API, tests that it returns data, and builds up the data for the mocked QUnit tests, saving the final results to &lt;code&gt;tests/qunit/fixtures/wp-api-generated.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Add a new grunt task &lt;code&gt;restapi-jsclient&lt;/code&gt; which runs the phpunit side data generation and the qunit tests together.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, welcher, adamsilverstein, netweb, ocean90, rachelbaker.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40058" title="REST API: Add QUnit tests for wp-api.js and PHPUnit fixture ..."&gt;[40058]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40061" title="REST API: improve test fixture generation, normalizing data.
Add a ..."&gt;[40061]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40065" title="REST API: Fix the client test fixture generation in PHP 5.2 and 5.3.
 ..."&gt;[40065]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40066" title="REST API: Skip generating the client test fixtures in PHP 5.2 and 5.3. ..."&gt;[40066]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40077" title="REST API: Skip generating the client test fixtures in multisite mode.
 ..."&gt;[40077]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40104" title="REST API: Ensure that tests pass if extra endpoints are registered.
 ..."&gt;[40104]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39264" title="#39264: enhancement: Add WP-API JS Client unit tests to core (closed: fixed)"&gt;#39264&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:23/1487973768945662</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40115" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;40115&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved. This makes it much more difficult for API clients to know the correct date of a draft post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, jnylen0.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40108" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;[40108]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40115]: REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 22:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40115/1487973768441656</guid>
      <description>&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved. This makes it much more difficult for API clients to know the correct date of a draft post.
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.
&lt;/p&gt;
&lt;p&gt;
Props joehoyle, jnylen0.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40108" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;[40108]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39256 (REST API: Multiple issues with setting dates of posts) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39256#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39256#comment:17/1487973488181558</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40114" title="REST API: Fix multiple issues with setting dates of posts and ..."&gt;40114&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Fix multiple issues with setting dates of posts and comments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit modifies the &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; function to correctly parse local and UTC timestamps with or without timezone information.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It also ensures that the REST API can edit the dates of draft posts by setting the &lt;code&gt;edit_date&lt;/code&gt; flag to &lt;code&gt;wp_update_post&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Overall this commit ensures that post and comment dates can be set and updated as expected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40101" title="REST API: Fix multiple issues with setting dates of posts and ..."&gt;[40101]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39256" title="#39256: defect (bug): REST API: Multiple issues with setting dates of posts (closed: fixed)"&gt;#39256&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40114]: REST API: Fix multiple issues with setting dates of posts and ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:58:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40114/1487973487670298</guid>
      <description>&lt;p&gt;
REST API: Fix multiple issues with setting dates of posts and comments.
&lt;/p&gt;
&lt;p&gt;
This commit modifies the &lt;code&gt;rest_get_date_with_gmt&lt;/code&gt; function to correctly parse local and UTC timestamps with or without timezone information.
&lt;/p&gt;
&lt;p&gt;
It also ensures that the REST API can edit the dates of draft posts by setting the &lt;code&gt;edit_date&lt;/code&gt; flag to &lt;code&gt;wp_update_post&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Overall this commit ensures that post and comment dates can be set and updated as expected.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40101" title="REST API: Fix multiple issues with setting dates of posts and ..."&gt;[40101]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39256" title="#39256: defect (bug): REST API: Multiple issues with setting dates of posts (closed: fixed)"&gt;#39256&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:13:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:122/1487970814645645</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.6.diff" title="Attachment '39550.6.diff' in Ticket #39550"&gt;39550.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.6.diff" title="Download"&gt;​&lt;/a&gt; is improves a few inline comments in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; but is otherwise identical.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39550.6.diff attached to Ticket #39550</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550.6.diff/1487970751795664</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39960 (Separate Supported Status for Trackbacks and Pingbacks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 21:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39960#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39960#comment:1/1487970393902087</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by dshanske. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487970391010421"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39933 (WP_REST_Request::get_param() doesn't work for getting body params on ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39933#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39933#comment:14/1487969760601359</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40113" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;40113&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters. Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes application/x-www-form-urlencoded parameters as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40105" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;[40105]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40113]: REST API: Correctly parse body parameters for DELETE requests.  DELETE ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:56:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40113/1487969760082295</guid>
      <description>&lt;p&gt;
REST API: Correctly parse body parameters for DELETE requests.
&lt;/p&gt;
&lt;p&gt;
DELETE was inadvertently omitted from the list of non-POST HTTP methods that should be able to accept body parameters. Parameters passed to DELETE requests as JSON are already parsed correctly; this commit fixes application/x-www-form-urlencoded parameters as well.
&lt;/p&gt;
&lt;p&gt;
Props mnelson4.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40105" title="REST API: Correctly parse body parameters for DELETE requests.
DELETE ..."&gt;[40105]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39933" title="#39933: defect (bug): WP_REST_Request::get_param() doesn't work for getting body params on ... (closed: fixed)"&gt;#39933&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:16/1487969479550802</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40112" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Merges ..."&gt;40112&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: preserve empty image alt attributes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40110" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Fixes ..."&gt;[40110]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40112]: TinyMCE: preserve empty image alt attributes.  Props afercia. Merges ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40112/1487969479077591</guid>
      <description>&lt;p&gt;
TinyMCE: preserve empty image alt attributes.
&lt;/p&gt;
&lt;p&gt;
Props afercia.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40110" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Fixes ..."&gt;[40110]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>presjpolk</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:69/1487969448468026</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I work on the site @sashman13 was talking about. We were able to apply the code from &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39358" title="#39358: defect (bug): Media search speed has been dramatically reduced (reopened)"&gt;#39358&lt;/a&gt; as a plugin to bring down those search times to something that's not killing us anymore.  That was great, so again thank you to @joemcgill for the help on that.
&lt;/p&gt;
&lt;p&gt;
thanks,
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39701 (Do not allow editing users from a different site in REST API) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39701#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39701#comment:29/1487969153036164</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40111" title="REST API: Do not allow access to users from a different site in ..."&gt;40111&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40106" title="REST API: Do not allow access to users from a different site in ..."&gt;[40106]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40111]: REST API: Do not allow access to users from a different site in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40111/1487969152101544</guid>
      <description>&lt;p&gt;
REST API: Do not allow access to users from a different site in multisite.
&lt;/p&gt;
&lt;p&gt;
It has been unintendedly possible to both view and edit users from a different site than the current site in multisite environments. Moreover, when passing roles to a user in an update request, that user would implicitly be added to the current site.
&lt;/p&gt;
&lt;p&gt;
This changeset removes the incorrect behavior for now in order to be able to provide a proper REST API workflow for managing multisite users in the near future. Related unit tests have been adjusted as well.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0, jeremyfelt, johnjamesjacoby.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40106" title="REST API: Do not allow access to users from a different site in ..."&gt;[40106]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39701" title="#39701: defect (bug): Do not allow editing users from a different site in REST API (closed: fixed)"&gt;#39701&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:15/1487969141962231</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:121/1487969057165585</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:120" title="Comment 120"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if there's an opportunity to offer to rename a file based on what &lt;code&gt;finfo&lt;/code&gt; reports? Should be non-blocking (i.e. just fallback to leaving the file named as was), but if WordPress has an entry for both the file extension-derived type and the &lt;code&gt;$real_mime&lt;/code&gt; and they're different, it could do an extension swap (like what happens for images now).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @blobfolio. I think this enhancement is worth considering, but I think that's out of scope for this current issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed, especially as we do not want to add further delay to this patch. Once we figure out &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39963" title="#39963: enhancement: MIME Alias Handling (reopened)"&gt;#39963&lt;/a&gt; we'll have an opportunity for more robust renaming anyhow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:42:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:14/1487968950130536</guid>
      <description>&lt;p&gt;
Reopen for 4.7.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:40:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:13/1487968846332415</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40110" title="TinyMCE: preserve empty image alt attributes.
Props afercia.
Fixes ..."&gt;40110&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: preserve empty image alt attributes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40110]: TinyMCE: preserve empty image alt attributes.  Props afercia. Fixes ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:40:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40110/1487968845862583</guid>
      <description>&lt;p&gt;
TinyMCE: preserve empty image alt attributes.
&lt;/p&gt;
&lt;p&gt;
Props afercia.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39912" title="#39912: defect (bug): Image empty alt attributes get stripped out when editing the image ... (closed: fixed)"&gt;#39912&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:120/1487968656890471</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if there's an opportunity to offer to rename a file based on what &lt;code&gt;finfo&lt;/code&gt; reports? Should be non-blocking (i.e. just fallback to leaving the file named as was), but if WordPress has an entry for both the file extension-derived type and the &lt;code&gt;$real_mime&lt;/code&gt; and they're different, it could do an extension swap (like what happens for images now).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @blobfolio. I think this enhancement is worth considering, but I think that's out of scope for this current issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:119/1487968564334582</guid>
      <description>&lt;p&gt;
Thanks @iandunn, I had missed @goldsounds' comment.
&lt;/p&gt;
&lt;p&gt;
The main issue with your new exmaple is that the extra mime type being added via the filter does not match the mime type that is being picked up by finfo. As you pointed out, if &lt;code&gt;application/xml&lt;/code&gt; was already whitelisted by &lt;code&gt;get_allowed_mime_types()&lt;/code&gt; then the test would not fail. Since we can't arbitrarily trust files with 'application' mime types for security reasons, I think this would be up to a developer to work around by making sure the mime type they were adding through the &lt;code&gt;upload_mimes&lt;/code&gt; filter matched with the verification step in &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt; or by filtering the output of &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt; itself.
&lt;/p&gt;
&lt;p&gt;
In the future, we can look into adding more robust mime-type checking (see &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39963" title="#39963: enhancement: MIME Alias Handling (reopened)"&gt;#39963&lt;/a&gt;) which could help us whitelist multiple subtypes for a given file extension. In the mean time, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; restores functionality lost in 4.7.1 for most cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) reopened</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:15/1487968324466815</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:31:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:17/1487968264552575</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40074" title="REST API: JavaScript client - improve route discovery for custom ..."&gt;[40074]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;[40109]&lt;/a&gt; need backport to the 4.7 branch for 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) closed</title>
      
        <dc:creator>theMikeD</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:14/1487968258812822</guid>
      <description>invalid: &lt;p&gt;
IMHO this is a not a defect and should not be classified as a bug. Further, since this is working as designed, it's not even a valid request and should closed as invalid.
&lt;/p&gt;
&lt;p&gt;
ETA: Oops, did not mean to set those, i was using the dropdown to see what the correct terms are. I'll change it back.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:26:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:28/1487967982128371</guid>
      <description>&lt;p&gt;
Per Slack discussion above, it looks like this is ready to go for 4.7.3, but the issue in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39516#comment:24" title="Comment 24"&gt;comment:24&lt;/a&gt; needs a separate ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:8/1487967766959648</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think the approach looks good, but there are a few more tests that could be added here and I want to look at it more closely.  I'll try to land this today for 4.7.3.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:35/1487967680783912</guid>
      <description>&lt;p&gt;
Hi all, please test &lt;a href="https://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff"&gt;39550.4.diff&lt;/a&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;, as it should address this issue as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:21:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:17/1487967663621531</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the reminder, @Drivingralle.  I had forgotten about this ticket.  I'll try to land it for 4.7.3 today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:15:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:34/1487967301314800</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per above Slack discussion, handing off to @joemcgill to resolve at the same time as the closely related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:15/1487967159732054</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Per above Slack discussion, handing off to @joemcgill to coordinate sign-off/commit with @mikeschroder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:10/1487967061841772</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Handing this off to @SergeyBiryukov for &lt;code&gt;commit&lt;/code&gt; per above Slack discussion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39881 (`WP_REST_Posts_Controller::check_read_permission()` should check if ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39881#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39881#comment:3/1487966929410275</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Punting, 4.7.3 is upon us.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39576 (Admin - Tag autocomplete not work - WP &gt;= 4.7) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39576#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39576#comment:10/1487966877111833</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cleaning up the 4.7.3 milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39445 (Add class_exists() check before defining the PasswordHash class) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:07:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39445#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39445#comment:10/1487966821179080</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like there is mostly a consensus here to fix this by reverting &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38371" title="Load: load `class-phpass.php` (`PasswordHash` class) early in ..."&gt;[38371]&lt;/a&gt;.  If someone wants to handle this for 4.7.3, ideally today, feel free to move back into the 4.7.3 milestone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:27/1487966607557760</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Remember we all want the same thing here:  fast and stable software to run our websites.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The change you've proposed will not be merged as-is, without a reproducible test case or understanding the circumstances under which it can be triggered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The reason for this is to ensure that we don't break millions of people's sites by shipping a change that's not ready.
&lt;/p&gt;
&lt;p&gt;
Bumping to Future Release, that could be changed again if there is some further movement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 24 Feb 2017 20:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:7/1487966557789633</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:13/1487966325266798</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Bump.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39006 (REST API: Language setting should not be present when no languages are ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:57:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39006#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39006#comment:15/1487966259271837</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39006#comment:12" title="Comment 12"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
this is a bit of a mess really.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Punting to 4.7.4. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39753 (wp_mail() under PHP 7 hosted on Windows creates malformed email messages) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39753#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39753#comment:10/1487966095224516</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm going to punt this to 4.7.4 given that it doesn't have a patch yet, and may not be something we want to work around per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39753#comment:7" title="Comment 7"&gt;comment:7&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) created</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963/1487965632201231</guid>
      <description>&lt;p&gt;
WordPress currently only supports a single MIME type for a given extension. This is good enough in many cases, but begins to cause problems like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39550" title="#39550: defect (bug): Some Non-image files fail to upload after 4.7.1 (closed: fixed)"&gt;#39550&lt;/a&gt; when a library references an alternative MIME type (like audio/mpeg vs audio/mp3).
&lt;/p&gt;
&lt;p&gt;
We probably don't want to introduce changes to the basic MIME functions as that could have crazy-far-reaching consequences, but we could add a &lt;code&gt;wp_check_mime_alias($filename, $mime, $allowed_mimes)&lt;/code&gt; function, and query it in places where validation-by-MIME is happening.
&lt;/p&gt;
&lt;p&gt;
This would require a comprehensive collection of MIMEs, past, present, vernacular, etc. I am actually already maintaining such a database for another PHP library that combines results from Nginx, Apache, freedesktop.org, and IANA. So let's start from the assumption that the necessary data already exists for retrieving all possible MIME types for a given extension.
&lt;/p&gt;
&lt;p&gt;
I can whip up a patch with the added functionality, but wanted to first get some feedback on where/how the data should be incorporated (it is a rather big list, a PHP array would go on for miles.. I'm keeping it in a JSON file currently), and what existing areas might need to plug into that.
&lt;/p&gt;
&lt;p&gt;
@joemcgill, do you have any initial thoughts?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:16/1487965613175064</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487965610010374"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39947 (REST API: Sticky post query returns unsticky posts when no posts are sticky) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39947#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39947#comment:6/1487965613044058</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487965610010374"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39739 (Select All Checkbox Not Working) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39739#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39739#comment:9/1487965506628413</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487965503010370"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39881 (`WP_REST_Posts_Controller::check_read_permission()` should check if ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39881#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39881#comment:2/1487964978847759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964976010358"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:35:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:14/1487964905939797</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964900010355"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39576 (Admin - Tag autocomplete not work - WP &gt;= 4.7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39576#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39576#comment:9/1487964756723073</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964754010349"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39497 (Can't log out completely without closing my browser) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39497#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39497#comment:8/1487964676470252</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39497 (Can't log out completely without closing my browser) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39497#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39497#comment:7/1487964524262422</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964521010342"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39445 (Add class_exists() check before defining the PasswordHash class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39445#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39445#comment:9/1487964442729322</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964439010337"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39576 (Admin - Tag autocomplete not work - WP &gt;= 4.7) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39576#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39576#comment:8/1487964442422951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
This sounds like a theme-specific issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Plus, hard to test this with commercial themes. Until we're certain that a change in WordPress broke lots of themes and we can reproduce that easily, I'm suggesting to close this one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39338 (class-wp-hook.php - apply_filters() infinite loop) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39338#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39338#comment:26/1487964314340161</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964311010329"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39038 (Add support for non-split shared terms to singular term capabilities) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39038#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39038#comment:12/1487964195565032</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964192010326"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39006 (REST API: Language setting should not be present when no languages are ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39006#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39006#comment:14/1487964112198350</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487964109010324"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39552 (SVG upload support broken in 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39552#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39552#comment:33/1487963767093254</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963763010303"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:16:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:118/1487963766957827</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963763010303"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:27/1487963547257210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963544010290"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:35/1487963287523400</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963284010268"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:12/1487963210059624</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963206010263"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39753 (wp_mail() under PHP 7 hosted on Windows creates malformed email messages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 19:03:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39753#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39753#comment:9/1487963023183368</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1487963020010253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:117/1487961702232956</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #wptv by iandunn. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/wptv/p1487961699002471"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:39:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:16/1487961580183452</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40109" title="REST API: JS client - QUnit tests for custom namespace route ..."&gt;40109&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: JS client - QUnit tests for custom namespace route discovery.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests for the parsing of custom namespace routes. Add a custom schema fixture based on the &lt;code&gt;wp-js-widgets&lt;/code&gt; plugin. Test that the client can parse the widget namespace in the schema and correctly construct the expected group of models and collections. Also includes a small unrelated QUnit fix to ensure nav-menu test passes when it is loaded without its tests executing as well as a small jshint fix, adding a missing semicolon since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40107" title="Themes: enable browser history support in add new theme screen.
 ..."&gt;[40107]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40109]: REST API: JS client - QUnit tests for custom namespace route ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40109/1487961579681059</guid>
      <description>&lt;p&gt;
REST API: JS client - QUnit tests for custom namespace route discovery.
&lt;/p&gt;
&lt;p&gt;
Add QUnit tests for the parsing of custom namespace routes. Add a custom schema fixture based on the &lt;code&gt;wp-js-widgets&lt;/code&gt; plugin. Test that the client can parse the widget namespace in the schema and correctly construct the expected group of models and collections. Also includes a small unrelated QUnit fix to ensure nav-menu test passes when it is loaded without its tests executing as well as a small jshint fix, adding a missing semicolon since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40107" title="Themes: enable browser history support in add new theme screen.
 ..."&gt;[40107]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39561" title="#39561: defect (bug): REST API JavaScript client: Correct name route discovery for custom ... (closed: fixed)"&gt;#39561&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:28:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:116/1487960893709882</guid>
      <description>&lt;p&gt;
&lt;code&gt;39550.5.diff&lt;/code&gt; and &lt;code&gt;39550-uploads.2.zip​&lt;/code&gt; add a unit test for &lt;code&gt;application/&lt;/code&gt; mimes with sub-types, like the case that @goldsounds mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:95" title="Comment 95"&gt;comment:95&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The test currently fails, because &lt;code&gt;$real_mime&lt;/code&gt; is &lt;code&gt;application/xml&lt;/code&gt;, and only &lt;code&gt;application/ttml+xml&lt;/code&gt; was allowed via &lt;code&gt;upload_mimes&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39232 (REST API: Can't set existing post format if theme does not support it (2)) updated</title>
      
        <dc:creator>Drivingralle</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39232#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39232#comment:15/1487960728860226</guid>
      <description>&lt;p&gt;
Does it make sense to include this patch into 4.7.3?
&lt;/p&gt;
&lt;p&gt;
This way currently beeing developed API-clients don't need to implement soon superfluous checks. Other API misbehavior are also changed in that minor release as far as I understood.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39550-uploads.2.zip attached to Ticket #39550</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.2.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.2.zip/1487960726205439</guid>
      <description>&lt;p&gt;
Adds test file for 39550.5.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39550.5.diff attached to Ticket #39550</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:25:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550.5.diff/1487960700241653</guid>
      <description>&lt;p&gt;
Adds unit test for &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:95" title="Comment 95"&gt;comment:95&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:20:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:4/1487960457520530</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ideally the &lt;code&gt;date&lt;/code&gt; / &lt;code&gt;post_date&lt;/code&gt; field wouldn't even exist, and we would store all dates as UTC, and also store timezone offsets where needed.  That ship sailed long ago.
&lt;/p&gt;
&lt;p&gt;
In most of WordPress, including wp-admin, &lt;code&gt;post_date&lt;/code&gt; is the default field, and &lt;code&gt;post_date_gmt&lt;/code&gt; is basically an afterthought.  From this perspective, the existing behavior of preferring the &lt;code&gt;date&lt;/code&gt; value makes more sense than preferring the &lt;code&gt;date_gmt&lt;/code&gt; value.
&lt;/p&gt;
&lt;p&gt;
This isn't likely to be a big deal either way, just something we could definitely handle better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) reopened</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:22/1487960098906960</guid>
      <description>&lt;p&gt;
Reopening for backport to 4.7 branch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38883 (Shim post_date_gmt for drafts / empty dates in the REST API) closed</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38883#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38883#comment:21/1487960061721515</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40108" title="REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ..."&gt;40108&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved.  This makes it much more difficult for API clients to know the correct date of a draft post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joehoyle.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40108]: REST API: Shim `post_date_gmt` for drafts / empty dates in the REST ...</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40108/1487960061218024</guid>
      <description>&lt;p&gt;
REST API: Shim &lt;code&gt;post_date_gmt&lt;/code&gt; for drafts / empty dates in the REST API.
&lt;/p&gt;
&lt;p&gt;
Internally, WordPress uses a special &lt;code&gt;post_date_gmt&lt;/code&gt; value of &lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to indicate that a draft's date is "floating" and should be updated whenever the post is saved.  This makes it much more difficult for API clients to know the correct date of a draft post.
&lt;/p&gt;
&lt;p&gt;
This commit provides a best guess at a &lt;code&gt;date_gmt&lt;/code&gt; value for draft posts in this situation using the &lt;code&gt;date&lt;/code&gt; field and the site's current timezone offset.
&lt;/p&gt;
&lt;p&gt;
Props joehoyle.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38883" title="#38883: defect (bug): Shim post_date_gmt for drafts / empty dates in the REST API (closed: fixed)"&gt;#38883&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39351 (Passing 'none' to menu_icon of custom post type displays broken image ...) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39351#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39351#comment:2/1487959951557932</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Still no answers?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 18:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:15/1487959313795271</guid>
      <description>&lt;p&gt;
Looks good @jnylen0 thanks, I will get this committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:14/1487958909583767</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by jnylen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487958907004976"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36613 (Browser back button doesn't work in Theme Browser) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36613#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36613#comment:7/1487958450978501</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40107" title="Themes: enable browser history support in add new theme screen.
 ..."&gt;40107&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: enable browser history support in add new theme screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Enable history support for the new theme screen, including navigating theme details and closing the details modal. Theme selection is now also bookmark-able, so linking to a URL like &lt;code&gt;/wp-admin/theme-install.php?theme=twentyseventeen&lt;/code&gt; correctly opens the theme preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dd32.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36613" title="#36613: defect (bug): Browser back button doesn't work in Theme Browser (closed: fixed)"&gt;#36613&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40107]: Themes: enable browser history support in add new theme screen.  ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40107/1487958450489345</guid>
      <description>&lt;p&gt;
Themes: enable browser history support in add new theme screen.
&lt;/p&gt;
&lt;p&gt;
Enable history support for the new theme screen, including navigating theme details and closing the details modal. Theme selection is now also bookmark-able, so linking to a URL like &lt;code&gt;/wp-admin/theme-install.php?theme=twentyseventeen&lt;/code&gt; correctly opens the theme preview.
&lt;/p&gt;
&lt;p&gt;
Props dd32.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36613" title="#36613: defect (bug): Browser back button doesn't work in Theme Browser (closed: fixed)"&gt;#36613&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39941 (Allow using Content-Security-Policy without unsafe-inline) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39941#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39941#comment:4/1487958156338920</guid>
      <description>&lt;p&gt;
Sorry, I should have explained better.
&lt;/p&gt;
&lt;p&gt;
The CSP specification ( &lt;a class="ext-link" href="https://www.w3.org/TR/CSP2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/CSP2/&lt;/a&gt; ) has two ways of allowing inline JavaScript: hashes and nonces.
&lt;/p&gt;
&lt;p&gt;
I looked at hashes, but they would have required much larger changes to WordPress. And it would also require calculating multiple hashes on each page load which would have slowed the page down a small amount.
&lt;/p&gt;
&lt;p&gt;
But with nonces you add a header like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Content-Security-Policy: script-src 'nonce-123abc'
&lt;/pre&gt;&lt;p&gt;
And then whenever you use inline JavaScript, you add a &lt;code&gt;nonce&lt;/code&gt; attribute to the script element:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;script nonce="123abc"&amp;gt;
doSomething()
&amp;lt;/script&amp;gt;
&lt;/pre&gt;&lt;p&gt;
And when the browser encounters a script tag with the wrong nonce (or no nonce), it refuses to execute that JavaScript.
&lt;/p&gt;
&lt;p&gt;
These nonces function in pretty much the same way as WordPress's nonces: so long as the attacker doesn't know what they are, they can't execute JavaScript. So when a plugin author writes &lt;code&gt;&amp;lt;input value="&amp;lt;?php echo $_GET['x'] ?&amp;gt;"&amp;gt;&lt;/code&gt;, an attacker isn't able to inject their own JavaScript because they don't know what the nonce is.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this widely supported by browsers?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Chrome and Firefox support it. Edge 38 (the current version) doesn't support CSP nonces. But Edge 39 does.
&lt;/p&gt;
&lt;p&gt;
Here's the caniuse page: &lt;a class="ext-link" href="http://caniuse.com/#feat=contentsecuritypolicy2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://caniuse.com/#feat=contentsecuritypolicy2&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here's a very basic test page (if everything works you will see one alert box; if CSP isn't supported at all you will see two alert boxes; and if CSP is supported but nonces aren't, you won't see any alert boxes): &lt;a class="ext-link" href="https://cdn.rawgit.com/tomdxw/95a22a1be010b2d07152be6b3f635fa1/raw/039d6fe0876dfc0c689be0f5787c038d1f27f5d5/nonce-test.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cdn.rawgit.com/tomdxw/95a22a1be010b2d07152be6b3f635fa1/raw/039d6fe0876dfc0c689be0f5787c038d1f27f5d5/nonce-test.html&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can the same nonce be re-used for all script tags?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's correct, yes. In the proof-of-concept plugin it uses the same nonce for every script tag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:5/1487957556341556</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39953#comment:3" title="Comment 3"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After the explanation I'm still wary of the need for an flag for auto-updating (whatever its called) on the endpoint.  I believe we need to be careful about controlling behaviour of data properties based on some other flag in the package.  It's more predictable and sets expectations better I think if the behaviour of the endpoint is that whatever you have the date set at on that field during an update is what gets saved.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This bundling of multiple pieces of information/functionality into a single field is the way WP currently behaves, and it's broken.  It should have been a separate field from the start.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Practically that means that its up to the consumer to save the current &lt;code&gt;post_date_gmt&lt;/code&gt; value to the equivalent of "now" in the PUT call if they want that to be the publish date (when publishing) the post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This isn't going to work because it would break the default behavior where a post is dated when it is published.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The other concern with setting a flag for controlling this behaviour is whether this is something applicable only on the post endpoint, or if its something that would apply to any custom post type (pages? menus?) If its only on the "posts" endpoint, then that does changing the schema for a post_type request depending on what "type" it is matter?  If it's including it on every post_type response, is it a fair assumption that all post types will follow the same behaviour patterns as a post?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This applies equally to every post type which has a concept of a draft (not &lt;code&gt;attachment&lt;/code&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18408 (Can't wp_reset_postdata after custom WP_Query in an admin edit page) updated</title>
      
        <dc:creator>jpSimkins</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18408#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18408#comment:25/1487956703392908</guid>
      <description>&lt;p&gt;
To bypass this issue, do not use &lt;code&gt;the_post&lt;/code&gt; as this is the issue.
&lt;/p&gt;
&lt;p&gt;
I use this syntax and I have numerous metaboxes with no issue to the default post object nor the need to call &lt;code&gt;wp_reset_postdata();&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;\WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;have_posts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// nomal loop logic using $p as a normal WP_Post object
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It needs to be noted that you cannot use the loop methods like &lt;code&gt;get_the_title()&lt;/code&gt; but you can easily call &lt;code&gt;$p-&amp;gt;post_title&lt;/code&gt;. I do not believe the filters are applied to these so you may need to use a different object for the backend than the frontend since the issue is only on the backend of WP.
&lt;/p&gt;
&lt;p&gt;
Also, you could just use the same args with &lt;code&gt;get_posts();&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39954 (REST API: Improve date updates if both `date` and `date_gmt` are set) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39954#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39954#comment:3/1487956491143366</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487956488004971"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 17:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:4/1487956490657557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1487956488004971"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 24 Feb 2017 16:21:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:26/1487953268473806</guid>
      <description>&lt;p&gt;
To recap: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39516/39516.3.diff" title="Attachment '39516.3.diff' in Ticket #39516"&gt;39516.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39516/39516.3.diff" title="Download"&gt;​&lt;/a&gt; restores the errors displaying to what they looked like in 4.6. Wasn't able to track down the previous change from 4.5 to 4.6 though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 16:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:11/1487953003180268</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1487953001005460"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 16:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962#comment:3/1487952688563974</guid>
      <description>invalid: &lt;p&gt;
Hi @rasho188, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
&lt;p&gt;
Also, please don't ever post your login credentials online. Once you fix the error and the site is live again, you should change them immediately.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) updated</title>
      
        <dc:creator>danhgilmore</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962#comment:2/1487951374255662</guid>
      <description>&lt;p&gt;
You should remove your credentials from your ticket ASAP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962#comment:1/1487951255474155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by danhgilmore. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1487951253015394"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:115/1487951000581405</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:112" title="Comment 112"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; Updates the approach from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.3.diff" title="Attachment '39550.3.diff' in Ticket #39550"&gt;39550.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.3.diff" title="Download"&gt;​&lt;/a&gt; to revalidate any image files that fail to pass the image validation step in &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The &lt;code&gt;$real_mime&lt;/code&gt; reset you added to the image bit seems to do the trick!
&lt;/p&gt;
&lt;p&gt;
I wonder if there's an opportunity to offer to rename a file based on what &lt;code&gt;finfo&lt;/code&gt; reports? Should be non-blocking (i.e. just fallback to leaving the file named as was), but if WordPress has an entry for both the file extension-derived type and the &lt;code&gt;$real_mime&lt;/code&gt; and they're different, it could do an extension swap (like what happens for images now).
&lt;/p&gt;
&lt;p&gt;
For that check in particular, we'd want to ignore &lt;code&gt;application/octet-stream&lt;/code&gt; or any type beginning &lt;code&gt;text/&lt;/code&gt; (or else things would be incorrectly renamed all the time), but given two specific types, it could save some error log space down the road. Wouldn't work on all servers since type detection isn't consistent, but would help sometimes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Fri, 24 Feb 2017 15:20:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:114/1487949602619100</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:113" title="Comment 113"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I couldn't find "wp_check_filetype_and_ext" in this reference: &lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Filter_Reference&lt;/a&gt; but it seems to work anyhow.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I found that one in &lt;code&gt;wp-includes/functions.php&lt;/code&gt;. Haha.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
         * Filters the "real" file type of the given file.
         *
         * @since 3.0.0
         *
         * @param array  $wp_check_filetype_and_ext File data array containing 'ext', 'type', and
         *                                          'proper_filename' keys.
         * @param string $file                      Full path to the file.
         * @param string $filename                  The name of the file (may differ from $file due to
         *                                          $file being in a tmp directory).
         * @param array  $mimes                     Key is the file extension with value as the mime type.
         */&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This filter triggers after the main upload file checking, so with that in mind just be sure you are only overriding the yay/nay for font files. (It is easy to accidentally allow everything or deny everything... oops.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39962 (HTTP ERROR 500) created</title>
      
        <dc:creator>rasho188</dc:creator>

      <pubDate>Fri, 24 Feb 2017 14:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39962/1487948344597163</guid>
      <description>&lt;p&gt;
what happened with my website when I enter my website in the browser, then I am facing below error
&lt;/p&gt;
&lt;p&gt;
===================
The identifyskill.com page isn’t working
&lt;/p&gt;
&lt;p&gt;
identifyskill.com is currently unable to handle this request.
HTTP ERROR 500
==================
My website details is:
&lt;a class="ext-link" href="http://identifyskill.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://identifyskill.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
username: [edited]
Password: [edited]
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
&lt;p&gt;
Rashid
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>kontur</dc:creator>

      <pubDate>Fri, 24 Feb 2017 13:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:113/1487944665619117</guid>
      <description>&lt;p&gt;
Thanks a lot! I will refactor this into my plugin to work around the issue until a fix is in place.
&lt;/p&gt;
&lt;p&gt;
I couldn't find "wp_check_filetype_and_ext" in this reference: &lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Filter_Reference&lt;/a&gt; but it seems to work anyhow.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:110" title="Comment 110"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:108" title="Comment 108"&gt;kontur&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, I understand. At any rate, this bug pretty much renders a plugin of mine useless, since it is centred around uploading and displaying webfonts, all of which, I think, require that the accepted mime type gets augmented, and then successfully passes this check - which currently it doesn't, or seemingly only sporadic on some installations.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You could add a filter to your plugin to specifically bypass the issue only for font files, either re-implementing a looser &lt;code&gt;finfo&lt;/code&gt; check (but again for font files I don't expect that will work consistently), or just rebuilding the ext/type data by passing the original filename back through &lt;code&gt;wp_check_filetype&lt;/code&gt;. Take a look at this function for inspiration: &lt;a class="ext-link" href="https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Blobfolio/blob-common/blob/master/wp/functions-behavior.php#L31&lt;/a&gt;  Obviously all the class stuff is a bit out of scope for your needs, but if you remove 75% of it you should have what you need.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39955 (Media details: HTML character shown as code) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 24 Feb 2017 10:10:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39955#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39955#comment:1/1487931027929600</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed. Thanks for the report, @Irian.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>loadpath.1.php attached to Ticket #39961</title>
      
        <dc:creator>majick</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39961/loadpath.1.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39961/loadpath.1.php/1487928571281705</guid>
      <description>&lt;p&gt;
To check/create a load path definition file (mu-plugin)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39961 (Make SHORTINIT accessible to plugins and themes.) created</title>
      
        <dc:creator>majick</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39961</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39961/1487928438802604</guid>
      <description>&lt;p&gt;
As it stands there's no safe way for a WordPress plugin or theme (to be clear, specifically one permitted in the repository) to make use of the SHORTINIT load constant for a performance increase. This performance increase can be significant in terms of speed and memory for loading of dynamic content delivery (eg. of scripts or styles etc.) as well as other use cases (due to not having to load some core, but mostly not loading all the plugins and the theme too.)
&lt;/p&gt;
&lt;p&gt;
(Discovered in discourse with plugin review team for a plugin submission, with one known exception here: backup plugins &lt;em&gt;may&lt;/em&gt; be permitted in the plugin repository where they can find &lt;code&gt;wp-load.php&lt;/code&gt; (or &lt;code&gt;wp-settings.php&lt;/code&gt; or &lt;code&gt;wp-config.php&lt;/code&gt;) so as to be able to access database credentials for backup purposes.)
&lt;/p&gt;
&lt;p&gt;
This is of course because &lt;code&gt;SHORTINIT&lt;/code&gt; must be defined &lt;em&gt;before&lt;/em&gt; requiring &lt;code&gt;wp-load.php&lt;/code&gt;, and so a plugin/theme needs to know &lt;em&gt;where&lt;/em&gt; &lt;code&gt;wp-load.php&lt;/code&gt; is to be able to load it after defining &lt;code&gt;SHORTINIT&lt;/code&gt; to make use of it - BUT there is no current way for a standalone plugin/theme file to safely determining that file path when it is loading first - meaning directly and externally. (ie. &lt;code&gt;../../wp-load.php&lt;/code&gt; is definitely not good enough, and a recursive upwards directory searching function is not good enough either because even though &lt;code&gt;WP_CONTENT_DIR&lt;/code&gt; is defined from &lt;code&gt;ABSPATH&lt;/code&gt;, it does not account for a possible alternatives to &lt;code&gt;wp-content/plugins&lt;/code&gt; or &lt;code&gt;wp-content/themes&lt;/code&gt;.)
&lt;/p&gt;
&lt;p&gt;
My proposed solution is that the &lt;code&gt;ABSPATH&lt;/code&gt; path can be defined in a file that is written to the base plugins directory (that is, in &lt;code&gt;WP_PLUGIN_DIR&lt;/code&gt;) and the theme root directory (via &lt;code&gt;get_theme_root()&lt;/code&gt;) so that either a plugin or theme can simply include this load file from it's parent directory in order to get the already defined and accurate &lt;code&gt;ABSPATH&lt;/code&gt; for the purpose of loading &lt;code&gt;wp-load.php&lt;/code&gt; (ie. &lt;code&gt;ABSPATH.'/wp-load.php&lt;/code&gt;) - and then just proceed to do what it needs to do. &lt;strong&gt;ATTACHED&lt;/strong&gt; is the working code to do this with (place in an &lt;code&gt;mu-plugin&lt;/code&gt; file for testing):
&lt;/p&gt;
&lt;p&gt;
It may seem a little strange at first to write this to a PHP file with a just a single define in it, but on the other hand it really seems to me to just be the &lt;em&gt;simplest&lt;/em&gt; solution to this problem (which is more complex than it first seems.) I chose a PHP file because if it were a text file it would expose the absolute server path to external HTTP access unecessarily. And anything other than a &lt;em&gt;file&lt;/em&gt; available consistently one directory up would not provide an accessible solution (eg. the path cannot be retrieved from the database because of course, database access is not available before load.)
&lt;/p&gt;
&lt;p&gt;
As can be seen this initial proposal only checks for the direct file method of writing (to keep things simple to start with), but this could be expanded upon in future to better handle the other filesystem write methods by checking credentials etc. (Obviously we don't want to request credentials via a user form here, we just want to know if we have them so we can write the new file or not. The need for this could be bypassed by somewhat by including an empty file in the package, as updating a file can use relaxed file permissions while writing a new one cannot. But I digress on this point.)
&lt;/p&gt;
&lt;p&gt;
For usage, a plugin or theme would then need to check that the &lt;code&gt;wp-loadpath.php&lt;/code&gt; file exists, and to be safer that it's contents contain the &lt;code&gt;ABSPATH&lt;/code&gt;. Doing it this way also prevents having to check the filesystem write method (which can be handled in the previous step and is overkill for plugin/theme authors to check on here.) Again, this being for a performance improvement, plugins/themes should never rely on this method, but rather, they would be able to access this more-performant method if it available (again basically if the file path is writeable with correct permissions) and fallback to a standard less-performant method if it is not, which it would need to do for backwards compatbility anyway. For a simple example, before enqueueing a dynamic stylesheet:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_enqueue_scripts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wp_shortinit_load_example'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_shortinit_load_example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$loadpathfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/wp-loadpath.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$loadpathfile&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;strstr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$loadpathfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;wp_enqueue_style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'dynamic-style-example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;plugins_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'example.css.php'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;wp_enqueue_style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'static-style-example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;plugins_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'example.css'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then the dynamic &lt;code&gt;example.css.php&lt;/code&gt; could contain something as simple as:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'SHORTINIT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;__FILE__&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="s1"&gt;'/wp-loadpath.php'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/wp-load.php'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Content-type: text/css; charset: UTF-8'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;esc_attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'shortinit_example_css'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm not looking to debate here whether using &lt;code&gt;SHORTINIT&lt;/code&gt; for this example is a good idea or not, that is up to each use case. It has definite and well-tested advantages in terms of performance which is why it was created and now just needs to be exposed in a reliable way to truly be useable for that purpose. But if there are definite problems with this solution or a more elegant one (I have really scratched my brain to come up with this and don't see a more reliable and secure way, but who knows?) we can get into those. To my mind there are really only a few easy questions I can see that need to be answered before this could be implemented in core:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Is &lt;code&gt;wp-load.php&lt;/code&gt; &lt;em&gt;always&lt;/em&gt; found in the &lt;code&gt;ABSPATH&lt;/code&gt; directory? It would seem so, but just to check for certain, are there any known edge cases where this is actually not so?
&lt;/li&gt;&lt;li&gt;Does this create any possible security hole? It would seem not, as simply defining &lt;code&gt;ABSPATH&lt;/code&gt; in a PHP file does not actually do anything and is no more accessible than any other file and so poses no real security risk.
&lt;/li&gt;&lt;li&gt;Since the solution proposed is to work with both plugins and themes, are there any considerations missing here that would mean they would be better treated as separately? It seems simple enough that they  can be handled together at this stage.
&lt;/li&gt;&lt;li&gt;What is the best way of handling the other (non-direct) file write methods? A check for credentials and using the filesystem to write if they are already available seems to be all that is needed, beyond that seems unnecessary.
&lt;/li&gt;&lt;li&gt;Since the only change needed to implement this solution in core would be to add the mu-plugins code above to somewhere in a core file, where would the best place for that be? Perhaps just somewhere towards the end of &lt;code&gt;wp-settings.php&lt;/code&gt; but probably there is a more appropriate place.
&lt;/li&gt;&lt;li&gt;After writing and testing this I realized even having a new file may not even be necessary, since &lt;code&gt;index.php&lt;/code&gt; already exists (a definite advantage when handling the file writing) in both plugin and theme root directories and contains no actual PHP code, it could be put to this particular use instead of adding any new files (&lt;code&gt;wp-loadpath.php&lt;/code&gt;). Unless of course &lt;code&gt;index.php&lt;/code&gt; is ever used for any other purpose than blocking directory view access? It seems like it would be fine to use since it is a core file it shouldn't be changed by anyone else anyway.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>32417.17.diff attached to Ticket #32417</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32417/32417.17.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32417/32417.17.diff/1487928144119891</guid>
      <description>&lt;p&gt;
Explicitly refresh widget partial when attachment has any changes.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:124/1487928038089252</guid>
      <description>&lt;p&gt;
Added &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0c237e1a3be5bdd93b197ae5ea6740a6767e9a5e"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;another commit&lt;/a&gt; which handles the case that user doesn't click on the Add button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39886 (Invalid jQuery Live Event in handlers.min.js file.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 24 Feb 2017 09:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39886#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39886#comment:4/1487927718944113</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22975" title="#22975: enhancement: Remove deprecated jQuery methods from core to be safe for jQuery 1.9 (closed: fixed)"&gt;#22975&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>thinkholic</dc:creator>

      <pubDate>Fri, 24 Feb 2017 06:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:6/1487918230605695</guid>
      <description>&lt;p&gt;
@dd32
&lt;/p&gt;
&lt;p&gt;
Ah! If so, as you say, the problem may occur because of the &lt;code&gt;./&lt;/code&gt;. It's a kinda js way to indicate current directory and possibly it's not valid here. :/
&lt;/p&gt;
&lt;p&gt;
Big thanks! for helping for figure out what was the problem. :)
&lt;/p&gt;
&lt;p&gt;
Hoping to write a routing file and use it for start the server. Hopefully it'll fix all those kind of issues I guess.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Fri, 24 Feb 2017 06:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:7/1487917279425813</guid>
      <description>&lt;p&gt;
gmt_offset should return int value regardless setting of timezone_string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39854.3.patch attached to Ticket #39854</title>
      
        <dc:creator>sagarkbhatt</dc:creator>

      <pubDate>Fri, 24 Feb 2017 06:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39854/39854.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39854/39854.3.patch/1487917011251345</guid>
      <description>&lt;p&gt;
Updated patch according to discussion.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Feb 2017 05:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:5/1487915426787651</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
With the raw URL param: yes. But still same as with pretty url.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW; I've just tested this scenario and it works for me, although your example of suffixing &lt;code&gt;./&lt;/code&gt; seems wrong, if you want to pass the docroot in you need to use &lt;code&gt;-t&lt;/code&gt;, passing a path after as in your example appear to mean "Direct all HTTP requests to this file" - and &lt;code&gt;$ php -S 10.1.2.3:8888 wordpress-develop/src/index.php&lt;/code&gt; seems to work in that case.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ php -S 10.1.2.3:8888
PHP 7.1.1 Development Server started at Fri Feb 24 16:44:11 2017
Listening on http://10.1.2.3:8888
Document root is /www
Press Ctrl-C to quit.
[Fri Feb 24 16:44:16 2017] 10.1.2.3:57506 [200]: /info.php                        - Just checking $_SERVER vars
[Fri Feb 24 16:44:43 2017] 10.1.2.3:57522 [301]: /wordpress-develop/src/          - It's normally hosted on port 80, so Canonical kicked in and redirected the homepage here
[Fri Feb 24 16:45:04 2017] 10.1.2.3:57554 [200]: /wordpress-develop/src/wp-json/  - The JSON index came up as expected.
[Fri Feb 24 16:45:04 2017] 10.1.2.3:57555 [200]: /favicon.ico
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39875 (PDF previews overwrite existing images with the same name.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Feb 2017 05:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39875#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39875#comment:13/1487914852386109</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still see no reason for using a random string.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't see a need for it either, lets just use &lt;code&gt;wp_unique_filename()&lt;/code&gt; here, in most cases it'll not conflict with anything and be used straight up - but in the event another plugin has created the file, or the user uploaded a conflicting name, it'll cause it to not overwrite something that exists already. &lt;code&gt;-pdf2.jpg&lt;/code&gt; would work fine - afterall the filename will be stored in the DB, no code in core is ever going to base decisions off the filesystem alone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39926 (wp_get_object_terms should return WP_Error on wrong fields argument or ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39926#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39926#comment:4/1487910611442845</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see the appeal of not duplicating lines of code, however mixing explicit valid field values with a default 'catch all' does not seem right to me. The 'default' in the switch is now explicitly used as a catch all, as you'd expect it to do. That's why I opted for adding a default to the switch instead of combining it. What do you think about this reasoning?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I still disagree that a duplicated block is the correct way there, perhaps a more elegant way would be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;switch( field ) {
   default:
       // default to 'all'
       field = 'all';
       // explicit fall through
  case 'all':
       // ....
}
&lt;/pre&gt;&lt;p&gt;
duplicating the branch doesn't help future maintainers who change the &lt;code&gt;all&lt;/code&gt; branch and miss the default - nor does it convey to the reader that it's actually the &lt;code&gt;all&lt;/code&gt; case that it's defaulting to.
Although I suggested that it should maybe update &lt;code&gt;$args['fields']&lt;/code&gt; I don't necessarily believe it should - in some cases it may be needed, I don't know if this is one of those places (I haven't looked close enough)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:112/1487909745592216</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff" title="Attachment '39550.4.diff' in Ticket #39550"&gt;39550.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.4.diff" title="Download"&gt;​&lt;/a&gt; Updates the approach from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550.3.diff" title="Attachment '39550.3.diff' in Ticket #39550"&gt;39550.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550.3.diff" title="Download"&gt;​&lt;/a&gt; to revalidate any image files that fail to pass the image validation step in &lt;code&gt;wp_check_filetype_and_ext()&lt;/code&gt;. I've updated and added the tests to account for a few cases where the &lt;code&gt;upload_mimes&lt;/code&gt; filter is in use. To run the tests, you'll need to add files in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.zip" title="Attachment '39550-uploads.zip' in Ticket #39550"&gt;39550-uploads.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39550/39550-uploads.zip" title="Download"&gt;​&lt;/a&gt; to &lt;code&gt;tests/phpunit/data/uploads&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39550-uploads.zip attached to Ticket #39550</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550-uploads.zip/1487909334138004</guid>
      <description>&lt;p&gt;
Test files
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39550.4.diff attached to Ticket #39550</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39550/39550.4.diff/1487909316160602</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39960 (Separate Supported Status for Trackbacks and Pingbacks) created</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 24 Feb 2017 04:01:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39960</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39960/1487908895270658</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31168" title="#31168: enhancement: Comments should be turned off on pages by default (closed: fixed)"&gt;#31168&lt;/a&gt;, get_default_comment_status was introduced, with the intent to set default pingback and comment status for new comments.
&lt;/p&gt;
&lt;p&gt;
With the current design, it isn't possible to address these items separately.
&lt;/p&gt;
&lt;p&gt;
get_default_comment_status treats the 'supports' =&amp;gt; 'trackbacks' statement as intent to open pings. While I see the rationale for why this was done, it is not consistent.
&lt;/p&gt;
&lt;p&gt;
Supporting trackbacks is not actually clear to someone calling it what it is supposed to do. According to the code, excluding allowing pings by default as amended in this function and a few other places, it adds the 'Send Trackbacks' metabox.
&lt;/p&gt;
&lt;p&gt;
What I am proposing here is therefore a change that might confuse backward compatibility. I can't see another easy way to separate these two.
&lt;/p&gt;
&lt;p&gt;
Let's say, for the sake of fairness as a default, that if you want to be able to send pings or trackbacks, you should also support receiving them.
&lt;/p&gt;
&lt;p&gt;
So, my proposal would be to separate post_type_support into two features:
&lt;/p&gt;
&lt;p&gt;
'trackbacks' - which will add the trackback metabox and govern the default desire to accept trackbacks for that post type
&lt;/p&gt;
&lt;p&gt;
'pingbacks'  - which will set whether the default for pingbacks for a given post type is set to send/receive by default.
&lt;/p&gt;
&lt;p&gt;
That handles the intent of the post type default. Then we move to the individual post issue.
&lt;/p&gt;
&lt;p&gt;
So, the logic I'm proposing is that if pings are open for the post(ping_status set to open), it means it will support whatever protocols the post type supports. While it would be nice to get more granular, it would create too much of a strain on backward compatibility.
&lt;/p&gt;
&lt;p&gt;
Conversely, suggesting that someone might want to turn pingbacks or trackbacks on or off for an entire post type makes sense. I can't see a scenario where someone would want support on or off for a specific post. If they decide to turn pings off, they are turning off whatever type of linkback the post chooses to support.
&lt;/p&gt;
&lt;p&gt;
A plugin or theme could change this behavior using the get_default_comment_status filter that already exists.
&lt;/p&gt;
&lt;p&gt;
Relate: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38207" title="#38207: enhancement: Disable Trackbacks by Default Keep Pingbacks On (new)"&gt;#38207&lt;/a&gt; discusses the idea of disabling trackbacks by default, but retaining pingbacks for the foreseeable future. The first step is allowing for these sensible defaults by post type, and then making the decision about default support for the 'post' post type.
&lt;/p&gt;
&lt;p&gt;
I'd like to get some feedback on the proposed solution or alternatives.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>gonom9</dc:creator>

      <pubDate>Fri, 24 Feb 2017 02:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:123/1487903502405812</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32417#comment:122" title="Comment 122"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@gonom9 Is this the right approach? Is this not resulting in the title and caption being duplicated in the widget vs. what is stored in the attachment? To eliminate that duplication I reverted &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0bb0f579d1a5ec686624981b9a1fc9ce12307eea"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;that commit&lt;/a&gt; and added a &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/dd038c5238a2f4e358222a6ac9d8e2a360cde8b7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;new one&lt;/a&gt; which takes a different approach to explicitly refresh the widget partial in the preview whenever the form is re-rendered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, your approach is much better than mine. I just learned the API for refreshing partials. Thanks. :)
But the latest version was still ignoring the changes in the attachment so I made &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/0c25774199bb06988bdfba762fd58d9184b9d230"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;another commit&lt;/a&gt;. Also, I think &lt;code&gt;wp.customize.Widgets&lt;/code&gt; should be &lt;code&gt;wp.customize.previewer&lt;/code&gt; in &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/215/commits/dd038c5238a2f4e358222a6ac9d8e2a360cde8b7#diff-20f11d2e79e8e8e587fd0591b9e49365R169"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the previous commit&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39935 (rest-api not working on PHP Built-in server instance) closed</title>
      
        <dc:creator>thinkholic</dc:creator>

      <pubDate>Fri, 24 Feb 2017 01:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39935#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39935#comment:4/1487901589355425</guid>
      <description>worksforme: &lt;p&gt;
@MattyRob
&lt;/p&gt;
&lt;p&gt;
Yep. It'll definetly use wp-resr-api with this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Based on your last comment above - do you now have the REST-API links working? Can we close the ticket?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
With the raw URL param: yes. But still same as with pretty url. Anyway I'll close the ticket for now.
&lt;/p&gt;
&lt;p&gt;
Thanks! for the help.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item>
   </channel>
</rss>