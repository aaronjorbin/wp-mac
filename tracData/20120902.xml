<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #21760 (get_term_by() calls are not cached) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 23:56:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21760#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21760#comment:9/1346630163963486</guid>
      <description>&lt;p&gt;
Also, the patch seems to fail an existing test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;There was 1 failure:
1) Tests_Term::test_set_object_terms_by_name
Failed asserting that '1' matches expected 5.
/home/scribu/svn/wp-tests/tests/term.php:135
&lt;/pre&gt;&lt;p&gt;
Finally, we get some use out of these darn things. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21760 (get_term_by() calls are not cached) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 23:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21760#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21760#comment:8/1346629778522433</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This looks like an awesome patch, but it's tiring to read, due to all the whitespace fixes. I'll try again in the morning.
&lt;/p&gt;
&lt;p&gt;
In related news, the test suite doesn't seem to have a single call to &lt;code&gt;get_term_by( 'slug', ... );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21760 (get_term_by() calls are not cached) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 02 Sep 2012 23:16:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21760#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21760#comment:7/1346627768090087</guid>
      <description>&lt;p&gt;
Attached a new patch:
&lt;/p&gt;
&lt;p&gt;
1) &lt;code&gt;get_term_by()&lt;/code&gt; calls are cached&lt;br /&gt;
2) &lt;code&gt;term_cache_group()&lt;/code&gt; abstracts cache bucket for terms&lt;br /&gt;
3) &lt;code&gt;update_term_cache()&lt;/code&gt; adds to cache of all 3 buckets&lt;br /&gt;
4) &lt;code&gt;delete_term_cache()&lt;/code&gt; deletes cache of all 3 buckets&lt;br /&gt;
5) &lt;code&gt;get_terms()&lt;/code&gt; calls &lt;code&gt;update_term_cache()&lt;/code&gt;, deprecates the buggy &lt;code&gt;list_terms_excusions&lt;/code&gt; in favor of &lt;code&gt;get_terms&lt;/code&gt; filter&lt;br /&gt;
6) Lots of cleanup and streamlining of &lt;code&gt;clean_term_cache()&lt;/code&gt; calls
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14333 (Better page ordering UI) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sun, 02 Sep 2012 23:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14333#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14333#comment:14/1346626862975402</guid>
      <description>&lt;p&gt;
There are definitely times that one might use the menu order, especially if it's not a menu that's the output :) Lists of child pages within content, utilizing the menu order to order alternate kinds of content (slides in a slider or some such), etc. There are some plugins that address it nicely in terms of drag-and-drop experience, such as &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/simple-page-ordering/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/simple-page-ordering/&lt;/a&gt;, but even then we'd have to think of what the no-JS/accessible alternative interaction would be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17141 (In WP Admin -&gt; Posts, sorting the list by Author actually sorts by ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 23:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17141#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17141#comment:8/1346626853363583</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>17141.diff attached to Ticket #17141</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 23:00:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17141/17141.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17141/17141.diff/1346626826094084</guid>
      <description>&lt;p&gt;
make 'author' column non-sortable
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>21106.3.patch attached to Ticket #21106</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21106/21106.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21106/21106.3.patch/1346626607334898</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21106.2.patch attached to Ticket #21106</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21106/21106.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21106/21106.2.patch/1346626601742351</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:13/1346626373316200</guid>
      <description>&lt;p&gt;
Just going to further emphasize that this needs &lt;strong&gt;copious amounts of unit tests&lt;/strong&gt;. Every single function that is affected, for the complete testing strategy outlined, needs a whole group of tests. This can't go near core without tests, and it is going to be difficult to even understand many of the issues presented here without tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:12/1346626244516617</guid>
      <description>&lt;p&gt;
I don't know how helpful it is to focus on particular solutions — whether its extra functions or parameters doesn't matter much. What matters most is plotting a broad course to saner ground. Very similarly related is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18322" title="#18322: defect (bug): The Road to Magic Quotes Sanity (new)"&gt;#18322&lt;/a&gt;. Yes, this will be a major paradigm change, but it is absolutely necessary.
&lt;/p&gt;
&lt;p&gt;
We need to figure out what expected-slashed situations can safely be classified a "bug" (if core is doing it wrong, that's a good indication) versus a breaking-change. Possible example of the former: wp_insert_post(), given that unslashing can/should be moved to edit_post() and the like in admin/includes/post.php. Example of the latter: the metadata functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:11/1346626103631063</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21767#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
so it's not impossible to determine if a string has been run through &lt;code&gt;addslashes()&lt;/code&gt;, just hard to do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's pretty much impossible. You can definitively say that something is *not* slashed, but if it is slashed, you don't know whether it was manually slashed, or if the data itself was already slashed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14426 (unneeded "SELECT FOUND_ROWS()" when no posts are found) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:43:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14426#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14426#comment:12/1346625827140042</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
set_found_posts() should check if ( $this-&amp;gt;posts ), and otherwise set 0 for found_posts and max_num_pages. We shouldn't need to do &lt;code&gt;$this-&amp;gt;found_posts = $this-&amp;gt;max_num_pages = 0;&lt;/code&gt; manually.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:10/1346625768604087</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21767#comment:9" title="Comment 9"&gt;alexkingorg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't believe it's possible to test for this data...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it's hard to test. That's probably why there's no &lt;code&gt;maybe_strip_slashes()&lt;/code&gt; yet.
&lt;/p&gt;
&lt;p&gt;
The function &lt;code&gt;addslashes&lt;/code&gt; which is used to add the extra slashes only adds them at four places:
&lt;/p&gt;
&lt;p&gt;
"Returns a string with backslashes before characters that need to be quoted in database queries etc. These characters are single quote ('), double quote ("), backslash (\) and NUL (the NULL byte)."
&lt;/p&gt;
&lt;p&gt;
so it's not impossible to determine if a string has been run through &lt;code&gt;addslashes()&lt;/code&gt;, just hard to do.
&lt;/p&gt;
&lt;p&gt;
Not sure what's the best solution. Doubling all functions that "expect slashed" (there are a lot of them) seems too drastic. Trying to get a potential &lt;code&gt;is_slashed()&lt;/code&gt; to work right without being too slow (it would need to look at user cases) wouldn't be easy. Getting rid of &lt;code&gt;addslashes&lt;/code&gt; on the superglobals doesn't seem wise...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17141 (In WP Admin -&gt; Posts, sorting the list by Author actually sorts by ...) updated</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Sun, 02 Sep 2012 22:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17141#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17141#comment:7/1346625621659931</guid>
      <description>&lt;p&gt;
@scribu, I don't think that there is a way to order authors by author name without using a JOIN clause. A join would indeed affect the performance seriously having a large posts or users table but currently order_by takes place only for fields from the posts table.
&lt;/p&gt;
&lt;p&gt;
There could probably be an extra screen (implemented by a plugin) for listing this, but a join-driven one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>alexkingorg</dc:creator>

      <pubDate>Sun, 02 Sep 2012 21:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:9/1346620573788619</guid>
      <description>&lt;p&gt;
This is in no way limited to JSON data - any time you have strings with backslashes in them and pass them to the &lt;code&gt;wp_insert_*()&lt;/code&gt; methods, you lose data. This is why it's a bug.
&lt;/p&gt;
&lt;p&gt;
I don't believe it's possible to test for this data - strings with lots of backslashes are perfectly valid and are not an indicator of slashes having been added or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14333 (Better page ordering UI) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 02 Sep 2012 21:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14333#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14333#comment:13/1346619614717187</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14333#comment:12" title="Comment 12"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To a certain extent, yes, menus have made it much easier to reorder content, but only if you plan on using menus to list content.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you saying people use menu_order to display a full list of pages, with content and all?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, I was thinking more along the lines of &lt;code&gt;wp_list_pages()&lt;/code&gt;. Sometimes dealing with the extra markup and overhead of a menu is just overkill.
&lt;/p&gt;
&lt;p&gt;
EDIT: I used 'content' in general terms rather than specifying pages vs posts vs custom post types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Sun, 02 Sep 2012 20:28:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:8/1346617684556555</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21767#comment:7" title="Comment 7"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sounds like we would need &lt;code&gt;maybe_strip_slashes()&lt;/code&gt; and &lt;code&gt;is_slashed()&lt;/code&gt; similar to how &lt;code&gt;maybe_unserialize()&lt;/code&gt; and &lt;code&gt;is_serialized()&lt;/code&gt; work.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure if testing for slashed data is necessary -- sometimes data will need to be slashed &amp;amp; sometimes it won't. It would be up to a plugin or site author to decide that, which puts us right back to the current state of things where Alex calls it a bug.
&lt;/p&gt;
&lt;p&gt;
I think I would rather see an extra parameter in the changed methods. With a boolean that defaults to off we could current default actions as-is, but allow someone handling JSON to easily toggle slash removal when needed.
&lt;/p&gt;
&lt;p&gt;
This would resolve @scribu's very valid complaint, &amp;amp; provide a good modification path in the even the preferred default behavior needs to be the Alex' way instead of core's current.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21152.2.diff attached to Ticket #21152</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 20:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21152/21152.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21152/21152.2.diff/1346616910970501</guid>
      <description>&lt;p&gt;
Refreshed after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21688" title="Fix the adding of link categories through the &amp;#34;Add Link&amp;#34; screen. props ..."&gt;[21688]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14426 (unneeded "SELECT FOUND_ROWS()" when no posts are found) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 19:55:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14426#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14426#comment:11/1346615752063379</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14426#comment:10" title="Comment 10"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I no longer see the &lt;code&gt;SELECT FOUND_ROWS()&lt;/code&gt; happening after empty query results
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is partly fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19918" title="Split the main WP_Query posts query into two queries to avoid temp ..."&gt;[19918]&lt;/a&gt;, but only if &lt;code&gt;$split_the_query&lt;/code&gt; is true: &lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.4.1/wp-includes/query.php#L2630"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.4.1/wp-includes/query.php#L2630&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If &lt;code&gt;$split_the_query&lt;/code&gt; is false, &lt;code&gt;set_found_posts()&lt;/code&gt; still runs regardless of empty results.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14333 (Better page ordering UI) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 19:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14333#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14333#comment:12/1346614922006765</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
To a certain extent, yes, menus have made it much easier to reorder content, but only if you plan on using menus to list content.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you saying people use menu_order to display a full list of pages, with content and all?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And what about other custom post types that support &lt;code&gt;page-attributes&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What about them? The UI is the same, still sucky.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
By all means, remove the bits from the meta box on the edit screen and quick edit, but either replace the ui/ux in the list tables (drag n drop?) or leave it alone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with that. It's easy to fall into the trap of removing features in the name of simplicity, without providing alternatives. A current example from the Linux world: &lt;a class="ext-link" href="http://www.omgubuntu.co.uk/2012/08/ubuntu-12-10-will-ship-with-older-version-of-nautilus"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.omgubuntu.co.uk/2012/08/ubuntu-12-10-will-ship-with-older-version-of-nautilus&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14333 (Better page ordering UI) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 02 Sep 2012 19:29:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14333#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14333#comment:11/1346614148688221</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
-1 for this.
&lt;/p&gt;
&lt;p&gt;
To a certain extent, yes, menus have made it much easier to reorder content, but only if you plan on using menus to list content. And what about other custom post types that support &lt;code&gt;page-attributes&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
I'm fully aware we're not talking about removing the field, just the UI, but short of having to install a plugin to manually reorder, you're basically then stuck with whatever the default ordering is when invoking &lt;code&gt;menu_order&lt;/code&gt; (unless I'm missing something). That's lame.
&lt;/p&gt;
&lt;p&gt;
By all means, remove the bits from the meta box on the edit screen and quick edit, but either replace the ui/ux in the list tables (drag n drop?) or leave it alone.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21773 (Scheduled pages/posts should not appear in custom menus) updated</title>
      
        <dc:creator>Lorangeo</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:51:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21773#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21773#comment:3/1346611877120398</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The default menu (which is automatically generated) is OK. The problem is with custom menus.
&lt;/p&gt;
&lt;p&gt;
It should be possible to create a custom menu, add some scheduled pages to it, and expect that these scheduled pages will only appear in the front-end menu when their scheduled time is reached.
&lt;/p&gt;
&lt;p&gt;
Sorry if I'm not clear but my English is somewhat limited.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21770 (Multiple New Feature Pop-ups mess UI) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21770#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21770#comment:6/1346611006104843</guid>
      <description>&lt;p&gt;
This screenshot looks fine to me. If the user is bothered by plugins that show (too many) pointers, he/she can consider deleting the offending plugins.
&lt;/p&gt;
&lt;p&gt;
The only thing I don't like is that a plugin added pointer can be without a "Dismiss" link/button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21761 (Hide Appearance &gt; Widgets menu when no sidebars are registered) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:34:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21761#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21761#comment:7/1346610842752536</guid>
      <description>&lt;p&gt;
Sergey's works for me -- thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:7/1346610587042538</guid>
      <description>&lt;p&gt;
Sounds like we would need &lt;code&gt;maybe_strip_slashes()&lt;/code&gt; and &lt;code&gt;is_slashed()&lt;/code&gt; similar to how &lt;code&gt;maybe_unserialize()&lt;/code&gt; and &lt;code&gt;is_serialized()&lt;/code&gt; work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21770 (Multiple New Feature Pop-ups mess UI) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:26:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21770#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21770#comment:5/1346610390542354</guid>
      <description>&lt;p&gt;
Previous discussion: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18693#comment:32" title="Comment 32 for #18693: task (blessed): New feature pointers (closed: fixed)"&gt;32:ticket:18693&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20765 (get_attachment_fields_to_edit() returns term-&gt;name rather than ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20765#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20765#comment:4/1346610272181956</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version number indicates when the bug was initially introduced/reported.
&lt;/p&gt;
&lt;p&gt;
Reproduced with the steps from &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20765#comment:2" title="Comment 2"&gt;comment:2&lt;/a&gt;. The code was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6659" title="First pass at async upload, multi-upload, and gallery feature. ..."&gt;[6659]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Considering backwards compatibility, would it make more sense to pass the whole &lt;code&gt;$terms&lt;/code&gt; array in a separate key?
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21391" title="#21391: task (blessed): Move attachment editing (media.php) to use standard post type UI (closed: fixed)"&gt;#21391&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20765.patch attached to Ticket #20765</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20765/20765.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20765/20765.patch/1346610038543963</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21770 (Multiple New Feature Pop-ups mess UI) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 18:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21770#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21770#comment:4/1346609952446042</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this is a good signal to start thinking about offering a PHP API for this, possibly one that limits pop-ups to one per screen (as Yoast also suggested on twitter).
&lt;/p&gt;
&lt;p&gt;
If I had my druthers, I'd remove them completely from Core, but you can't always have your druthers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21324 (Visible Focus within Admin Screens could be much clearer.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 17:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21324#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21324#comment:24/1346606794833044</guid>
      <description>&lt;p&gt;
On Edit Post screen, when clicking the "Preview" button, "All Categories" tab, or "Choose from the most used tags", blue background appears (&lt;code&gt;blur()&lt;/code&gt; is not applied): &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21324/21324.no-blur.png" title="Attachment '21324.no-blur.png' in Ticket #21324"&gt;21324.no-blur.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21324/21324.no-blur.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21324.no-blur.png attached to Ticket #21324</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 17:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21324/21324.no-blur.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21324/21324.no-blur.png/1346606708642105</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18915 (Reverse priority colors in Trac) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Sun, 02 Sep 2012 17:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18915#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18915#comment:4/1346605506037010</guid>
      <description>&lt;p&gt;
Nacin did fix the order of the severity and priority values in order to fix this about a week ago.
&lt;/p&gt;
&lt;p&gt;
Also, you are correct about keyword colors on many reports. For example, the "&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;needs reporter feedback&lt;/a&gt;" report color is based on "Yellow: Last modified more than a Month ago, Red: Last Modified more than 6 Months ago".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21751 (Twenty Twelve: allow translators to disable Open Sans custom font) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:56:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21751#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21751#comment:15/1346604988862294</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21751#comment:10" title="Comment 10"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In IE and Opera, the characters are still visible, but some are too small and misaligned
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21775" title="#21775: defect (bug): Twenty Twelve: Full font stack is not applied in Opera and IE 8 when ... (closed: duplicate)"&gt;#21775&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21775.comment-form.png attached to Ticket #21775</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21775/21775.comment-form.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21775/21775.comment-form.png/1346604882876355</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21775.content.png attached to Ticket #21775</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21775/21775.content.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21775/21775.content.png/1346604878242015</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21775 (Twenty Twelve: Full font stack is not applied in Opera and IE 8 when ...) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21775</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21775/1346604846512147</guid>
      <description>&lt;p&gt;
Background: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21751" title="#21751: defect (bug): Twenty Twelve: allow translators to disable Open Sans custom font (closed: fixed)"&gt;#21751&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In Firefox, the computed font family is the same as declared in &lt;code&gt;style.css&lt;/code&gt; for &lt;code&gt;body.custom-font-enabled&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;font-family: "Open Sans",Helvetica,Arial,sans-serif;
&lt;/pre&gt;&lt;p&gt;
In Opera, the computed style is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;font: normal normal 400 14px/23.94px "Open Sans";
&lt;/pre&gt;&lt;p&gt;
This makes Cyrillic letters look not pretty (see the screenshots).
&lt;/p&gt;
&lt;p&gt;
Tested in Opera 12 on Windows XP, Windows Vista and Windows 7, IE 8 on Windows XP.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14333 (Better page ordering UI) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14333#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14333#comment:10/1346604705204947</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey, since we're hiding the UI for the Link Manager and for several superfluous options, how about this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14333.diff attached to Ticket #14333</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:49:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14333/14333.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14333/14333.diff/1346604582309706</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21774 (Page attributes structure) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21774#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21774#comment:2/1346603647278129</guid>
      <description>&lt;p&gt;
There is a proposal to hide the menu order: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14333" title="#14333: enhancement: Better page ordering UI (closed: duplicate)"&gt;#14333&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21665" title="#21665: feature request: Allow non-editable pages to be classified &amp;amp; organized as &amp;#34;System Pages&amp;#34; (closed: wontfix)"&gt;#21665&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21773 (Scheduled pages/posts should not appear in custom menus) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21773#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21773#comment:2/1346603621553258</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could not replicate the bug on trunk with twentyeleven.
&lt;/p&gt;
&lt;p&gt;
If no custom menu has been created, the default menu uses the function wp_page_menu, which via wp_list_pages get_pages queries only for pages that have a post status of 'publish', while any scheduled pages would have the post status of 'future.'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18428 (XML-RPC: wp.getUsers, wp.getUser, wp.getProfile, wp.editProfile) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 02 Sep 2012 16:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18428#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18428#comment:12/1346601636098748</guid>
      <description>&lt;p&gt;
I refreshed the patch and the unit tests to align with trunk and the refactored test suite.
&lt;/p&gt;
&lt;p&gt;
As discussed in IRC last week, I'd like to replace &lt;code&gt;user_contacts&lt;/code&gt; with &lt;code&gt;meta&lt;/code&gt;/&lt;code&gt;custom_fields&lt;/code&gt;, but ran into a number of questions regarding what APIs to use (&lt;code&gt;get_metadata&lt;/code&gt; doesn't return &lt;code&gt;meta_id&lt;/code&gt;s, so can't match API of &lt;code&gt;wp.getPost&lt;/code&gt;) and which caps to check (no equivalent to &lt;code&gt;edit_post_meta&lt;/code&gt; that I could see). I'll keep trying to flag down core devs in IRC to talk this through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18428.combo_unittests.2.patch attached to Ticket #18428</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 02 Sep 2012 15:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18428/18428.combo_unittests.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18428/18428.combo_unittests.2.patch/1346601472618247</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>18428.combo.2.patch attached to Ticket #18428</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 02 Sep 2012 15:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18428/18428.combo.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18428/18428.combo.2.patch/1346601462217943</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21774 (Page attributes structure) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:59:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21774#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21774#comment:1/1346597991772161</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21773 (Scheduled pages/posts should not appear in custom menus) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:59:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21773#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21773#comment:1/1346597975588369</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>WP-page-attributes.JPG attached to Ticket #21774</title>
      
        <dc:creator>Lorangeo</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21774/WP-page-attributes.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21774/WP-page-attributes.JPG/1346597954354613</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21774 (Page attributes structure) created</title>
      
        <dc:creator>Lorangeo</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21774</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21774/1346597937539267</guid>
      <description>&lt;p&gt;
Currently, the "Page Attributes" module is organized like this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parent
&lt;/li&gt;&lt;li&gt;Template
&lt;/li&gt;&lt;li&gt;Order
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Wouldn't it make more sense to put "Parent" and "Order" together, as both are closely similar and related to the site structure?
&lt;/p&gt;
&lt;p&gt;
We could have:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Template
&lt;/li&gt;&lt;li&gt;Parent
&lt;/li&gt;&lt;li&gt;Order
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
or maybe
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Parent
&lt;/li&gt;&lt;li&gt;Order
&lt;/li&gt;&lt;li&gt;Template
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21773 (Scheduled pages/posts should not appear in custom menus) created</title>
      
        <dc:creator>Lorangeo</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:30:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21773</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21773/1346596248157714</guid>
      <description>&lt;p&gt;
When I add a &lt;strong&gt;scheduled page/post&lt;/strong&gt; in a custom menu the page/post immediately appears in the front-end menu.
&lt;/p&gt;
&lt;p&gt;
I think these scheduled pages/posts should only be visible in the front-end navigation when their scheduled time is reached (as it is the case with automatic menus). Otherwise the "Schedule" functionality makes no sense with custom menus, especially for pages.
&lt;/p&gt;
&lt;p&gt;
Here is another forum post regarding this issue: &lt;a class="ext-link" href="http://wordpress.org/support/topic/custom-menu-support-for-scheduled-pagesposts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/custom-menu-support-for-scheduled-pagesposts&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18915 (Reverse priority colors in Trac) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18915#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18915#comment:3/1346596031157761</guid>
      <description>&lt;p&gt;
Appears to be fixed in &lt;a class="ext-link" href="http://core.trac.wordpress.org/report/6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/report/6&lt;/a&gt; and custom queries (&lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2012-08-20&amp;amp;sort=asc#m440717"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;related IRC chat&lt;/a&gt;), but seems inconsistent in the other reports.
&lt;/p&gt;
&lt;p&gt;
In some reports, the colors are based on priority. In others, as far as I can see, on the presence of "commit", "dev-feedback", "early", or "close" keywords. Perhaps that's by design?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11740 (Sorting tags and towns does not work well for utf-8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11740#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11740#comment:11/1346595929085519</guid>
      <description>&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15652" title="#15652: enhancement: Tags with Accents are Incorrectly Sorted in Cloud (closed: duplicate)"&gt;#15652&lt;/a&gt; as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15652 (Tags with Accents are Incorrectly Sorted in Cloud) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15652#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15652#comment:9/1346595920174286</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11740" title="#11740: defect (bug): Sorting tags and towns does not work well for utf-8 (new)"&gt;#11740&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21766 (modify body_class function to allow non-class items) updated</title>
      
        <dc:creator>norcross</dc:creator>

      <pubDate>Sun, 02 Sep 2012 14:21:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21766#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21766#comment:4/1346595713708555</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21766#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Similar discussion for admin body classes: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19460" title="#19460: enhancement: Move filter for 'admin_body_class' to make it accessible for scripts ... (closed: wontfix)"&gt;#19460&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
similar, but JS won't correctly solve the issue on the front-end. adding schema items (which is one example, but the best I can think of currently) via JS won't apply until after the page loads, which won't put it in the source code that search engines will crawl. if it isn't in the actual source, it may as well not exist in the eyes of a search engine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21772 (Front page always showing the same article) updated</title>
      
        <dc:creator>dulfu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21772#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21772#comment:2/1346592996438155</guid>
      <description>&lt;p&gt;
Thank you very much!
Cristi
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21772 (Front page always showing the same article) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21772#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21772#comment:1/1346592688873361</guid>
      <description>duplicate: &lt;p&gt;
Yes, that's how sticky posts work: &lt;a class="ext-link" href="http://codex.wordpress.org/Sticky_Posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Sticky_Posts&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you don't want the post to be sticky, uncheck the corresponding checkbox under Visibility settings in the Publish box on Edit Post screen.
&lt;/p&gt;
&lt;p&gt;
Closing as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21771" title="#21771: defect (bug): first page not showing last article (closed: invalid)"&gt;#21771&lt;/a&gt;. Please use the support forums for help requests: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21770 (Multiple New Feature Pop-ups mess UI) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21770#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21770#comment:3/1346592239947015</guid>
      <description>&lt;p&gt;
Actually, only the PHP API is meant for internal use.
&lt;/p&gt;
&lt;p&gt;
We don't stop plugins from enqueing the JS lib and using it, but if a lot of devs start abusing them, we will have to do something about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>summary_blog.jpg attached to Ticket #21772</title>
      
        <dc:creator>dulfu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21772/summary_blog.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21772/summary_blog.jpg/1346591995936905</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>front.jpg attached to Ticket #21772</title>
      
        <dc:creator>dulfu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21772/front.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21772/front.jpg/1346591866308652</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>admin.jpg attached to Ticket #21772</title>
      
        <dc:creator>dulfu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21772/admin.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21772/admin.jpg/1346591853290148</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21772 (Front page always showing the same article) created</title>
      
        <dc:creator>dulfu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21772</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21772/1346591832507503</guid>
      <description>&lt;p&gt;
i have a blog,  &lt;a class="ext-link" href="http://blog.farmaciadulfu.ro"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.farmaciadulfu.ro&lt;/a&gt; in settings/reading is selected "your latest post", but in the front page of blog, is showing always the same article, no matter if i publish another one or two new articles.
&lt;/p&gt;
&lt;p&gt;
Right now the front page is showing "Nasterea naturala declanseaza proteine care imbunatatesc dezvoltarea cerebrala" article, created in 23/08/2012, despite the fact that are another five newer articles, from  24/08/2012 to 31/08/2012 .
I attach the admin.jpg, showing the setting for "reader" and the front.jpg, the frontpage capture.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21770 (Multiple New Feature Pop-ups mess UI) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21770#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21770#comment:2/1346591653637366</guid>
      <description>&lt;p&gt;
Also, feature pointers are meant for, you know, pointing to features! not asking for permission to track data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21390 (Upload/Insert media revamp) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21390#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21390#comment:45/1346591294163232</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yay, I can see the new thickbox content now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19994 (Sticky admin menu) updated</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Sun, 02 Sep 2012 13:06:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19994#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19994#comment:23/1346591189975974</guid>
      <description>&lt;p&gt;
I went ahead and made a patch for testing purposes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19994.diff attached to Ticket #19994</title>
      
        <dc:creator>tillkruess</dc:creator>

      <pubDate>Sun, 02 Sep 2012 12:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19994/19994.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19994/19994.diff/1346590715184061</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21761.patch attached to Ticket #21761</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 12:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21761/21761.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21761/21761.patch/1346590187450150</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21771 (first page not showing last article) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 02 Sep 2012 12:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21771#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21771#comment:1/1346589209510286</guid>
      <description>invalid: &lt;p&gt;
Please try the support forums: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21771 (first page not showing last article) created</title>
      
        <dc:creator>dulfu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 12:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21771</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21771/1346588165260219</guid>
      <description>&lt;p&gt;
i have a blog, &lt;a class="ext-link" href="http://blog.farmaciadulfu.ro"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.farmaciadulfu.ro&lt;/a&gt;
in settings/reading is selected "your latest post", but in the front page of blog, is showing always the same article, no matter if i publish another one or two new articles.
I think it is a bug.
Best regards,
Cristi Dulfu
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 02 Sep 2012 11:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:6/1346586666236064</guid>
      <description>&lt;p&gt;
Er, yeah, scrap that last comment. I just got out of bed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 02 Sep 2012 11:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:5/1346586515265569</guid>
      <description>&lt;p&gt;
-1 on introducing a slew of new functions just to address this issue.
&lt;/p&gt;
&lt;p&gt;
The only time the current expected slashes behaviour is a problem is when the content you're passing to one of the affected functions contains a backslash which isn't escaping another backslash.
&lt;/p&gt;
&lt;p&gt;
Might it be possible to run a regex within in each of these functions which tests for double backslashes and then treats the content as slashed or not slashed accordingly? Effectively allowing the functions to accept both slashed and non-slashed content?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21770 (Multiple New Feature Pop-ups mess UI) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 02 Sep 2012 11:19:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21770#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21770#comment:1/1346584760131807</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Feature pointers are designed only for internal pointers yet. You should report this to the plugin author.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21770 (Multiple New Feature Pop-ups mess UI) created</title>
      
        <dc:creator>titanas</dc:creator>

      <pubDate>Sun, 02 Sep 2012 11:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21770/1346584191404315</guid>
      <description>&lt;p&gt;
WordPress admin and plugins &lt;a style="padding:0; border:none" href="http://dl.dropbox.com/u/184353/wordpress-admin-pop-ups.png"&gt;&lt;img src="http://dl.dropbox.com/u/184353/wordpress-admin-pop-ups.png" alt="http://dl.dropbox.com/u/184353/wordpress-admin-pop-ups.png" crossorigin="anonymous" title="http://dl.dropbox.com/u/184353/wordpress-admin-pop-ups.png" /&gt;&lt;/a&gt; New Feature Pop-up messages appear on the admin simultaneously, blocking each other messages and functionality. The UI gets seriously messed up.
&lt;/p&gt;
&lt;p&gt;
User attention focuses on how to get rid the overlaping pop-ups rather than reading the messages and understand and start using the new features.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21766 (modify body_class function to allow non-class items) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 10:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21766#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21766#comment:3/1346580936348904</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Similar discussion for admin body classes: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19460" title="#19460: enhancement: Move filter for 'admin_body_class' to make it accessible for scripts ... (closed: wontfix)"&gt;#19460&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 02 Sep 2012 10:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:4/1346580345429469</guid>
      <description>&lt;p&gt;
Introducing new, unslashed versions of functions, like wp_add_post_meta() and wp_update_post_meta(), doesn't seem like a scalable approach.
&lt;/p&gt;
&lt;p&gt;
Also, plugins that correctly call add_magic_quotes() or stripslashes() before using the API, such as wp_insert_term(), will get extra slashes in their content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21769 (Can we remove un-minified versions of all external libraries?) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 02 Sep 2012 09:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21769#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21769#comment:1/1346578404392481</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21736#comment:7" title="#21736: enhancement: Update to jQuery 1.8.1 and jQuery UI 1.9 RC (closed: fixed)"&gt;ticket:21736#comment:7&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21769 (Can we remove un-minified versions of all external libraries?) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 02 Sep 2012 09:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21769/1346578355629859</guid>
      <description>&lt;p&gt;
With &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21646" title="Set jQuery Color to be a dependency for wp-lists, rather than ..."&gt;[21646]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21648" title="Remove Jcrop non-minified files. see #20728.
"&gt;[21648]&lt;/a&gt; we had removed the un-minified versions of Jcrop and jQuery Color.
&lt;/p&gt;
&lt;p&gt;
A quick search through the plugin repo shows that there is only one plugin which includes the script directly:
&lt;/p&gt;
&lt;p&gt;
Pie Register: &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/browser/pie-register/trunk/pie-register.php#L1444"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/browser/pie-register/trunk/pie-register.php#L1444&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Should we be consistent and remove the un-minified versions of other external libraries too? These would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;colorpicker.js
&lt;/li&gt;&lt;li&gt;hoverIntent.js
&lt;/li&gt;&lt;li&gt;jquery.imgareaselect.js
&lt;/li&gt;&lt;li&gt;cropper.js (not used in core anymore and no minified version exists)
&lt;/li&gt;&lt;li&gt;json2.js
&lt;/li&gt;&lt;li&gt;tw-sack.js
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Sun, 02 Sep 2012 06:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:3/1346567571828592</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 =&amp;gt; I've had exactly the same problem with JSON data
&lt;/p&gt;
&lt;p&gt;
OTOH, this is a big change. Hate to drag this out to a later release, but I feel like this needs unit tests to prevent regression issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Sun, 02 Sep 2012 06:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:2/1346567333959884</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sun, 02 Sep 2012 06:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767#comment:1/1346566576092754</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21768 (Twenty Twelve: "glue" text in .entry-meta not marked up. No way to ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 02 Sep 2012 04:26:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21768#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21768#comment:1/1346560013476141</guid>
      <description>&lt;p&gt;
Closely related, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21759" title="#21759: enhancement: Twenty Twelve: Author name is always displayed even on a single author blog (closed: fixed)"&gt;#21759&lt;/a&gt;. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21759#comment:1" title="Comment 1 for #21759: enhancement: Twenty Twelve: Author name is always displayed even on a single author blog (closed: fixed)"&gt;comment:1:ticket:21759&lt;/a&gt; outlines the behavior in Twenty Eleven... its markup may be desirable here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21768 (Twenty Twelve: "glue" text in .entry-meta not marked up. No way to ...) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 02 Sep 2012 04:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21768/1346558407766605</guid>
      <description>&lt;p&gt;
The entry meta section of Twenty Twelve contains selectors around the clickable items, but not the "glue" text between them. For instance, I'm the only person who posts on my blog. I don't want " by Mark" at the bottom of each entry. But only the "Mark" part can be targeted by CSS. The "by" is just free-floating.
&lt;/p&gt;
&lt;p&gt;
Ideally I'd be able to display: none; on a selector and kill the whole " by Mark" portion.
&lt;/p&gt;
&lt;p&gt;
This might introduce i18n difficulties if we take it too far, but the author section seems like something that should be targetable, at least. More advanced cases can just define their own &lt;code&gt;twentytwelve_entry_meta()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21764 (Twenty Twelve: Blockquotes have no bottom margin — touch paragraphs ...) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 02 Sep 2012 03:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21764#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21764#comment:4/1346557264361956</guid>
      <description>&lt;p&gt;
Things are looking good with obenland's patch! Drew, Lance — thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20569 (We need addslashes_deep()) updated</title>
      
        <dc:creator>alexkingorg</dc:creator>

      <pubDate>Sun, 02 Sep 2012 03:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20569#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20569#comment:5/1346555755945095</guid>
      <description>&lt;p&gt;
&lt;code&gt;addslashes_deep()&lt;/code&gt; isn't necessarily needed, &lt;code&gt;add_magic_quotes()&lt;/code&gt; does what would be needed. Hopefully will be deemed unnecessary due to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21767" title="#21767: task (blessed): Remove stripslashes from API functions (closed: fixed)"&gt;#21767&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-slash-testing-steps.txt attached to Ticket #21767</title>
      
        <dc:creator>alexkingorg</dc:creator>

      <pubDate>Sun, 02 Sep 2012 03:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21767/wp-slash-testing-steps.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21767/wp-slash-testing-steps.txt/1346555742003730</guid>
      <description>&lt;p&gt;
Testing steps
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>slash-sanity-20120901.diff attached to Ticket #21767</title>
      
        <dc:creator>alexkingorg</dc:creator>

      <pubDate>Sun, 02 Sep 2012 03:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21767/slash-sanity-20120901.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21767/slash-sanity-20120901.diff/1346555728597962</guid>
      <description>&lt;p&gt;
The patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21767 (Remove stripslashes from API functions) created</title>
      
        <dc:creator>alexkingorg</dc:creator>

      <pubDate>Sun, 02 Sep 2012 03:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21767/1346555696967750</guid>
      <description>&lt;p&gt;
This ticket attempts to bring consistency to the way slashes are handled throughout the WordPress API functions that persist data.
&lt;/p&gt;
&lt;p&gt;
Currently these API functions expect slashed data and strip slashes within their code. Most of the code that invokes these functions understands this and generally passes slashed data to them (sometimes calling &lt;code&gt;add_magic_quotes()&lt;/code&gt; when necessary). Most of the code understands this, but not all. While auditing the code for the purposes of creating this patch I found a variety of places that do not slash data before passing it to the model functions as it currently should be done. Further, most developers do not think to manually add slashes to the data they programatically create and pass to these functions. Finally, it is not documented in the Codex that all data passed to these functions should be slashed before being passed in.
&lt;/p&gt;
&lt;p&gt;
As such, we can generally consider such behavior a bug. There are a few potential caveats, which I will cover shortly.
&lt;/p&gt;
&lt;p&gt;
Some of the functions that are being affected here:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp_insert_post()
&lt;/li&gt;&lt;li&gt;wp_update_post()
&lt;/li&gt;&lt;li&gt;add_post_meta() [and other meta functions that call add_metadata()]
&lt;/li&gt;&lt;li&gt;update_post_meta() [and other meta functions that call update_metadata()]
&lt;/li&gt;&lt;li&gt;wp_insert_attachment()
&lt;/li&gt;&lt;li&gt;wp_insert_term()
&lt;/li&gt;&lt;li&gt;wp_update_term()
&lt;/li&gt;&lt;li&gt;up_insert_user()
&lt;/li&gt;&lt;li&gt;wp_update_user()
&lt;/li&gt;&lt;li&gt;wp_new_comment()
&lt;/li&gt;&lt;li&gt;etc...
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Point being, while it's cool that this stuff can work:
&lt;/p&gt;
&lt;pre class="wiki"&gt;update_post_meta($post-&amp;gt;ID, 'key', $_POST['key']);
&lt;/pre&gt;&lt;p&gt;
It's not worth the cost of losing data when someone quite reasonably does something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$post_data = array(
	'post_status' =&amp;gt; 'publish',
	'post_type' =&amp;gt; 'post',
	'post_title' =&amp;gt; 'This is my title',
	'post_content' =&amp;gt; 'Crazy with the backslashes \\\\\\',
);
wp_insert_post($post_data);
&lt;/pre&gt;&lt;p&gt;
With the current code they would instead need to do this (to not lose data):
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_insert_post( add_magic_quotes($post_data) );
&lt;/pre&gt;&lt;p&gt;
Developers just don't think to do this, and they shouldn't have to.
&lt;/p&gt;
&lt;p&gt;
Here's the real life example that got me diving into this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$my_api_data = get_twitter_data();
update_post_meta($post-&amp;gt;ID, '_my_meta_key', $my_api_data);
&lt;/pre&gt;&lt;p&gt;
The data I was saving was in JSON format. I was putting it in like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"profile_image_url":"http:\/\/a0.twimg.com\/profile_images\/17084282\/alex_king_normal.jpg"}
&lt;/pre&gt;&lt;p&gt;
and getting it back liks this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"profile_image_url":"http://a0.twimg.com/profile_images/17084282/alex_king_normal.jpg"}
&lt;/pre&gt;&lt;p&gt;
As you can imagine, &lt;code&gt;json_decode()&lt;/code&gt; fails on this data.
&lt;/p&gt;
&lt;p&gt;
The functions that do have examples around of passing $_POST data directly to it are the post meta functions. I think changing them might break a fair bit of custom code that is passing in slashed data. I've created &lt;code&gt;wp_update_post_meta()&lt;/code&gt; and &lt;code&gt;wp_add_post_meta()&lt;/code&gt; accordingly that do not expect slashed data and replaced all instances of &lt;code&gt;update_post_meta()&lt;/code&gt; and &lt;code&gt;add_post_meta()&lt;/code&gt; with these calls accordingly.
&lt;/p&gt;
&lt;p&gt;
It's possible that we may need to do a similar treatment of the other meta functions (user, comment, etc.). I haven't put anything in place for this in the current patch.
&lt;/p&gt;
&lt;p&gt;
One additional change that was needed was to the default kses filters on a few properties. wp-includes/default-filters.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Strip, trim, kses, special chars for string saves
foreach ( array( 'pre_term_name', 'pre_comment_author_name', 'pre_link_name', 'pre_link_target', 'pre_link_rel', 'pre_user_display_name', 'pre_user_first_name', 'pre_user_last_name', 'pre_user_nickname' ) as $filter ) {
	add_filter( $filter, 'sanitize_text_field' );
	add_filter( $filter, 'wp_filter_kses' );
	add_filter( $filter, '_wp_specialchars', 30 );
}
&lt;/pre&gt;&lt;p&gt;
The &lt;code&gt;wp_filter_kses&lt;/code&gt; filter has been replaced with &lt;code&gt;wp_kses_data&lt;/code&gt; - thanks to @markjaquith for this tip here. I also applied this change to the filters initialized in wp-includes/kses.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function kses_init_filters() {
	// Normal filtering
	add_filter('title_save_pre', 'wp_kses_data');
	// Comment filtering
	if ( current_user_can( 'unfiltered_html' ) )
		add_filter( 'pre_comment_content', 'wp_kses_data' );
	else
		add_filter( 'pre_comment_content', 'wp_kses_data' );
	// Post filtering
	add_filter('content_save_pre', 'wp_kses_data');
	add_filter('excerpt_save_pre', 'wp_kses_data');
	add_filter('content_filtered_save_pre', 'wp_kses_data');
}
&lt;/pre&gt;&lt;p&gt;
As this has security implications, it could use extra review and testing.
&lt;/p&gt;
&lt;p&gt;
I changed &lt;code&gt;wp_rel_nofollow()&lt;/code&gt; to no longer strip slashes then add them again (and it was adding them wrong, via a call to &lt;code&gt;esc_sql()&lt;/code&gt;). Now you can pass unslashed strings to &lt;code&gt;wp_rel_nofollow()&lt;/code&gt; without losing data as well.
&lt;/p&gt;
&lt;p&gt;
I have not thoroughly tested XMLRPC calls yet, that is definitely a needed next step. The &lt;code&gt;escape()&lt;/code&gt; method within the XMLRPC code looks hinky to me, likely some changes (as well as thorough testing )are needed there.
&lt;/p&gt;
&lt;p&gt;
Obviously, this is a big change. I've done my best to test appropriately. I've tested via the admin UI and with simple code examples (attached) and so far things look good. Unit tests that exercise various slash conditions across all objects would be another smart addition to the mix.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18322" title="#18322: defect (bug): The Road to Magic Quotes Sanity (new)"&gt;#18322&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20569" title="#20569: defect (bug): We need addslashes_deep() (closed: wontfix)"&gt;#20569&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Whew! I think that's it for now - when you find something that breaks, please comment accordingly so it can be fixed/discussed. I expect there are likely a few edge cases I missed, but it's definitely time to get more eyeballs on this (as well as help testing).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21219 (get_post_type_archive_link in multisite context: struct issue) updated</title>
      
        <dc:creator>pathawks</dc:creator>

      <pubDate>Sat, 01 Sep 2012 23:35:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21219#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21219#comment:4/1346542538033512</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21219#comment:3" title="Comment 3"&gt;michelwppi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
today the workaround is to use the filter &lt;em&gt;post_type_link&lt;/em&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm having this same issue.
Can you explain a bit more about how to use &lt;em&gt;post_type_link&lt;/em&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21761 (Hide Appearance &gt; Widgets menu when no sidebars are registered) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Sat, 01 Sep 2012 21:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21761#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21761#comment:6/1346535826820821</guid>
      <description>&lt;p&gt;
I can confirm that as well.  I should've checked that one can actually use widgets with the patches.  This is because this the &lt;code&gt;wp_maybe_load_widgets&lt;/code&gt; function is hooked to &lt;code&gt;plugins_loaded&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'plugins_loaded', 'wp_maybe_load_widgets', 0 );
&lt;/pre&gt;&lt;p&gt;
That's too early for themes to control.  I'm not sure if there are any plugins that this will affect if changed to a different hook.
&lt;/p&gt;
&lt;p&gt;
Without testing, my guess is that it'd need to move to something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'widgets_init', 'wp_maybe_load_widgets', 99 );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21736 (Update to jQuery 1.8.1 and jQuery UI 1.9 RC) updated</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Sat, 01 Sep 2012 20:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21736#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21736#comment:7/1346532829173427</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21736#comment:4" title="Comment 4"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21658" title="jQuery 1.8.1-not-quite-final. fixes #21736.
"&gt;[21658]&lt;/a&gt; &lt;code&gt;jQuery.noConflict();&lt;/code&gt; was removed, intentionally? I added it back in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21736/21736.patch" title="Attachment '21736.patch' in Ticket #21736"&gt;21736.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21736/21736.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And shouldn't we rename the file to &lt;code&gt;jquery.min.js&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We haven't renamed &lt;code&gt;.js&lt;/code&gt; that include only the compressed source as some plugins and themes might directly load the &lt;code&gt;.js&lt;/code&gt; original in production. For the files we have renamed, it isn't really an issue: it falls back to the uncompressed source. But if we don't include the uncompressed source, there's no fallback (and for something like jQuery, that could have particularly bad results).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21736 (Update to jQuery 1.8.1 and jQuery UI 1.9 RC) closed</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Sat, 01 Sep 2012 20:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21736#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21736#comment:6/1346532427752582</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21695" title="jQuery 1.8.1 final. Also restores jQuery.noConflict(). props ocean90, ..."&gt;[21695]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
jQuery 1.8.1 final. Also restores jQuery.noConflict(). props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21736" title="#21736: enhancement: Update to jQuery 1.8.1 and jQuery UI 1.9 RC (closed: fixed)"&gt;#21736&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [21695]: jQuery 1.8.1 final. Also restores jQuery.noConflict(). props ocean90, ...</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Sat, 01 Sep 2012 20:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/21695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/21695/1346532427036003</guid>
      <description>&lt;p&gt;
jQuery 1.8.1 final. Also restores jQuery.noConflict(). props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21736" title="#21736: enhancement: Update to jQuery 1.8.1 and jQuery UI 1.9 RC (closed: fixed)"&gt;#21736&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20263 (Backticks in dbDelta cause warning and actually causes a query to ...) updated</title>
      
        <dc:creator>timfs</dc:creator>

      <pubDate>Sat, 01 Sep 2012 20:13:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20263#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20263#comment:5/1346530404597156</guid>
      <description>&lt;p&gt;
What's so complicated? Took me 10 seconds:
&lt;/p&gt;
&lt;pre class="wiki"&gt;preg_match("|`?" . preg_quote($tablefield-&amp;gt;Field, '|') . "`? ([^ ]*( unsigned)?)|i", $cfields[strtolower($tablefield-&amp;gt;Field)], $matches);
&lt;/pre&gt;&lt;p&gt;
This also fixes problems with tablenames that contain "special" characters, in MySQL for example &lt;strong&gt;foo.bar.[b-a-z]&lt;/strong&gt; is a perfectly valid tablename, besides using non-sanitized external input is always a very bad idea.
&lt;/p&gt;
&lt;p&gt;
However, this Regex is pretty fragile anyways, it can't handle multiple spaces, it can't handle tabs, it can't handle spaces between the parentheses enclosing the column length, etc... someone should really rewrite that whole stuff, it might explode by a slight sneeze.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21761 (Hide Appearance &gt; Widgets menu when no sidebars are registered) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Sat, 01 Sep 2012 19:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21761#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21761#comment:5/1346527811708446</guid>
      <description>&lt;p&gt;
Both patches have the same problem for me - they hide the Widgets menu whether the theme supports widgets or not. I'll poke at them to see if I can get the check working. Pure speculation: I wonder if this is related to the fact that it's being added directly at _admin_menu rather than later with admin_menu &amp;amp; the API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19796 (Multisite installs should work with WordPress in a subdirectory) updated</title>
      
        <dc:creator>developdaly</dc:creator>

      <pubDate>Sat, 01 Sep 2012 19:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19796#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19796#comment:60/1346526806184412</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21766 (modify body_class function to allow non-class items) updated</title>
      
        <dc:creator>norcross</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21766#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21766#comment:2/1346525963504220</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21766#comment:1" title="Comment 1"&gt;xenlab&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see value in having a way to add new attributes to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag, this approach still seems kind of scoped to the example use case.
&lt;/p&gt;
&lt;p&gt;
I'm not a fan of having to piggy back on &lt;code&gt;body_class()&lt;/code&gt;, but I see why -- &lt;code&gt;body_class&lt;/code&gt; is widely deployed and integrated into many themes. However, I still think there is a cleaner approach to this problem that allows &lt;code&gt;body_class&lt;/code&gt; to still work while also introducing a new filter to add attributes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
based on the method outlined, you could add stand-alone elements as well, not just the item-foo=item-bar setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21766 (modify body_class function to allow non-class items) updated</title>
      
        <dc:creator>xenlab</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21766#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21766#comment:1/1346525233501787</guid>
      <description>&lt;p&gt;
I see value in having a way to add new attributes to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag, this approach still seems kind of scoped to the example use case.
&lt;/p&gt;
&lt;p&gt;
I'm not a fan of having to piggy back on &lt;code&gt;body_class()&lt;/code&gt;, but I see why -- &lt;code&gt;body_class&lt;/code&gt; is widely deployed and integrated into many themes. However, I still think there is a cleaner approach to this problem that allows &lt;code&gt;body_class&lt;/code&gt; to still work while also introducing a new filter to add attributes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post-template.php.diff attached to Ticket #21766</title>
      
        <dc:creator>norcross</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21766/post-template.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21766/post-template.php.diff/1346523998976874</guid>
      <description>&lt;p&gt;
removing commented out items
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21766 (modify body_class function to allow non-class items) created</title>
      
        <dc:creator>norcross</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21766/1346523103753633</guid>
      <description>&lt;p&gt;
Currently, the &lt;code&gt;body_class&lt;/code&gt; only allows for filtering with additional classes. For users that want to add other items, they have to manually edit the theme files. The best example of this is schema.org body elements (itemtype and itemprop).
&lt;/p&gt;
&lt;p&gt;
The diff file shows two things:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;the new &lt;code&gt;body_items&lt;/code&gt; function that grabs any items added via filter, if they exist.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;the modified &lt;code&gt;body_class&lt;/code&gt; function, which appends the output with the items if they exist.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The patch, as I've written it, allows for this additional filter to be included without interfering with how themes / plugins interact with the current &lt;code&gt;body_class&lt;/code&gt; filter, and doesn't require theme authors to include an additional tag in their themes.
&lt;/p&gt;
&lt;p&gt;
Below is an example function that could be placed in a theme or plugin to add other items to the body tag element.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function schema_bodyitems($item) {
	if (is_page() ) :
		$item[] = 'item-foo="item-bar"';
	endif;
	$item[] = 'itemtype="http://schema.org/Blog"';
	$item[] = 'itemscope=""';
return $item;
}
add_filter('body_items','schema_bodyitems');
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21737 (Users should have to jump through hoops to set passwords of their ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:07:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21737#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21737#comment:2/1346522861143272</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21710 (More hooks for WordPress Importer) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:04:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21710#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21710#comment:11/1346522680099144</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21704 (Instagram oembed) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:04:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21704#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21704#comment:2/1346522651234267</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18488 (set_transient crashes when value parameter is a SimpleXMLElement object) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 01 Sep 2012 18:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18488#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18488#comment:18/1346522596189439</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21754 (Replace QuickPress labels with gray prompt texts) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 01 Sep 2012 17:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21754#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21754#comment:15/1346520231651330</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21762 (Storing a multidimensional array using register_setting ...) updated</title>
      
        <dc:creator>sekatsim</dc:creator>

      <pubDate>Sat, 01 Sep 2012 16:36:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21762#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21762#comment:3/1346517401236274</guid>
      <description>&lt;p&gt;
I'm not.. it's automatically serialized whenever someone hits "Save Settings" on an options page and the array is passed through register_setting
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [1003]: Fix typo in @ticket annotation.</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sat, 01 Sep 2012 16:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/1003/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/1003/tests/1346515889368521</guid>
      <description>&lt;p&gt;
Fix typo in @ticket annotation.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21750 (Twenty Twelve: Ordered list items need larger left margins to avoid ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 01 Sep 2012 16:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21750#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21750#comment:2/1346515484948041</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch will allow for up to 999 list items.
&lt;/p&gt;
&lt;p&gt;
As Caroline pointed out, we don't use 2.57rem (36px) in the stylesheet yet. @DrewStrojny: Would you be okay with that or do you prefer another value?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21750.diff attached to Ticket #21750</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 01 Sep 2012 15:43:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21750/21750.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21750/21750.diff/1346514223874043</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20496 (Previews should redirect to the permalink if the post has been published) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Sep 2012 15:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20496#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20496#comment:12/1346512518433356</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21765" title="#21765: enhancement: Redirect to canonical URL if URL has 'preview' parameter with any ... (closed: wontfix)"&gt;#21765&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21765 (Redirect to canonical URL if URL has 'preview' parameter with any ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Sep 2012 15:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21765#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21765#comment:1/1346512507884566</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20496" title="#20496: enhancement: Previews should redirect to the permalink if the post has been published (closed: fixed)"&gt;#20496&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21740 (Twenty Twelve: Review overflow attributes) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 01 Sep 2012 14:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21740#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21740#comment:4/1346508321982376</guid>
      <description>&lt;p&gt;
I'd like to &lt;strong&gt;remove&lt;/strong&gt; the attribute from the following selectors:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;.widget-area .widget&lt;/code&gt;: Maybe change that, so that floats could still be used in text widgets. But other than that it seems not to be needed here. Plus it kills the bottom-shadow of the 'Search' button.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;footer[role="contentinfo"]&lt;/code&gt;: Nothing floats in the footer.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;.image-attachment&lt;/code&gt;: Let's move the overflow attribute to &lt;code&gt;article.attachment&lt;/code&gt;, so the image shadow does not get cut off.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;.comments-meta article&lt;/code&gt;: Doesn't have any effect. And while we're there: &lt;code&gt;.comments-area article p&lt;/code&gt; is redundant.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;#respond form p&lt;/code&gt;: Nothing floating there either, but causing above mentioned bug
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'd like to &lt;strong&gt;add&lt;/strong&gt; the attribute to the following selector:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;.entry-content&lt;/code&gt;:  We pass the "Clearing Floats" Unit Tests only due to clearing help by &lt;code&gt;.entry-meta&lt;/code&gt;. We get busted in an Aside when the last element is floated, since the background color doesn't wrap. If accepted, we should also add a word-wrap attribute and an override for image attachements.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Both will probably need more testing then, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21765 (Redirect to canonical URL if URL has 'preview' parameter with any ...) created</title>
      
        <dc:creator>egorpromo</dc:creator>

      <pubDate>Sat, 01 Sep 2012 13:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21765/1346505524218098</guid>
      <description>&lt;p&gt;
if any URL has nonempty GET-parameter 'preview' that there is noredirection to canonical URL.
If we have &lt;a class="ext-link" href="http://example.com?p={post_id}&amp;amp;post_type={post_slug}&amp;amp;preview=true"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?p={post_id}&amp;amp;post_type={post_slug}&amp;amp;preview=true&lt;/a&gt; there is no redirection to correct URL like &lt;a class="ext-link" href="http://example.com?{post_type}={post_slug"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com?{post_type}={post_slug&lt;/a&gt;} or like &lt;a class="ext-link" href="http://example.com/{post_type}/{post_slug"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/{post_type}/{post_slug&lt;/a&gt;} (if site has permalinks). This is bad for SEO and bad user experience. If user not log in there must be redirecttion.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21764 (Twenty Twelve: Blockquotes have no bottom margin — touch paragraphs ...) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 01 Sep 2012 13:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21764#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21764#comment:3/1346504684224805</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with Mark. Styling blockquotes with a background color is not rare and we shoud expect Child Themes to do that. (Mark's) Patch addresses the issue without changing the visual appearance of blockquotes in Twenty Twelve.
&lt;/p&gt;
&lt;p&gt;
For Aside posts, I'd propose switching back to use margin for &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;s and just remove it from the last child. @DrewStrojny: Was switching to padding a measure to remove the space from the last element?
&lt;/p&gt;
&lt;p&gt;
We could also think about using a &lt;code&gt;article.format-aside .entry-content &amp;gt; *:last-child&lt;/code&gt; selector, just to make sure we strip it from any element.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21764.diff attached to Ticket #21764</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 01 Sep 2012 12:50:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21764/21764.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21764/21764.diff/1346503858283736</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21758 (Do not require a file in comments_template()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 01 Sep 2012 11:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21758#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21758#comment:2/1346498587983180</guid>
      <description>&lt;p&gt;
Or, how about we move all the comment stuff out of WP_Query?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21742 (Allow unit tests to override is_*_admin()) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 01 Sep 2012 11:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21742#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21742#comment:5/1346498433205211</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21763 (Add Support To Pass An Array Of Plugins To The Plugin Info API) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 01 Sep 2012 11:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21763#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21763#comment:3/1346498034475905</guid>
      <description>&lt;p&gt;
The update check API is not the same as the plugin info API, so the 'consistency' argument is not valid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21754 (Replace QuickPress labels with gray prompt texts) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 01 Sep 2012 10:58:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21754#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21754#comment:14/1346497113319634</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we should go with the JavaScript version here, since &lt;code&gt;placeholder&lt;/code&gt; is only supported in IE &amp;gt; 9 and we are still supporting IE 7 and up. . More or less the same way as on the edit screen. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21754/21754.2.patch" title="Attachment '21754.2.patch' in Ticket #21754"&gt;21754.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21754/21754.2.patch" title="Download"&gt;​&lt;/a&gt; does address this.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Some related tickets to QuickPress and JavaScript: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19662" title="#19662: defect (bug): QuickPress saving breaks if javascript is disabled (closed: duplicate)"&gt;#19662&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13516" title="#13516: feature request: Hide JS-only widgets on dashboard is no JS (closed: duplicate)"&gt;#13516&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21754.2.patch attached to Ticket #21754</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 01 Sep 2012 10:54:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21754/21754.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21754/21754.2.patch/1346496887779924</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13237 (Absence of alots lowers community morale) updated</title>
      
        <dc:creator>navjotjsingh</dc:creator>

      <pubDate>Sat, 01 Sep 2012 10:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13237#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13237#comment:28/1346496801621311</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6821 (ImageMagick support) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 01 Sep 2012 09:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6821#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6821#comment:60/1346491965042403</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/6821/6821.diff" title="Attachment '6821.diff' in Ticket #6821"&gt;Attached&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/6821/6821.diff" title="Download"&gt;​&lt;/a&gt; is an initial abstraction of GD with WP_Image_Editor.
A partially built Imagick Editor Class is also included, but isn't functioning yet.
&lt;/p&gt;
&lt;p&gt;
Comments and testing welcome!  At the moment, there remain a few things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Clear out and further abstract some of the remaining GD functionality in core
&lt;/li&gt;&lt;li&gt;Audit entire code base for further necessary changes to use WP_Image_Editor (this is started)
&lt;/li&gt;&lt;li&gt;Refine filters for new class, making sure that we're not limiting users in extending Image Editing in core
&lt;/li&gt;&lt;li&gt;Finish Imagick class first, then finally convert (if there's time).  Imagick first only because it's a lot more similar in functionality to the GD Editor class, and is the low-hanging fruit for "next editor."
&lt;/li&gt;&lt;li&gt;Performance and quality testing on both editors.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Please note if you'd like to help with any of this, or have any questions!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>6821.diff attached to Ticket #6821</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 01 Sep 2012 09:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6821/6821.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6821/6821.diff/1346491514033687</guid>
      <description>&lt;p&gt;
Initial Abstraction of GD with WP_Image_Editor
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21763 (Add Support To Pass An Array Of Plugins To The Plugin Info API) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 01 Sep 2012 08:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21763#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21763#comment:2/1346489143267586</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21764 (Twenty Twelve: Blockquotes have no bottom margin — touch paragraphs ...) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 01 Sep 2012 07:51:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21764#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21764#comment:2/1346485900891682</guid>
      <description>&lt;p&gt;
Also:
&lt;/p&gt;
&lt;pre class="wiki"&gt;article.format-aside blockquote p:last-child {
	padding-bottom: 0;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21764 (Twenty Twelve: Blockquotes have no bottom margin — touch paragraphs ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Sep 2012 07:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21764#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21764#comment:1/1346485615272402</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21764 (Twenty Twelve: Blockquotes have no bottom margin — touch paragraphs ...) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 01 Sep 2012 07:42:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21764/1346485355116409</guid>
      <description>&lt;p&gt;
In Twenty Twelve, blockquotes have no bottom margin. Any content below them gets an unrequested lap dance.
&lt;/p&gt;
&lt;p&gt;
I've applied a background color to blockquotes to illustrate the problem:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://cl.ly/image/3x3Z1T130y2p/Screen%20Shot%202012-09-01%20at%203.33.37%20AM.png"&gt;&lt;img src="http://cl.ly/image/3x3Z1T130y2p/Screen%20Shot%202012-09-01%20at%203.33.37%20AM.png" alt="http://cl.ly/image/3x3Z1T130y2p/Screen%20Shot%202012-09-01%20at%203.33.37%20AM.png" crossorigin="anonymous" title="http://cl.ly/image/3x3Z1T130y2p/Screen%20Shot%202012-09-01%20at%203.33.37%20AM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You don't see the issue without giving the blockquote a background color because the margin-bottom of the last paragraph in the blockquote provides the appropriate spacing. But as soon as blockquotes have any sort of background styling or a border, the odd spacing will manifest.
&lt;/p&gt;
&lt;p&gt;
This is what I'm using in my child theme to fix it.
&lt;/p&gt;
&lt;pre class="wiki"&gt;article .entry-content blockquote {
	margin-bottom: 24px;
}
article .entry-content blockquote p:last-child {
	margin-bottom: 0;
}
&lt;/pre&gt;&lt;p&gt;
Normally p has a margin-bottom of 24. This gives that to the blockquote, and takes it away from the last paragraph in a blockquote (if that paragraph is the last child element of the blockquote).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21713 (Extend login body class to support custom background) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 01 Sep 2012 07:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21713#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21713#comment:1/1346483976676239</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19770 (Implement browser-side resizing with Plupload) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 01 Sep 2012 06:10:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19770#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19770#comment:9/1346479823667524</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19770#comment:5" title="Comment 5"&gt;fczuardi2&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it can be useful to write the workaround / way to turn that feature back on again (WP 3.4.1) while it doesnt get properly reintroduced…
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'post-upload-ui', 'media_upload_max_image_resize' );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
FWIW, I've been adding the action back via a &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/enable-image-scaling-option-on-upload/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin&lt;/a&gt; since it was decided to remove it in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19174" title="#19174: defect (bug): Scaling prompt below uploader (closed: fixed)"&gt;#19174&lt;/a&gt;. I rewrote the language a bit but haven't had any reported problems. Uploading &amp;amp; resizing multiple photos works for us in FF14, Safari 6, Chrome 21, Opera 12 and IE9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21763 (Add Support To Pass An Array Of Plugins To The Plugin Info API) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Sep 2012 06:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21763#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21763#comment:1/1346479798521111</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21763 (Add Support To Pass An Array Of Plugins To The Plugin Info API) created</title>
      
        <dc:creator>crypticmauler</dc:creator>

      <pubDate>Sat, 01 Sep 2012 03:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21763/1346469282413247</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://api.wordpress.org/plugins/info/1.0/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://api.wordpress.org/plugins/info/1.0/&lt;/a&gt;
Currently only allows one plugin to be passed in a request to get the relevant information back.
&lt;/p&gt;
&lt;p&gt;
However, the update check API allows an array of plugins to be passed. I'm requesting the same functionality be added to the info API and not just for developer use, but for consistancy.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21754 (Replace QuickPress labels with gray prompt texts) updated</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Sat, 01 Sep 2012 02:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21754#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21754#comment:13/1346468289310029</guid>
      <description>&lt;p&gt;
Nit-picky, but for parity's sake, on Line 526 of 21754.patch, there's a semi-colon missing after the esc_attr_e() call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21761 (Hide Appearance &gt; Widgets menu when no sidebars are registered) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Sat, 01 Sep 2012 02:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21761#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21761#comment:4/1346468251062161</guid>
      <description>&lt;p&gt;
I've uploaded two separate patches.  I wasn't sure the best route to take there, so I tried two different options that I think would work.
&lt;/p&gt;
&lt;p&gt;
We should probably also block access and add the "You do not have sufficient permissions to access this page." message to the widgets screen in the admin, which would be consistent with the background and header features.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21761#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21761#comment:2" title="Comment 2"&gt;greenshady&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
A tip: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/functions.php#L2518"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;look here&lt;/a&gt; :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought I was going crazy there for a while.  I swore I looked in every file in &lt;code&gt;/wp-admin&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>no-widget-menu.diff attached to Ticket #21761</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Sat, 01 Sep 2012 02:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21761/no-widget-menu.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21761/no-widget-menu.diff/1346468077175341</guid>
      <description>&lt;p&gt;
Load widgets but no admin menu
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>no-load-widgets.diff attached to Ticket #21761</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Sat, 01 Sep 2012 02:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21761/no-load-widgets.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21761/no-load-widgets.diff/1346468046478716</guid>
      <description>&lt;p&gt;
Don't load widgets at all
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21760 (get_term_by() calls are not cached) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 01 Sep 2012 02:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21760#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21760#comment:6/1346466370217175</guid>
      <description>&lt;p&gt;
FWIW, by overloading &lt;code&gt;get_term( $id ...&lt;/code&gt; to accept &lt;code&gt;int|string|object&lt;/code&gt;, it brings up conditions where
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Slug is numeric
&lt;/li&gt;&lt;li&gt;a term_id is passed in, but return term_ids as strings in some locations, so you can't rely upon type being an int for term_ids
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>lithuanian-css-which-can-be removed-21754.diff attached to Ticket #21754</title>
      
        <dc:creator>settle</dc:creator>

      <pubDate>Sat, 01 Sep 2012 01:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21754/lithuanian-css-which-can-be%20removed-21754.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21754/lithuanian-css-which-can-be%20removed-21754.diff/1346461320377762</guid>
      <description>&lt;p&gt;
Lithuanian CSS which can be removed after this is fixed.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21754 (Replace QuickPress labels with gray prompt texts) updated</title>
      
        <dc:creator>settle</dc:creator>

      <pubDate>Sat, 01 Sep 2012 00:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21754#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21754#comment:12/1346461163476211</guid>
      <description>&lt;p&gt;
If you will make it this way, you can also remove some locale-specific CSS in wp-admin/css/wp-admin.css
I see I won't need lithuanian css for QuickPress and I am sure you can remove some similar russian code too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21754 (Replace QuickPress labels with gray prompt texts) updated</title>
      
        <dc:creator>settle</dc:creator>

      <pubDate>Sat, 01 Sep 2012 00:22:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21754#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21754#comment:11/1346458978081601</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21762 (Storing a multidimensional array using register_setting ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 01 Sep 2012 00:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21762#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21762#comment:2/1346457971200976</guid>
      <description>&lt;p&gt;
Why are you serializing the internal array?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>