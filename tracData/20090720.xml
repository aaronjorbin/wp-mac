<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10453 (authentication errors from plugins sometimes get suppressed) updated</title>
      
        <dc:creator>wnorris</dc:creator>

      <pubDate>Mon, 20 Jul 2009 22:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10453#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10453#comment:1/1248129386000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>plugin-auth-fix.php attached to Ticket #10453</title>
      
        <dc:creator>wnorris</dc:creator>

      <pubDate>Mon, 20 Jul 2009 22:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10453/plugin-auth-fix.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10453/plugin-auth-fix.php/1248129328000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10453 (authentication errors from plugins sometimes get suppressed) created</title>
      
        <dc:creator>wnorris</dc:creator>

      <pubDate>Mon, 20 Jul 2009 22:33:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10453/1248129189000000</guid>
      <description>&lt;p&gt;
I've noticed that the new authentication code in WP 2.8 sometimes suppresses error messages from plugins which implement the 'authenticate' hook.  This happens on wp-login.php when both the username and password fields are left empty.
&lt;/p&gt;
&lt;p&gt;
The included patch does two things:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;modifies &lt;code&gt;wp_authenticate_username_password&lt;/code&gt; to maintain existing WP_Error object if present.  Also changes how &lt;code&gt;wp_signon&lt;/code&gt; clears out the 'empty_username' and 'empty_password' errors, to ensure that any others are maintained (this last part could be made cleaner if &lt;code&gt;WP_Error&lt;/code&gt; exposed a &lt;code&gt;remove&lt;/code&gt; method)
&lt;/li&gt;&lt;li&gt;modifies the 'login_errors' and 'login_messages' filter calls in &lt;code&gt;wp-login.php&lt;/code&gt; to pass the raw &lt;code&gt;$wp_errors&lt;/code&gt; object as an optional second parameter
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10452 (Wordpress pollutes POST data) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 22:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10452#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10452#comment:1/1248127850000000</guid>
      <description>wontfix: &lt;p&gt;
No one likes it, but changing will break backward compatibility so it is here to stay for awhile longer.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #7056 (wptexturize should leave contents of pre tags verbatim) updated</title>
      
        <dc:creator>miken32</dc:creator>

      <pubDate>Mon, 20 Jul 2009 19:37:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7056#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7056#comment:11/1248118627000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7056 (wptexturize should leave contents of pre tags verbatim) updated</title>
      
        <dc:creator>miken32</dc:creator>

      <pubDate>Mon, 20 Jul 2009 19:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7056#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7056#comment:10/1248118609000000</guid>
      <description>&lt;p&gt;
Definitely looking forward to this one, it will be in 2.9 I assume?
&lt;/p&gt;
&lt;p&gt;
I wanted to add that &amp;lt;samp&amp;gt; should be added to the list of HTML elements to leave alone. &lt;a class="ext-link" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-samp-element"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;This element&lt;/a&gt; "represents (sample) output from a program or computing system."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 17:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:43/1248110089000000</guid>
      <description>&lt;p&gt;
Woops, I stand corrected on that timeout... My bad, you're correct.
&lt;/p&gt;
&lt;p&gt;
Re the workflow, that would be ideal, if we had more contributors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Mon, 20 Jul 2009 17:04:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:42/1248109493000000</guid>
      <description>&lt;p&gt;
Just to clarify - I'm not suggesting per post pings - I'm suggesting that pings shouldn't be lost just because we don't want to spam ping services.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10452 (Wordpress pollutes POST data) created</title>
      
        <dc:creator>bilge</dc:creator>

      <pubDate>Mon, 20 Jul 2009 16:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10452/1248109104000000</guid>
      <description>&lt;p&gt;
Form data containing quotes is escaped. For example, if a user submits an input field with the name "test" and the value "'", after the form is submitted: $_POST&lt;a class="missing wiki"&gt;test?&lt;/a&gt; == "\'".
&lt;/p&gt;
&lt;p&gt;
This is essentially magic_quotes_gpc emulation which is so cancerous that the PHP developers had the good sense to not only deprecate but also remove from the newest versions of PHP, and yet Wordpress sees fit to spread the tumour around some more. All of that is irrelevant, however, when considering that there is no earthly reason to permit any application permission to augment the values of any PHP superglobals and that certainly extends to the POST data collection.
&lt;/p&gt;
&lt;p&gt;
Whether or not I agree that code is poetry is a moot point considering that whoever is responsible for coding this abomination hasn't seen poetic code in their entire lifetime.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Mon, 20 Jul 2009 16:53:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:41/1248108791000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/6698#comment:39" title="Comment 39"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So it's a timestamp that is needed, and your patch isn't working because of this -- it always returns false.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Did you actually try my patch? It's true that it checks for a timestamp - but at line 731 in functions.php it adds the current timestamp to the expiration time, which leaves your options expiring sometime in februari 2049:
&lt;/p&gt;
&lt;p&gt;
add_option($transient_timeout, time() + $expiration, &lt;em&gt;, 'no');
&lt;/em&gt;&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your other two points you raise are equally invalid. The value I put in the transient could be 1, or "about to do a ping", or whatever -- it doesn't matter, its time() value is only there in the event a plugin might want to know when it was set.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes - I realize now that that point is invalid because of my first point - my bad
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Re the second point, it's just a different approach. With the patch I suggested we ping once per hour at most (and based on my testing since yesterday, it's working exactly as documented).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not arguing that your patch doesn't fix that a ping is made at most once an hour - I'm saying that I think it's wrong that it doesn't queue a ping for changes made during that hour since that leaves ping services with outdated information.
&lt;/p&gt;
&lt;p&gt;
Let me give you an example:
&lt;/p&gt;
&lt;p&gt;
At 10.00 AM: I'm posting a new post and my blog pings with both our patches.
&lt;/p&gt;
&lt;p&gt;
At 10.10 AM: I discover a serious error in that post and changes it - with my patch a ping is queued to take place at 10.30 AM since I don't want to ping services more than once every 30 minutes - but with your patch this change will not be communicated to the ping services at all.
&lt;/p&gt;
&lt;p&gt;
At 10.20 AM: I'm really creative this hour so I'm posting yet another post - with my patch since a ping is queued already nothing further happens - with your patch this post will also not be communicated to ping services at all.
&lt;/p&gt;
&lt;p&gt;
At 10.25 AM: I'm moving away from the computer for some hours to do some administrative work.
&lt;/p&gt;
&lt;p&gt;
At 10.30 AM: It was 30 minutes since the ping services was notified of changes from my blog and we can feel safe to send a new ping. With my patch, since changes that should be pinged has already happened during that time, the system will now immediately ping them to alert them that they should check my blog for updates - with your patch nothing happens.
&lt;/p&gt;
&lt;p&gt;
At 12.00 AM: Since nothing has changed on the blog - I'm doing administrative work - the ping services will believe they are up to date on my blog. With my patch they will be - with your patch they won't be until I'm done with my administrative work and returning to do some more blogging.
&lt;/p&gt;
&lt;p&gt;
Ping services want to be up to date - ping services don't want to be spammed. By limiting a ping to once every half an hour but also making sure that every change is actually followed by a ping we can ensure to have as up to date ping services as we possibly can. A maximum of two pings per hour and a maximum delay of 30 minutes for a ping service to be notified of a change.
&lt;/p&gt;
&lt;p&gt;
Btw - how can you say that your patch is tested and committed? I have reviewed it and I find it broken. Don't you need a third party review to label your patch as tested?
&lt;/p&gt;
&lt;p&gt;
I'm btw obviously still suggesting my patch as the solution here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 16:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:40/1248107897000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Re-suggesting 6698.4.diff as a commit candidate, as it fixes the real-time issue raised by christian. And suggesting we open a separate ticket in the event we want per-post pinging (could be worth a discussion during the next IRC meet-up).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 16:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:39/1248106668000000</guid>
      <description>&lt;p&gt;
Err...
&lt;/p&gt;
&lt;p&gt;
the expiration parameter is checked as such:
&lt;/p&gt;
&lt;p&gt;
if ( get_option($transient_timeout) &amp;lt; time() )
&lt;/p&gt;
&lt;p&gt;
So it's a timestamp that is needed, and your patch isn't working because of this -- it always returns false.
&lt;/p&gt;
&lt;p&gt;
Your other two points you raise are equally invalid. The value I put in the transient could be 1, or "about to do a ping", or whatever -- it doesn't matter, its time() value is only there in the event a plugin might want to know when it was set.
&lt;/p&gt;
&lt;p&gt;
Re the second point, it's just a different approach. With the patch I suggested we ping once per hour at most (and based on my testing since yesterday, it's working exactly as documented).
&lt;/p&gt;
&lt;p&gt;
With the one you're suggesting makes it ping once per hour per post. But if that's what we want, we should be tossing an ID parameter in generic_pings and in the cron.
&lt;/p&gt;
&lt;p&gt;
As to which is better, I honestly don't care myself. Keep in mind that pinging once per hour per post, however, is bait for marketers who scare poorly informed users into buying pricey solutions to "WP pings too often" problems. (See comments above, re the reason the throttling was introduced.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Mon, 20 Jul 2009 14:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:38/1248100096000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/6698#comment:37" title="Comment 37"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Transients and options work in much the same way except that a) they can expire (hence no need for your options-related logic) and b) they're not stored in the database when using a persistent object cache.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When saved directly to database it seems like pure options would be better in this case - but if transients works better with the persistent object cache as you say I should use them instead. I've updated the patch with that change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyway, if you feel a 60s throttle before any pinging occurs is in order, base your patch on 6698.4.diff, and schedule the ping to occur at time() + 60 instead of time().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I actually removed the throttle now - if a real cron job hasn't been set up the website has to actually be visited to trigger a cron job and we don't know when that will happen so even a 60 seconds throttle can turn in to a very long throttle for a blog not visited very often.
&lt;/p&gt;
&lt;p&gt;
I based my new patch on my old because I think your patch is broken in at least three ways.
&lt;/p&gt;
&lt;p&gt;
First it ignores all ping sources during the waiting period between two pings - it should queue a ping instead as my patch does.
&lt;/p&gt;
&lt;p&gt;
Secondly it sets the timer in _transition_post_status() when it's only in generic_ping() we actually know the correct timestamp.
&lt;/p&gt;
&lt;p&gt;
Thirdly a minor thing - the third argument of set_transient() is not a timestamp - it's the lifetime of the option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress_generic_ping_ticket_6698_2.patch attached to Ticket #6698</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Mon, 20 Jul 2009 14:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6698/wordpress_generic_ping_ticket_6698_2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6698/wordpress_generic_ping_ticket_6698_2.patch/1248099510000000</guid>
      <description>&lt;p&gt;
Switched from pure options to transients and removed the 60 seconds throttle
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 13:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:37/1248096764000000</guid>
      <description>&lt;p&gt;
Transients and options work in much the same way except that a) they can expire (hence no need for your options-related logic) and b) they're not stored in the database when using a persistent object cache.
&lt;/p&gt;
&lt;p&gt;
Anyway, if you feel a 60s throttle before any pinging occurs is in order, base your patch on 6698.4.diff, and schedule the ping to occur at time() + 60 instead of time().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10425 (Improvements to IIS7 Rewriting Code) updated</title>
      
        <dc:creator>bforchhammer</dc:creator>

      <pubDate>Mon, 20 Jul 2009 13:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10425#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10425#comment:5/1248095984000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10425#comment:3" title="Comment 3"&gt;ruslany&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After more investigation I do not think that support for verbose rules should be added to IIS specific code. It is still not clear to me whether verbose rules option is ever used. Manually enabling it on Apache causes WP to generate about 70 mod_rewrite rules in .htaccess file. I do not understand why it is needed, as the only rule that is required for pretty permalinks to work is the rule to rewrite everything to index.php. In addition to that, having so many rules in either .htaccess file or in web.config file may degrade the performance of the web server.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree that it does not seem to make much sense; maybe the option for "verbose rules" should just be removed completely then? (clean-up?)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
2) I'll need to better understand how non_wp_rules work. Do you have an example of such rule? Or may be a plugin that uses those rules.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, I don't know if anyone actually uses it; I only stumbled on it myself when writing the patch for &lt;a class="ext-link" href="http://trac.mu.wordpress.org/ticket/991"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;MU #991&lt;/a&gt;. It was introduced with the initial patch in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2433" title="#2433: defect (bug): Provide some API for WP_Rewrite (closed: fixed)"&gt;#2433&lt;/a&gt;/&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3638" title="Rewrite API additions and improvements from David House. #2433"&gt;[3638]&lt;/a&gt; (Dez 2006) and has not been touched since.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Mon, 20 Jul 2009 10:08:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:36/1248084512000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/6698#comment:35" title="Comment 35"&gt;christianbolstad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have tried the patch submitted by VoxPelli against the nighly build and it work as described. It is a quick fix that is "good enough" to handle the problems with notifications to ping services in a short perspective.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm marking this as tested then
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10450 (Errors while downloading a updated version zip result in ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 20 Jul 2009 10:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10450#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10450#comment:2/1248084330000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This time it worked.
&lt;/p&gt;
&lt;p&gt;
Looks like we need a better error message in there. Those zipfiles are checksummed, right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>christianbolstad</dc:creator>

      <pubDate>Mon, 20 Jul 2009 09:57:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:35/1248083855000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have tried the patch submitted by VoxPelli against the nighly build and it work as described. It is a quick fix that is "good enough" to handle the problems with notifications to ping services in a short perspective. In the longer run the ping system has to be rewritten a bit more. I am gathering recommendations from the different services and would love to co-operate with other developers to build the optimal solution.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/6698/wordpress_generic_ping_ticket_6698.patch"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/attachment/ticket/6698/wordpress_generic_ping_ticket_6698.patch&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10450 (Errors while downloading a updated version zip result in ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 20 Jul 2009 09:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10450#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10450#comment:1/1248080933000000</guid>
      <description>&lt;p&gt;
Try it again.
&lt;/p&gt;
&lt;p&gt;
Sounds like you've got a issue with one of the HTTP transports  returning incomplete data..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10451 (Fancy single/double quotes not stripped from post stub) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 20 Jul 2009 09:05:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10451/1248080715000000</guid>
      <description>&lt;p&gt;
A client of mine copy/pasted in a post title from MSWord or something. It contained a fancy single quote. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Hereâ€™s An Example
&lt;/pre&gt;&lt;p&gt;
That was not removed when creating the post stub which caused issues:
&lt;/p&gt;
&lt;p&gt;
They scheduled that post for the future, and then attempted to preview it. It wouldn't work -- &lt;code&gt;$post&lt;/code&gt; appeared to be empty (I didn't check, but all content was missing). Removing the fancy single quote from the post stub fixed the issue.
&lt;/p&gt;
&lt;p&gt;
They are using &lt;code&gt;index.php&lt;/code&gt; based pretty permalinks which may matter as I am unable to reproduce it on my &lt;code&gt;mod_rewrite&lt;/code&gt; based install.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10450 (Errors while downloading a updated version zip result in ...) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 20 Jul 2009 08:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10450/1248079879000000</guid>
      <description>&lt;p&gt;
Looks like security probs getting this all untested &amp;amp; overheated. The 2.8.1 looks like being too much untested to be able to update to the next version (2.8.2) then.
&lt;/p&gt;
&lt;p&gt;
Get a
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;PCLZIP_ERR_BAD_FORMAT (-10) : Invalid archive structure&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
message while doing the automatic update.
&lt;/p&gt;
&lt;p&gt;
Regression on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10104" title="#10104: defect (bug): PCLZIP_ERR_BAD_FORMAT (-10) after changeset 11524 (closed: fixed)"&gt;#10104&lt;/a&gt; ?
&lt;/p&gt;
&lt;p&gt;
Was not with that ticket there but this smells really fishy, someone who know about that ticket should really take care. Thanks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Mon, 20 Jul 2009 07:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:34/1248076769000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Denis: Your suggested patch will not queue up pings during the wait period - if I create a new post during the wait period it should be queued up and a ping sent as soon as the minimum wait time between ping calls has passed.
&lt;/p&gt;
&lt;p&gt;
Why would a transient be better than a pure option? I haven't come across the transient function that much before - but giving them a brief look now I think they only add excessive database interaction by having that timeout - because it doesn't delete a timed out option prior to it being accessed at which time it will be updated immediately as well.
&lt;/p&gt;
&lt;p&gt;
I would still suggest using my patch - perhaps with a change to transient if there are any good reason for that that I now fail to see and perhaps removing the now forced minimum 60 seconds throttling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 07:55:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:33/1248076556000000</guid>
      <description>&lt;p&gt;
@Huvet - also, keep in mind that there are scaremongers on the web. see:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/6698#comment:12"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/ticket/6698#comment:12&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 07:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:32/1248076311000000</guid>
      <description>&lt;p&gt;
@Huvet: see 6698.4.diff, which was added an hour ago.
&lt;/p&gt;
&lt;p&gt;
And here's code to add in a plugin until it gets checked in:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ( wp_next_scheduled('do_generic_ping') &amp;gt; time() + 60 ) &amp;amp;&amp;amp; !get_transient('last_ping') ) {
	wp_clear_scheduled_hook('do_generic_ping');
	wp_schedule_single_event(time(), 'do_generic_ping');
	set_transient('last_ping', time(), time() + 3600);
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Huvet</dc:creator>

      <pubDate>Mon, 20 Jul 2009 07:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:31/1248076202000000</guid>
      <description>&lt;p&gt;
Denis-de-Bernardy: In my opinion, excessive pinging on edit and closing of a post, shouldn't prompt a wordpress change that changes the user experience for everyone. I rely on pinging to get my posts indexed by (several different) search engines, and since I report on current news events, being indexed one hour late, means someone else's article will be indexed instead. This is serious, and I believe a serious hit to wordpress as a platform.
&lt;/p&gt;
&lt;p&gt;
Now, you're saying that this can be overridden with a plugin, but I believe the default wordpress installation should be as good as possible. It shouldn't demand installation of plugins to work for a news blog.
&lt;/p&gt;
&lt;p&gt;
The only good reason to change this that I see (default behaviour), is if ping services would complain to wordpress that they are getting too much traffic. But I highly doubt this. Can't Google handle the load? Of course they can, and they can handle eventual (rare) dublicates that we send them.
&lt;/p&gt;
&lt;p&gt;
Have anyone initiated contact with pinging services, and asked them what they think of this change? My guess is that they will be furious, that we take away their chance to get updates directly when someone posts them (Google will have a harder time to pick up blog posts).
&lt;/p&gt;
&lt;p&gt;
To me, there are two options:
&lt;/p&gt;
&lt;p&gt;
1) Change the patch to only affect *edits* of a post, not the initial publish event.
2) Make throttling of all posts a plugin instead (add hooks or what you need to make it happen). The reason for this is that I think that excessive pinging is a less important problem than delayed crawling.
&lt;/p&gt;
&lt;p&gt;
No matter what change you decide to go forward with, please think this through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 06:48:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:30/1248072519000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>6698.4.diff attached to Ticket #6698</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 06:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6698/6698.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6698/6698.4.diff/1248072469000000</guid>
      <description>&lt;p&gt;
throttling with immediate pinging
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 20 Jul 2009 05:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:29/1248069339000000</guid>
      <description>&lt;p&gt;
Patch isn't good. Use this to throttle:
&lt;/p&gt;
&lt;pre class="wiki"&gt;set_transient('last_ping', '1', time() + 3600);
&lt;/pre&gt;&lt;p&gt;
It'll return false as soon as the transient expires.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10126 (Warning upon saving draft page) updated</title>
      
        <dc:creator>tobiasheuken</dc:creator>

      <pubDate>Mon, 20 Jul 2009 05:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10126#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10126#comment:19/1248068556000000</guid>
      <description>&lt;p&gt;
it fails on:
System: Linux
PHP Version: 5.2.9
mySQL Client Version: 5.0.83
Apache API Version: 20051115
&lt;/p&gt;
&lt;p&gt;
it works on:
System: Linux www3.www19.c.artfiles.de 2.6.24.2 &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1" title="#1: defect (bug): Handle https:// when manipulating 'home' (closed: fixed)"&gt;#1&lt;/a&gt; SMP Mon Feb 11 13:56:25 CET 2008 i686
PHP Version: 5.2.9
mySQL Client Version: 5.0.45
Apache Version: 1.3.34
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Milestone 2.8.2 completed</title>
      

      <pubDate>Mon, 20 Jul 2009 05:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/2.8.2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/2.8.2/1248067954000000</guid>
      <description>&lt;p&gt;
Reports:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;This Milestone's tickets&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/4"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;This Milestone's tickets, workflow oriented&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Contribute:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/11"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Needs Reporter Feedback / Steps To Reproduce&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/16"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Needs Patch&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/13"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Has Patch / Needs Testing&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/19"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Needs Punting&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/24"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;My Tickets&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/report/25"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;My Patches&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>milestone</category>
    </item><item>
      <title>Changeset [11730]: 2.8.2</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 04:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11730</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11730/1248064511595719</guid>
      <description>&lt;p&gt;
2.8.2
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11729]: Bump</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 03:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11729</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11729/1248061829561515</guid>
      <description>&lt;p&gt;
Bump
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11728]: esc_attr() for comment author email</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 02:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11728</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11728/1248058460021668</guid>
      <description>&lt;p&gt;
esc_attr() for comment author email
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11727]: esc_attr() for comment author email</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 02:51:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11727</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11727/1248058274468885</guid>
      <description>&lt;p&gt;
esc_attr() for comment author email
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11726]: Bump readme version</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 02:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11726</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11726/1248056964234844</guid>
      <description>&lt;p&gt;
Bump readme version
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11725]: esc_url() for (), for 2.8</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 01:43:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11725</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11725/1248054193112602</guid>
      <description>&lt;p&gt;
esc_url() for (), for 2.8
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11724]: esc_url() for ()</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 01:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11724</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11724/1248054065986686</guid>
      <description>&lt;p&gt;
esc_url() for ()
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11723]: sanitize_comment_cookie() handles the attribute escaping, so remove ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 01:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11723</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11723/1248052945836191</guid>
      <description>&lt;p&gt;
sanitize_comment_cookie() handles the attribute escaping, so remove the extra escaping and leave the phpdoc.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11722]: Escape , , and  for use in attributes by default since so many themes ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 20 Jul 2009 01:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11722</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11722/1248052274298944</guid>
      <description>&lt;p&gt;
Escape , , and  for use in attributes by default since so many themes don't escape them. Use wp_get_current_commenter() to get the raw values.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10385 (WP comment notifications entity encode blog name) updated</title>
      
        <dc:creator>robertaccettura</dc:creator>

      <pubDate>Sun, 19 Jul 2009 23:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10385#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10385#comment:4/1248046526000000</guid>
      <description>&lt;p&gt;
Yes.  I mistyped.  Was looking at a Gecko 1.8 era rendering bug before I entered this one... and my number dyslexia got the best of me.
&lt;/p&gt;
&lt;p&gt;
That ticket looks like it does match this issue, I'll try that patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10449 (Add Calendar Events as first-class data type) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 21:57:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10449#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10449#comment:2/1248040663000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
suggesting close as well.
&lt;/p&gt;
&lt;p&gt;
see also the GSOC project related to this. it'll likely end up being a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10448 (UI styles need improvement) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 21:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10448#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10448#comment:1/1248040305000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Editing this, as he's reporting something completely different.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10449 (Add Calendar Events as first-class data type) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 21:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10449#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10449#comment:1/1248039448000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding a calendar event instead of a post is as simple as
&lt;/p&gt;
&lt;pre class="wiki"&gt;$calendar_object = (object)array('post_title' =&amp;gt; 'The Title', 'post_date' =&amp;gt; '2009 08 4 5pm', 'post_type' =&amp;gt; 'calendar');
wp_insert_post($calendar_object);
&lt;/pre&gt;&lt;p&gt;
In other words, it only requires setting an extra post_type field.. IMO, They're plugins, They can deal with having an extra flag if thats the route they'd like to take (a new post type)
&lt;/p&gt;
&lt;p&gt;
Unless WordPress is going to include a full event calender inside WordPress, theres no point adding the API. So i assume thats what you're asking? To merge one of the plugins into core with the ability for other plugins to override?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress_generic_ping_ticket_6698.patch attached to Ticket #6698</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Sun, 19 Jul 2009 21:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6698/wordpress_generic_ping_ticket_6698.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6698/wordpress_generic_ping_ticket_6698.patch/1248037798000000</guid>
      <description>&lt;p&gt;
Patch for changing one hour delay to one minute and instead having a minimum of half an hour wait between pings
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10449 (Add Calendar Events as first-class data type) created</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Sun, 19 Jul 2009 20:48:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10449</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10449/1248036489000000</guid>
      <description>&lt;p&gt;
I am coming across the need to incorporate a calendar of events into sites more and more often. There are &lt;a class="ext-link" href="http://wordpressgarage.com/plugins/wordpress-calendar-plugins/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;many different calendar plugins&lt;/a&gt; but they have different features and all of them store calendar events differently.
&lt;/p&gt;
&lt;p&gt;
I'd like to propose a standard "&lt;em&gt;calendar_event&lt;/em&gt;" type be added to &lt;em&gt;wp_posts&lt;/em&gt; to include start date/time and end date/time in &lt;em&gt;wp_postmeta&lt;/em&gt; or added to the &lt;em&gt;wp_posts&lt;/em&gt; table itself, whichever is preferred. In addition, functionality to add a calendar event (as there currently is for posts and pages) and a rudimentary events calendar display both with lots of hooks for plugins to enhance.
&lt;/p&gt;
&lt;p&gt;
If we do this then calendar plugins can provide cumulative functionality instead of only providing mutually exclusive functionality.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 20:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:28/1248036414000000</guid>
      <description>&lt;p&gt;
The reverse throttling could be done using a transient that expires after a certain amount of time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 20:44:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:27/1248036270000000</guid>
      <description>&lt;p&gt;
Oh, sorry, it's another guy. But still... patch welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 20:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:26/1248036207000000</guid>
      <description>&lt;p&gt;
@VoxPelli: Yawn. Make yourself useful and offer a better patch instead of ranting on your blog:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.karamell.net/2009/07/19/wordpress-putting-the-real-time-web-to-a-halt/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.karamell.net/2009/07/19/wordpress-putting-the-real-time-web-to-a-halt/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Plus, it's trivial to override in a plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( wp_next_scheduled('do_generic_ping') ) {
  wp_clear_scheduled_hook('do_generic_ping');
  do_action('do_generic_ping');
}
&lt;/pre&gt;&lt;p&gt;
By comparing the return value of wp_next_scheduled() you could even throttle it differently to suit whichever behavior makes the most sense to you -- instant, after a minute, after a half hour, whatever.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Sun, 19 Jul 2009 20:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:25/1248035382000000</guid>
      <description>&lt;p&gt;
I btw also fail to see how &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11410" title="Throttle generic pings to no more than once per hour. Props ..."&gt;[11410]&lt;/a&gt; fixes the original issue reported in this ticket - it doesn't change the behaviour of trackbacks - only the behaviour of general pings was changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 19 Jul 2009 19:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:24/1248033590000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) updated</title>
      
        <dc:creator>christianbolstad</dc:creator>

      <pubDate>Sun, 19 Jul 2009 19:43:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:23/1248032601000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with both rtz and VoxPelli that this fix create more problem than it solves. The concept with a "blocking timer" is good, but this solution is flawed. Ideally pings should be sent instantly  when a new post is published. After that the timer can be started.
&lt;/p&gt;
&lt;p&gt;
Instant announcement to other services is critical for the emerging real time web.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) reopened</title>
      
        <dc:creator>VoxPelli</dc:creator>

      <pubDate>Sun, 19 Jul 2009 19:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:22/1248030891000000</guid>
      <description>&lt;p&gt;
I agree with rtz - although it might be good to have a minimum delay it should certainly not be one hour - if there should be one at all, to grab all of the small changes done right after a post is published, it should only be a few minutes long.
&lt;/p&gt;
&lt;p&gt;
The hour that a ping is delayed now should instead be the minimum wait between two pings - but even then one hour is far too long - I think a minimum wait of 30 minutes is more appropriate.
&lt;/p&gt;
&lt;p&gt;
So - I suggest to change the functionality into: If a ping has been made in the last 30 minutes - wait until 30 minutes has passed since then before a ping is made. If not a ping has been made in the last 30 minutes schedule the ping to be made immediately or after a few minutes.
&lt;/p&gt;
&lt;p&gt;
(Btw - I'm not very used to the WordPress ticket system - perhaps a new ticket should be opened to fix this issue, but since it has already been talked about here I'm reopening this one instead - feel free to correct it if you feel it's wrong)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10331 (SELECT multiple="multiple" Size Bug) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sun, 19 Jul 2009 14:07:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10331#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10331#comment:2/1248012427000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10354 (Argument not array in comment.php) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Sun, 19 Jul 2009 14:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10354#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10354#comment:2/1248012356000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10448 (UI styles need improvement) created</title>
      
        <dc:creator>sminc</dc:creator>

      <pubDate>Sun, 19 Jul 2009 13:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10448/1248011676000000</guid>
      <description>&lt;p&gt;
The button class in the WP UI doesn't make it obvious enough when a button gets hovered.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10315 (Add parameter "separator" to "wp_tag_cloud()") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 12:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10315#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10315#comment:8/1248006578000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Milestone: Future release pending patch for enhancements, Current-trunk upon patch being added for consideration, point release back-porting at commiters discretion. (Generic reply for when I change the milestone)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10315 (Add parameter "separator" to "wp_tag_cloud()") updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 19 Jul 2009 12:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10315#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10315#comment:7/1248005541000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Default seperator should be "\n" then. Updated the patch, credits to ramiy.
&lt;/p&gt;
&lt;p&gt;
Additional note: wp_tag_cloud and wp_generate_tag_cloud share a decent amount of code (for example the default values) which does a bit fishy to me. Someone willing to clean that up?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10315.2.patch attached to Ticket #10315</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 19 Jul 2009 12:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10315/10315.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10315/10315.2.patch/1248005533000000</guid>
      <description>&lt;p&gt;
Updated patch so that seperator is the only seperator and defaults to the default seperator ("\n").
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9064 (URLs with commas are not pinged) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 19 Jul 2009 11:26:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9064#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9064#comment:16/1248002765000000</guid>
      <description>&lt;p&gt;
Where can I print it? Can you give me a direction, that would help. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5831 (Inline help for "UTF-8 is recommended" needs replacing) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 19 Jul 2009 09:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5831#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5831#comment:8/1247994759000000</guid>
      <description>&lt;p&gt;
I do not like the wording-change. UTF-8 should be favorized extremely, so I see no "but". It's more likely that using everything else as encoding than 7bit Ascii, Latin-1 or UTF8 is doing sort of harakiri with wordpress.
&lt;/p&gt;
&lt;p&gt;
IMHO the recommended type (in the status quo) should be ASCII 7Bit. This is the safest way to work with WordPress right now but it might not be accepted by most of it's users. So the recommendation now is UTF-8. And I think it is a good recommendation.
&lt;/p&gt;
&lt;p&gt;
Wording should reflect that because most users do not understand the topic. Even many programmers have fear to deal with encodings properly.
&lt;/p&gt;
&lt;p&gt;
Is there an argument against linking to WordPress Codex? This would make it much more flexible for the translators as well. And the WordPress community can take care of explanations and hints there far better then on wikipedia.org.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10419 (Object of class __PHP_Incomplete_Class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 19 Jul 2009 09:05:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10419#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10419#comment:2/1247994307000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The Error Message you get is related to a design flaw in WordPress core code, data structure and data flow. Your certain experience might be the result of having a plugin once activated and now deactivated that did not properly uninstall but it might have other causes as well.
&lt;/p&gt;
&lt;p&gt;
A hotfix for this case could be to catch the error and silently delete/drop the unrestoreable data.
&lt;/p&gt;
&lt;p&gt;
A propper fix would touch the way userdata is currently handeled in wordpress core. Such changes are not so easy to be expected. As already stated user_meta/serialization is related to some more tickets already and those changes might affect this behaviour and vice versa.
&lt;/p&gt;
&lt;p&gt;
To gain more information about your error, please check which class is likely to be incomplete. The error technically means that an object of a certain class-type is deserialized but the definition (class) of that type does not exists.
&lt;/p&gt;
&lt;p&gt;
This can be because you once had a plugin activated that is not activated any longer and therefore the class definition does not exist any longer (as an Example).
&lt;/p&gt;
&lt;p&gt;
Please var_dump() your incomplete class variable and look in the output, it should have a property that contains the name of the original class. This might help to find the concrete cause of your issue.
&lt;/p&gt;
&lt;p&gt;
Please report that classname or any additional feedback back here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 09:04:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:9/1247994254000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, We've already worked that out.
&lt;/p&gt;
&lt;p&gt;
Now the ticket has moved onto adding some documentation for others on the issue, or possibly auto-flushing the rules when the taxonomy list changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10444 (posts_per_archive_page) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 09:02:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10444#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10444#comment:1/1247994151000000</guid>
      <description>invalid: &lt;p&gt;
there are several plugins that let you change it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 09:01:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:8/1247994082000000</guid>
      <description>&lt;p&gt;
this ticket is invalid. the plugin is likely missing activate and deactivate functions that proceed to flush the rewrite rules as needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10447 (get_home_path() fails when home url and site url differ in case) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 08:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10447#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10447#comment:4/1247992591000000</guid>
      <description>&lt;p&gt;
As to the question on what it does, it's used to by save_mod_rewrite_rules().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10447 (get_home_path() fails when home url and site url differ in case) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 08:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10447#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10447#comment:3/1247992351000000</guid>
      <description>&lt;p&gt;
Yup, we're on the same wavelength. I think it something like this, in get_home_path(), might do the trick:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$home = parse_url($home);
$home = $home['path'];
$siteurl = parse_url($siteurl);
$siteurl = $siteurl['path'];
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10447 (get_home_path() fails when home url and site url differ in case) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 08:26:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10447#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10447#comment:2/1247992007000000</guid>
      <description>&lt;p&gt;
Sanitizing to lowercase is not going to work in all cases.
&lt;/p&gt;
&lt;p&gt;
Remember most *nix filesystems are case sensitive, and thus, so are the URL's generated for paths.
&lt;/p&gt;
&lt;p&gt;
Without knowing what that function does, given it generates a filesystem path, mearly ignoring the domain name part of the settings could be a middleground. (As thats the only part that can be considered to be case-insensitive on every platform)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9873 (enforce a consistent home and siteurl www. pref) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 08:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9873#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9873#comment:3/1247990933000000</guid>
      <description>&lt;p&gt;
see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10447" title="#10447: defect (bug): get_home_path() fails when home url and site url differ in case (closed: fixed)"&gt;#10447&lt;/a&gt; for more potential side effects
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10447 (get_home_path() fails when home url and site url differ in case) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 08:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10447#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10447#comment:1/1247990904000000</guid>
      <description>&lt;p&gt;
The likelihood is it's also failing if the two differ by a www, but that's just another issue on top of the issues raised in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9873" title="#9873: defect (bug): enforce a consistent home and siteurl www. pref (closed: wontfix)"&gt;#9873&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10447 (get_home_path() fails when home url and site url differ in case) created</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 08:00:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10447/1247990448000000</guid>
      <description>&lt;p&gt;
If you set your blog's url and site url to the same thing, albeit with differing caps, get_home_path() returns / instead of ABSPATH.
&lt;/p&gt;
&lt;p&gt;
We should probably sanitize/lowercase the two. I've a user who was reporting the weirdest error related to an open_basedir restriction. No wonder it was returning errors...
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:52:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:7/1247989979000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:6/1247989967000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
register_taxonomy() can't flush the rules,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not directly, It'd be possible to flush the rules if the registered taxonomies changes however.. (ie. just store a list of the previously registered taxonomies and flush if it changes, Could be done on admin-access only as well)
&lt;/p&gt;
&lt;p&gt;
Would also help clean up after taxonomies which do not flush the rules once they're no longer around.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:5/1247989799000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;register_taxonomy()&lt;/code&gt; can't flush the rules, because it's called every time WP is loaded.  For efficiency the rewrite rules should be flushed only when they change, as they're stored in the database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:4/1247989294000000</guid>
      <description>&lt;p&gt;
No, and this helped - thanks. So it will be good if &lt;code&gt;register_taxonomy()&lt;/code&gt; could do it, or at least update documentation for this function to state this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7155 (calendar counterpart of getarchives_where) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7155#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7155#comment:4/1247988917000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:23:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:3/1247988213000000</guid>
      <description>&lt;p&gt;
Did you flush your rewrite rules?  New rules do not function until the old ones are flushed, which you can do by calling &lt;code&gt;$wp_rewrite-&amp;gt;flush_rules()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:2/1247988105000000</guid>
      <description>&lt;p&gt;
Sure. BTW, I use following permalink format: &lt;code&gt;/%year%/%monthnum%/%postname%/&lt;/code&gt;.
&lt;/p&gt;
&lt;pre class="wiki"&gt;  'mytax/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1&amp;amp;feed=$2' (length=40)
  'mytax/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1&amp;amp;feed=$2' (length=40)
  'mytax/([^/]+)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1&amp;amp;paged=$2' (length=41)
  'mytax/([^/]+)/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1' (length=32)
  'robots\.txt$' =&amp;gt; string 'index.php?robots=1' (length=18)
  '.*wp-atom.php$' =&amp;gt; string 'index.php?feed=atom' (length=19)
  '.*wp-rdf.php$' =&amp;gt; string 'index.php?feed=rdf' (length=18)
  '.*wp-rss.php$' =&amp;gt; string 'index.php?feed=rss' (length=18)
  '.*wp-rss2.php$' =&amp;gt; string 'index.php?feed=rss2' (length=19)
  '.*wp-feed.php$' =&amp;gt; string 'index.php?feed=feed' (length=19)
  '.*wp-commentsrss2.php$' =&amp;gt; string 'index.php?feed=rss2&amp;amp;withcomments=1' (length=34)
  'feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?&amp;amp;feed=$1' (length=18)
  '(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?&amp;amp;feed=$1' (length=18)
  'page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?&amp;amp;paged=$1' (length=19)
  'comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?&amp;amp;page_id=2&amp;amp;cpage=$1' (length=29)
  'comments/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?&amp;amp;feed=$1&amp;amp;withcomments=1' (length=33)
  'comments/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?&amp;amp;feed=$1&amp;amp;withcomments=1' (length=33)
  'comments/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?&amp;amp;paged=$1' (length=19)
  'search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?s=$1&amp;amp;feed=$2' (length=22)
  'search/(.+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?s=$1&amp;amp;feed=$2' (length=22)
  'search/(.+)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?s=$1&amp;amp;paged=$2' (length=23)
  'search/(.+)/?$' =&amp;gt; string 'index.php?s=$1' (length=14)
  'category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?category_name=$1&amp;amp;feed=$2' (length=34)
  'category/(.+?)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?category_name=$1&amp;amp;feed=$2' (length=34)
  'category/(.+?)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?category_name=$1&amp;amp;paged=$2' (length=35)
  'category/(.+?)/?$' =&amp;gt; string 'index.php?category_name=$1' (length=26)
  'tag/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?tag=$1&amp;amp;feed=$2' (length=24)
  'tag/(.+?)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?tag=$1&amp;amp;feed=$2' (length=24)
  'tag/(.+?)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?tag=$1&amp;amp;paged=$2' (length=25)
  'tag/(.+?)/?$' =&amp;gt; string 'index.php?tag=$1' (length=16)
  'author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?author_name=$1&amp;amp;feed=$2' (length=32)
  'author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?author_name=$1&amp;amp;feed=$2' (length=32)
  'author/([^/]+)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?author_name=$1&amp;amp;paged=$2' (length=33)
  'author/([^/]+)/?$' =&amp;gt; string 'index.php?author_name=$1' (length=24)
  '([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;day=$3&amp;amp;feed=$4' (length=44)
  '([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;day=$3&amp;amp;feed=$4' (length=44)
  '([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;day=$3&amp;amp;paged=$4' (length=45)
  '([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;day=$3' (length=36)
  '([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;feed=$3' (length=37)
  '([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;feed=$3' (length=37)
  '([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;paged=$3' (length=38)
  '([0-9]{4})/([0-9]{1,2})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2' (length=29)
  '([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;feed=$2' (length=25)
  '([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;feed=$2' (length=25)
  '([0-9]{4})/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;paged=$2' (length=26)
  '([0-9]{4})/?$' =&amp;gt; string 'index.php?year=$1' (length=17)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/?$' =&amp;gt; string 'index.php?attachment=$1' (length=23)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/trackback/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;tb=1' (length=28)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;feed=$2' (length=31)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;feed=$2' (length=31)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;cpage=$2' (length=32)
  '([0-9]{4})/([0-9]{1,2})/([^/]+)/trackback/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;name=$3&amp;amp;tb=1' (length=42)
  '([0-9]{4})/([0-9]{1,2})/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;name=$3&amp;amp;feed=$4' (length=45)
  '([0-9]{4})/([0-9]{1,2})/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;name=$3&amp;amp;feed=$4' (length=45)
  '([0-9]{4})/([0-9]{1,2})/([^/]+)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;name=$3&amp;amp;paged=$4' (length=46)
  '([0-9]{4})/([0-9]{1,2})/([^/]+)/comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;name=$3&amp;amp;cpage=$4' (length=46)
  '([0-9]{4})/([0-9]{1,2})/([^/]+)(/[0-9]+)?/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;name=$3&amp;amp;page=$4' (length=45)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/?$' =&amp;gt; string 'index.php?attachment=$1' (length=23)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/trackback/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;tb=1' (length=28)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;feed=$2' (length=31)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;feed=$2' (length=31)
  '[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;cpage=$2' (length=32)
  '([0-9]{4})/([0-9]{1,2})/comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;monthnum=$2&amp;amp;cpage=$3' (length=38)
  '([0-9]{4})/comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?year=$1&amp;amp;cpage=$2' (length=26)
  '.+?/attachment/([^/]+)/?$' =&amp;gt; string 'index.php?attachment=$1' (length=23)
  '.+?/attachment/([^/]+)/trackback/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;tb=1' (length=28)
  '.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;feed=$2' (length=31)
  '.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;feed=$2' (length=31)
  '.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?attachment=$1&amp;amp;cpage=$2' (length=32)
  '(.+?)/trackback/?$' =&amp;gt; string 'index.php?pagename=$1&amp;amp;tb=1' (length=26)
  '(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?pagename=$1&amp;amp;feed=$2' (length=29)
  '(.+?)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?pagename=$1&amp;amp;feed=$2' (length=29)
  '(.+?)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?pagename=$1&amp;amp;paged=$2' (length=30)
  '(.+?)/comment-page-([0-9]{1,})/?$' =&amp;gt; string 'index.php?pagename=$1&amp;amp;cpage=$2' (length=30)
  '(.+?)(/[0-9]+)?/?$' =&amp;gt; string 'index.php?pagename=$1&amp;amp;page=$2' (length=29)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:09:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446#comment:1/1247987384000000</guid>
      <description>&lt;p&gt;
can you post the full contents of $wp_rewrite-&amp;gt;rewrite_rules()?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10446 (Rewrite rules are not flushed when a New taxonomy is created) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 19 Jul 2009 07:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10446/1247986979000000</guid>
      <description>&lt;p&gt;
The code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class TestPlugin {
	function TestPlugin() {
		add_action( 'init', array( &amp;amp;$this, 'init' ) );
	}
	function init() {
		register_taxonomy( 'mytax', 'post', array('label' =&amp;gt; 'My Tax',
			'query_var' =&amp;gt; false, 'rewrite' =&amp;gt; true  ) );
	}
}
$wp_test_plugin = new TestPlugin();
&lt;/pre&gt;&lt;p&gt;
This plugin registers new taxonomy. It appears in Menu and on Edit Post page. Assigned values are also displayed by &lt;code&gt;the_taxonomies()&lt;/code&gt;. One thing which does not work are permalinks. WP generates URLs like &lt;code&gt;http://wordpress.local/mytax/test/&lt;/code&gt;, but they don't work - error 404. What's more, it looks that rewriting rules are registered correctly. I tried to call &lt;code&gt;$wp_rewrite-&amp;gt;rewrite_rules()&lt;/code&gt; just after registering taxonomy, and new rules are in place as expected:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  'mytax/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1&amp;amp;feed=$2' (length=40)
  'mytax/([^/]+)/(feed|rdf|rss|rss2|atom)/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1&amp;amp;feed=$2' (length=40)
  'mytax/([^/]+)/page/?([0-9]{1,})/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1&amp;amp;paged=$2' (length=41)
  'mytax/([^/]+)/?$' =&amp;gt; string 'index.php?taxonomy=mytax&amp;amp;term=$1' (length=32)
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>taxonomy.php.diff attached to Ticket #10445</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 19 Jul 2009 06:42:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10445/taxonomy.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10445/taxonomy.php.diff/1247985739000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10445 (Undefined variable: term  in wp-includes/taxonomy.php on line 188) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Sun, 19 Jul 2009 06:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10445/1247985724000000</guid>
      <description>&lt;p&gt;
Notice: Undefined variable: term in C:\wordpress.local\wp-includes\taxonomy.php on line 188
&lt;/p&gt;
&lt;p&gt;
This notice appears when taxonomy does not want query var. Attached patch fixes it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #7155 (calendar counterpart of getarchives_where) closed</title>
      
        <dc:creator>abelcheung</dc:creator>

      <pubDate>Sun, 19 Jul 2009 03:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7155#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7155#comment:3/1247975533000000</guid>
      <description>invalid: &lt;p&gt;
I changed my mind. I don't want to propose this patch for inclusion anymore.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10424 (change get_filesystem_method()'s code for direct to reflect actual purpose) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 03:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10424#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10424#comment:3/1247974272000000</guid>
      <description>&lt;p&gt;
But its not the folder you're talking about, its the actual file.. Shouldnt it fail if we open it with 'w' mask set? Or do we actually need to test writing something to the file as well..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10424 (change get_filesystem_method()'s code for direct to reflect actual purpose) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 19 Jul 2009 03:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10424#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10424#comment:2/1247974202000000</guid>
      <description>&lt;p&gt;
The creation of the temporary file should fail if the folder is not writable i'd have thought..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9887 (Problem that PNG thumbnail size increases more than original) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Sun, 19 Jul 2009 01:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9887#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9887#comment:15/1247965849000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10444 (posts_per_archive_page) created</title>
      
        <dc:creator>frumph</dc:creator>

      <pubDate>Sun, 19 Jul 2009 00:47:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10444/1247964471000000</guid>
      <description>&lt;p&gt;
posts_per_archive_page
&lt;/p&gt;
&lt;p&gt;
This is something I could use for the themes that I am working on, I see it's partially implemented in the core code but doesnt have a dashboard - settings - reading option value to set this; and is being set to the posts_per_page.
&lt;/p&gt;
&lt;p&gt;
Allowing the end-user to specify the main blog loop and archive+search loops postcounts as seperate #'s.
&lt;/p&gt;
&lt;p&gt;
finishing implentation of this would be very useful, if I knew how to make a .diff I would send you one =)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>