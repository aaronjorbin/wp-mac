<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #38566 (Dashicon font is rejected by Firefox) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 23:49:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38566#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38566#comment:3/1621813763950405</guid>
      <description>worksforme: &lt;p&gt;
I can no longer reproduce this with Firefox 88, which might mean this was fixed on the browser's end sometime in the past several years. I'm closing for now, but if anyone else is still seeing this issue please reopen. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Given the note above that the EOT format is no longer required for browser support, removing that from the dashicons CSS would be another potential fix. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53236 (Nonce lifespans are inaccurate and unintuitively affected by timezones) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 23 May 2021 23:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53236#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53236#comment:9/1621813691183843</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with Rarst that the best solution for WordPress here is a documentation improvement to indicate a nonce is valid for between 12 and 24 hours, and the nonce tick is for the maximum life span rather than the minimum.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I can see arguments either way as to whether the defined nonce tick should be maximum or minimum validity but as the codes been in place for many years, it needs to remain as is. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As the nonce functions are pluggable, the changes proposed in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53236/nonce-age-resolution.patch" title="Attachment 'nonce-age-resolution.patch' in Ticket #53236"&gt;nonce-age-resolution.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53236/nonce-age-resolution.patch" title="Download"&gt;​&lt;/a&gt; could be released as a plugin but I think they're risky to include in WordPress Core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've set the version to 2.5 as that's when &lt;code&gt;wp_nonce_tick()&lt;/code&gt; and the related filter were added with the tick being the maximum life span.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38558 (Customizer assigns invalid values to header_image_data theme mod ...) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 23:45:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38558#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38558#comment:5/1621813530929053</guid>
      <description>maybelater: &lt;p&gt;
Closing this for now since (based on elapsed time) it looks like there is in fact little-to-no code relying on this theme mod beyond what was fixed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38633" title="#38633: defect (bug): get_header_image_tag() doesn't always return the correct image (closed: fixed)"&gt;#38633&lt;/a&gt;. Please reopen if anyone finds other situations where this issue surfaces.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38549 (Additional CSS lost when changing themes) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 23:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38549#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38549#comment:13/1621813167009511</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The Modular Custom CSS plugin addresses the use case of persisting some CSS for all themes while maintaining separate theme-specific CSS: &lt;a class="ext-link" href="https://wordpress.org/plugins/modular-custom-css/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/modular-custom-css/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I still use this plugin on all of my sites and end up with a mix of mostly things that stay specific to the current thing and a few things that need to persist across theme switches. I don't think there are many cases where it would make sense to bring in &lt;em&gt;all&lt;/em&gt; of the CSS that was used to customize another theme. And given this plugin's current usage level, I'm not sure that core needs to do anything else here.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38530 (Uploading a 512x512 site icon creates a "cropped" duplicate in media ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 23:30:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38530#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38530#comment:3/1621812643707709</guid>
      <description>&lt;p&gt;
Also noting, for those annoyed with this behavior, than you can delete the original (non-cropped) version from the media library after the duplicated site-icon-specific "cropped" copy is created. If you don't want to see both versions in the media library.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #33011,​38530 batch updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 23:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=33011%2C38530</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=33011%2C38530/1621812540629661</guid>
      <description>duplicate: &lt;p&gt;
This is in fact the intended behavior as further discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33011" title="#33011: enhancement: Uploading a 512 x 512 site icon creates a duplicated image in the ... (closed: fixed)"&gt;#33011&lt;/a&gt;. The term "cropped" is used for consistency with cases where the image was actually cropped, but in reality means that there is a duplicate attachment post specifically representing the site icon and its associated cropped/resized variations.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38431 (-webkit-appearance rule should be removed from the CSS) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 23:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38431#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38431#comment:4/1621812127782303</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Does anyone regularly working with core CSS have input on the use of &lt;code&gt;webkit-appearance&lt;/code&gt;? Can/should it be removed from any uses in core?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 23:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915#comment:14/1621811778375724</guid>
      <description>&lt;p&gt;
This will be on hold until &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37914" title="#37914: enhancement: Taxonomy: Allow terms to be previewed before publishing (new)"&gt;#37914&lt;/a&gt; is addressed. In addition to the specific menus use case noted in this ticket, this is a major foundational piece to allowing things like post editing and full site building within customize changesets, under the umbrella goal to edit any aspect of a site with live preview, saved drafts, revisions, and scheduled changes.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53263 (Media galery new libraries) created</title>
      
        <dc:creator>hobbiasztalos</dc:creator>

      <pubDate>Sun, 23 May 2021 22:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53263</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53263/1621809066825630</guid>
      <description>&lt;p&gt;
Hello!&lt;br /&gt;
I found a weirdness in wp 5.7.2 I don't know if it's intentional or something went crazy for me.&lt;br /&gt;
So far, the media gallery has stored images by year / month, but since the transition to 5.7.2 it has been stored in year / month / day libraries.&lt;br /&gt;
I find this very unnecessary because sometimes I write the article 2-3 days in advance and but it also creates the directory for the day I don’t upload an image. This will waste about 4 kb of storage space on the server for every unnecessarily created empty directory and if I don't pay attention it will be a lot in a couple of years. I tried to look at what they had improved, but found nothing about it.&lt;br /&gt;
Who can turn off this daily directory somewhere? Have you met this yet?&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://1drv.ms/u/s!AkY7Ee0Yb2Vfhc0FhdZuP0lQQNjnUg?e=t6lBiE"&gt;&lt;img src="https://1drv.ms/u/s!AkY7Ee0Yb2Vfhc0FhdZuP0lQQNjnUg?e=t6lBiE" alt="https://1drv.ms/u/s!AkY7Ee0Yb2Vfhc0FhdZuP0lQQNjnUg" crossorigin="anonymous" title="https://1drv.ms/u/s!AkY7Ee0Yb2Vfhc0FhdZuP0lQQNjnUg" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>vanyukov</dc:creator>

      <pubDate>Sun, 23 May 2021 22:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:8/1621807922971950</guid>
      <description>&lt;p&gt;
@Rahmohn ,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would probably use the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#1-1-parameters-that-are-arrays"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP Documentation Standards&lt;/a&gt;, and at least change &lt;code&gt;string[]|array[]&lt;/code&gt; to &lt;code&gt;string|array&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53262 (wp_robots() (via wp_die) triggers a "doing_it_wrong_trigger_error", ...) created</title>
      
        <dc:creator>juliobox</dc:creator>

      <pubDate>Sun, 23 May 2021 21:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53262</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53262/1621806209201438</guid>
      <description>&lt;p&gt;
Hello there.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my plugin, I need to die early, like, right after the plugins are loaded, imagine this for a shortcut:&lt;br /&gt;
&lt;code&gt;add_action( 'plugins_loaded', 'wp_die' );&lt;/code&gt;&lt;br /&gt;
This is the output:&lt;br /&gt;
&lt;em&gt;Notice: is_embed was called incorrectly. Conditional query tags do not work before the query is run. Before then, they always return false. Please see Debugging in WordPress for more information. (This message was added in version 3.1.0.) in /wp-includes/functions.php on line 5313&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;#	Time	Memory	Function				Location
1	0.0002	369912	{main}( )				.../admin.php:0
2	0.0003	370552	require_once( '/wp-load.php' )		.../admin.php:34
3	0.0003	370960	require_once( '/wp-config.php' )	.../wp-load.php:37
4	0.0003	375568	require_once( '/wp-settings.php' )	.../wp-config.php:88
5	0.0410	1735152	do_action( )				.../wp-settings.php:423
6	0.0411	1735528	WP_Hook-&amp;gt;do_action( )			.../plugin.php:484
7	0.0411	1735528	WP_Hook-&amp;gt;apply_filters( )		.../class-wp-hook.php:316
8	0.0882	3856336	wp_die( )				.../class-wp-hook.php:292
9	0.0882	3874480	_default_wp_die_handler( )		.../common.php:275
10	0.0884	3876304	wp_robots( )				.../functions.php:3497
11	0.0884	3876304	apply_filters( )			.../robots-template.php:32
12	0.0884	3876712	WP_Hook-&amp;gt;apply_filters( )		.../plugin.php:212
13	0.0884	3878216	wp_robots_noindex_embeds( )		.../class-wp-hook.php:292
14	0.0884	3878216	is_embed( )				.../robots-template.php:93
15	0.0884	3878216	_doing_it_wrong( )			.../query.php:881
16	0.0885	3879304	trigger_error ( )			.../functions.php:5313
&lt;/pre&gt;&lt;p&gt;
another notice will be trigger, same thing but line 13 will be &lt;code&gt;wp_robots_noindex_search&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since WP 5.7 the &lt;code&gt;wp_robots()&lt;/code&gt; function is called in a &lt;code&gt;wp_die()&lt;/code&gt;, but &lt;code&gt;wp_die()&lt;/code&gt; can be called before the query is done, this is not too soon to die &lt;em&gt;(for once, got it?)&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A possible patch is to delay these default filters a bit later &lt;em&gt;(wp-includes/default-filters.php)&lt;/em&gt; instead of adding them right away:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'wp', 'wp_late_robots_check' );
function wp_late_robots_check() {
	add_filter( 'wp_robots', 'wp_robots_noindex_embeds' );
	add_filter( 'wp_robots', 'wp_robots_noindex_search' );
}
&lt;/pre&gt;&lt;p&gt;
Thanks for your attention.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37006 (Improve performance of widgets in the customizer (at scale)) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 20:12:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37006#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37006#comment:6/1621800743215187</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Milestoning for visibility - does the block-based widget editor in the customizer proposed for 5.8 fix this problem, is it the same, or is it worse? I suspect it may be fixed (or at least improved) because the block editor is more fully JS-based and may effectively lazy-load widget blocks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If it's fixed, then we can close this ticket on merge. If it's the same, then this can be moved back to future release. And if it's worse, then that also needs to be addressed for 5.8.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36911 (Customizer and Theme Installer spinners should have different z-index) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 20:07:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36911#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36911#comment:4/1621800463503237</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This patch needs testing and careful CSS review to move forward. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36877 (Custom Logo default sizing inconsistencies) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 20:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36877#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36877#comment:3/1621800347375676</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As long as flex-width and flex-height are correctly enabled, the default sizes will only be used as "suggested" text and potentially initial crop during the cropping step. There could be a relatively minor adjustment here to try to align this behavior with the defaults or we could leave it as-is since the issue is low-impact.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36733 (Use a custom customizer section for add-widgets and add-menu-items ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 20:00:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36733#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36733#comment:8/1621800024339486</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Block editing in widget areas in the customizer is now proposed as part of 5.8. Milestoning this again for visibility. At this point I would suggest either addressing this issue &lt;em&gt;with&lt;/em&gt; the changes in 5.8 or closing as &lt;code&gt;maybelater&lt;/code&gt;. In other words, making a final decision either way for 5.8.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36582 (Export main query from Customizer preview) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 19:56:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36582#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36582#comment:12/1621799796860836</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This would be a nice improvement to the customize API but appears to be generally low-impact for users since the occasional plugin that needs this can implement the fix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36559 (Using "widget" as part of setting title breaks the customizer since 4.5) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 19:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36559#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36559#comment:7/1621799388831151</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would now suggest closing this in favor of the documented restrictions on setting names (now here: &lt;a class="ext-link" href="https://developer.wordpress.org/themes/customize-api/customizer-objects/#settings"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/customize-api/customizer-objects/#settings&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is there anything else that core can easily do to flag these restrictions?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36441 (Customizer: when setting header image, site icon and logo, do not ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 19:06:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36441#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36441#comment:23/1621796803918900</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
To summarize the comments above, the custom logo frontend functions currently only work with media attachments that have been specifically cropped to the 512px size. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The most likely solution that I can come up with is to still "crop" the image behind the scenes (ie, create a copy of the attachment with 512px as the "full" size and then generate all of the site-icon-specific sizes) but to allow users to skip the step of selecting a cropzone. It should also be possible to "skip cropping" on non-square images and let WordPress auto-crop to square similar to the default thumbnail image size.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36191 (Support responsive images in WP_Customize_Media_Control) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 19:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36191#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36191#comment:32/1621796485035663</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@joemcgill does the media library have a way to send the full &lt;code&gt;srcset&lt;/code&gt; markup to the customize control JS now? I've had success with pulling srcset data from frontend post content markup and back into JS templates elsewhere. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ideally the &lt;code&gt;content_template&lt;/code&gt; would only have something like &lt;code&gt;srcset="{{ data.attachment.srcset }}"&lt;/code&gt; added to it and the rest of the logic happens in JS.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35559 (Image wrapped in anchor disappear in Customizer (Safari)) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35559#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35559#comment:25/1621795925054957</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Given the number of Safari updates in the past five years... does this still happen now? I don't have access to Safari to test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since this seems to be a browser-specific bug, the best chance of fixing is if the browser fixes the issue. However, it might be possible to fix in core if we can figure out exactly what causes the issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35241 (NetworkError in firebug error console) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35241#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35241#comment:14/1621795627743322</guid>
      <description>worksforme: &lt;p&gt;
I cannot reproduce this error testing with 5.8-beta on Firefox 88 on Windows. There are a few warnings (see above) but none seem critical or related to the error noted in this ticket. If anyone else can reproduce this issue presently with a different setup and more information, please reopen.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>firefox-88-customize-warnings.png attached to Ticket #35241</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:44:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35241/firefox-88-customize-warnings.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35241/firefox-88-customize-warnings.png/1621795452909326</guid>
      <description>&lt;p&gt;
Firefox 88 console warnings in wp-admin/customize.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34747 (Provide more flexibility for "You are customizing" text) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:37:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34747#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34747#comment:15/1621795032397135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It would still be useful to allow filtering the root-level customize text. However, the majority of use cases should be using panel, section, and control descriptions instead of changing the root level. The valid use cases may be few enough that it's acceptable to omit the filter and let them change the DOM with JS.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would propose holding on this pending resolution of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35186" title="#35186: enhancement: Put the Customizer &amp;#34;back&amp;#34; button next to the &amp;#34;Close&amp;#34; button (new)"&gt;#35186&lt;/a&gt;, and likely implementing this hook with the changes there if this text ends up staying.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47642 (Order by comment count - posts list tables) updated</title>
      
        <dc:creator>msea55</dc:creator>

      <pubDate>Sun, 23 May 2021 18:36:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47642#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47642#comment:37/1621794994553248</guid>
      <description>&lt;p&gt;
Hello people working on this ticket,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I recently came across this issue in a &lt;a href="https://core.trac.wordpress.org/ticket/53201"&gt;slightly different context &lt;/a&gt;. I see that &lt;a href="https://core.trac.wordpress.org/attachment/ticket/47642/patch.47642.20201030.1"&gt;the patch&lt;/a&gt; submitted by @ramon-fincken only looks for specific order criteria which are likely to produce duplicates. It is my opinion that the fix of adding an ID sort is useful no matter the order criteria passed in. For example, while post_title is unlikely to produce duplicates, it is still possible, and I see no harm in adding ID to that as well, similarly @gwwar mentioned the case of &lt;code&gt;menu_order&lt;/code&gt; which also may not be unique.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The context in which I came across this issue &lt;a href="https://core.trac.wordpress.org/ticket/53201"&gt;https://core.trac.wordpress.org/ticket/53201&lt;/a&gt; was in the admin ui on the page that displays posts. On this page, if no sort is selected, a sort of "post_date" is assigned on what is &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/c4fd5626638bd13c890c9cf6fe6bc50c4e4a1ff3/src/wp-includes/class-wp-query.php#L2328"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; line 2328. This is inside the "if" block of &lt;code&gt;if ( empty( $q['orderby'] ) )&lt;/code&gt;, for which @ramon-fincken 's patch edits the &lt;code&gt;else&lt;/code&gt; block. Which is to say, &lt;strong&gt;the patch does not work for my case&lt;/strong&gt; because it is too restrictive in where it applies.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think adding &lt;code&gt;ID&lt;/code&gt; is useful no matter what the passed in criteria, which is why I propose making the change a bit further down on what is &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/c4fd5626638bd13c890c9cf6fe6bc50c4e4a1ff3/src/wp-includes/class-wp-query.php#L2393"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; line 2393, after the order params, default order, and relevance order are all accounted for but before the filters at the end of the query, by adding the line &lt;code&gt;$orderby = $orderby ? $orderby . ', ID' : ' ID';&lt;/code&gt;. I don't know how to attach a diff like you guys did but it'd look like:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;...
                        if ( $search_orderby ) {
                                $orderby = $orderby ? $search_orderby . ', ' . $orderby : $search_orderby;
                        }
                }
+               //Add additional sort by order to break ties consistently for pagination https://core.trac.wordpress.org/ticket/47642
+               $orderby = $orderby ? $orderby . ', ID' : ' ID';
                if ( is_array( $post_type ) &amp;amp;&amp;amp; count( $post_type ) &amp;gt; 1 ) {
                        $post_type_cap = 'multiple_post_type';
                } else {
...
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This will resolve the issue for all sort orders except &lt;code&gt;rand&lt;/code&gt;. For &lt;code&gt;rand&lt;/code&gt; this addition doesn't hurt, but it also doesn't prevent this issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34436 (Issue with wp.customizer.panel('name').focus().) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34436#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34436#comment:3/1621794502867639</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This should be a relatively straightforward bug to patch. Likely a matter of adding a conditional to the &lt;code&gt;panel.focus()&lt;/code&gt; JS method that closes any open sections.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To test: open the customizer to editing a specific menu. Enter this into the browser console: &lt;code&gt;wp.customize.panel( 'nav_menus' ).focus();&lt;/code&gt;. Expected behavior is for the menu to close and the list of menus (top-level menu panel) to appear.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34061 (customizer search widgets input text is not verticaly aligned and dont ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:15:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34061#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34061#comment:5/1621793752029691</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This UI is likely being removed in 5.8 with the replacement of widgets with blocks in the customizer. This ticket can be closed as invalid if/when customizer block widgets are merged.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34042 (Conditional widget areas in Customizer) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34042#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34042#comment:2/1621793595757572</guid>
      <description>maybelater: &lt;p&gt;
Closing for now based on lack of movement/interest. Plugins are free to experiment with implementing (or removing) conditional visibility for widget areas and widgets. This can be reconsidered for core if there is more support for making a change.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #33779 (Menu Customizer: Show on screen?) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33779#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33779#comment:9/1621793240449602</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Suggesting close as &lt;code&gt;wontfix&lt;/code&gt; based on lack of movement and that the current behavior is a design decision as noted above. Does anyone feel strongly about adding screen options to hide post/taxonomy types from the add menu items panel?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33713 (Customizer: allowing to set files other than image for Header ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 18:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33713#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33713#comment:10/1621793048534947</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to media component for visibility, as the customizer uses the same media modal used elsewhere in core for this UI. If/when the media modal supports restricting uploads by file type, then the customize media controls can map their &lt;code&gt;mime_type&lt;/code&gt; parameters to the media JS accordingly. This may already be possible and not implemented correctly in the customize controls.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33589 (Using the customizer on wp-login.php (and similar)) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 17:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33589#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33589#comment:21/1621792723814830</guid>
      <description>&lt;p&gt;
Thinking about this again, I'm not sure if the customizer should "work" on the login screen by default. That essentially moves in the direction of customizing wp-admin screens with the customizer, which may be out of scope for core. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/29071" title="#29071: enhancement: Make it easier to include an instance of the Customizer outside of ... (reopened)"&gt;#29071&lt;/a&gt; suggests improvements to allow the customizer to be loaded in standalone contexts and may be a better approach for the login screen.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33469 (Customizer Menus: Restore active menu to a location after selecting ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 17:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33469#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33469#comment:7/1621792373311317</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Does anyone else have an opinion on this? I would lean towards closing as &lt;code&gt;wontfix&lt;/code&gt; given the potential usability confusion and technical difficulty to implement. Customizer revisions might help address the underlying concerns here.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33267 (Customizer Theme details: too many events) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 17:49:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33267#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33267#comment:5/1621792152322037</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Noting that this might have been fixed when the themes panel was redesignwed in WordPress 4.9. But probably not, and this probably also needs to be fixed on &lt;code&gt;wp-admin/themes.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33139 (Customizer on mobile: 'Save &amp; Publish' button may overflow when translated.) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 23 May 2021 17:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33139#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33139#comment:4/1621791998612180</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would suggest deferring to translators to re-phrase stings like this that are longer than the English version. Is there an established workflow for specific translations to request core CSS adjustments like those linked above?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we change the English string, it can probably be "Publish", to distinguish from the ability to save drafts that now exists.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52429 (Combine/globalize the CSS/JS between Site Health &amp; Privacy Settings) updated</title>
      
        <dc:creator>notlaura</dc:creator>

      <pubDate>Sun, 23 May 2021 17:36:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52429#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52429#comment:12/1621791380661250</guid>
      <description>&lt;p&gt;
@Clorith Thank you for the notes – I was not familiar with this history, so this is helpful to know. I chose to consolidate the styles in edit.css because it looked to be enqueued on each admin screen – I am not 100% sure of this though, and need to validate it. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
My goal with this approach was to make it possible to edit CSS for both areas in a single location for the 5.8 milestone. I feel that moving the styles to a different stylesheet and generalizing the selector names would be better suited for a future release when there is more clarity about how/where these styles will be used. Then, we can intentionally choose generic selector names and introduce the overhead of a new stylesheet once there is a plan to utilize it for more than these couple of components.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Again though, I am new to the history of these features and this CSS, so please let me know if my thinking is off-base here!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52429 (Combine/globalize the CSS/JS between Site Health &amp; Privacy Settings) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 23 May 2021 17:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52429#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52429#comment:11/1621789644265735</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/laras126"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;laras126&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1266#issuecomment-846594725"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1266&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@ryelle thank you! What tool are you using to generate these diffs? Is that related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/209" title="#209: defect (bug): Subject line of sent e-mails is not UTF-8 (closed: fixed)"&gt;#209&lt;/a&gt;, or something you are doing locally?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I believe I have resolved the two problematic issues from your screenshots, and added a new selector for &lt;code&gt;.health-check-widget-title-section&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53039 (Not invalidating files in opcode cache after core update (cont’d)) updated</title>
      
        <dc:creator>stodorovic</dc:creator>

      <pubDate>Sun, 23 May 2021 15:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53039#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53039#comment:9/1621783505613719</guid>
      <description>&lt;p&gt;
I've checked WP core auto-updates (5.7.1 -&amp;gt; 5.7.2) in previous weeks and I didn't find any issues (various locales including couple &lt;em&gt;sr_RS&lt;/em&gt; installations).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>Rahmohn</dc:creator>

      <pubDate>Sun, 23 May 2021 13:57:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:7/1621778230440094</guid>
      <description>&lt;p&gt;
Hi @vanyukov and @peterwilsoncc &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've tried to improve the documentation of the $url parameter. I would appreciate any feedback from you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44098 (Widget classes when custom widget class is namespaced) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Sun, 23 May 2021 13:53:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44098#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44098#comment:19/1621778035708335</guid>
      <description>&lt;p&gt;
Seems a better solution that patch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 23 May 2021 13:53:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:6/1621778032622491</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1283"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1283&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/Rahmon"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Rahmon&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This change tries to improve the documentation of &lt;code&gt;$url&lt;/code&gt; param in &lt;code&gt;the wp_resource_hints&lt;/code&gt; filter. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/52842"&gt;https://core.trac.wordpress.org/ticket/52842&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22430 (wp_ob_end_flush_all bug when zlib.output_compression = On) updated</title>
      
        <dc:creator>normancates</dc:creator>

      <pubDate>Sun, 23 May 2021 13:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22430#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22430#comment:18/1621777837479943</guid>
      <description>&lt;p&gt;
Hi ya. I was wondering about the state of this fix. I still get this error on new wordpress sites. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So now I have a micro plugin that I just install that does the fix that @openwrite noted at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13" title="#13: defect (bug): &amp;amp;prime; entity code prevents RSS and Atom feeds from validating (closed: fixed)"&gt;#13&lt;/a&gt; above. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As far as I can tell, it quells the problem, and doesn't introduce other problems...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How can we help get this into core? I honestly don't understand why it's been 9 years since this first report. Or to be charitable, 20 months since @openwrite supplied a possible solution.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53039 (Not invalidating files in opcode cache after core update (cont’d)) updated</title>
      
        <dc:creator>Krstarica</dc:creator>

      <pubDate>Sun, 23 May 2021 12:32:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53039#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53039#comment:8/1621773158222837</guid>
      <description>&lt;p&gt;
@dimadin Automatic upgrade to 5.7.2 worked just fine.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Did you make any changes?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53039 (Not invalidating files in opcode cache after core update (cont’d)) updated</title>
      
        <dc:creator>dimadin</dc:creator>

      <pubDate>Sun, 23 May 2021 12:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53039#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53039#comment:7/1621772322209904</guid>
      <description>&lt;p&gt;
@Krstarica Did you have the same issue after version 5.7.2? Was anything different?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44098.diff attached to Ticket #44098</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 10:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44098/44098.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44098/44098.diff/1621764449935041</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44098 (Widget classes when custom widget class is namespaced) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 09:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44098#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44098#comment:18/1621763115824279</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44098#comment:15" title="Comment 15"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That might still cause some previously saved namespaced widgets to disappear or lose their settings due to the option name change, but let's try this during the beta phase and see if we have any reports of that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we do get any reports, we might want to consider only doing this for the &lt;code&gt;classname&lt;/code&gt; value and not for &lt;code&gt;id_base&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On second thought, if the only concerns here are the class name and the PHP warning, it seems like a safer approach to just address that, instead of changing &lt;code&gt;id_base&lt;/code&gt;. Since the handbook has an &lt;a class="ext-link" href="https://developer.wordpress.org/themes/functionality/widgets/#example-with-a-namespace"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;example with a namespace&lt;/a&gt;, it might be too common a pattern in the wild to cause any unnecessary breakage.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Let's also switch to underscores to avoid a mix of underscores and hyphens. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44098/44098.diff" title="Attachment '44098.diff' in Ticket #44098"&gt;44098.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44098/44098.diff" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #44098 (Widget classes when custom widget class is namespaced) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 08:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44098#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44098#comment:17/1621760245530984</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53259 (my WordPress sites does not update my admin user email correctly) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 08:53:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53259#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53259#comment:3/1621760038273158</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53259 (my WordPress sites does not update my admin user email correctly) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 08:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53259#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53259#comment:2/1621760026558592</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44098 (Widget classes when custom widget class is namespaced) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 08:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44098#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44098#comment:16/1621759845803509</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50953" title="Widgets: Make sure `WP_Widget` constructor creates a correct `id_base` ..."&gt;50953&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Make sure &lt;code&gt;WP_Widget&lt;/code&gt; constructor creates a correct &lt;code&gt;id_base&lt;/code&gt; value for a namespaced widget class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;id_base&lt;/code&gt; value is used for the widget's &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; attributes and also for the option name which stores the widget settings (unless the widget specifies a custom &lt;code&gt;option_name&lt;/code&gt; value).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With this change, any backslashes in the &lt;code&gt;id_base&lt;/code&gt; for a namespaced widget class are converted to hyphens, making it easier to style the output or target the widget with JavaScript.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also avoids a &lt;code&gt;preg_match(): Compilation failed&lt;/code&gt; PHP warning from &lt;code&gt;next_widget_id_number()&lt;/code&gt; on the Widgets screen, previously caused by unescaped backslashes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Mte90, hermpheus, rogerlos, welcher, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44098" title="#44098: defect (bug): Widget classes when custom widget class is namespaced (closed: fixed)"&gt;#44098&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [50953]: Widgets: Make sure `WP_Widget` constructor creates a correct `id_base` ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 08:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50953</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50953/1621759844963193</guid>
      <description>&lt;p&gt;
Widgets: Make sure &lt;code&gt;WP_Widget&lt;/code&gt; constructor creates a correct &lt;code&gt;id_base&lt;/code&gt; value for a namespaced widget class.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;id_base&lt;/code&gt; value is used for the widget's &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; attributes and also for the option name which stores the widget settings (unless the widget specifies a custom &lt;code&gt;option_name&lt;/code&gt; value).
&lt;/p&gt;
&lt;p&gt;
With this change, any backslashes in the &lt;code&gt;id_base&lt;/code&gt; for a namespaced widget class are converted to hyphens, making it easier to style the output or target the widget with JavaScript.
&lt;/p&gt;
&lt;p&gt;
This also avoids a &lt;code&gt;preg_match(): Compilation failed&lt;/code&gt; PHP warning from &lt;code&gt;next_widget_id_number()&lt;/code&gt; on the Widgets screen, previously caused by unescaped backslashes.
&lt;/p&gt;
&lt;p&gt;
Props Mte90, hermpheus, rogerlos, welcher, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44098" title="#44098: defect (bug): Widget classes when custom widget class is namespaced (closed: fixed)"&gt;#44098&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44098 (Widget classes when custom widget class is namespaced) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 23 May 2021 08:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44098#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44098#comment:15/1621759648239397</guid>
      <description>&lt;p&gt;
Thanks for the PR!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting that this also has backward compatibility concerns, as the &lt;code&gt;id_base&lt;/code&gt; value is not only used for the widget's &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; attributes, but also for the option name which stores the widget settings (unless the widget specifies a custom &lt;code&gt;option_name&lt;/code&gt; value).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we only take the last part of the widget class name as &lt;code&gt;id_base&lt;/code&gt;, it could conflict with a widget of the same name from another namespace, or a non-namespaced widget of the same name.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So it seems better to take the whole widget class name (including the namespace) and convert backslashes to hyphens, that way we should get a unique value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That might still cause some previously saved namespaced widgets to disappear or lose their settings due to the option name change, but let's try this during the beta phase and see if we have any reports of that.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we do get any reports, we might want to consider only doing this for the &lt;code&gt;classname&lt;/code&gt; value and not for &lt;code&gt;id_base&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34659 (Whitelist for validation functions which only accept one argument) updated</title>
      
        <dc:creator>simongcc</dc:creator>

      <pubDate>Sun, 23 May 2021 04:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34659#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34659#comment:29/1621742819636457</guid>
      <description>&lt;p&gt;
(just reading from REST API Handbook)&lt;br /&gt;
Is it a good idea to use func_get_arg() to get the number of arguments passed?&lt;br /&gt;
This functions seems available since PHP 4, so compatibility might not be a problem.&lt;br /&gt;
With this, less explicit work to do by specifying the number of arguments. While development teams could dynamically adjust inside the core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Not sure if there is other concerns that I did not aware of.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33107 (Add a Menu button: when clicked the icon does not rotate around center ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 21:08:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33107#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33107#comment:10/1621717728660078</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;If&lt;/em&gt; we want to fix this, then we should probably look at options like using an SVG instead of an icon font. But, this is low priority and a visual quirk that most people probably don't notice (depending on browser).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33064 (Customizer: form inputs need a way to have hidden labels) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 21:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33064#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33064#comment:19/1621717323838255</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unfortunately this got stuck on picking a name and lost momentum. Of the options above, &lt;code&gt;$use_label_as_screen_reader_text&lt;/code&gt; seems the clearest to me. Noting that this variable name becomes part of the public customize API and needs to be documented in the handbook as well, here: &lt;a class="ext-link" href="https://developer.wordpress.org/themes/customize-api/customizer-objects/#controls"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/customize-api/customizer-objects/#controls&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33064/33064.2.diff" title="Attachment '33064.2.diff' in Ticket #33064"&gt;33064.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33064/33064.2.diff" title="Download"&gt;​&lt;/a&gt; looks good to me - can someone update the name of the variable and confirm it still applies against trunk? If so, then this is ready to go. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53261 (jQuery deprecated click function) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 22 May 2021 20:55:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53261#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53261#comment:2/1621716923502943</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1282"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1282&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/kapilpaul"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;kapilpaul&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This PR will fix the deprecated jQuery click function in &lt;code&gt;js/_enqueues/vendor/plupload/handlers.js&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53261"&gt;https://core.trac.wordpress.org/ticket/53261&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33016 (Make dashicons available for site icon) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 20:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33016#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33016#comment:7/1621716877722695</guid>
      <description>maybelater: &lt;p&gt;
I'm going to close this for now based on lack of movement/interest and the plugin territory notes above. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is definitely a need for a good built-in library of site icons, so users can pick something more specific than the WordPress logo without needing a custom icon. There's opportunity for plugins to fill this need and core may circle back to working on this in the future. That will likely be a bigger project and probably won't use Dashicons. Ideally there could be something like an open icon library along the lines of the block pattern directory.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>53261.2.diff attached to Ticket #53261</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 22 May 2021 20:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53261/53261.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53261/53261.2.diff/1621716381814329</guid>
      <description>&lt;p&gt;
Created patch with updated coding standard.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33006 (Customizer: Image height set incorrectly under current header when a ...) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 20:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33006#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33006#comment:4/1621716364229799</guid>
      <description>worksforme: &lt;p&gt;
I can't reproduce the issue with the height of the current header after cropping. It should be based on the image aspect ratio and taking the full width of the sidebar. If anyone else is seeing something different or broken, please feel free to reopen this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53261 (jQuery deprecated click function) updated</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 22 May 2021 20:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53261#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53261#comment:1/1621716099481330</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>53261.diff attached to Ticket #53261</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 22 May 2021 20:40:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53261/53261.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53261/53261.diff/1621716038258589</guid>
      <description>&lt;p&gt;
Created patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53261 (jQuery deprecated click function) created</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 22 May 2021 20:39:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53261</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53261/1621715943479512</guid>
      <description>&lt;p&gt;
Hi,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;src/js/_enqueues/vendor/plupload/handlers.js&lt;/code&gt; jQuery click function is still there which is deprecated. Need to update this as per the new convention.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32826 ("Custom Link" text in languages other than English) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 20:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32826#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32826#comment:16/1621715755494167</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Are translations still using the long text as shown in the original screenshot on this ticket?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would suggest closing at this point unless this has become an ongoing issue. I don't presently mind the length of the string in English and have similarly been fine with longer names for custom post type and taxonomy menu item types.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32768 (Customizer Widgets and Themes search improvements) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 20:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32768#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32768#comment:9/1621715364333037</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@afercia what is left to do here? From &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32768#comment:8" title="Comment 8"&gt;8&lt;/a&gt; it sounds like these items are fixed now and this ticket can be retroactively closed as fixed in 4.9 (the themes panel redesign).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Noting that customizer widgets are being replaced with blocks in 5.8, so that piece should be addressed with the upcoming version if it wasn't already fixed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32728 (Customizer Menus: Accessibility: reordering menu items should have ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 20:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32728#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32728#comment:15/1621714974049899</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There is clear direction above on the preferred text and location from the accessibility team. Re-typing as a bug because the experience is broken for some users and is worse in the customizer than in the equivalent wp-admin screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The next step is to create a patch. The patch will likely need to edit the customize menu item control's HTML template in addition to the JS methods that handle reordering and changing depth to keep the text updated when items are moved around.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31980 (Customizer Theme Switcher Details Modal: previous/next/close buttons ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 20:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31980#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31980#comment:11/1621714337681376</guid>
      <description>&lt;p&gt;
The theme modal part actually didn't change much with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41648" title="Customize: Introduce a new experience for discovering, installing, and ..."&gt;[41648]&lt;/a&gt; but since this was a device/browser-specific issue when originally reported, I would guess that changes in iOS have since resolved the issue. I don't have iOS but if anyone else with it can confirm this is now fixed, then this ticket can probably be closed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31436 (Handle conflicts in concurrent Customizer sessions) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 20:00:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31436#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31436#comment:24/1621713644319408</guid>
      <description>&lt;p&gt;
It would be interesting to see some prototyping here for Gutenberg phase 3 - concurrent editing. The customize API, and the types of settings that it includes, are modular enough that there's a good baseline for enabling concurrency and locking relatively quickly. Previous work (linked above) looks like a good start for implementation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This would be separate from whatever mechanism blocks and the block editor end up with, but could work for widget-blocks in the customizer and bring this improvement to non-block-based themes. And it could offer insights into a better overall API approach for the block version's build out.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28580 (Speed up customizer by lazy-loading panels/sections/controls and ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 22 May 2021 19:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28580#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28580#comment:37/1621713263468468</guid>
      <description>maybelater</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #30969 (adding theme support  for  'custom-header' or 'custom-background' ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 19:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30969#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30969#comment:7/1621713064072439</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The history here is that these pages were kept for compatibility for users with JavaScript disabled when we deprecated the pages in favor of the customizer. The JS runs in the browser on load to hide the menu items with CSS. If they don't get hidden, it's actually probably because there's a JS error somewhere. There are several places sprinkled throughout wp-admin where similar logic applies for showing customizer links.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;hide-if-customize&lt;/code&gt; is essentially used as &lt;code&gt;hide-if-has-js&lt;/code&gt;. The customize user capability is mapped to edit-theme-options by default, so users with access to the header and background should have access to the customizer also.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At this point, can lose all of that logic and remove the links entirely? How many pages in wp-admin work at all with JS disabled?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29288 (Settings updated within the Customizer Preview are not synced up to ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 19:32:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29288#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29288#comment:8/1621711948160476</guid>
      <description>&lt;p&gt;
While this is something that plugins can implement as a workaround, as shown above, it should really be implemented in core. I would expect settings to snyc both ways as the default behavior.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53260 (SSL) closed</title>
      
        <dc:creator>fierevere</dc:creator>

      <pubDate>Sat, 22 May 2021 19:32:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53260#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53260#comment:1/1621711942855449</guid>
      <description>invalid: &lt;p&gt;
@ranatirzah2210 &lt;br /&gt;
Please do not use Core Trac for WordPress troubleshooting, open a topic on support forum instead: &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/#new-topic-0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/#new-topic-0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This trac is for reporting bugs in WordPress core. Your issue is not a bug in the core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53259 (my WordPress sites does not update my admin user email correctly) closed</title>
      
        <dc:creator>fierevere</dc:creator>

      <pubDate>Sat, 22 May 2021 19:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53259#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53259#comment:1/1621711927486367</guid>
      <description>invalid: &lt;p&gt;
@solarrise &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please do not use Core Trac for WordPress troubleshooting, open a topic on support forum instead: &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/#new-topic-0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/#new-topic-0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This trac is for reporting bugs in WordPress core. Your issue is not a bug in the core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #29071 (Make it easier to include an instance of the Customizer outside of ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 19:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29071#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29071#comment:25/1621711770929075</guid>
      <description>&lt;p&gt;
I proposed using a bootstrapped customizer instance as a potential strategy for the new block-based widgets screen here: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/26012"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/26012&lt;/a&gt;. That won't be happening for the inital release in 5.8, but could come in the future.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For that and similar projects, bootstrapping the customizer brings benefits like live preview, changesets (scheduling, drafting, etc.), and access to the customize API. And it offers the flexibility to use a completely different user interface from the standard customizer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At this point, I think we would need a catalyst project in WordPress core to support pursuing this issue further. The block-based widgets screen could be that project if there's enough demand for preview functionality in the future. I would love to see front-end customizer bootstrapping, but that would take a very dedicated champion to pursue at this point.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28580 (Speed up customizer by lazy-loading panels/sections/controls and ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 19:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28580#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28580#comment:36/1621711035325394</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's currently looking like a full customizer refactor is unlikely to happen. Initial block support in widgets is coming in 5.8, integrating with the current customize infrastructure. A potential catalyst for this change could be an implementation of template editing or global (block) styles into the customizer. Those features are probably more likely to stay separate; a detailed proposal of options lives here: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/30496"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/30496&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For now, I suggest closing this issue as &lt;code&gt;maybelater&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53260 (SSL) created</title>
      
        <dc:creator>ranatirzah2210</dc:creator>

      <pubDate>Sat, 22 May 2021 18:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53260</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53260/1621708906759759</guid>
      <description>&lt;p&gt;
I am using the Ocean WP theme, latest version of WordPress is installed, added HTTPS to both sites but still my site is not secure, did a health check, deleted unnecessary plugins and themes, using ele pro, have ele add on's...Help&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28570 (Introduce pretty permalinks for Customizer) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 18:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28570#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28570#comment:15/1621708720541088</guid>
      <description>maybelater: &lt;p&gt;
While this would still be nice to have, it doesn't result in much of a usability improvement compared to some other long-standing issues. Given that a big API for routers and/or significant customize refactors are not likely to happen at this point, efforts would be better spent on issues with direct user-oriented improvements (like browser history and deep linking in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/28536" title="#28536: enhancement: Add browser history and deep linking for navigation in Customizer preview (reviewing)"&gt;#28536&lt;/a&gt; - without pretty permalinks).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'll close for now, but feel free to reopen with a patch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #28536 (Add browser history and deep linking for navigation in Customizer preview) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 18:32:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28536#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28536#comment:57/1621708369935321</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe that the major blockers have been eliminated here. Customize-loader is long gone. My general feeling is that browser history and deep linking is an improvement even if it only works, say, 80% of the time. Right now you lose context with every page navigation, so usually maintaining context correctly is a big improvement.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The next step would be for someone to refresh the current path noted in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28536#comment:44" title="Comment 44"&gt;44&lt;/a&gt; and see what else is needed to implement this change.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 22 May 2021 18:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:37/1621708097618916</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/gziolo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;gziolo&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1118#issuecomment-846446527"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1118&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nitpick: the &lt;code&gt;preload_paths&lt;/code&gt; part of &lt;code&gt;block_editor_preload_paths_all&lt;/code&gt; doesn't sound good imho. What is being preloaded from these paths?&lt;br /&gt;
I see the new filter name follows the deprecated filter name, but perhaps it can be a bit more helpful/descriptive. Maybe something like &lt;code&gt;block_editor_initial_data&lt;/code&gt; or &lt;code&gt;block_editor_preload_data&lt;/code&gt;?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It allows providing REST API paths that are going to be preloaded and passed to the client.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How about:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;block_editor_rest_api_preload&lt;/code&gt; for the function
&lt;/li&gt;&lt;li&gt;&lt;code&gt;block_editor_rest_api_preload_paths&lt;/code&gt; for the filter
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Applied in 22f6768faff35013d89feb8ba6804d7d65426992.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27786 (Suggested x Default images for header) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 18:24:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27786#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27786#comment:4/1621707887960528</guid>
      <description>wontfix: &lt;p&gt;
This is an easy and reasonable change; however, the custom header page has been deprecated and redirected to the customizer for several years now. Closing due to lack of movement.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22880 (Customize Themes without activation) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 18:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22880#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22880#comment:14/1621707140822187</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have run into several use cases for this now. In particular, it would be nice to use the changeset-preview link to share a preview of a theme switch for review. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At its simplest, even without revisions UI, this ticket could enable the "save draft", "schedule", and preview link options during a theme switch. Currently the only way to save &lt;em&gt;any&lt;/em&gt; customizer changes during a theme switch is to publish them to the live site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As noted above, customizer revisions might need to be implemented first. Once that's done (now consolidated to &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/21666" title="#21666: feature request: Customizer Revisions (previously reset/undo/revert) (assigned)"&gt;#21666&lt;/a&gt;), then there's a UI for revisions that clarifies expectations about different sets of drafted changes. Then work can proceed on this ticket to allow mechanisms to save draft changes for a theme switch. Discussions about enabling branched revisions (ie, multiple sets of drafted changes potentially with different themes) could follow as a final (most complex) step.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22037 (Customizer: Live preview fetches page but does not display (show error ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 18:03:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22037#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22037#comment:36/1621706608009551</guid>
      <description>&lt;p&gt;
To clarify, the scope for this ticket is now to display an error message when the preview fails to load for an reason. &lt;em&gt;Something&lt;/em&gt; should be displayed as a user-facing error, and potentially include any console errors or other information if possible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The next steps are to create a patch (with a proposed design) and/or a design mockup.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21666,​31089 batch updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 17:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21666%2C31089</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21666%2C31089/1621706190439521</guid>
      <description>duplicate: &lt;p&gt;
The discussion on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/21666" title="#21666: feature request: Customizer Revisions (previously reset/undo/revert) (assigned)"&gt;#21666&lt;/a&gt; evolved to encapsulate the UI for changeset revisions, including design mockups. I'm going to close this as a duplicate so that efforts can be focused there. This ticket provides good additional background for the work there.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #21666 (Customizer Revisions (previously reset/undo/revert)) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 17:53:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:53/1621706035063361</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Renaming to reflect the direction that the majority of discussion on this ticket moved toward. I'm also going to merge &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31089" title="#31089: enhancement: Customize: Add revisions for changesets (closed: duplicate)"&gt;#31089&lt;/a&gt; into this ticket since this one has more specific design progress.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There's a lot of good work here to explore how revision management could work in the customizer. The technical framework is largely present. There are design concepts in progress. Revision management will become even more important with the customizer adding support for block editing in WordPress 5.8.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@melchoyce do you want to continue owning this? Or could you share suggested next steps or a design path forward for someone else to pick up?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21627 (Filter for custom-background CSS selector) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 17:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21627#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21627#comment:32/1621705310676313</guid>
      <description>&lt;p&gt;
It seems like implementing this filter requires more work than it may be worth. Themes can use their own image controls instead of the custom background theme-support feature set. And block based themes will use entirely different mechanisms for background images.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unless anyone wants to pick this back up, I suggest closing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21455 (HiDPI (retina) theme custom backgrounds) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 17:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21455#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21455#comment:15/1621704836118905</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
WordPress 4.7 added user-facing controls for background-size, background-position, and background-attachment in the customizer. It's possible to upload a high-resolution image and scale it down accordingly with that system (although there's a limitation on maximum size with uploads auto-scaling to 2560px widths now).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regardless, blocks are set to replace the specific implementation of custom backgrounds moving forward with block-based themes. So I recommend closing this as either (retroactively) fixed in 4.7 or wontfix.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18584 (Nav menus need more hooks for extensibility (on admin page &amp; in customizer)) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 22 May 2021 17:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18584#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18584#comment:97/1621704359604414</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Switching component back to menus because this does apply to both menu management interfaces.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The long-term direction is to replace menus with blocks (as noted in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18584#comment:90" title="Comment 90"&gt;90&lt;/a&gt;). The approach there offers more flexibility at a user level, although it may actually be more difficult for plugins to extend in the way that this ticket discusses. That work is happening in the Gutenberg plugin. In the meantime, a single hook was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47190" title="Menus: Introduce `wp_nav_menu_item_custom_fields` action that fires ..."&gt;[47190]&lt;/a&gt; to address the most common need for extensibility in the current menus system. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Therefore, this ticket could probably be closed when (and if) the current menu management interfaces are replaced with blocks. That has been proposed and in process potentially for 5.8 in wp-admin but not yet started for the customizer.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53259 (my WordPress sites does not update my admin user email correctly) created</title>
      
        <dc:creator>solarrise</dc:creator>

      <pubDate>Sat, 22 May 2021 16:38:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53259</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53259/1621701493025887</guid>
      <description>&lt;p&gt;
I have changed admin email address for two of my websites. But, WordPress auto plugin information still send me notification to my old email address. I also changed my website hosting service to new hosting services. Does it make difference or Is it a bug in WordPress?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Padma&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53226 (Password reset screen: `wp_lang` GET parameter is lost when a wrong ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 22 May 2021 15:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53226#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53226#comment:2/1621695617172971</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1281"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1281&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/kapilpaul"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;kapilpaul&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This PR contains a fix of &lt;code&gt;wp_lang&lt;/code&gt; GET parameter is lost when a wrong email address is provided on the password reset screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53226"&gt;https://core.trac.wordpress.org/ticket/53226&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31673 (Multisite UX: deleting a plugin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 14:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31673#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31673#comment:7/1621695590072902</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31673 (Multisite UX: deleting a plugin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 14:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31673#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31673#comment:6/1621695581452721</guid>
      <description>&lt;p&gt;
Just noting that the warning shown on these screenshots is  &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.2/src/wp-admin/plugins.php?marks=339-351#L336"&gt;still in core&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.2/src/wp-admin/plugins.php#L336" title="Download"&gt;​&lt;/a&gt;, but is no longer displayed, apparently due to the "Shiny Updates" changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37714" title="Update/Install: Shiny Updates v2.
Gone are the days of isolation and ..."&gt;[37714]&lt;/a&gt; for WordPress 4.6. See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/53255" title="#53255: defect (bug): WordPress multisite allows you to delete plugins which are active on ... (reopened)"&gt;#53255&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So the UX could probably use some rethinking to make sure the warning is still displayed when appropriate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53255 (WordPress multisite allows you to delete plugins which are active on ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 14:56:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53255#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53255#comment:3/1621695381695477</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the additional details! Indeed, I was able to reproduce the issue.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The warning is &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.2/src/wp-admin/plugins.php?marks=339-351#L336"&gt;still in core&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.2/src/wp-admin/plugins.php#L336" title="Download"&gt;​&lt;/a&gt;, but it looks like it's no longer displayed, apparently due to the "Shiny Updates" changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37714" title="Update/Install: Shiny Updates v2.
Gone are the days of isolation and ..."&gt;[37714]&lt;/a&gt; for WordPress 4.6.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53226 (Password reset screen: `wp_lang` GET parameter is lost when a wrong ...) updated</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 22 May 2021 14:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53226#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53226#comment:1/1621695160293689</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>53226.diff attached to Ticket #53226</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 22 May 2021 14:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53226/53226.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53226/53226.diff/1621695085368369</guid>
      <description>&lt;p&gt;
Created patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44098 (Widget classes when custom widget class is namespaced) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 14:32:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44098#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44098#comment:14/1621693956495407</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52628 (Docblock improvements for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 13:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52628#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52628#comment:30/1621688893326554</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50952" title="Docs: Use 3-digit, x.x.x-style semantic versioning for two ..."&gt;50952&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Use 3-digit, x.x.x-style semantic versioning for two &lt;code&gt;_doing_it_wrong()&lt;/code&gt; calls.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37985" title="Docs: Use 3-digit, x.x.x-style semantic versioning for ..."&gt;[37985]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38420" title="Security: Trigger a `_doing_it_wrong()` when `check_ajax_referer()` is ..."&gt;[38420]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39021" title="Docs: Add much more complete and syntactically correct documentation ..."&gt;[39021]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52628" title="#52628: task (blessed): Docblock improvements for WP 5.8 (closed: fixed)"&gt;#52628&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50952]: Docs: Use 3-digit, x.x.x-style semantic versioning for two ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 13:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50952/1621688892369787</guid>
      <description>&lt;p&gt;
Docs: Use 3-digit, x.x.x-style semantic versioning for two &lt;code&gt;_doing_it_wrong()&lt;/code&gt; calls.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37985" title="Docs: Use 3-digit, x.x.x-style semantic versioning for ..."&gt;[37985]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38420" title="Security: Trigger a `_doing_it_wrong()` when `check_ajax_referer()` is ..."&gt;[38420]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39021" title="Docs: Add much more complete and syntactically correct documentation ..."&gt;[39021]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52628" title="#52628: task (blessed): Docblock improvements for WP 5.8 (closed: fixed)"&gt;#52628&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53255 (WordPress multisite allows you to delete plugins which are active on ...) reopened</title>
      
        <dc:creator>denisflorin197</dc:creator>

      <pubDate>Sat, 22 May 2021 13:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53255#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53255#comment:2/1621688796569990</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But, I don't see any warnings. The only thing I get is that if I want to remove the plugin. See video: &lt;a class="ext-link" href="https://www.loom.com/share/d69900d4098e4bebbefc80b307bbdfb8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.loom.com/share/d69900d4098e4bebbefc80b307bbdfb8&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #52867 (Add capability to set default format for image sub-sizes.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 12:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52867#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52867#comment:46/1621688327925626</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50951" title="Media: Some documentation and test improvements for the ..."&gt;50951&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Some documentation and test improvements for the &lt;code&gt;image_editor_output_format&lt;/code&gt; filter:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update the filter DocBlock per the documentation standards.
&lt;/li&gt;&lt;li&gt;Use a shorter variable name for consistency with the surrounding code.
&lt;/li&gt;&lt;li&gt;Delete the test file before performing assertions to avoid leftovers in case the test fails.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50943" title="Media: Introduces `image_editor_output_format` filter for setting ..."&gt;[50943]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52867" title="#52867: enhancement: Add capability to set default format for image sub-sizes. (closed: fixed)"&gt;#52867&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50951]: Media: Some documentation and test improvements for the ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 22 May 2021 12:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50951/1621688326983508</guid>
      <description>&lt;p&gt;
Media: Some documentation and test improvements for the &lt;code&gt;image_editor_output_format&lt;/code&gt; filter:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update the filter DocBlock per the documentation standards.
&lt;/li&gt;&lt;li&gt;Use a shorter variable name for consistency with the surrounding code.
&lt;/li&gt;&lt;li&gt;Delete the test file before performing assertions to avoid leftovers in case the test fails.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50943" title="Media: Introduces `image_editor_output_format` filter for setting ..."&gt;[50943]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52867" title="#52867: enhancement: Add capability to set default format for image sub-sizes. (closed: fixed)"&gt;#52867&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53257 (Function `block_has_support` needs some unit tests) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 22 May 2021 12:33:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53257#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53257#comment:2/1621686826529349</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/gziolo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;gziolo&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1280#issuecomment-846402024"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1280&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What I wanted to verify though is if this is the expected behavior in the case we have declared supports for a key with an empty array. Should this return true as it does now?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You can file an issue to discuss it separately. It's an edge case that you don't see in a real life. I believe it should return &lt;code&gt;false&lt;/code&gt; but it's also could be considered wrong input data like providing a number.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53258 (access on wordpress administration) closed</title>
      
        <dc:creator>fierevere</dc:creator>

      <pubDate>Sat, 22 May 2021 10:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53258#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53258#comment:1/1621680306877540</guid>
      <description>invalid: &lt;p&gt;
@tobst1 &lt;br /&gt;
Please do not use Core Trac for WordPress troubleshooting, open a topic on support forum instead: &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/#new-topic-0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/#new-topic-0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This trac is for reporting bugs in WordPress core. Your issue is not a bug in the core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53258 (access on wordpress administration) created</title>
      
        <dc:creator>tobst1</dc:creator>

      <pubDate>Sat, 22 May 2021 10:08:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53258</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53258/1621678118894202</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Today, I can not to access on my wordpress administration service.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I connect to the link, my site / wp-admin and because of Coming Soon Page &amp;amp; Maintenance Mode, the site is under maintenance and I don’t have access to the wordpress interface to modify the site or deactivate the extension.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
How I can do about login?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53257 (Function `block_has_support` needs some unit tests) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 22 May 2021 09:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53257#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53257#comment:1/1621676332073145</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1280"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1280&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/ntsekouras"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ntsekouras&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53257"&gt;https://core.trac.wordpress.org/ticket/53257&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This PR just adds some unit tests for &lt;code&gt;block_has_support&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I wanted to verify though is if this is the expected behavior in the case we have declared &lt;code&gt;supports&lt;/code&gt; for a key with an &lt;code&gt;empty array&lt;/code&gt;. Should this return true as it does now?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Example test that passes with an empty array:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;public function test_block_has_support_empty_array() {
	$this-&amp;gt;registry-&amp;gt;register(
		'core/example',
		array(
			'supports' =&amp;gt; array(
				'align' =&amp;gt; array(),
			),
		)
	);
	$block_type = $this-&amp;gt;registry-&amp;gt;get_registered( 'core/example' );
	$align_support = block_has_support( $block_type, array( 'align' ) );
	$this-&amp;gt;assertSame( $align_support, true );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53257 (Function `block_has_support` needs some unit tests) created</title>
      
        <dc:creator>ntsekouras</dc:creator>

      <pubDate>Sat, 22 May 2021 09:26:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53257</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53257/1621675609725743</guid>
      <description>&lt;p&gt;
Function &lt;code&gt;block_has_support&lt;/code&gt; needs some unit tests&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53256 (Cover images within a column break the editor) created</title>
      
        <dc:creator>sprockettechweb</dc:creator>

      <pubDate>Sat, 22 May 2021 04:09:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53256</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53256/1621656578151265</guid>
      <description>&lt;p&gt;
If text is added over an image (or cover images are used) within a column, the images stretch and the block editor becomes unusable. Tested on multiple themes with all plugins disabled. To recreate, add a column to a page (with 1 or 2 columns). Add 2 cover images within one column (or two images and add text over it).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>