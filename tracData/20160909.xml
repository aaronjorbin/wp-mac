<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #38014 (blank /wp-admin/index.php after upgrade from 4.5.x, missing Save ...) created</title>
      
        <dc:creator>scaturan</dc:creator>

      <pubDate>Fri, 09 Sep 2016 23:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38014</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38014/1473464563222073</guid>
      <description>&lt;p&gt;
Platform:
&lt;/p&gt;
&lt;p&gt;
Apache/2.4.23 (FreeBSD)
PHP/5.6.25
mySQL 5.5.51
&lt;/p&gt;
&lt;p&gt;
Like all my WordPress installations over the years, my codebase is unmodified with no plugins present or active. I don't use 3rd party plugins either, just whatever stock theme comes with latest.zip
&lt;/p&gt;
&lt;p&gt;
Also, I perform upgrades manually.
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Shortly after upgrading from 4.5.x (fresh install, just copied over previous .htaccess and wp-config.php files) - /wp-admin/index.php renders blank. I can login just fine (but get redirected to a blank page), and can also access /wp-admin/edit.php to modify posts or pages without any issues.
&lt;/p&gt;
&lt;p&gt;
a 200 HTTP status code is sent by Apache when I open /wp-admin/index.php
&lt;/p&gt;
&lt;p&gt;
Also, Settings &amp;gt; General &amp;gt; Save Settings (button) is not visible unless language-related code is removed. The same button is visible in all other areas like Writing, Discussion, etc..
&lt;/p&gt;
&lt;p&gt;
On a fresh install of 4.5, I don't see this particular issue, so clearly, there's a code change somewhere.
&lt;/p&gt;
&lt;p&gt;
Please advise, thank you.
&lt;/p&gt;
&lt;p&gt;
Steve
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35614 (Cannot check capabilities on single taxonomy terms) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 23:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35614#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35614#comment:11/1473462638731836</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35614/35614.2.patch" title="Attachment '35614.2.patch' in Ticket #35614"&gt;35614.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35614/35614.2.patch" title="Download"&gt;​&lt;/a&gt; is an updated patch with additional tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 09 Sep 2016 23:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:7/1473462549777369</guid>
      <description>&lt;p&gt;
We recently split a high profile marketing page with a very tight deadline (buzz words!) for the university into 15 "sections" (panels) that we then combine into a single front page via shortcode. Very quick/dirty to solve a workflow problem. But!
&lt;/p&gt;
&lt;p&gt;
It was great to witness the immediate benefit of having a team of several writers and editors be able to bounce around between sections at the same time and build out this overall page without stepping on toes. It's probably the closest we've come so far to providing an experience similar (that's a stretch) to a collaborative workflow through Google Docs.
&lt;/p&gt;
&lt;p&gt;
I have no answers or big opinions, but I'm happy to see this being worked on. :)
&lt;/p&gt;
&lt;p&gt;
I will note that we used pages for this and titled them as "Section - &lt;span class="underline"&gt;&lt;/span&gt;_" so that we could keep track. This enabled us to have our page builder and other custom tools available for use on each of the individual sections.
&lt;/p&gt;
&lt;p&gt;
There are probably many ways to solve this, but I think either using an existing post type or creating a new one is a good idea to start with.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35614.2.patch attached to Ticket #35614</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 23:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35614/35614.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35614/35614.2.patch/1473462510323520</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 22:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:9/1473461818742059</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by macmanx. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473461816003563"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 09 Sep 2016 22:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:30/1473460443092504</guid>
      <description>&lt;p&gt;
Hi @lgpref,
&lt;/p&gt;
&lt;p&gt;
I definitely understand to frustration of trying to sort through several different possible causes for why something is broken on your website. In this case, I can tell you with some certainty that the issue is a result of your server returning "404 not found" errors for the images in question. First, the campaign browser link you've shared is not using HTTPS, so there is no reason to be concerned about serving non-HTTPS resources. The reason &lt;code&gt;srcset&lt;/code&gt; is relevant is that when an image element contains a &lt;code&gt;srcset&lt;/code&gt; attribute, modern browsers ignore the &lt;code&gt;src&lt;/code&gt; value and choose one of the URLs listed in the &lt;code&gt;srcset&lt;/code&gt; attribute.
&lt;/p&gt;
&lt;p&gt;
For the markup of the image your referenced:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;img width="300" height="150"
src="http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-300x150.jpg"
class="attachment-medium size-medium wp-post-image" alt="Glassland Pierce opt" style="float: right; margin-left: 5px;"
srcset="http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-150x75.jpg 150w,
http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-200x100.jpg 200w,
http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-300x150.jpg 300w,
http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-400x200.jpg 400w,
http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-540x272.jpg 540w,
http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-600x300.jpg 600w,
http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-768x384.jpg 768w,
http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt.jpg 800w"
sizes="(max-width: 300px) 100vw, 300px" border="0"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
You're correct that the &lt;code&gt;src&lt;/code&gt; image is found on your server, but on a retina device, the image requested will most likely be 2x the normal size — or in this case: &lt;a class="ext-link" href="http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-600x300.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-600x300.jpg&lt;/a&gt; —  and that URL does return a 404.
&lt;/p&gt;
&lt;p&gt;
If you open up the developer console in Chrome (or whichever browser you use) you will see something like &lt;a class="ext-link" href="https://cloudup.com/cC7wsDS5_5I"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this screenshot&lt;/a&gt; which shows the 404 errors instead of blocked insecure content warnings. I'm not sure why these images are not being found on your server, but the first thing to check would be to make sure those images files actually have not been removed. If so, you may need to use a plugin like &lt;a class="ext-link" href="https://wordpress.org/plugins/regenerate-thumbnails/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Regenerate Thumbnails&lt;/a&gt; to rebuild those image files.
&lt;/p&gt;
&lt;p&gt;
For more assistance, I would suggest &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;opening a support request&lt;/a&gt; and referencing this ticket.
&lt;/p&gt;
&lt;p&gt;
Hope that helps,
Joe
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 21:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:6/1473457213473657</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1473457210000358"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 21:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:5/1473457125757969</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473457123001000"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 21:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:33/1473456373008072</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20491/20491.4.diff" title="Attachment '20491.4.diff' in Ticket #20491"&gt;20491.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20491/20491.4.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove underscore.js as a dependency of &lt;code&gt;wp-i18n.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt;esc_attr_x()&lt;/code&gt;, &lt;code&gt;esc_html__()&lt;/code&gt; and &lt;code&gt;esc_html_x()&lt;/code&gt; in addition to &lt;code&gt;esc_attr__()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I added both esc_attr_* and esc_html_* functions even though in PHP those actually do the same. Escaping is done through I private &lt;code&gt;escape&lt;/code&gt; method which is inspired by &lt;code&gt;_.escape()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20491.4.diff attached to Ticket #20491</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 21:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20491/20491.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20491/20491.4.diff/1473456123922691</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35817 (Force users to set strong passwords) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 09 Sep 2016 20:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35817#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35817#comment:12/1473454292188860</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35817#comment:10" title="Comment 10"&gt;ericlewis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;If we required strong passwords, users would probably do the least minimum change to their weak password to meet the rule. eg. instead of &lt;code&gt;june2286&lt;/code&gt; I might use &lt;code&gt;june2286!&lt;/code&gt; and perhaps reuse this password across different websites.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I think this is okay. Stronger passwords are preferable to weak passwords.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;This may or may not align with project goals.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I would say that security is a feature, and protecting sites from basic brute-force attacks make WordPress a better experience out-of-the-box.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20714 (Theme customizer: Impossible to preview a search results page) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 20:22:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20714#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20714#comment:19/1473452559427128</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good @westonruter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33240 (Introduce a capability for previewing posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 20:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33240#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33240#comment:4/1473452509867586</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This turns out to be more complicated that it first seems.
&lt;/p&gt;
&lt;p&gt;
After patching several places in core with a &lt;code&gt;preview_post&lt;/code&gt; capability check, I realised that previewing draft posts is a very different action to previewing changes to published posts, but they're both called previews.
&lt;/p&gt;
&lt;p&gt;
We might need a collection of caps such as &lt;code&gt;preview_published_posts&lt;/code&gt;, &lt;code&gt;preview_others_posts&lt;/code&gt;, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 20:15:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:7/1473452127086822</guid>
      <description>fixed: &lt;p&gt;
Based on @dd32's comments above, I'm re-closing this. As noted, incorrect values for &lt;code&gt;SERVER_PROTOCOL&lt;/code&gt; are not uncommon, and the current array of protocol version numbers will serve us for quite a few years to come.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #32360 (Add oEmbed provider unit tests) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32360#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32360#comment:15/1473450842501972</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I guess it makes sense for the tests to remain in a group which never gets tested by default (ie. without passing the --group external-oembed flag), but then I'm not sure if that's super valuable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just ran into this, because the &lt;code&gt;&amp;lt;exclude&amp;gt;&amp;lt;group&amp;gt;external-oembed&amp;lt;/group&amp;gt;&amp;lt;/exclude&amp;gt;&lt;/code&gt; added to phpunit.xml.dist wasn't automatically picked up by my custom phpunit.xml.
&lt;/p&gt;
&lt;p&gt;
I definitely think it's wise to have tests for this stuff, and I think it's smart for them not to run by default. But if they're failing on a regular and predictable basis, then they shouldn't be in core (or perhaps they should be commented out in the dataProvider while the details are ironed out).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>ChiefAlchemist</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:100/1473450601054970</guid>
      <description>&lt;p&gt;
fwiw (read: I'm seeing this too late), this wasn't really a function issue. It was a structure and theme'ing mindset issue. It's possible using get_template_part() along with being mindful of structure and the fact that someone else might use the parent to build a child. On the other hand, if anyone can do anything anyway they way...well, that's going to be a painful way to approach something that by definition is structured. I know. I know. #Duh :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37962 (NOT EXISTS tax_query triggers debug notice on get_queried_object()) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37962#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37962#comment:4/1473450507216545</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38586" title="Query: Eliminate unnecessary `wp_list_filter()` call in ..."&gt;38586&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Eliminate unnecessary &lt;code&gt;wp_list_filter()&lt;/code&gt; call in &lt;code&gt;get_queried_object()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The refactor in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30711" title="Editor: hide the DFW v2 button when editor-expand is off. Fixes #30568."&gt;[30711]&lt;/a&gt; swapped out the old &lt;code&gt;queries&lt;/code&gt; property for the&lt;br /&gt;
new &lt;code&gt;queried_terms&lt;/code&gt;, but should also have gotten rid of the now-&lt;br /&gt;
superfluous &lt;code&gt;wp_list_filter()&lt;/code&gt; call.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37962" title="#37962: defect (bug): NOT EXISTS tax_query triggers debug notice on get_queried_object() (closed: fixed)"&gt;#37962&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38586]: Query: Eliminate unnecessary `wp_list_filter()` call in ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38586</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38586/1473450506729504</guid>
      <description>&lt;p&gt;
Query: Eliminate unnecessary &lt;code&gt;wp_list_filter()&lt;/code&gt; call in &lt;code&gt;get_queried_object()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The refactor in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30711" title="Editor: hide the DFW v2 button when editor-expand is off. Fixes #30568."&gt;[30711]&lt;/a&gt; swapped out the old &lt;code&gt;queries&lt;/code&gt; property for the
new &lt;code&gt;queried_terms&lt;/code&gt;, but should also have gotten rid of the now-
superfluous &lt;code&gt;wp_list_filter()&lt;/code&gt; call.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37962" title="#37962: defect (bug): NOT EXISTS tax_query triggers debug notice on get_queried_object() (closed: fixed)"&gt;#37962&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37962 (NOT EXISTS tax_query triggers debug notice on get_queried_object()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37962#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37962#comment:3/1473449783010152</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38585" title="Query: Avoid PHP notice in `get_queried_object()` when query contains ..."&gt;38585&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Avoid PHP notice in &lt;code&gt;get_queried_object()&lt;/code&gt; when query contains &lt;code&gt;NOT EXISTS&lt;/code&gt; tax query.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnjamesjacoby.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37962" title="#37962: defect (bug): NOT EXISTS tax_query triggers debug notice on get_queried_object() (closed: fixed)"&gt;#37962&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38585]: Query: Avoid PHP notice in `get_queried_object()` when query contains ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:36:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38585/1473449782492155</guid>
      <description>&lt;p&gt;
Query: Avoid PHP notice in &lt;code&gt;get_queried_object()&lt;/code&gt; when query contains &lt;code&gt;NOT EXISTS&lt;/code&gt; tax query.
&lt;/p&gt;
&lt;p&gt;
Props johnjamesjacoby.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37962" title="#37962: defect (bug): NOT EXISTS tax_query triggers debug notice on get_queried_object() (closed: fixed)"&gt;#37962&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:8/1473449663349759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1473449661000067"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:33:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:81/1473449596601514</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1473449594000065"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37962 (NOT EXISTS tax_query triggers debug notice on get_queried_object()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37962#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37962#comment:2/1473449498402330</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch. Looks good to me.
&lt;/p&gt;
&lt;p&gt;
This raises a semi-related issue, which is that the change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30711" title="Editor: hide the DFW v2 button when editor-expand is off. Fixes #30568."&gt;[30711]&lt;/a&gt; renders the &lt;code&gt;wp_list_filter()&lt;/code&gt; just above this block superfluous; there's no point in filtering terms (rather than clauses) by &lt;code&gt;operator&lt;/code&gt;, and in any case, &lt;code&gt;queried_terms&lt;/code&gt; always necessarily contains the matched terms rather than not-matched terms. I'll pull that out under the guise of the current ticket as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38013 (Static Front Page section/controls should be contextual and allow ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38013#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38013#comment:1/1473449441769166</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38013/38013.0.diff" title="Attachment '38013.0.diff' in Ticket #38013"&gt;38013.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38013/38013.0.diff" title="Download"&gt;​&lt;/a&gt; implements the contextual (active callback) part, mostly.
&lt;/p&gt;
&lt;p&gt;
The second part (syncing the created pages to the &lt;code&gt;page_for_posts&lt;/code&gt; and &lt;code&gt;page_for_posts&lt;/code&gt; controls) is facilitated by the control in the &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-object-selector"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Object Selector&lt;/a&gt; feature plugin:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/38013/static-front-page-with-object-selector-controls.png"&gt;&lt;img width="300" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/38013/static-front-page-with-object-selector-controls.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that the Object Selector Control also integrates with &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Customize Posts&lt;/a&gt; in that it will display a “Add New” button which will cause a new page to be created and allow you to edit its fields right in the customizer. Collapsing the section for the newly-created page brings you back then to the static front page control with the newly-created page then selected.
&lt;/p&gt;
&lt;p&gt;
So too, the Customize Posts will provide a way to edit page stubs created in the customizer. (See &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/issues/253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-customize-posts#253&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:74/1473449156718436</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1473449154000056"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>static-front-page-with-object-selector-controls.png attached to Ticket #38013</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38013/static-front-page-with-object-selector-controls.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38013/static-front-page-with-object-selector-controls.png/1473449052568065</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>38013.0.diff attached to Ticket #38013</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:21:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38013/38013.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38013/38013.0.diff/1473448884096582</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38013 (Static Front Page section/controls should be contextual and allow ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38013</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38013/1473448612690747</guid>
      <description>&lt;p&gt;
With the introduction of the ability to add new page stubs via Nav Menu Items (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;) this also brings focus to the Static Front Page. If there are no created published pages, the registration of this section and its controls is skipped entirely (checking &lt;code&gt;get_pages()&lt;/code&gt;). However, since a page (stub) can actually be created inside the customizer, it would stand to reason that this newly created page should also be able to be assigned as the static front page or page for posts.
&lt;/p&gt;
&lt;p&gt;
There are a few part to this:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Register &lt;code&gt;static_front_page&lt;/code&gt; section and controls regardless if there are published pages, and add &lt;code&gt;active_callbacks&lt;/code&gt; that return true if &lt;code&gt;0 !== count( get_pages( 'number' =&amp;gt; 1 ) )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Sync the page stubs created via nav menus into the &lt;code&gt;dropdown-pages&lt;/code&gt; controls for &lt;code&gt;page_on_front&lt;/code&gt; and &lt;code&gt;page_for_posts&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;And then lastly there is providing a seamless way to actually edit the content of these pages that get assigned to the homepage or the page for posts. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38002" title="#38002: enhancement: Customize: provide a path to editing posts created in nav menus (closed: maybelater)"&gt;#38002&lt;/a&gt; (Customize: provide a path to editing posts created in nav menus)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16379" title="#16379: task (blessed): Better UI for doing &amp;#34;Page on Front&amp;#34; (closed: wontfix)"&gt;#16379&lt;/a&gt; (Better UI for doing "Page on Front")
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15311 (dynamic image resize (on the fly) using already available functions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:15:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15311#comment:125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15311#comment:125/1473448527566390</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1473448523000042"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20714 (Theme customizer: Impossible to preview a search results page) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20714#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20714#comment:18/1473448493886812</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'll commit unless there is any feedback to the contrary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:10:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:91/1473448237173280</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1473448227000035"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37970 (Editing anchor link after copying adds admin url) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:09:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37970#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37970#comment:4/1473448172783535</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37970#comment:2" title="Comment 2"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Actually I just noticed the link is incorrect when you paste it
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looking a bit more, I think the rest of the absolute URL is added on copying the link. Try to copy such link from another site/domain.
&lt;/p&gt;
&lt;p&gt;
This appears to be the way the browsers work when you copy a link whose href consist only of a fragment, i.e. &lt;code&gt;&amp;lt;a href="#something"&amp;gt;test&amp;lt;/a&amp;gt;&lt;/code&gt;. Not really sure we or the TinyMCE devs can do much about that. It "looks like" a standard URL on pasting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:39/1473447866176022</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1473447862000026"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38012 (Improve data validation in plugin.php) created</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Fri, 09 Sep 2016 19:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38012</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38012/1473447862585113</guid>
      <description>&lt;p&gt;
function plugin_basename does not do proper data validation of $realdir variable before attempting to use strpos():
&lt;/p&gt;
&lt;p&gt;
PHP Warning:  strpos(): Empty needle in /wp-includes/plugin.php on line 736
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:60/1473446066917767</guid>
      <description>&lt;p&gt;
A side by side comparision (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-compare.png" title="Attachment '22058-compare.png' in Ticket #22058"&gt;22058-compare.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-compare.png" title="Download"&gt;​&lt;/a&gt;) between the current UI and the proposed one.
&lt;/p&gt;
&lt;p&gt;
Here I also added back the options for background repeat:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;No Repeat
&lt;/li&gt;&lt;li&gt;Repeat Horizontally
&lt;/li&gt;&lt;li&gt;Repeat Vetically
&lt;/li&gt;&lt;li&gt;Both
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm not yet convinced if this should be limited to repeat/no repeat only. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-background-patterns.png" title="Attachment '22058-background-patterns.png' in Ticket #22058"&gt;22058-background-patterns.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-background-patterns.png" title="Download"&gt;​&lt;/a&gt; for some common repeat patterns. While the second scenario may not be used as much today (fixed-width content with vertically repeated background), the first one may still apply in many cases (top aligned horizontally repeated background).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22058-background-patterns.png attached to Ticket #22058</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22058/22058-background-patterns.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22058/22058-background-patterns.png/1473446006495559</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38011 (WP_Hook class late assignment behavior change) created</title>
      
        <dc:creator>salcode</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38011</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38011/1473445995964665</guid>
      <description>&lt;p&gt;
The recent addition of the &lt;code&gt;WP_Hook&lt;/code&gt; class has introduced a change in behavior when a function is added to the currently executing action with an earlier priority than that which is currently being executed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Example&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The following code defines a shortcode &lt;code&gt;[WP_Hook_priority_example]&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_shortcode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Hook_priority_example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wp_hook_priority_example'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_hook_priority_example&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_hook_priority_example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'add_other_functions'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_hook_priority_example'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// This function is called with a priority of 10 on the hook `wp_hook_priority_example`.
&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;add_other_functions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_hook_priority_example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'print20'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// Assign print5() to priority 5 (even though priority 5 has passed already).
&lt;/span&gt;        &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_hook_priority_example'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'print5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;print5&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;p&amp;gt;5&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;print20&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;p&amp;gt;20&amp;lt;/p&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;strong&gt;Prior to the Introduction of the WP_Hook Class&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This code will output
&lt;/p&gt;
&lt;pre class="wiki"&gt;20
5
&lt;/pre&gt;&lt;p&gt;
For clarification, I don't think this is a logical behavior but it is the current behavior in WordPress 4.6 and earlier.
&lt;/p&gt;
&lt;p&gt;
Even though we are executing code assigned to &lt;code&gt;wp_hook_priority_example&lt;/code&gt; with &lt;strong&gt;priority&lt;/strong&gt; &lt;code&gt;10&lt;/code&gt;, when we assign a function to the same hook using a priority that has passed (e.g. &lt;code&gt;5&lt;/code&gt;) the function is still executed.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;After the Introduction of the WP_Hook Class&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
This same shortcode executed after the introduction of the WP_Hook class displays only
&lt;/p&gt;
&lt;pre class="wiki"&gt;20
&lt;/pre&gt;&lt;p&gt;
I believe this is the more logical behavior, however in terms of backwards compatibility I believe it is worth considering making this behavior consistent with the previous versions of WordPress.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>22058-compare.png attached to Ticket #22058</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22058/22058-compare.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22058/22058-compare.png/1473445970875009</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:32/1473445966392795</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20491/20491.3.diff" title="Attachment '20491.3.diff' in Ticket #20491"&gt;20491.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20491/20491.3.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add &lt;code&gt;wp.i18n.esc_attr__()&lt;/code&gt; using &lt;code&gt;_.escape()&lt;/code&gt; including tests
&lt;/li&gt;&lt;li&gt;Fix &lt;code&gt;wp.i18n.numberFormat()&lt;/code&gt; implementation
&lt;/li&gt;&lt;li&gt;Fix inline docs to declare optional params according to JSDoc standards
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20491/20491-applied.diff" title="Attachment '20491-applied.diff' in Ticket #20491"&gt;20491-applied.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20491/20491-applied.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Leverage &lt;code&gt;wp.i18n&lt;/code&gt; almost anywhere except for some customizer parts as I had no time.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This will be helpful for testing the string extraction. I had a quick chat with @ocean90 today and he generously volunteered to extend &lt;code&gt;makepot.php&lt;/code&gt; to make this work.
&lt;/p&gt;
&lt;p&gt;
JS strings will be added to the resulting POT files as usual. After that, JS strings need to be exported as JSON files. GlotPress already supports exporting strings based on the source (using the &lt;code&gt;filters&lt;/code&gt;GET param for example), and I have a &lt;a class="ext-link" href="https://github.com/swissspidy/glotpress-json"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;GlotPress plugin&lt;/a&gt; in the works for the JSON export. I'll further test this plugin and will work on adding it to GlotPress core once it's ready.
&lt;/p&gt;
&lt;p&gt;
Some remaining tasks / questions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;In PHP there's a &lt;code&gt;gettext&lt;/code&gt; filter for people to override translations. Do we need a way for developers to filter translations in JS?
&lt;/li&gt;&lt;li&gt;Add &lt;code&gt;wp.i18n.esc_attr_x&lt;/code&gt; and probably &lt;code&gt;esc_html_*&lt;/code&gt; equivalents as well.
&lt;/li&gt;&lt;li&gt;Figure out the best way for devs to load the JSON files when enqueuing scripts and adjust &lt;code&gt;wp.i18n. addTranslations()&lt;/code&gt; accordingly
&lt;/li&gt;&lt;li&gt;&lt;del&gt;Make sure &lt;code&gt;wp-i18n.js&lt;/code&gt; and &lt;code&gt;jed.js&lt;/code&gt; get properly minified when building&lt;/del&gt; nothing to worry about
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think I can handle (most of) these core parts while @ocean90 works on &lt;code&gt;makepot.php&lt;/code&gt;. Of course any help is appreciated.
&lt;/p&gt;
&lt;p&gt;
Anything I'm missing?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:4/1473445943878930</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1473445939000140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:31:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:3/1473445861147955</guid>
      <description>&lt;p&gt;
@celloexpressions wow thanks for catching comments couldn't be left :/
&lt;/p&gt;
&lt;p&gt;
I haven't thought the development of this out so far. If I look at what Pique has now:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Panel 1
	$wp_customize-&amp;gt;add_section( 'pique_panel1', array(
		'title'           =&amp;gt; esc_html__( 'Panel 1', 'pique' ),
		'active_callback' =&amp;gt; 'is_front_page',
		'panel'           =&amp;gt; 'pique_options_panel',
		'description'     =&amp;gt; __( 'Add a background image to your panel by setting a featured image in the page editor. If you don&amp;amp;rsquo;t select a page, this panel will not be displayed.', 'pique' ),
	) );
	$wp_customize-&amp;gt;add_setting( 'pique_panel1', array(
		'default'           =&amp;gt; false,
		'sanitize_callback' =&amp;gt; 'pique_sanitize_numeric_value',
	) );
	$wp_customize-&amp;gt;add_control( 'pique_panel1', array(
		'label'   =&amp;gt; esc_html__( 'Panel Content', 'pique' ),
		'section' =&amp;gt; 'pique_panel1',
		'type'    =&amp;gt; 'dropdown-pages',
	) );
	$wp_customize-&amp;gt;add_setting( 'pique_panel1_background', array(
		'default'           =&amp;gt; 'default',
		'sanitize_callback' =&amp;gt; 'sanitize_hex_color',
		'transport'         =&amp;gt; 'postMessage',
	) );
	$wp_customize-&amp;gt;add_control( 'pique_panel1_background', array(
		'label'   =&amp;gt; esc_html__( 'Background Color', 'pique' ),
		'section' =&amp;gt; 'pique_panel1',
		'type'    =&amp;gt; 'color',
	) );
	$wp_customize-&amp;gt;add_setting( 'pique_panel1_opacity', array(
		'default'           =&amp;gt; 'default',
		'sanitize_callback' =&amp;gt; 'pique_sanitize_opacity',
		'transport'         =&amp;gt; 'postMessage',
	) );
	$wp_customize-&amp;gt;add_control( 'pique_panel1_opacity', array(
		'label'       =&amp;gt; esc_html__( 'Featured Image Opacity', 'pique' ),
		'section'     =&amp;gt; 'pique_panel1',
		'type'        =&amp;gt; 'select',
		'description' =&amp;gt; esc_html( 'Set the opacity of the featured image over the panel background.', 'pique' ),
		'choices'     =&amp;gt; array(
			'0.25' =&amp;gt; esc_html__( '25%', 'pique' ),
			'0.5'  =&amp;gt; esc_html__( '50%', 'pique' ),
			'0.75' =&amp;gt; esc_html__( '75%', 'pique' ),
			'1'    =&amp;gt; esc_html__( '100%', 'pique' ),
		),
	) );
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://themes.svn.wordpress.org/pique/1.2.9/inc/customizer.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://themes.svn.wordpress.org/pique/1.2.9/inc/customizer.php&lt;/a&gt; for reference.
&lt;/p&gt;
&lt;p&gt;
Now, I'm not thinking we should use this method, more pointing at currently how it happens. This is something that is only for that theme. If you switch the theme has no impact.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>lgpref</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:21:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:29/1473445288989353</guid>
      <description>&lt;p&gt;
thanks for looking, @joemcgill. It's even more baffling, because those images DO get created.
This is the experience I'm having with Outlook and browsers (on Win7, and in Outlook Web Client in IE and Chrome).
&lt;/p&gt;
&lt;p&gt;
I will open the email from MailChimp.
The images are broken, but if I click to allow unsafe content, it shows the images.
&lt;/p&gt;
&lt;p&gt;
If I come back to the email after closing my client on Windows7 (or to the web client after a browser refresh), the images are broken and will not show. (Here's the weird part). If I come back to the email a few minutes later, the images will appear!
This image is currently live on our web site:
&lt;a class="ext-link" href="http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-300x150.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-300x150.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The same image URL is cited in the HTML of the *email* version of the newsletter, snippet pasted below. Note that there are no srcset references, and there is only one image src.:
&amp;lt;snippet from HTML - full source of page available in PDF if you are interested&amp;gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&amp;lt;h2 class="x_mc-toc-title" style="margin:0; padding:0; display:block; fontfamily:'
Trebuchet MS','Lucida Grande','Lucida Sans Unicode','Lucida
Sans',Tahoma,sans-serif; font-size:20px; font-style:normal; font-weight:normal;
line-height:125%; letter-spacing:-.75px; text-align:left; color:#404040!important"&amp;gt;
&amp;lt;a href="redir.aspx?
C=JmyMX5QdREP2Xz1kzzS5rjghVJ7Ip5vTygiepDn3ZTHEEX5V1NjTCA..&amp;amp;amp;URL=http%3a%2f%2fcedarmill.us8.com%2ftrack%2fclick%3fu%3d7cd99b58103a512a93f24db5a%26id%3d8598429d7c%26e%3d916a7a9eff"
style="word-wrap:break-word; color:#005680; font-weight:normal; textdecoration:
none" target="_blank"&amp;gt;Film
Club: Glassland&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
&amp;lt;img src="&lt;a class="ext-link" href="http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-300x150.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://library.cedarmill.org/wp-content/uploads/2016/08/Glassland-Pierce-opt-300x150.jpg&lt;/a&gt;" class="x_attachment-medium x_size-medium x_wp-post-image" alt="Glassland Pierce opt" style="float:right; margin-left:5px; border:0; outline:none; text-decoration:none; height:auto!important" height="150" width="300" border="0"&amp;gt;In the film Glassland, there is much that is painfully and hopelessly clear as John, a young man in his early 20’s, tries to save […]&amp;lt;br&amp;gt;
&amp;lt;a href="redir.aspx?C=jzgba8fNcfb789tyTUkw7nT795ZoIBGnpXAKmQ0PBTEEX5V1NjTCA..&amp;amp;amp;URL=http%3a%2f%2fcedarmill.us8.listmanage2.com%2ftrack%2fclick%3fu%3d7cd99b58103a512a93f24db5a%26id%3deaf22cf2e3%26e%3d916a7a9eff" style="word-wrap:break-word; color:#005680; font-weight:normal; textdecoration: none" target="_blank"&amp;gt;Read on »&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;br&amp;gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
In contrast, from what I can see, the browser version of the email has srcset references, and will not load the existing image, which is the "glassland" 300x150px image, live on our website. &lt;a class="ext-link" href="http://us8.campaign-archive1.com/?u=7cd99b58103a512a93f24db5a&amp;amp;id=dfc7b6bbce"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us8.campaign-archive1.com/?u=7cd99b58103a512a93f24db5a&amp;amp;id=dfc7b6bbce&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This leads me to believe that it's true that MailChimp "fixed" the srcset issue in their email newsletters, but did not do anything to the "archive" (browser-based) versions, so RSS-to-email campaigns will still cause issues with WP responsive image handling. Am I making a correct connection here? This behavior is so distracting, when it works sometimes, and sometimes not, which makes it really hard to pin down.
&lt;/p&gt;
&lt;p&gt;
My goal with this discussion is to determine where to fight this battle. There are so many fronts that are possible here; I'm hoping that your code snippet (changing WordPress rss feed formats) is the right direction. If not, I'm left to sort through a myriad of "fronts", including our theme developers (Avada/ Theme Fusion), MailChimp support, plugin developers for "Featured Images in RSS with Size", or to just give up on MailChimp entirely. Thanks for your advice, and let me know if you'd like any forwarded hardcopy of source files or emails from MailChimp for testing. Best wishes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16379 (Better UI for doing "Page on Front") updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16379#comment:145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16379#comment:145/1473445265552615</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1473445262000091"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37635 (BUG in get_option) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:17:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37635#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37635#comment:5/1473445033005126</guid>
      <description>&lt;p&gt;
@swissspidy well, actually I've made mistake while I gave the example data above. As it's english, it doesnt have problem, but here is actual example of &lt;code&gt;get_option&lt;/code&gt; value (serialized, saved in phpmyadmin): &lt;a class="ext-link" href="http://pastebin.com/raw/i4YVxKpK"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastebin.com/raw/i4YVxKpK&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
please, try your above method same this data.
&lt;/p&gt;
&lt;p&gt;
p.s. what's interesting, the &lt;code&gt;get_option&lt;/code&gt; for that data works on my Production website, but on localhost it doesnt work (returns false).
&lt;/p&gt;
&lt;p&gt;
the DB are both InnoDB (latin1_swedish_ci) and tables are both utf8mb4_unicode_ci.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
what's more, wp-config are same for both.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:16:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:77/1473444982631748</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1473444979000070"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20491-applied.diff attached to Ticket #20491</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20491/20491-applied.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20491/20491-applied.diff/1473444928187707</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>20491.3.diff attached to Ticket #20491</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20491/20491.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20491/20491.3.diff/1473444917863426</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38010 (Minor fixes: Media, Add Plugins, and Add Themes top toolbar inconsistencies) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38010</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38010/1473444741860623</guid>
      <description>&lt;p&gt;
A few, minor, visual inconsistencies in these toolbars that would be nice to fix, see also the screenshot below:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the right margin is different
&lt;/li&gt;&lt;li&gt;placeholders: title case or not title case?
&lt;/li&gt;&lt;li&gt;placeholders: ellipsis or not ellipsis?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
About the ellipsis: it would be nice to reach some consensus and standardise across all the admin. I'd say remove them because they're useless and can be problematic for translations.
&lt;/p&gt;
&lt;p&gt;
Side note: for accessibility, placeholders should not be used as replacement for labels but this should be discussed in a separate ticket.
&lt;/p&gt;
&lt;p&gt;
Worth noting also the input fields size is a bit different, but just under a certain viewport size, I guess this is not a big deal.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/rl8x5f3HpI.png"&gt;&lt;img src="https://cldup.com/rl8x5f3HpI.png" alt="https://cldup.com/rl8x5f3HpI.png" crossorigin="anonymous" title="https://cldup.com/rl8x5f3HpI.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37978 (Warning: posix_getpwuid() has been disabled for security reasons) updated</title>
      
        <dc:creator>AndyDeGroo</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37978#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37978#comment:3/1473444734886123</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37978#comment:2" title="Comment 2"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you check to see if your host is running some extra security/hardening extensions on PHP?
&lt;/p&gt;
&lt;p&gt;
Via &lt;a href="https://core.trac.wordpress.org/ticket/37680#comment:18"&gt;https://core.trac.wordpress.org/ticket/37680#comment:18&lt;/a&gt; apparently you can use &lt;code&gt;suhosin.executor.func.blacklist&lt;/code&gt; which disables the function in every way, except that &lt;code&gt;function_exists()&lt;/code&gt; continues to incorrectly return true.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I had read &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt; and comments before creating this one. No, Suhosin is not present on this host. However, there is this line in &lt;code&gt;phpinfo&lt;/code&gt; output:
&lt;code&gt;ionCube PHP Loader (enabled) + Intrusion Protection from ioncube24.com (unconfigured)&lt;/code&gt;
I'm no familiar with ionCube intrusion protection.
&lt;/p&gt;
&lt;p&gt;
There is also &lt;code&gt;Zend Guard Loader&lt;/code&gt; but that should not be interfering.
&lt;/p&gt;
&lt;p&gt;
Loaded PHP extensions:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Core, date, ereg, libxml, openssl, pcre, sqlite3, zlib, bz2, calendar, ctype, curl, hash, filter, ftp, gettext, gmp, SPL, iconv, pcntl, readline, Reflection, session, standard, shmop, SimpleXML, mbstring, tokenizer, xml, cgi-fcgi, apcu, bcmath, dom, fileinfo, gd, imap, jsmin, json, exif, mcrypt, mysql, mysqli, mysqlnd, PDO, pdo_mysql, pdo_sqlite, Phar, posix, sockets, tidy, xmlreader, xmlwriter, xsl, zip, mhash, apc, ionCube Loader, Zend OPcache, Zend Guard Loader
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wonder if maybe it correctly applies to &lt;code&gt;is_callable()&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately, &lt;code&gt;is_callable()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for all disabled functions.
&lt;/p&gt;
&lt;p&gt;
I guess the only failsafe option is to check &lt;code&gt;ini_get('disable_functions')&lt;/code&gt; like it is done in &lt;a href="https://core.trac.wordpress.org/browser/tags/4.6.1/src/wp-includes/functions.php#L4041"&gt;functions.php&lt;/a&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;strpos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;ini_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'disable_functions'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;'posix_getpwuid'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37970 (Editing anchor link after copying adds admin url) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Sep 2016 18:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37970#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37970#comment:3/1473444139635875</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a problem (or is it a "feature") in the browsers when pasting HTML in contentEditable. As far as I remember it used to happen only in Firefox, years ago. It is fixed when inserting links in TinyMCE, but seems it is happening on pasting in some cases.
&lt;/p&gt;
&lt;p&gt;
Passing upstream for more investigation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38003 (Add oEmbed support for User, List and Like Twitter timelines) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:53:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38003#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38003#comment:4/1473443613566105</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/38003/38003.2.diff"&gt;38003.2.diff&lt;/a&gt; does 2 things differently:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Realized I didn't need the square brackets around &lt;code&gt;\w&lt;/code&gt;, so got rid of those.
&lt;/li&gt;&lt;li&gt;Dropped the support for trailing slash on user timeline URL. Twitter doesn't use trailing slashes anywhere, so wasn't sure if we should bother with supporting that or not.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38003.2.diff attached to Ticket #38003</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:44:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38003/38003.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38003/38003.2.diff/1473443043784432</guid>
      <description>&lt;p&gt;
Cleaned up regex a bit
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>comment-bug.png attached to Ticket #38009</title>
      
        <dc:creator>iguel</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38009/comment-bug.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38009/comment-bug.png/1473443006717997</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) created</title>
      
        <dc:creator>iguel</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009/1473442983285483</guid>
      <description>&lt;p&gt;
From what I can tell, in the $defaults array 'title_reply_to' on Line 2227 of wp-includes/comment-template.php is supposed to be called when I click "Reply" to another commenter, but it is not doing so in every theme I have tried, however, it does work in the customizer view.  Here's a screenshot of what I found.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:34:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:27/1473442482588770</guid>
      <description>&lt;p&gt;
Tested a bit, haven't looked in depth at the code though. Here's some notes, I'm pretty sure many of these things are already known :)
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;initial focus: seems it doesn't work the second time the panel opens, to reproduce: use the keyboard, press "Change", the panel slides in, initial focus is on the "Customize" button, press Enter, panel slides out, press again Enter on the "Change" button
&lt;/li&gt;&lt;li&gt;it's not so clear the button "Customize" actually means "Go back"
&lt;/li&gt;&lt;li&gt;consider to add a "Go back" button at the end of the themes list
&lt;/li&gt;&lt;li&gt;clicking on the search field makes all themes disappear (see following issue): I guess this is intentional but doesn't feel right to me
&lt;/li&gt;&lt;li&gt;search doesn't work consistently when using only the keyboard, works correctly only when first clicking on the search field
&lt;/li&gt;&lt;li&gt;not sure about how search is debounced (I may be wrong)
&lt;/li&gt;&lt;li&gt;debounce delay should be 500 to be consistent with other similar search implementations
&lt;/li&gt;&lt;li&gt;search field events should be standardised to &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt;, see for example &lt;a href="https://core.trac.wordpress.org/ticket/37233#comment:21"&gt;https://core.trac.wordpress.org/ticket/37233#comment:21&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;the search placeholder has a space before the hellip, see also the hidden label
&lt;/li&gt;&lt;li&gt;consider to announce the search results (also when there are no results) via &lt;code&gt;wp.a11y.speak()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;consider to announce errors via &lt;code&gt;wp.a11y.speak()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;go to the  "Popular" tab and ensure it is showing some of your installed themes: clicking on an *installed* theme details gives error &lt;code&gt;Cannot read property 'delete' of undefined&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;browsing themes details doesn't show *installed themes* and gives error &lt;code&gt;Cannot read property 'delete' of undefined&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;in any section: press Escape &amp;gt; all themes disappear: would be more consistent to use Escape to go back
&lt;/li&gt;&lt;li&gt;open any theme details &amp;gt; press Escape &amp;gt; all themes disappear
&lt;/li&gt;&lt;li&gt;consider to move the Help at the beginning
&lt;/li&gt;&lt;li&gt;the help button "circular focus" is a bit bigger than usual
&lt;/li&gt;&lt;li&gt;keyboard navigation should be constrained within the full overlay
&lt;/li&gt;&lt;li&gt;the responsive view needs some love: see the theme name when too long, help button hidden by help panel, see screenshot below
&lt;/li&gt;&lt;li&gt;please don't hate me :)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/w320IEbYxE.png"&gt;&lt;img src="https://cldup.com/w320IEbYxE.png" alt="https://cldup.com/w320IEbYxE.png" crossorigin="anonymous" title="https://cldup.com/w320IEbYxE.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38000 (Visual mode editor is broken after update to 4.6.1) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:28:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38000#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38000#comment:4/1473442105914872</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38000#comment:3" title="Comment 3"&gt;arnolem&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have a simple PHP function to minify all HTML elements in function.php
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm afraid this preg_replace() is not "up for the job". As mentioned in the comments at the link you posted, it will potentially break anything in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; tags. There are probably better "HTML white space removers" you could use.
&lt;/p&gt;
&lt;p&gt;
Of course we will fix the comment style in this inline JS, but you will probably run into more problems in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:26/1473441305853632</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by omo. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473441303001243"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37524 (Uncaught Error: Call to undefined function wp_raise_memory_limit()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:09:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37524#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37524#comment:4/1473440999642569</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473440997000971"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38008 (Fast editing and post regular edition has different post status select) created</title>
      
        <dc:creator>leobaiano</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38008</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38008/1473440874968486</guid>
      <description>&lt;p&gt;
When you use the post status select field in the quick editing options displayed are different from the options that appear in the post edit page. In quick editing appears the "published", but it does not work since the publication date is greater than the current date.
&lt;/p&gt;
&lt;p&gt;
My suggestion is that the post status select in the quick editing, follow the same pattern select the edit page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37825 (Introduce functions to check whether there are multiple taxonomy terms) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 17:00:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37825#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37825#comment:2/1473440440323377</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473440431000968"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37148 (Links in notification emails appearing as https) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 16:40:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37148#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37148#comment:6/1473439218459371</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473439215003478"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38007 (Improvements needed to docblock for register_taxonomy()) updated</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Fri, 09 Sep 2016 16:23:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38007#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38007#comment:1/1473438231194242</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38007" title="#38007: defect (bug): Improvements needed to docblock for register_taxonomy() (closed: fixed)"&gt;bobbingwide&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$args['label'] = $args['labels']-&amp;gt;name;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38007 (Improvements needed to docblock for register_taxonomy()) created</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Fri, 09 Sep 2016 16:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38007</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38007/1473438082199964</guid>
      <description>&lt;p&gt;
I first noticed a spelling mistake.
&lt;/p&gt;
&lt;p&gt;
taxonmies should be taxonomies.
&lt;/p&gt;
&lt;p&gt;
Then I found a few more things to comment on...
&lt;/p&gt;
&lt;p&gt;
In the sentence
&lt;/p&gt;
&lt;p&gt;
The function will accept an array (third optional parameter), along with strings for the taxonomy name and another string for the object type.
&lt;/p&gt;
&lt;p&gt;
This suggests that there could be multiple strings for the taxonomy name.
Perhaps it's wise to remove 'and another string'.
&lt;/p&gt;
&lt;p&gt;
Or delete the whole sentence.
&lt;/p&gt;
&lt;p&gt;
Other questions
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is it a taxonomy name, taxonomy key or slug?
&lt;/li&gt;&lt;li&gt;Is it object type or types?
&lt;/li&gt;&lt;li&gt;Can you really pass "label"?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See $args&lt;a class="missing wiki"&gt;label?&lt;/a&gt; = $args&lt;a class="missing wiki"&gt;labels?&lt;/a&gt;-&amp;gt;name;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38003 (Add oEmbed support for User, List and Like Twitter timelines) updated</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Fri, 09 Sep 2016 16:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38003#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38003#comment:3/1473437226556051</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/38003/38003.diff"&gt;38003.diff&lt;/a&gt; adds the other 3 Twitter timeline URLs as trusted providers.
&lt;/p&gt;
&lt;p&gt;
My regex isn't the best, so someone should look it over and see if there is a better way to handle it.
&lt;/p&gt;
&lt;p&gt;
In that patch I also slightly modified the existing Twitter providers because they had a &lt;code&gt;.&lt;/code&gt; matching any character in the username space, but Twitter usernames can only contain alphanumeric characters and underscores, so &lt;code&gt;[\w]&lt;/code&gt; seems like a more specific match. If we'd rather keep the wildcard match, then I can make a new patch.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;[\w]&lt;/code&gt; change also throws off the nice whitespace alignment on the array, but I didn't want to muddy up the diff with whitespace changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38003.diff attached to Ticket #38003</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Fri, 09 Sep 2016 15:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38003/38003.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38003/38003.diff/1473436501503658</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38006 (wp_remove_object_terms() should pass $taxonomy to its actions) created</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 09 Sep 2016 15:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38006</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38006/1473435952862580</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_set_object_terms()&lt;/code&gt; passes the &lt;code&gt;$taxonomy&lt;/code&gt; parameter to its actions, but &lt;code&gt;wp_remove_object_terms()&lt;/code&gt; does not. This makes it hard to target term removal for specific taxonomies.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 15:26:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:99/1473434817571328</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by georgestephanis. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473434815000951"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Fri, 09 Sep 2016 15:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:59/1473433396101091</guid>
      <description>&lt;p&gt;
I like it. There's a bit more 3D shadow in the background position 9 point graphic than currently customary but otherwise it's nice and simple and doesn't encourage performance killing choices (although on second thought some of them are available). Perhaps we should shorten the list of background presets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 09 Sep 2016 15:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:28/1473433349795854</guid>
      <description>&lt;p&gt;
Hi @lgpref,
&lt;/p&gt;
&lt;p&gt;
Thank you for the feedback, this is exactly what I was looking for and why I marked this ticket as a candidate for being closed without actually closing it.
&lt;/p&gt;
&lt;p&gt;
I did some more testing and it looks like MailChimp's campaign builder previews do indeed still suffer from this issue unfortunately, but the browser previews that users see (like the one you posted a link to) do not suffer from this problem.
&lt;/p&gt;
&lt;p&gt;
Looking into the case you linked to however, is showing that the images in your preview aren't displaying because they don't actually exist on your server (i.e., 404 errors) rather than mixed content errors due to trying to server HTTP resources in an HTTPS context.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:34/1473433151992793</guid>
      <description>&lt;p&gt;
I've done today browser testing. The patch works great for me on:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Chrome (latest) Mac/Win
&lt;/li&gt;&lt;li&gt;Firefox (latest) Mac/Win
&lt;/li&gt;&lt;li&gt;Safari,
&lt;/li&gt;&lt;li&gt;IE 11,
&lt;/li&gt;&lt;li&gt;IE 10.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In case of IE 9, there was a minor layout bug, but I have fixed it in &lt;a href="https://core.trac.wordpress.org/attachment/ticket/34391/34391_3.diff|"&gt;the latest patch (attached)&lt;/a&gt;. IE 9 doesn't support CSS transitions, so panels are usable , however there is no fancy sliding effect.
&lt;/p&gt;
&lt;p&gt;
I haven't tested on IE 8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34391_3.diff attached to Ticket #34391</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34391/34391_3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34391/34391_3.diff/1473432737693307</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:58/1473432628015622</guid>
      <description>&lt;p&gt;
Hey there! Here's a new approach based on what was discussed so far: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-customize-background.png" title="Attachment '22058-customize-background.png' in Ticket #22058"&gt;22058-customize-background.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-customize-background.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I've merged my previous proposals (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-background.png" title="Attachment '22058-background.png' in Ticket #22058"&gt;22058-background.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-background.png" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058-presets.png" title="Attachment '22058-presets.png' in Ticket #22058"&gt;22058-presets.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058-presets.png" title="Download"&gt;​&lt;/a&gt;) to a single unified interface, keeping both built-in presets and configurable options.
&lt;/p&gt;
&lt;p&gt;
The presets would be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fill Screen
&lt;/li&gt;&lt;li&gt;Fit to Screen
&lt;/li&gt;&lt;li&gt;Stretch to Screen
&lt;/li&gt;&lt;li&gt;Center
&lt;/li&gt;&lt;li&gt;Repeat
&lt;/li&gt;&lt;li&gt;Custom
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
They don't require a preview image anymore as background options are now available inside the customizer only (the wording itself is self-explanatory and you also get a live preview for your choices). I've moved them to a dropdown menu.
&lt;/p&gt;
&lt;p&gt;
Selecting a preset would change the options below based on your selection. Tweaking the options would select the Custom preset automatically.
&lt;/p&gt;
&lt;p&gt;
The background position component may seem a bit too big. I've enlarged the buttons to make them easier to tap on touch devices as they don't have any spacing between them.
&lt;/p&gt;
&lt;p&gt;
This could be achieved using existing dashicons and without creating any new assets. Next, I'll provide a working patch for a potential user test. What do you think? Any feedback is much appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22058-customize-background.png attached to Ticket #22058</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22058/22058-customize-background.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22058/22058-customize-background.png/1473432423884640</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:43:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:14/1473432218555009</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay, I've been to optimistic about my initial solution without usage of &lt;code&gt;position: fixed&lt;/code&gt;. Just tested it on IE 10 and IE 9, and the header is flickering there while using &lt;code&gt;position: fixed&lt;/code&gt; works great.
&lt;/p&gt;
&lt;p&gt;
What has prevented me from using &lt;code&gt;position: fixed&lt;/code&gt; is the fact that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt; introduces deep changes to the panel/section layout and fixing anything there is not that simple as it might seem. However, this is a solution we have to look for, so I will postpone any development on this ticket until we get more clarity around &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>l10n.php attached to Ticket #37997</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:38:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37997/l10n.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37997/l10n.php/1473431936153432</guid>
      <description>&lt;p&gt;
l10n.php with performance improvements
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:8/1473431878970828</guid>
      <description>&lt;p&gt;
I'm attaching the l10n file with the modifications I just implemented on our site. I'm already noticing a considerable performance increase in New Relic. Server response time has gone down ~120 ms, throughput is higher. I made changes to unload_textdomain(), _load_textdomain_just_in_time(), get_translations_for_domain(), and added a new function called is_textdomain_unloaded().
&lt;/p&gt;
&lt;p&gt;
Feel free to offer any input on my changes.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Steph
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:38/1473431501133360</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
After our discussion in core dev chat this week, the consensus seems to be that we should only apply this in the media library (both in the modal and in the media library in list view via &lt;code&gt;WP_Media_List_Table&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.10.diff" title="Attachment '22744.10.diff' in Ticket #22744"&gt;22744.10.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.10.diff" title="Download"&gt;​&lt;/a&gt; updates the tests after the changes suggested in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.9.diff" title="Attachment '22744.9.diff' in Ticket #22744"&gt;22744.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.9.diff" title="Download"&gt;​&lt;/a&gt;. Since this behavior is applied via placement of a filter, they're really more like a set of reduced case integration tests that  ensure &lt;code&gt;WP_Query&lt;/code&gt; is including filenames when applied, and not when the filter is not applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:12:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:13/1473430345305034</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have moved the code responsible for 'sticking' the header out of panel/section class, and optimized the way sticky functionality is provided:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;only a single expanded panel/section listens to the scroll event at a time;
&lt;/li&gt;&lt;li&gt;it stops listening right after it is collapsed;
&lt;/li&gt;&lt;li&gt;most calculations are moved out of the scroll event handler to prevent potential lags;
&lt;/li&gt;&lt;li&gt;moreover, scroll event listener is throttled to further improve performance.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Because of the fact that this new feature is dependant on panel/section structure, I'd suggest merging it after &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt; (of course only if &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt; is going to be pulled into the master).
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/34343/34343_1.diff|"&gt;I've attached a diff file&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also, a PR on GitHub is available:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/155"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/155&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fsockopen.php.2.patch attached to Ticket #37991</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37991/fsockopen.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37991/fsockopen.php.2.patch/1473430324124988</guid>
      <description>&lt;p&gt;
Latest patch, written as a switch case statement which handles the situations more efficiently
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>22744.10.diff attached to Ticket #22744</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22744/22744.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22744/22744.10.diff/1473430316945508</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>34343_1.diff attached to Ticket #34343</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34343/34343_1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34343/34343_1.diff/1473429809073711</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37992 (fsockopen hard codes port 443 when http scheme used) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 09 Sep 2016 14:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37992#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37992#comment:3/1473429771157597</guid>
      <description>&lt;p&gt;
Awesome, Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37991 (fsockopen logic bug) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Fri, 09 Sep 2016 13:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37991#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37991#comment:3/1473429503648093</guid>
      <description>&lt;p&gt;
Great!
&lt;/p&gt;
&lt;p&gt;
I did some testing for situations such as custom scheme, no scheme and custom ports with http and https and found my original patch had an error. I rewrote the patch using a switch case as it better handles the situations that can happen. Will upload patch here as well as on the github thread. (see my latest attachment)
&lt;/p&gt;
&lt;p&gt;
test cases:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://example.com/ (Host: example.com)
http://example.com:443/ (Host: example.com:443)
http://example.com:123/ (Host: example.com:123)
https://example.com/ (Host: example.com)
https://example.com:80/ (Host: example.com:80)
https://example.com:400/ (Host: example.com:400)
foo://example.com/ (Host: example.com)
foo://example.com:443/ (Host: example.com:443)
foo://example.com:999/ (Host: example.com:999)
//example.com/  (Host: example.com)
//example.com:443/ (Host: example.com:443) - this one is up for comment if port should be specified if SSL is used. I believe the port should be specified, we cannot predict why a custom/blank scheme would be using 443.
//example.com:999/ (Host: example.com:999)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Fri, 09 Sep 2016 13:43:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:7/1473428591659079</guid>
      <description>&lt;p&gt;
Thanks for your reply. I obviously don't have as much knowledge of how the code is supposed to function and didn't investigate very thoroughly. And you're correct, obviously. unload_textdomain() is the only place I see the $l10n_unloaded array being filled, and that's only if $plugin_override is true or if unload_textdomain() is called on a domain that is in the $l10n array.
&lt;/p&gt;
&lt;p&gt;
If you instead change get_translations_for_domain() as you suggested to return $noop_translations upon first fail, wouldn't it still go through the _load_textdomain_just_in_time() process each time anyway (within the if statement on line 875)?
&lt;/p&gt;
&lt;p&gt;
Couldn't you just unload the textdomain where I explicitly added the domain to the $l10n_unloaded array in _load_textdomain_just_in_time()? That would also require a change to unload_textdomain() to allow the domain to be added to the $l10n_unloaded array regardless of whether $plugin_override is true or if the domain exists within the $l10n array (which in this case would not).
&lt;/p&gt;
&lt;p&gt;
It seems like it would be even better to check if a textdomain has been unloaded before get_translations_for_domain() is called to avoid all those extra function calls if we already know there are no translation files for a particular domain (translate()/translate_with_gettext_context()/_n()/_nx() call get_translations_for_domain() which calls _load_textdomain_just_in_time() which should be unloading the textdomain). This way, for each domain without translations (and which aren't explicitly overriding the WordPress translations, that entire function process is only executed once).
&lt;/p&gt;
&lt;p&gt;
As for @Chouby's suggestion, I have no interest in keeping up with each plugin and theme's textdomain and whether they have available translations or should be overridden in my own code.
&lt;/p&gt;
&lt;p&gt;
Again, thanks for your reply. I am leaving my code change in place for now, rather than having to change two functions within l10n.php.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Steph
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37997#comment:4" title="Comment 4"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The problem is that if no translation files exist for that textdomain, &lt;code&gt;_load_textdomain_just_in_time()&lt;/code&gt; goes through the entire process each time it is called because the domain is never being added to the &lt;code&gt;$l10n_unloaded&lt;/code&gt; array
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not how this array is being used. It is only filled when explicitly calling &lt;code&gt;unload_textdomain()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We should rather change &lt;code&gt;get_translations_for_domain()&lt;/code&gt; so that it returns &lt;code&gt;$noop_translations&lt;/code&gt; after the first failed attempt.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38000 (Visual mode editor is broken after update to 4.6.1) updated</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Fri, 09 Sep 2016 12:46:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38000#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38000#comment:3/1473425201430880</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38000#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@arnolem Welcome to Trac and thanks for your report!
&lt;/p&gt;
&lt;p&gt;
What are you using to minify the HTML in the admin?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks !
&lt;/p&gt;
&lt;p&gt;
I have a simple PHP function to minify all HTML elements in function.php
You can see an example here :
&lt;a class="ext-link" href="http://stackoverflow.com/questions/6225351/how-to-minify-php-page-html-output#answer-6225706"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/6225351/how-to-minify-php-page-html-output#answer-6225706&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You can rewrite it more simple
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;ob_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;preg_replace&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="s1"&gt;'/\&amp;gt;[^\S ]+/s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// strip whitespaces after tags, except space
&lt;/span&gt;        &lt;span class="s1"&gt;'/[^\S ]+\&amp;lt;/s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;// strip whitespaces before tags, except space
&lt;/span&gt;        &lt;span class="s1"&gt;'/(\s)+/s'&lt;/span&gt;       &lt;span class="c1"&gt;// shorten multiple whitespace sequences
&lt;/span&gt;    &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'\\1'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707#comment:9/1473421792505357</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37999 (Support for CodeClimate) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37999#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37999#comment:2/1473421201229393</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33838" title="#33838: task (blessed): Add a config for Coveralls (closed: fixed)"&gt;#33838&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38003 (Add oEmbed support for User, List and Like Twitter timelines) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38003#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38003#comment:2/1473421069016703</guid>
      <description>&lt;p&gt;
As noted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36197#comment:9" title="Comment 9 for #36197: defect (bug): Update Twitter oEmbed URL (closed: fixed)"&gt;ticket:36197:9&lt;/a&gt;, Twitter provides the links for auto discovery but because of &lt;code&gt;wp_filter_oembed_result()&lt;/code&gt; we have to add these to the trusted providers list.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35452 (WP_UnitTestCase::set_permalink_structure() doesn't set all permastructures) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35452#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35452#comment:9/1473420399145149</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've found the cause of this failure. &lt;code&gt;create_initial_taxonomies()&lt;/code&gt; needs to be re-called after calling &lt;code&gt;$this-&amp;gt;set_permalink_structure( $structure )&lt;/code&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37851" title="#37851: defect (bug): Tests in Tests_Query_Conditionals fail when run independently (closed: fixed)"&gt;#37851&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38407" title="Build/Test tools: Ensure the `Tests_Query_Conditionals` tests set up ..."&gt;[38407]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #13459,​38005 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13459%2C38005</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13459%2C38005/1473419786003299</guid>
      <description>duplicate: &lt;p&gt;
Hello @sinashams, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/13459" title="#13459: defect (bug): Conflict between post and page slugs/permalinks when permalink setting ... (accepted)"&gt;#13459&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37422 (do_shortcode() weakens semantics) updated</title>
      
        <dc:creator>ljasinskipl</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:12:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37422#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37422#comment:4/1473419531427740</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37422.patch attached to Ticket #37422</title>
      
        <dc:creator>ljasinskipl</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37422/37422.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37422/37422.patch/1473419490175116</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 11:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:6/1473419016382915</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Another report: &lt;a class="ext-link" href="https://github.com/rmccue/Requests/issues/233"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rmccue/Requests/issues/233&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055" title="#33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;#33055&lt;/a&gt; had a hook adapter &lt;code&gt;WP_Requests_Hooks&lt;/code&gt; but it was removed before the final commit:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33055#comment:29" title="Comment 29 for #33055: task (blessed): Support Parallel HTTP Requests in WP_Http, et al (closed: fixed)"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[…] removes the hook adapter. Hooks in Requests are scoped to a single request/session, and the internal plugins (Basic auth, proxying, etc) rely on this fact. Attaching the hooks to WP actions/filters breaks this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See also &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37429" title="HTTP API: Add browser compatibility hook for 3xx redirects.
WordPress ..."&gt;[37429]&lt;/a&gt;.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37843/37843.patch" title="Attachment '37843.patch' in Ticket #37843"&gt;37843.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37843/37843.patch" title="Download"&gt;​&lt;/a&gt; allows to define your own hooks for custom requests. But this still doesn't allow to customize all requests per default. A filter like @JRGould has proposed makes probably more sense here.
&lt;/p&gt;
&lt;p&gt;
@dd32, @rmccue: What are your thoughts on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37843.patch attached to Ticket #37843</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 10:50:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37843/37843.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37843/37843.patch/1473418203669314</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38000 (Visual mode editor is broken after update to 4.6.1) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 10:42:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38000#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38000#comment:2/1473417758498699</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@arnolem Welcome to Trac and thanks for your report!
&lt;/p&gt;
&lt;p&gt;
What are you using to minify the HTML in the admin?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37498 (WYSIWYG Error?) updated</title>
      
        <dc:creator>SPiNNdevs</dc:creator>

      <pubDate>Fri, 09 Sep 2016 10:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37498#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37498#comment:8/1473417653427704</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
we did another test, the problem exists in all WYSIWYG editors, so I guess its an WordPress core problem.
&lt;/p&gt;
&lt;p&gt;
As soon as you insert an &lt;code&gt; &amp;lt;hr /&amp;gt;&lt;/code&gt; without an leading line break you get the wrong HTML output.
&lt;/p&gt;
&lt;p&gt;
This input in an WYSIWYG in text mode:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;hr /&amp;gt;
&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Bericht: Packaging&amp;lt;/a&amp;gt; (Quelle)
&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Empfehlung: Packaging&amp;lt;/a&amp;gt; (Quelle)
&lt;/pre&gt;&lt;p&gt;
Resulsts in:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;hr /&amp;gt;
&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Bericht: Packaging&amp;lt;/a&amp;gt; (Quelle)&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a class="link--download" href="http://....pdf"&amp;gt;Empfehlung: Packaging&amp;lt;/a&amp;gt; (Quelle)&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
So we miss a opening &lt;code&gt; &amp;lt;p&amp;gt;&lt;/code&gt; tag here.
&lt;/p&gt;
&lt;p&gt;
I think this is a problem which should be fixed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37760 (problem with RTL) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 10:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37760#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37760#comment:19/1473417644244509</guid>
      <description>&lt;p&gt;
Follow-up: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38000" title="#38000: defect (bug): Visual mode editor is broken after update to 4.6.1 (closed: fixed)"&gt;#38000&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 09 Sep 2016 10:37:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:6/1473417444018274</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37910 (Remove confusing legacy logic in date_i18n()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 09:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37910#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37910#comment:4/1473412162138138</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 09 Sep 2016 08:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:13/1473410737189424</guid>
      <description>&lt;p&gt;
The best solution I can come up with is the attached patch. The only place I could find to check for is_network_admin()  is before error_scrape is called. I have added the value to the GET parameters so I can  fetch it and pass it to activate_{plugin}. In my tests this works well and has no negative impact.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>plugins.patch attached to Ticket #36406</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 09 Sep 2016 08:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36406/plugins.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36406/plugins.patch/1473410333784731</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38004 (Light scheme background color mismatch) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 09 Sep 2016 07:25:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38004#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38004#comment:2/1473405954428919</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Easier to see in the settings pages, see below:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/HS-srf0GL7.png"&gt;&lt;img src="https://cldup.com/HS-srf0GL7.png" alt="https://cldup.com/HS-srf0GL7.png" crossorigin="anonymous" title="https://cldup.com/HS-srf0GL7.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37991 (fsockopen logic bug) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Sep 2016 07:01:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37991#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37991#comment:2/1473404498764146</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/rmccue/Requests/pull/238"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rmccue/Requests/pull/238&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37992 (fsockopen hard codes port 443 when http scheme used) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Sep 2016 07:01:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37992#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37992#comment:2/1473404473408198</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/rmccue/Requests/pull/237"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/rmccue/Requests/pull/237&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Fri, 09 Sep 2016 06:52:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:5/1473403921415610</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37997" title="#37997: defect (bug): Increase in function calls to get_locale() because of ... (closed: fixed)"&gt;sharkomatic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I added the following line just before line 857 in l10n.php as a temporary fix on our site:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$l10n_unloaded[ $domain ] = true;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You don't need to hack the l10n.php, but can add this line in a plugin. I did the same in Polylang as I use a child class of MO which does not store the strings in a .mo file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 06:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:4/1473401808749491</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The problem is that if no translation files exist for that textdomain, &lt;code&gt;_load_textdomain_just_in_time()&lt;/code&gt; goes through the entire process each time it is called because the domain is never being added to the &lt;code&gt;$l10n_unloaded&lt;/code&gt; array
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not how this array is being used. It is only filled when explicitly calling &lt;code&gt;unload_textdomain()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
We should rather change &lt;code&gt;get_translations_for_domain()&lt;/code&gt; so that it returns &lt;code&gt;$noop_translations&lt;/code&gt; after the first failed attempt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35788 (Plugin Editor wrong selected option when file selected) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 06:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35788#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35788#comment:4/1473401473613769</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37635 (BUG in get_option) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 06:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37635#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37635#comment:4/1473401310222756</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37941 (add rel="noopener noreferrer" to any target="_blank") updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 06:07:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37941#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37941#comment:4/1473401227321968</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38004 (Light scheme background color mismatch) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 06:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38004#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38004#comment:1/1473401135422412</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37920 (`the_title` filter called in 2 places inconsistently) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 06:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37920#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37920#comment:1/1473401127473012</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38000 (Visual mode editor is broken after update to 4.6.1) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 05:51:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38000#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38000#comment:1/1473400306891716</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good catch, thanks!
&lt;/p&gt;
&lt;p&gt;
I think this should be fixed in 4.6.2.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #14955,​38001 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 09 Sep 2016 05:50:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14955%2C38001</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14955%2C38001/1473400222736421</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14955" title="#14955: enhancement: Themes should support uninstall.php or uninstall hook (new)"&gt;#14955&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17771 (URL-encoded comment_author_url gets broken by MySQL varchar 200 length ...) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 09 Sep 2016 05:15:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17771#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17771#comment:14/1473398144773158</guid>
      <description>&lt;p&gt;
I'm wondering if the best solution isn't to start storing the pingback URL in comment meta by default for new pingbacks and only check comment_author_url if the meta key doesn't exist. I'm worried about the backcompat implications.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:59:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:19/1473397141954597</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38584" title="Menus: Prevent non-published posts/pages from being returned in search ..."&gt;38584&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menus: Prevent non-published posts/pages from being returned in search results for adding as nav menu items.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Re-use the same query vars in searching as when listing posts. Aligns with behavior of nav menus in customizer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33742" title="#33742: defect (bug): Menu Customizer: Adding draft items? (closed: fixed)"&gt;#33742&lt;/a&gt;.&lt;br /&gt;
Props welcher, westonruter.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38584]: Menus: Prevent non-published posts/pages from being returned in search ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:59:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38584</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38584/1473397141441811</guid>
      <description>&lt;p&gt;
Menus: Prevent non-published posts/pages from being returned in search results for adding as nav menu items.
&lt;/p&gt;
&lt;p&gt;
Re-use the same query vars in searching as when listing posts. Aligns with behavior of nav menus in customizer.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33742" title="#33742: defect (bug): Menu Customizer: Adding draft items? (closed: fixed)"&gt;#33742&lt;/a&gt;.
Props welcher, westonruter.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37854 (Walker_Nav_Menu_Edit Filters) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37854#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37854#comment:1/1473395929862945</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
Did you want to try a patch to get things started?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35132 (UX improvements when creating/editing menus) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35132#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35132#comment:1/1473395784893212</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
These are some great ideas, I think that while the second two may be better addressed with plugins, being able to see immediately what has already been added to a menu would be very helpful.
&lt;/p&gt;
&lt;p&gt;
Want to add some screenshots of what you are envisioning or perhaps try a patch?
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31218" title="#31218: enhancement: nav-menu.js menu item added event (closed: fixed)"&gt;31218&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707#comment:8/1473395030820269</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yeah, that seems the most sane solution to me.
&lt;/p&gt;
&lt;p&gt;
@danielbachhuber: Could you confirm that this works for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:22:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:12/1473394947209908</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by mensmaximus. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1473394944000204"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:18/1473394129554439</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry, just saw this. I think the ability to add drafts to menus is a bug; it probably initially made sense but can cause major UX issues, especially when getting to the front end site. Updating the admin to match the customizer result seems like the best action here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:17/1473393766884944</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by welcher. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473393764000937"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 09 Sep 2016 04:00:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:16/1473393632579884</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've added a unit test to demonstrate that the current functionality in &lt;code&gt;_wp_ajax_menu_quick_search&lt;/code&gt; is indeed a bug. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742-tests.diff" title="Attachment '33742-tests.diff' in Ticket #33742"&gt;33742-tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742-tests.diff" title="Download"&gt;​&lt;/a&gt; ] there are 4 posts created, 3 of which have &lt;code&gt;post_statuses&lt;/code&gt; that should keep them out of standard queries. In theory, only the &lt;code&gt;publish&lt;/code&gt; post status should be returned however all of them are.
&lt;/p&gt;
&lt;p&gt;
@westonruter 's &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff" title="Attachment '33742.2.diff' in Ticket #33742"&gt;33742.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742.2.diff" title="Download"&gt;​&lt;/a&gt; fixes the issue and the test passes. You can test by first applying &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742-tests.diff" title="Attachment '33742-tests.diff' in Ticket #33742"&gt;33742-tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742-tests.diff" title="Download"&gt;​&lt;/a&gt; and then running the Core tests and then applying &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33742/33742.2.diff" title="Attachment '33742.2.diff' in Ticket #33742"&gt;33742.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33742/33742.2.diff" title="Download"&gt;​&lt;/a&gt; and re-running.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33742-tests.diff attached to Ticket #33742</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 09 Sep 2016 03:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33742/33742-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33742/33742-tests.diff/1473393176642939</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38005 (Duplicate permalinks when using /%postname%/) created</title>
      
        <dc:creator>sinashams</dc:creator>

      <pubDate>Fri, 09 Sep 2016 03:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38005</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38005/1473392988373974</guid>
      <description>&lt;p&gt;
Hi There,
&lt;/p&gt;
&lt;p&gt;
I found a bug in permalink, first I thought it is related to my theme but when I tested it with default "Twenty Sixteen" theme I found it is a bug from WordPress.
&lt;/p&gt;
&lt;p&gt;
This bug appears when a user set his permalink on post name and as you know many websites put permalink on post name according to SEO rules. I found it when I created a page and a post with same title.
&lt;/p&gt;
&lt;p&gt;
For example, you can simply test it by creating a page titled "how to work with menu" and also create a post with same title I mean "how to work with menu". Inside the content, make a sign to find which one is page and which one is post. Then try to enter the post, you’ll find that you will redirect to the page because of its priority or anything else.
&lt;/p&gt;
&lt;p&gt;
I noticed the bug when I put the post in a menu and clicked on it and found that I am the redirected to a page which has same title with the post.
&lt;/p&gt;
&lt;p&gt;
The solution of this bug is quite easy, behind the slug it must defined that it is a post or a page :)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;
Sincerely Yours
&lt;/p&gt;
&lt;p&gt;
Sina Shamsizadeh
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35452 (WP_UnitTestCase::set_permalink_structure() doesn't set all permastructures) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 03:28:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35452#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35452#comment:8/1473391700473624</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38004 (Light scheme background color mismatch) created</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Fri, 09 Sep 2016 03:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38004</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38004/1473390355208702</guid>
      <description>&lt;p&gt;
The admin &lt;code&gt;body&lt;/code&gt; color is &lt;code&gt;#f1f1f1&lt;/code&gt;, as declared in &lt;code&gt;common.css&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;css/colors/_variables.scss&lt;/code&gt;, &lt;code&gt;$body-background&lt;/code&gt; matches this value by default.
&lt;/p&gt;
&lt;p&gt;
Of the 8 admin color schemes, only Light attempts to change this value (to &lt;code&gt;#f5f5f5&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
However, &lt;code&gt;css/colors/_admin.scss&lt;/code&gt;, that color is applied to the background of &lt;code&gt;html&lt;/code&gt;, not &lt;code&gt;body&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This means that if you're using Light, there is a very subtle background change on any screen that requires scrolling.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:59:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:89/1473389940521884</guid>
      <description>&lt;p&gt;
I think people are talking about two different aspects of object assignment here. If any changes to &lt;code&gt;wpdb&lt;/code&gt; state are made to the &lt;em&gt;same&lt;/em&gt; global, then those changes will of course be in any property that references &lt;code&gt;wpdb&lt;/code&gt; because they are both pointing to the same object.
&lt;/p&gt;
&lt;p&gt;
However, if a plugin stomps the &lt;code&gt;wpdb&lt;/code&gt; global, the &lt;em&gt;new&lt;/em&gt; object won't be what the class property references.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://3v4l.org/dBTCg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/dBTCg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37978 (Warning: posix_getpwuid() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37978#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37978#comment:2/1473388774057201</guid>
      <description>&lt;p&gt;
@AndyDeGroo Can you check to see if your host is running some extra security/hardening extensions on PHP?
&lt;/p&gt;
&lt;p&gt;
Via &lt;a href="https://core.trac.wordpress.org/ticket/37680#comment:18"&gt;https://core.trac.wordpress.org/ticket/37680#comment:18&lt;/a&gt; apparently you can use &lt;code&gt;suhosin.executor.func.blacklist&lt;/code&gt; which disables the function in every way, except that &lt;code&gt;function_exists()&lt;/code&gt; continues to incorrectly return true.
I wonder if maybe it correctly applies to &lt;code&gt;is_callable()&lt;/code&gt;?
&lt;em&gt;(Edit: After reading &lt;a class="ext-link" href="https://github.com/stefanesser/suhosin/issues/18"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;suhosin/issues/18&lt;/a&gt; I believe &lt;code&gt;function_exists()&lt;/code&gt; works correctly under &lt;code&gt;suhosin&lt;/code&gt; now)&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:15/1473388762837807</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:35:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707#comment:7/1473388526918597</guid>
      <description>&lt;p&gt;
Cross-referencing &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt; so the above comment makes sense.
&lt;/p&gt;
&lt;p&gt;
We could simply use &lt;code&gt;require dirname(__FILE__) . '/class-wp-hook.php';&lt;/code&gt; there instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37956 (DB_COLLATE doesn't override $collate when defining utf8mb4_unicode_ci ...) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:32:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37956#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37956#comment:1/1473388347127609</guid>
      <description>wontfix: &lt;p&gt;
This behaviour is on purpose - if &lt;code&gt;DB_COLLATE&lt;/code&gt; is defined as &lt;code&gt;utf8mb4_unicode_ci&lt;/code&gt;, but the server supports &lt;code&gt;utf8mb4_unicode_520_ci&lt;/code&gt;, it's better to use the latter, in much the same way as setting &lt;code&gt;DB_CHARSET&lt;/code&gt; to &lt;code&gt;utf8&lt;/code&gt; will be automatically upgraded to &lt;code&gt;utf8mb4&lt;/code&gt; when possible.
&lt;/p&gt;
&lt;p&gt;
The workaround for this is to either have your development and production environments match, or to include a step in your data migration process to change the collation.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:31:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:88/1473388282918180</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:87" title="Comment 87"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think there may actually be a change (desired or not) in behaviour here.
&lt;/p&gt;
&lt;p&gt;
With the &lt;code&gt;global $wpdb&lt;/code&gt; in each method, you import the latest state of &lt;code&gt;$wpdb&lt;/code&gt; when the method is called.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That was true in PHP4, but from PHP5 onwards all object assignments are done by reference, meaning it's just yet-another-variable which references the global &lt;code&gt;$wpdb&lt;/code&gt; contents.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22884 (What if I delete wp_posts table from database.) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22884#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22884#comment:12/1473388087075632</guid>
      <description>wontfix: &lt;p&gt;
I don't think that rebuilding tables on the fly should be happening automagically - tables disappearing is a catastrophic failure, which requires intervention.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:25:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:27/1473387940923502</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21504 (Not checking if apply_filters exists before calling it in WP_DB) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21504#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21504#comment:12/1473387939544068</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38003 (Add oEmbed support for User, List and Like Twitter timelines) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 02:12:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38003#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38003#comment:1/1473387171327803</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @earnjam. Moving to 4.7 for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Fri, 09 Sep 2016 01:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:3/1473386126174409</guid>
      <description>&lt;p&gt;
Thanks, John. In our case, it can't wait until 4.7 because of the noticeable performance hit on our site. I will keep an eye on the changelogs in upcoming releases and re-apply my fix as needed.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37997#comment:2" title="Comment 2"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the report, @sharkomatic. I've not tested this but your report does look valid.
&lt;/p&gt;
&lt;p&gt;
I'm going to place this into the 4.6.2 milestone for visibility, then we can decide whether this is worth fixing in a minor release, or whether it can wait until 4.7.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38003 (Add oEmbed support for User, List and Like Twitter timelines) created</title>
      
        <dc:creator>earnjam</dc:creator>

      <pubDate>Fri, 09 Sep 2016 01:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38003</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38003/1473384951081575</guid>
      <description>&lt;p&gt;
oEmbed support for Tweets was added in 3.4. Support for Twitter Collections and Moments was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36954" title="oEmbed: Extend the provider list to support moments and timelines from ..."&gt;[36954]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Since then, there have been three other Twitter timeline oEmbed endpoints made available: User Timeline, List Timeline and Likes Timeline.
&lt;a class="ext-link" href="https://dev.twitter.com/web/embedded-timelines/oembed"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dev.twitter.com/web/embedded-timelines/oembed&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Can we extend the provider list to support those three timeline types?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #35293,​37761 batch updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 01:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35293%2C37761</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35293%2C37761/1473384677840291</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the report, @thrica!
&lt;/p&gt;
&lt;p&gt;
We're currently looking at how to tackle this in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35293" title="#35293: defect (bug): Emoji Regex in wp_encode_emoji() is wildly inaccurate (closed: fixed)"&gt;#35293&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 09 Sep 2016 01:24:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:25/1473384243071295</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by rabmalin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473384240001142"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38002 (Customize: provide a path to editing posts created in nav menus) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 09 Sep 2016 01:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38002</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38002/1473383708566110</guid>
      <description>&lt;p&gt;
There is currently a usability dead-end where there is no clear path to editing newly-created posts in nav menus. The initial proposal, which was patched in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;, was to show users an info notification via the notifications API. We need to refine that approach or come up with another way to provide links to edit items once they're published. Note that edit links in the preview do not work.
&lt;/p&gt;
&lt;p&gt;
Here is the flow that was proposed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; (and also patched there, and that code could be reused here if we go with a similar approach):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/raw-attachment/ticket/34923/34923.5.gif"&gt;&lt;img src="https://core.trac.wordpress.org/raw-attachment/ticket/34923/34923.5.gif" alt="https://core.trac.wordpress.org/raw-attachment/ticket/34923/34923.5.gif" crossorigin="anonymous" title="https://core.trac.wordpress.org/raw-attachment/ticket/34923/34923.5.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39752" title="#39752: enhancement: Customize: add a post editing flow (new)"&gt;#39752&lt;/a&gt; (Customize: add a post editing flow)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 09 Sep 2016 01:05:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:24/1473383134876751</guid>
      <description>&lt;p&gt;
I ran an informal in-person user test today. The user recently moved her personal site to WordPress and also uses WordPress in a role overseeing contributors and publishing some content herself at &lt;a class="ext-link" href="http://annenbergdl.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://annenbergdl.org/&lt;/a&gt;. Her background is in communication and design. Her feedback was:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The way it works with unsaved changes is confusing. The notice at the top of the themes page isn't obvious, you want to scroll down and browse through the themes.
&lt;/li&gt;&lt;li&gt;Maybe putting a notice under the change button [on the top level of the customizer] would help make it more obvious [we could do this only if it's a theme preview, not the active theme].
&lt;/li&gt;&lt;li&gt;"Why would you install a theme without previewing it?"
&lt;/li&gt;&lt;li&gt;"I would never use the favorites feature."
&lt;/li&gt;&lt;li&gt;"Every time I look at the featured themes, there are no themes I'd want to use. It might be better if they were more curated or something."
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Aside: I also had her play with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; and she liked it, only concern was regarding editing posts after they're created.
&lt;/p&gt;
&lt;p&gt;
On the subject of favorites, in my testing I found very few users that I tried had any favorites set (including myself). I primarily checked members of the theme review team and core contributors, but I wonder if we can get some stats from .org on how many users have favorite themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37655 ([Template Hierarchy] category-slug.php cannot be properly loaded when ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37655#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37655#comment:9/1473382037871584</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38583" title="Themes: Add the non-encoded form of the queried item slug to the ..."&gt;38583&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Add the non-encoded form of the queried item slug to the template hierarchy when the slug contains non-ASCII characters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This affects category, tag, and custom taxonomy archives, and single posts, pages, and custom post types.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37655" title="#37655: enhancement: [Template Hierarchy] category-slug.php cannot be properly loaded when ... (closed: fixed)"&gt;#37655&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38583]: Themes: Add the non-encoded form of the queried item slug to the ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38583</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38583/1473382037002561</guid>
      <description>&lt;p&gt;
Themes: Add the non-encoded form of the queried item slug to the template hierarchy when the slug contains non-ASCII characters.
&lt;/p&gt;
&lt;p&gt;
This affects category, tag, and custom taxonomy archives, and single posts, pages, and custom post types.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37655" title="#37655: enhancement: [Template Hierarchy] category-slug.php cannot be properly loaded when ... (closed: fixed)"&gt;#37655&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:42:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:26/1473381746547603</guid>
      <description>&lt;p&gt;
Is the Jetpack version of CSSTidy somewhat up to date? I remember seeing some changes related to CSSTidy allowed properties in a changelog recently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37655 ([Template Hierarchy] category-slug.php cannot be properly loaded when ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37655#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37655#comment:8/1473381595463958</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:236</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:236/1473381233032006</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38582" title="Tests: Use `add_filter()` when it's available.
The ..."&gt;38582&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Use &lt;code&gt;add_filter()&lt;/code&gt; when it's available.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;tests_add_filter()&lt;/code&gt; helper function directly manipulates the &lt;code&gt;$wp_filter&lt;/code&gt; global, instead of using &lt;code&gt;add_filter()&lt;/code&gt;. We can use &lt;code&gt;add_filter()&lt;/code&gt; when it's available, and fall back to manipulating &lt;code&gt;$wp_filter&lt;/code&gt; when it isn't, relying on the &lt;code&gt;$wp_filter&lt;/code&gt; bootstrap code at the top of &lt;code&gt;plugin.php&lt;/code&gt; to handle conversion.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, dd32 and pento: WordPress Thought Leadership Triumvirate.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38582]: Tests: Use `add_filter()` when it's available.  The ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38582</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38582/1473381232538846</guid>
      <description>&lt;p&gt;
Tests: Use &lt;code&gt;add_filter()&lt;/code&gt; when it's available.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;tests_add_filter()&lt;/code&gt; helper function directly manipulates the &lt;code&gt;$wp_filter&lt;/code&gt; global, instead of using &lt;code&gt;add_filter()&lt;/code&gt;. We can use &lt;code&gt;add_filter()&lt;/code&gt; when it's available, and fall back to manipulating &lt;code&gt;$wp_filter&lt;/code&gt; when it isn't, relying on the &lt;code&gt;$wp_filter&lt;/code&gt; bootstrap code at the top of &lt;code&gt;plugin.php&lt;/code&gt; to handle conversion.
&lt;/p&gt;
&lt;p&gt;
Props boonebgorges, dd32 and pento: WordPress Thought Leadership Triumvirate.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:235</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:235/1473381171418702</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:233" title="Comment 233"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once @jorbin's &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff" title="Attachment '17817.26.diff' in Ticket #17817"&gt;17817.26.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.26.diff" title="Download"&gt;​&lt;/a&gt; is in, can't &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff" title="Attachment '17817.25.diff' in Ticket #17817"&gt;17817.25.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.25.diff" title="Download"&gt;​&lt;/a&gt; just be a check on &lt;code&gt;function_exists( 'add_filter' )&lt;/code&gt; and use the API when available, falling back to directly modifying when it's called before initialisation?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It doesn't need to wait for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff" title="Attachment '17817.26.diff' in Ticket #17817"&gt;17817.26.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.26.diff" title="Download"&gt;​&lt;/a&gt;. In the test suite, &lt;code&gt;phpunit/includes/functions.php&lt;/code&gt; is loaded, it plays some funky music, then &lt;code&gt;wp-settings.php&lt;/code&gt; is loaded - &lt;code&gt;WP_Hook&lt;/code&gt; will be loaded the same before or after whatever the fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt; is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:234</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:234/1473380446073621</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:232" title="Comment 232"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The above patch fixes this issue, though the more I think about it, the more I wonder if WP_Hook should even be in a separate file. Is there ever a time you would want one and not the other?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff" title="Attachment '17817.26.diff' in Ticket #17817"&gt;17817.26.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.26.diff" title="Download"&gt;​&lt;/a&gt; will break things in weird ways - if something loads &lt;code&gt;plugin.php&lt;/code&gt; without loading &lt;code&gt;class-wp-hook.php&lt;/code&gt;, it still won't be able to use &lt;code&gt;add_filter()&lt;/code&gt;, etc. And once &lt;code&gt;plugin.php&lt;/code&gt; is loaded, it can't be relied on to process &lt;code&gt;$wp_filter&lt;/code&gt; as it does at the top of the file.
&lt;/p&gt;
&lt;p&gt;
Discussion of the correct fix for that can continue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37999 (Support for CodeClimate) closed</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37999#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37999#comment:1/1473380163453508</guid>
      <description>wontfix: &lt;p&gt;
WordPress doesn't officially support the WPCS PHPCS sniffs, so adding those to the CodeClimate configuration would still not be an accurate representation of any code grades offered.
&lt;/p&gt;
&lt;p&gt;
For that reason, I'm closing this as "wontfix"
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>siriusly</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:61/1473379884531912</guid>
      <description>&lt;p&gt;
Why not just allow site admins to decide which tinymce buttons should be available for users in settings? I agree that some are "misused," underline being the top example, but removing options like alignment &amp;amp; text color could really hinder functionality for designers. Improving user experience is the responsibility of a site's designer. I already edit the color palette to limit options for editors, for example, and I don't want to have to add another (bloated) tinymce plugin every time I create a site. Disabling h1 by default creates problems when using "administrative" h1 page/post titles that are hidden from search engines (and the SEO friendly h1 resides in the content div). Sites with deep structures often need to do this to keep structures organized.  Seems like there's a little too much "hey, we're smarter than you so we're going to limit your options like Microsoft does" in this trac.  Thanks for listening.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32790 (Filter for do_shortcode_tag()) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32790#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32790#comment:4/1473379803828848</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32790/32790.diff" title="Attachment '32790.diff' in Ticket #32790"&gt;32790.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32790/32790.diff" title="Download"&gt;​&lt;/a&gt; looks good. Just add some unit tests, and we're good to go! :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37998 (readme.txt and readme.md) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37998#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37998#comment:1/1473379693877776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There's already &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/readme.html"&gt;readme.html&lt;/a&gt; in &lt;code&gt;/src&lt;/code&gt;, adding a &lt;code&gt;readme.txt&lt;/code&gt; or &lt;code&gt;readme.md&lt;/code&gt; only duplicates the existing content and as GitHub already renders the &lt;code&gt;readme.html&lt;/code&gt; this is sufficient.
&lt;/p&gt;
&lt;p&gt;
Adding &lt;code&gt;readme.md&lt;/code&gt; to the root of the develop repo though I do think makes sense, as seen on our defacto GitHub develop repo there is no readme shown at &lt;a class="ext-link" href="https://github.com/aaronjorbin/develop.wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/aaronjorbin/develop.wordpress&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37992 (fsockopen hard codes port 443 when http scheme used) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 09 Sep 2016 00:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37992#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37992#comment:1/1473379213638817</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @amandato and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this, In WordPress 4.6 we're using the external package &lt;a class="ext-link" href="https://github.com/rmccue/requests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Requests&lt;/a&gt; and issues/patches such as these need to be made against that upstream package.
&lt;/p&gt;
&lt;p&gt;
I'll take a look into this and open a PR upstream.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37991 (fsockopen logic bug) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37991#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37991#comment:1/1473379197869472</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @amandato and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting this, In WordPress 4.6 we're using the external package &lt;a class="ext-link" href="https://github.com/rmccue/requests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Requests&lt;/a&gt; and issues/patches such as these need to be made against that upstream package.
&lt;/p&gt;
&lt;p&gt;
I'll take a look into this and open a PR upstream.
&lt;/p&gt;
&lt;p&gt;
Cross-referencing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37992" title="#37992: defect (bug): fsockopen hard codes port 443 when http scheme used (closed: fixed)"&gt;#37992&lt;/a&gt; also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21627 (Filter for custom-background CSS selector) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:56:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21627#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21627#comment:21/1473378987088827</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tests required:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;various selectors
&lt;ul&gt;&lt;li&gt;element
&lt;/li&gt;&lt;li&gt;class
&lt;/li&gt;&lt;li&gt;id
&lt;/li&gt;&lt;li&gt;descendant
&lt;/li&gt;&lt;li&gt;child
&lt;/li&gt;&lt;li&gt;pseudo classes &amp;amp; elements
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'll need to go back and check the reason behind background-class to consider whether theme authors ought to be able to set an ID instead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:14/1473378806196312</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38581" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;38581&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38580" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;[38580]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38581]: Database: Fall back to `utf8` when `utf8mb4` isn't supported.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38581</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38581/1473378805700972</guid>
      <description>&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38580" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;[38580]&lt;/a&gt; to the 4.6 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:49:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:2/1473378586056614</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @sharkomatic. I've not tested this but your report does look valid.
&lt;/p&gt;
&lt;p&gt;
I'm going to place this into the 4.6.2 milestone for visibility, then we can decide whether this is worth fixing in a minor release, or whether it can wait until 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:48:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:13/1473378520446570</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:12/1473378486264930</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38580" title="Database: Fall back to `utf8` when `utf8mb4` isn't supported.
 ..."&gt;38580&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38580]: Database: Fall back to `utf8` when `utf8mb4` isn't supported.  ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:48:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38580</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38580/1473378485740343</guid>
      <description>&lt;p&gt;
Database: Fall back to &lt;code&gt;utf8&lt;/code&gt; when &lt;code&gt;utf8mb4&lt;/code&gt; isn't supported.
&lt;/p&gt;
&lt;p&gt;
Sometimes, &lt;code&gt;DB_CHARSET&lt;/code&gt; will be set to &lt;code&gt;utf8mb4&lt;/code&gt;, even if the current setup doesn't support &lt;code&gt;utf8mb4&lt;/code&gt;. After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38442" title="Database: Don't force an unsupported character set that previously ..."&gt;[38442]&lt;/a&gt;, this can cause significant character set failures, causing the connection to fall back to &lt;code&gt;latin1&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Instead of doing this, we now check that the connection supports &lt;code&gt;utf8mb4&lt;/code&gt; before trying to use it, and fall back to &lt;code&gt;utf8&lt;/code&gt; when we need to.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37982" title="#37982: defect (bug): 4.6.1 Breaks apostrophes in titles and utf-8 characters (closed: fixed)"&gt;#37982&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38001 (Theme un/installation hooks like plugins) created</title>
      
        <dc:creator>sidati</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38001</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38001/1473377915838048</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;register_activation_hook&lt;/code&gt;, &lt;code&gt;register_deactivation_hook&lt;/code&gt; &amp;amp; &lt;code&gt;register_uninstall_hook&lt;/code&gt; are very helpful for plugins but for themes there is no such thing, &lt;strong&gt;yes i do know&lt;/strong&gt; the existence of &lt;code&gt;after_switch_theme&lt;/code&gt; &amp;amp; &lt;code&gt;switch_theme&lt;/code&gt; but there is no &lt;code&gt;after_delete_theme&lt;/code&gt; action and never will be, cause there is no access to theme php files after deactivation.
&lt;/p&gt;
&lt;p&gt;
That is why i suggest to use "the plugin approach" with themes :), what do you think ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37970 (Editing anchor link after copying adds admin url) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37970#comment:2/1473377722042104</guid>
      <description>&lt;p&gt;
Actually I just noticed the link is incorrect when you paste it, but it turns into the expected correct link after you hit Publish / Update on the post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37970 (Editing anchor link after copying adds admin url) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:30:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37970#comment:1/1473377403410323</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the ticket @philliproth! Replicating this problem, it happens on any kind of link, not related to the image. I couldn't quite figure out where this problem comes from as I'm not familiar with the editor functionality, but the problem has been around for a while. I tested it on 4.4 (happens there as well) and 3.7 (doesn't happen there, but we didn't have the inline link popover back then).
&lt;/p&gt;
&lt;p&gt;
It might be a bug on the paste plugin for TinyMCE since the content reaches the wplink plugin already in the incorrect way, but this is mostly me guessing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27669.2.diff attached to Ticket #27669</title>
      
        <dc:creator>Mike_Cowobo</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:07:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27669/27669.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27669/27669.2.diff/1473376063043106</guid>
      <description>&lt;p&gt;
Forces db_version to be fetched from the db if it's different from $wp_db_version
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27669 (Stale `db_version` value after update with external object cache) updated</title>
      
        <dc:creator>Mike_Cowobo</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27669#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27669#comment:23/1473375862918819</guid>
      <description>&lt;p&gt;
Another scenario that could trigger this is when WP is updated on in a staging environment and deployed without a cache flush. This should obviously not happen at all, but I saw this happen recently one of the bigger WP hosting providers offering integrated staging.
&lt;/p&gt;
&lt;p&gt;
To reproduce the "No Update Required" loop with WP CLI:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$alloptions = wp_load_alloptions();
$alloptions['db_version'] = 36685; // Any version but $wp_db_version
wp_cache_set( 'alloptions', $alloptions, 'options' );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
A more robust solution would be to actually check the option in the db in &lt;code&gt;wp-admin/admin.php&lt;/code&gt; when db_version != $wp_db_version and flush the cache if a discrepancy is detected. This will:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Only cause a DB query when upgrade is required, or when something is actually wrong
&lt;/li&gt;&lt;li&gt;Always work, regardless of when and where db_version was updated
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Sep 2016 23:02:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:233</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:233/1473375761479327</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:231" title="Comment 231"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can confirm that there's an issue here. &lt;code&gt;tests_add_filter()&lt;/code&gt; still works OK before WP has loaded - &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt; takes care of the manually-set &lt;code&gt;$wp_filter&lt;/code&gt; keys. But if you run &lt;code&gt;tests_add_filter()&lt;/code&gt; after these pre-bootstrap filters are normalized, they never get converted to &lt;code&gt;WP_Hook&lt;/code&gt; objects. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff" title="Attachment '17817.25.diff' in Ticket #17817"&gt;17817.25.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.25.diff" title="Download"&gt;​&lt;/a&gt; is a simple fix, though the &lt;code&gt;class_exists()&lt;/code&gt; check might break once &lt;code&gt;WP_Hook&lt;/code&gt; is autoloaded; we may want a global flag or a constant or somesuch to keep track of whether preexisting hooks have been converted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once @jorbin's &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff" title="Attachment '17817.26.diff' in Ticket #17817"&gt;17817.26.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.26.diff" title="Download"&gt;​&lt;/a&gt; is in, can't &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff" title="Attachment '17817.25.diff' in Ticket #17817"&gt;17817.25.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.25.diff" title="Download"&gt;​&lt;/a&gt; just be a check on &lt;code&gt;function_exists( 'add_filter' )&lt;/code&gt; and use the API when available, falling back to directly modifying when it's called before initialisation?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:98/1473375442726844</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38579" title="Taxonomy: Revert accidental changes introduced in [38578].
See #18302
"&gt;38579&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Revert accidental changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38578" title="Themes: Improve child theme file inheritance by introducing functions ..."&gt;[38578]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38579]: Taxonomy: Revert accidental changes introduced in [38578].  See #18302 </title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38579</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38579/1473375442242173</guid>
      <description>&lt;p&gt;
Taxonomy: Revert accidental changes introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38578" title="Themes: Improve child theme file inheritance by introducing functions ..."&gt;[38578]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>38000.patch attached to Ticket #38000</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38000/38000.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38000/38000.patch/1473375283166471</guid>
      <description>&lt;p&gt;
38000.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>js-comment.png attached to Ticket #38000</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38000/js-comment.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38000/js-comment.png/1473375249100909</guid>
      <description>&lt;p&gt;
JS Browser interpretation
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18302 (Improve child theme file inheritance by introducing a function to ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18302#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18302#comment:97/1473375237711544</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38578" title="Themes: Improve child theme file inheritance by introducing functions ..."&gt;38578&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Improve child theme file inheritance by introducing functions for locating and fetching the URL or path to files within child and parent themes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The most useful function this introduces is &lt;code&gt;get_theme_file_uri()&lt;/code&gt;, which returns the URL to the specified file in the child theme if it exists, and falls back to the URL to the specified file in the parent theme. This allows parent themes to reference files (including enqueuing CSS and JavaScript files) that can be overridden by the child theme simply by existing.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change also introduces &lt;code&gt;get_theme_file_path()&lt;/code&gt;, which is the file path equivalent of &lt;code&gt;get_theme_file_uri()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, &lt;code&gt;get_parent_theme_file_uri()&lt;/code&gt; and &lt;code&gt;get_parent_theme_file_path()&lt;/code&gt; are also introduced, which allow a theme to specifically reference a file URL or file path in the parent theme. These can be used as replacements for &lt;code&gt;get_template_directory_uri()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; respectively, for consistency.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnbillion, georgestephanis, gma992.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38578]: Themes: Improve child theme file inheritance by introducing functions ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38578</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38578/1473375237101730</guid>
      <description>&lt;p&gt;
Themes: Improve child theme file inheritance by introducing functions for locating and fetching the URL or path to files within child and parent themes.
&lt;/p&gt;
&lt;p&gt;
The most useful function this introduces is &lt;code&gt;get_theme_file_uri()&lt;/code&gt;, which returns the URL to the specified file in the child theme if it exists, and falls back to the URL to the specified file in the parent theme. This allows parent themes to reference files (including enqueuing CSS and JavaScript files) that can be overridden by the child theme simply by existing.
&lt;/p&gt;
&lt;p&gt;
This change also introduces &lt;code&gt;get_theme_file_path()&lt;/code&gt;, which is the file path equivalent of &lt;code&gt;get_theme_file_uri()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Finally, &lt;code&gt;get_parent_theme_file_uri()&lt;/code&gt; and &lt;code&gt;get_parent_theme_file_path()&lt;/code&gt; are also introduced, which allow a theme to specifically reference a file URL or file path in the parent theme. These can be used as replacements for &lt;code&gt;get_template_directory_uri()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; respectively, for consistency.
&lt;/p&gt;
&lt;p&gt;
Props johnbillion, georgestephanis, gma992.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18302" title="#18302: enhancement: Improve child theme file inheritance by introducing a function to ... (closed: fixed)"&gt;#18302&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>js-error.png attached to Ticket #38000</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38000/js-error.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38000/js-error.png/1473375209304319</guid>
      <description>&lt;p&gt;
JS Error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38000 (Visual mode editor is broken after update to 4.6.1) created</title>
      
        <dc:creator>arnolem</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:53:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38000</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38000/1473375186114033</guid>
      <description>&lt;p&gt;
The comment javascript was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38349" title="TinyMCE: fix toolbars alignment in RTL.
Fixes #37760 for trunk."&gt;[38349]&lt;/a&gt; breaks the javascript code if it is minified :
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/class-wp-editor.php#L1260"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/class-wp-editor.php#L1260&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
See attach for more information.
&lt;strong&gt;the patch is attached.&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:25/1473374605605446</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by johnregan3. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473374603000296"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37999 (Support for CodeClimate) created</title>
      
        <dc:creator>bhubbard</dc:creator>

      <pubDate>Thu, 08 Sep 2016 22:00:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37999</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37999/1473372043894645</guid>
      <description>&lt;p&gt;
As WordPress syncs to github it is available on CodeClimate as a open source project here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://codeclimate.com/github/WordPress/WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codeclimate.com/github/WordPress/WordPress&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The GPA grade it gives is a bit inaccurate with the default settings. Code Climate does support WordPress standards and adding a simple &lt;code&gt;.codeclimate.yml&lt;/code&gt; file could provide better and accurate reporting. This would also be great as it can set an example of what a codeclimate config should look like for plugin and theme developers.
&lt;/p&gt;
&lt;p&gt;
Details on CodeClimate WordPress Standards:
&lt;a class="ext-link" href="https://github.com/codeclimate/codeclimate-phpcodesniffer/issues/15"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/codeclimate/codeclimate-phpcodesniffer/issues/15&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37998 (readme.txt and readme.md) created</title>
      
        <dc:creator>bhubbard</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37998</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37998/1473371646522649</guid>
      <description>&lt;p&gt;
I checked for ticket but couldn't find one, it would be great to have a readme.md version for the github version of WordPress. There are several pull-requests attempt for it.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/200&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/222"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/222&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:11/1473371336277041</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473371334003226"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:232</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:232/1473370896400006</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:229" title="Comment 229"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:224" title="Comment 224"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI - Because WP-CLI directly modifies the &lt;code&gt;$wp_filter&lt;/code&gt; global, this &lt;code&gt;WP_Hook&lt;/code&gt; thing breaks the implementation we adopted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As it turns out, WP-CLI broke because of poor coding on my part. My bad. See &lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/3384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-cli/wp-cli/pull/3384&lt;/a&gt; for the fix.
&lt;/p&gt;
&lt;p&gt;
However, I discovered this breaks the intent of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt; because it depends on &lt;code&gt;WPINC&lt;/code&gt;, which is only available after &lt;code&gt;wp-settings.php&lt;/code&gt; has begun loading.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The above patch fixes this issue, though the more I think about it, the more I wonder if WP_Hook should even be in a separate file. Is there ever a time you would want one and not the other?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.26.diff attached to Ticket #17817</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.26.diff/1473370412291103</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>lgpref</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:26/1473369631279398</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Dear @joemcgill - I just caught this ticket today (which you closed), because those of us that use MailChimp are still struggling with scrset issues. See this Support Forum thread from three months ago - &lt;a class="ext-link" href="https://wordpress.org/support/topic/images-appear-in-rss-feed-as-empty-boxes-or-broken-images/?replies=5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/images-appear-in-rss-feed-as-empty-boxes-or-broken-images/?replies=5&lt;/a&gt;  They suggest using the "Disable Responsive Images" plugin, which apparently stopped working with the 4.6 update.
&lt;/p&gt;
&lt;p&gt;
Would your code snippet (as listed in Comment &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt; here) still work in 4.6?
&lt;/p&gt;
&lt;p&gt;
I do hope that this issue is kept as a live bug, and that it is considered for a release in the near future. Thanks for your consideration and all the work you do with Core.
&lt;/p&gt;
&lt;p&gt;
To expand on this note: we are dismayed to find out that MailChimp is still having issues with showing images in browsers due to mixed content 9 months after 4.4's release. Example of currently broken images in MailChimp newsletters visible in a browser (not email). Published Sept 7 2016 using MailChimp, Avada 4.0.3 theme and WP 4.6 (images are visible in email when "insecure content" is accepted, but all 404 in all browsers.
&lt;a class="ext-link" href="http://us8.campaign-archive1.com/?u=7cd99b58103a512a93f24db5a&amp;amp;id=57a1480852"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us8.campaign-archive1.com/?u=7cd99b58103a512a93f24db5a&amp;amp;id=57a1480852&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37608 (Undefined index: extension in class-wp-image-editor.php) reopened</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37608#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37608#comment:10/1473369484864171</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38294" title="Media: when calling `pathinfo()`, also pass a `PATHINFO_*` constant to ..."&gt;[38294]&lt;/a&gt;, &lt;code&gt;PATHINFO_BASENAME&lt;/code&gt; was used in &lt;code&gt;media_handle_upload()&lt;/code&gt; in a spot that had previously stripped the file extension from the basename to build an attachment title. This results in attachment titles of &lt;code&gt;My Title-jpg&lt;/code&gt; instead of &lt;code&gt;My Title&lt;/code&gt; for an uploaded image of &lt;code&gt;My Title.jpg&lt;/code&gt;, which is a change in behavior.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37608/37608.2.diff" title="Attachment '37608.2.diff' in Ticket #37608"&gt;37608.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37608/37608.2.diff" title="Download"&gt;​&lt;/a&gt; uses &lt;code&gt;PATHINFO_FILENAME&lt;/code&gt; instead.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>37608.2.diff attached to Ticket #37608</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37608/37608.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37608/37608.2.diff/1473369345892995</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:231</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:231/1473368887531245</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:226" title="Comment 226"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So we were getting failing unit tests in our builds after this was deployed and so far it looks like it traces to our usage of the &lt;code&gt;tests_add_filter()&lt;/code&gt; function found in &lt;code&gt;/tests/phpunit/functions.php&lt;/code&gt;.  That function overrides &lt;code&gt;$wp_filter&lt;/code&gt; and doesn't implement the new changes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can confirm that there's an issue here. &lt;code&gt;tests_add_filter()&lt;/code&gt; still works OK before WP has loaded - &lt;code&gt;WP_Hook::build_preinitialized_hooks()&lt;/code&gt; takes care of the manually-set &lt;code&gt;$wp_filter&lt;/code&gt; keys. But if you run &lt;code&gt;tests_add_filter()&lt;/code&gt; after these pre-bootstrap filters are normalized, they never get converted to &lt;code&gt;WP_Hook&lt;/code&gt; objects. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff" title="Attachment '17817.25.diff' in Ticket #17817"&gt;17817.25.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.25.diff" title="Download"&gt;​&lt;/a&gt; is a simple fix, though the &lt;code&gt;class_exists()&lt;/code&gt; check might break once &lt;code&gt;WP_Hook&lt;/code&gt; is autoloaded; we may want a global flag or a constant or somesuch to keep track of whether preexisting hooks have been converted.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>17817.25.diff attached to Ticket #17817</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:03:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.25.diff/1473368593933741</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 21:01:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:7/1473368514771592</guid>
      <description>&lt;p&gt;
It would be helpful to start building a list of filenames and expected titles that are based on those filenames so that we can build out tests. A list in tests is also being built as part of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22363" title="#22363: defect (bug): Accents in attachment filenames should be sanitized (assigned)"&gt;#22363&lt;/a&gt; that should also be useful here.
&lt;/p&gt;
&lt;p&gt;
One key distinction between these tickets is that here we're worried about sanitizing the filename for use as the attachment's post title. In &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22363" title="#22363: defect (bug): Accents in attachment filenames should be sanitized (assigned)"&gt;#22363&lt;/a&gt;, we're focused on sanitizing the filename for use as an actual filename. There will likely be some difference is how that should be handled. This is seen in @arhenderson63's report too, where the following is expected:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Upload &lt;code&gt;Acer ×freemanii 'Jeffersred' (Autumn Blaze®); 2½ in.jpg&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Stored filename &lt;code&gt;Acer-×freemanii-Jeffersred-Autumn-Blaze®-2½-in.jpg&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Attachment title &lt;code&gt;Acer ×freemanii 'Jeffersred' (Autumn Blaze®); 2½ in&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also worth noting is that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38294" title="Media: when calling `pathinfo()`, also pass a `PATHINFO_*` constant to ..."&gt;[38294]&lt;/a&gt; has changed the behavior in 4.7 trunk so that the file extension remains as part of the attachment title. We'll want to fix that as well, but it may cause confusion short term with any tests that are written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:19/1473367625426440</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25293#comment:18" title="Comment 18"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25293#comment:17" title="Comment 17"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at this ticket, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, &lt;code&gt;WP_State&lt;/code&gt; is not a good name for this site-related class.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1, the name should be more specific. Anyone has an idea better than &lt;code&gt;WP_Site_State&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. We should try to name this in a way that supports some of the things we may be able to do in the future. It's maintaining the context of a site / network in a (global) WordPress instance. The old meaning of the "site" term (MU style) would kind of work here as it's a site containing one or more networks with one or more blogs. We need to find the right terms to describe how the context of that is switched.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding an interface, I'm not sure how this class would have anything in common with &lt;code&gt;WP_Locale_State&lt;/code&gt; other than it switches something - might be sufficient for an interface later, or can you come up with something in particular?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be nice to identify these common areas. That each could (1) maintain a stack of contexts, (2) move to a new context, (3) restore to a previous context, and (4) restore to a specific context should mean that there are areas that overlap pretty well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:230</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:230/1473366370135156</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by boone. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1473366366000298"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) updated</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:03:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997#comment:1/1473365019356504</guid>
      <description>&lt;p&gt;
The two vertical lines on the attached graph are:
&lt;/p&gt;
&lt;p&gt;
1) When I first deployed the 4.6.1 WordPress update
2) When I deployed the pre-4.6-version of l10n.php, without the _load_textdomain_just_in_time() function.
&lt;/p&gt;
&lt;p&gt;
I have since deployed the newest version of l10n.php with the line of code I mentioned previously.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37997" title="#37997: defect (bug): Increase in function calls to get_locale() because of ... (closed: fixed)"&gt;sharkomatic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I updated a site to WordPress 4.6, I noticed a dramatic increase in function calls to get_locale() in New Relic, which we use to track our server and site performance. I believe I have traced the issue to the new function _load_textdomain_just_in_time(). In the function description, it says that when it first encounters a new textdomain, it will try to load translation files from 'wp-content/languages.' The problem is that if no translation files exist for that textdomain, _load_textdomain_just_in_time() goes through the entire process each time it is called because the domain is never being added to the $l10n_unloaded array. I added the following line just before line 857 in l10n.php as a temporary fix on our site:
&lt;/p&gt;
&lt;p&gt;
$l10n_unloaded[ $domain ] = true;
&lt;/p&gt;
&lt;p&gt;
I'm attaching a screenshot of the graph in New Relic that shows the increase in function calls and execution time for get_locale() with the current _load_textdomain_just_in_time() function code in place. Since adding the domain to $l10_unloaded, I have not noticed any performance decreases in the site.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>locale-hook-increase-wp-4-6.png attached to Ticket #37997</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Thu, 08 Sep 2016 20:00:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37997/locale-hook-increase-wp-4-6.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37997/locale-hook-increase-wp-4-6.png/1473364823462371</guid>
      <description>&lt;p&gt;
Increase in get_locale() function calls in WP 4.6+
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37997 (Increase in function calls to get_locale() because of ...) created</title>
      
        <dc:creator>sharkomatic</dc:creator>

      <pubDate>Thu, 08 Sep 2016 19:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37997</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37997/1473364781076847</guid>
      <description>&lt;p&gt;
When I updated a site to WordPress 4.6, I noticed a dramatic increase in function calls to get_locale() in New Relic, which we use to track our server and site performance. I believe I have traced the issue to the new function _load_textdomain_just_in_time(). In the function description, it says that when it first encounters a new textdomain, it will try to load translation files from 'wp-content/languages.' The problem is that if no translation files exist for that textdomain, _load_textdomain_just_in_time() goes through the entire process each time it is called because the domain is never being added to the $l10n_unloaded array. I added the following line just before line 857 in l10n.php as a temporary fix on our site:
&lt;/p&gt;
&lt;p&gt;
$l10n_unloaded[ $domain ] = true;
&lt;/p&gt;
&lt;p&gt;
I'm attaching a screenshot of the graph in New Relic that shows the increase in function calls and execution time for get_locale() with the current _load_textdomain_just_in_time() function code in place. Since adding the domain to $l10_unloaded, I have not noticed any performance decreases in the site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:87/1473360965928878</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:85" title="Comment 85"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A reference to a global, verses a direct global import is ultimately the same object, sure, you're accessing it differently, you're creating an extra memory reference to it, but it's still a global object which you're pulling in to every function you use it within.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think there may actually be a change (desired or not) in behaviour here.
&lt;/p&gt;
&lt;p&gt;
With the &lt;code&gt;global $wpdb&lt;/code&gt; in each method, you import the latest state of &lt;code&gt;$wpdb&lt;/code&gt; when the method is called.
&lt;/p&gt;
&lt;p&gt;
With the global being assigned to the class property in the constructor, you pull in the state at the time the class is instantiated. If the global has been changed between the constructor being called and a method being called, I don't think the method will see that, as it still has &lt;code&gt;$wpdb&lt;/code&gt; from the earlier state.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:45:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:53/1473360342380024</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26511#comment:52" title="Comment 52"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@GaryJ Looking at &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25293" title="#25293: defect (bug): Switch_to_blog not switching the siteid (new)"&gt;#25293&lt;/a&gt;, an interface would make sense, even though it's probably a bit too much for now for only like 2-3 public methods.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even if there was just one public method, having an interface would contractually agree that that one method was present. Defensive coding should outweigh an extra file potentially being loaded IMHO.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:11/1473360013056866</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.2.diff" title="Attachment '37128-usage.2.diff' in Ticket #37128"&gt;37128-usage.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37128/37128-usage.2.diff" title="Download"&gt;​&lt;/a&gt; includes some use-cases implemented for &lt;code&gt;wp_list_sort()&lt;/code&gt; in Core. When testing make sure to also merge the patch for the actual functionality (since this patch only includes implementation).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37128-usage.2.diff attached to Ticket #37128</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.2.diff/1473359918151074</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37128-usage.diff attached to Ticket #37128</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:37:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37128/37128-usage.diff/1473359828780999</guid>
      <description>&lt;p&gt;
Usage examples for &lt;code&gt;wp_list_sort()&lt;/code&gt; in Core
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>johnregan3</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:24/1473359737448382</guid>
      <description>&lt;p&gt;
CSSTidy hasn't been updated since 2007 (&lt;a class="ext-link" href="http://csstidy.sourceforge.net/changelog.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://csstidy.sourceforge.net/changelog.php&lt;/a&gt;).  Naturally, this is a problem since it does not support CSS3.
&lt;/p&gt;
&lt;p&gt;
There are a couple of forks out there, but it would take some time to review their work if we were to go with any of them. Plus, we'd want to contact the author before using them.  Not sure if this is really a viable option at this point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:12/1473358837160396</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Today I've created all the 'mechanics' behind the sticky header feature.
&lt;/p&gt;
&lt;p&gt;
At the first glance my solution may not seem obvious (i.e. using &lt;code&gt;position: fixed&lt;/code&gt;). I have kept in mind updates that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt; is going to introduce (hopefully in this release). Panels/sections are transitioned there using CSS transforms. They create new stacking contexts and paint layers, making it really hard to make use of &lt;code&gt;position: fixed&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I still have to find best way to bind header positioning method to &lt;code&gt;scroll&lt;/code&gt; event on the sidebar (&lt;code&gt;scroll&lt;/code&gt; in current implementation of panels/sections is happening on either the sidebar or inner &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;s; this will get simplified thanks to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Below you can see the actual effect of header toggling. I tried to make it as natural as possible, though I'm open to UX feedback.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/PFnHjlutQV.gif"&gt;&lt;img src="https://cldup.com/PFnHjlutQV.gif" alt="https://cldup.com/PFnHjlutQV.gif" crossorigin="anonymous" title="https://cldup.com/PFnHjlutQV.gif" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(Link to better quality video: &lt;a class="ext-link" href="https://cldup.com/yOM0Mr7GIO.mov"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cldup.com/yOM0Mr7GIO.mov&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Here is a PR with current WIP:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/155"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/155&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:19:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:57/1473358771039100</guid>
      <description>&lt;p&gt;
Summarizing the discussion in the design chat, it sounds like we don't need to add the vertical-position options due to lack of need/support requests for them (or background-related options in general). We did decided to go with the approach from @cdog if we do add those though. Therefore, we need an updated patch that implements &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22058#comment:43" title="Comment 43"&gt;43&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
We also decided to explore an alternate approach that removes these options in favor of a preset-selector (as has been suggested before), which would internally set the values of the existing options for backwards compatibility. We'll need mockups and a patch for that approach as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>hugobaeta</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:6/1473358744372735</guid>
      <description>&lt;p&gt;
+1 as well for underline!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:5/1473358667147687</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473358665000287"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:10/1473358588664247</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37128#comment:9" title="Comment 9"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about removing that third parameter and always requiring a key =&amp;gt; value pair?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was aiming for parity with how all the &lt;code&gt;*_Query&lt;/code&gt; classes handle their order arguments, but I'm certainly open to remove that parameter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:14:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:9/1473358475975023</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37128#comment:8" title="Comment 8"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing that isn't obvious from me just reading the tests and the docs is what happens if wp_list_sort is called on an object where &lt;code&gt;$orderby&lt;/code&gt; isn't set on each field?  Where does that fall in the sort?  Seems like that is something that should be documented and tested so the code remains consistent into the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If the &lt;code&gt;$orderby&lt;/code&gt; field isn't set on one of the objects/arrays compared, the comparison is skipped, basically resulting in an equal comparison. In this case the next field compared (if using an array of &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt;) will decide. If all comparisons between two objects result in an equal check, the whole check will cause an equal result (i.e. return 0). Since PHP only does unstable sort, this will unfortunately randomize the result. However we can improve this if needed, for example by adding an internal &lt;code&gt;__index&lt;/code&gt; property on each item in the array (and removing it again after the comparison) and then fallback to it to maintain the original order on an equal comparison.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't really think we should go as far as adding internal properties and such and simply let PHP handle this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, what about when you want to do both asc and desc ?  For example, alphabetical by title, but reverse chronological? Perhaps there should just be a single argument that you pass in that includes both the field and the direction?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the patch you can do that already: you can specify the &lt;code&gt;$orderby&lt;/code&gt; parameter as an array of (multiple) &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt; pairs (in this case it will skip the third &lt;code&gt;$order&lt;/code&gt; parameter). Is that what you meant or did I misunderstand you?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What about removing that third parameter and always requiring a key =&amp;gt; value pair?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:18/1473358318923569</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25293#comment:17" title="Comment 17"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at this ticket, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, &lt;code&gt;WP_State&lt;/code&gt; is not a good name for this site-related class. I'd rather see &lt;code&gt;WP_Site_State&lt;/code&gt; and &lt;code&gt;WP_Locale_State&lt;/code&gt; (currently &lt;code&gt;WP_Locale_Switcher&lt;/code&gt;) to implement a &lt;code&gt;WP_State&lt;/code&gt; interface or an abstract class of such name.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1, the name should be more specific. Anyone has an idea better than &lt;code&gt;WP_Site_State&lt;/code&gt;? I feel that is not accurate enough since it also indirectly handles the network state (by switching the network automatically when the site is switched). Regarding an interface, I'm not sure how this class would have anything in common with &lt;code&gt;WP_Locale_State&lt;/code&gt; other than it switches something - might be sufficient for an interface later, or can you come up with something in particular?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 18:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:8/1473357748580191</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37128#comment:7" title="Comment 7"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In general, core has tended to not add utility functions that it doesn't use.  Is there anywhere in core this would make sense right now?  Not saying that should keep it out, but I think if core can use it, the case for including it is stronger.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point, I was actually planning to look for use-cases earlier. I just checked and found several places where using &lt;code&gt;wp_list_sort()&lt;/code&gt; would make sense. We could get rid of the following functions/methods (or at least not use them anymore):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;_usort_terms_by_name()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_usort_terms_by_ID()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_sort_nav_menu_items()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Manager::_cmp_priority()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_Customize_Widgets::_sort_name_callback()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There might be more, but that's what I found now. So there would indeed be a use for the function in Core. I can update another patch later today or tomorrow to illustrate what the implementation could look like.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing that isn't obvious from me just reading the tests and the docs is what happens if wp_list_sort is called on an object where &lt;code&gt;$orderby&lt;/code&gt; isn't set on each field?  Where does that fall in the sort?  Seems like that is something that should be documented and tested so the code remains consistent into the future.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If the &lt;code&gt;$orderby&lt;/code&gt; field isn't set on one of the objects/arrays compared, the comparison is skipped, basically resulting in an equal comparison. In this case the next field compared (if using an array of &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt;) will decide. If all comparisons between two objects result in an equal check, the whole check will cause an equal result (i.e. return 0). Since PHP only does unstable sort, this will unfortunately randomize the result. However we can improve this if needed, for example by adding an internal &lt;code&gt;__index&lt;/code&gt; property on each item in the array (and removing it again after the comparison) and then fallback to it to maintain the original order on an equal comparison.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Additionally, what about when you want to do both asc and desc ?  For example, alphabetical by title, but reverse chronological? Perhaps there should just be a single argument that you pass in that includes both the field and the direction?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the patch you can do that already: you can specify the &lt;code&gt;$orderby&lt;/code&gt; parameter as an array of (multiple) &lt;code&gt;$orderby =&amp;gt; $order&lt;/code&gt; pairs (in this case it will skip the third &lt;code&gt;$order&lt;/code&gt; parameter). Is that what you meant or did I misunderstand you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:55:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:56/1473357346193043</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473357343000214"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:71/1473356780113155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473356776000193"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:11/1473356500460481</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473356491000175"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:229</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:229/1473355248008500</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:224" title="Comment 224"&gt;danielbachhuber&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI - Because WP-CLI directly modifies the &lt;code&gt;$wp_filter&lt;/code&gt; global, this &lt;code&gt;WP_Hook&lt;/code&gt; thing breaks the implementation we adopted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As it turns out, WP-CLI broke because of poor coding on my part. My bad. See &lt;a class="ext-link" href="https://github.com/wp-cli/wp-cli/pull/3384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-cli/wp-cli/pull/3384&lt;/a&gt; for the fix.
&lt;/p&gt;
&lt;p&gt;
However, I discovered this breaks the intent of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt; because it depends on &lt;code&gt;WPINC&lt;/code&gt;, which is only available after &lt;code&gt;wp-settings.php&lt;/code&gt; has begun loading.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37996 (Unnecessary rewrite rules added for the /embed endpoint) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:18:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37996</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37996/1473355133425241</guid>
      <description>&lt;p&gt;
WordPress appends &lt;code&gt;/embed&lt;/code&gt; to a bunch of rewrite rules that it shouldn't. By default, the following rewrite rules are present on every site but are not valid:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;category/(.+?)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;tag/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;type/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;comments/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;search/(.+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;author/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;([0-9]{4})/([0-9]{1,2})/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;([0-9]{4})/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;[0-9]{4}/[0-9]{1,2}/[^/]+/([^/]+)/embed/?$&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These are generated in &lt;code&gt;WP_Rewrite::generate_rewrite_rules()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35067" title="#35067: enhancement: Embed support for Recent Posts / Static Pages / Archive Pages (closed: maybelater)"&gt;#35067&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37384 (Text alignment in options-discussion.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37384#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37384#comment:10/1473354688233147</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by foliovision. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473354685000059"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37860 (Labels are misplaced with respect to text box.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37860#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37860#comment:4/1473354378450325</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by karmatosed. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1473354374000037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37707 (Change the inclusion of 'plugins.php' to require_once) reopened</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 08 Sep 2016 17:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37707#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37707#comment:6/1473354085626779</guid>
      <description>&lt;p&gt;
Now that &lt;code&gt;/wp-includes/plugin.php&lt;/code&gt; requires the &lt;code&gt;WPINC&lt;/code&gt; constant to be set, it's not possible to require &lt;code&gt;/wp-includes/plugin.php&lt;/code&gt; before &lt;code&gt;wp-settings.php&lt;/code&gt; is loaded. &lt;code&gt;WPINC&lt;/code&gt; is set at the beginning of &lt;code&gt;wp-settings.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #35689 (Pagination issue on front page after 4.4.1 update) updated</title>
      
        <dc:creator>m_butcher</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35689#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35689#comment:14/1473353076934234</guid>
      <description>&lt;p&gt;
Having this issue and on version 4.6.1. Interesting enough, it works on our dev server (Pantheon) but not the live site (WPE).
&lt;/p&gt;
&lt;p&gt;
I have noticed that when attempting to go to the different blog pages via url, I have to go down to .../blog/page/8/ before I see any of the other pages. Past page 8, the pages work fine. Before page 8 they redirect back to the .../blog/ page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37978 (Warning: posix_getpwuid() has been disabled for security reasons) updated</title>
      
        <dc:creator>AndyDeGroo</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37978#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37978#comment:1/1473352999657055</guid>
      <description>&lt;p&gt;
I create a test script to see if &lt;code&gt;function_exists()&lt;/code&gt; really returns true for disabled funtions:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$disabled_functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ini_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'disable_functions'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"disable_functions = &lt;/span&gt;&lt;span class="si"&gt;$disabled_functions&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$disabled_functions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;explode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;","&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$disabled_functions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$disabled_functions&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"function_exists('%s') =&amp;gt; %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="s1"&gt;'true'&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'false'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The results are even more confusing. Same host, same configuration but all checks return &lt;code&gt;false&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;disable_functions = exec, passthru, shell_exec, system, proc_open, popen, apache_child_terminate, apache_setenv, define_syslog_variables, pcntl_exec, openlog, posix_getpwuid, posix_kill, posix_setpgid, posix_setsid, posix_setuid, posix_setuid, posix_uname, proc_close, proc_get_status, proc_open, proc_terminate, syslog
function_exists('exec') =&amp;gt; false
function_exists('passthru') =&amp;gt; false
function_exists('shell_exec') =&amp;gt; false
function_exists('system') =&amp;gt; false
function_exists('proc_open') =&amp;gt; false
function_exists('popen') =&amp;gt; false
function_exists('apache_child_terminate') =&amp;gt; false
function_exists('apache_setenv') =&amp;gt; false
function_exists('define_syslog_variables') =&amp;gt; false
function_exists('pcntl_exec') =&amp;gt; false
function_exists('openlog') =&amp;gt; false
function_exists('posix_getpwuid') =&amp;gt; false
function_exists('posix_kill') =&amp;gt; false
function_exists('posix_setpgid') =&amp;gt; false
function_exists('posix_setsid') =&amp;gt; false
function_exists('posix_setuid') =&amp;gt; false
function_exists('posix_setuid') =&amp;gt; false
function_exists('posix_uname') =&amp;gt; false
function_exists('proc_close') =&amp;gt; false
function_exists('proc_get_status') =&amp;gt; false
function_exists('proc_open') =&amp;gt; false
function_exists('proc_terminate') =&amp;gt; false
function_exists('syslog') =&amp;gt; false
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37995 (Buddypress Activity bug (?)) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37995#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37995#comment:1/1473352919706127</guid>
      <description>invalid: &lt;p&gt;
Hi @ico33 - This appears to be a bbPress bug, not a WordPress one. I've opened a ticket there: &lt;a class="ext-link" href="https://bbpress.trac.wordpress.org/ticket/2992"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bbpress.trac.wordpress.org/ticket/2992&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>arhenderson63</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:32:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:6/1473352346015379</guid>
      <description>&lt;p&gt;
@joemcgill
&lt;/p&gt;
&lt;p&gt;
In examining the code for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt;, it appears that the sanitization routine is implemented for the title as well.  I can understand the logic for sanitizing &lt;em&gt;filenames&lt;/em&gt;, but title is overkill; especially as there is (a very tedious) work-around by manually editing the media title in WP Media Manager.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) closed</title>
      
        <dc:creator>pbarnhart</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:8/1473351513261655</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>pbarnhart</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:7/1473351481770814</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37946#comment:5" title="Comment 5"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Nailed!  Updated server to 2.4.23 and media posts via HTTP/2 now working.  Thanks and glad it was a simple fix on my end.  Thanks for troubleshooting this and for the reminder I need to keep up with my Apache releases :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37995 (Buddypress Activity bug (?)) created</title>
      
        <dc:creator>ico33</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37995/1473350979001939</guid>
      <description>&lt;p&gt;
As suggested in Buddypress Support I report here the problem.
&lt;/p&gt;
&lt;p&gt;
I have Wordpress, Bbpress and Buddypress. When I create a topic in a bbpress forum, it is listed in my activity (Buddypress). And that's ok.
&lt;/p&gt;
&lt;p&gt;
If I delete the topic, it is NOT deleted from activity. So if someone click on the topic in my activity, will have the error message of Page-not-found. It seems that buddypress activity doesn't synchro/refresh when a bbpress topic is deleted.
&lt;/p&gt;
&lt;p&gt;
See also here: &lt;a class="ext-link" href="https://buddypress.org/support/topic/buddypress-activity-does-not-deleterefresh-when-a-bbpress-topic-is-deleted/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://buddypress.org/support/topic/buddypress-activity-does-not-deleterefresh-when-a-bbpress-topic-is-deleted/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 16:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:5/1473350792717376</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473350790002949"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:228</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:228/1473349885684140</guid>
      <description>&lt;p&gt;
Here's the code I see for &lt;code&gt;tests_add_filter&lt;/code&gt; (to be clear, this is pulled directly from the WordPress Core UnitTest files):
&lt;/p&gt;
&lt;pre class="wiki"&gt;// For adding hooks before loading WP
function tests_add_filter($tag, $function_to_add, $priority = 10, $accepted_args = 1) {
	global $wp_filter;
	$idx = _test_filter_build_unique_id($tag, $function_to_add, $priority);
	$wp_filter[$tag][$priority][$idx] = array('function' =&amp;gt; $function_to_add, 'accepted_args' =&amp;gt; $accepted_args);
	return true;
}
&lt;/pre&gt;&lt;p&gt;
All we have in our tests is implementation of that filter in our plugin unit tests bootstrap.  So basically we do something like:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;tests_add_filter( 'some_filter_we_want_to_hook_into', '__return_false' )&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:6/1473349860337308</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds like this is probably a server configuration issue. I'm going to reassign to @jeremyfelt to continue reviewing and leave it open for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:10/1473349722076735</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:80/1473349633737840</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt;. Looks like we need to consider use cases where people are expecting multi-word file names to be respected as the title in the media editor. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22363/22363.diff" title="Attachment '22363.diff' in Ticket #22363"&gt;22363.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22363/22363.diff" title="Download"&gt;​&lt;/a&gt; converts the title of an attachment named &lt;code&gt;This is a file.jpg&lt;/code&gt; to &lt;code&gt;this-is-a-file-jpg&lt;/code&gt;, which is unexpected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37994 (Preflight CORS check fails because of missing ...) created</title>
      
        <dc:creator>nuvoPoint</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37994/1473349524298244</guid>
      <description>&lt;p&gt;
Working on a single page app in Angular2 (Ionic 2), and trying to talk to the WP REST API V2.
&lt;/p&gt;
&lt;p&gt;
GETs work fine, but when I try to POST, the preflight check fails because of a missing Access-Control-Allow-Headers returned from WP REST.
&lt;/p&gt;
&lt;p&gt;
The preflight check checks for &lt;code&gt;Access-Control-Request-Headers: Authorization, Content-Type&lt;/code&gt; with an OPTIONS call, and WP REST replies:
&lt;code&gt;Access-Control-Allow-Headers: Authorization&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The missing "Content-Type" from the reply, blocks the following post-flight request, and execution stops.
&lt;/p&gt;
&lt;p&gt;
I can easily solve this problem with some custom headers via PHP, but I simply request that you add official support for this. Would be a lot less hassle for a lot of Javascript based apps.
&lt;/p&gt;
&lt;p&gt;
Basically the only thing you need to add is "Content-Type" to line 237 of /wp-includes/rest-api/class-wp-rest-server.php.
&lt;/p&gt;
&lt;p&gt;
Anyway, here's a workaround:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'rest_post_dispatch'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;\WP_REST_Response&lt;/span&gt; &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'OPTIONS'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Access-Control-Allow-Headers'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Authorization, Content-Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Still, would prefer official support for it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:227</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:227/1473349512414370</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:226" title="Comment 226"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So we were getting failing unit tests in our builds after this was deployed and so far it looks like it traces to our usage of the &lt;code&gt;tests_add_filter()&lt;/code&gt; function found in &lt;code&gt;/tests/phpunit/functions.php&lt;/code&gt;.  That function overrides &lt;code&gt;$wp_filter&lt;/code&gt; and doesn't implement the new changes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you provide a sample test that demonstrates this failure please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37993 (jQuery Syntax Error when not adding a class in 'before_widget') closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37993#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37993#comment:2/1473349449102134</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38577" title="Customize: Prevent widget previewing logic from building invalid ..."&gt;38577&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Prevent widget previewing logic from building invalid jQuery selectors when sidebars are registered without a class name in &lt;code&gt;before_widget&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37993" title="#37993: defect (bug): jQuery Syntax Error when not adding a class in 'before_widget' (closed: fixed)"&gt;#37993&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38577]: Customize: Prevent widget previewing logic from building invalid ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38577</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38577/1473349448263027</guid>
      <description>&lt;p&gt;
Customize: Prevent widget previewing logic from building invalid jQuery selectors when sidebars are registered without a class name in &lt;code&gt;before_widget&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37993" title="#37993: defect (bug): jQuery Syntax Error when not adding a class in 'before_widget' (closed: fixed)"&gt;#37993&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #37987,​37989 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37987%2C37989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37987%2C37989/1473349369099299</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37987" title="#37987: defect (bug): Sanitize filename (closed: duplicate)"&gt;#37987&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:42:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:226</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:226/1473349332516607</guid>
      <description>&lt;p&gt;
So we were getting failing unit tests in our builds after this was deployed and so far it looks like it traces to our usage of the &lt;code&gt;tests_add_filter()&lt;/code&gt; function found in &lt;code&gt;/tests/phpunit/functions.php&lt;/code&gt;.  That function overrides &lt;code&gt;$wp_filter&lt;/code&gt; and doesn't implement the new changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37993 (jQuery Syntax Error when not adding a class in 'before_widget') updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37993#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37993#comment:1/1473349156924849</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37993" title="#37993: defect (bug): jQuery Syntax Error when not adding a class in 'before_widget' (closed: fixed)"&gt;#37993&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:3/1473349091171183</guid>
      <description>&lt;p&gt;
And if the title is in Cyrillic, it gets urlencoded and becomes completely unreadable, e.g. &lt;code&gt;Изображение 1&lt;/code&gt; turns into &lt;code&gt;%d0%98%d0%b7%d0%be%d0%b1%d1%80%d0%b0%d0%b6%d0%b5%d0%bd%d0%b8%d0%b5%201&lt;/code&gt; :( Same for Arabic, Japanese, and other non-ASCII alphabets, I guess.
&lt;/p&gt;
&lt;p&gt;
Confirmed on all releases &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt; was backported to: 3.7.16, 3.8.16, 3.9.14, 4.0.13, 4.1.13, 4.2.10, 4.3.6, 4.4.5, 4.5.4, 4.6.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:2/1473348899818541</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
&lt;p&gt;
[Edit: Incorrect ticket number.]
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10511 (Enclosure Custom Fields are automatically deleted) updated</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10511#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10511#comment:29/1473348850621420</guid>
      <description>&lt;p&gt;
It's been 20 months since the last reply to this thread. Any thought by WordPress core devs on addressing this problem?
&lt;/p&gt;
&lt;p&gt;
My recommendation is to restore the behavior otto42 referenced years ago (&lt;a class="ext-link" href="https://web.archive.org/web/20150926173355/https://wordpress.org/support/topic/problem-with-the-built-in-podcasting-functionality"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://web.archive.org/web/20150926173355/https://wordpress.org/support/topic/problem-with-the-built-in-podcasting-functionality&lt;/a&gt;) allowing for manually entering enclosures and not deleting them if the media url is not present in the blog post content. I would also ask that the practice of auto creating enclosures be revisited and be removed from core. It is problematic because it does not limit the enclosures to 1. As of today there is no podcast client application that can deal with multiple enclosures in a feed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:33:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:1/1473348781686877</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @arhenderson63,
&lt;/p&gt;
&lt;p&gt;
Thanks for the report. This looks like a consequence of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38538" title="Media: Sanitize upload filename.
"&gt;[38538]&lt;/a&gt;, which was an intentional change but may be more strict than is necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:225</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:225/1473348617476085</guid>
      <description>&lt;p&gt;
I don't see any reason that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38282" title="Bootstrap/Load: Include Plugin API via `require_once`
Currently, ..."&gt;r38282&lt;/a&gt; won't be staying in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:26:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:224</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:224/1473348411621934</guid>
      <description>&lt;p&gt;
FYI - Because WP-CLI directly modifies the &lt;code&gt;$wp_filter&lt;/code&gt; global, this &lt;code&gt;WP_Hook&lt;/code&gt; thing breaks the implementation we adopted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34936" title="#34936: enhancement: Reconcile wp-settings-cli.php with wp-settings.php (closed: fixed)"&gt;#34936&lt;/a&gt;. See &lt;a class="ext-link" href="https://travis-ci.org/wp-cli/wp-cli/jobs/158420911"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/wp-cli/wp-cli/jobs/158420911&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38282" title="Bootstrap/Load: Include Plugin API via `require_once`
Currently, ..."&gt;r38282&lt;/a&gt; stays in, I can get around this by requiring &lt;code&gt;plugins.php&lt;/code&gt; early in WP-CLI (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37707" title="#37707: enhancement: Change the inclusion of 'plugins.php' to require_once (closed: fixed)"&gt;#37707&lt;/a&gt;) and using &lt;code&gt;add_action()&lt;/code&gt; and &lt;code&gt;add_filter()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37993 (jQuery Syntax Error when not adding a class in 'before_widget') created</title>
      
        <dc:creator>acosmin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37993</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37993/1473348025575605</guid>
      <description>&lt;p&gt;
If you remove the &lt;code&gt;widget&lt;/code&gt; class (or if you don't add a class) in &lt;code&gt;'before_widget' =&amp;gt; '&amp;lt;section id="%1$s" class="widget %2$s"&amp;gt;'&lt;/code&gt;, when using &lt;code&gt;register_sidebar()&lt;/code&gt; you get a jQuery Syntax Error in the Customizer.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;jquery.js?ver=1.12.4:2 Uncaught Error: Syntax error, unrecognized expression: SECTION.,SECTION.widget,SECTION.widget&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>fsockopen.php.patch attached to Ticket #37992</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:10:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37992/fsockopen.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37992/fsockopen.php.patch/1473347402040736</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37992 (fsockopen hard codes port 443 when http scheme used) created</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37992</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37992/1473347388266087</guid>
      <description>&lt;p&gt;
The Transport/fsockopen.php library hard codes port 443 when the scheme https is used. This does not allow for a custom port when using the https scheme. e.g. &lt;a class="ext-link" href="https://example.com:900/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://example.com:900/&lt;/a&gt; would be converted to &lt;a class="ext-link" href="https://example.com:443/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://example.com:443/&lt;/a&gt;. Attached patch fixes this by checking if the port is not already specified.
&lt;/p&gt;
&lt;p&gt;
This patch can be applied separately but was discovered while creating the patch for ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37991" title="#37991: defect (bug): fsockopen logic bug (closed: fixed)"&gt;#37991&lt;/a&gt; &lt;a href="https://core.trac.wordpress.org/attachment/ticket/37991/"&gt;https://core.trac.wordpress.org/attachment/ticket/37991/&lt;/a&gt;. Both tickets should be addressed together as they are related (this one impacts &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37991" title="#37991: defect (bug): fsockopen logic bug (closed: fixed)"&gt;#37991&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37991" title="#37991: defect (bug): fsockopen logic bug (closed: fixed)"&gt;#37991&lt;/a&gt; restores expected behavior for https scheme).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37478 (Customizer undefined property if widget area before/after values are empty) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:09:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37478#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37478#comment:5/1473347364115419</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473347359000272"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32790 (Filter for do_shortcode_tag()) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 15:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32790#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32790#comment:3/1473347127051199</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32790/32790.diff" title="Attachment '32790.diff' in Ticket #32790"&gt;32790.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32790/32790.diff" title="Download"&gt;​&lt;/a&gt; introduces the &lt;code&gt;do_shortcode_tag&lt;/code&gt; filter to allow filtering the shortcode output. This also allows us, in combination with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38506" title="Shortcodes: Add the `pre_do_shortcode_tag` filter.
This filter allows ..."&gt;38506&lt;/a&gt;, to cache expensive shortcodes.
&lt;/p&gt;
&lt;p&gt;
I also removed a bit of repetitive code before to only handle what's different between the two if-clauses (namely whether &lt;code&gt;$content&lt;/code&gt; is passed to the shortcode callback or not).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fsockopen.php.patch attached to Ticket #37991</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37991/fsockopen.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37991/fsockopen.php.patch/1473346773627461</guid>
      <description>&lt;p&gt;
Patch for setting host: without port for http and https when default port is used
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32790.diff attached to Ticket #32790</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32790/32790.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32790/32790.diff/1473346769464489</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37991 (fsockopen logic bug) created</title>
      
        <dc:creator>amandato</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:58:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37991</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37991/1473346710791474</guid>
      <description>&lt;p&gt;
I came across this while debugging a handful of users who had an issue with our service. Currently the Transport/fsockopen.php library is including the connection port to the HTTP headers for https, even though it is using the default port 443.
&lt;/p&gt;
&lt;p&gt;
Referencing the RFC:
&lt;/p&gt;
&lt;pre class="wiki"&gt;A "host" without any trailing port information implies the default port for the service requested (e.g., "80" for an HTTP URL).
&lt;/pre&gt;&lt;p&gt;
Since https has a default port of 443, I would recommend the following change attached as a patch to the request() function in fsockopen.php
&lt;/p&gt;
&lt;p&gt;
Note: it is possible that the service http is used on port 443, as well as https on port 80. This is why the logic also checks the 'scheme'.
&lt;/p&gt;
&lt;p&gt;
I've provided a readable patch how this can be written. How it is written ultimately could change.
&lt;/p&gt;
&lt;p&gt;
Also note that as-is you are not violating the RFC, but also not following standard practice of leaving the port off when it is the default port for the service / 'scheme'.
&lt;/p&gt;
&lt;p&gt;
Before WordPress 4.6 the behavior was to not include the port for https when port 443 is used. I will be submitting a 2nd trac that ties into this one as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37990 (Introduce `WP_Hooks`) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:49:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37990/1473346165619745</guid>
      <description>&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;38571&lt;/a&gt;, I wonder whether we should introduce a &lt;code&gt;WP_Hooks&lt;/code&gt; (or &lt;code&gt;WP_Hook_Manager&lt;/code&gt;) class to take care of all hook-related functionality. This wouldn't really have any functional benefit at this point, but I was thinking about this more related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt; - since the changeset mentioned above already changed the global variables in a backward-incompatible manner, maybe we can get rid of them entirely then?
&lt;/p&gt;
&lt;p&gt;
Everything related that is currently stored as global, we could store as properties in the &lt;code&gt;WP_Hooks&lt;/code&gt; class, and the &lt;code&gt;WP_Hooks&lt;/code&gt; class could become accessible through a &lt;code&gt;WP::get( 'hooks' )&lt;/code&gt; or similar. The current hook functions would become wrappers for &lt;code&gt;WP_Hooks&lt;/code&gt; methods then.
&lt;/p&gt;
&lt;p&gt;
I'm aware that this would be a very critical change, however like I said, we already changed how the global variables work so we could also remove them (and direct access is discouraged anyway). Of course this would also require another dev note. Those people who really need direct access could then do &lt;code&gt;WP::get( 'hooks' )-&amp;gt;wp_filters&lt;/code&gt; instead of `$GLOBALS&lt;a class="missing wiki"&gt;wp_filters?&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37966 (Comment children missing on paged comment views) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:38:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37966#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37966#comment:6/1473345536563677</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by zoonini. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1473345534002866"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:223</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:223/1473345441237723</guid>
      <description>&lt;p&gt;
A small improvement idea: I think it would make sense to separate the &lt;code&gt;WP_Hook::has_filter()&lt;/code&gt; and &lt;code&gt;WP_Hook::has_filters()&lt;/code&gt; methods completely so that both have a single responsibility: The &lt;code&gt;$function_to_check&lt;/code&gt; parameter would become required for &lt;code&gt;WP_Hook::has_filter()&lt;/code&gt; and we would no longer call &lt;code&gt;WP_Hook::has_filters()&lt;/code&gt; from &lt;code&gt;WP_Hook::has_filter()&lt;/code&gt;. The logic to be backwards compatible could then happen in the regular &lt;code&gt;has_filter()&lt;/code&gt; function - this way at least the new class methods would only have one specific purpose.
&lt;/p&gt;
&lt;p&gt;
Another thing I observed: This might have a reason I'm overlooking right now, but why aren't we storing the tag (hook name) in the class as property (and pass it to the constructor)? This would allow us to get rid of passing the &lt;code&gt;$tag&lt;/code&gt; parameter on all the methods. Sorry to come up with this now, I haven't really paid attention to this movement before :(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) created</title>
      
        <dc:creator>arhenderson63</dc:creator>

      <pubDate>Thu, 08 Sep 2016 14:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989/1473344190475796</guid>
      <description>&lt;p&gt;
Managing a media-heavy site that auto-upgraded to WP 4.6.1 overnight (8 Sept 2016).  On new media uploads, WP is now changing the title to a concatenated string with escape characters rather than leaving the title as the original filename.  This is an issue as I have relied on clean original filenames as titles for images; now each image title must be individually edited after upload as the WP-assigned title is decidedly unfriendly to audience users.  This behavior occurs only on new uploads and does not effect already resident media.
&lt;/p&gt;
&lt;p&gt;
Example:
Upload a file called 'Acer ×freemanii 'Jeffersred' (Autumn Blaze®); 2½ in.jpg'
&lt;/p&gt;
&lt;p&gt;
BEHAVIOR IN WP 4.6.0 and lower
WP Filename: %ROOT%/wp-content/uploads/Acer-×freemanii-Jeffersred-Autumn-Blaze®-2½-in.jpg
WP Title:  Acer ×freemanii 'Jeffersred' (Autumn Blaze®); 2½ in
&lt;/p&gt;
&lt;p&gt;
BEHAVIOR IN WP 4.6.1
WP Filename: %ROOT%/wp-content/uploads/Acer-×freemanii-Jeffersred-Autumn-Blaze®-2½-in.jpg
WP Title: acer-xfreemanii-jeffersred-autumn-blaze-2%c2%bd-in
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34635 (WordPress image's title is not alt) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:46:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34635#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34635#comment:20/1473342382990610</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473342380000233"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:10/1473342344767568</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:9/1473342327356762</guid>
      <description>&lt;p&gt;
The output buffering issue needs a bit more testing I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:8/1473342273265684</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38576" title="Formatting: Don't send an HTTP status code in `wp_send_json()` by ..."&gt;38576&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting: Don't send an HTTP status code in &lt;code&gt;wp_send_json()&lt;/code&gt; by default. This avoids clobbering an HTTP status code that may have been set prior to calling this function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38576]: Formatting: Don't send an HTTP status code in `wp_send_json()` by ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:44:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38576</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38576/1473342272763083</guid>
      <description>&lt;p&gt;
Formatting: Don't send an HTTP status code in &lt;code&gt;wp_send_json()&lt;/code&gt; by default. This avoids clobbering an HTTP status code that may have been set prior to calling this function.
&lt;/p&gt;
&lt;p&gt;
Props westonruter
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>glafarge</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:10/1473341555684372</guid>
      <description>&lt;p&gt;
@pento : in my case your patch is working like a charm. Thank you :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:9/1473341373254197</guid>
      <description>&lt;p&gt;
I'm working on this ticket now, but I cannot seem to assign it to myself.
@westonruter or @celloexpressions - could any one of you change the ownership of the ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:222</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:222/1473340806053009</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Incorrect behavior is incorrect behavior and should be fixed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely, though utopian. Especially in a large project, it's extremely difficult to "force" developers/users to use it properly. Because what does "properly" even mean. This is where flexibility comes in and allowing developers to express and create amazing things. Of course there are boundaries, but isn't software here to try to break those?
&lt;/p&gt;
&lt;p&gt;
I totally agree with you, that in the scenario that you described, there are different way of interpreting what the developer wanted to achieve. That's a tough boundary to crack, as it's something a machine can't (maybe yet) know. Edge cases like that are clearly an exception, but should still have their place, motivating more developers to come up with unique and gorgeous solutions.
The same will be the case with this fix. Some time down the line, there will probably be new changes, optimisations, maybe a whole rewrite, who knows!
&lt;/p&gt;
&lt;p&gt;
But hey, we're all here to learn together, right? Striving to become better and write smarter code :-)
&lt;/p&gt;
&lt;p&gt;
I think we can put this discussion on pause here, as it isn't really contributing to this current issue any more, but thanks a lot for elaborating on your point!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37988 (Upgrade network: php timeout in wp-admin/network/upgrade.php) created</title>
      
        <dc:creator>podpirate</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37988/1473340754491038</guid>
      <description>&lt;p&gt;
Setup:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Pretty slow server running php 5.5 (As a result calling wp-admin/upgrade?step=upgrade_db might take several seconds in average.)
&lt;/li&gt;&lt;li&gt;PHP max_execution_time is 30 seconds. Value can't be changed by scripts.
&lt;/li&gt;&lt;li&gt;WP-Multisite with about 400 blogs.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Reproduction:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Call wp-admin/network/upgrade.php?action=upgrade
&lt;/li&gt;&lt;li&gt;Result: Network Upgrade gets stuck at some point, terminating with http error 500
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37853 (HTTP error when uploading images) updated</title>
      
        <dc:creator>cezariuszmarek</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37853#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37853#comment:5/1473340685067906</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since the error is probably happening in the image processing library, PHP is not able to recover
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't know PHP, but isn't it possible to try-catch the error? And it you are able to display the "HTTP error" message, why can't you remove garbage from the database at the same time?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37977 (gettext Documentation Outdated) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37977#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37977#comment:1/1473340601170225</guid>
      <description>invalid: &lt;p&gt;
Thanks for the report, @giologist.
&lt;/p&gt;
&lt;p&gt;
The Codex is a wiki which means anyone with a WordPress.org user account can change the documentation there. Give it a whirl!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>Nathan Miller</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:7/1473339636622689</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
Thanks for the patch. Tested it and it is working. Great work.
&lt;/p&gt;
&lt;p&gt;
Will let you know if there is anything else that is needing work on :)
&lt;/p&gt;
&lt;p&gt;
Cheers. N
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 08 Sep 2016 13:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:221</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:221/1473339628342130</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:220" title="Comment 220"&gt;noplanman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, I see what you mean.
&lt;/p&gt;
&lt;p&gt;
I'm just curious to know if recursive adding/removing of hooks within a hook would work properly then, as the array would be changing during the loop.
&lt;/p&gt;
&lt;p&gt;
At the moment I'm just happy that @pento has put in the effort to get this fixed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, that was it exactly. The problem is what do you want to happen? If you add a callback to a hook that is already running, then what do you want to happen?
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The callback is called at the next time the hook is called.
&lt;/li&gt;&lt;li&gt;The callback is called later within the same hook execution. So if you add a callback to hook 'something' running with priority 10, while running at priority 10, that same callback is called at some point soon after.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The solution can't have both. Or realistically, it could have both, but solutions for both are different and counter each other. I am sure this was mentioned at some point above. With the patch, great, I am guessing the patch is the option 2.
&lt;/p&gt;
&lt;p&gt;
The problem is what do people mean when they add to the same hook they are running on? So if the programmer starts adding callbacks to the 'wp_init' hook, do they mean they want it to run soon after? I understand there is a chicken and the egg problem. That is why there is an early process startup execution and late process startup execution hook. So you can manage what goes into the latter in the former.
&lt;/p&gt;
&lt;p&gt;
The point is more so that if you want to remove a callback from a hook, you may do so. What logical reason does a person have for adding more hooks to 'wp_init'? Do you mean you want to execute the callbacks? Why not just execute the callbacks?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For me, the problem is not that the problem should or should not have been fixed. Incorrect behavior is incorrect behavior and should be fixed. The problem is that the solution required is hideous. Not the code provided and the code required to accurately and completely fix the problem. The problem is fundamental with how PHP handles arrays and references and pointers. Requiring code that breaks this behavior in some way to provide consistency.
&lt;/p&gt;
&lt;p&gt;
This is code that when it breaks, it will be damn near impossible to fix. It will be damn near impossible to optimize. The original patch like the one committed was beautiful in that only one person knew how it worked. Only one or a few people would ever know how it worked. You do not want code like that in any project. You may think you understand how this code works, but you don't. Or at least, if it was like the original patch. The code that was committed appears to be a bit more straightforward, so I am not sure if that just means I know more or that the author is a better code artist.
&lt;/p&gt;
&lt;p&gt;
I only got to the point where what appears to be an incredibly expensive method is called, each time a callback is added to a hook. Sure, optimization is sometimes counter-intuitive, but when has sorting ever been a fast process? For each addition? Insanity. I would buy a hat and eat it, if sorting each time didn't have a huge performance hit.
&lt;/p&gt;
&lt;p&gt;
It is said that copying the array would have performance issues. How does what was committed not have huge performance issues?
&lt;/p&gt;
&lt;p&gt;
The effort is awesome, sure, but you just used C4 to clean a window. I guess technically, the window is clean, albeit scattered to the wind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37295 (PHP 7.1.0: Tests_Query_IsTerm::test_cat_uncat_action_tax() is failing) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37295#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37295#comment:15/1473335946759543</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37772 (Not working "wp_default_styles" on PHP 7.1.0) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37772#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37772#comment:9/1473335927408900</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37987 (Sanitize filename) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37987#comment:1/1473335359189973</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37987 (Sanitize filename) created</title>
      
        <dc:creator>potreb</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37987</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37987/1473334861642700</guid>
      <description>&lt;p&gt;
I use sanitize_file_name do rename files on the server. The new version of WordPress is changing the file name also in Media Manager.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://oi64.tinypic.com/2e5mm4o.jpg"&gt;&lt;img src="http://oi64.tinypic.com/2e5mm4o.jpg" alt="http://oi64.tinypic.com/2e5mm4o.jpg" crossorigin="anonymous" title="http://oi64.tinypic.com/2e5mm4o.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:38:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:220</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:220/1473334707485362</guid>
      <description>&lt;p&gt;
Ok, I see what you mean.
&lt;/p&gt;
&lt;p&gt;
I'm just curious to know if recursive adding/removing of hooks within a hook would work properly then, as the array would be changing during the loop.
&lt;/p&gt;
&lt;p&gt;
At the moment I'm just happy that @pento has put in the effort to get this fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37973 (When searching installed plugins "select all" checkbox fails) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:29:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37973#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37973#comment:6/1473334192721118</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch works as expected.
&lt;/p&gt;
&lt;p&gt;
I was going to say that this needs to be added to the themes list table in the network admin as well, but it looks like we didn't implement Ajax search there. Something for a new ticket (any volunteers?).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13071 (Update bubble appears only at the second load) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:28:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13071#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13071#comment:33/1473334136867746</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could we at perhaps add some JavaScript that increases the counter in the admin menu when visiting &lt;code&gt;update-core.php&lt;/code&gt; for the first time?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:25:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:9/1473333933830209</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37982/37982.2.diff" title="Attachment '37982.2.diff' in Ticket #37982"&gt;37982.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37982/37982.2.diff" title="Download"&gt;​&lt;/a&gt; adds unit tests.
&lt;/p&gt;
&lt;p&gt;
For anyone looking at this ticket not comfortable making changes to WordPress Core, a workaround is to set your &lt;code&gt;DB_CHARSET&lt;/code&gt; to &lt;code&gt;utf8&lt;/code&gt; instead of &lt;code&gt;utf8mb4&lt;/code&gt;, and if your &lt;code&gt;DB_COLLATE&lt;/code&gt; starts with &lt;code&gt;utf8mb4_&lt;/code&gt;, change that to &lt;code&gt;utf8_&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Please still test that the patch works for you, though. I'd like some more checks before I commit it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>dougwollison</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:219</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:219/1473333814380454</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:218" title="Comment 218"&gt;noplanman&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jacobsantos
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still think it is funny that this whole thing could be solved with one line
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For learning sake, what fix are you referring to?
One line really isn't a big change and I'd really like to understand how it would fix this issue properly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If I had to guess, something like what me and others have proposed over the years in our duplicate tickets. Namely, copying the hooks list for a tag to a new variable and iterating over that. But it's been pointed out there are apparently performance issues with that solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37982.2.diff attached to Ticket #37982</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/37982.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/37982.2.diff/1473333767833344</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37986 (Requests: 'ssl' and 'local' args missing from HTTP API debug hooks) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37986</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37986/1473333587654139</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$args&lt;/code&gt; array passed to the &lt;code&gt;http_api_debug&lt;/code&gt; hook is missing the &lt;code&gt;ssl&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt; elements that were present prior to WordPress 4.6.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:18:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:218/1473333535235706</guid>
      <description>&lt;p&gt;
@jacobsantos
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still think it is funny that this whole thing could be solved with one line
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For learning sake, what fix are you referring to?
One line really isn't a big change and I'd really like to understand how it would fix this issue properly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:16:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:8/1473333417005157</guid>
      <description>&lt;p&gt;
Thanks for confirming that it works, but there's no need to close the ticket. :-)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) closed</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:7/1473333345241195</guid>
      <description>worksforme: &lt;p&gt;
Can confirm that does the trick, though some of my settings reseted for some reason (custom settings).
&lt;/p&gt;
&lt;p&gt;
Thanks for quick reply.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:6/1473332648938478</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:5/1473332604168838</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thank you for the feedback, everyone!
&lt;/p&gt;
&lt;p&gt;
As @glafarge noticed, it's trying to connect with the &lt;code&gt;utf8mb4&lt;/code&gt; charset, when something doesn't support &lt;code&gt;utf8mb4&lt;/code&gt; correctly, likely the client library.
&lt;/p&gt;
&lt;p&gt;
Could I get you to test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37982/37982.diff" title="Attachment '37982.diff' in Ticket #37982"&gt;37982.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37982/37982.diff" title="Download"&gt;​&lt;/a&gt;, and see if that fixes the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37982.diff attached to Ticket #37982</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 11:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/37982.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/37982.diff/1473332466370365</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>glafarge</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:4/1473332090529236</guid>
      <description>&lt;p&gt;
Reverting to the previous version of &lt;a href="https://core.trac.wordpress.org/changeset/38442/branches/4.6/src/wp-includes/wp-db.php?old=38133&amp;amp;old_path=trunk%2Fsrc%2Fwp-includes%2Fwp-db.php"&gt;wp-db.php&lt;/a&gt; file resolves temporary the issue.
&lt;/p&gt;
&lt;p&gt;
Problem came from inside &lt;code&gt;set_charset()&lt;/code&gt; function.
&lt;/p&gt;
&lt;p&gt;
As in Wordpress v4.6.1 the MySQL character set queries now depends on the &lt;code&gt;mysqli_set_charset()&lt;/code&gt; success,
&lt;code&gt;SET NAMES %s&lt;/code&gt; will be never executed if it return false.
&lt;/p&gt;
&lt;p&gt;
In my case &lt;code&gt;mysqli_set_charset($dbh, 'utf8mb4')&lt;/code&gt; return false because I think this function don't accepts unicode subsets (like utf8&lt;strong&gt;mb4&lt;/strong&gt; that I use). See &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.6/en/charset-charsets.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;MySQL character sets&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;set_charset()&lt;/code&gt; function must deal with utf8&lt;strong&gt;xxx&lt;/strong&gt; subsets to work properly.
&lt;/p&gt;
&lt;p&gt;
For example the follwing can resolve the issue :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$mysqli_charset = (strpos($charset, 'utf8')!==false) ? 'utf8' : $charset;
$set_charset_succeeded = mysqli_set_charset( $dbh, $mysqli_charset) ;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Maybe we must apply the same logic to the old MySQL extension part of the function.
&lt;/p&gt;
&lt;p&gt;
Tested with MySQL server v5.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:40/1473330198713953</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29783/29783.3.diff" title="Attachment '29783.3.diff' in Ticket #29783"&gt;29783.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29783/29783.3.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove &lt;code&gt;is_admin()&lt;/code&gt; check in &lt;code&gt;get_user_locale()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Move &lt;code&gt;is_admin()&lt;/code&gt; check to &lt;code&gt;load_default_textdomain()&lt;/code&gt; so the admin is always in the user's locale by default
&lt;/li&gt;&lt;li&gt;Loads &lt;code&gt;{$locale}.php&lt;/code&gt; for both the site locale and the user locale. (Not 100% sure about this one).
&lt;/li&gt;&lt;li&gt;Adjusts tests.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/29783/user-language-admin-toolbar.php" title="Attachment 'user-language-admin-toolbar.php' in Ticket #29783"&gt;user-language-admin-toolbar.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/29783/user-language-admin-toolbar.php" title="Download"&gt;​&lt;/a&gt; is a proof-of-concept plugin that, when applying the patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, changes the toolbar language depending on the user's locale, but keeps the rest of the site in the site's locale. See &lt;a class="ext-link" href="https://twitter.com/swissspidy/status/773571032963751936"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/swissspidy/status/773571032963751936&lt;/a&gt; for a screenshot. For sending emails etc. this can be done similarly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>user-language-admin-toolbar.php attached to Ticket #29783</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29783/user-language-admin-toolbar.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29783/user-language-admin-toolbar.php/1473329975752871</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>29783.3.diff attached to Ticket #29783</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29783/29783.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29783/29783.3.diff/1473329939176902</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>glafarge</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:3/1473329239336162</guid>
      <description>&lt;p&gt;
Same as edutz.
After the automatic update 4.6.1, posts appear to be damaged.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Display issues : utf8 tables but accents displayed incorrectly.
&lt;/li&gt;&lt;li&gt;Some posts titles are missing.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It seems that the problem of missing titles occurs only in back-end.
Titles are correctly displayed in front-end (but with character encoding problem).
&lt;/p&gt;
&lt;p&gt;
Furthermore, ACF plugin's extra fields are not be displayed in post-edit page.
&lt;/p&gt;
&lt;p&gt;
Maybe &lt;a href="https://core.trac.wordpress.org/changeset?old_path=%2Ftags%2F4.6&amp;amp;old=38270&amp;amp;new_path=%2Ftags%2F4.6.1&amp;amp;new=38560"&gt;the diff&lt;/a&gt; will help to understand quickly what happened.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:52/1473328913843251</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/26511.4.diff" title="Attachment '26511.4.diff' in Ticket #26511"&gt;26511.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/26511.4.diff" title="Download"&gt;​&lt;/a&gt; is a new patch without the caching (at least for now) and a few new tests related to &lt;code&gt;_load_textdomain_just_in_time()&lt;/code&gt;, which helped fix some bugs. Also contains some docs improvements etc. For the tests to work, one needs to add the files from &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/de_DE.zip" title="Attachment 'de_DE.zip' in Ticket #26511"&gt;de_DE.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/de_DE.zip" title="Download"&gt;​&lt;/a&gt; to the &lt;code&gt;tests/phpunit/data/languages&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov: &lt;code&gt;restore_current_blog()&lt;/code&gt; is confusing because it means "go back to the blog I was on before". Or for locales, "switch to a locale, and then go back".
&lt;/p&gt;
&lt;p&gt;
@GaryJ Looking at &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25293" title="#25293: defect (bug): Switch_to_blog not switching the siteid (new)"&gt;#25293&lt;/a&gt;, an interface would make sense, even though it's probably a bit too much for now for only like 2-3 public methods.
&lt;/p&gt;
&lt;p&gt;
The patch &amp;amp; naming on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/25293" title="#25293: defect (bug): Switch_to_blog not switching the siteid (new)"&gt;#25293&lt;/a&gt; is interesting by the way. Think &lt;code&gt;WP_Locale_State&lt;/code&gt;. Also, it has a &lt;code&gt;is_switched()&lt;/code&gt; method, which maybe could be helpful in our case as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25293 (Switch_to_blog not switching the siteid) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 10:01:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25293#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25293#comment:17/1473328863618226</guid>
      <description>&lt;p&gt;
Looking at this ticket, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;, &lt;code&gt;WP_State&lt;/code&gt; is not a good name for this site-related class. I'd rather see &lt;code&gt;WP_Site_State&lt;/code&gt; and &lt;code&gt;WP_Locale_State&lt;/code&gt; (currently &lt;code&gt;WP_Locale_Switcher&lt;/code&gt;) to implement a &lt;code&gt;WP_State&lt;/code&gt; interface or an abstract class of such name. There's really some common ground. If we settle on consistent naming and public-facing functionality, we can also abstract later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.4.diff attached to Ticket #26511</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 09:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.4.diff/1473328290052449</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #37958,​37983 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37958%2C37983</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37958%2C37983/1473324794292553</guid>
      <description>duplicate: &lt;p&gt;
It's certainly a valid point and one that has come up before. One possible solution was suggested in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37958" title="#37958: enhancement: Improve looping through sites and restoring (new)"&gt;#37958&lt;/a&gt; the other day, so I'm closing this one as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36713 (Check the number of arguments before calling call_user_func_array()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:50:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36713#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36713#comment:2/1473324606335416</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35596 (Color contrast: checkboxes and radio buttons) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35596#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35596#comment:12/1473324233029277</guid>
      <description>&lt;p&gt;
Since core is already styling radio buttons, what about styling checkboxes too? See for example: &lt;a class="ext-link" href="https://standards.usa.gov/form-controls/#checkboxes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://standards.usa.gov/form-controls/#checkboxes&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/3mxfEnTddo.png"&gt;&lt;img src="https://cldup.com/3mxfEnTddo.png" alt="https://cldup.com/3mxfEnTddo.png" crossorigin="anonymous" title="https://cldup.com/3mxfEnTddo.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37985.1.diff attached to Ticket #37985</title>
      
        <dc:creator>aaemnnosttv</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:38:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37985/37985.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37985/37985.1.diff/1473323886472088</guid>
      <description>&lt;p&gt;
Initial patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37985 (Allow all arguments to be passed to an action or filter callback) created</title>
      
        <dc:creator>aaemnnosttv</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:36:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37985</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37985/1473323764644247</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
With the recent addition of WP_Hook for 4.7, I have a small request to make regarding the way callback arguments are handled.
&lt;/p&gt;
&lt;p&gt;
As it is, it is still not possible to pass all arguments to the filter or action callback.  While &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt; would be the ideal solution IMO, it seems as if that is a no-go at least for now.
&lt;/p&gt;
&lt;p&gt;
However, I would like to propose a next-best option which I don't believe has been suggested yet to allow all arguments to be passed which should be fully backwards compatible and no less performant than it is now.
&lt;/p&gt;
&lt;p&gt;
The basic idea is that there should be a way to pass all arguments without just using some arbitrarily large number to fake it.
&lt;/p&gt;
&lt;p&gt;
My patch simply changes the way the callback args are manipulated at call time, so that they are only sliced if the accepted args is a number greater than zero.
&lt;/p&gt;
&lt;p&gt;
To explicitly pass all arguments to the callback, you could add_action or add filter like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'some_tag'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'some_callback'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// or
&lt;/span&gt;&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'some_tag'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'some_callback'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
You can also draw a bit of a parallel with WP_Query conceptually with a -1 for posts_per_page returning unlimited results.
&lt;/p&gt;
&lt;p&gt;
All the current tests still pass and I added one to test this specifically.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:42/1473323279090085</guid>
      <description>&lt;p&gt;
I understand. Thanks for clarifying.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35206#comment:38" title="Comment 38"&gt;peterwilsoncc&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff" title="Attachment '35206.7.diff' in Ticket #35206"&gt;35206.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35206/35206.7.diff" title="Download"&gt;​&lt;/a&gt;, there's a fix to avoid having notices when &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; is extended but methods are called with different arguments.
&lt;/p&gt;
&lt;p&gt;
@dgwyer you're correct, I decided to keep the logic and assignments identical throughout. The intent is to lower the risk of failure if a the class is extended and logic is copy-pasted.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 08:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:2/1473323034906689</guid>
      <description>&lt;p&gt;
Sure.
PHP Version 5.3.3
Server version: 5.5.51 - MySQL Community Server
define('DB_CHARSET', 'utf8mb4');
define('DB_COLLATE', &lt;em&gt;);
&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;
SHOW CREATE TABLE se_posts:
CREATE TABLE &lt;code&gt;se_posts&lt;/code&gt; (
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;ID&lt;/code&gt; bigint(20) unsigned NOT NULL AUTO_INCREMENT,
&lt;code&gt;post_author&lt;/code&gt; bigint(20) unsigned NOT NULL DEFAULT '0',
&lt;code&gt;post_date&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_date_gmt&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_content&lt;/code&gt; longtext COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_title&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_excerpt&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_status&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',
&lt;code&gt;comment_status&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
&lt;code&gt;ping_status&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
&lt;code&gt;post_password&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;em&gt;,
&lt;code&gt;post_name&lt;/code&gt; varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;/em&gt;,
&lt;code&gt;to_ping&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;pinged&lt;/code&gt; text COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_modified&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_modified_gmt&lt;/code&gt; datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
&lt;code&gt;post_content_filtered&lt;/code&gt; longtext COLLATE utf8mb4_unicode_ci NOT NULL,
&lt;code&gt;post_parent&lt;/code&gt; bigint(20) unsigned NOT NULL DEFAULT '0',
&lt;code&gt;guid&lt;/code&gt; varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;em&gt;,
&lt;code&gt;menu_order&lt;/code&gt; int(11) NOT NULL DEFAULT '0',
&lt;code&gt;post_type&lt;/code&gt; varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',
&lt;code&gt;post_mime_type&lt;/code&gt; varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &lt;/em&gt;,
&lt;code&gt;comment_count&lt;/code&gt; bigint(20) NOT NULL DEFAULT '0',
PRIMARY KEY (&lt;code&gt;ID&lt;/code&gt;),
KEY &lt;code&gt;post_name&lt;/code&gt; (&lt;code&gt;post_name&lt;/code&gt;(191)),
KEY &lt;code&gt;type_status_date&lt;/code&gt; (&lt;code&gt;post_type&lt;/code&gt;,&lt;code&gt;post_status&lt;/code&gt;,&lt;code&gt;post_date&lt;/code&gt;,&lt;code&gt;ID&lt;/code&gt;),
KEY &lt;code&gt;post_parent&lt;/code&gt; (&lt;code&gt;post_parent&lt;/code&gt;),
KEY &lt;code&gt;post_author&lt;/code&gt; (&lt;code&gt;post_author&lt;/code&gt;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
) ENGINE=MyISAM AUTO_INCREMENT=2794888 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37984 (Relocate either dbDelta() or wp_should_upgrade_global_tables() out of ...) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37984</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37984/1473321344195305</guid>
      <description>&lt;p&gt;
I have a need to use &lt;code&gt;dbDelta()&lt;/code&gt; inside a plugin that creates custom global database tables.
&lt;/p&gt;
&lt;p&gt;
I'd like to use &lt;code&gt;wp_should_upgrade_global_tables()&lt;/code&gt; before deciding to pull in all of &lt;code&gt;upgrade.php&lt;/code&gt; just to use &lt;code&gt;dbDelta()&lt;/code&gt;. This is not currently possible, because &lt;code&gt;wp_should_upgrade_global_tables()&lt;/code&gt; is located inside of &lt;code&gt;upgrade.php&lt;/code&gt; along with &lt;code&gt;dbDelta()&lt;/code&gt;, meaning I need to pull in that file on every &lt;code&gt;admin_init&lt;/code&gt;, just to check if the environment is right to allow global table upgrades to continue.
&lt;/p&gt;
&lt;p&gt;
In my research of how to best solve this problem for myself, I see 1 of 2 possible outcomes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Move &lt;code&gt;dbDelta()&lt;/code&gt;, &lt;code&gt;wp_should_upgrade_global_tables()&lt;/code&gt; or both, out of &lt;code&gt;upgrade.php&lt;/code&gt;, probably to &lt;code&gt;load.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Leave it alone, deal with plugins burning a few extra CPU cycles, and close this issue as wontfix, because having either of these two functions always included doesn't make much sense either
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:217</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:217/1473321280245324</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jacobsantos. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473321277000756"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37983 (Restore_current_blog) updated</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:41:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37983#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37983#comment:1/1473320510168140</guid>
      <description>&lt;p&gt;
i wanted to put this link: &lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/89113/restore-current-blog-vs-switch-to-blog"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/questions/89113/restore-current-blog-vs-switch-to-blog&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(p.s. does the first post have EDIT on this trac site ?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982#comment:1/1473320493576883</guid>
      <description>&lt;p&gt;
Hi there, and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Would you be able to provide some additional information that we will need to look into this matter?
&lt;/p&gt;
&lt;p&gt;
What we are looking for is your PHP and MySQL versions, the values of &lt;code&gt;DB_CHARSET&lt;/code&gt; and &lt;code&gt;DB_COLLATE&lt;/code&gt;, as well as the output from running the SQL query &lt;code&gt;SHOW CREATE TABLE wp_posts&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37983 (Restore_current_blog) created</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:40:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37983</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37983/1473320419210034</guid>
      <description>&lt;p&gt;
You know, the performance issues of
&lt;code&gt;restore_current_blog()&lt;/code&gt; while using that many times:
&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/98965/get-posts-from-sites-in-multisite"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.stackexchange.com/questions/98965/get-posts-from-sites-in-multisite&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
please, just make available another function, i.e.
&lt;code&gt;restore_current_blog()&lt;/code&gt;
which can be executed only once, after the final loop, and that will be good.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:86/1473320349622908</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:85" title="Comment 85"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:84" title="Comment 84"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is increased data on the debug output a valid argument?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Anything can be a legitimate argument if it affects ones workflows.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So, a training issue? This is a training issue. It is also a manager's excuse. "Why did you change a perfectly functional UI? Now I have to spend $xx,xxx retraining all of my employee's because you moved a button from location x to location y."
&lt;/p&gt;
&lt;p&gt;
To be honest, I never thought I would hear this from a developer. I guess it makes sense. We developers like to argue over white space and that is one of the most pointless arguments a developer could have. Well, besides text editor. We are fond of our holy wars.
&lt;/p&gt;
&lt;p&gt;
My reasoning is that things change and people either change with it or they don't. Those that don't survive, certainly, but they are stuck. You mentioned using a debugger and I will say that PHP debugger has come a long way. It is unfortunate that there aren't a lot of free choices that make it easy to use xdebug to step through code and set breakpoints. You could look into paying money for a professional license of an IDE that does have good support? There might be a vim plugin or emacs. I don't use emacs, so I wouldn't know.
&lt;/p&gt;
&lt;p&gt;
Actually, the point is that your decision to partially reject progress based on your selfish desire to not have to scroll a little more is really a little disappointing to be honest. I would make a star wars quote, but I have been told it is a terrible movie. Pretty awesome last few minutes, up until the "NOOOOOO!" and "She died of a broken heart" parts. Dat action dough.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving a global to a protected attribute is a valid refactoring technique recommended by experts. Furthermore allows for dependency injection at a later date. Which is considered a good thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, It's a valid refactoring technique, which adds zero benefit for WordPress. Referencing outside objects via a class method does nothing for code clarity or improving future code. All it does is hide the instance behind yet another layer of abstraction, something that doesn't give us any major benefits. Dependency injection can be done at a later date when it's viable regardless of this change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nah, that sounds a lot like micro-optimizations to me. I hear that argument for Python, "Make class attributes local, so that you gain a boost in performance." You could do it, certainly, then after you look at the awful mess you created, you'll go back to doing it the proper way.
&lt;/p&gt;
&lt;p&gt;
I love your argument by the way. The beauty of it is that it can be used for anything in OOP and one of the many, many reasons classes are a mess in WordPress. I do agree that if you don't want to do OOP right, that you shouldn't do it at all, but that ship has already sailed. Classes are terrible in WordPress and it looks like no one knows what they are doing.
&lt;/p&gt;
&lt;p&gt;
This argument, is part of the reason why. I can't believe I have to write this. I know you know already know what I am going to write next, but I'm going to write it anyway. I hope you are trolling. If you are, good show. OOP is nothing, if not abstractions. That is all it is. All you are doing is passing one reference of an abstraction to another concrete example of another abstraction. It is all abstract, until it is not. It is one of those awful paintings that people say is brilliant, but just looks like something a child would finger paint.
&lt;/p&gt;
&lt;p&gt;
I don't know what you mean by an class attribute being an abstraction. I guess in the purely technical sense it is merely the language restricting access to some arbitrary address offset in memory, but from a OOP perspective, it is probably the most concrete thing you can get, other than classes themselves. I would say that attributes would be purely concrete, if you want to go down to the machine layer and think of them as structs. In that sense, you have functions abstracted as methods acting on structs holding data.
&lt;/p&gt;
&lt;p&gt;
Sure going from arbitrary heap location to an arbitrary heap location is probably not that impressive. I would add that the protected variable and the global are both pointing to the same location in memory, until which time something changes. It is harder to reason the copy-on-write rules in PHP as they are slightly different than other languages that actually make sense and actually use pointers. I always forget in PHP5, if you change a member in a class if it holds true for other references to the same object. I could 3v4l that question, but meh that isn't the point.
&lt;/p&gt;
&lt;p&gt;
The point is more that the benefit will come later when you have a nicely abstracted class and everything fits in its place and you don't have to worry about some implementation changing on your, because you don't care about the implementation, you only care that it returns what it should.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is it still a global? If the global changes, the internal object reference will not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A reference to a global, verses a direct global import is ultimately the same object, sure, you're accessing it differently, you're creating an extra memory reference to it, but it's still a global object which you're pulling in to every function you use it within.
&lt;/p&gt;
&lt;p&gt;
All this does is give you a fuzzy feeling of "Oh, Look at this, WordPress suddenly has 30 less uses of a global!" when in reality nothing actually changed, and it only added an extra layer in front of the developer for no benefit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/MimicCMS/mimiccms-library/tree/master/src/MimicCMS/WordPress/AdminBar"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/MimicCMS/mimiccms-library/tree/master/src/MimicCMS/WordPress/AdminBar&lt;/a&gt; - I'll just put this here. My point is that, I get a warm fuzzy feeling when OOP is done right. Or at least as right as I can attempt to do it.
&lt;/p&gt;
&lt;p&gt;
I don't get warm fuzzy feelings when an application has 30 less uses of a global, because as far as I am concerned with regards to PHP, having 1 global is bad. 30 less of something that could potentially blow up and take the entire application down is 30 less of something I have to worry about. You understand that I could just create a plugin and make &lt;code&gt;$wpdb&lt;/code&gt; a global and accidentally create a local variable with the same name and destroy the reference in $wpdb? PHP won't tell you and the condition may not occur but one in a million. Imagine that day when one in a million happens. Imagine that one in a million becomes 1 in 1.
&lt;/p&gt;
&lt;p&gt;
The goal of programming should be to minimize risk. Globals are a huge risk. A protected member is less than a risk. Only a risk for children that inherit from the parent. A global is inherited by the entire application, you change it when it should not be changed and the application is done.
&lt;/p&gt;
&lt;p&gt;
It is less about warm fuzzy feeling than, "Oh dear god! Don't touch the giant red button!" and going around screaming, "You didn't touch the giant red button did you?" Why just not have a giant red button in the first place?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
As an aside, I understand that in some languages, globals are a thing and they are fine. Go uses globals and they are great. Part of the reason they are fine is because they are per module, which come to think of it, could be pretty bad. I don't believe you can have a global that is entire application wide, unless you started playing with memory management. Other languages have likewise gotten passed the global issue by not allowing variables to be accessed passed the module barrier. If you access a module global, then you meant to access it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44604998986b4402898774e288c113ce.png attached to Ticket #37982</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/44604998986b4402898774e288c113ce.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/44604998986b4402898774e288c113ce.png/1473319060734685</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21c7009541ea46c990be93bf590a66e5.png attached to Ticket #37982</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37982/21c7009541ea46c990be93bf590a66e5.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37982/21c7009541ea46c990be93bf590a66e5.png/1473318664572976</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37982 (4.6.1 Breaks apostrophes in titles and utf-8 characters) created</title>
      
        <dc:creator>edutz</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37982</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37982/1473318648286752</guid>
      <description>&lt;p&gt;
I've just updated to 4.6.1 and noticed that in my article list, there were some "unnamed" posts. I've checked them on frontpage but they were there(working and full text), so i opened one unnamed in editor and no name was given and no description. Furthermore, it seems that for every apostrophes it replaces with this char: � and the same for utf-8 characters (å â ...). Reverting to 4.6.0 does absolutely nothing, somehow, something is messed up in database.
PS: i did removed plugins and custom themes just to be sure.
PS2: o do have utf8mb4 charset in config. as well as  "ini_set( 'default_charset', 'UTF-8' );"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:41/1473318333307849</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38575" title="Menus: Fix notices thrown by classes extending `Walker_Nav_Menu`.
 ..."&gt;38575&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menus: Fix notices thrown by classes extending &lt;code&gt;Walker_Nav_Menu&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Methods in &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; can be called with multiple, incompatible &lt;code&gt;$args&lt;/code&gt; objects so an &lt;code&gt;insset()&lt;/code&gt; check is required to avoid throwing notices.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38575]: Menus: Fix notices thrown by classes extending `Walker_Nav_Menu`.  ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 07:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38575</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38575/1473318332771698</guid>
      <description>&lt;p&gt;
Menus: Fix notices thrown by classes extending &lt;code&gt;Walker_Nav_Menu&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Methods in &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; can be called with multiple, incompatible &lt;code&gt;$args&lt;/code&gt; objects so an &lt;code&gt;insset()&lt;/code&gt; check is required to avoid throwing notices.
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 08 Sep 2016 06:29:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:216</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:216/1473316189911931</guid>
      <description>&lt;p&gt;
Oh. Oh dear god. Oh you poor poor people. I am so, so very sorry.
&lt;/p&gt;
&lt;p&gt;
I guess it will be okay. It should be okay. As long as everything works. Looking at the code that was committed...
&lt;/p&gt;
&lt;p&gt;
I'm sorry. The design decisions that were made years and years ago were mostly compromises for PHP4. Things had to work on PHP4 you see, PHP4 had priority.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Also, the decision was that we didn't care about plugins affected by this bug,&lt;/strong&gt; because at the time it was an edge case. I feel that it still is by the way. Looks like I'm going to maintain a separate build of WordPress that reverts this mess of a commit.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;I don't care.&lt;/strong&gt; You will either regret this commit and revert it or it won't matter and my fears will be unfounded. Either way, I think it would be a good time for a fork. Or not. It should be fine. I mean, it isn't like this patch resembles a patch that was submitted years ago back when we had a similar problem and rejected that shit faster than the fastest thing you can think that can go fast.
&lt;/p&gt;
&lt;p&gt;
It is funny to me. How history repeats itself. I hope evil didn't prevail this time. Who knows? I forget why a similar solution was rejected so long ago. Performance reasons? Must have been performance reasons and PHP4. WordPress sucked back when PHP4 had to be supported. Imagine being stuck supporting a older version of PHP. What a nightmare.
&lt;/p&gt;
&lt;p&gt;
I still think it is funny that this whole thing could be solved with one line and fuck it, let's just add class! I mean, you can't really solve this problem in a good way. Well, you can, you can do what you did in the commit.
&lt;/p&gt;
&lt;p&gt;
You know. I'm sure it will be fine. It'll be fine. PHP5 and PHP7 are way faster than they were back in 2007. Servers are way faster than they were in 2007.
&lt;/p&gt;
&lt;p&gt;
Well. Good luck. I'll make sure the door doesn't hit my ass on the way out again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946#comment:5/1473313191113456</guid>
      <description>&lt;p&gt;
Thanks for all of the info so far @pbarnhart and thanks for making the switch to HTTP/2! :)
&lt;/p&gt;
&lt;p&gt;
For a basic initial comparison, we're serving HTTP/2 at WSU to ~95% of authenticated visitors now (thanks modern browsers!) and haven't seen any trouble with uploads in Chrome. However, we're on Nginx 1.11.3 rather than Apache, so it seems like that could be the right path to start troubleshooting.
&lt;/p&gt;
&lt;p&gt;
If possible, would you mind sharing your Apache configuration as an attachment (publicly) or privately? It's okay if it's sanitized, but it would be nice to try to reproduce this in a VM environment.
&lt;/p&gt;
&lt;p&gt;
I poked around in the Apache &lt;a class="ext-link" href="http://www.apache.org/dist/httpd/CHANGES_2.4"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;changelogs for the 2.4.x releases&lt;/a&gt; since 2.4.18 and there are quite a few bug fixes for the mod_http2 module. 2.4.18 itself happened well before Chrome made the switch from NPN to ALPN and is only one release into Apache's support for HTTP/2. See also the changelogs for the &lt;a class="ext-link" href="https://github.com/icing/mod_h2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;upstream project mod_h2&lt;/a&gt; that donated the module to Apache as it continues to be an active project.
&lt;/p&gt;
&lt;p&gt;
I didn't look into how many of those changes Ubuntu has included in recent packaging of the 2.4.18 version, but I would try to upgrade to 2.4.23 on your server before spending much time looking at other possibilities.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:32:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:40/1473312745636116</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:39/1473312633774092</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38574" title="Menus: Improve documentation of new `$item_spacing` argument.
Adds ..."&gt;38574&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Menus: Improve documentation of new &lt;code&gt;$item_spacing&lt;/code&gt; argument.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds &lt;code&gt;@since&lt;/code&gt; tags for and improves description of the new &lt;code&gt;$item_spacing&lt;/code&gt; argument added to &lt;code&gt;wp_nav_menu()&lt;/code&gt;, &lt;code&gt;wp_list_pages()&lt;/code&gt;, and &lt;code&gt;wp_page_menu()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props johnbillion for copy.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38574]: Menus: Improve documentation of new `$item_spacing` argument.  Adds ...</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38574</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38574/1473312632898346</guid>
      <description>&lt;p&gt;
Menus: Improve documentation of new &lt;code&gt;$item_spacing&lt;/code&gt; argument.
&lt;/p&gt;
&lt;p&gt;
Adds &lt;code&gt;@since&lt;/code&gt; tags for and improves description of the new &lt;code&gt;$item_spacing&lt;/code&gt; argument added to &lt;code&gt;wp_nav_menu()&lt;/code&gt;, &lt;code&gt;wp_list_pages()&lt;/code&gt;, and &lt;code&gt;wp_page_menu()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38523" title="Menus: Add white space option to `wp_nav_menu()` and ..."&gt;[38523]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props johnbillion for copy.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35206" title="#35206: enhancement: Allow theme authors to control white space between menu items (closed: fixed)"&gt;#35206&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 05:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:38/1473311075539281</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff" title="Attachment '35206.7.diff' in Ticket #35206"&gt;35206.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35206/35206.7.diff" title="Download"&gt;​&lt;/a&gt;, there's a fix to avoid having notices when &lt;code&gt;Walker_Nav_Menu&lt;/code&gt; is extended but methods are called with different arguments.
&lt;/p&gt;
&lt;p&gt;
@dgwyer you're correct, I decided to keep the logic and assignments identical throughout. The intent is to lower the risk of failure if a the class is extended and logic is copy-pasted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35206.7.diff attached to Ticket #35206</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35206/35206.7.diff/1473309957472403</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37122 (Error out when xml_create_parser is not available) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37122#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37122#comment:6/1473308251480997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice catch @kraftbj and agree that this makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:215</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:215/1473308200127829</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38573" title="Docs: Fix minor formatting for inline docs in `WP_Hook` following its ..."&gt;38573&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Fix minor formatting for inline docs in &lt;code&gt;WP_Hook&lt;/code&gt; following its introduction in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38573]: Docs: Fix minor formatting for inline docs in `WP_Hook` following its ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38573</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38573/1473308199641143</guid>
      <description>&lt;p&gt;
Docs: Fix minor formatting for inline docs in &lt;code&gt;WP_Hook&lt;/code&gt; following its introduction in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;[38571]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37128 (Introduce helper function `wp_list_sort()`) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37128#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37128#comment:7/1473308130183475</guid>
      <description>&lt;p&gt;
In general, core has tended to not add utility functions that it doesn't use.  Is there anywhere in core this would make sense right now?  Not saying that should keep it out, but I think if core can use it, the case for including it is stronger.
&lt;/p&gt;
&lt;p&gt;
One thing that isn't obvious from me just reading the tests and the docs is what happens if wp_list_sort is called on an object where &lt;code&gt;$orderby&lt;/code&gt; isn't set on each field?  Where does that fall in the sort?  Seems like that is something that should be documented and tested so the code remains consistent into the future.
&lt;/p&gt;
&lt;p&gt;
Additionally, what about when you want to do both asc and desc ?  For example, alphabetical by title, but reverse chronological? Perhaps there should just be a single argument that you pass in that includes both the field and the direction?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37772 (Not working "wp_default_styles" on PHP 7.1.0) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37772#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37772#comment:8/1473307571710049</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37423 (Permalink for pending post - get_sample_permalink_html bug) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37423#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37423#comment:7/1473307462639912</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38572" title="Permalinks: Ensure Pending Review Posts permalink posts link to the ..."&gt;38572&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Permalinks: Ensure Pending Review Posts permalink posts link to the draft&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34670" title="Edit: Remove the redundant &amp;#34;View Post&amp;#34; button-link and link the sample ..."&gt;[34670]&lt;/a&gt; made the displayed permalink clickable. For posts that were pending review, the permalink wasn't being properly generated so the link wouldn't go to the preview.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props knutsp, enshrined.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37423" title="#37423: defect (bug): Permalink for pending post - get_sample_permalink_html bug (closed: fixed)"&gt;#37423&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38572]: Permalinks: Ensure Pending Review Posts permalink posts link to the ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 08 Sep 2016 04:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38572/1473307462079231</guid>
      <description>&lt;p&gt;
Permalinks: Ensure Pending Review Posts permalink posts link to the draft
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34670" title="Edit: Remove the redundant &amp;#34;View Post&amp;#34; button-link and link the sample ..."&gt;[34670]&lt;/a&gt; made the displayed permalink clickable. For posts that were pending review, the permalink wasn't being properly generated so the link wouldn't go to the preview.
&lt;/p&gt;
&lt;p&gt;
Props knutsp, enshrined.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37423" title="#37423: defect (bug): Permalink for pending post - get_sample_permalink_html bug (closed: fixed)"&gt;#37423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:54:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:214</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:214/1473306854335279</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38571" title="Hooks: Add the new class `WP_Hook`, and modify hook handling to make ..."&gt;38571&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Hooks: Add the new class &lt;code&gt;WP_Hook&lt;/code&gt;, and modify hook handling to make use of it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Filters and actions have been the basis of WordPress' plugin functionality since time immemorial, they've always been a reliable method for acting upon the current state of WordPress, and will continue to be so.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Over the years, however, edge cases have cropped up. Particularly when it comes to recursively executing hooks, or a hook adding and removing itself, the existing implementation struggled to keep up with more complex use cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And so, we introduce &lt;code&gt;WP_Hook&lt;/code&gt;. By changing &lt;code&gt;$wp_filter&lt;/code&gt; from an array of arrays, to an array of objects, we reduce the complexity of the hook handling code, as the processing code (see &lt;code&gt;::apply_filters()&lt;/code&gt;) only needs to be aware of itself, rather than the state of all hooks. At the same time, we're able te handle more complex use cases, as the object can more easily keep track of its own state than an array ever could.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jbrinley for the original architecture and design of this patch.&lt;br /&gt;
Props SergeyBiryukov, cheeserolls, Denis-de-Bernardy, leewillis77, wonderboymusic, nacin, jorbin, DrewAPicture, ocean90, dougwollison, khag7, pento, noplanman and aaroncampbell for their testing, suggestions, contributions, patch maintenance, cajoling and patience as we got through this.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38571]: Hooks: Add the new class `WP_Hook`, and modify hook handling to make ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:54:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38571</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38571/1473306853788734</guid>
      <description>&lt;p&gt;
Hooks: Add the new class &lt;code&gt;WP_Hook&lt;/code&gt;, and modify hook handling to make use of it.
&lt;/p&gt;
&lt;p&gt;
Filters and actions have been the basis of WordPress' plugin functionality since time immemorial, they've always been a reliable method for acting upon the current state of WordPress, and will continue to be so.
&lt;/p&gt;
&lt;p&gt;
Over the years, however, edge cases have cropped up. Particularly when it comes to recursively executing hooks, or a hook adding and removing itself, the existing implementation struggled to keep up with more complex use cases.
&lt;/p&gt;
&lt;p&gt;
And so, we introduce &lt;code&gt;WP_Hook&lt;/code&gt;. By changing &lt;code&gt;$wp_filter&lt;/code&gt; from an array of arrays, to an array of objects, we reduce the complexity of the hook handling code, as the processing code (see &lt;code&gt;::apply_filters()&lt;/code&gt;) only needs to be aware of itself, rather than the state of all hooks. At the same time, we're able te handle more complex use cases, as the object can more easily keep track of its own state than an array ever could.
&lt;/p&gt;
&lt;p&gt;
Props jbrinley for the original architecture and design of this patch.
Props SergeyBiryukov, cheeserolls, Denis-de-Bernardy, leewillis77, wonderboymusic, nacin, jorbin, DrewAPicture, ocean90, dougwollison, khag7, pento, noplanman and aaroncampbell for their testing, suggestions, contributions, patch maintenance, cajoling and patience as we got through this.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17817" title="#17817: defect (bug): do_action/apply_filters/etc. recursion on same filter kills underlying call (closed: fixed)"&gt;#17817&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37976 (wp_users deleted but warning does not appear.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37976#comment:1/1473306198639551</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/12671" title="#12671: enhancement: Installer page doesn't check if MySQL tables were created successfully (assigned)"&gt;#12671&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37979 (WordPress Password Reset link is missing (white on white)) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:39:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37979#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37979#comment:2/1473305944562933</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37981 (template_include not working in customizer previewer) created</title>
      
        <dc:creator>jaschaio</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37981/1473305758909559</guid>
      <description>&lt;p&gt;
I have the following problem and I am not sure if its a bug. If I try to include a different page template via the template_include hook, it doesn't work within the customizer preview.
&lt;/p&gt;
&lt;p&gt;
I took the example from the &lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Filter_Reference/template_include"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Codex&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;portfolio_page_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'portfolio'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$new_template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;locate_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'portfolio-page-template.php'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$new_template&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$new_template&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'template_include'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'portfolio_page_template'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
For this example my "portfolio-page-template.php" only displays the word "test":
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If I visit the portfolio page on the frontend it loads the template successfully and displays the word "test".
&lt;/p&gt;
&lt;p&gt;
But when I try to load the same URL within the customizer via the api it doesn't loads the template and shows me the home page instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.customize.previewer.previewUrl.set('http://localhost:8888/portfolio/')
&lt;/pre&gt;&lt;p&gt;
The same happens if I click on a link within the previewer to the portfolio page. It doesn't load the template nor the page. Any other link or page that doesn't hook into the template_include loads without a problem.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:85</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:85/1473304433094810</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:84" title="Comment 84"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is increased data on the debug output a valid argument?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Anything can be a legitimate argument if it affects ones workflows.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Moving a global to a protected attribute is a valid refactoring technique recommended by experts. Furthermore allows for dependency injection at a later date. Which is considered a good thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, It's a valid refactoring technique, which adds zero benefit for WordPress. Referencing outside objects via a class method does nothing for code clarity or improving future code. All it does is hide the instance behind yet another layer of abstraction, something that doesn't give us any major benefits. Dependency injection can be done at a later date when it's viable regardless of this change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is it still a global? If the global changes, the internal object reference will not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A reference to a global, verses a direct global import is ultimately the same object, sure, you're accessing it differently, you're creating an extra memory reference to it, but it's still a global object which you're pulling in to every function you use it within.
&lt;/p&gt;
&lt;p&gt;
All this does is give you a fuzzy feeling of "Oh, Look at this, WordPress suddenly has 30 less uses of a global!" when in reality nothing actually changed, and it only added an extra layer in front of the developer for no benefit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35043 (Images in RSS feed are broken) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 03:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35043#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35043#comment:25/1473303971060230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I haven't seen any new reports of this in 6 months. Thinking we may be ok to close as a wontfix and let affected users handle this with a filter when needed. Any seconds?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35593 (Metadata from wrong file in media_handle_upload) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35593#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35593#comment:4/1473302283260136</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @normanrz,
&lt;/p&gt;
&lt;p&gt;
Curious if you were able to look into my previous suggestion about updating the metadata using the &lt;code&gt;wp_update_attachment_metadata&lt;/code&gt; hook?
&lt;/p&gt;
&lt;p&gt;
Thanks,
Joe
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33430 (Media inline upload "window" non responsive hight in IE 9) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33430#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33430#comment:3/1473302139135523</guid>
      <description>worksforme: &lt;p&gt;
Hi @theatp,
&lt;/p&gt;
&lt;p&gt;
I'm going to go ahead and close this ticket since it doesn't seem to be reproducible any longer and we haven't heard any other reports. Feel free to reopen if you think this is still an issue and can provide information to reproduce it.
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35291 (filters for responsive image srcset and sizes attributes) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35291#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35291#comment:3/1473301968585308</guid>
      <description>invalid: &lt;p&gt;
Hi @Hube2,
&lt;/p&gt;
&lt;p&gt;
Apologies for the delay in responding. You're correct that WordPress doesn't have any native support for the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element, which is what you would likely need to produce in order to allow your clients to display images with different ratios depending on the viewport width. For the time being, I suggest building custom fields, as you are doing, and use them to build your own markup. If you &lt;em&gt;do&lt;/em&gt; need to filter the &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; values, you can use the &lt;code&gt;wp_calculate_image_srcset&lt;/code&gt; and &lt;code&gt;wp_calculate_image_sizes&lt;/code&gt; filters.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37549 (Add optional parameter to wp_generate_attachment_metadata for image ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 02:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37549#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37549#comment:6/1473300954158775</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37549#comment:5" title="Comment 5"&gt;sterlo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@joemcgill I will take a stab at it and report back.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @sterlo any update on whether the approach mentioned above would get you what you need here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37980 (Don't attach events to customizer section headings with cannot-expand class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:51:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37980#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37980#comment:1/1473299483059098</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473299480001033"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37980 (Don't attach events to customizer section headings with cannot-expand class) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:50:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37980</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37980/1473299440734915</guid>
      <description>&lt;p&gt;
Back when the customizer used &lt;code&gt;accordion.js&lt;/code&gt;, the &lt;code&gt;.cannot-expand&lt;/code&gt; class could be added to section headings that couldn't be expanded to prevent JS events and hover/focus styles from being applied. While the class continues to prevent styles from being applied (and is used in a couple places for core), JS events seem to be added now and those should be removed. See &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473274466001022"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/themereview/p1473274466001022&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The fix should be reasonably straightforward - bailing early from &lt;code&gt;attachEvents()&lt;/code&gt; or &lt;code&gt;onChangeExpanded()&lt;/code&gt; in the section JS in &lt;code&gt;customize-controls.js&lt;/code&gt; if the event target has class cannot-expand - so I'm marking as a good first bug for now if anyone's interested in tackling it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30741 (Build-out API for adding Customizer Panels, Sections, and Controls ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30741#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30741#comment:19/1473298515845077</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1473298512001031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36534,​37853 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 08 Sep 2016 01:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36534%2C37853</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36534%2C37853/1473298069304904</guid>
      <description>duplicate: &lt;p&gt;
Hi @cezariuszmarek, I also suspect this is a duplicate of &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/36534" title="#36534: defect (bug): Media Upload Issue Since 4.5 Upgrade (reopened)"&gt;#36534&lt;/a&gt;. Generally, what's happening in these cases is that the PHP process is encountering a fatal error during the process of processing the uploaded images. Since the error is probably happening in the image processing library, PHP is not able to recover. Unfortunately, there are many different reasons this error might occur, which is why the other ticket has not been resolved. There may be some information in your server's error logs that may help.
&lt;/p&gt;
&lt;p&gt;
In the mean time, I'm going to go ahead and close this ticket as a duplicate, but feel free to keep the conversation going here or over on the other ticket if you prefer.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 08 Sep 2016 00:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:213</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:213/1473296129085132</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473296126000698"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37979 (WordPress Password Reset link is missing (white on white)) closed</title>
      
        <dc:creator>dfterry</dc:creator>

      <pubDate>Thu, 08 Sep 2016 00:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37979#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37979#comment:1/1473294199399066</guid>
      <description>invalid: &lt;p&gt;
my mistake, this is a WooCommerce problem.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item>
   </channel>
</rss>