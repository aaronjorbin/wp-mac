<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 25 Mar 2006 22:52:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143327175000000</guid>
      <description>&lt;p&gt;
Yes add_management_page should get called with the capability rather than then numerical 9 as well so that the menu is only shown for the capable users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2585 (Add is() function that checks for single object queries.) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 25 Mar 2006 21:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2585/1143323354000000</guid>
      <description>&lt;table class="wiki"&gt;
&lt;tr&gt;We need to audit all is_single() &lt;td&gt; is_page() checks to determine if an is_attachment() check is needed too.
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2553 (update_option action passes newoption serialized) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 25 Mar 2006 21:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2553</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2553/1143323218000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3659" title="update_option() action fix. fixes #2553"&gt;[3659]&lt;/a&gt;) update_option() action fix. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2553" title="#2553: defect (bug): update_option action passes newoption serialized (closed: fixed)"&gt;#2553&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [3659]: update_option() action fix. fixes #2553</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 25 Mar 2006 21:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3659</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3659/1143323213902520</guid>
      <description>&lt;p&gt;
update_option() action fix. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2553" title="#2553: defect (bug): update_option action passes newoption serialized (closed: fixed)"&gt;#2553&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2598 (TinyMCE 2.0.5) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sat, 25 Mar 2006 21:35:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2598</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2598/1143322508000000</guid>
      <description>&lt;p&gt;
markjaquith: My pspell doesn't recognize "blowfish" either, but when I changed it to "blow-fish" it was okay.
&lt;/p&gt;
&lt;p&gt;
Modifying config.php, I forced it to use the Google API and it did exactly what you described, so I would guess that your aspell binary is not where the plugin is looking. Check config.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_error.diff attached to Ticket #2600</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 25 Mar 2006 21:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2600/wp_error.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2600/wp_error.diff/1143320733000000</guid>
      <description>&lt;p&gt;
WP_Error and is_wp_error()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2600 (WP_Error class for returning errors) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sat, 25 Mar 2006 21:05:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2600</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2600/1143320707000000</guid>
      <description>&lt;p&gt;
I'd like a nicer way to return errors, especially when validating forms and returning multiple error messages.  Let's have a WP_Error class that holds error codes and messages.  An is_wp_error function checks return values to see if they are a WP_Error.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function doer_of_stuff() {
  return  new WP_Error('broke', __("I've fallen and can't get up"));
}
$return = doer_of_stuff();
if ( is_wp_error($return) )
   echo $return-&amp;gt;get_error_message();
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Sat, 25 Mar 2006 16:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143304919000000</guid>
      <description>&lt;p&gt;
With svn at 3658, 2626.3.diff installed, Role Manager plugin &lt;a class="ext-link" href="http://redalt.com/wiki/Role+Manager"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://redalt.com/wiki/Role+Manager&lt;/a&gt; installed:
&lt;/p&gt;
&lt;p&gt;
Assign Subscriber, Contributer, Author, or Editor the Manage Option capability and they don't see the Manage-&amp;gt;Backup menu choice.
&lt;/p&gt;
&lt;p&gt;
Create a user, give them the Administrator role, then delete the Manage Options capability from that user.  That user can see the Manage-&amp;gt;Backup menu, they can select the backup options and click on Backup! button, it displays the screen with the empty progress bar and just sits there--no error or insufficient permissions message shows.
&lt;/p&gt;
&lt;p&gt;
Noticed that at lines 325 and 329 in wp-db-backup.php, user level 9 gets passed to the add_management_page function.  Not sure what that means for this ticket--meaning can you can pass a "capability" to functions such as add_management_page, or do those functions need to be revised to handle capabilities?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2568 (Translate meridiem in time) updated</title>
      
        <dc:creator>abhay</dc:creator>

      <pubDate>Sat, 25 Mar 2006 16:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2568</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2568/1143303109000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Provide support for legacy and it is ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2593 (The walk_tree family should be a class) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Sat, 25 Mar 2006 15:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2593</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2593/1143302154000000</guid>
      <description>&lt;p&gt;
Addendum: some pitfalls.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Your &lt;code&gt;start_el()&lt;/code&gt; etc. need to accept all the content so far, then append whatever content. Don't return a new string.
&lt;/li&gt;&lt;li&gt;They also need to return, NOT echo.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That's about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2593 (The walk_tree family should be a class) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Sat, 25 Mar 2006 15:49:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2593</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2593/1143301771000000</guid>
      <description>&lt;p&gt;
That was a crap explanation. Lets go again.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;walk_tree()&lt;/code&gt; is a nice new generic function that got added to be the core a few weeks ago. It's a kind of generic pretty-printer for tree-like structures. For example, we used to have &lt;code&gt;list_cats()&lt;/code&gt; and &lt;code&gt;wp_list_pages()&lt;/code&gt;, both of which printed a hierarchial structure out (the category list for the former, the page list for the latter). &lt;code&gt;walk_tree()&lt;/code&gt; generalises this by allowing you to pass in some callbacks that will get called when starting a new element, finishing an element, or ascending or descending a level.
&lt;/p&gt;
&lt;p&gt;
Callbacks are ugly when abused like this, so this is how my class does it: suppose you want to print some hierarchial tree. Create a new class which extends &lt;code&gt;Walker&lt;/code&gt; and defines the following methods:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;start_el()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;end_el()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;start_lvl()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;end_lvl()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The names should be fairly self-explanatory. You'll also need to define $dbfields, an associative array:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;$dbfields['parent']&lt;/code&gt; should be the DB field which is the parent of any given record. This is &lt;code&gt;post_parent&lt;/code&gt; for posts and &lt;code&gt;category_parent&lt;/code&gt; for cats.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$dbfields['id']&lt;/code&gt; is the same but for the ID. E.g. &lt;code&gt;ID&lt;/code&gt; for posts and &lt;code&gt;cat_ID&lt;/code&gt; for cats.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Once that's done, create an instance and call &lt;code&gt;$instance-&amp;gt;walk()&lt;/code&gt; passing in the elements you want to print (in object form), and the maximum depth (or -1 to just print flat, no hierarchy). Any extra parameters will get passed to your callbacks.
&lt;/p&gt;
&lt;p&gt;
There are examples in the code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tinymce.zip attached to Ticket #2598</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Sat, 25 Mar 2006 15:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2598/tinymce.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2598/tinymce.zip/1143301580000000</guid>
      <description>&lt;p&gt;
For Firas
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2599 (Non-PHP-as-CGI servers never send Trackbacks) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Sat, 25 Mar 2006 15:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2599</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2599/1143300663000000</guid>
      <description>&lt;p&gt;
s/write_post/wp_insert_post/
I was close :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2599 (Non-PHP-as-CGI servers never send Trackbacks) closed</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Sat, 25 Mar 2006 15:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2599</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2599/1143299779000000</guid>
      <description>invalid: &lt;p&gt;
Pinging works fine on non-cgi, the above code is actually a hack to make it work on CGI, on mod_php servers this is unneccessary because it would spawn the pinger twice. See write_post() for when it is originally called.
&lt;/p&gt;
&lt;p&gt;
If you can't actually send trackbacks (which I highly doubt, I'm guessing you looked at the code and jumped to conclusions), feel free to reopen with something more helpful than this.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2599 (Non-PHP-as-CGI servers never send Trackbacks) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 14:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2599</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2599/1143296526000000</guid>
      <description>&lt;p&gt;
I am submitting this ticket for "thermoman" in #wordpress because the new forum account he signed up for did now grant him access to Trac.  What follows it the report he mailed to me.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Summary&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Running PHP &lt;span class="underline"&gt;not&lt;/span&gt; as cgi causes a bug preventing execute-pings.php
ever being called -&amp;gt; No Trackbacks are ever sent to other blogs.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Details&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Sending Pings/Trackbacks to other blogs are handled by calling
&lt;a class="ext-link" href="http://yourdomain.tld/wordpress/wp-admin/execute-pings.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://yourdomain.tld/wordpress/wp-admin/execute-pings.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This URL is to be called on almost every page in the admin section
via the admin-footer.php file:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( (substr(php_sapi_name(), 0, 3) == 'cgi') &amp;amp;&amp;amp; spawn_pinger() ) {
   echo '&amp;lt;iframe id="pingcheck" src="' . get_settings('siteurl')
       .'/wp-admin/execute-pings.php?time=' . time() . '"
       style="border:none;width:1px;height:1px;"&amp;gt;&amp;lt;/iframe&amp;gt;';
}
&lt;/pre&gt;&lt;p&gt;
When you're running Apache with mod_php then the above block is never
being executed since the first condition in the if statement will be
false resulting in _not_ considering (and executing) the second
condition (spawn_pinger).
&lt;/p&gt;
&lt;p&gt;
no cgi -&amp;gt; no IFRAME, no spawn_pinger() -&amp;gt; no trackbacks being sent
&lt;/p&gt;
&lt;p&gt;
When fixing this you should also have a look at spawn_pinger() in
wp-includes/functions.php:
&lt;/p&gt;
&lt;p&gt;
spawn_pinger() only returns a value if php is running as cgi.
When apache is running mod_php the function returns no value. This has
to be fixed, too.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Workaround&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Comment out the 'if ( ...)' check in execute-pings.php so the iframe
is called on every page in the admin section regardless or apache
running php as cgi or not.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2595 (Option of "action" with value "update" is being added to options table) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 12:35:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2595</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2595/1143290143000000</guid>
      <description>&lt;p&gt;
New patch adds 'Update' to the list of things to reset, as the submit button was being added to the Options table as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>these_are_not_options.diff attached to Ticket #2595</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 12:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2595/these_are_not_options.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2595/these_are_not_options.diff/1143290094000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2598 (TinyMCE 2.0.5) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 12:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2598</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2598/1143289625000000</guid>
      <description>&lt;p&gt;
Works very well on FF 1.5.0.1 / OS X.  It responded very quickly, so I'm guessing it was using Pspell, which I do have installed on my server.
&lt;/p&gt;
&lt;p&gt;
The only quirk I encountered was that it would suggest words that it would later decide were invalid!  For instance, I wrote "blowfishh" and it suggested "blowfish" ... but after correction, on the next press of the spellcheck button, it said that "blowfish" was no good, and recommended "blow-fish"  ??? No idea what's going on there, but it would be nice if the recommended words were actually acceptable spellings themselves!
&lt;/p&gt;
&lt;p&gt;
(in case you don't have it: mark.wordpress - at - txfx - dot - net)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 12:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143288534000000</guid>
      <description>&lt;p&gt;
Latest patch does the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Strings that appear to be already serialized data are serialized again, when adding/updating the meta/option
&lt;/li&gt;&lt;li&gt;Serialized strings are unserialized for display in postmeta and option.php fields
&lt;/li&gt;&lt;li&gt;Serialized arrays/objects are displayed as %SERIALIZED_DATA% on options.php and the field is uneditable.  These values are ignored on update.
&lt;/li&gt;&lt;li&gt;maybe_unserialize() runs an is_serialized() check first, instead of just blindly unserializing.  This should make it faster (I think).
&lt;/li&gt;&lt;li&gt;A new function, prepare_data(), does the work of serializing objects/arrays as well as serializing strings that are already serialized data, and doing trim() on strings.  This replaces about 4 or 5 instances of redundant code (yay!)
&lt;/li&gt;&lt;li&gt;Custom fields with non-string data are simply not displayed.  They're not meant to be user-editable anyway.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think that's it.  Please test thoroughly.  Try entering malicious data like the data "random" presented in a custom field or an options field.  Try entering it in an options.php field.  Try to find an instance where valid, serialized data is not serialized again (if it shows up in options.php and unserialize($data) doesn't return false, you've found a false negative).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tinymce.tar.gz attached to Ticket #2598</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sat, 25 Mar 2006 11:57:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2598/tinymce.tar.gz</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2598/tinymce.tar.gz/1143287863000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>mce205sc.diff attached to Ticket #2598</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sat, 25 Mar 2006 11:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2598/mce205sc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2598/mce205sc.diff/1143287847000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2598 (TinyMCE 2.0.5) created</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Sat, 25 Mar 2006 11:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2598</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2598/1143287812000000</guid>
      <description>&lt;p&gt;
Fixes many bugs, moves editor code into single function, adds spellcheck.
&lt;/p&gt;
&lt;p&gt;
Patch consists of a small diff and a big tarball. Remove ALL of wp-includes/js/tinymce before untarring. This tarball has everything that is needed.
&lt;/p&gt;
&lt;p&gt;
If Pspell is not installed, spellcheck will try to contact Google.
&lt;/p&gt;
&lt;p&gt;
Any and all error reports on this may be sent to (my username here) at gmail.com. (Because if you just post a bug here and I can't replicate it, I'll need to contact you but I probably don't have your email address. Please post here AND email me. Thanks.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>serialize-TAKE_3.diff attached to Ticket #2591</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 11:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/serialize-TAKE_3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/serialize-TAKE_3.diff/1143287768000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2568 (Translate meridiem in time) updated</title>
      
        <dc:creator>Sewar</dc:creator>

      <pubDate>Sat, 25 Mar 2006 11:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2568</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2568/1143286822000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Isn't it is ready for commit?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Sat, 25 Mar 2006 10:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143281329000000</guid>
      <description>&lt;p&gt;
Heh. Sorry. Knew there was some easy answer ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sat, 25 Mar 2006 04:51:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143262313000000</guid>
      <description>&lt;p&gt;
Sorted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2526.3.diff attached to Ticket #2526</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sat, 25 Mar 2006 04:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2526/2526.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2526/2526.3.diff/1143262262000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sat, 25 Mar 2006 04:48:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143262121000000</guid>
      <description>&lt;p&gt;
Hmm, I see. It's certainly a consideration I hadn't thought of.
&lt;/p&gt;
&lt;p&gt;
I'll modify it to latch on to manage_options (with appropriate comments so it doesn't seem hackish).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2585 (Add is() function that checks for single object queries.) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 04:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2585/1143261011000000</guid>
      <description>&lt;p&gt;
If you can find any calls that are like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_single() || is_page() || is_attachment() ) :
&lt;/pre&gt;&lt;p&gt;
Then yes, they should probably be collapsed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 04:27:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143260861000000</guid>
      <description>&lt;p&gt;
The only problem with that is what if you don't have a role called "administrator"?  Then no one gets the capability.
&lt;/p&gt;
&lt;p&gt;
Remember that "administrator" isn't some magical role... it's just like any other role.  You can't count on every WP setup to have all the roles set up how they're set up when WP is first installed.  Because of that, I think that a good strategy for granting new capabilities is to piggyback onto an existing capability.  The one I usually use is "manage_options" because if you can manage options, you pretty much have supreme control of the blog.  So instead of giving it to the "administrator" role, give it to any user/role who has the "manage_options" capability.  Essentially you're just saying that because they've already been given so much trust, they're the best candidate to get this additional ability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 25 Mar 2006 04:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143260499000000</guid>
      <description>&lt;p&gt;
Good idea, random.  I was worried about false-positives.  This way, data that looks to be serialized can still be stored, but won't be dangerous, because it's just a serialized string.  Those instances should be very rare.  And anyway, that data would cause problems now anyway... because what should be a string will come out looking like an array or an object... this way we preserve it as a string.
&lt;/p&gt;
&lt;p&gt;
Writing it up now.
&lt;/p&gt;
&lt;p&gt;
And David, the reason we don't want to try to unserialize it is that it could be a string masquerading as serialized data, like an array with 100 million members.  the maybe_unserialize() function does just that, and that's what is causing this whole problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2597 (304 Not Modified Headers not returned in RSS2 feed) updated</title>
      
        <dc:creator>gfmorris</dc:creator>

      <pubDate>Sat, 25 Mar 2006 02:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2597</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2597/1143254023000000</guid>
      <description>&lt;p&gt;
I made a typo with the comments feed in the third paragraph.  Please accept my apologies.  The appropriate feed to test: &lt;a class="ext-link" href="http://ijsm.org/comments/feed/rss2/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://ijsm.org/comments/feed/rss2/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2597-trac-gfmorris-20060324@2027CST attached to Ticket #2597</title>
      
        <dc:creator>gfmorris</dc:creator>

      <pubDate>Sat, 25 Mar 2006 02:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2597/2597-trac-gfmorris-20060324%402027CST</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2597/2597-trac-gfmorris-20060324%402027CST/1143253913000000</guid>
      <description>&lt;p&gt;
HTTP headers for each case outlined in Ticket 2597.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2597 (304 Not Modified Headers not returned in RSS2 feed) created</title>
      
        <dc:creator>gfmorris</dc:creator>

      <pubDate>Sat, 25 Mar 2006 02:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2597</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2597/1143253517000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://ijsm.org/archives/2006/03/23/respect-for-http-304-positive-feedback-loop/#comment-19863"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Scott Sanders of FeedLounge noticed that IJSM.org's RSS2 feed was not 304-aware&lt;/a&gt;.  IJSM.org is running WPv2.0.2.  That sent me on a goose-chase around my box, knowing that I have WP installs at a variety of revision levels [bad, I know].
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://rmfo-blogs.com/about/feed/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;v2.0 RSS2 feed&lt;/a&gt; shows up as returning 304.
&lt;a class="ext-link" href="http://www.geekking.com/?feed=rss2"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;v2.0.1 RSS2 feed&lt;/a&gt; shows up as returning 304.
&lt;a class="ext-link" href="http://gfmorris.wordpress.com/feed/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WordPress.com RSS2 feed&lt;/a&gt; shows up as returning 304.
&lt;a class="ext-link" href="http://ijsm.org/feed/rss2/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;v2.0.2 RSS2 feed&lt;/a&gt; does not return a 304.
&lt;/p&gt;
&lt;p&gt;
I have checked the &lt;a class="ext-link" href="http://ijsm.org/feed/rss/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;/rss/&lt;/a&gt;, &lt;a class="ext-link" href="http://ijsm.org/comment/feed/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;/comment/&lt;/a&gt;, and &lt;a class="ext-link" href="http://ijsm.org/feed/atom/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;/atom/&lt;/a&gt; feeds for IJSM.org and they also show no 304 headers returned.
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="ext-link" href="http://www.geekking.com/?feed=comments-rss2"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;comments feed for the 2.0.1 install I have&lt;/a&gt; returns a 304 as it should.
&lt;/p&gt;
&lt;p&gt;
I don't know if this is related to the security fixes of 2.0.1---&amp;gt;2.0.2; if so, I'm okay with it.  I'll take the bandwidth hit on my box over the probability of my box being 0WN3d.  That said, this is still an issue.
&lt;/p&gt;
&lt;p&gt;
I'll leave those feeds untouched through until Sunday evening Central time so that there's time to check them.  Past then, I need to secure my box.
&lt;/p&gt;
&lt;p&gt;
Thanks for your time!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Fri, 24 Mar 2006 22:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143240649000000</guid>
      <description>&lt;p&gt;
Instead of throwing an error if is_serialized() is true, that string could be double-serialized -- I mean, if I self-identify as a serialized array, who are you to stop me putting that in my bio? ;)
&lt;/p&gt;
&lt;p&gt;
Seriously though, I think the Right way is to ensure that something saved as a string isn't unserialized, not to put a fence up to keep certain types of strings out. Short of an ugly meta_value_type column I don't see a non-hackish way to do that, though, so +1 for Mark's latest patch.
&lt;/p&gt;
&lt;p&gt;
David, running unserialize() on everything kind of defeats the purpose of having an is_serialized() function at all. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>single_objects.3658.diff attached to Ticket #2585</title>
      
        <dc:creator>abhay</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2585/single_objects.3658.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2585/single_objects.3658.diff/1143228421000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2585 (Add is() function that checks for single object queries.) updated</title>
      
        <dc:creator>abhay</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:26:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2585</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2585/1143228385000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Do we want to also change all the existing is_single(), is_attachment(), is_page() calls?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2592 (Add selected list of categories option to function get_bookmarks()) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2592</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2592/1143228144000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3658" title="Retrieve bookmarks for multiple cats.  Props MichaelH. fixes #2592"&gt;[3658]&lt;/a&gt;) Retrieve bookmarks for multiple cats.  Props MichaelH. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2592" title="#2592: defect (bug): Add selected list of categories option to function get_bookmarks() (closed: fixed)"&gt;#2592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [3658]: Retrieve bookmarks for multiple cats.  Props MichaelH. fixes #2592</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 19:22:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3658</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3658/1143228142447286</guid>
      <description>&lt;p&gt;
Retrieve bookmarks for multiple cats.  Props MichaelH. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2592" title="#2592: defect (bug): Add selected list of categories option to function get_bookmarks() (closed: fixed)"&gt;#2592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #1669 (Patch to "wp_list_pages" to add the opposite of "exclude" (called "only")) closed</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Fri, 24 Mar 2006 16:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1669</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1669/1143219285000000</guid>
      <description>fixed: &lt;p&gt;
This ticket is resolved by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3655" title="Add include param to get_posts(), get_categories(), get_pages(), and ..."&gt;changeset:3655&lt;/a&gt; that added the ability to include a selected page or pages in function get_pages().  So, with wp_list_pages(), a parameter of 'include=3,4' will present just pages IDs 3 and 4.
&lt;/p&gt;
&lt;p&gt;
Guess it's okay to change this to fixed even though it is assigned to Mark, and request bg's mark as Closed.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>davidhouse</dc:creator>

      <pubDate>Fri, 24 Mar 2006 16:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143218873000000</guid>
      <description>&lt;p&gt;
This might be a bit simpler:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function is_serialized($arg) {
    return unserliaze($arg) !== false;
}
&lt;/pre&gt;&lt;p&gt;
See &lt;a class="ext-link" href="http://us2.php.net/unserialize"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://us2.php.net/unserialize&lt;/a&gt; for an explanation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2526 (WP DB Backup plugin is using $user_level instead of capabilities) updated</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Fri, 24 Mar 2006 15:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2526/1143212459000000</guid>
      <description>&lt;p&gt;
Thanks robmiller--with latest patch it works--only users with the administrator role can access the Manage-&amp;gt;Backup option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-functions.php.diff attached to Ticket #2568</title>
      
        <dc:creator>Sewar</dc:creator>

      <pubDate>Fri, 24 Mar 2006 14:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2568/admin-functions.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2568/admin-functions.php.diff/1143211651000000</guid>
      <description>&lt;p&gt;
Oops, I forget add admin-functions.php to patch, it contain patch for edit timestamp in post/page editing.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2588 (Movable Type Importer) updated</title>
      
        <dc:creator>dneto</dc:creator>

      <pubDate>Fri, 24 Mar 2006 13:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2588</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2588/1143206796000000</guid>
      <description>&lt;p&gt;
Ryan,
&lt;/p&gt;
&lt;p&gt;
I've used the old (modified) import-mt.php AND it allowed me to import POST IDs AND my table has the "auto-increment" option, but the comments were not correctly "attached" to their posts. Just to let you know that it's possible, but I'm not a PHP geek to modify it to do the right thing.
&lt;/p&gt;
&lt;p&gt;
Still waiting for comments.
&lt;/p&gt;
&lt;p&gt;
Regards
Daniel Neto
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 11:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143200630000000</guid>
      <description>&lt;p&gt;
First stab at &lt;code&gt;is_serialized()&lt;/code&gt; and associated code.  Noticed that a lot of the object/array serialization stuff was duplicated, so I made and used a new function &lt;code&gt;prepare_data()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I also made &lt;code&gt;maybe_unserialize()&lt;/code&gt; first check &lt;code&gt;is_serialized()&lt;/code&gt; because it should be faster to run the small grep than do the unserialization... because most options are not serialized.
&lt;/p&gt;
&lt;p&gt;
Post meta that is serialized is simply not shown to the user.
&lt;/p&gt;
&lt;p&gt;
on options.php, serialized data is marked as such, and the value is not editable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>serialization.diff attached to Ticket #2591</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 11:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/serialization.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/serialization.diff/1143200453000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 10:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143195347000000</guid>
      <description>&lt;p&gt;
Hm, possible solution, but it'd have to be more permanent than that, as a DB password change would effectively kill the blog.
&lt;/p&gt;
&lt;p&gt;
Still working on my patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Fri, 24 Mar 2006 09:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143194330000000</guid>
      <description>&lt;p&gt;
How about prepending a hash of the DB password or some such server secret to all serialized values, then unserializing only the values that matched that key?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 09:17:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143191869000000</guid>
      <description>&lt;p&gt;
You know what?  Serializing everything is really more trouble than it is worth.  It will break dozens of plugins, and make troubleshooting a nightmare.  Manually editing the options table will be a hellish experience.
&lt;/p&gt;
&lt;p&gt;
The problem (i.e. the security risk) is this:  serialized objects/arrays are inserted into the database as simple text, but are interpreted as objects/arrays when coming out.  We need to recognize when someone is trying to do that, and block it.
&lt;/p&gt;
&lt;p&gt;
So what we need is a function that can detect serialized data WITHOUT doing an acual unserialize test on it.  I've seen several GPL functions that do that, using various techniques.  So what I'm going to do is find all such GPL functions, merge them (if necessary) and use that is_serialized() check for the update/add/delete functions so that it rejects serialized data.  Next, I'll need to make changes to options.php and post meta so that it doesn't display serialized data.  For example, the feeds that are stored in the options table show up in options.php, and you can save them.  Honestly, serialized data is a bear to edit, and I really don't think anyone is going to miss it if we just have the value field deactivated and maybe write "array" or "object" and ignore those fields on update.
&lt;/p&gt;
&lt;p&gt;
How's that sound?  I just really don't think that serializing plain text strings is a good move in terms of usability and backwards compatability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>optionsphp-serialize.diff attached to Ticket #2591</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Fri, 24 Mar 2006 08:12:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/optionsphp-serialize.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/optionsphp-serialize.diff/1143187958000000</guid>
      <description>&lt;p&gt;
options.php magic serialization example
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Fri, 24 Mar 2006 08:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143187373000000</guid>
      <description>&lt;p&gt;
There's a serialize call in delete_usermeta() as well as update_usermeta(), and let's not forget postmeta.
&lt;/p&gt;
&lt;p&gt;
Speaking of postmeta, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3656" title="Add meta_key and meta_value options to get_posts() and get_pages(). ..."&gt;changeset:3656&lt;/a&gt; added querying by meta_value, so that'd need changing too. (Speaking of which, is querying going to be a problem elsewhere?)
&lt;/p&gt;
&lt;p&gt;
For options.php, we could unserialize and gettype() the result, reserialize if necessary for display, but add a hidden
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;input type="hidden" name="type[$option_name]" value="array" /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
field (or similar) to keep track of what's already serialized when the data gets sent back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2596 (Need a way to limit size of uploads) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 06:46:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2596</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2596/1143182769000000</guid>
      <description>&lt;p&gt;
It appears that the &lt;code&gt;fileupload_maxk&lt;/code&gt; setting used in WP 1.5.x is no longer used in WP 2.x, which means that there is easy way to limit the size of uploads.  It'd at least be nice for this to be hookable by a plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2595 (Option of "action" with value "update" is being added to options table) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2595</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2595/1143177786000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fix unsets $_POST&lt;a class="missing wiki"&gt;$wpvar?&lt;/a&gt;; in the "WP vars to set" loop.  Anything that we're running through this loop (only "action") we don't want showing up as an option.
&lt;/p&gt;
&lt;p&gt;
People who already have it added are stuck with it, but it'd be silly to write code to remove it... it does no harm.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>kill_action_option.diff attached to Ticket #2595</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:20:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2595/kill_action_option.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2595/kill_action_option.diff/1143177638000000</guid>
      <description>&lt;p&gt;
Kill the "action" option
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143177378000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay, I kludged it and made it skip serialization on options.php
&lt;/p&gt;
&lt;p&gt;
Also, user options are now serialized on update, which is really the area where there is the most danger of a malicious attack (someone with a subscriber profile inserts a 1 million member array and crashes the server).
&lt;/p&gt;
&lt;p&gt;
I thought of other ways of avoiding double serialization... there are GPL is_serialized() functions floating around, but they'd likely leave openings for abuse, as well as cause a lot of extra cycles on option updates... so a kludge for /wp-admin/options.php might actually be the best way.  Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>serialize_all_options-TAKE_2.diff attached to Ticket #2591</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options-TAKE_2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options-TAKE_2.diff/1143177110000000</guid>
      <description>&lt;p&gt;
Take 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2595 (Option of "action" with value "update" is being added to options table) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 05:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2595</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2595/1143176925000000</guid>
      <description>&lt;p&gt;
the hidden form field on &lt;code&gt;wp-admin/options.php&lt;/code&gt; with name "action" and value "update" is causing an option of that name and value to be added to the options table.  Oops!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 04:48:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143175684000000</guid>
      <description>&lt;p&gt;
I'm testing out the uploaded patch on a local SVN test install.  It serializes in update_option() and add_option() in every case (not just object and array).
&lt;/p&gt;
&lt;p&gt;
Problem: using the secret "options.php" page will destroy your options table.  The serialized strings are re-serialized, and serialized arrays are serialized as a string.  We'll have to make a special case for this page, and skip serialization.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>serialize_all_options.diff attached to Ticket #2591</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 04:40:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2591/serialize_all_options.diff/1143175254000000</guid>
      <description>&lt;p&gt;
Serialize all option values
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2591 (users can enter dangerous serialized strings) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Fri, 24 Mar 2006 03:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2591/1143172418000000</guid>
      <description>&lt;p&gt;
As long as plugins are using the API, it should be fine.  I can think of one place in WP where the API is not used, (direct query in wp-settings.php:123) but it just checks that there is a value, it doesn't use the value itself.
&lt;/p&gt;
&lt;p&gt;
As for upgrading of existing strings, couldn't we just let it happen naturally?  We'd still be passing stuff through the "maybe unserialize" function, so it'd just get upgraded whenever it was updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2589 (WP DB Backup core tables should reflect new and deleted tables) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 01:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2589/1143163175000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3657" title="Update table list in backup plugin. Props abhay and westi. fixes #2589"&gt;[3657]&lt;/a&gt;) Update table list in backup plugin. Props abhay and westi. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2589" title="#2589: defect (bug): WP DB Backup core tables should reflect new and deleted tables (closed: fixed)"&gt;#2589&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [3657]: Update table list in backup plugin. Props abhay and westi. fixes #2589</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 01:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3657</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3657/1143163173283366</guid>
      <description>&lt;p&gt;
Update table list in backup plugin. Props abhay and westi. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2589" title="#2589: defect (bug): WP DB Backup core tables should reflect new and deleted tables (closed: fixed)"&gt;#2589&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2589 (WP DB Backup core tables should reflect new and deleted tables) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 24 Mar 2006 01:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2589/1143162940000000</guid>
      <description>&lt;p&gt;
Eventually, upgrade will drop the linkcategories table. I've been holding off on dropping the table until the bookmark design settled.  That has quieted down though, so maybe the time to drop is near.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2589 (WP DB Backup core tables should reflect new and deleted tables) updated</title>
      
        <dc:creator>MichaelH</dc:creator>

      <pubDate>Fri, 24 Mar 2006 00:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2589</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2589/1143161168000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
While testing westi's fix on a 2.0.2 to 2.1-alpha1 upgrade, I was reminded that the linkcategories table is being left, intact, on upgrades.  With this fix, that table will show in the "You may choose to include any of the following tables" column of WP DB Backup.
&lt;/p&gt;
&lt;p&gt;
Any idea on what to do there, if anything?
&lt;/p&gt;
&lt;p&gt;
Also, any opinion about bumping the Version from 1.7 to 1.7.something?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>