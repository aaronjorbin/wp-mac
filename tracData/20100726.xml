<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14370 (Custom Taxonomies tagging Attachments) updated</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Mon, 26 Jul 2010 23:54:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14370#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14370#comment:6/1280188489000000</guid>
      <description>&lt;p&gt;
Okay to begin with you create the tax
&lt;/p&gt;
&lt;pre class="wiki"&gt;      register_taxonomy(
               'people',
               array('attachment:image', 'attachment:video', 'attachment:audio'),
		array(
			'label' =&amp;gt; __('People'),
			'template' =&amp;gt; __('People: %l.'),
			'helps' =&amp;gt; __('Separate people with commas.'),
			'show_ui' =&amp;gt; true,
			'sort' =&amp;gt; true,
			'args' =&amp;gt; array('orderby' =&amp;gt; 'term_order'),
			'rewrite' =&amp;gt; array('slug' =&amp;gt; 'person'),
               )
       );
&lt;/pre&gt;&lt;p&gt;
As you can see it is a tax that is only linked to an attachment post_type of images, video and audio.
&lt;/p&gt;
&lt;p&gt;
From here you can tag the attachments from the Media admin (a People: field appears) or Matt's Community Tags plugin.
&lt;/p&gt;
&lt;p&gt;
At this point the taxonomy page reveals no results. If you assign the Tax to pages it works as expected, but only pages show. Custom Post Types are tested to work as well with a 'publish' post_status.
&lt;/p&gt;
&lt;p&gt;
Attachment post_type by their nature have an 'inherit' post status that is not set to 'public', if 'inherit' is defined to be a public status than images appear and page properly.
&lt;/p&gt;
&lt;p&gt;
The following code will override in the theme template but will not page.
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php global $wp_query;
query_posts(
	array_merge(
		array('post_status' =&amp;gt; publish,),
		$wp_query-&amp;gt;query
	)
);
 ?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Therefore attachment is not inheriting its status from it's attached post_type properly. This used to work in 2.9.2 but something changed in 3.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14425 (fetch_feed fatal memory error) created</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Mon, 26 Jul 2010 23:35:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14425</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14425/1280187352000000</guid>
      <description>&lt;p&gt;
If you put too large of a feed into the function fetch_feed() a memory error will occur, flushing everything in the buffer, and WP will exit with a fatal error.
&lt;/p&gt;
&lt;p&gt;
Increasing the WP_MEMORY_LIMIT fixes the problem, but ideally, shouldn't the feed be buffered away from WP, so that whoever controls the provider end of the feed doesn't have the power to cripple your blog? Parsing any large XML document like this as a document tree has a tendency to run into memory allocation errors, RSS being no exception.
&lt;/p&gt;
&lt;p&gt;
The example warning given when wp_debug is true:
&lt;/p&gt;
&lt;p&gt;
Fatal error: Allowed memory size of 33554432 bytes exhausted (tried to allocate 1158121 bytes) in /home/www/public_html/wp-includes/wp-db.php on line 478
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>press-this-style-patch.diff attached to Ticket #14164</title>
      
        <dc:creator>cyberhobo</dc:creator>

      <pubDate>Mon, 26 Jul 2010 23:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14164/press-this-style-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14164/press-this-style-patch.diff/1280186203000000</guid>
      <description>&lt;p&gt;
A style fix to separate meta boxes from the post content area.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14164 (do_meta_boxes on press-this.php) updated</title>
      
        <dc:creator>cyberhobo</dc:creator>

      <pubDate>Mon, 26 Jul 2010 23:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14164#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14164#comment:5/1280186078000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested the patch on WP 3.0 with a single meta box. It works and is useful to me.
&lt;/p&gt;
&lt;p&gt;
Visually, there is no space between the editor and the first meta box. I haven't worked much with WP CSS, but I think I can patch wp-admin/css/press-this.dev.css to fix this. I'll attach my proposal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14424 (Eliminate dynamic function definitions, ie create_function) created</title>
      
        <dc:creator>ScottMac</dc:creator>

      <pubDate>Mon, 26 Jul 2010 23:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14424</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14424/1280185509000000</guid>
      <description>&lt;p&gt;
create_function() calls are essentially a form of eval() where the body of the functions is defined at runtime rather than compile time. This patch removes all but one of the calls within the translation code.
&lt;/p&gt;
&lt;p&gt;
There are a few reasons for doing this, one is apc can't cache the results of the function definition and secondly HipHop doesn't support complex create_function definitions.
&lt;/p&gt;
&lt;p&gt;
Most of the references were array_filter / array_map and replaced with a simple foreach.
&lt;/p&gt;
&lt;p&gt;
Others were sorting and a callback function was added.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13672 (iPhone can't access primary blog in multisite mode) updated</title>
      
        <dc:creator>trepmal</dc:creator>

      <pubDate>Mon, 26 Jul 2010 22:53:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13672#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13672#comment:7/1280184834000000</guid>
      <description>&lt;p&gt;
I was experiencing a similar problem - by editing line 477  of xmlrpc.php to make the $blog_id a string, I was able to get the iphone app to connect to my blog.
&lt;/p&gt;
&lt;p&gt;
I got the fix from here: &lt;a class="ext-link" href="http://iphone.forums.wordpress.org/topic/iphone-app-crashes-when-adding-a-blog#post-2870"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://iphone.forums.wordpress.org/topic/iphone-app-crashes-when-adding-a-blog#post-2870&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
not sure if it's a solution or a quirk...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14382 (extra pages loading unnecessarily) updated</title>
      
        <dc:creator>zengy</dc:creator>

      <pubDate>Mon, 26 Jul 2010 22:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14382#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14382#comment:16/1280183860000000</guid>
      <description>&lt;p&gt;
OK, odd. Now I am not able to replicate it. I am wondering if this was some error in Apache?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14370 (Custom Taxonomies tagging Attachments) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Mon, 26 Jul 2010 21:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14370#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14370#comment:5/1280181422000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't think I fully understand the issue.  When you say "Tag photo" are you tagging a post that has a photo associated with it, or somehow directly tagging the attachment?  Can you provide the admin URL that you are using to tag the photo and also a screen shot so I can see what you are doing?
&lt;/p&gt;
&lt;p&gt;
Can you provide your &lt;code&gt;register_taxonomy()&lt;/code&gt; calls and the URLs on the external website describing where you have a problem with each?
&lt;/p&gt;
&lt;p&gt;
If I can figure out what the actually problem is I'm sure we can find a solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14388 (upload image with same name do not replace the older one) updated</title>
      
        <dc:creator>maurizio04</dc:creator>

      <pubDate>Mon, 26 Jul 2010 20:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14388#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14388#comment:2/1280175524000000</guid>
      <description>&lt;p&gt;
No, i deleted the file in the galley and upload a file with same name but different content.
the older one shwed up.
i had to rename the new upload to make it work.
&lt;/p&gt;
&lt;p&gt;
i haven't checked if the delete from gallery actually deleted the file but i guess no, if it was still usable later.
&lt;/p&gt;
&lt;p&gt;
it seems that the old file is not deleted and the new upload fail with no warning leaving the original file in place.
&lt;/p&gt;
&lt;p&gt;
if necessary i can repeat the operation checking on what happen on the host folder.
&lt;/p&gt;
&lt;p&gt;
-m
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14105 (Update Favorites Menu Labels) updated</title>
      
        <dc:creator>TECannon</dc:creator>

      <pubDate>Mon, 26 Jul 2010 18:07:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14105#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14105#comment:2/1280167645000000</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7931" title="#7931: enhancement: Shortcuts/favorites menu bug (closed: wontfix)"&gt;#7931&lt;/a&gt; for previous discussion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14081 (UI Inconsistencies) updated</title>
      
        <dc:creator>TECannon</dc:creator>

      <pubDate>Mon, 26 Jul 2010 18:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14081#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14081#comment:12/1280167465000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14081#comment:11" title="Comment 11"&gt;jane&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The favorites menu should never lose items. Right now it defaults to edit if you're on the add new screen, but that behavior was a hack that never got fixed. Add New Post should be in menu on every single screen.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Favorites Menu stuff has its own ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14105" title="#14105: defect (bug): Update Favorites Menu Labels (closed: fixed)"&gt;#14105&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7269 (Scheduled posts are losing their geocoding) reopened</title>
      
        <dc:creator>markegli</dc:creator>

      <pubDate>Mon, 26 Jul 2010 18:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7269#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7269#comment:4/1280167229000000</guid>
      <description>&lt;p&gt;
I am experiencing this issue when I schedule a post on a 3.0 installation. After the post is published the meta key remains but the meta value is blank.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) updated</title>
      
        <dc:creator>gordonbrander</dc:creator>

      <pubDate>Mon, 26 Jul 2010 17:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:13/1280166112000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10976#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This came up over the wp-hackers list not long ago. My solution was indeed to use after_title and after_widget, but to prevent the improperly formed div if the title was empty, to also use before_widget and before_title:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's definitely a pragmatic solution. Yet, having a bunch of empty divs in the markup is definitely a front-end hack. It would be much better to solve this problem instead of working around it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Mon, 26 Jul 2010 17:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:12/1280165550000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10976#comment:11" title="Comment 11"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This came up over the wp-hackers list not long ago. My solution was indeed to use after_title and after_widget, but to prevent the improperly formed div if the title was empty, to also use before_widget and before_title
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That might help solve the title-less widget issue, but doesn't speak to the goal of the ticket: to add a wrapper element around just the widget content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14405 (New Conditional Template Tag: is_multi_author()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 26 Jul 2010 17:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14405#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14405#comment:5/1280163765000000</guid>
      <description>&lt;p&gt;
Realistically it could be an autoloaded boolean option.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14405 (New Conditional Template Tag: is_multi_author()) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Mon, 26 Jul 2010 17:01:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14405#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14405#comment:4/1280163667000000</guid>
      <description>&lt;p&gt;
+1 for the idea, love that it will solve the problem of single-author sites and not wanting the redundant author name and link on each post.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14405#comment:3" title="Comment 3"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why not keep track of the multi_author status via the save_post hook?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How would you suggest keeping track of the value? Even if it was stored as an option or meta value somewhere it'd still require a database query to get that value, too, right?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14423 (Retain 1 vs. 2 column editing settings independently) created</title>
      
        <dc:creator>jeffinsf</dc:creator>

      <pubDate>Mon, 26 Jul 2010 16:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14423</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14423/1280163482000000</guid>
      <description>&lt;p&gt;
The ability to select a one- or two-column editing screen for pages/posts is a very nice enhancement. However, if one changes from two-column to one-column mode (or vice versa), the location of the various widgets do not seem to be restored. In my case, I edit both from a "normal" size screen as well as a mobile device with an 800x480 screen, which has me switching relatively often, necessitating rearranging all the widgets each time. On my mobile device, dragging is not an easy action.
&lt;/p&gt;
&lt;p&gt;
The user experience could be improved in a couple ways:
&lt;/p&gt;
&lt;p&gt;
Request 1) Retain widget locations independently for one- and two-column edit screen
&lt;/p&gt;
&lt;p&gt;
By retaining the locations for the widgets independently, if a user switches from two- to one-column mode and then back again, the widget locations would be retained.
&lt;/p&gt;
&lt;p&gt;
Request 2) Retain one- vs. two-column edit mode setting in user cookie
&lt;/p&gt;
&lt;p&gt;
At a much lower priority, retaining the setting in the cookie on the machine would "automatically" set the mode in cases where the user works in one mode on one machine, and a different mode on another machine.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14416 (Dashboard wants a favicon!) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 26 Jul 2010 15:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14416#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14416#comment:2/1280159331000000</guid>
      <description>wontfix: &lt;p&gt;
I think the dealbreaker here, besides messing with others' favicons, is that you won't be able to distinguish backends.
&lt;/p&gt;
&lt;p&gt;
This should work fine:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'admin_head', 'my_wp_admin_favicon' );
my_wp_admin_favicon() {
    echo '&amp;lt;link rel="shortcut icon" href="http://www.example.com/myicon.ico" /&amp;gt;';
}
&lt;/pre&gt;&lt;p&gt;
Closing as wontfix.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14416 (Dashboard wants a favicon!) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Mon, 26 Jul 2010 15:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14416#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14416#comment:1/1280159083000000</guid>
      <description>&lt;p&gt;
If you have a favicon for the frontend of your site,  it is also displayed on your dashboard.  (If I remember correctly, all latest versions of all major browsers pick the favicon up.)
&lt;/p&gt;
&lt;p&gt;
Why should WordPress mess with that?
&lt;/p&gt;
&lt;p&gt;
Also see:  &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11413" title="#11413: defect (bug): Lack of favicon.ico link in admin-header.php file causes shortcuts to ... (closed: wontfix)"&gt;#11413&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14422 (single quotes ' in permalinks are not removed during import from 2.9.2) created</title>
      
        <dc:creator>sirono</dc:creator>

      <pubDate>Mon, 26 Jul 2010 14:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14422</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14422/1280156348000000</guid>
      <description>&lt;p&gt;
in wordpress 3.0 single quotes in permalinks are removed.
but on import the permalink is not altered. and the single quote is still there thus causing the link to 404.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14411 (Add wp-caption-text to caption class for Gallery Shortcode) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Mon, 26 Jul 2010 14:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14411#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14411#comment:3/1280155376000000</guid>
      <description>&lt;p&gt;
Re-generated the patch. How is it now?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media.php.diff attached to Ticket #14411</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Mon, 26 Jul 2010 14:42:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14411/media.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14411/media.php.diff/1280155346000000</guid>
      <description>&lt;p&gt;
Diff created from root, rather than from wp-includes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14411 (Add wp-caption-text to caption class for Gallery Shortcode) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 26 Jul 2010 13:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14411#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14411#comment:2/1280152471000000</guid>
      <description>&lt;p&gt;
You should generate the patch file from WP's root, instead of a sub-directory such as &lt;code&gt;wp-includes&lt;/code&gt; (as you did here).  Doing so makes it easy for the committer to apply the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14411 (Add wp-caption-text to caption class for Gallery Shortcode) updated</title>
      
        <dc:creator>chipbennett</dc:creator>

      <pubDate>Mon, 26 Jul 2010 13:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14411#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14411#comment:1/1280152074000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is my first attempt at creating a patch. Please advise if I've done anything incorrectly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-header.diff attached to Ticket #13978</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Mon, 26 Jul 2010 13:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13978/admin-header.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13978/admin-header.diff/1280151040000000</guid>
      <description>&lt;p&gt;
I created this patch before I realized anyone else was working on it... so I'm just submitting it cause I create it.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Mon, 26 Jul 2010 13:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:97/1280149286000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13971#comment:95" title="Comment 95"&gt;jb510&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could someone just create a fork without this garbage?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While this code addition is obviously irritating forking the code is not a tenable solution. WordPress is already a difficult enough proposition to manage without starting to create forks for each new feature we wish was omitted. You then face a mammoth task keeping your fork up to date with the WordPress core.
&lt;/p&gt;
&lt;p&gt;
A better solution would be to get this feature working to a degree that satisfies the developers and the end users and that will only happen through negotiation and compromise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14421 (wp.org profiles showing html entities) created</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Mon, 26 Jul 2010 12:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14421</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14421/1280146542000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://profiles.wordpress.org/users/mrmist"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://profiles.wordpress.org/users/mrmist&lt;/a&gt; for example is showing HTML entity codes for quote marks, etc. in the recent posts activity section.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14174 (Network users unable to embed objects / scripts into editor) updated</title>
      
        <dc:creator>donncha</dc:creator>

      <pubDate>Mon, 26 Jul 2010 12:10:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14174#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14174#comment:4/1280146258000000</guid>
      <description>&lt;p&gt;
The development version of unfiltered_mu should now work with WordPress 3.0. It uses the map_meta_cap filter to add the capability back in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14419 (Make get_editable_user_ids() use the role system instead of user level) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 26 Jul 2010 10:54:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14419#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14419#comment:1/1280141673000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>author-dropdown.patch attached to Ticket #14420</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 26 Jul 2010 10:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14420/author-dropdown.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14420/author-dropdown.patch/1280141649000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14420 (Author drop-down not displayed for post inline edit form) created</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 26 Jul 2010 10:53:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14420/1280141625000000</guid>
      <description>&lt;p&gt;
This is a bug.
&lt;/p&gt;
&lt;p&gt;
Suppose, for a particular wordpress installation, there are one admin and one editor. The editor can post or edit contents. As a result, they both appear on the Author list if we try to "Quick Edit" posts in Posts-&amp;gt;Edit.
&lt;/p&gt;
&lt;p&gt;
Now, if the editor is demoted to "subscriber" role, for example, he loses all capabilities to post or edit contents. If we try to "Quick Edit" his posts in Posts-&amp;gt;Edit, there is no Author list. This is because the drop-down list is automatically hidden if there's only one editable user ID.
&lt;/p&gt;
&lt;p&gt;
wp-admin/includes/template.php - line 931 - 942
&lt;/p&gt;
&lt;pre class="wiki"&gt;$authors = get_editable_user_ids( $current_user-&amp;gt;id, true, $screen-&amp;gt;post_type ); // TODO: ROLE SYSTEM
$authors_dropdown = '';
if ( $authors &amp;amp;&amp;amp; count( $authors ) &amp;gt; 1 ) :
	$users_opt = array('include' =&amp;gt; $authors, 'name' =&amp;gt; 'post_author', 'class'=&amp;gt; 'authors', 'multi' =&amp;gt; 1, 'echo' =&amp;gt; 0);
	if ( $bulk )
		$users_opt['show_option_none'] = __('&amp;amp;mdash; No Change &amp;amp;mdash;');
	$authors_dropdown  = '&amp;lt;label&amp;gt;';
	$authors_dropdown .= '&amp;lt;span class="title"&amp;gt;' . __( 'Author' ) . '&amp;lt;/span&amp;gt;';
	$authors_dropdown .= wp_dropdown_users( $users_opt );
	$authors_dropdown .= '&amp;lt;/label&amp;gt;';
endif; // authors
&lt;/pre&gt;&lt;p&gt;
As a result, if we attempt to save the post by using the "Quick Edit" form, the post's author is automatically set to the person who's editing the post (i.e. admin in our scenario).
&lt;/p&gt;
&lt;p&gt;
I believe this is a bug, because inline-edit-post.dev.js clearly handles the case where a user lost edit capabilities:
&lt;/p&gt;
&lt;p&gt;
wp-admin/js/inline-edit-post.dev.js - line 128 - 131
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !$(':input[name="post_author"] option[value=' + $('.post_author', rowData).text() + ']', editRow).val() ) {
	// author no longer has edit caps, so we need to add them to the list of authors
	$(':input[name="post_author"]', editRow).prepend('&amp;lt;option value="' + $('.post_author', rowData).text() + '"&amp;gt;' + $('#' + t.type + '-' + id + ' .author').text() + '&amp;lt;/option&amp;gt;');
}
&lt;/pre&gt;&lt;p&gt;
However, when the author list is hidden because there's only one user on the list, clearly the true author is not added properly.
&lt;/p&gt;
&lt;p&gt;
Attached is the patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14094 (get_editable_user_ids() does not function properly with multisite.) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 26 Jul 2010 10:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14094#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14094#comment:3/1280139348000000</guid>
      <description>&lt;p&gt;
related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14419" title="#14419: defect (bug): Make get_editable_user_ids() use the role system instead of user level (closed: duplicate)"&gt;#14419&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14408 (Get author information in author template file without having to query ...) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 26 Jul 2010 10:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14408#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14408#comment:1/1280139177000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>fix-get-editable-user-ids.patch attached to Ticket #14419</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 26 Jul 2010 10:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14419/fix-get-editable-user-ids.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14419/fix-get-editable-user-ids.patch/1280139109000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14419 (Make get_editable_user_ids() use the role system instead of user level) created</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Mon, 26 Jul 2010 10:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14419/1280139089000000</guid>
      <description>&lt;p&gt;
The function get_editable_user_ids() is used to populate the Author list in Post Edit admin page. Currently, it uses user levels to determine which users have permission to edit posts.
&lt;/p&gt;
&lt;p&gt;
This is a deprecated approach. Role management plugins have no way to intercept this function, so even though, say, subscribers are assigned enough capabilities to edit / publish posts, these users are not listed in the Author list. This is also troublesome for custom post types that allow subscribers or custom roles to post and edit contents.
&lt;/p&gt;
&lt;p&gt;
Attached is a patch to fix this and make get_editable_user_ids() use the role system instead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14401 (Unable to locate WordPress Content directory (wp-content).) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 26 Jul 2010 08:55:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14401#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14401#comment:5/1280134505000000</guid>
      <description>&lt;p&gt;
&lt;code&gt; define('FTP_PLUGIN_DIR', '/'); &lt;/code&gt; you'd have to set that to &lt;code&gt;/wp-content/plugins/&lt;/code&gt; instead, The error related to Visitor maps was probably due to the / define.
&lt;/p&gt;
&lt;p&gt;
Without seeing the server environment for myself, I'm not sure where to goto next.. Feel free to contact me offtrac with the host details if you wish: wordpress at dd32.id.au
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14377 (Some YouTube videos are not processed by oEmbed) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 26 Jul 2010 08:39:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14377#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14377#comment:3/1280133585000000</guid>
      <description>invalid: &lt;p&gt;
All three of those videos are returning a 401 unauthorized HTTP error code.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.youtube.com/oembed?url=http://www.youtube.com/watch%3Fv%3DuYwwn1qJzBw"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.youtube.com/oembed?url=http://www.youtube.com/watch%3Fv%3DuYwwn1qJzBw&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So this is a YouTube issue (or feature, depending on the reason for 401ing). Point is, if it isn't processed by oEmbed, then we're not being given JSON or XML to work with.
&lt;/p&gt;
&lt;p&gt;
The regex is &lt;code&gt;#http://(www\.)?youtube.com/watch.*#i&lt;/code&gt;, which would catch these videos.
&lt;/p&gt;
&lt;p&gt;
Also -- the video you originally reported returns JSON for me and works for me.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14377 (Some YouTube videos are not processed by oEmbed) updated</title>
      
        <dc:creator>honza.skypala</dc:creator>

      <pubDate>Mon, 26 Jul 2010 08:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14377#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14377#comment:2/1280132783000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14377#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Maybe that particular video has embeding disabled?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, that's not the case, this video has embedding permitted. It's not just this one video, more examples with the same problem (all of them can be normally embedded via YouTube 'get code'):
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.youtube.com/watch?v=nU3FI_jsOJ4"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.youtube.com/watch?v=nU3FI_jsOJ4&lt;/a&gt;
&lt;a class="ext-link" href="http://www.youtube.com/watch?v=kHpM7Xf9Ds8"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.youtube.com/watch?v=kHpM7Xf9Ds8&lt;/a&gt;
&lt;a class="ext-link" href="http://www.youtube.com/watch?v=uYwwn1qJzBw"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.youtube.com/watch?v=uYwwn1qJzBw&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I guess maybe these URL's don't pass through WP oEmbed regex, but I don't know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14418 (Introduce restore_original_blog()) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 26 Jul 2010 08:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14418#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14418#comment:1/1280131938000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14418 (Introduce restore_original_blog()) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 26 Jul 2010 08:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14418/1280131878000000</guid>
      <description>&lt;p&gt;
While working on a multisite install, I saved a number of queries by switching from one blog to the next using switch_to_blog() without calling restore_current_blog() each time. That meant I needed to rewind everything back to the original blog when I was done.
&lt;/p&gt;
&lt;p&gt;
This seems like a candidate worthy for core. It is only a few lines of code, but it prevents users from mucking with one of the globals in switch_to_blog() and restore_current_blog().
&lt;/p&gt;
&lt;pre class="wiki"&gt;function restore_original_blog() {
	global $switched;
	while ( $switched )
		restore_current_blog();
}
&lt;/pre&gt;&lt;p&gt;
Alternatively, we could simply add a parameter to restore_current_blog() (which really should be called restore_previous_blog(), no?) that allows for a complete rewind, or perhaps steps.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14417 (wp_create_user throwing exceptions for empty emaild address) created</title>
      
        <dc:creator>umair.jabbar</dc:creator>

      <pubDate>Mon, 26 Jul 2010 07:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14417/1280129657000000</guid>
      <description>&lt;p&gt;
wp_create_user in wp-includes/registration.php (line:306) throws an exception : &lt;strong&gt;This email address is already registered.&lt;/strong&gt; If no email address is provided, but the function's documentation at &lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/wp_create_user"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codex.wordpress.org/Function_Reference/wp_create_user&lt;/a&gt; says that the email address is optional.
&lt;/p&gt;
&lt;p&gt;
This used to work in 2.9.2, but is broken in 3.0 which is breaking one of my sites.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Mon, 26 Jul 2010 05:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:96/1280122331000000</guid>
      <description>&lt;p&gt;
I just want to add that the right way to do this would have been to build this into the editor for new content like an actual spell checker, not to go retroactive changing my content on the fly without notice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>jb510</dc:creator>

      <pubDate>Mon, 26 Jul 2010 05:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:95/1280121911000000</guid>
      <description>&lt;p&gt;
Your saying the solution to this ridiculous filter is to install a plug-in on every single site I manage?  What a load of crap.  If Automattic wants to run this on wp.com fine, but this has no place in core.
&lt;/p&gt;
&lt;p&gt;
Could someone just create a fork without this garbage?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14401 (Unable to locate WordPress Content directory (wp-content).) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Sun, 25 Jul 2010 21:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14401#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14401#comment:4/1280092043000000</guid>
      <description>&lt;p&gt;
I tried Filezilla and Total Commander, but I could not find current server path, everywhere is only &lt;a class="ext-link" href="ftp://user.domain.eu@ftp.domain.eu"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;ftp://user.domain.eu@ftp.domain.eu&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Adding your code to wp-config.php changed error, now there is:
&lt;/p&gt;
&lt;p&gt;
"Unable to locate WordPress Plugin directory."
&lt;/p&gt;
&lt;p&gt;
So, I tried adding to wp-config.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('FTP_PLUGIN_DIR', '/');
&lt;/pre&gt;&lt;p&gt;
It helps a little and following text appears (for installing plugin WP Memory Usage):
&lt;/p&gt;
&lt;p&gt;
Downloading install package from &lt;a class="ext-link" href="http://downloads.wordpress.org/plugin/wp-memory-usage.zip"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://downloads.wordpress.org/plugin/wp-memory-usage.zip&lt;/a&gt;â€¦
&lt;/p&gt;
&lt;p&gt;
Unpacking the packageâ€¦
&lt;/p&gt;
&lt;p&gt;
Installing the pluginâ€¦
&lt;/p&gt;
&lt;p&gt;
Warning: rename() [function.rename]: SAFE MODE Restriction in effect. The script whose uid is 8855 is not allowed to access /home/www/domain.eu/subdomains/www/wp-content/visitor-maps-backup owned by uid 33 in /home/www/domain.eu/subdomains/www/wp-content/plugins/visitor-maps/visitor-maps.php on line 1338
&lt;/p&gt;
&lt;p&gt;
Warning: array_keys() [function.array-keys]: The first argument should be an array in /home/www/domain.eu/subdomains/www/wp-admin/includes/class-wp-upgrader.php on line 189
&lt;/p&gt;
&lt;p&gt;
Incompatible Archive.
&lt;/p&gt;
&lt;p&gt;
Plugin install failed.
&lt;/p&gt;
&lt;p&gt;
Tmp folder works well, also in directory upgrade there is subdirectory wp-memory-usage.tmp created with all files from this plugin.
&lt;/p&gt;
&lt;p&gt;
First error is probably somehow related to "Visitor Maps and Who's Online" plugin. In wp-content there is folder visitor-maps-backup (chmod 755) which is for this plugin, but how can this influence installation of new plugin? After deactivating this plugin there is only the second error messagge about array_keys(). But this error can be also related to the original problem with unrecognized backslash in FTP_CONTENT_DIR?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14416 (Dashboard wants a favicon!) created</title>
      
        <dc:creator>hpguru</dc:creator>

      <pubDate>Sun, 25 Jul 2010 17:13:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14416</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14416/1280077982000000</guid>
      <description>&lt;p&gt;
I know it's trivial, but who wouldn't an icon displayed when browsing WordPress admin area? =)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14405 (New Conditional Template Tag: is_multi_author()) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 25 Jul 2010 16:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14405#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14405#comment:3/1280076186000000</guid>
      <description>&lt;p&gt;
Why not keep track of the multi_author status via the save_post hook?
&lt;/p&gt;
&lt;p&gt;
If the proposed version was implemented and used in a theme it would add a database query to every pageload.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14412 (User Registration via Templates) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 25 Jul 2010 16:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14412#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14412#comment:3/1280075470000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14412#comment:2" title="Comment 2"&gt;GuruXL&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just remember my main concern is being able to register users via the front-end without having to resort to complex hacks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Building a custom registration process does not require *any* hacks (complex or otherwise). The extended profile component in BuddyPress (&lt;a class="ext-link" href="http://buddypress.org"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://buddypress.org&lt;/a&gt;) already does nearly all the things you have described.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13971 ("Wordpress" being turned into CamelCase "WordPress" breaks URLs) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sun, 25 Jul 2010 16:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13971#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13971#comment:94/1280074133000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13971#comment:93" title="Comment 93"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I dont really want to fan any fires, But I'd like to point out the 2nd comment here refers to a plugin which was released before WordPress 3.0 (IIRC), and to date, has had a total of 442 downloads. &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/remove-wordpress-to-wordpress-filter/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/remove-wordpress-to-wordpress-filter/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm aware of the plugin solution but I would not class this as 'easily accessible'. The end user would need to be aware that the solution was already there as a plugin or chance a plugin search to find it.
&lt;/p&gt;
&lt;p&gt;
A core option to turn it off should be as straight forward as the 3 line plugin and would pacify the WordPress 3.0 users who have seen their sites rendered full of broken links by this code addition.
&lt;/p&gt;
&lt;p&gt;
I'm trying to offer pragmatic solutions to something that, while maybe not a problem to the core devs who know how to work around this problem, may well be a big issue for users who just like to install and use and would have little idea about finding if this issue affects their site, much less know how to fix it.
&lt;/p&gt;
&lt;p&gt;
Think of your end users and make their life easier rather than alienating them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14134 (Menus item are limited to 16 item and will not save more than that) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 25 Jul 2010 09:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14134#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14134#comment:8/1280050674000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14134#comment:6" title="Comment 6"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reopening for consideration. Could we re-tool how the POST data is structured on the menus page to possibly get under the max_vars, max_array_depth and max_array_index_length defaults, for a reasonable number of menu items?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In my experience it is &lt;code&gt;max_vars&lt;/code&gt;, which at 200 by default limits you to fewer than 20 menu items.
&lt;/p&gt;
&lt;p&gt;
We could boost to about 50 the number of menu items allowed by default Suhosin were we to save each menu item's properties separately and therefore limit the overall requested variables to a few necessary properties: item id, order, and depth.
&lt;/p&gt;
&lt;p&gt;
So the questions seem to be:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Is the current harm worth reworking the system?  I'm ambivalent.  It might be good for other reasons, such as reducing network latency and unnecessary CPU and DB work.  But it doesn't seem like there's been too much complaining so far.
&lt;/li&gt;&lt;li&gt;Does Jane or someone else with say-so in the UI department sign off on the idea of  saving individual menu items separately from each other and from the item order/depth?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14415 (Major fail of the pages widget in the nav-menu admin page when having ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 25 Jul 2010 09:15:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14415#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14415#comment:3/1280049328000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>no-checkbox-menu-item-desc.14415.diff attached to Ticket #14415</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 25 Jul 2010 09:14:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14415/no-checkbox-menu-item-desc.14415.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14415/no-checkbox-menu-item-desc.14415.diff/1280049243000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14415 (Major fail of the pages widget in the nav-menu admin page when having ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 25 Jul 2010 09:13:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14415#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14415#comment:2/1280049232000000</guid>
      <description>&lt;p&gt;
This probably has nothing to do with the total number of pages (each meta-box page of pages is limited to 50 per page) but more to do with the length of the content in the pages, which could cause the response to time out.
&lt;/p&gt;
&lt;p&gt;
Try the patch &lt;code&gt;no-checkbox-menu-item-desc.14415.diff&lt;/code&gt; to see if that solves the problem.  There's no reason we need the page content hidden in the checkbox markup as far as I can see.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14415 (Major fail of the pages widget in the nav-menu admin page when having ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 25 Jul 2010 08:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14415#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14415#comment:1/1280047397000000</guid>
      <description>&lt;p&gt;
Version of PHP, version of Firefox, operating system?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14415 (Major fail of the pages widget in the nav-menu admin page when having ...) created</title>
      
        <dc:creator>DreadLox</dc:creator>

      <pubDate>Sun, 25 Jul 2010 08:34:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14415</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14415/1280046886000000</guid>
      <description>&lt;p&gt;
The title says it all. Having a hundred pages, under firefox: I can't go through the paging of the pages list widget in the nav-menu admin page. The error is: "script stack space quota is exhausted". Also search does not return any result.
&lt;/p&gt;
&lt;p&gt;
Under chrome the search box doesn't work at all (no spinning indicator)
&lt;/p&gt;
&lt;p&gt;
The result is that I CAN'T add some pages to my menu.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13757 (Passing functions as call by ref parameter should be avoided) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 25 Jul 2010 07:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13757#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13757#comment:16/1280043413000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Okay, that should suffice for now. Moving to 3.1 early.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #13757,â€‹14160 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 25 Jul 2010 07:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13757%2C14160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13757%2C14160/1280043361000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15471" title="More curses on PHP 5.0.5. see #13757, fixes #14160. for trunk."&gt;[15471]&lt;/a&gt;) More curses on PHP 5.0.5. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13757" title="#13757: defect (bug): Passing functions as call by ref parameter should be avoided (closed: fixed)"&gt;#13757&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14160" title="#14160: defect (bug): PHP 4.4+ and PHP 5.0.5 fails on return/pass by reference (closed: fixed)"&gt;#14160&lt;/a&gt;. for trunk.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [15471]: More curses on PHP 5.0.5. see #13757, fixes #14160. for trunk.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 25 Jul 2010 07:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15471/1280043359121684</guid>
      <description>&lt;p&gt;
More curses on PHP 5.0.5. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13757" title="#13757: defect (bug): Passing functions as call by ref parameter should be avoided (closed: fixed)"&gt;#13757&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14160" title="#14160: defect (bug): PHP 4.4+ and PHP 5.0.5 fails on return/pass by reference (closed: fixed)"&gt;#14160&lt;/a&gt;. for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #13757,â€‹14160 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 25 Jul 2010 07:34:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13757%2C14160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13757%2C14160/1280043292000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15470" title="More curses on PHP 5.0.5. see #13757, fixes #14160. for 3.0.1."&gt;[15470]&lt;/a&gt;) More curses on PHP 5.0.5. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13757" title="#13757: defect (bug): Passing functions as call by ref parameter should be avoided (closed: fixed)"&gt;#13757&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14160" title="#14160: defect (bug): PHP 4.4+ and PHP 5.0.5 fails on return/pass by reference (closed: fixed)"&gt;#14160&lt;/a&gt;. for 3.0.1.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [15470]: More curses on PHP 5.0.5. see #13757, fixes #14160. for 3.0.1.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 25 Jul 2010 07:34:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15470/1280043289941848</guid>
      <description>&lt;p&gt;
More curses on PHP 5.0.5. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13757" title="#13757: defect (bug): Passing functions as call by ref parameter should be avoided (closed: fixed)"&gt;#13757&lt;/a&gt;, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14160" title="#14160: defect (bug): PHP 4.4+ and PHP 5.0.5 fails on return/pass by reference (closed: fixed)"&gt;#14160&lt;/a&gt;. for 3.0.1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14414 (Add an action hook to add fields to nav_menu items form) created</title>
      
        <dc:creator>DreadLox</dc:creator>

      <pubDate>Sun, 25 Jul 2010 07:25:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14414</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14414/1280042737000000</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
In order to add a custom field to a nav menu item form, I have to setup a custom walker whereas a simple action hook could do the trick. Everything else is ok to handle and save the custom field. (&lt;a class="ext-link" href="http://loxdev.knc.nc/blog/wordpress/auto-populate-nav-menu-with-sub-pages/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://loxdev.knc.nc/blog/wordpress/auto-populate-nav-menu-with-sub-pages/&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Here is how the asked action hook could be added:
&lt;a class="ext-link" href="http://github.com/loxK/Wordpress_Gecka_Submenu/blob/master/models/NavMenuHacks.php#L310-312"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://github.com/loxK/Wordpress_Gecka_Submenu/blob/master/models/NavMenuHacks.php#L310-312&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13757 (Passing functions as call by ref parameter should be avoided) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 25 Jul 2010 07:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13757#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13757#comment:13/1280042695000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Currently running some tests on a 5.0.5 install, where this causes a fatal error. Thus, this the same bug as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14160" title="#14160: defect (bug): PHP 4.4+ and PHP 5.0.5 fails on return/pass by reference (closed: fixed)"&gt;#14160&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The easiest fix, as noted in one of the PHP bugs linked to from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14160" title="#14160: defect (bug): PHP 4.4+ and PHP 5.0.5 fails on return/pass by reference (closed: fixed)"&gt;#14160&lt;/a&gt;, is just assigning a variable first. Thus,
&lt;/p&gt;
&lt;pre class="wiki"&gt;$last_element_index = array_pop( array_keys( $my_array ) );
&lt;/pre&gt;&lt;p&gt;
becomes:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$last_element_index = array_pop( $var_by_ref = array_keys( $my_array ) );
&lt;/pre&gt;&lt;p&gt;
I'm going to look through the instances cited in this patch and try to fix. (Pretty much what TobiasBg said.) We can then soak the rest in trunk come 3.1 development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14412 (User Registration via Templates) updated</title>
      
        <dc:creator>GuruXL</dc:creator>

      <pubDate>Sun, 25 Jul 2010 05:59:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14412#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14412#comment:2/1280037568000000</guid>
      <description>&lt;p&gt;
Just remember my main concern is being able to register users via the front-end without having to resort to complex hacks. There is no real user management system in place with WP, the ability to edit the default roles of Contributor, Editor, Administrator.
&lt;/p&gt;
&lt;p&gt;
We are looking at: user_register, wp_login, wp_logout, register_form, profile_update, etc all these hooks would be involved in making a FRONT-END user registration and profile editing screens, customizable via templates. On the backend, you would manage the users who sign up and can assign them into custom usergroups (have the default but, you can edit those) and then use content protection, so only those users can access certain areas like the admin panel or specific URLs or Post/Page IDs. Those most of the rest of that can be done via plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9513 (Wordpress should allow input of XHTML/HTML via Atompub) updated</title>
      
        <dc:creator>dturvene</dc:creator>

      <pubDate>Sun, 25 Jul 2010 05:17:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9513#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9513#comment:5/1280035030000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The type="xhtml" attribute seems to retain the XHTML tags for me.  Using a CDATA section did not (though I think it should but that's a problem with the PHP xml parser.) I documented my progress at &lt;a class="ext-link" href="http://www.turvene.net"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.turvene.net&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I just sent the posting given above to my test system and the XHTML tags in the content element were retained (even the UTF-8 characters were retained!)
&lt;/p&gt;
&lt;p&gt;
One note:
&lt;/p&gt;
&lt;p&gt;
If you use &amp;lt;feed xmlns="&lt;a class="ext-link" href="http://www.w3.org/2005/Atom"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.w3.org/2005/Atom&lt;/a&gt;"&amp;gt;, then the default namespace is "atom", you don't need to add it to each element name.  It saves a lot of typing, especially if you want to change name spaces (e.g. I used to use Dublin Core a lot.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14413 (MOD_SECURITY BLOCK) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 25 Jul 2010 03:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14413#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14413#comment:1/1280029076000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Something is outputting a PHP warning on the page. Thats a pretty moronic Mod_security rule which would be better served with the production server running with appropriate PHP error_reporting value.
&lt;/p&gt;
&lt;p&gt;
If you're running WP_DEBUG on that server, you'll need to disable it in order to view any pages which emit PHP Warnings.
&lt;/p&gt;
&lt;p&gt;
Can you check your Logs to see if a PHP Warning is being logged? It might help pinpoint if it a WordPress generated warning, or the result of a plugin. (Actually, Disable plugins &amp;amp; switch to the default theme, see if that lets you view the page)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14413 (MOD_SECURITY BLOCK) created</title>
      
        <dc:creator>mrgerbeck</dc:creator>

      <pubDate>Sun, 25 Jul 2010 03:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14413</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14413/1280028782000000</guid>
      <description>&lt;p&gt;
Wordpress 3.0 Generates the following MOD_SECURITY2 error when attempting to use the "widgets" function:
&lt;/p&gt;
&lt;p&gt;
[Sun Jul 25 03:21:23 2010] [error] [client 76.95.181.93] ModSecurity: Access denied with code 500 (phase 4). Pattern match "&amp;lt;b&amp;gt;Warning&amp;lt;&lt;br /&gt;/b&amp;gt;.{0,100}?:.{0,1000}?&lt;br /&gt;bon line&lt;br /&gt;b" at RESPONSE_BODY. [file "/usr/local/etc/apache22/Includes/mod_security2/modsecurity_crs_50_outbound.conf"] [line "42"] [id "970009"] [msg "PHP Information Leakage"] [severity "WARNING"] [tag "LEAKAGE/ERRORS"] [hostname "[snip]"] [uri "/wp-admin/widgets.php"] [unique_id "[snip]"]
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14412 (User Registration via Templates) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 25 Jul 2010 03:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14412#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14412#comment:1/1280027916000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14108" title="#14108: enhancement: Unify registration between single site and network configurations (closed: duplicate)"&gt;#14108&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14108 (Unify registration between single site and network configurations) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 25 Jul 2010 03:18:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14108#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14108#comment:1/1280027899000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14412" title="#14412: feature request: User Registration via Templates (closed: wontfix)"&gt;#14412&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13118 (wp-login.php and wp-admin folder location/name choice during the ...) closed</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Sun, 25 Jul 2010 03:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13118#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13118#comment:4/1280026820000000</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13118#comment:3" title="Comment 3"&gt;gazouteast&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Security by obfuscation is not a house of cards, it is an additional layer.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All three paths can be obtained from the front end of a site by a non logged in user. Obscuring them as you have proposed would not provide any increased security.
&lt;/p&gt;
&lt;p&gt;
If you are interested in additional security for your site(s), you should consider investing in SSL certificates which can be used with both your login form and admin area.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14388 (upload image with same name do not replace the older one) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 25 Jul 2010 00:49:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14388#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14388#comment:1/1280018974000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When you uploaded the new version of the image, Was it renamed to another name so as not to conflict with an existing file? ie. Was it changed from filename.jpg to filename&lt;strong&gt;1&lt;/strong&gt;.jpg? or something else?
&lt;/p&gt;
&lt;p&gt;
Are the files being deleted from your uploads folder? If not, Are the files still visible on the media management pages?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11641 (New Website Layout for WP 3.0) updated</title>
      
        <dc:creator>GuruXL</dc:creator>

      <pubDate>Sun, 25 Jul 2010 00:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11641#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11641#comment:5/1280017847000000</guid>
      <description>&lt;p&gt;
Do we have any idea if the WP.org main site will be re-designed? I have seen ExpressionEngine, vBulletin, IPB and others re-design their website recently with their newest major software releases. Will WP be doing something similar?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14382 (extra pages loading unnecessarily) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 25 Jul 2010 00:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14382#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14382#comment:15/1280017727000000</guid>
      <description>&lt;p&gt;
I cant reproduce this.
&lt;/p&gt;
&lt;p&gt;
Have you disabled all plugins?
&lt;/p&gt;
&lt;p&gt;
What widgets do you have active?
&lt;/p&gt;
&lt;p&gt;
Do the posts have anything in them other than Text? Images? Links?
&lt;/p&gt;
&lt;p&gt;
Beef up the code a bit:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function display_post_id() {
	global $post;
	error_log('post id: ' . $post-&amp;gt;ID . ' | post title: ' . $post-&amp;gt;post_title . ' | Time:' . $_SERVER['REQUEST_TIME'] . ' | UserAgent:' . $_SERVER['HTTP_USER_AGENT']);
}
add_action('wp_head', 'display_post_id');
&lt;/pre&gt;&lt;p&gt;
See if the User agent reveals anything, If its "WordPress.*" then its likely a HTTP callback, if its the browser, It could be a HTTP Accelerator which caches pages you're likely to visit
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14412 (User Registration via Templates) created</title>
      
        <dc:creator>GuruXL</dc:creator>

      <pubDate>Sun, 25 Jul 2010 00:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14412</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14412/1280017301000000</guid>
      <description>&lt;p&gt;
To improve the vast multitude of WP installtions that utilize member registrations, I suggest and implore the development team to improve user registration via templates. The reasons are as follows:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;More secure
&lt;/li&gt;&lt;li&gt;More flexible
&lt;/li&gt;&lt;li&gt;Better customization options
&lt;/li&gt;&lt;li&gt;Better integration
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I was prompted by this post: &lt;a class="ext-link" href="http://www.cozmoslabs.com/2010/05/31/wordpress-user-registration-template-and-custom-user-profile-fields/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.cozmoslabs.com/2010/05/31/wordpress-user-registration-template-and-custom-user-profile-fields/&lt;/a&gt; the development of Hooks and Filters has made it relatively easy to make such improvements system-wide.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14401 (Unable to locate WordPress Content directory (wp-content).) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 25 Jul 2010 00:11:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14401#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14401#comment:3/1280016683000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or I am not sure how to get the path from FTP...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Most FTP Clients have a path section, is it just "/" in the Address bar perhaps?
&lt;/p&gt;
&lt;p&gt;
Try adding this to your wp-config.php file, Whilst it should be guessed automatically, it might be failing for some reason:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('FTP_CONTENT_DIR', '/');
&lt;/pre&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
but it is not possible (only for registered users, registration not possible).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats correct, Its down for a bit until i get around to fixing something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>