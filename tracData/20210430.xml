<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 30 Apr 2021 23:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:8/1619826548233234</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53121#comment:5" title="Comment 5"&gt;jrf&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We may need to dig deeper into the PHP side of things there, but based on those tests I ran, it would appear that &lt;code&gt;getimagesize()&lt;/code&gt; is always available, independently of GD.&lt;br /&gt;
If that's the case, we could most likely simplify the &lt;code&gt;wp_get_image_mime()&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just noting that there is indeed a &lt;a class="ext-link" href="https://www.php.net/manual/en/function.getimagesize.php#refsect1-function.getimagesize-notes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;note in the PHP documentation&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note: This function does not require the GD image library.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53120 (term_order-field not copied to wp_x_terms when switching to multisite) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 30 Apr 2021 23:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53120#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53120#comment:1/1619825423110602</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there @spithost!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do you happen to have this plugin installed?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/wp-term-order/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-term-order/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 23:18:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:7/1619824736867988</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
That makes me really curious about what happens when you call &lt;code&gt;getimagesizes()&lt;/code&gt; with GD disabled and if we really should improve that functionality check?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@joemcgill Not sure what you mean... &lt;code&gt;getimagesizes()&lt;/code&gt; doesn't exist as far as I can see (in WP nor PHP) and based on the tests I ran and listed above, &lt;code&gt;getimagesize()&lt;/code&gt; just seems to work, even when GD is disabled.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Would be good to run some more tests of course, different OSes and such, but yes, if things pan out, we should be able to remove some conditions related to the availability of GD/&lt;code&gt;getimagesize()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21603 (Add ability to delete multiple menu items) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 23:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21603#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21603#comment:35/1619824102158710</guid>
      <description>&lt;p&gt;
Some accessibility issues:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For keyboard navigation flow, it would make more sense if the bulk select appeared before the menu, and navigation moved forward to select items.
&lt;/li&gt;&lt;li&gt;There's a loss of focus when bulk select is enabled, because the button is removed on selection. Can this use a checkbox instead, so that there's no focus loss, but the control has state?
&lt;/li&gt;&lt;li&gt;The bulk select checkboxes are unlabeled. Change the span wrapping the menu item title to a &amp;lt;label&amp;gt; and add appropriate for/id atributes
&lt;/li&gt;&lt;li&gt;Add a wp.a11y.speak message to confirm information about the items deleted.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm thinking about better error-prevention, too. Since making this reversible is probably a lot to tackle, it might be good to add a visible list of items to be deleted under the 'Remove selected items' link that's associated via aria-describedby. I don't think it needs to be detailed; just a comma separated list of item titles, perhaps, but it could give an easier way to scan and verify that you haven't accidentally selected something you didn't really want to remove. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd definitely like to see this happen. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53031 (Display counts for available plugin and theme updates on update-core.php) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 30 Apr 2021 23:05:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53031#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53031#comment:8/1619823910231701</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;53031.2.diff&lt;/code&gt; suggests the following changes:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;move the whole string into the gettext function so translators are able to reverse the order
&lt;/li&gt;&lt;li&gt;use a pluralized translation string so translators are able to use a different translation depending on the number of items
&lt;/li&gt;&lt;li&gt;also display the number of translation packages that are going to be updated (I'm not 100% sure this one is needed, but… why not)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What do you think about this proposal?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 23:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:13/1619823871058109</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;ol start="5"&gt;&lt;li&gt;for tests that use a data provider, always include @param tags in the test's DocBlock.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'm not sure how many there are, but I know there are existing tests which use providers that do not do that (and I may have been responsible for a few of those).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@pbiron Agreed. That's a given and is actually part of the WordPress Coding Standards, though Core doesn't run the &lt;code&gt;WordPress-Docs&lt;/code&gt; standard yet over the code base. Can't say I blame them as the &lt;code&gt;Docs&lt;/code&gt; standard still needs a lot of improving.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For the time being, we could very selectively just enable that specific error code (undocumented function parameters) for the &lt;code&gt;Tests&lt;/code&gt; directory to safeguard this. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screencapture-localhost-8888-wordpress-develop-wordpress-develop-build-wp-admin-update-core-php-2021-05-01-00_59_16.png attached to Ticket #53031</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 30 Apr 2021 22:59:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53031/screencapture-localhost-8888-wordpress-develop-wordpress-develop-build-wp-admin-update-core-php-2021-05-01-00_59_16.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53031/screencapture-localhost-8888-wordpress-develop-wordpress-develop-build-wp-admin-update-core-php-2021-05-01-00_59_16.png/1619823597167799</guid>
      <description>&lt;p&gt;
53031.2.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>53031.2.diff attached to Ticket #53031</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 30 Apr 2021 22:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53031/53031.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53031/53031.2.diff/1619823319273402</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #26562,​53031 batch updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 22:53:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=26562%2C53031</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=26562%2C53031/1619823183539338</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50801" title="Toolbar: Remove title attribute on pending updates link.
Remove the ..."&gt;50801&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Toolbar: Remove title attribute on pending updates link.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Remove the title attribute from the link, wrap the link icon and numeric indicator with the &lt;code&gt;aria-hidden&lt;/code&gt; attribute, and add a &lt;code&gt;.screen-reader-text&lt;/code&gt; span so screen readers hear a link that has relevant context without requiring translators to deal with appended strings. Removes the individual counts of theme and plugin updates from the attribute, as those were already buggy and didn't include translation counts.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia, Mte90, sabernhardt, audrasjb&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26562" title="#26562: enhancement: Remove title attributes: class-wp-admin-bar.php (closed: fixed)"&gt;#26562&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53031" title="#53031: enhancement: Display counts for available plugin and theme updates on update-core.php (closed: fixed)"&gt;#53031&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [50801]: Toolbar: Remove title attribute on pending updates link.  Remove the ...</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 22:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50801</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50801/1619823182494318</guid>
      <description>&lt;p&gt;
Toolbar: Remove title attribute on pending updates link.
&lt;/p&gt;
&lt;p&gt;
Remove the title attribute from the link, wrap the link icon and numeric indicator with the &lt;code&gt;aria-hidden&lt;/code&gt; attribute, and add a &lt;code&gt;.screen-reader-text&lt;/code&gt; span so screen readers hear a link that has relevant context without requiring translators to deal with appended strings. Removes the individual counts of theme and plugin updates from the attribute, as those were already buggy and didn't include translation counts.
&lt;/p&gt;
&lt;p&gt;
Props afercia, Mte90, sabernhardt, audrasjb
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26562" title="#26562: enhancement: Remove title attributes: class-wp-admin-bar.php (closed: fixed)"&gt;#26562&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53031" title="#53031: enhancement: Display counts for available plugin and theme updates on update-core.php (closed: fixed)"&gt;#53031&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53031 (Display counts for available plugin and theme updates on update-core.php) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 30 Apr 2021 22:29:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53031#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53031#comment:6/1619821793357328</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving for 5.8 consideration&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26562 (Remove title attributes: class-wp-admin-bar.php) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 22:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26562#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26562#comment:40/1619821071337712</guid>
      <description>&lt;p&gt;
Thanks for testing @audrasjb!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26562 (Remove title attributes: class-wp-admin-bar.php) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26562#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26562#comment:39/1619819860217737</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I just tested &lt;code&gt;26562.2.patch&lt;/code&gt; and it looks like it works fine:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;it removes the unwanted &lt;code&gt;title&lt;/code&gt; attribute
&lt;/li&gt;&lt;li&gt;it adds &lt;code&gt;aria-hidden&lt;/code&gt; attributes to the number information (which is redondant for screen reader users)
&lt;/li&gt;&lt;li&gt;it moves the details of the updates inside the screen reader text container
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Good job! :) Marking for &lt;code&gt;commit&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:50:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:6/1619819450299632</guid>
      <description>&lt;p&gt;
That makes me really curious about what happens when you call &lt;code&gt;getimagesizes()&lt;/code&gt; with GD disabled and if we really should improve that functionality check?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:12/1619819405132772</guid>
      <description>&lt;p&gt;
One other thing that should be added to this proposal:&lt;br /&gt;
&lt;/p&gt;
&lt;ol start="5"&gt;&lt;li&gt;for tests that use a data provider, &lt;strong&gt;always&lt;/strong&gt; include &lt;code&gt;@param&lt;/code&gt; tags in the test's DocBlock.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I'm not sure how many there are, but I know there are existing tests which use providers that do not do that (and I may have been responsible for a few of those).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:5/1619819350532945</guid>
      <description>&lt;p&gt;
@joemcgill Thanks for getting back to me about that. Basically, I could only get the test to fail when Exif was disabled. Disabling GD didn't seem to have any effect at all.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We may need to dig deeper into the PHP side of things there, but based on those tests I ran, it would appear that &lt;code&gt;getimagesize()&lt;/code&gt; is always available, independently of GD.&lt;br /&gt;
If that's the case, we could most likely simplify the &lt;code&gt;wp_get_image_mime()&lt;/code&gt; function.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:11/1619819098102291</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53119#comment:7" title="Comment 7"&gt;jrf&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my &lt;em&gt;opinion&lt;/em&gt;, test &lt;em&gt;helper&lt;/em&gt; functions should always be at the bottom of a test class (or in an abstract test case). What do you think ?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Whenever possible, I like them in an abstract test case class (e.g., &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/includes/testcase-xml.php#L12"&gt;WP_Test_XML_TestCase::loadXML()&lt;/a&gt;), which I wrote when XML Sitemaps were added to core.  Note that that method contains an assertion, but it is basically a helper for other sitemaps tests (e.g., &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/sitemaps/sitemaps-renderer.php#L137"&gt;Test_WP_Sitemaps_Renderer::test_get_sitemap_index_xml_extra_elements()&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As @SergeyBiryukov mentioned, for things like &lt;code&gt;add_{action|filter}()&lt;/code&gt; callbacks, near where they are used is my preference.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52465 (Allow a relation type in resource hints to be used multiple times) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52465#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52465#comment:4/1619818241158749</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello, thanks both for the patchs/unit tests,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I tested the pull request using the test code provided by @GeekPress:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;function preconnect_mycdn( $hints, $relation_type ) {
        $domains = [
                [
                        'href'        =&amp;gt; '//mycdn.test/',
                ],
                [
                        'href'        =&amp;gt; '//mycdn.test/',
                        'crossorigin' =&amp;gt; 'use-credentials',
                ],
                [
                        'href'        =&amp;gt; '//mycdn.test/',
                ],
                [
                        'href'        =&amp;gt; '//mycdn.test/',
                        'crossorigin' =&amp;gt; 'anonymous',
                ],
        ];
        foreach ( $domains as $domain ) {
                if ( 'preconnect' === $relation_type ) {
                        $hints[] = $domain;
                }
        }
        return $hints;
}
add_filter( 'wp_resource_hints', 'preconnect_mycdn', 10, 2 );
&lt;/pre&gt;&lt;p&gt;
Before PR 1216 is applied, this result to this single line being printed in the &lt;code&gt;head&lt;/code&gt; section of the page:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;link href='//mycdn.test' crossorigin='anonymous' rel='preconnect' /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
After applying the PR, here's the result:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;link href='//mycdn.test' rel='preconnect' /&amp;gt;
&amp;lt;link href='//mycdn.test' crossorigin='anonymous' rel='preconnect' /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The PR seems to work as expected. Plus, it has unit tests. Therefore, I'm moving this for 5.8 consideration.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also adding &lt;code&gt;needs-dev-note&lt;/code&gt; keyword, in case the change can make it into 5.8.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks all&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:4/1619817844754895</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:10/1619817526118925</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53119#comment:7" title="Comment 7"&gt;jrf&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another thing which comes to my mind while reading though this discussion, is: what about test helper functions ? Should we set a convention for the placement of those ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my &lt;em&gt;opinion&lt;/em&gt;, test &lt;em&gt;helper&lt;/em&gt; functions should always be at the bottom of a test class (or in an abstract test case). What do you think ?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think I would apply the same logic as for data providers here. If the helper function is only used in one or two tests, e.g. an &lt;code&gt;add_filter()&lt;/code&gt; callback, I would expect to see it directly after the test to keep the context. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If the helper is used for multiple tests that do not necessarily belong together as a group, then I would expect to find the helper function after the &lt;code&gt;::setUp()&lt;/code&gt;/&lt;code&gt;::tearDown()&lt;/code&gt; methods, or at the bottom.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:12:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:9/1619817163217801</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:8/1619816998416735</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53119#comment:1" title="Comment 1"&gt;pbiron&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would, however, recommend one change to the proposal: put all data providers at the bottom of the class, regardless of which tests they are used for.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think that simplification/consistency would be easier for contributors to "grasp".&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see the point, but I have to agree with @hellofromTonya here. Personally, I find it much easier to grasp if the data provider directly follows the test it's used in, as proposed here. If the provider is used for multiple tests, it's still easier for me to see them grouped together and find the data provider after the last test in the group.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If there are multiple data providers in a class, having them all at the bottom of the class without a predictable order and having to jump back and forth while trying to keep the context would seem confusing to me.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:03:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:3/1619816591298960</guid>
      <description>&lt;p&gt;
I don't think we ever fully tested the conditions where this would be skipped, to be honest, since it's so rare that these conditions would &lt;em&gt;not&lt;/em&gt; be met. However, I would expect it to only skip when both Exif is disabled AND GD was not available. So if I'm understanding correctly and it's skipping when Exif is disabled and GD is enabled, but not when both are disabled, then something is definitely wrong here. The other thing I notice while looking at this check is that the Mark test skipped message is not really accurate, since it is not only testing for whether Exif is enabled, but is intended to check for the existence of either of the underlying dependencies.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 21:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:7/1619816590944658</guid>
      <description>&lt;p&gt;
@pbiron I see your point. Having the data providers always at the bottom of the class makes it very &lt;em&gt;predictable&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, good test functions are short, a few lines at most, so even when the data provider would be for three tests, in most cases, having the data provider follow the tests it applies to, would still mean that both the tests as well as the (start of) the data provider function would fit onto one screen, making it easy to understand what the data sets mean as the parameter descriptions for the test functions are on that same screen.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This would rarely be the case when the data providers are at the bottom of the file, which implies that you'd &lt;em&gt;always&lt;/em&gt; have to jump around the file to figure out what the various parts of each data set means, raising the cognitive complexity.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now, you might say: "hang on, but there are a lot of test functions which aren't short"....&lt;br /&gt;
In that case, you would be correct, but I did say I was talking about &lt;em&gt;good&lt;/em&gt; test functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As soon as a test function needs more than a few lines, it generally is a sign that the function under test is too complex and should be split up or even be a class instead of a function. So, complex tests in more a symptom of an underlying architectural problem and should not be guiding us in this.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Both the proposal and your way provide consistency when applied consistently. Both can aid in making the test suite more consistent. Consistency can help contributors to know how to structure tests. That's a win.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And on this I have to agree with @hellofromTonya: anything is better than the messy inconsistency we currently have... 🥴&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another thing which comes to my mind while reading though this discussion, is: what about test helper functions ? Should we set a convention for the placement of those ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my &lt;em&gt;opinion&lt;/em&gt;, test &lt;em&gt;helper&lt;/em&gt; functions should always be at the bottom of a test class (or in an abstract test case). What do you think ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Fri, 30 Apr 2021 20:57:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:6/1619816244862193</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53119#comment:5" title="Comment 5"&gt;pbiron&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I know...the point I was trying to make is the provider for &lt;code&gt;test1&lt;/code&gt; is not &lt;em&gt;immediately&lt;/em&gt; following it.  The provider is after &lt;code&gt;test3&lt;/code&gt;, so a contributor would still have to "jump around" to find it's provider...just as they would for finding the provider for &lt;code&gt;test3&lt;/code&gt; if all providers were at the bottom of the class.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're right. When there's a group of tests with a data provider (all grouped together), it does not eliminate needing to jump down from &lt;code&gt;test1&lt;/code&gt; to the data provider. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That said, (IMO) it does provide flow via grouping like tests together with their shared test data. That flow can aid in reducing cognitive complexity when reading the code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53119#comment:5" title="Comment 5"&gt;pbiron&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Again, I welcome the proposal as written, but personally would find it easier if I could know that all providers were at the bottom of the class.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for sharing how you structure your tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Both the proposal and your way provide consistency when applied consistently. Both can aid in making the test suite more consistent. Consistency can help contributors to know how to structure tests. That's a win.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52465 (Allow a relation type in resource hints to be used multiple times) updated</title>
      
        <dc:creator>tabrisrp</dc:creator>

      <pubDate>Fri, 30 Apr 2021 20:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52465#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52465#comment:3/1619815933379739</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 20:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:2/1619815864286174</guid>
      <description>&lt;p&gt;
@joemcgill Thanks for letting me know. That is one mystery solved. Now what about part 2 of my question... any insights ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52465 (Allow a relation type in resource hints to be used multiple times) updated</title>
      
        <dc:creator>tabrisrp</dc:creator>

      <pubDate>Fri, 30 Apr 2021 20:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52465#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52465#comment:2/1619815848497040</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I added a PR on Github for this enhancement.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It takes a different approach because the proposed patch was causing existing unit tests to fail.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I focused on the crossorigin compatibility, as it seems it's the only attribute for which we really want the possibility to have multiple entries for the same URL.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Added an additional test case to validate the change, and the existing tests still pass too.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52465 (Allow a relation type in resource hints to be used multiple times) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 20:37:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52465#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52465#comment:1/1619815042689145</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1216"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1216&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/Tabrisrp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Tabrisrp&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
This change allows to have the same URL in the &lt;code&gt;wp_resource_hints()&lt;/code&gt; array, and added to the HTML, if:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;there is one entry using the &lt;code&gt;crossorigin&lt;/code&gt; attribute
&lt;/li&gt;&lt;li&gt;and one not using it
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Example:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$urls[] = array(
	'href' =&amp;gt; 'https://example.org',
);
$urls[] = array(
	'href'        =&amp;gt; 'https://example.org',
	'crossorigin' =&amp;gt; 'anonymous',
);
&lt;/pre&gt;&lt;p&gt;
will output:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;link href='https://example.org' rel='preconnect' /&amp;gt;
&amp;lt;link href='https://example.org' crossorigin='anonymous' rel='preconnect' /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
A new unit test has been added to validate the code change. Existing tests still passes too.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/52465"&gt;https://core.trac.wordpress.org/ticket/52465&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52790 (Reusable blocks disappeared) updated</title>
      
        <dc:creator>emilymoran84</dc:creator>

      <pubDate>Fri, 30 Apr 2021 20:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52790#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52790#comment:40/1619813800158040</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I hope this is the appropriate place to add this. (I'm not entirely versed in how core trac works, so please let me know if I should be starting a new ticket or placing this elsewhere). I just wanted to add that I've also found my reusable blocks are no longer in the "directory" if trying to add a new block. (I used to be able to search by the reusable block names). And I'm unable to make new ones. Here is a breakdown of what I'm seeing:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;On the Reusable Blocks "List" page (/wp-admin/edit.php?post_type=wp_block)&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;My reusable blocks are still showing in the "list" page (/wp-admin/edit.php?post_type=wp_block), and I am able to go into their edit screen and see their content.
&lt;/li&gt;&lt;li&gt;While I can access the "Edit" screen of a reusable block if going to the List of them, the "Update" button results in no action, thus making it impossible to actually edit existing blocks.
&lt;/li&gt;&lt;li&gt;While I can click the "Add New" button on the list page (new block edit screen opens  to /wp-admin/post-new.php?post_type=wp_block), when clicking "publish", it does the publish confirmation ask, then I click "Publish" again and it goes back to the first "Publish" button, never actually allowing me to publish the block
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Within a post or page&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reusable blocks do not come up in the block search and there is no "Reusable" tab in the block sidebar (Should be "Blocks" "Patterns" "Reusable") Screenshot: &lt;a class="ext-link" href="http://snpy.in/RMQBcp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://snpy.in/RMQBcp&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Existing reusable blocks already within content still seem to be displaying the reusable block's content and have something of a "ghost frame" of what should be the frame for editing them within the post they're embedded within, however the option is not present. Screenshot: &lt;a class="ext-link" href="http://snpy.in/H1JtpQ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://snpy.in/H1JtpQ&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;If I switch to code editor view, I can see the HTML for the block, and it seems (at least from one test), that I can add an existing reusable block to a post if I flip to the Code Editor view and paste in the HTML (though cannot make new reusables). Example of the HTML:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;&amp;lt;!-- wp:block {"ref":20311} /--&amp;gt;
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;I am unable to save new reusable blocks from within a post or page. Clicking the "Add to Reusable blocks" results in nothing happening.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note: While I do have the Autoptimize plugin, it is not active (I saw that for another poster, disabling that plugin fixed some issues).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
. Thank you!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53122 (Add dns-prefetch resource hint as fallback for Google Fonts preconnect) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:44:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53122#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53122#comment:4/1619811887464339</guid>
      <description>&lt;p&gt;
Yeah, I'm not entirely clear on that either. But MDN recommends adding both, and &lt;code&gt;dns-prefetch&lt;/code&gt; will at least benefit IE11 if Firefox doesn't in fact support any longer. &lt;a class="ext-link" href="https://andydavies.me/blog/2019/04/17/three-ways-of-checking-your-rel-equals-preconnect-resource-hints-are-working/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;According&lt;/a&gt; to Andy Davies:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It appears that preconnect doesn't currently work in Firefox even though it's supposed to&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See Firefox bug &lt;a class="ext-link" href="https://bugzilla.mozilla.org/show_bug.cgi?id=1543990"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;1543990&lt;/a&gt; opened 2 years ago.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53122 (Add dns-prefetch resource hint as fallback for Google Fonts preconnect) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:41:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53122#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53122#comment:3/1619811660876443</guid>
      <description>&lt;p&gt;
It's interesting that caniuse shows that &lt;code&gt;dns-prefetch&lt;/code&gt; has 82.5% support, and &lt;code&gt;preconnect&lt;/code&gt; has 90.5%. (part of that 90% is very recent)&lt;br /&gt;
But it says that Firefox supported &lt;code&gt;preconnect&lt;/code&gt; and then dropped it. Is that right?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53123 (Tests: review of assertTrue or assertFalse with in_array) created</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53123/1619811340879982</guid>
      <description>&lt;p&gt;
While looking at the tests in the context of another ticket, @jrf and I came across tests checking if a value is in an array by using &lt;code&gt;assertTrue&lt;/code&gt; or &lt;code&gt;assertFalse&lt;/code&gt; with &lt;code&gt;in_array()&lt;/code&gt;. For example:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$this-&amp;gt;assertTrue( in_array( $function, $defined, true ), $msg );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
PHPUnit provides the following assertions:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;assertContains&lt;/code&gt;: checks if a value exists in an array
&lt;/li&gt;&lt;li&gt;&lt;code&gt;assertNotContains&lt;/code&gt;: checks the opposite, i.e. if a value does not exist in an array
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See: - &lt;a class="ext-link" href="https://phpunit.readthedocs.io/en/7.0/assertions.html#assertcontains"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://phpunit.readthedocs.io/en/7.0/assertions.html#assertcontains&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Using the example from above, it could be changed to:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$this-&amp;gt;assertContains( $function, $defined, $msg );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This ticket proposes to review the test suite to verify each occurrence and then replace:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;assertTrue( in_array() )&lt;/code&gt; with &lt;code&gt;assertContains()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;assertFalse( in_array() )&lt;/code&gt; with &lt;code&gt;assertNotContains()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:33:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:5/1619811180007789</guid>
      <description>&lt;p&gt;
I know...the point I was trying to make is the provider for &lt;code&gt;test1&lt;/code&gt; is not &lt;em&gt;immediately&lt;/em&gt; following it.  The provider is after &lt;code&gt;test3&lt;/code&gt;, so a contributor would still have to "jump around" to find it's provider...just as they would for finding the provider for &lt;code&gt;test3&lt;/code&gt; if all providers were at the bottom of the class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Again, I welcome the proposal &lt;em&gt;as written&lt;/em&gt;, but personally would find it easier if I could know that all providers were at the bottom of the class.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:12:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:4/1619809942540318</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53119#comment:3" title="Comment 3"&gt;pbiron&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If any given data provider could only be used for 1 test, then I would completely agree that having the provider immediately follow it's test.  But since the proposal recognizes that a given provider &lt;em&gt;could&lt;/em&gt; be used for more than one test then it's &lt;strong&gt;not&lt;/strong&gt; guaranteed that a test's provider will &lt;strong&gt;always&lt;/strong&gt; immediately follow it, so folks will still have to "jump around" some times, which adds a certain amount of "cognitive effort" in figuring out "is this one of those times?".&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the case where a data provider is for multiple tests, the ticket proposes to group the test methods together with the data provider below the last test in the group. By doing so, the group of tests flow together with their data provider:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
test1&lt;br /&gt;
test2&lt;br /&gt;
test3&lt;br /&gt;
dataProvider&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
test4&lt;br /&gt;
test5&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53122 (Add dns-prefetch resource hint as fallback for Google Fonts preconnect) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53122#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53122#comment:2/1619809561248454</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52938 (Twenty Twenty-One: H1 is misplaced for a page set as blogpost container) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52938#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52938#comment:17/1619809556904348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested the proposed patch and I can confirm it shows the &lt;code&gt;single_post_title&lt;/code&gt; in a &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag (which is "a Blog page" when using the Theme Unit Test dataset and when this page is defined as the blog page). Also, the site title uses a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Good to go!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53122 (Add dns-prefetch resource hint as fallback for Google Fonts preconnect) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53122#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53122#comment:1/1619809460000383</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53122 (Add dns-prefetch resource hint as fallback for Google Fonts preconnect) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 30 Apr 2021 19:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53122/1619809328218042</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37171" title="#37171: feature request: Implement preconnect to Google fonts in themes twenty eleven, twelve, ... (closed: fixed)"&gt;#37171&lt;/a&gt; the use of the &lt;code&gt;preconnect&lt;/code&gt; resource hint was added for core themes that use Google Fonts. However, what was missing was also including the &lt;code&gt;dns-prefetch&lt;/code&gt; resource hint. The &lt;code&gt;preconnect&lt;/code&gt; resource hint is not supported by older browsers, so including &lt;code&gt;dns-prefetch&lt;/code&gt; ensures that they'll also get some performance benefit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See MDN docs for &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/Performance/dns-prefetch#best_practices"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Best Practices&lt;/a&gt; that recommend pairing &lt;code&gt;preconnect&lt;/code&gt; with &lt;code&gt;dns-prefetch&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 30 Apr 2021 18:53:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:3/1619808810220912</guid>
      <description>&lt;p&gt;
If any given data provider could only be used for 1 test, then I would completely agree that having the provider immediately follow it's test.  But since the proposal recognizes that a given provider &lt;em&gt;could&lt;/em&gt; be used for more than one test then it's &lt;strong&gt;not&lt;/strong&gt; guaranteed that a test's provider will &lt;strong&gt;always&lt;/strong&gt; immediately follow it, so folks will still have to "jump around" some times, which adds a certain amount of "cognitive effort" in figuring out "is this one of those times?".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I can't remember if the following has come up in tests I've written/contributed to for core, but it has in test suites for plugins I've written:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;At time &lt;em&gt;T&lt;/em&gt;, I write a test and it's provider (in addition to some other tests that do &lt;strong&gt;not&lt;/strong&gt; use this provider).
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;At time &lt;em&gt;T + 1&lt;/em&gt;, I add a couple of other tests that are "related" to one another (after all the existing tests)
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;At time &lt;em&gt;T + 2&lt;/em&gt;, I realize that the provider already in the class is appropriate for the "related" tests I added at time &lt;em&gt;T + 1&lt;/em&gt;, so I remove those tests and add their "data" to the provider
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Under the proposal as written, a contributor would have to remember to them move the time &lt;em&gt;T + 1&lt;/em&gt; tests to be after the time &lt;em&gt;T&lt;/em&gt;, which can make for "messy" patches that require a high level of "cognitive effort" to realize &lt;strong&gt;exactly&lt;/strong&gt; what is being changed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, for test suites for my own plugins, I adopted the convention to always put providers at the end of the class.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not wedded to having that all data providers at the end, it's just a suggestion based on my own experience.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 30 Apr 2021 18:45:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121#comment:1/1619808320505669</guid>
      <description>&lt;p&gt;
Hi @jrf! I don't know that I can remember all the details here, though I believe the reasons that these are inconsistent is that prior to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39831" title="Media: Improve image filetype checking.
This adds a new function ..."&gt;[39831]&lt;/a&gt;, WP relied entirely on &lt;code&gt;getimagesize&lt;/code&gt; and include the &lt;code&gt;function_exists()&lt;/code&gt; check. If I remember correctly, we introduced the &lt;code&gt;exif_imagetype()&lt;/code&gt; check because it is more performant but wanted to keep the previous behavior as a fallback. The reason those checks are different are most likely because I personally prefer &lt;code&gt;is_callable()&lt;/code&gt; but am also often overly conservative about changing previous behavior and opted not to update the check for &lt;code&gt;getimagesize&lt;/code&gt;. So, the answer is probably that humans are strangely inconsistent at times 😀. Hope this helps!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41029 (The changed author is not making the coming revisons) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 18:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41029#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41029#comment:1/1619807287195387</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @elisa-demonki and thanks for opening the ticket. I just saw this now when reviewing revision tickets and would like to investigate further.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can you describe steps to reproduce? is it just: Author 1 create and publish post, author 2 edit post and save, check revisions screen?
&lt;/li&gt;&lt;li&gt;Did this not happen before 4.8?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44577 (After enabling revisions for post type, takes 2 additional revisions ...) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 18:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44577#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44577#comment:1/1619807026399575</guid>
      <description>worksforme: &lt;p&gt;
Hi @megabyterose thanks for the report,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is actually expected behavior based on the current code. When you start a new post with revisions enabled you will get that initial revision/autodraft that counts as one. If you compare the two posts before making changes, there will already be two saved entries for the post where revisions are enabled for the type, while the post where revisions were not enabled will not have this stored revision, only the single saved entry. Now when you edit both posts, the one with revisions enabled initially will always have one additional revision. As pointed out elsewhere, you need to have more than one version for the UI to show.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Essentially until revisions are enabled for a post type, none will be saved. Once you enable it, it will take two saves for there to be a valid way to display the revisions screen (only one revision will match the current post, so nothing will show as "changed").&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ones created prior to supporting revisions end up needing 3 revisions to display the metabox - the original, then the 2 after support is added (related to ticket 42500).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually you still need 2, its just that the initial revision that is usually created when you start a post is not created, so you only have 1!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Given the fact that this is an edge case situation, I don't feel it justifies changing the code or trying to resolve directly. One possible improvement though would be documenting the requirements more clearly in the handbook where enabling revisions is explained (&lt;a class="ext-link" href="https://developer.wordpress.org/plugins/post-types/registering-custom-post-types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/plugins/post-types/registering-custom-post-types/&lt;/a&gt;). If you want to help work on a change there I am happy to work on this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Closing this ticket as "works for me" for now since this is expected behavior, please feel free to re-open if I have missed something.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Fri, 30 Apr 2021 18:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:2/1619805771022630</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53119#comment:1" title="Comment 1"&gt;pbiron&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would, however, recommend one change to the proposal: put all data providers at the bottom of the class, regardless of which tests they are used for.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think that simplification/consistency would be easier for contributors to "grasp".&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
IMO moving all the data providers to the bottom of the class can cause a "reading" and "understanding" disconnect between a test and its data. Why? The distance between the test and its data requires action to jump between the different locations in the class. This navigating "action" is a break in the reading which can cause cognitive effort and load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Think of it in terms of reading a book. Imagine a chapter where the details of the story are moved to the end of the book rather than appearing in the next paragraph to support the flow of the story.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The test's data is the richness of the test. The test and its data are one unit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For me, I find keeping the test and its data grouped together like this to flow better without the cognitive effort from jumping around:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
test1&lt;br /&gt;
dataProvider1&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
test2&lt;br /&gt;
dataProvider2&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
test3&lt;br /&gt;
test4&lt;br /&gt;
dataProvider34&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
test5&lt;br /&gt;
test6&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47518 (Add an explanatory message to the Revisions screen for locked posts) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 17:44:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47518#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47518#comment:2/1619804667014444</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
User A is now shown the revisions screen for a locked post and the Restore This Revision button is disabled for all revisions but with no explanatory information.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great suggestion @johnbillion - since the button is disabled we must be already detecting the lock state at load time. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I feel like this would be sufficient here (show the message if post locked at load time) vs. the polling/live lock detection we do on the post edit screen. What do you think?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51550 (Revisions: Add a post type-specific filter to `wp_revisions_to_keep()`) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 17:41:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51550#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51550#comment:2/1619804501372105</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51550 (Revisions: Add a post type-specific filter to `wp_revisions_to_keep()`) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 17:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51550#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51550#comment:1/1619804495620745</guid>
      <description>&lt;p&gt;
Thanks for the patch @dlh - looks good. The only think I would add is a note on the doc block indicating that the filter also overrides the existing &lt;code&gt;wp_revisions_to_keep&lt;/code&gt; filter when used.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In addition, some basic unit tests to confirm both of these filters works as expected would be a good addition.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52635 (Save revisions on the `wp_after_insert_post` action) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 17:36:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52635#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52635#comment:1/1619804196034948</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Great suggestion @peterwilsoncc I was thinking the same when the new hook was added. I'll try to look into this further. Thanks for the plugin reference, that is helpful to have to ensure we don't break backwards compatibility.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53121 (wp_get_image_mime() - something weird going on) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 17:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53121/1619803782581374</guid>
      <description>&lt;p&gt;
Okay, eh... help... so this is a weird one to write up.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the context of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/53009" title="#53009: task (blessed): Tests: review all calls to markTestSkipped() and @requires annotations (assigned)"&gt;#53009&lt;/a&gt;, @hellofromTonya and me are looking at all calls to &lt;code&gt;markTestSkipped()&lt;/code&gt; in the test suite.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One of the ones I was looking at is this test in &lt;code&gt;tests/phpunit/tests/functions.php&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;test_wp_get_image_mime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$expected&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'exif_imagetype'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'getimagesize'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;markTestSkipped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'The exif PHP extension is not loaded.'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;assertSame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;wp_get_image_mime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
for the &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_get_image_mime/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`wp_get_image_mime()`&lt;/a&gt; function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now, there are two questions I have:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Why is &lt;code&gt;is_callable()&lt;/code&gt; used for &lt;code&gt;exif_imagetype&lt;/code&gt; and &lt;code&gt;function_exists()&lt;/code&gt; for &lt;code&gt;getimagesize&lt;/code&gt; ? This is the same in the actual function as well as the test, but strikes me as odd. Why not use &lt;code&gt;function_exists()&lt;/code&gt; (or &lt;code&gt;is_callable()&lt;/code&gt;) for both ?
&lt;/li&gt;&lt;li&gt;I've been trying to verify the conditions by running the test with the Exif and GD extensions in various states - both enabled, GD disabled - Exif enabled, GD enabled - Exif disabled, both disabled - and I can only seem to make the test hit the skip condition with Exif disabled. Tested on both PHP 5.6 as well as PHP 7.4.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I've checked the PHP docs and the &lt;a class="ext-link" href="https://www.php.net/manual/en/function.getimagesize.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`getimagesize()`&lt;/a&gt; function is listed as part of the GD extension and the manual doesn't say anything explicitly about it being available independently of the extension, so the condition &lt;em&gt;seems&lt;/em&gt; justified, but the fact that I can't seem to get the test to fail is making me want to dig deeper.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Related to &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/11946" title="#11946: defect (bug): Ensure image MIME type matches extension (reopened)"&gt;#11946&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40017" title="#40017: defect (bug): wp_get_image_mime() returns 'application/octet-stream' for non-image files. (closed: fixed)"&gt;#40017&lt;/a&gt;. The original function was introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39831" title="Media: Improve image filetype checking.
This adds a new function ..."&gt;[39831]&lt;/a&gt;, the tests in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40397" title="Media: Improve handling of non-image files in wp_get_image_mime.
This ..."&gt;[40397]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Pinging @joemcgill - would you happen to be able to give me some insight into what's happening here ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52903 (Consent Management within WordPress Core) updated</title>
      
        <dc:creator>ryokuhi</dc:creator>

      <pubDate>Fri, 30 Apr 2021 17:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52903#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52903#comment:6/1619803402048213</guid>
      <description>&lt;p&gt;
This ticket was checked a few times in the last weeks during the accessibility team's bug-scrubs.&lt;br /&gt;
While we would be happy to contribute and make sure that the new feature is accessible from the beginning, until there's something to review our team can't really help with moving this ticket forward.&lt;br /&gt;
Maybe it might be better to assign an owner to this ticket and move it to Future Release, so it doesn't pop up whenever we go through the queue of the Awaiting Review tickets: we'll start reviewing this ticket when it'll be milestoned for a specific release.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53120 (term_order-field not copied to wp_x_terms when switching to multisite) created</title>
      
        <dc:creator>spithost</dc:creator>

      <pubDate>Fri, 30 Apr 2021 17:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53120/1619802357683644</guid>
      <description>&lt;p&gt;
I changed a site to multi-site yesterday and ran into trouble creating new product-categories in Woocommerce. &lt;br /&gt;
When activated, the debugging for the site, there was mentioning of missing term_order-column in queries.&lt;br /&gt;
When checking the tables of the sites that were "created" as subsites, the term_order-field was missing indeed. &lt;br /&gt;
I then manually added the field to the wp_x_terms-table (copied the field from the "original" website-tables) and the problem was fixed.&lt;br /&gt;
I suspect the routine that switched WordPress from single-site to multi-site, uses a "table-template" that misses the term-order-field or just had no edit-routine to add this specific field to the wp_x_terms-table.&lt;br /&gt;
The x in wp_x_terms is ofcourse the "number" of the subsite ;-)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50105 (Remove infinite scrolling behavior from the Media grid) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 16:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50105#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50105#comment:69/1619801617025222</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by joedolson. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619801614495900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52938 (Twenty Twenty-One: H1 is misplaced for a page set as blogpost container) updated</title>
      
        <dc:creator>justinahinon</dc:creator>

      <pubDate>Fri, 30 Apr 2021 16:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52938#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52938#comment:16/1619800784830784</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Removing the needs-testing feedback after @francina's test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@audrasjb, at this point, can we add the commit tag to the ticket?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 30 Apr 2021 16:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119#comment:1/1619800459856283</guid>
      <description>&lt;p&gt;
As one who likes to write tests that use data providers I think this is a great idea!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would, however, recommend one change to the proposal: put all data providers at the bottom of the class, regardless of which tests they are used for.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think that simplification/consistency would be easier for contributors to "grasp".&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50105 (Remove infinite scrolling behavior from the Media grid) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 16:25:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50105#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50105#comment:68/1619799938873900</guid>
      <description>&lt;p&gt;
Still needed: update total collection size if items are added or deleted from the collection. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>50105-new-language.png attached to Ticket #50105</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 16:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50105/50105-new-language.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50105/50105-new-language.png/1619799828443127</guid>
      <description>&lt;p&gt;
Screenshot showing new language
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #50105 (Remove infinite scrolling behavior from the Media grid) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 16:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50105#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50105#comment:67/1619799767221879</guid>
      <description>&lt;p&gt;
Updated patch accomplishes four things:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
1) Language to 'Jump' link changed based on Media meeting.&lt;br /&gt;
2) Language describing what's currently shown changed.&lt;br /&gt;
3) Mis-alignment of 'Jump to first loaded' button when all items displayed fixed.&lt;br /&gt;
4) Added highlight on all items added to help visual users perceive the insertion point and change.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@antpb I didn't find a way to parse over the newly added items, but I did find that I could add a class to all the items already loaded, and use a :not selector to invert the selection for highlighting.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>50105.8.diff attached to Ticket #50105</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Fri, 30 Apr 2021 16:18:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50105/50105.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50105/50105.8.diff/1619799535499431</guid>
      <description>&lt;p&gt;
Updated patch - language changes, highlight new items.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53119 (Tests: introduce naming conventions for data providers and use named ...) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53119/1619798331059859</guid>
      <description>&lt;p&gt;
A number of tests use dataproviders - functions which return a multi-level array of test cases, where each sub-array is a set of parameters to pass to the actual test function -.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also see: &lt;a class="ext-link" href="https://phpunit.readthedocs.io/en/9.5/writing-tests-for-phpunit.html?#data-providers"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://phpunit.readthedocs.io/en/9.5/writing-tests-for-phpunit.html?#data-providers&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Currently there are:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;No naming conventions for data providers - the functions are called whatever the author wanted to call them.
&lt;/li&gt;&lt;li&gt;No placement conventions for data providers - sometimes the functions are at the top of a file, sometimes at the bottom, sometimes just before or after the test function using them.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'd like to recommend streamlining this a little more to:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Make it more obvious which functions are data providers.
&lt;/li&gt;&lt;li&gt;Make the data providers easier to find.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
With that in mind, I'm proposing:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;That the function name of all data provider functions starts with &lt;code&gt;data_&lt;/code&gt;, similar to how all test functions are prefixed with &lt;code&gt;test_&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;That data providers when used by only one test are placed directly after that test.
&lt;/li&gt;&lt;li&gt;That data providers when used by multiple tests which directly follow each other, are placed directly after the last test using the data provider.
&lt;/li&gt;&lt;li&gt;&lt;del&gt;That data providers used by multiple tests throughout a test file are placed at the bottom of the class.&lt;/del&gt; &lt;strong&gt;Updated&lt;/strong&gt;: That when a data provider is used by multiple tests throughout a test file, that the tests using the data provider are grouped together and that the data provider is then placed directly after the last of the tests using it, as per 3.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Additionally, there is an awesome, but little known feature in PHPUnit which allows to "name" each test case in a data provider by adding an index key for each test data set.&lt;br /&gt;
This will make test failure information more descriptive and will make the test case which is causing the failure easier to find than having the default numeric indexes for test cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And when coupled with the &lt;code&gt;--testdox&lt;/code&gt; feature, especially when selectively running a filtered set of tests will make it much more obvious what is being tested.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So I'd also like to recommend implementing the use of named test cases when using data providers.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To illustrate the difference:&lt;br /&gt;
Screenshot of a test run with a dataprovider and &lt;code&gt;--testdox&lt;/code&gt; without using named test cases:&lt;br /&gt;
&lt;a class="ext-link" href="https://speakerdeck.com/jrf/my-top-10-phpunit-tips-and-tricks-e6ea54ce-2515-4ea9-aacf-9bf7ab3b3141?slide=26"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://speakerdeck.com/jrf/my-top-10-phpunit-tips-and-tricks-e6ea54ce-2515-4ea9-aacf-9bf7ab3b3141?slide=26&lt;/a&gt;&lt;br /&gt;
Screenshot of a test run with a dataprovider and &lt;code&gt;--testdox&lt;/code&gt; WITH named test cases:&lt;br /&gt;
&lt;a class="ext-link" href="https://speakerdeck.com/jrf/my-top-10-phpunit-tips-and-tricks-e6ea54ce-2515-4ea9-aacf-9bf7ab3b3141?slide=28"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://speakerdeck.com/jrf/my-top-10-phpunit-tips-and-tricks-e6ea54ce-2515-4ea9-aacf-9bf7ab3b3141?slide=28&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Code sample of how to implement this:&lt;br /&gt;
&lt;a class="ext-link" href="https://speakerdeck.com/jrf/my-top-10-phpunit-tips-and-tricks-e6ea54ce-2515-4ea9-aacf-9bf7ab3b3141?slide=27"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://speakerdeck.com/jrf/my-top-10-phpunit-tips-and-tricks-e6ea54ce-2515-4ea9-aacf-9bf7ab3b3141?slide=27&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Once this ticket has been actioned, I'd like to recommend that the conventions applied will be added to the Core contributors handbook.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
/cc @hellofromTonya&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53113 (class-walker-comment.php has call to remove_filter with incorrect ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53113#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53113#comment:6/1619798062820197</guid>
      <description>&lt;p&gt;
Got it. Ready to commit&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52288 (Separate Color Palette for Text) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52288#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52288#comment:7/1619797488353799</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619797485433300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53117 (Post types which are not public, but which are show_in_rest and ...) updated</title>
      
        <dc:creator>benlk</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:40:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53117#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53117#comment:2/1619797244589162</guid>
      <description>&lt;p&gt;
Minor correction: the person I credit with finding the source of the bug is @felipeelia, not the misspelled delipeelia&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51754 (Add a copy-link button at the media upload page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:38:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51754#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51754#comment:11/1619797093033889</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619797090427300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #51189 (comments_pagination_base missing in get_comment_reply_link() function) updated</title>
      
        <dc:creator>ryokuhi</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51189#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51189#comment:9/1619797037323836</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed today during the accessibility team's bug-scrub.&lt;br /&gt;
Given it might be an easy fix, it can be a good first bug: if any new contributor wants to jump in, feel free to do it!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53117 (Post types which are not public, but which are show_in_rest and ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53117#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53117#comment:1/1619797029177720</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That seems like a sensible change to me. @flixos90 Do you have thoughts?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53118 (Tests: review of correctly setting output expectations) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53118/1619796755042570</guid>
      <description>&lt;p&gt;
While looking at the tests in the context of another ticket, @hellofromTonya and me came across various tests doing things like:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;ob_start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// Do something which generates output...
&lt;/span&gt;&lt;span class="nv"&gt;$contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ob_get_clean&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;assertRegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$contents&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
PHPUnit has dedicated functionality build-in to set output expectations which will then automatically test that the output conforms to those expectations.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When using those, the above code would become:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;expectOutputRegex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$regex&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Do something which generates output...
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I suspect that in most cases were &lt;code&gt;ob_*()&lt;/code&gt; functions are being used to "catch" output before testing it, this can (and should) be replaced with using the PHPUnit native &lt;code&gt;expectOutputString()&lt;/code&gt; and &lt;code&gt;expectOutputRegex()&lt;/code&gt; functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note: each test can only have &lt;strong&gt;ONE&lt;/strong&gt; output expectation when using the PHPUnit native functionality.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also see: &lt;a class="ext-link" href="https://phpunit.readthedocs.io/en/9.5/writing-tests-for-phpunit.html#testing-output"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://phpunit.readthedocs.io/en/9.5/writing-tests-for-phpunit.html#testing-output&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd recommending a complete review of the test suite to verify whether output expectations are tested correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To find all instances of this code pattern a search should be done for the use of &lt;code&gt;ob_*()&lt;/code&gt; functions in the &lt;code&gt;tests/phpunit&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51189 (comments_pagination_base missing in get_comment_reply_link() function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51189#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51189#comment:8/1619796676199092</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619796673422400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39004 (Alt attributes should be searchable in media library) updated</title>
      
        <dc:creator>ryokuhi</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:30:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39004#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39004#comment:43/1619796648700668</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed today during the accessibility team's bug-scrub.&lt;br /&gt;
We agreed with @joedolson to move this ticket to Future release, given that some architectural work will be needed to figure out search options to work with.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39004 (Alt attributes should be searchable in media library) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39004#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39004#comment:42/1619796062679338</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619796060412900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #42520,​50714 batch updated</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42520%2C50714</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42520%2C50714/1619796030470480</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42520" title="#42520: enhancement: A Dot at the end of message &amp;#34;WordPress successfully updated&amp;#34; is missing (closed: duplicate)"&gt;#42520&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #28927 (Media Grid "delay" in infinite scroll on Mobile) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:18:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28927#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28927#comment:20/1619795936282803</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619795933410300"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26562 (Remove title attributes: class-wp-admin-bar.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:16:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26562#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26562#comment:38/1619795783972720</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619795781408100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21603 (Add ability to delete multiple menu items) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 15:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21603#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21603#comment:34/1619795500985879</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by ryokuhi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1619795498403800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53117 (Post types which are not public, but which are show_in_rest and ...) created</title>
      
        <dc:creator>benlk</dc:creator>

      <pubDate>Fri, 30 Apr 2021 14:39:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53117/1619793572419993</guid>
      <description>&lt;p&gt;
I have a custom post type "tease" which is registered with the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;	register_post_type(
		'tease',
		array(
			'menu_icon'           =&amp;gt; 'dashicons-update',
			'exclude_from_search' =&amp;gt; false, // allow us to include these in query results.
			'publicly_queryable'  =&amp;gt; true,
			'show_in_nav_menus'   =&amp;gt; false, // Don't allow to slot in nav.
			'show_ui'             =&amp;gt; true, // Show in admin UI.
			'has_archive'         =&amp;gt; false,
			'show_in_rest'        =&amp;gt; true,
			'supports'            =&amp;gt; array( 'title', 'editor', 'custom-fields' ),
			'map_meta_cap'        =&amp;gt; true, // Set to true, so that default capabilities are mapped from posts to Teases.
			'capability_type'     =&amp;gt; 'post',
			'taxonomies'          =&amp;gt; array( 'category', 'post_tag' ),
		)
	);
&lt;/pre&gt;&lt;p&gt;
Given that it is publicly queryable, shows in the REST API, and is not excluded from search, I would expect to be able to perform a search using the REST API for posts of this type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, a search for posts or teases matching the word "patience" returns an error message: /wp-json/wp/v2/search?search=patience&amp;amp;subtype=post,tease&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
{“code”:“rest_invalid_param”,“message”:“Invalid parameter(s): subtype”,“data”:{“status”:400,“params”:{“subtype”:“subtype&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; is not one of post, page, category, post_tag, and any.“},“details”:{“subtype”:{“code”:“rest_not_in_enum”,“message”:“subtype&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; is not one of post, page, category, post_tag, and any.“,”data”:null}}}}&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I get the same error message when I replace "tease" in that URL with a nonexistent post type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If I modify the post-type registration with 'public' =&amp;gt; true, then the search completes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd like to credit @delipeelia for finding the potential cause: WP_REST_Post_Search_Handler only looks for post types which are public or show_in_rest: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/search/class-wp-rest-post-search-handler.php#L32"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/search/class-wp-rest-post-search-handler.php#L32&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Changing /wp-includes/rest-api/search/class-wp-rest-post-search-handler.php to the following allows the search to work as I would expect it to, but I'm not sure that this is the right way to handle it.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;				get_post_types(
					array(
						'exclude_from_search' =&amp;gt; false,
						'show_in_rest'        =&amp;gt; true,
					),
					'names'
				)
&lt;/pre&gt;&lt;p&gt;
It does seem kind of weird to want to be able to search a non-public post type; the use case here is building a post-picker in the Block Editor that can pick posts or teases, without exposing the existence of teases to visitors to the site. For now, I've marked the post type as public, but that the REST API doesn't allow searching of posts which are marked as searchable does seem like a bug.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49487 (Remove the "Featured" tab in the Add Themes screen) updated</title>
      
        <dc:creator>poena</dc:creator>

      <pubDate>Fri, 30 Apr 2021 14:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49487#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49487#comment:4/1619791710080732</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49487 (Remove the "Featured" tab in the Add Themes screen) updated</title>
      
        <dc:creator>poena</dc:creator>

      <pubDate>Fri, 30 Apr 2021 14:05:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49487#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49487#comment:3/1619791545118289</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2021-04-30 at 16.03.38-52938.png attached to Ticket #52938</title>
      
        <dc:creator>francina</dc:creator>

      <pubDate>Fri, 30 Apr 2021 14:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52938/Screen%20Shot%202021-04-30%20at%2016.03.38-52938.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52938/Screen%20Shot%202021-04-30%20at%2016.03.38-52938.png/1619791502221938</guid>
      <description>&lt;p&gt;
Screenshot of blog archive page after patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52938 (Twenty Twenty-One: H1 is misplaced for a page set as blogpost container) updated</title>
      
        <dc:creator>francina</dc:creator>

      <pubDate>Fri, 30 Apr 2021 14:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52938#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52938#comment:15/1619791397422525</guid>
      <description>&lt;p&gt;
Tested on &lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;MacOS 11.3
&lt;/li&gt;&lt;li&gt;Safari 14.1
&lt;/li&gt;&lt;li&gt;WordPress 5.8-alpha-50427-src
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Patch 52938.2.diff works fine for me&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26933 (Toolbar "Howdy, " message CSS broke in IE) updated</title>
      
        <dc:creator>Boniu91</dc:creator>

      <pubDate>Fri, 30 Apr 2021 14:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26933#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26933#comment:17/1619791237569135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Worked as expected. Tested with:&lt;br /&gt;
-IE11&lt;br /&gt;
-Chrome&lt;br /&gt;
-Firefox&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
No regressions.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26933 (Toolbar "Howdy, " message CSS broke in IE) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 13:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26933#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26933#comment:16/1619790467488918</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619790465116800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52938 (Twenty Twenty-One: H1 is misplaced for a page set as blogpost container) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 30 Apr 2021 13:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52938#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52938#comment:14/1619790467459488</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-test by boniu91. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-test/p1619790465116800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52849 (Accessibility/Application passwords: Keyboard navigation issue on user ...) updated</title>
      
        <dc:creator>promz</dc:creator>

      <pubDate>Fri, 30 Apr 2021 13:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52849#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52849#comment:7/1619788141489789</guid>
      <description>&lt;p&gt;
@alexstine I have updated the code again. I think it's working much better now. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have replaced all submit buttons with regular &amp;lt;button&amp;gt; except the 'Update Profile' button.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Because when enter key is pressed on any input element, browser would trigger click event on all the submit buttons. This was creating unexpected behaviour as all the button click events&lt;br /&gt;
were fired.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41281 (attachment_url_to_postid results in very slow query) updated</title>
      
        <dc:creator>homeworker</dc:creator>

      <pubDate>Fri, 30 Apr 2021 12:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41281#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41281#comment:11/1619787350766944</guid>
      <description>&lt;p&gt;
I have the same problem, I have a website with 2.000.000 rows in wp_postmeta. If I select all rows it take 0.00002s, but with the query generated by attachment_url_to_postid from elementor it take 0.4s (for every image in page) slowing the home generation up to 20s&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT post_id, meta_value
FROM wp_postmeta
WHERE meta_key = '_wp_attached_file'
AND meta_value = '2020/03/almo-nature.svg'
&lt;/pre&gt;&lt;p&gt;
The problem is that this table is indexed for post_id, meta_vale and meta_key but NOT for meta_value that is used from this function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I solved it adding an index(100) to the meta_value and changed from longtext to text, I don't think that this column need 4,294,967,295 characters. Isn't text 65,535 characters enough? Isn't varchar faster?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53009 (Tests: review all calls to markTestSkipped() and @requires annotations) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 30 Apr 2021 12:47:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53009#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53009#comment:5/1619786858343925</guid>
      <description>&lt;p&gt;
Action list we'll be working from today: &lt;a class="ext-link" href="https://docs.google.com/spreadsheets/d/1UqXgrE0kZlX5GlnAjNBa17oLlYtpx_76sXI71TCNSgk/edit?usp=sharing"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://docs.google.com/spreadsheets/d/1UqXgrE0kZlX5GlnAjNBa17oLlYtpx_76sXI71TCNSgk/edit?usp=sharing&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot (303).png attached to Ticket #53116</title>
      
        <dc:creator>threadnoodle</dc:creator>

      <pubDate>Fri, 30 Apr 2021 12:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53116/Screenshot%20(303).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53116/Screenshot%20(303).png/1619786485854897</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #4476 (Delete Cache by Group) updated</title>
      
        <dc:creator>dg12345</dc:creator>

      <pubDate>Fri, 30 Apr 2021 12:17:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4476#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4476#comment:20/1619785079123213</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The main reason I can think to do this is that, currently to delete targeted cache you must use the "last_changed" method which essentially just adjust the keys used but that would also leave the old keys in the cache, so your redis or memcache will slowly get bigger.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The only other way is for you to keep track of all the keys used and write a script to delete each one when you want to delete the cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I agree with @lucasbustamante, simply putting it in as an official core function you will force the hand of the plugin writers to implement it in the main redis and memcache plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would think its a five minute job to add a delete by group function, the core doesn't even need to use it (although give the cache size issue it would be nice if it did).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53116 (Gutenberg plug-in autoupdate on 29 April 2021 caused my website to ...) created</title>
      
        <dc:creator>threadnoodle</dc:creator>

      <pubDate>Fri, 30 Apr 2021 12:12:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53116/1619784732556987</guid>
      <description>&lt;p&gt;
Gutenberg auto-updated yesterday and today my website wasn't functioning correctly: content was still there in Editor, but wasn't displaying - a Continue Reading link had appeared, but didn't work. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I narrowed the fault down to the Gutenberg plugin by deactivating plug-ins. Other things are still not fixed (my images are still not showing in media library; most but not all are displaying correctly on pages and posts). &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52776 (Wrap long site title on login screen) updated</title>
      
        <dc:creator>GeekPress</dc:creator>

      <pubDate>Fri, 30 Apr 2021 10:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52776#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52776#comment:6/1619778219140718</guid>
      <description>&lt;p&gt;
Sorry I have re-uploaded the patch. The first one was merged with a previous ticket :/&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>52776-2.2.diff attached to Ticket #52776</title>
      
        <dc:creator>GeekPress</dc:creator>

      <pubDate>Fri, 30 Apr 2021 10:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52776/52776-2.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52776/52776-2.2.diff/1619778160505090</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Log In &lt; Fixed.png attached to Ticket #52776</title>
      
        <dc:creator>GeekPress</dc:creator>

      <pubDate>Fri, 30 Apr 2021 10:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52776/Log%20In%20%3C%20Fixed.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52776/Log%20In%20%3C%20Fixed.png/1619777779155158</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>52776.diff attached to Ticket #52776</title>
      
        <dc:creator>GeekPress</dc:creator>

      <pubDate>Fri, 30 Apr 2021 10:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52776/52776.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52776/52776.diff/1619777746908663</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52776 (Wrap long site title on login screen) updated</title>
      
        <dc:creator>GeekPress</dc:creator>

      <pubDate>Fri, 30 Apr 2021 10:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52776#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52776#comment:5/1619777705475605</guid>
      <description>&lt;p&gt;
I have attached a patch. It will result like on the screenshot shared on attachment too.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 01:52:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:171</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:171/1619747577887878</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
I don't know if WebP handles this in a different fashion that might make it easier.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@mikeschroder looks like the handling would have to be similar for WebP, ie splitting into frames, going thru each frame, resizing, then combining and output. Leaving that off for now since it is complicated and not part of the original scope.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I had one other question for you: the patch adds quite a bit of image handling code that only kicks in when the image object passed in not an instance of &lt;code&gt;WP_Image_Editor&lt;/code&gt;. Do you know if this is all legacy code, or are their situations/user flows where these code paths would still be used?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ie. this check in stream_image: &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/2b7cd8d4f3ae296b24089fbd53d360a4dbe30cee/src/wp-admin/includes/image-edit.php#L267"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/2b7cd8d4f3ae296b24089fbd53d360a4dbe30cee/src/wp-admin/includes/image-edit.php#L267&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
and this one in save_image: &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/2b7cd8d4f3ae296b24089fbd53d360a4dbe30cee/src/wp-admin/includes/image-edit.php#L333"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/2b7cd8d4f3ae296b24089fbd53d360a4dbe30cee/src/wp-admin/includes/image-edit.php#L333&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 30 Apr 2021 01:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:170</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:170/1619747139332470</guid>
      <description>&lt;p&gt;
Hey @blobfolio - great, thanks for the links which are a little more detailed than what I linked in the doc block. Overall this feels ready for merge, excited to get it committed and shared for wider testing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53109 (wp_insert_user should return a WP_Error when passing a too long ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 22:55:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53109#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53109#comment:4/1619736935266849</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53109#comment:3" title="Comment 3"&gt;audrasjb&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe it's more related to the fact that &lt;code&gt;display_name&lt;/code&gt; is based on &lt;code&gt;first_name&lt;/code&gt;/&lt;code&gt;last_name&lt;/code&gt; metadata.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, good point.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For the moment, I wasn't able to find where this 250 char limit is set. @SergeyBiryukov do you have any clue?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it's in the &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.1/src/wp-admin/includes/schema.php?marks=201,219#L189"&gt;database schema&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.1/src/wp-admin/includes/schema.php#L189" title="Download"&gt;​&lt;/a&gt;: &lt;code&gt;display_name varchar(250) NOT NULL default ''&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52949 (All available nav menu locations checked by default when creating a ...) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 29 Apr 2021 22:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52949#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52949#comment:18/1619736605219305</guid>
      <description>&lt;p&gt;
I re-tested the patch &lt;code&gt;52949.3.diff&lt;/code&gt; solves the issue on my side.&lt;br /&gt;
Pinging @SergeyBiryukov for double check.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53115 (Twenty Twenty: number inputs have too much padding) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Thu, 29 Apr 2021 22:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53115#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53115#comment:2/1619734254774170</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Except for a few random times, I have this problem in Firefox 88 (Windows 10 Home 20H2) when there is padding on the number input. However, I can use the increment buttons in Chromium-based browsers: Chrome, Edge, Opera, Vivaldi.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If this is a Firefox bug, it &lt;strong&gt;might&lt;/strong&gt; be worth considering &lt;code&gt;input[type="number"] {-moz-appearance: textfield}&lt;/code&gt; to hide those buttons so no one tries using them unsuccessfully. Using the arrow keys still works.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;(Regarding the unrelated issue about the input width, WooCommerce already plans to &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/29264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;make that selector more specific&lt;/a&gt;.)&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53070 (Establish a Core CSS deprecation path) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 21:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53070#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53070#comment:8/1619731892628570</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by danfarrow. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619731890026900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49999 (Iterating on Admin Color Schemes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 21:20:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49999#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49999#comment:129/1619731258525168</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by danfarrow. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619731256015200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53070 (Establish a Core CSS deprecation path) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 21:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53070#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53070#comment:7/1619730267557218</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by danfarrow. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619730265497900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49999 (Iterating on Admin Color Schemes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 21:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49999#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49999#comment:128/1619730267526400</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by danfarrow. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619730265497900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49582 (wp-admin CSS audit) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 21:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49582#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49582#comment:47/1619730267491078</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-css by danfarrow. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1619730265497900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52163 (Updating jQuery UI for jQuery 3.x) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52163#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52163#comment:9/1619729528178048</guid>
      <description>&lt;p&gt;
We're waiting on the next jQuery UI release here, which should land before beta, but we'll need to reassess when the release is ready if we are comfortable including it in 5.8 or not.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As it stands, since the repository for the next version is still changing, I don't think it's reasonable to build from source on our own at this time, when we can make do with one more release of jQuery Migrate being enabled by default. Although this puts us in the same situation we were previously of pushing it ahead of us, there's a more definitive plan at least now of turning it off as soon as the next jQuery UI is available, which makes me more comfortable pushing it one final time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If anyone on the JavaScript focus area have thoughts on this, I'll happily bow to their expertise in the field though, these are just my immediate thoughts on it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53114 (Update PHPMailer to 6.4.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53114#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53114#comment:3/1619728274289489</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50800" title="External Libraries: Upgrade PHPMailer to version 6.4.1.
Release ..."&gt;50800&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
External Libraries: Upgrade PHPMailer to version 6.4.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Release notes: &lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a full list of changes in this update, see the PHPMailer GitHub:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ayeshrajans.&lt;br /&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50799" title="External Libraries: Upgrade PHPMailer to version 6.4.1.
Release ..."&gt;[50799]&lt;/a&gt; to the 5.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53114" title="#53114: defect (bug): Update PHPMailer to 6.4.1 (closed: fixed)"&gt;#53114&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50800]: External Libraries: Upgrade PHPMailer to version 6.4.1.  Release ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50800</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50800/1619728273316678</guid>
      <description>&lt;p&gt;
External Libraries: Upgrade PHPMailer to version 6.4.1.
&lt;/p&gt;
&lt;p&gt;
Release notes: &lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For a full list of changes in this update, see the PHPMailer GitHub:
&lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Props ayeshrajans.
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50799" title="External Libraries: Upgrade PHPMailer to version 6.4.1.
Release ..."&gt;[50799]&lt;/a&gt; to the 5.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53114" title="#53114: defect (bug): Update PHPMailer to 6.4.1 (closed: fixed)"&gt;#53114&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53114 (Update PHPMailer to 6.4.1) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53114#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53114#comment:2/1619728141524050</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50799" title="External Libraries: Upgrade PHPMailer to version 6.4.1.
Release ..."&gt;50799&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
External Libraries: Upgrade PHPMailer to version 6.4.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Release notes: &lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a full list of changes in this update, see the PHPMailer GitHub:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ayeshrajans.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53114" title="#53114: defect (bug): Update PHPMailer to 6.4.1 (closed: fixed)"&gt;#53114&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [50799]: External Libraries: Upgrade PHPMailer to version 6.4.1.  Release ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50799</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50799/1619728140589752</guid>
      <description>&lt;p&gt;
External Libraries: Upgrade PHPMailer to version 6.4.1.
&lt;/p&gt;
&lt;p&gt;
Release notes: &lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/releases/tag/v6.4.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For a full list of changes in this update, see the PHPMailer GitHub:
&lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Props ayeshrajans.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53114" title="#53114: defect (bug): Update PHPMailer to 6.4.1 (closed: fixed)"&gt;#53114&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53115 (Twenty Twenty: number inputs have too much padding) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53115#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53115#comment:1/1619727490973027</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28020 (get_userdata and wp_get_current_user do not share WP_User instance) updated</title>
      
        <dc:creator>hellofromTonya</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28020#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28020#comment:25/1619726939088697</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Manual Testing&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;h3 id="StepstoReproduceandmanuallytest:"&gt;Steps to Reproduce and manually test:&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;Added &lt;a class="ext-link" href="https://gist.github.com/hellofromtonya/0845229fa9b7c26668cd2738e4150abd"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this testing script file&lt;/a&gt; to the &lt;code&gt;wp-content/mu-plugins&lt;/code&gt; folder
&lt;/li&gt;&lt;li&gt;Logged into the test site as an admin
&lt;/li&gt;&lt;li&gt;Created a test user and set access to Subscriber
&lt;/li&gt;&lt;li&gt;Viewed the site on the frontend to capture the results from the testing script
&lt;/li&gt;&lt;/ol&gt;&lt;h3 id="Reproduceoriginalproblem"&gt;Reproduce original problem&lt;/h3&gt;
&lt;p&gt;
Was able to reproduce the problem. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Results: 3 different objects for 1 user ❌&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Current user =&amp;gt; you
Current user ID is: 1
Has admin rights? 👍
Object source	        Object ID
get_user_by()	           832
$GLOBALS['current_user']   540
Changing to a different user
Current user ID is: 2
Has admin rights? 👎
Object source	         Object ID
get_user_by()	            307
$GLOBALS['current_user'].   833
get_userdata()	            831
Changing different user to be an admin
Current user ID is: 2
Has admin rights? 👎
Object source	           Object ID
get_user_by()	            307
$GLOBALS['current_user']    833
get_userdata()	            831
&lt;/pre&gt;&lt;p&gt;
Notice the object IDs are different, i.e. via &lt;a class="ext-link" href="https://www.php.net/manual/en/function.spl-object-id.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;spl_object_id&lt;/a&gt; for the same user when getting from &lt;code&gt;get_user_user_by()&lt;/code&gt;, &lt;code&gt;get_userdata()&lt;/code&gt;, and the global &lt;code&gt;$GLOBALS['current_user']&lt;/code&gt;. One user but 3 different objects.&lt;br /&gt;
&lt;/p&gt;
&lt;h3 id="Testingwiththefixapplied"&gt;Testing with the fix applied&lt;/h3&gt;
&lt;p&gt;
Applied the fix and refreshed the test site. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Results: 1 object per user. ✅&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Current user =&amp;gt; you
Current user ID is: 1
Has admin rights? 👍
Object source	        Object ID
get_user_by()	           540
$GLOBALS['current_user']   540
Changing to a different user
Current user ID is: 2
Has admin rights? 👎
Object source	         Object ID
get_user_by()	            829
$GLOBALS['current_user']    829
get_userdata()	            829
Changing different user to be an admin
Current user ID is: 2
Has admin rights? 👍
Object source	           Object ID
get_user_by()	            829
$GLOBALS['current_user']    829
get_userdata()	            829
&lt;/pre&gt;&lt;h3 id="Observations"&gt;Observations&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Can reproduce the problem
&lt;/li&gt;&lt;li&gt;Changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50790" title="Users: Share current user instance across functions.
Share the ..."&gt;[50790]&lt;/a&gt; fixes it
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53115 (Twenty Twenty: number inputs have too much padding) created</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Thu, 29 Apr 2021 20:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53115/1619726629536375</guid>
      <description>&lt;p&gt;
The number input has so much padding that the browser's up/down buttons are not clickable. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With padding, the cursor never turns into a pointer cursor&lt;br /&gt;
&lt;a class="ext-link" href="https://share.getcloudapp.com/2Nuwpo4W"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://share.getcloudapp.com/2Nuwpo4W&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With padding removed, the cursor turns into a pointer and the up/down buttons are clickable&lt;br /&gt;
&lt;a class="ext-link" href="https://share.getcloudapp.com/7KuPWNDO"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://share.getcloudapp.com/7KuPWNDO&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note this gif is using WooCommerce.. which is applying a width to the input&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;.single-product form.cart input {
    width: 5em;
}
&lt;/pre&gt;&lt;p&gt;
However, tweaking the width doesn't seem to have an impact one way or the other. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #41974,​40775 batch updated</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41974%2C40775</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41974%2C40775/1619726273611891</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41974" title="#41974: defect (bug): Use consistent translator comments for strings with placeholders (closed: fixed)"&gt;#41974&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems to have been fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41640" title="I18N: Use a consistent pattern for translator comments for ..."&gt;[41640]&lt;/a&gt; on a completed milestone. Thanks for the ticket and patch @rabmalin.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #33993 (Add Links for additional props on about.php after updating.) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:55:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33993#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33993#comment:5/1619726132573374</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33993#comment:4" title="Comment 4"&gt;marybaum&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
maybe a callout graphic on the release post?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think including any information in a graphic should be avoided whenever possible. It's difficult to make a graphic with lots of information accessible. And once the graphic is released, it cannot easily be changed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think I'd much rather see some statistics get added to the WP.org response for a release (&lt;a class="ext-link" href="https://api.wordpress.org/core/credits/1.1/?version=5.7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://api.wordpress.org/core/credits/1.1/?version=5.7&lt;/a&gt;), but I can't speak to the feasibility of that. This would also make the statistics publicly available for anyone to use.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53111 (Issue with centered images when using Gutenberg Plugin und theme ...) updated</title>
      
        <dc:creator>hage</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53111#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53111#comment:3/1619725574932293</guid>
      <description>&lt;p&gt;
Hi @sabernhardt &lt;br /&gt;
thanks a lot - yes, feel free to move the report to github.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53111 (Issue with centered images when using Gutenberg Plugin und theme ...) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53111#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53111#comment:2/1619725205470538</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @hage and thanks for the report!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The Gutenberg plugin recently changed the image block margin from only the bottom to all directions:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;.wp-block-image {
    margin: 0 0 1em;
}
&lt;/pre&gt;&lt;p&gt;
Twenty Twenty-One has styles to override the zero side margins, but Twenty Twenty does not (perhaps similar themes would have the same problem).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We can move the report to GitHub if it's not there already.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #46657 (Show site icon in My Sites admin menu) updated</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46657#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46657#comment:9/1619724771025724</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a nice improvement to have. Moving it to the next milestone.&lt;br /&gt;
Also, I'm unable to apply the patch, it needs refresh.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39684 (Improve UI of Activate button in Add plugins page) closed</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:16:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39684#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39684#comment:7/1619723772906757</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #50433 (Twenty Twenty: Hide extraneous elements in print.css) updated</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50433#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50433#comment:3/1619723662661433</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45785 (Update Underscore to the latest version) closed</title>
      
        <dc:creator>Hareesh Pillai</dc:creator>

      <pubDate>Thu, 29 Apr 2021 19:11:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45785#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45785#comment:27/1619723474912054</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53113 (class-walker-comment.php has call to remove_filter with incorrect ...) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Thu, 29 Apr 2021 18:46:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53113#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53113#comment:5/1619721976880890</guid>
      <description>&lt;p&gt;
As @diddledan mentions, I think the &lt;code&gt;add_filter&lt;/code&gt; is correct, as it's passing 2 params to &lt;code&gt;filter_comment_text&lt;/code&gt;.  This ticket deals with removing a filter, which doesn't care about the param count.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28474 (WordPress destroys animation in animated GIF when it resizes) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 29 Apr 2021 18:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28474#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28474#comment:45/1619721634021616</guid>
      <description>&lt;p&gt;
I came across this ticket when working on support for WebP in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35725" title="#35725: enhancement: Add WebP support. (closed: fixed)"&gt;#35725&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Although adding proper support for resizing GIF images when uploaded - when the user has Imagick enabled - feels like a worthwhile goal. However, GIF images have some drawbacks - particularly their performance/file size. Best practice suggests we should try replacing uploaded GIFs with videos instead. Reference: &lt;a class="ext-link" href="https://web.dev/replace-gifs-with-videos/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://web.dev/replace-gifs-with-videos/&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This will result in a much smaller file size, with all the key characteristics of a GIF: &lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;They play automatically.
&lt;/li&gt;&lt;li&gt;They loop continuously (usually, but it is possible to prevent looping).
&lt;/li&gt;&lt;li&gt;They're silent.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53090 (Admin color schemes don't work in RTL) updated</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 29 Apr 2021 18:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53090#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53090#comment:6/1619720672833123</guid>
      <description>&lt;p&gt;
The root of the problem here is that Page Optimize hoists the color CSS file up above the rest of the CSS, but it's intended to override the other CSS. When it's loaded early, the default colors end up overriding the selected color scheme. You can see a similar issue with Page Optimize + non-RTL sites in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.11.29%20PM.png" title="Attachment 'Screen Shot 2021-04-29 at 2.11.29 PM.png' in Ticket #53090"&gt;Screen Shot 2021-04-29 at 2.11.29 PM.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.11.29%20PM.png" title="Download"&gt;​&lt;/a&gt; The plugin should probably exclude this file from its concatenation.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was also curious if not using wp_style_add_data( 'colors', 'rtl', 'replace' ) was intentional.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm looking into this as a write, and so the patch I uploaded is wrong 😅&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This comes from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26780" title="Admin color schemes: Manually handle RTL and minified versions of the ..."&gt;r26780&lt;/a&gt;/&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26316" title="#26316: defect (bug): Colour Scheme picker doesn't switch with RTL (closed: fixed)"&gt;#26316&lt;/a&gt; - when on the profile page in an RTL language, click through the color scheme live previews, with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53090/53090.diff" title="Attachment '53090.diff' in Ticket #53090"&gt;53090.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53090/53090.diff" title="Download"&gt;​&lt;/a&gt; it loads the non-RTL stylesheet. This is most obvious in the admin menu &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.19.35%20PM.png" title="Attachment 'Screen Shot 2021-04-29 at 2.19.35 PM.png' in Ticket #53090"&gt;Screen Shot 2021-04-29 at 2.19.35 PM.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.19.35%20PM.png" title="Download"&gt;​&lt;/a&gt;. It uses the URL in &lt;code&gt;$_wp_admin_css_colors&lt;/code&gt;, so that needs to be RTL-aware.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For record-keeping, this is the logic behind &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53090/53090.2.diff" title="Attachment '53090.2.diff' in Ticket #53090"&gt;53090.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53090/53090.2.diff" title="Download"&gt;​&lt;/a&gt; - but we probably shouldn't make that change.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, while this fixes the issue when the plugin is active when using an RTL language, it causes the color schemes to not load when the plugin is inactive and using an RTL language.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When it's automatically RTL'd with &lt;code&gt;add_data&lt;/code&gt;, the style's handle changes to &lt;code&gt;colors-rtl&lt;/code&gt;, and then the URL replacement doesn't happen. I updated the patch with a check for &lt;code&gt;colors-rtl&lt;/code&gt;, so now it will work in both cases.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2021-04-29 at 2.19.35 PM.png attached to Ticket #53090</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 29 Apr 2021 18:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.19.35%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.19.35%20PM.png/1619720481880986</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>53090.2.diff attached to Ticket #53090</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 29 Apr 2021 18:12:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53090/53090.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53090/53090.2.diff/1619719970635557</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2021-04-29 at 2.11.29 PM.png attached to Ticket #53090</title>
      
        <dc:creator>ryelle</dc:creator>

      <pubDate>Thu, 29 Apr 2021 18:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.11.29%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53090/Screen%20Shot%202021-04-29%20at%202.11.29%20PM.png/1619719912000462</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53113 (class-walker-comment.php has call to remove_filter with incorrect ...) updated</title>
      
        <dc:creator>diddledan</dc:creator>

      <pubDate>Thu, 29 Apr 2021 17:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53113#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53113#comment:4/1619716981758446</guid>
      <description>&lt;p&gt;
@mukesh27 that &lt;code&gt;add_filter&lt;/code&gt; call looks correct to me. Why do you think we need to drop the priority?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53113 (class-walker-comment.php has call to remove_filter with incorrect ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 29 Apr 2021 16:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53113#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53113#comment:3/1619714833028905</guid>
      <description>&lt;p&gt;
Hi there!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can you please update PR and do the below change also?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-comment.php#L185"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/class-walker-comment.php#L185&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter( 'comment_text', array( $this, 'filter_comment_text' ), 40, 2 );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replace to&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;add_filter( 'comment_text', array( $this, 'filter_comment_text' ), 40 );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 29 Apr 2021 16:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:169</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:169/1619712530195615</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35725#comment:167" title="Comment 167"&gt;adamsilverstein&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@blobfolio - @flixos90 on the PR asked about the two sections of code that extract WebP info from the file directly (&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1137/files#r617747316"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/1137/files#r617747316&lt;/a&gt; &amp;amp; &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1137/files#r617745292"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/1137/files#r617745292&lt;/a&gt;). I'd like to add a doc block explaining/referencing the approach. Can you provide some more details? Otherwise I'll go looking, thought I'd ask first though.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hey @adamsilverstein,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This page lays out the RIFF container format specs: &lt;a class="ext-link" href="https://developers.google.com/speed/webp/docs/riff_container"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developers.google.com/speed/webp/docs/riff_container&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Of particular relevance are the &lt;a class="ext-link" href="https://developers.google.com/speed/webp/docs/riff_container#webp_file_header"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developers.google.com/speed/webp/docs/riff_container#webp_file_header&lt;/a&gt; (file signature and subtype differentiation) and &lt;a class="ext-link" href="https://developers.google.com/speed/webp/docs/riff_container#extended_file_format"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developers.google.com/speed/webp/docs/riff_container#extended_file_format&lt;/a&gt; sections (width, height, etc.).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53090 (Admin color schemes don't work in RTL) updated</title>
      
        <dc:creator>tomjcafferkey</dc:creator>

      <pubDate>Thu, 29 Apr 2021 16:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53090#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53090#comment:5/1619712387576545</guid>
      <description>&lt;p&gt;
Thank you @desrosj for revisiting and fixing this! :)&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, while this fixes the issue when the plugin is active when using an RTL language, it causes the color schemes to not load when the plugin is inactive and using an RTL language.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is interesting, and also something I might investigate myself if you haven't already figured it out by then. However if you do, would you mind updating here so I can learn? Thank you!&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was also curious if not using wp_style_add_data( 'colors', 'rtl', 'replace' ) was intentional.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Same goes for this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks again!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52610 (Consider removing many of the default test group exclusions) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52610#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52610#comment:6/1619711090630147</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ah yes, the ms-files tests needs to remain separate because the constants in ms_upload_constants() are set based on the value of the ms_files_rewriting option, which is itself set in the @group ms-files tests. Removing ms-files from the excluded groups causes many failures.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just a heads-up: you can declare multiple &lt;code&gt;testsuite&lt;/code&gt; entries in &lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt;. If the &lt;code&gt;ms-files&lt;/code&gt; group gets set as a separate testsuite, it will probably not need a separate run and prevent the errors you are seeing. At least worth giving it a try. I remember fixing a similar situation not too long ago this way.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:37:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:5/1619710651684670</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53090 (Admin color schemes don't work in RTL) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53090#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53090#comment:4/1619710600134451</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @tomjcafferkey. I looked into this more, and you are correct! Thanks for being patient and further explaining.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The admin color scheme stylesheets are an outlier in that they are registered with &lt;code&gt;true&lt;/code&gt; as their source, and the actual file URL is constructed later in &lt;code&gt;wp_style_loader_src()&lt;/code&gt; via the &lt;code&gt;style_loader_src&lt;/code&gt; filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've attached &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53090/53090.diff" title="Attachment '53090.diff' in Ticket #53090"&gt;53090.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53090/53090.diff" title="Download"&gt;​&lt;/a&gt;, which &lt;em&gt;should&lt;/em&gt; fix the issue. However, while this fixes the issue when the plugin is active when using an RTL language, it causes the color schemes to not load when the plugin is inactive and using an RTL language.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason seems to have something to do with the code in &lt;code&gt;wp_style_loader_src()&lt;/code&gt;. The URL being returned is &lt;code&gt;'http://1?ver=5.8-alpha-50427-src&lt;/code&gt;. The &lt;code&gt;1&lt;/code&gt; comes from the value of &lt;code&gt;$src&lt;/code&gt; passed. But I haven't figured out why this happens.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@ryelle I was also curious if not using &lt;code&gt;wp_style_add_data( 'colors', 'rtl', 'replace' )&lt;/code&gt; was intentional.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Moving to 5.7.2, as this would be good to get fixed in the next minor release, if ready.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53114 (Update PHPMailer to 6.4.1) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53114#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53114#comment:1/1619710214201925</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>53114.patch attached to Ticket #53114</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:16:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53114/53114.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53114/53114.patch/1619709375130174</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53114 (Update PHPMailer to 6.4.1) created</title>
      
        <dc:creator>ayeshrajans</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:15:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53114/1619709356598851</guid>
      <description>&lt;p&gt;
PHPMailer 6.4.1 is released, and it is a security release.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Diff: &lt;a class="ext-link" href="https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/PHPMailer/PHPMailer/compare/v6.4.0...v6.4.1&lt;/a&gt;&lt;br /&gt;
The patch contains the same diff, adjusted for three hunks to compensate for PHPCS false positives.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53113 (class-walker-comment.php has call to remove_filter with incorrect ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53113#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53113#comment:2/1619708969207797</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good catch! Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47887" title="Comments: Ensure that unmoderated comments won't be search indexed.
 ..."&gt;[47887]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53113 (class-walker-comment.php has call to remove_filter with incorrect ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53113#comment:1/1619708751415447</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1213"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1213&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/diddledan"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;diddledan&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Nit: &lt;code&gt;remove_filter&lt;/code&gt; takes 3 parameters with 4 given. This might cause a PHP Warning message.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53113"&gt;https://core.trac.wordpress.org/ticket/53113&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53113 (class-walker-comment.php has call to remove_filter with incorrect ...) created</title>
      
        <dc:creator>diddledan</dc:creator>

      <pubDate>Thu, 29 Apr 2021 15:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53113/1619708609225397</guid>
      <description>&lt;p&gt;
Line 203:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;remove_filter( 'comment_text', array( $this, 'filter_comment_text' ), 40, 2 );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Should be:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;remove_filter( 'comment_text', array( $this, 'filter_comment_text' ), 40 );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
(github PR will be attached)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>53090.diff attached to Ticket #53090</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 29 Apr 2021 14:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53090/53090.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53090/53090.diff/1619708360903038</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52869 (Twenty Twenty-One: Text isn't vertically centered to the checkbox) updated</title>
      
        <dc:creator>ooker</dc:creator>

      <pubDate>Thu, 29 Apr 2021 14:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52869#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52869#comment:3/1619707451918388</guid>
      <description>&lt;p&gt;
It turns out that only checkboxes produced by the plugin &lt;em&gt;Formidable Form&lt;/em&gt; has this problem. But the problem is forms from that plugin can inherit styles from the theme by disable custom styling. It seems that other themes don't have this problem (or else the plugin author should have fixed it).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Anyhow, would there be any problem to add &lt;code&gt;vertical-align: middle;&lt;/code&gt; into the line 1344? It may fixed future bugs as well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 29 Apr 2021 14:38:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:168/1619707122795911</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35725/35725.24.diff" title="Attachment '35725.24.diff' in Ticket #35725"&gt;35725.24.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35725/35725.24.diff" title="Download"&gt;​&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Address feedback from PR.
&lt;/li&gt;&lt;li&gt;Add documentation/references for WebP file detection &amp;amp; parsing.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35725.24.diff attached to Ticket #35725</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 29 Apr 2021 14:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35725/35725.24.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35725/35725.24.diff/1619707054314468</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52909 (git repo README.md should include instructions to install svn) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 29 Apr 2021 14:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52909#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52909#comment:6/1619706141380318</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/52909#comment:2" title="Comment 2"&gt;czapla&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This command should be instructing Docker to execute the command within the local Docker development environment, which does have SVN installed.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh, in that case, I believe that the whole command should be passed to the shell with &lt;code&gt;sh -c&lt;/code&gt; or the second command should be prefaced with &lt;code&gt;docker-compose exec -T &amp;lt;container&amp;gt;&lt;/code&gt; like: &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is correct. &lt;code&gt;execSync( 'docker-compose exec -T php commandA &amp;amp;&amp;amp; commandB' )&lt;/code&gt; will effectively run two commands, &lt;code&gt;docker-compose exec -T commandA&lt;/code&gt; and &lt;code&gt;commandB&lt;/code&gt;, because the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is interpreted as a command separator by the underlying shell, and never gets passed to &lt;code&gt;docker-compose&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also it seems like this may not work in Windows if it is supposed to (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is a Linux-ism). A good way to restructure this could be as follows (needs testing):&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;execSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;compose&lt;/span&gt; &lt;span class="nx"&gt;exec&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;rf&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;test_plugin_directory&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;stdio&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'inherit'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;execSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nx"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;compose&lt;/span&gt; &lt;span class="nx"&gt;exec&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="nx"&gt;svn&lt;/span&gt; &lt;span class="nx"&gt;checkout&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;r&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;WP_IMPORTER_REVISION&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//plugins.svn.wordpress.org/wordpress-importer/trunk/ ${test_plugin_directory}`, { stdio: 'inherit' } );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50105 (Remove infinite scrolling behavior from the Media grid) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 14:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50105#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50105#comment:66/1619705708456561</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1619705706004400"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>pushevs</dc:creator>

      <pubDate>Thu, 29 Apr 2021 13:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:56/1619704253528383</guid>
      <description>&lt;p&gt;
Thanks, the new .htaccess file by Thomas works.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/JustThomas/141ebe0764d43188d4f2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/JustThomas/141ebe0764d43188d4f2&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 29 Apr 2021 13:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:167/1619703627897079</guid>
      <description>&lt;p&gt;
@blobfolio - @flixos90 on the PR asked about the two sections of code that extract WebP info from the file directly (&lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1137/files#r617747316"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/1137/files#r617747316&lt;/a&gt; &amp;amp; &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1137/files#r617745292"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/pull/1137/files#r617745292&lt;/a&gt;). I'd like to add a doc block explaining/referencing the approach. Can you provide some more details? Otherwise I'll go looking, thought I'd ask first though.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52991 (Editor: Update WordPress packages to use with WordPress 5.8) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 13:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52991#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52991#comment:29/1619703460567998</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by gziolo. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1619703458029600"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41672.2.diff attached to Ticket #41672</title>
      
        <dc:creator>bartj</dc:creator>

      <pubDate>Thu, 29 Apr 2021 12:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41672/41672.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41672/41672.2.diff/1619701119374872</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41672 (REST create user: existing_user_login is returned before ...) updated</title>
      
        <dc:creator>bartj</dc:creator>

      <pubDate>Thu, 29 Apr 2021 12:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41672#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41672#comment:13/1619701097363909</guid>
      <description>&lt;p&gt;
I've looked into this and it appears, that nowadays REST API returns the following messages in correct order: firstly it informs if email is duplicated, then login.&lt;br /&gt;
Despite that, I agree, it would be better to return 409 in HTTP response than Server Error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've refreshed patch, adding only more meaningful response and tests for that.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27377 (profile_update action with old_user_data should include the ...) updated</title>
      
        <dc:creator>joostdekeijzer</dc:creator>

      <pubDate>Thu, 29 Apr 2021 12:58:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27377#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27377#comment:5/1619701085287228</guid>
      <description>&lt;p&gt;
Agreed, lots of things changed since opening this ticket. Thanks for the feedback.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wide-aligned.png attached to Ticket #53112</title>
      
        <dc:creator>devnel</dc:creator>

      <pubDate>Thu, 29 Apr 2021 12:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53112/wide-aligned.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53112/wide-aligned.png/1619698499172579</guid>
      <description>&lt;p&gt;
Styling missing with wide-align set
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>no-alignment.png attached to Ticket #53112</title>
      
        <dc:creator>devnel</dc:creator>

      <pubDate>Thu, 29 Apr 2021 12:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53112/no-alignment.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53112/no-alignment.png/1619698478274990</guid>
      <description>&lt;p&gt;
Correct styling with no alignment set
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53112 (Twenty Nineteen - Pullquote block editor styling breaks with block ...) created</title>
      
        <dc:creator>devnel</dc:creator>

      <pubDate>Thu, 29 Apr 2021 12:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53112/1619698446028438</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce the behavior&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Activate Twenty Nineteen
&lt;/li&gt;&lt;li&gt;Add a pull-quote block to any page
&lt;/li&gt;&lt;li&gt;Apply "wide-align" or any other block alignment option
&lt;/li&gt;&lt;li&gt;See the issue
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;What I expected to happen&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The editor styling shows by default with the theme font styles (italic etc.) just like without alignment.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What actually happened&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The editor styling of the text in the block doesn't reflect the correct size and font-decoration. The styling is still displayed correctly on the front-end and without any alignment options active.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Tested with latest WordPress version installed and no plugins active.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:55/1619697105817470</guid>
      <description>&lt;p&gt;
@pushevs The patches for this issue won't fix existing sites. You have to manually update existing sites. See &lt;a href="https://core.trac.wordpress.org/ticket/20746#comment:51"&gt;https://core.trac.wordpress.org/ticket/20746#comment:51&lt;/a&gt; for the change you need to make on your site to address it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41950 (wp_insert_user() should accept a meta_input argument) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41950#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41950#comment:4/1619696690607324</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53111 (Issue with centered images when using Gutenberg Plugin und theme ...) updated</title>
      
        <dc:creator>hage</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:32:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53111#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53111#comment:1/1619695949286813</guid>
      <description>&lt;p&gt;
Please see here: &lt;a class="ext-link" href="https://de.wordpress.org/support/topic/ausrichtung-der-bild-bloecke-nach-gutenberg-update/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://de.wordpress.org/support/topic/ausrichtung-der-bild-bloecke-nach-gutenberg-update/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>twenty_twenty_without_gutenberg_activated.jpg attached to Ticket #53111</title>
      
        <dc:creator>hage</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:25:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53111/twenty_twenty_without_gutenberg_activated.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53111/twenty_twenty_without_gutenberg_activated.jpg/1619695527421136</guid>
      <description>&lt;p&gt;
Gutenberg deactivated
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52938 (Twenty Twenty-One: H1 is misplaced for a page set as blogpost container) updated</title>
      
        <dc:creator>Boniu91</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52938#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52938#comment:13/1619695444824739</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>twenty_twenty_gutenberg_image_issue.jpg attached to Ticket #53111</title>
      
        <dc:creator>hage</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53111/twenty_twenty_gutenberg_image_issue.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53111/twenty_twenty_gutenberg_image_issue.jpg/1619695434646855</guid>
      <description>&lt;p&gt;
Gutenberg activated
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #50866 (Media Uploader Blows Up File Sizes) updated</title>
      
        <dc:creator>Boniu91</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50866#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50866#comment:8/1619695408406426</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53111 (Issue with centered images when using Gutenberg Plugin und theme ...) created</title>
      
        <dc:creator>hage</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53111/1619695394406462</guid>
      <description>&lt;p&gt;
On a development environment we have noticed after a message in the German support forum that when activating the plugin Gutenberg (version 10.5.0) a post with centered images are no longer displayed correctly. This also applies to videos. In both cases the images are shown on the left margin.&lt;br /&gt;
&lt;a class="ext-link" href="https://i.imgur.com/EvArodc.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://i.imgur.com/EvArodc.png&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53110 (Pass `$userdata` to the actions and filters in `wp_insert_user()`) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:21:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53110#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53110#comment:2/1619695298674477</guid>
      <description>&lt;p&gt;
+1 for this proposal. Just figured it out while I was working on &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/53109" title="#53109: defect (bug): wp_insert_user should return a WP_Error when passing a too long ... (reviewing)"&gt;#53109&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The PR looks good to me :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50866 (Media Uploader Blows Up File Sizes) updated</title>
      
        <dc:creator>Boniu91</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:10:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50866#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50866#comment:7/1619694627123729</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53110 (Pass `$userdata` to the actions and filters in `wp_insert_user()`) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53110#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53110#comment:1/1619694394518855</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1212"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1212&lt;/a&gt; on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress/wordpress-develop&lt;/a&gt; by &lt;a class="ext-link" href="https://github.com/johnbillion"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;johnbillion&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
Trac ticket: &lt;a href="https://core.trac.wordpress.org/ticket/53110"&gt;https://core.trac.wordpress.org/ticket/53110&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53110 (Pass `$userdata` to the actions and filters in `wp_insert_user()`) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 29 Apr 2021 11:03:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53110/1619694208657333</guid>
      <description>&lt;p&gt;
There are several actions and filters inside &lt;code&gt;wp_insert_user()&lt;/code&gt; which would benefit from being able to access the raw &lt;code&gt;$userdata&lt;/code&gt; array that's passed into the function.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One use case is extending the &lt;code&gt;wp user import-csv&lt;/code&gt; command in WP-CLI. This command is a wrapper for &lt;code&gt;wp_insert_user()&lt;/code&gt; but it's not possible to provide custom user meta fields because there's nowhere inside &lt;code&gt;wp_insert_user()&lt;/code&gt; where a plugin can access the raw data array in order to add the user meta.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43697 (Add theme update counter in admin theme menu item) updated</title>
      
        <dc:creator>Boniu91</dc:creator>

      <pubDate>Thu, 29 Apr 2021 10:58:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43697#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43697#comment:10/1619693898656900</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53109 (wp_insert_user should return a WP_Error when passing a too long ...) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 29 Apr 2021 10:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53109#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53109#comment:3/1619693645577420</guid>
      <description>&lt;p&gt;
I found something interesting: it looks like the limit is at 250 character. Also, I'm not sure it's really related to the &lt;code&gt;first_name&lt;/code&gt; or &lt;code&gt;last_name&lt;/code&gt; metadata.&lt;br /&gt;
I believe it's more related to the fact that &lt;code&gt;display_name&lt;/code&gt; is based on &lt;code&gt;first_name&lt;/code&gt;/&lt;code&gt;last_name&lt;/code&gt; metadata.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For the moment, I wasn't able to find where this 250 char limit is set. @SergeyBiryukov do you have any clue?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27377 (profile_update action with old_user_data should include the ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 29 Apr 2021 10:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27377#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27377#comment:4/1619693297573609</guid>
      <description>worksforme: &lt;p&gt;
Confirmed. These fields aren't public properties on the &lt;code&gt;WP_User&lt;/code&gt; object in &lt;code&gt;$old_user_data&lt;/code&gt; but they are returned if you request the properties.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ref: &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/30ff995eb0aa2660ef4b08b9e3c5f7b0126c702b/src/wp-includes/class-wp-user.php#L15-L36"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/wordpress-develop/blob/30ff995eb0aa2660ef4b08b9e3c5f7b0126c702b/src/wp-includes/class-wp-user.php#L15-L36&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Tickets #39829,​40545 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 29 Apr 2021 10:33:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39829%2C40545</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39829%2C40545/1619692433443432</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39829" title="#39829: enhancement: Missing Filter before user is created within &amp;#34;wp_insert_user&amp;#34; function (closed: duplicate)"&gt;#39829&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49639 (Add a filter on wp_insert_user function regarding $user_pass) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 29 Apr 2021 10:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49639#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49639#comment:2/1619691882216456</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52920 (Editor: Abstract block editor configuration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 29 Apr 2021 10:10:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52920#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52920#comment:26/1619691039122999</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50798" title="Editor: Fix typo in image default size setting
Related change in ..."&gt;50798&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Fix typo in image default size setting&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Related change in Gutneberg: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31324"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31324&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mamaduka.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52920" title="#52920: enhancement: Editor: Abstract block editor configuration (closed: fixed)"&gt;#52920&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [50798]: Editor: Fix typo in image default size setting  Related change in ...</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 29 Apr 2021 10:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/50798</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/50798/1619691038169513</guid>
      <description>&lt;p&gt;
Editor: Fix typo in image default size setting
&lt;/p&gt;
&lt;p&gt;
Related change in Gutneberg: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/31324"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/31324&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Props mamaduka.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52920" title="#52920: enhancement: Editor: Abstract block editor configuration (closed: fixed)"&gt;#52920&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53109 (wp_insert_user should return a WP_Error when passing a too long ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 29 Apr 2021 09:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53109#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53109#comment:2/1619687881352188</guid>
      <description>&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like this was previously mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14290#comment:3" title="Comment 3 for #14290: defect (bug): register_new_user() can't handle WP_Error result from wp_create_user() (closed: fixed)"&gt;comment:3:ticket:14290&lt;/a&gt; but never addressed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A similar issue was resolved in WordPress 4.4 for &lt;code&gt;user_login&lt;/code&gt; and &lt;code&gt;user_nicename&lt;/code&gt; fields: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34218" title="Improve validation of `user_login` and `user_nicename` length.
The ..."&gt;[34218]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33793" title="#33793: defect (bug): Adding a user with a username 52 characters or longer fails, but ... (closed: fixed)"&gt;#33793&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33820" title="#33820: defect (bug): Fail to create a user whose username is longer than 50 (closed: duplicate)"&gt;#33820&lt;/a&gt;. Looks like we need the same for &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53109 (wp_insert_user should return a WP_Error when passing a too long ...) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 29 Apr 2021 09:13:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53109#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53109#comment:1/1619687590070198</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi, welcome to WordPress Trac @superpuperlesha and thank you for the ticket,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at a glance, wp_insert_user should return WP_Error or create the user without this parameter. Self-assigning the ticket for further investigation.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53109 (wp_insert_user should return a WP_Error when passing a too long ...) created</title>
      
        <dc:creator>superpuperlesha</dc:creator>

      <pubDate>Thu, 29 Apr 2021 09:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53109/1619686881610833</guid>
      <description>&lt;p&gt;
When I call the wp_insert_user function to which I pass too long first_name, I do not get an error, but I get a 0-integer. Although the documentation says, either wp_error or integer-ok.&lt;br /&gt;
P.S. I create user with this function ..&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #17025 (wp_list_authors() is not filterable) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Thu, 29 Apr 2021 08:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17025#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17025#comment:33/1619686138755565</guid>
      <description>&lt;p&gt;
Usually this bump is done by the committer has you cannot know when the code will be approved.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17025 (wp_list_authors() is not filterable) updated</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Thu, 29 Apr 2021 07:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17025#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17025#comment:32/1619681090927141</guid>
      <description>&lt;p&gt;
@Mte90 &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
PR looks good. Just need to update version(@since) now to 5.8.0&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>pushevs</dc:creator>

      <pubDate>Thu, 29 Apr 2021 04:49:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:54/1619671764509881</guid>
      <description>&lt;p&gt;
Any news? I also have this problem.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40076 (Add Filter option Attached) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 29 Apr 2021 04:19:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40076#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40076#comment:9/1619669984108842</guid>
      <description>&lt;p&gt;
Thank you so much @antpb for considering my suggestion! :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I possible, please let me know what &lt;code&gt;refresh&lt;/code&gt; the patch requires so that I can make the changes and resubmit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regards&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53070 (Establish a Core CSS deprecation path) updated</title>
      
        <dc:creator>isabel_brison</dc:creator>

      <pubDate>Thu, 29 Apr 2021 03:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53070#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53070#comment:6/1619667040851180</guid>
      <description>&lt;p&gt;
I probably should have made it clearer in the description: CSS rules should only be deprecated when the selectors they are attached to are no longer used in Core. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If plugins want to continue using those classnames/ids and whatever CSS is attached to them, they have the option of enqueuing the deprecated.css file. By that point whatever UI the plugin is providing will have styling inconsistencies with Core anyway, so the best route for plugin authors is always to update their UI to use whatever new classes Core is using.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Does that answer your question, @audrasjb ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35725 (Add WebP support.) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 29 Apr 2021 03:14:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35725#comment:166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35725#comment:166/1619666059446053</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/adamsilverstein"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;adamsilverstein&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1137#issuecomment-828912371"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR #1137&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@felixarntz thanks for the review and feedback.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This also seems a bit odd to me. If we are using different quality values here, why don't we do the same for JPEG? I agree more research here would be worth doing.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We do use different quality settings for JPEG as well (for saving vs. edits) so not sure what you are referring to. l will double check, but this should match the jpeg behavior.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53108 (`get_theme_file_uri()` fails with query params) updated</title>
      
        <dc:creator>zulaica</dc:creator>

      <pubDate>Thu, 29 Apr 2021 02:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53108#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53108#comment:3/1619664242105136</guid>
      <description>&lt;p&gt;
I can also see the argument against fixing the unintended side effect, that &lt;code&gt;get_theme_file_uri ()&lt;/code&gt; should handle query params given that a query is part of a URI's syntax. I have no strong opinion either way, just trying to consider potential complications.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53108 (`get_theme_file_uri()` fails with query params) updated</title>
      
        <dc:creator>zulaica</dc:creator>

      <pubDate>Thu, 29 Apr 2021 02:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53108#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53108#comment:2/1619663159526164</guid>
      <description>&lt;p&gt;
I see! Okay, that all makes sense. I wasn't aware of &lt;code&gt;add_query_arg()&lt;/code&gt;, but that fits the bill perfectly. Thanks!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I agree that the unintended side effect should be fixed to better follow the intent of the function, but I'm concerned that some existing themes may wind up breaking as a result of relying on this side effect.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53108 (`get_theme_file_uri()` fails with query params) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 29 Apr 2021 01:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53108#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53108#comment:1/1619659524093404</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The functionality currently isn't designed to handle query arguments, it's intentionally to find a URI for a &lt;em&gt;file&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would say the expected use-case currently is something like this:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// preferably:
$uri = add_query_arg( 'id', '41142aba6c0214da8ec1', get_theme_file_uri( 'js/script.js' ) );
// will probably work most of the time, unless a plugin has filtered the URI to include query args:
$uri = get_theme_file_uri( 'js/script.js' ) . '?id=41142aba6c0214da8ec1';
&lt;/pre&gt;&lt;p&gt;
Marking this as an enhancement instead as a result, the fact that this works for parent themes is kind of an unexpected side effect of simply not checking to see if the file exists (ie. &lt;code&gt;get_theme_file_url( '404.js' )&lt;/code&gt; returns a URI even though the file doesn't exist).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53108 (`get_theme_file_uri()` fails with query params) created</title>
      
        <dc:creator>zulaica</dc:creator>

      <pubDate>Thu, 29 Apr 2021 01:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53108/1619659088073015</guid>
      <description>&lt;p&gt;
&lt;code&gt;get_theme_file_uri()&lt;/code&gt; fails to locate a file if it is supplied with any query params and incorrectly falls back to returning the parent theme's path to the file, including the supplied query params. This prevents the ability to use a bundler's versioning without adding complexity to registering scripts and styles. &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;get_theme_file_uri&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'/js/script.js?id=41142aba6c0214da8ec1'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Expected output:
// 'https://domain.com/wp-content/themes/ChildTheme/js/script.js?id=41142aba6c0214da8ec1'
&lt;/span&gt;
&lt;span class="c1"&gt;// Actual output:
// 'https://domain.com/wp-content/themes/ParentTheme/js/script.js?id=41142aba6c0214da8ec1'
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;file_exists()&lt;/code&gt; does not understand the query param when attempting to locate the file. One solution could be to use &lt;code&gt;parse_url()&lt;/code&gt; to determine the file path used in the condition:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="c1"&gt;// https://core.trac.wordpress.org/browser/tags/5.7.1/src/wp-includes/link-template.php#L4374
&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;file_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;get_stylesheet_directory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52842 (No way to adjust attributes in wp_resource_hints()) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 29 Apr 2021 00:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52842#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52842#comment:4/1619657590926924</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the reply.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You're right, the documentation could be improved so this ticket can stay open to do that. It looks like the docs weren't updated when the &lt;code&gt;$url&lt;/code&gt; parameter was changed to accept attributes rather than just the URL.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;@param array[] Array of resources to be hinted and their attributes {
	@item string $url URL to include in resource hints
	@item string $as  How the browser should treat the asset (CSS, JavaScript, etc)
	// etc, etc
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>