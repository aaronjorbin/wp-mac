<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #40361 (Improvements for wp-signup.php and wp-activate.php markup and CSS) updated</title>
      
        <dc:creator>allisonplus</dc:creator>

      <pubDate>Wed, 04 Apr 2018 23:58:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40361#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40361#comment:13/1522886329586515</guid>
      <description>&lt;p&gt;
I'm unable to replicate this on my end multi-site-wise so if someone else is able to, please feel free to transfer ownership.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 04 Apr 2018 23:42:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:26/1522885354588162</guid>
      <description>&lt;p&gt;
Looks good. I think &lt;code&gt;site URL&lt;/code&gt; in this message should say &lt;code&gt;website URL&lt;/code&gt; so it matches the phrase used for the &lt;code&gt;Website&lt;/code&gt; field in the comment form.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:45/1522881285854249</guid>
      <description>&lt;p&gt;
@bryomedia Well that is working on my site, as the posted plugin fixes the category-lookup. Instead of just looking at the last part of the URL, then it uses the entire URL to determine hierarchy.
&lt;/p&gt;
&lt;p&gt;
Have the following permalink logic:
&lt;/p&gt;
&lt;p&gt;
Custom structure: /article/%postname%.html
Category base: articles
Tag base:
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>bryomedia</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:44/1522880930239297</guid>
      <description>&lt;p&gt;
@snakefoot , that's correct. I have 2 categories with an identical slug, but which sit at different levels in the hierarchy. But when accessed, both query the same data even though one of them does not have any posts associated with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43694 (Chrome Lighthouse Audit - jQuery Vulnerabilities) created</title>
      
        <dc:creator>joellisenby</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43694</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43694/1522880534637200</guid>
      <description>&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/IhSOQBb.png"&gt;&lt;img src="https://i.imgur.com/IhSOQBb.png" alt="https://i.imgur.com/IhSOQBb.png" crossorigin="anonymous" title="https://i.imgur.com/IhSOQBb.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As you can see, with Google Chrome 65.0.3325.181 when running a Lighthouse (&lt;a class="ext-link" href="https://github.com/GoogleChrome/lighthouse"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/GoogleChrome/lighthouse&lt;/a&gt;) 2.8.0 audit, there is a new test which claims there is a vulnerability in the version of jQuery (jQuery@1.12.4) included with WordPress.
&lt;/p&gt;
&lt;pre class="wiki"&gt;Includes front-end JavaScript libraries with known security vulnerabilities.
Some third-party scripts may contain known security vulnerabilities  that are easily identified and exploited by attackers.
https://snyk.io/vuln/npm:jquery?lh@1.12.4
&lt;/pre&gt;&lt;p&gt;
Is this something to be concerned about and are there any plans to update the version of jQuery included with WordPress to one without the linked vulnerabilities?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 22:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:43/1522879285216377</guid>
      <description>&lt;p&gt;
@bryomedia I have uploaded the plugin that I'm using right now. Because the Wordpress GUI does not allow duplicate category-slugs, then you have to fix the slugs by editing the database directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>category-slug-hierarchy_v11.php.txt attached to Ticket #5034</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5034/category-slug-hierarchy_v11.php.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5034/category-slug-hierarchy_v11.php.txt/1522879156812779</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43693 (Add pre filter in count user function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43693#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43693#comment:1/1522878701891988</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>bryomedia</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:42/1522878636259838</guid>
      <description>&lt;p&gt;
Has there been any update, workaround or temporary way to reuse slugs under different parent terms? There's no alternative that I was able to find anywhere on the Internet. @snakefoot, the plugin doesn't seem to work? did you end up finding an alternative at all? Any help would be greatly appreciated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43642 (Gallery titles and labels erasing) updated</title>
      
        <dc:creator>antpb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43642#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43642#comment:2/1522878503532916</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @marcinmichno ! Thank you so much for submitting your first ticket! Feedback like yours is integral to the success of WordPress.
&lt;/p&gt;
&lt;p&gt;
I want to understand a little better what it is you are trying to accomplish with this issue. Is the desired goal to create a gallery without any titles or are you looking more to have the ability to bulk replace all titles and labels in a gallery?
&lt;/p&gt;
&lt;p&gt;
Any screenshots of your workflow would be super helpful in seeing the problem we're looking to solve here.
&lt;/p&gt;
&lt;p&gt;
I'm going to set the workflow status of this ticket to &lt;code&gt;reporter-feedback&lt;/code&gt; which simply means we would like to get more information from you before moving forward on this issue. :) Again, thanks for taking that first step in making WordPress better for all!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>qbaf</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:44/1522876770759524</guid>
      <description>&lt;p&gt;
Upgraded today to 4.9.5 and no changes
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42937 (Success Message should display on insertion of new category in ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:03:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42937#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42937#comment:9/1522875799828797</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42937/42937.4.diff" title="Attachment '42937.4.diff' in Ticket #42937"&gt;42937.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42937/42937.4.diff" title="Download"&gt;â€‹&lt;/a&gt; is a suggested way to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reuse the translated strings from the &lt;code&gt;$messages&lt;/code&gt; array (i.e. with index 3).
&lt;/li&gt;&lt;li&gt;Allow the message to be filterable with &lt;code&gt;term_updated_messages&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Add tests within the new &lt;code&gt;Tests_Ajax_AddTag&lt;/code&gt; class with methods:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;test_add_category()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_add_post_tag()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_add_category_should_work_with_message_filtering()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_adding_category_without_capability_should_error()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;test_adding_existing_category_should_error()&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43693.diff attached to Ticket #43693</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 21:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43693/43693.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43693/43693.diff/1522875633724663</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43693 (Add pre filter in count user function) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43693</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43693/1522875583954351</guid>
      <description>&lt;p&gt;
Add filter to the count user function, so the count can changed or filtered.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37392 (Multisite "Sites" screen: Add links to filter websites by status) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37392#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37392#comment:20/1522874917293869</guid>
      <description>&lt;p&gt;
Here's a screenshot of what this patch adds:
&lt;a class="ext-link" href="https://drive.google.com/a/eventespresso.com/file/d/1GKiN9SNXs0aU4hEXcqsWVX9MWOFw8fev/view?usp=drivesdk"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://drive.google.com/a/eventespresso.com/file/d/1GKiN9SNXs0aU4hEXcqsWVX9MWOFw8fev/view?usp=drivesdk&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And here's a video: &lt;a class="ext-link" href="https://drive.google.com/file/d/1F8djO1CnkU21MMlmwPqNESNdbASAQds1/view"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://drive.google.com/file/d/1F8djO1CnkU21MMlmwPqNESNdbASAQds1/view&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34353 (redirect_canonical() â€“ Undefined indexes 'host' and 'scheme') updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:33:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34353#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34353#comment:13/1522874018829577</guid>
      <description>&lt;p&gt;
While we're waiting for this fix, I'm also seeing a similar issue in &lt;code&gt;wp-includes/class-wp-http-ixr-client.php&lt;/code&gt;.
&lt;/p&gt;
&lt;pre class="wiki"&gt;ErrorException: Undefined index: host
#7 wp-includes/class-wp-http-ixr-client.php(27): handleError
#6 wp-includes/class-wp-http-ixr-client.php(27): __construct
#5 wp-includes/comment.php(2652): pingback
#4 wp-includes/comment.php(2486): do_all_pings
#3 wp-includes/class-wp-hook.php(286): apply_filters
#2 wp-includes/class-wp-hook.php(310): do_action
#1 wp-includes/plugin.php(515): do_action_ref_array
#0 wp-cron.php(126): null
&lt;/pre&gt;&lt;p&gt;
Same for
&lt;/p&gt;
&lt;pre class="wiki"&gt;Undefined index: scheme
&lt;/pre&gt;&lt;p&gt;
Examining the &lt;code&gt;$bits&lt;/code&gt; variable, I see this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;bits
{
    path: /wordpress/xmlrpc.php
}
&lt;/pre&gt;&lt;p&gt;
The function this happens in:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$timeout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$path&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// Assume we have been given a URL instead
&lt;/span&gt;                        &lt;span class="nv"&gt;$bits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$server&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;scheme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'scheme'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'host'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'port'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'port'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;$port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$bits&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
All such errors are caused by &lt;code&gt;wordpress/wp-cron.php?doing_wp_cron&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Perhaps the fix here can also be applied to &lt;code&gt;class-wp-http-ixr-client.php&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42362 (WordPress database error Unknown column 'wp_mywordpresssite' in 'field ...) updated</title>
      
        <dc:creator>blackawxs</dc:creator>

      <pubDate>Wed, 04 Apr 2018 20:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42362#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42362#comment:9/1522872866974906</guid>
      <description>&lt;p&gt;
An unexpected behavior occurred...I went into my php.ini file and set an error_log directory, and set display_errors = On.  From that moment, the wp-config.php was created and I was able to complete the installation process.  I'm not sure if this solved it, but I'm working again now.
&lt;/p&gt;
&lt;p&gt;
...I also made sure IUSR AND IIS_IUSRS had proper permissions on the directory....
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43123 (Default captions should NOT use max-width) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 19:53:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43123#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43123#comment:21/1522871593720700</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #forums by ipstenu. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1522871591000338"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 19:52:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:12/1522871531708425</guid>
      <description>&lt;p&gt;
Thinking that individual comments containing personal data can be handled directly. The commenter can contact the admin and ask a comment to be edited or deleted. Then the admin can use the email verification/confirmation.
&lt;/p&gt;
&lt;p&gt;
Was mostly thinking to give the site owners the option to also delete the comments completely. In that case we may have to keep comments that have child comments. Currently when a comment parent is deleted we hide all children.
&lt;/p&gt;
&lt;p&gt;
On the other hand the current behavior also makes sense. Yes, child comments are not displayed, but if they were, they will probably be out of context.
&lt;/p&gt;
&lt;p&gt;
This also can be fixed when displaying the comments. Maybe we should leave it as-is for now :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42362 (WordPress database error Unknown column 'wp_mywordpresssite' in 'field ...) updated</title>
      
        <dc:creator>blackawxs</dc:creator>

      <pubDate>Wed, 04 Apr 2018 19:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42362#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42362#comment:8/1522871530928761</guid>
      <description>&lt;p&gt;
I'm also having this issue as of today. Please let me know if anything appears as a red flag but I believe I have done everything correctly....
&lt;/p&gt;
&lt;p&gt;
My Specs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'm working within a Windows 2016 Server.
&lt;/li&gt;&lt;li&gt;I have MySQL Community (Server only installed). Version 5.7.2.1.0 Tested it and its running
&lt;/li&gt;&lt;li&gt;I have PHP 5.6.35 installed. Tested it and its running
&lt;/li&gt;&lt;li&gt;I have IIS10 running with FastCgiModule running to serve the PHP. No issues there.
&lt;/li&gt;&lt;li&gt;I created a virtual directory on my development machine, so I am able to go to &lt;code&gt;mysite.sanbox/v01/wordpress&lt;/code&gt; and see the default wordpress page to pick a language. That is fine. I click next.
&lt;/li&gt;&lt;li&gt;I then use phpmyadmin to create my new database table. That is fine.
&lt;/li&gt;&lt;li&gt;I then go back to &lt;code&gt;mysite.sanddbox/v01/wordpress&lt;/code&gt; and I put in my database information.
&lt;/li&gt;&lt;li&gt;I then click next. The next page is white and says &lt;code&gt;WordPress database error Unknown column 'wp_' in 'field list' for query SELECT wp_&lt;/code&gt;. I have attempted a different database name and different prefix, but no luck.
&lt;/li&gt;&lt;li&gt;I have attempted to install WordPress versions &lt;code&gt;wordpress-4.9.5.zip&lt;/code&gt;, &lt;code&gt;wordpress-4.9.4.zip&lt;/code&gt; and also tried &lt;code&gt;wordpress-4.8.1.zip&lt;/code&gt;. Same issue in all three cases.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Would anyone have a clue as to why this is happening?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:28:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:52/1522866501942584</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-js by aduth. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1522866499000563"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:20:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:9/1522866049852497</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Together with anonymizing the IP address we should probably delete the browser UA. It is used for pretty much the same purpose and has no other role.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree with deleting the browser UA. As a site owner, I want to know my mix of mobile vs non-mobile users for example so I can know where to invest my marketing.  Other site owners may want to know what mix of browsers are visiting their site to determine where to prioritize bug fixes (e.g. we have bug X on Opera - but how many users are visiting our site with that vs fixing bug Y on Edge)
&lt;/p&gt;
&lt;p&gt;
If anything, could we have a separate issue for UA erasure please?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43588 (Anonymize commenter IP address once a comment is no longer pending) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:17:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43588#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43588#comment:8/1522865824263032</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:7" title="Comment 7"&gt;idea15&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43588#comment:5" title="Comment 5"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Together with anonymizing the IP address we should probably delete the browser UA. It is used for pretty much the same purpose and has no other role.
&lt;/p&gt;
&lt;p&gt;
However this has to be done after some time. Sometimes comments are "approved" but the user marks them as spam later, or the other way around. In both cases all comment data is still submitted to spam detection services together with the user action. If we remove some of the data before this, it may cause errors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree.
&lt;/p&gt;
&lt;p&gt;
What retention period do you propose?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Let's do 30 days and make it filterable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:38/1522865797517964</guid>
      <description>&lt;p&gt;
@DavidAnderson the domain and IP I kind of packaged together there... for brevity. The original point stands - if its being stored, as a package, along with IP &amp;amp; domain, consent is &lt;strong&gt;probably&lt;/strong&gt; required.
&lt;/p&gt;
&lt;p&gt;
If consent is required, it must be opt in. It cannot be opt out.
&lt;/p&gt;
&lt;p&gt;
If the data is necessary for security purposes - this does matter in terms of consent etc - it is still necessary to do the other stuff, like identify the data controller.
&lt;/p&gt;
&lt;p&gt;
Ideally, shed the personally identifiable stuff before storing it. Then you are not "controlling" this data. You're using it for the purposes of the transaction. Which is fine. As far as the GDPR and my understanding of it are concerned.
&lt;/p&gt;
&lt;p&gt;
Its worth remembering its about Data Protection. The step of not storing this data (longer than was necessary) would be precisely to protect it. The IP / domain is needed to actually... well do the WordPress update!
&lt;/p&gt;
&lt;p&gt;
It may well be important, if consulting legal teams, if they were trained in the USA or in Europe. Long arguments about the existence of a "Right to Privacy" may otherwise ensue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:10:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:11/1522865416898649</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43442#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also wondering if we should support deleting the comment text here. This may be required in some cases.
&lt;/p&gt;
&lt;p&gt;
Thinking we should still keep the comment row in the db when the comment has "child comments". Can replace the text with something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;This content was deleted by the author.
&lt;/pre&gt;&lt;p&gt;
That would mean running a lot more complex db queries. I'll run couple of tests to see which would be faster.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see your point - we can't know if a given comment has personal data or not - i.e. it would be difficult to detect things like "I've lived on such and such street for the last 20 years, and this was the best parade yet!"
&lt;/p&gt;
&lt;p&gt;
So... the _expectation_ that comment text _could_ be erased (and replaced with a placeholder, not unlike what you've suggested) is probably there, if not a legal requirement.
&lt;/p&gt;
&lt;p&gt;
So... maybe this should be a checkbox on the erasure UX - checked by default - to erase the comment text as well. What do you think?
&lt;/p&gt;
&lt;p&gt;
(The reason for checking this by default is, 1) like i said, the expectation is probably there in general that comment text will be erased when you erase me from your site and 2) once personal data is erased from comments, finding a user's comments to then erase their comments' content could be impossible
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:37/1522865011994448</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can someone make a case for opt-in vs opt-out for this? That's where things are not clear for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As far as I've seen there is no more opt-out under the GDPR. It is gone for good, eradicated, and banished :)
&lt;/p&gt;
&lt;p&gt;
Every user consent has to be opt-in, and as we well know most users don't bother changing the default options:
&lt;a class="ext-link" href="https://www.propublica.org/article/set-it-and-forget-it-how-default-settings-rule-the-world"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.propublica.org/article/set-it-and-forget-it-how-default-settings-rule-the-world&lt;/a&gt;
&lt;a class="ext-link" href="https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.uie.com/brainsparks/2011/09/14/do-users-change-their-settings/&lt;/a&gt;
&lt;a class="ext-link" href="https://service-design.co/95-of-the-people-stick-to-the-default-option-9e16316a64e1"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://service-design.co/95-of-the-people-stick-to-the-default-option-9e16316a64e1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So the GDPR compliance will introduce a pretty bad UX. The only option would be to keep nagging users to click a checkbox :)
&lt;/p&gt;
&lt;p&gt;
Perhaps we can "work something out" on installation (or first login after installation) where we show a modal and don't dismiss it until the user makes a decision. It'd still be annoying for most, but as @xkon mentions above that's what most (closed source) software does when it asks the user to accept its license.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Wed, 04 Apr 2018 18:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:36/1522864932776132</guid>
      <description>&lt;p&gt;
@robscott Does it hinge on the IP address? I was thinking that the site URL was more problematic. For any individual with a website with an "About" page or other identifying information, that seems much more likely to be PII, under the GDPR's criteria of information that can be directly or indirectly be linked back to a particular individual.
&lt;/p&gt;
&lt;p&gt;
But yes, my own view (IANAL...) is that if the code on the wordpress.org mothership immediately drops the IP address down a black hole, then the GDPR's anonymization criteria then come into play (unless it could be argued that the IP combined with a list of installed plugins is sufficient to de-anonymize - that is possible, as you can look up the IP on any number of public "which sites are hosted here?" sites, and then run a quick automated scan on all the sites to see which ones have that same plugin combination installed. There's probably quite a lot of bits of entropy in the info sent that could allow de-anonymization).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:35/1522864725079975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:34" title="Comment 34"&gt;DavidAnderson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@robscott
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
3 If we do not store the data, I don't feel we need to obtain consent. (opinion!!).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the paragraph from the GDPR which you just quoted clearly states that "processing" is the boundary (and makes no reference to "storage"). As such, "Using the data for the purposes of processing the transaction (ephemeral storage) is not storage" is not germane, because the GDPR doesn't divide at that point, and does specifically identify "processing".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm using that in reference to consent. Consent cannot be opt out. It must be opt in. Its not related to my opinion on storage - which is about WHY is the data being stored? The only way this data can be personal data is as a package. The IP address is what it hinges on. If you shed this element, you've anonymized it.
&lt;/p&gt;
&lt;p&gt;
I can dig out one on "suitably anonymized data" if you'd like.
&lt;/p&gt;
&lt;pre class="wiki"&gt;GDPR doesnâ€™t apply to suitably anonymised data [Article 6, 4(e), Article 25, 1, Article 32, 1(a)].
&lt;/pre&gt;&lt;p&gt;
I would argue that the removal of IP / domain (anything else deemed potentially personal data) would be necessary process to suitably anonymize the data. For which, no consent is necessary.
&lt;/p&gt;
&lt;p&gt;
Not really sure we need a semantic argument on this point. I just made it poorly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:34/1522864245959917</guid>
      <description>&lt;p&gt;
@robscott
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
3 If we do not store the data, I don't feel we need to obtain consent. (opinion!!).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the paragraph from the GDPR which you just quoted clearly states that "processing" is the boundary (and makes no reference to "storage"). As such, "Using the data for the purposes of processing the transaction (ephemeral storage) is not storage" is not germane, because the GDPR doesn't divide at that point, and does specifically identify "processing".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>robscott</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:33/1522863674978350</guid>
      <description>&lt;p&gt;
Maybe now I should disclose my 3 years of legal education... which certainly do not qualify me to anything other than passing commentary.
&lt;/p&gt;
&lt;p&gt;
Just to be clear about opt in vs opt out. If the "opt in" is relating to personal data, then the GDPR specifically says:
&lt;/p&gt;
&lt;pre class="wiki"&gt;"Consent should be given by a clear affirmative act establishing a freely given, specific, informed and unambiguous indication of the data subjectâ€™s agreement to the processing of personal data relating to him or her, such as by a written statement, including by electronic means, or an oral statement. This could include ticking a box when visiting an internet website, choosing technical settings for information society services or another statement or conduct which clearly indicates in this context the data subjectâ€™s acceptance of the proposed processing of his or her personal data. Silence, pre-ticked boxes or inactivity should not therefore constitute consent. "
&lt;/pre&gt;&lt;p&gt;
So if the consent is "opt out" then we should shelve it if it is personal data and the ticket relates to GDPR.
&lt;/p&gt;
&lt;p&gt;
My personal view would be this test:
&lt;/p&gt;
&lt;p&gt;
1 is this personal data? Yes or no.
2 If yes - do we need to &lt;strong&gt;store&lt;/strong&gt; it?
3 If we do not &lt;strong&gt;store&lt;/strong&gt; the data, I don't feel we need to obtain consent. (opinion!!).
4 If the data is stored - why? What is it stored for? (beyond the actual transaction I mean)
&lt;/p&gt;
&lt;p&gt;
We (might) need consent for the "why" - what is being done with this (potentially identifiable) and (potentially) personal data?
&lt;/p&gt;
&lt;p&gt;
Using the data for the purposes of processing the transaction (ephemeral storage) is not storage. The only way this data can be considered personal data would be if it were collected together as a package and stored. Again, all my opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:28:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:32/1522862897215599</guid>
      <description>&lt;p&gt;
@azaozz wrote:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For that reason think this ticket should focus on providing that information, including what data is sent on update checks, how it is used, and what it would mean for their site if these checks are disabled.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+100
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd also really like to hear a lawyer's opinion on whether domain names and websites IP addresses constitute "personal data" under the GDPR.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I really don't like abstract discussions - I think they go on for ever. So, here's the only way I can think that a server IP could be used to identify a person - what if a person keeps the server in their home or their small business (and not in a hosting provider like bluehost). If a user does that, and their server contacts WordPress.org to check for updates, WordPress.org has the means to "unmask" (identify) that user you even if they have things have privacy on their domain registration.
&lt;/p&gt;
&lt;p&gt;
So... my $0.02... the privacy docs for WordPress core should disclose that 1) WordPress.org servers will be contacted to check for updates and 2) that the server IP is unavoidably shared with them when that happens and 3) that should be opt-in/out before communication happens since that communication can unmask a user
&lt;/p&gt;
&lt;p&gt;
Can someone make a case for opt-in vs opt-out for this? That's where things are not clear for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:101/1522861584085166</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #hosting-community by danielbachhuber. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/hosting-community/p1522861582000234"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43555 (Keep Hello Dolly from displaying sexist text in the admin) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 04 Apr 2018 17:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43555#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43555#comment:37/1522861567960620</guid>
      <description>&lt;p&gt;
Hi @dawesi, we welcome all opinions and any constructive criticism, but we also require that everybody act respectfully and professionally. We're a community, and we work hard to make sure that all of our spaces are friendly and welcoming environments. In the future, please express your opinions without resorting to insults and ad hominem attacks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43680 (Add new filter to WP_User_Query) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43680#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43680#comment:4/1522858359402006</guid>
      <description>&lt;p&gt;
Updated the patch with coding standard fixes. cc @SergeyBiryukov
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43680.2.diff attached to Ticket #43680</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43680/43680.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43680/43680.2.diff/1522858232615099</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43679 (Add $this to found_users_query filter) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:07:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43679#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43679#comment:3/1522858053283601</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@danieltj Thanks for the feedback. I have updated the patch, to improve the docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43679.2.diff attached to Ticket #43679</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43679/43679.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43679/43679.2.diff/1522857972846038</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43692.diff attached to Ticket #43692</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 16:00:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43692/43692.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43692/43692.diff/1522857601212625</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43692 (Add Limit 1 to User query) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43692</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43692/1522857551492412</guid>
      <description>&lt;p&gt;
Add limit 1 to SQL query in WP_User class, as only one row is requested.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:37:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:31/1522856239318858</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522856236000658"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:25/1522855618023148</guid>
      <description>&lt;p&gt;
The lovely folks from #themereview after a little chat we had told me that we can create a Make post informing the authors of this change so we can spread it a bit, but apart from that it'll be up to the authors to take care of it at the end.
&lt;/p&gt;
&lt;p&gt;
If in any case we 'have' to add something I'd personally go for the inline even if I'm not a fan as well. I don't like the idea of outputting a full extra &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; in the header no matter how small it could be at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>category-added-ajax-message-with-42937.3.diff.jpg attached to Ticket #42937</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:12:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42937/category-added-ajax-message-with-42937.3.diff.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42937/category-added-ajax-message-with-42937.3.diff.jpg/1522854723330590</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42937 (Success Message should display on insertion of new category in ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 15:06:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42937#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42937#comment:8/1522854363565880</guid>
      <description>&lt;p&gt;
I had another look at this and I would suggest we limit the scope of the ticket to the existing "added" messages. We can see the existing messages here:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/edit-tag-messages.php"&gt;https://core.trac.wordpress.org/browser/tags/4.9.5/src/wp-admin/includes/edit-tag-messages.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are only three variations for "added":
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Category added.
&lt;/li&gt;&lt;li&gt;Tag added.
&lt;/li&gt;&lt;li&gt;Item added.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
where the last one is for a taxonomy that's neither a &lt;code&gt;category&lt;/code&gt; or a &lt;code&gt;post_tag&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I also think we should have the "added" ajax admin notice dismissable.
&lt;/p&gt;
&lt;p&gt;
Usually that's done via CSS classes like: &lt;code&gt;notice is-dismissible&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
But that's not triggered here via ajax. I think a workaround for that is to trigger the &lt;code&gt;'wp-updates-notice-added'&lt;/code&gt; event.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42937/42937.3.diff" title="Attachment '42937.3.diff' in Ticket #42937"&gt;42937.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42937/42937.3.diff" title="Download"&gt;â€‹&lt;/a&gt; is a suggested patch that:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds a message according to the three existing variations, mentioned above.
&lt;/li&gt;&lt;li&gt;Adds CSS classes to the admin notice.
&lt;/li&gt;&lt;li&gt;Makes the admin notice dismissable, by triggering the &lt;code&gt;'wp-updates-notice-added'&lt;/code&gt; event.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Todo:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Find a way to use the translated strings from the &lt;code&gt;$messages&lt;/code&gt; array and make the ajax "added" message filterable by &lt;code&gt;term_updated_messages&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Further:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If we want to modify the "added" message, then I think a new ticket would serve it better.
&lt;/li&gt;&lt;li&gt;I wonder if the "deleted" message should be considered too? (If so then in another ticket).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:10/1522852956211822</guid>
      <description>&lt;p&gt;
Also wondering if we should support deleting the comment text here. This may be required in some cases.
&lt;/p&gt;
&lt;p&gt;
Thinking we should still keep the comment row in the db when the comment has "child comments". Can replace the text with something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;This content was deleted by the author.
&lt;/pre&gt;&lt;p&gt;
That would mean running a lot more complex db queries. I'll run couple of tests to see which would be faster.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42937.3.diff attached to Ticket #42937</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:27:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42937/42937.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42937/42937.3.diff/1522852064262883</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:9/1522851695575882</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522851692000907"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 14:13:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:24/1522851219106192</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@xkon thanks for the patch! Looks good.
&lt;/p&gt;
&lt;p&gt;
The last thing I'm thinking about is if we should add an inline style &lt;code&gt;display: inline;&lt;/code&gt; for the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I know, --everybody-- hates inline styles, but really don't see good way to fix this for all themes.
&lt;/p&gt;
&lt;p&gt;
Alternatively can output a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag in the head with something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#commentform .comment-form-cookies-consent label[for="wp-comment-cookies-consent"] {
    display: inline;
}
&lt;/pre&gt;&lt;p&gt;
Which is the "lesser evil"? :)
&lt;/p&gt;
&lt;p&gt;
Moving this to the "Bundled Themes" component as it mostly concerns the theme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42700 (Figure captions not inheriting max-width from figures) updated</title>
      
        <dc:creator>bahead</dc:creator>

      <pubDate>Wed, 04 Apr 2018 13:41:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42700#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42700#comment:7/1522849277844407</guid>
      <description>&lt;p&gt;
Just in case someone lands here, the issue I reported in this ticket is more elegantly explained at &lt;a href="https://core.trac.wordpress.org/ticket/43123"&gt;https://core.trac.wordpress.org/ticket/43123&lt;/a&gt; and was fixed in 4.9.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5315 (Awaiting Moderation (#): # is not always updated correctly in JS) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 13:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5315#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5315#comment:2/1522849047168231</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by notnownikki. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1522849045000106"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 13:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:66/1522847011821540</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:64" title="Comment 64"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(If it's easier to read, &lt;a class="ext-link" href="https://github.com/WP-API/proposals/pull/3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;there's also a PR for the proposal&lt;/a&gt;; I don't want to split the conversation, but might be easier to hash out smaller things there.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, agreed. Best is to not fragment the conversation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43691 (class-wp-rest-server sends response body regardless of actual response ...) created</title>
      
        <dc:creator>matthias.thiel</dc:creator>

      <pubDate>Wed, 04 Apr 2018 11:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43691</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43691/1522843145375707</guid>
      <description>&lt;p&gt;
The WP Rest Server always echoes the result of &lt;code&gt;wp_json_encode&lt;/code&gt; unless there is an error.
&lt;/p&gt;
&lt;p&gt;
See line &lt;code&gt;410&lt;/code&gt; of class-wp-rest-server.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo $result;
&lt;/pre&gt;&lt;p&gt;
A use case where this leads to an undesired behaviour is when using the HTTP Status Code 204 which implies no response body being sent. Returning a rest response with a status code 204 will send a body at the moment.
&lt;/p&gt;
&lt;p&gt;
There are two problems with this behaviour:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;A response status 204 should not send any body content
&lt;/li&gt;&lt;li&gt;A response data of &lt;code&gt;null&lt;/code&gt; (&lt;code&gt;new \WP_REST_Response( null, 204 )&lt;/code&gt;)  will be sent as the (string) &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Most clients are pretty forgiving and will ignore the request body but MacOS Safari will not complete the request in this situation and will try to parse the &lt;code&gt;null&lt;/code&gt; response as JSON. I found the behaviour is also server configuration specific as some configurations will strip the response body automatically and some will not.
&lt;/p&gt;
&lt;p&gt;
Since there is no consistency in treating a 204 response by servers and browsers, I would suggest to stick to the spec (&lt;a class="ext-link" href="https://tools.ietf.org/search/rfc2616#section-4.3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://tools.ietf.org/search/rfc2616#section-4.3&lt;/a&gt;) and not return a response at all.
&lt;/p&gt;
&lt;p&gt;
I can see two ways to achieve this:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Consult the response status to decide whether or not to return a response body, which is spec compliant
&lt;/li&gt;&lt;li&gt;Consult the response data and treat &lt;code&gt;null&lt;/code&gt; by not sending a response body, which honours the semantic of &lt;code&gt;null&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43687 (Ensure changes to 'Hello Dolly' words don't violate copyright) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 04 Apr 2018 10:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43687#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43687#comment:2/1522839435107303</guid>
      <description>invalid: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43555" title="#43555: enhancement: Keep Hello Dolly from displaying sexist text in the admin (closed: fixed)"&gt;#43555&lt;/a&gt; changed the lyrics to more closely match how they were sung by Louis Armstrong. If the copyright holder wishes to discuss these changes, they should contact the &lt;a class="ext-link" href="https://wordpressfoundation.org/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WordPress Foundation&lt;/a&gt; directly, as Trac isn't the appropriate place to discuss it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:56:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:5/1522835778046913</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23165 (Admin validation errors on form nonce element IDs (_wpnonce)) updated</title>
      
        <dc:creator>thomas_hoadley</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:55:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23165#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23165#comment:12/1522835701320042</guid>
      <description>&lt;p&gt;
Still have issues with this. Updates needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) closed</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:53:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:4/1522835604766914</guid>
      <description>invalid: &lt;p&gt;
Thanks @audrasjb and @swissspidy for so fast answers!!
&lt;/p&gt;
&lt;p&gt;
After some investigations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the "default" does not appear on another website I manage
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;it apparently comes from the Theme that is is used that is a quite rich and "complex" theme
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So it is not a wordpress bug
&lt;/p&gt;
&lt;p&gt;
Kind regards
Thierry
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Capture dâ€™Ã©cran 2018-04-04 Ã  11.42.54.png attached to Ticket #43690</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43690/Capture%20d%E2%80%99%C3%A9cran%202018-04-04%20%C3%A0%2011.42.54.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43690/Capture%20d%E2%80%99%C3%A9cran%202018-04-04%20%C3%A0%2011.42.54.png/1522835187181602</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:3/1522835164031489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
That looks a lot like it's caused by one of your plugins. "to see changes first update/publish the page" is not a string that exists in WordPress. Does this still happen with all plugins disabled?
&lt;/p&gt;
&lt;p&gt;
If not, you're better off asking this in the support forums: &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:2/1522835155323362</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @tnkaoua, welcome to Trac and thanks for your ticket,
&lt;/p&gt;
&lt;p&gt;
Which Safari version are you using?
Can you please test it on a fresh install?
&lt;/p&gt;
&lt;p&gt;
I did not manage to reproduce the bug (see screenshot below).
&lt;/p&gt;
&lt;p&gt;
Thanks,
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) updated</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690#comment:1/1522834797730378</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Wordpress 4.9.5 Safari.jpeg attached to Ticket #43690</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43690/Wordpress%204.9.5%20Safari.jpeg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43690/Wordpress%204.9.5%20Safari.jpeg/1522834662851994</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43690 (Mac OSX, WordPress 4.9.5  admin pages) created</title>
      
        <dc:creator>tnkaoua</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43690</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43690/1522834629068877</guid>
      <description>&lt;p&gt;
Hi
&lt;/p&gt;
&lt;p&gt;
Since last night update to 4.9.5, on Mac OSX Safari, admin pages seem broken as you can see in the attached image.
Safari cache has been emptied.
&lt;/p&gt;
&lt;p&gt;
The issue does not appear on Chrome.
&lt;/p&gt;
&lt;p&gt;
Regards
Thierry
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43688 ([4.9.5] [Widgets] Visibility - options disappearing?!) updated</title>
      
        <dc:creator>Kiezkicker</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:33:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43688#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43688#comment:2/1522834437470668</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43688#comment:1" title="Comment 1"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Widget Visibility is not a core feature. You're probably using &lt;a class="ext-link" href="https://jetpack.com/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Jetpack&lt;/a&gt; or a similar plugin that adds this feature. You have to ask their support.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Indeed, sorry. After updating jetpack the plugin doesnÂ´t change back to "active" status. Afterr activating it everything is back to normal. Thanks for your quick response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43688 ([4.9.5] [Widgets] Visibility - options disappearing?!) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:16:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43688#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43688#comment:1/1522833405481693</guid>
      <description>invalid: &lt;p&gt;
Widget Visibility is not a core feature. You're probably using &lt;a class="ext-link" href="https://jetpack.com/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Jetpack&lt;/a&gt; or a similar plugin that adds this feature. You have to ask their support.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43689 (next_post_link()/previous_post_link() broken for custom post types in ...) created</title>
      
        <dc:creator>Blackbam</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43689</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43689/1522833073604651</guid>
      <description>&lt;p&gt;
The link to the next post is being displayed however the third parameter $in_same_term seems to be completely ignored even though parameter $taxonomy is correct (&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/next_post_link"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://codex.wordpress.org/Function_Reference/next_post_link&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
E.g. you are on singular pages of a custom post type "Job". You want to have the next post link of "Jobs" which are in the same "Job Group" (a custom taxonomy) e.g. "Developer". However next post link will deliver a next Job which is in the "Job Group" "Graphic Designer" even though $in_same_term was set to true.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43688 ([4.9.5] [Widgets] Visibility - options disappearing?!) created</title>
      
        <dc:creator>Kiezkicker</dc:creator>

      <pubDate>Wed, 04 Apr 2018 09:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43688</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43688/1522832919903933</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I wonder - after updating to 4.9.5 - all my "visibility" rules which I had set for my widgets are out of function, and each widget was displayed always.
&lt;/p&gt;
&lt;p&gt;
Additionally there is no more an option in the widget config section to set the visibility of the widget again?!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:65/1522832168096271</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:63" title="Comment 63"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:62" title="Comment 62"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right. The current (non-API) logic is:
Save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post (a post is always edited as we start with an auto-draft).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It doesn't seem like this is necessarily true; wp_create_post_autosave shortcircuits if the post is the exact same, so it seems like an autodraft can only be created once there is a change?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, currently the auto-draft is created right before the user loads the Add New (post) screen. This is done so we have a post_ID for the brand new post and covers cases where the user may upload files or add tags, categories, post meta, etc. before they actually start writing the post (we need a post_ID to "attach" the meta). I'm not sure how that works through the API at the moment, or if it is possible at all. (That has nothing to do with auto-saving as there is nothing in the post to save yet.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We do already provide the functionality to delete revisions via the REST API, so they're not really usable for an audit trail, but rather as a sort of long-term undo.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, I'm not sure why this was added to the API. IMHO we shouldn't be removing the functionality of the audit trail. This changes the purpose and functionality of revisions quite a bit...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Their (revisions) primary use is to see the evolution of a post over time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps we should look at removing the delete revision endpoint. It makes them "unreliable" and their purpose becomes "to maybe see the evolution of a post over time, or maybe see only some of it, or not see anything".
&lt;/p&gt;
&lt;p&gt;
If I understand the general logic behind a REST API correctly, it should care about the "client" and the "view", not overtake the server "business logic". The client is generally "untrusted" in handling low level logic, that should be handled by the server. There is a good reason why revisions cannot be deleted from the UI :)
&lt;/p&gt;
&lt;p&gt;
I'm aware that revisions can be limited or disabled altogether but that is a "server logic" decision on per site basis. Also note that this doesn't disable autosave revisions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right now, there's no way to say "update this post, but don't create a revision". The basic thing we want for autosaves is the ability to do this, but providing this functionality so allows any REST API client to do so, which I'm a little uncomfortable about (and which would totally destroy any concept of revisions being usable as an audit trail, since now changes can be made without being recorded anywhere).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. Thinking more about this, it should stay this way (no way to save without a revision). Changing that would make revisions totally untrustworthy.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The proposed autosave process I'm talking about here would allow this, but in a very controlled way. Each change would still get a revision, but clients would now have the ability to temporarily persist changes while the user is still working on them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So basically you want to move the server auto-saving logic to the client. Not sure this is a good idea. The client can store "persistent backup data" by itself, for example in browser storage. This has nothing to do with server auto-saving. This is how autosaves work at the moment for non-API. There are server autosaves and client (in browser storage) autosaves.
&lt;/p&gt;
&lt;p&gt;
Once the client decides to push a server auto-save, the logic for it should be on the server.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The main thing that seems strange is the special-casing of the post's author. If we can remove that special-casing, I think the rest is reasonably straightforward to model. Is there a reason for this special-casing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is mainly needed for post locking (not implemented through the API yet). It prevents data loss when more than one client tries to edit the same post. It also keeps the audit trail more consistent.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If clients don't want to use the autosave process, then they can keep using the existing process, they'll just potentially end up with lots of revisions. I see this autosave concept as similar to database transactions: you queue up and persist a bunch of changes, then commit them all in one revision at once. This preserves the process of always creating revisions, while reducing the amount of noise.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this is a possible saving workflow. A client can decide to not use the server autosave process and instead store backups locally. Then "once in a while" sync these local backups with the server. Few years ago there was an idea to make the non-API autosave work this way too. It didn't materialize as browser storage was somewhat unreliable/limited back then.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This will generally mean that a post will always have an autosaved revision. That revision will usually be more recent than the post content, and the user will have to manually "restore" that autosave revision before continuing to edit. That's not a good UX :) This can happen now too, but is relatively rare.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The client can implement the functionality themselves to automatically "restore" the autosave. This is essentially what we're doing already with the special-case for the post author, but editors can do it in a more consistent way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps but there are some edge cases like when there are several autosaves authored by different users that have edited the post at different times. Then it can get really messy :) Thinking that restoring/overwriting a post from a revision should always be user-controlled.
&lt;/p&gt;
&lt;p&gt;
The current logic is that the post author is "the boss" and other users that edit the post leave audit trail with their changes. This is essential for larger sites that have many authors and many editors.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the part: "User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt;" would be an actual save, i.e. &lt;code&gt;POST /wp/v2/posts/{id}&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was thinking this would be a cleaner way of the client actually "committing" the autosaved changes. It avoids the problem where an update to a somewhat-unrelated resource (the post) affects a bunch of others (all the autosaves). This is the current behaviour though: &lt;code&gt;wp_save_post_revision()&lt;/code&gt; is called by &lt;code&gt;wp_insert_post()&lt;/code&gt;, and it wipes out all the autosaves.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm, &lt;code&gt;wp_save_post_revision()&lt;/code&gt; doesn't wipe autosave revisions. It has some logic to keep a max number of revisions if they are limited by a plugin. The default is &lt;code&gt;-1&lt;/code&gt; (unlimited). Also note that this logic specifically bypasses (keeps) autosave revisions, even when they are over the max.
&lt;/p&gt;
&lt;p&gt;
Also, the post is not an "unrelated resource" in this case. Generally we can view a WordPress post as consisting of several rows in the db: the actual post row plus all the revisions rows. They are the same "resource" from logical point of view. It doesn't matter how exactly the "post resource" is stored. As @schlessera mentions above, at some point the storage schema may change and perhaps post revisions may be stored as incremental diffs in the actual post row in the db. Well, at last in theory :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a "disaster recovery" for a rare edge case that was planned for the current (non-API) autosave too. We can remove it if need be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it's a global change, that makes sense; I'd rather track and implement it separately I think :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, lets separate that. But maybe first get the server autosaves logic/endpoint in.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(Sorry for the long post again; this is a complex topic.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, sorry for the long post too, very complex topic indeed :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:54:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:5/1522832085833355</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I discussed this with @pento today, and we are both in agreement in landing this for WP 5.0
&lt;/p&gt;
&lt;p&gt;
The &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43558/43558.diff" title="Attachment '43558.diff' in Ticket #43558"&gt;43558.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43558/43558.diff" title="Download"&gt;â€‹&lt;/a&gt; patch installs the following &lt;code&gt;require-dev&lt;/code&gt; packages:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;squizlabs/php_codesniffer&lt;/code&gt; - PHPCS
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-coding-standards/wpcs&lt;/code&gt; WordPress PHP Coding Standards for - PHPCS
&lt;/li&gt;&lt;li&gt;&lt;code&gt;dealerdirect/phpcodesniffer-composer-installer&lt;/code&gt; - PHPCS ruleset installer
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Additional Composer &lt;em&gt;&lt;code&gt;require-dev&lt;/code&gt;&lt;/em&gt; packages can be considered in new tickets on a case-by-case basis.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43218" title="#43218: defect (bug): PHPUnit 7.x support (accepted)"&gt;#43218&lt;/a&gt; PHPUnit 7.x support
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a href="https://core.trac.wordpress.org/attachment/ticket/41057/41057-grunt.diff"&gt;41057-grunt.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:23/1522831936930405</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt; Add &lt;code&gt;composer.json&lt;/code&gt; file for development dependencies
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43558.diff attached to Ticket #43558</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43558/43558.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43558/43558.diff/1522830939989826</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43558 (Add `composer.json` file for development dependencies) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 04 Apr 2018 08:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43558#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43558#comment:4/1522830866283098</guid>
      <description>&lt;p&gt;
Copying in @GaryJ's &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/23912#comment:98" title="#23912: enhancement: Add Composer package description (new)"&gt;ticket:23912#comment:98&lt;/a&gt; for further context:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Treating WordPress as a dependency of a site may not be the prevalent use case across all WP installs, but it is popular and handy for those that have taken that approach. I personally use &lt;a class="ext-link" href="http://wecodemore.github.io/wpstarter/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WPStarter&lt;/a&gt; but other wrappers of WP are available too.
&lt;/p&gt;
&lt;p&gt;
Something not mentioned so far, and that has changed since this ticket has started, is the use of PHP_CodeSniffer. Obviously, PHPUnit has been in use since before this ticket as well.
&lt;/p&gt;
&lt;p&gt;
These core development dependencies should be documented in the &lt;code&gt;composer.json&lt;/code&gt; &lt;code&gt;require-dev&lt;/code&gt; section, so that we &lt;a class="ext-link" href="https://12factor.net/dependencies"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;explicitly declare and isolate dependencies&lt;/a&gt;. Running versions earlier than PHP_CodeSniffer 3.2 will cause different results than 3.2+, for instance. WP should not be relying on globally installed dependencies of varying versions.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;.travis.yml&lt;/code&gt; files shows PHPUnit can be used at version 4, 5 or 6, depending on the PHP version available - and that's great, but get it down in a &lt;code&gt;composer.json&lt;/code&gt;, and a &lt;code&gt;composer install&lt;/code&gt; means that the switch statement can be dropped, and developers working locally can get the right version too.
&lt;/p&gt;
&lt;p&gt;
Whatever the rest of the &lt;code&gt;composer.json&lt;/code&gt; does or doesn't do for the external benefit of those &lt;em&gt;consuming&lt;/em&gt; this package, having a simple &lt;code&gt;composer.json&lt;/code&gt; which lists the development dependencies gives internal benefit to &lt;em&gt;contributors&lt;/em&gt; and automated tools.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43658 (Media attachment filter drop-down mime types in grid mode is not ...) updated</title>
      
        <dc:creator>itzmekhokan</dc:creator>

      <pubDate>Wed, 04 Apr 2018 07:27:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43658#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43658#comment:4/1522826861419215</guid>
      <description>&lt;p&gt;
I have tested the flow thoroughly with the &lt;a href="https://core.trac.wordpress.org/attachment/ticket/43658/43658.1.patch"&gt;43658.1.patch&lt;/a&gt; and it is working properly, as expected and changes the return from &lt;code&gt;wp_enqueue_media&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However, I faced an issue with unit testing. Can you please guide me with the flow, i need to follow for the same.
&lt;/p&gt;
&lt;p&gt;
Looking for your co-operation dearly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43658.1.patch attached to Ticket #43658</title>
      
        <dc:creator>itzmekhokan</dc:creator>

      <pubDate>Wed, 04 Apr 2018 06:01:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43658/43658.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43658/43658.1.patch/1522821680455403</guid>
      <description>&lt;p&gt;
Corrected coding standards by added whitespace
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 04 Apr 2018 04:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:8/1522817064895422</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #gdpr-compliance by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/gdpr-compliance/p1522817063000023"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 04 Apr 2018 04:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:64/1522814979520483</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
(If it's easier to read, &lt;a class="ext-link" href="https://github.com/WP-API/proposals/pull/3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;there's also a PR for the proposal&lt;/a&gt;; I don't want to split the conversation, but might be easier to hash out smaller things there.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 04 Apr 2018 04:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:63/1522814916436326</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:62" title="Comment 62"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right. The current (non-API) logic is:
Save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post (a post is always edited as we start with an auto-draft).
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It doesn't seem like this is necessarily true; wp_create_post_autosave shortcircuits if the post is the exact same, so it seems like an autodraft can only be created once there is a change?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When saving, the post is always updated and an identical revision is always created. Note that revisions (including autosave revisions) also provide an "audit trail". That's another reason revisions are not editable directly by the users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We do already provide the functionality to delete revisions via the REST API, so they're not really usable for an audit trail, but rather as a sort of long-term undo. Their primary use is to see the evolution of a post over time.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Auto-save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post.
&lt;/li&gt;&lt;li&gt;Periodically the client checks for changes. If there are any, the client saves the post.
&lt;/li&gt;&lt;li&gt;The server has different logic for this save:
&lt;ul&gt;&lt;li&gt;If the post is a draft, it is updated in the db without creating another revision.
&lt;/li&gt;&lt;li&gt;If the post is a draft but the post author is different than the current user, the post is not updated and a revision is created.
&lt;/li&gt;&lt;li&gt;If the post is published a revision is created without updating the post.
&lt;/li&gt;&lt;li&gt;When creating a revision following the above logic, if an autosaved revision already exists, it is updated instead of creating another autosaved revision. Additionally if the post content is identical to the new content that is being auto-saved, the previous autosave revision is deleted to prevent having a redundant revision (i.e. if the update of the previous autosaved revision will make it identical to the current post, there is no need of it).
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
When auto-saving the post may be updated (most common case), or a revision may be created, updated or deleted.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right now, there's no way to say "update this post, but don't create a revision". The basic thing we want for autosaves is the ability to do this, but providing this functionality so allows any REST API client to do so, which I'm a little uncomfortable about (and which would totally destroy any concept of revisions being usable as an audit trail, since now changes can be made without being recorded anywhere).
&lt;/p&gt;
&lt;p&gt;
The proposed autosave process I'm talking about here would allow this, but in a very controlled way. Each change would still get a revision, but clients would now have the ability to temporarily persist changes while the user is still working on them.
&lt;/p&gt;
&lt;p&gt;
The main thing that seems strange is the special-casing of the post's author. If we can remove that special-casing, I think the rest is reasonably straightforward to model. Is there a reason for this special-casing?
&lt;/p&gt;
&lt;p&gt;
Changing these I think would make the whole process more predictable for clients, and easier to model.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This differs a lot from the current workflow. Generally when auto-saving in any app (not WP), the actual item is being updated. In WP the logic is more complex as we have revisions and states, draft vs. published. If we create and update a revision directly instead of updating the current item, it will be unexpected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think in order to preserve the concept of revisions as a useful thing, we need to do this; the alternative is to allow any client to update a post without creating a revision (unless I'm missing something there).
&lt;/p&gt;
&lt;p&gt;
If clients don't want to use the autosave process, then they can keep using the existing process, they'll just potentially end up with lots of revisions. I see this autosave concept as similar to database transactions: you queue up and persist a bunch of changes, then commit them all in one revision at once. This preserves the process of always creating revisions, while reducing the amount of noise.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This will generally mean that a post will always have an autosaved revision. That revision will usually be more recent than the post content, and the user will have to manually "restore" that autosave revision before continuing to edit. That's not a good UX :) This can happen now too, but is relatively rare.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The client can implement the functionality themselves to automatically "restore" the autosave. This is essentially what we're doing already with the special-case for the post author, but editors can do it in a more consistent way.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't mind changing how saving and auto-saving works in WP, but we'll need to come up with a nice workflow. Unsure if now is the best time as this ticket is urgent, but if you think we can manage it in the next 2-3 days, I'm all for trying :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm working on the implementation for this at the moment based on the latest, so we should have a working example to study.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, the part: "User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt;" would be an actual save, i.e. &lt;code&gt;POST /wp/v2/posts/{id}&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was thinking this would be a cleaner way of the client actually "committing" the autosaved changes. It avoids the problem where an update to a somewhat-unrelated resource (the post) affects a bunch of others (all the autosaves). This is the current behaviour though: &lt;code&gt;wp_save_post_revision()&lt;/code&gt; is called by &lt;code&gt;wp_insert_post()&lt;/code&gt;, and it wipes out all the autosaves.
&lt;/p&gt;
&lt;p&gt;
(Autosaves are conceptually difficult to model as a resource because of this.)
&lt;/p&gt;
&lt;p&gt;
I'll update the proposal to reflect this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is a "disaster recovery" for a rare edge case that was planned for the current (non-API) autosave too. We can remove it if need be.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it's a global change, that makes sense; I'd rather track and implement it separately I think :)
&lt;/p&gt;
&lt;p&gt;
(Sorry for the long post again; this is a complex topic.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43687 (Ensure changes to 'Hello Dolly' words don't violate copyright) updated</title>
      
        <dc:creator>dawesi</dc:creator>

      <pubDate>Wed, 04 Apr 2018 02:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43687#comment:1/1522810228426339</guid>
      <description>&lt;p&gt;
Should we rename word press as some sites don't use words but only have pictures, or just an api?
&lt;/p&gt;
&lt;p&gt;
Can we also change Word--press because press is discriminatory to people who dont like things that violently push things into others (aka press).
&lt;/p&gt;
&lt;p&gt;
Wordpress logo is blue, when men prefer and women don't so it should be pink?
&lt;/p&gt;
&lt;p&gt;
Any other nutjobs with low self esteem want to read 'NOTHING' into something, then pretend it's ok to butcher copyright?
&lt;/p&gt;
&lt;p&gt;
They (those disorders) think we can change a song words (illegal), but still run this on PHP, because the architecture already isn't slow? Please hire people who love programming, so they can ignore illegal changes like this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43687 (Ensure changes to 'Hello Dolly' words don't violate copyright) created</title>
      
        <dc:creator>dawesi</dc:creator>

      <pubDate>Wed, 04 Apr 2018 02:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43687</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43687/1522809673579742</guid>
      <description>&lt;p&gt;
This ER &lt;a href="https://core.trac.wordpress.org/ticket/43555"&gt;https://core.trac.wordpress.org/ticket/43555&lt;/a&gt; (the most PC change ever made to WordPress), may now be violating copyright law.
&lt;/p&gt;
&lt;p&gt;
Can you change the words of a song to suit yourself without ramification?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43555 (Keep Hello Dolly from displaying sexist text in the admin) updated</title>
      
        <dc:creator>dawesi</dc:creator>

      <pubDate>Wed, 04 Apr 2018 02:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43555#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43555#comment:36/1522809270270391</guid>
      <description>&lt;p&gt;
I'm putting this ER on my wall for the most PC fix ever.
&lt;/p&gt;
&lt;p&gt;
Seriously, let's change the lyrics of a copyrighted song? Is that even legal? Is the complaint even in line with the original meaning of the words?
&lt;/p&gt;
&lt;p&gt;
Just because you say it should be changed, doesn't mean it should. Sick of people with low self esteem putting cotton wool everywhere, how about fixing your issues, and self pity, instead of breaking the law by changing words to someone elses song to suit your disorder?
&lt;/p&gt;
&lt;p&gt;
This is the start of the end of Wordpress, bring on the lawyers. (this is going to make tech news for sure)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42959]: Post 4.9.5 version bump for 4.9 branch</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:41:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42959/1522795275963364</guid>
      <description>&lt;p&gt;
Post 4.9.5 version bump for 4.9 branch
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42958]: Tag 3.7.26</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:39:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42958</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42958/1522795176070527</guid>
      <description>&lt;p&gt;
Tag 3.7.26
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42957]: Tag 3.8.26</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:39:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42957/1522795170353884</guid>
      <description>&lt;p&gt;
Tag 3.8.26
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42956]: Tag 3.9.24</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42956</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42956/1522795165321905</guid>
      <description>&lt;p&gt;
Tag 3.9.24
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42955]: Tag 4.0.23</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42955</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42955/1522795160050499</guid>
      <description>&lt;p&gt;
Tag 4.0.23
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42954]: Tag 4.1.23</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42954</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42954/1522795154814655</guid>
      <description>&lt;p&gt;
Tag 4.1.23
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42953]: Tag 4.2.20</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42953</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42953/1522795149641803</guid>
      <description>&lt;p&gt;
Tag 4.2.20
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42952]: Tag 4.3.16</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42952</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42952/1522795142667568</guid>
      <description>&lt;p&gt;
Tag 4.3.16
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42951]: Tag 4.4.15</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42951</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42951/1522795135799911</guid>
      <description>&lt;p&gt;
Tag 4.4.15
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42950]: Tag 4.5.14</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42950</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42950/1522795130003941</guid>
      <description>&lt;p&gt;
Tag 4.5.14
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42949]: Tag 4.6.11</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:38:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42949/1522795123834615</guid>
      <description>&lt;p&gt;
Tag 4.6.11
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42948]: Tag 4.7.10</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42948</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42948/1522795117092583</guid>
      <description>&lt;p&gt;
Tag 4.7.10
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42947]: Tag 4.8.6</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42947</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42947/1522795111081921</guid>
      <description>&lt;p&gt;
Tag 4.8.6
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42946]: Tag 4.9.5</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 22:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42946</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42946/1522795037185226</guid>
      <description>&lt;p&gt;
Tag 4.9.5
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41057 (Update PHP codebase per WordPress PHP Coding Standards) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 21:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41057#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41057#comment:121/1522792707569655</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by davidakennedy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1522792705000095"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 03 Apr 2018 21:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:82/1522792564644632</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41191/41191.11.diff" title="Attachment '41191.11.diff' in Ticket #41191"&gt;41191.11.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41191/41191.11.diff" title="Download"&gt;â€‹&lt;/a&gt; I've rewritten some of the wording in the dashboard widget. I feel like we don't need to over complicate the details here and is pretty well covered in the external page we link out to. I think it will make users happier if we get to the point and say; upgrade now (please).
&lt;/p&gt;
&lt;p&gt;
Thoughts on this patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41191.11.diff attached to Ticket #41191</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 03 Apr 2018 21:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/41191.11.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/41191.11.diff/1522792444540582</guid>
      <description>&lt;p&gt;
Rewrote some wording and removed unnecessary explanations.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2018-04-03 at 22.33.15.png attached to Ticket #43686</title>
      
        <dc:creator>Vusys</dc:creator>

      <pubDate>Tue, 03 Apr 2018 21:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43686/Screen%20Shot%202018-04-03%20at%2022.33.15.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43686/Screen%20Shot%202018-04-03%20at%2022.33.15.png/1522791231934913</guid>
      <description>&lt;p&gt;
console errors
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>2018-04-03 22.30.25.gif attached to Ticket #43686</title>
      
        <dc:creator>Vusys</dc:creator>

      <pubDate>Tue, 03 Apr 2018 21:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43686/2018-04-03%2022.30.25.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43686/2018-04-03%2022.30.25.gif/1522791125231717</guid>
      <description>&lt;p&gt;
demo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43686 (Shortcodes containing asterisks may create invalid regex breaking the ...) created</title>
      
        <dc:creator>Vusys</dc:creator>

      <pubDate>Tue, 03 Apr 2018 21:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43686</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43686/1522791100514011</guid>
      <description>&lt;p&gt;
Despite not being a reserved character an asterisk in a shortcode followed by another character will generate invalid regex which breaks the editor.
&lt;/p&gt;
&lt;p&gt;
This code reproduces the issue:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;'*one'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*two'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$bullet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;add_shortcode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'*'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$bullet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$bullet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'oh no '&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$bullet&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Attached is a gif showing the editor tabs not working correctly along with the error in the console in Chrome 65 and Firefox 59.
&lt;/p&gt;
&lt;p&gt;
I know it's unconventional to use an asterisk in a shortcode, but my use case is porting a legacy CMS that used BBCode into WordPress while trying to keep as much of the original formatting possible for old content.
&lt;/p&gt;
&lt;p&gt;
This is an issue with all plugins deactivated (except for the above code) using the Twenty Seventeen theme.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43685 (wp post meta missing options) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 21:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43685#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43685#comment:1/1522790756974161</guid>
      <description>invalid: &lt;p&gt;
Hello @apb1963, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. For WP-CLI please take a look at &lt;a class="ext-link" href="http://wp-cli.org/#support"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wp-cli.org/#support&lt;/a&gt;. Thanks!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43685 (wp post meta missing options) created</title>
      
        <dc:creator>apb1963</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:47:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43685</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43685/1522788445440249</guid>
      <description>&lt;p&gt;
Not sure if this is the right place, however...
&lt;/p&gt;
&lt;p&gt;
The following command needs an option that eliminates the ASCII graphics, such as a --porcelain option, and/or --field option (singular).  Only --fields (plural) is valid and brings the graphics with it. --format=ids is also missing/broken.
&lt;/p&gt;
&lt;p&gt;
In short, in the following example, I need the output of the wp post meta list to be "168", without quotes - nothing more, nothing less.
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp post meta list 203 --keys=_thumbnail_id --field=meta_value
Error: Parameter errors:
 unknown --field parameter
Did you mean '--fields'?
wp post meta list 203 --keys=_thumbnail_id --fields=meta_value
+------------+
| meta_value |
+------------+
| 168        |
+------------+
wp post meta list 203 --keys=_thumbnail_id --fields=meta_value --format=ids
PHP Catchable fatal error:  Object of class stdClass could not be converted to string in phar:///data/local/bin/wp/php/WP_CLI/Formatter.php on line 139
Catchable fatal error: Object of class stdClass could not be converted to string in phar:///data/local/bin/wp/php/WP_CLI/Formatter.php on line 139
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [42945]: Bump 3.7 branch to version 3.7.26</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:30:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42945</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42945/1522787439008372</guid>
      <description>&lt;p&gt;
Bump 3.7 branch to version 3.7.26
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42944]: Bump 3.8 branch to version 3.8.26</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42944</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42944/1522787425180532</guid>
      <description>&lt;p&gt;
Bump 3.8 branch to version 3.8.26
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42943]: Bump 3.9 branch to version 3.9.24</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:30:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42943</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42943/1522787411246866</guid>
      <description>&lt;p&gt;
Bump 3.9 branch to version 3.9.24
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42942]: Bump 4.0 branch to version 4.0.23</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:29:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42942/1522787398633160</guid>
      <description>&lt;p&gt;
Bump 4.0 branch to version 4.0.23
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42941]: Bump 4.1 branch to version 4.1.23</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42941/1522787384469718</guid>
      <description>&lt;p&gt;
Bump 4.1 branch to version 4.1.23
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42940]: Bump 4.2 branch to version 4.2.20</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42940</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42940/1522787360129633</guid>
      <description>&lt;p&gt;
Bump 4.2 branch to version 4.2.20
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42939]: Bump 4.3 branch to version 4.3.16</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42939</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42939/1522787267054062</guid>
      <description>&lt;p&gt;
Bump 4.3 branch to version 4.3.16
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42938]: Bump 4.4 branch to version 4.4.15</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42938</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42938/1522787248702241</guid>
      <description>&lt;p&gt;
Bump 4.4 branch to version 4.4.15
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42937]: Bump 4.5 branch to version 4.5.14</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42937</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42937/1522787228068811</guid>
      <description>&lt;p&gt;
Bump 4.5 branch to version 4.5.14
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42936]: Bump 4.6 branch to version 4.6.11</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:26:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42936</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42936/1522787212130811</guid>
      <description>&lt;p&gt;
Bump 4.6 branch to version 4.6.11
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42935]: Bump 4.7 branch to version 4.7.10</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:26:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42935</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42935/1522787162978841</guid>
      <description>&lt;p&gt;
Bump 4.7 branch to version 4.7.10
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42934]: Bump 4.8 branch to version 4.8.6</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:22:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42934</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42934/1522786927030466</guid>
      <description>&lt;p&gt;
Bump 4.8 branch to version 4.8.6
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42933]: Bump 4.9 branch to version 4.9.5</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:16:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42933</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42933/1522786591758363</guid>
      <description>&lt;p&gt;
Bump 4.9 branch to version 4.9.5
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4752 (Parse error: syntax error, unexpected '}' in import.php on line 19) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 20:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4752#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4752#comment:8/1522785713538328</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #cli by schlessera. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/cli/p1522785711000425"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43572 (Bundled Themes: Bump version number and update changelog in Twenty ...) updated</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Tue, 03 Apr 2018 19:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43572#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43572#comment:7/1522785451120096</guid>
      <description>&lt;p&gt;
Just following up here to say I've updated the changelog: &lt;a class="ext-link" href="https://codex.wordpress.org/Twenty_Seventeen_Theme_Changelog#Version_1.5"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://codex.wordpress.org/Twenty_Seventeen_Theme_Changelog#Version_1.5&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41242 (Image crop not working in mobile screen.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 19:50:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41242#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41242#comment:34/1522785022176799</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42932" title="Media: Update minified version of imgAreaSelect after [42874].
Adds ..."&gt;42932&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Update minified version of imgAreaSelect after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42874" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;[42874]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds imgAreaSelect to the uglify grunt process.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42930" title="Media: Update minified version of imgAreaSelect after [42874].
Adds ..."&gt;[42930]&lt;/a&gt; to the 4.9 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42932]: Media: Update minified version of imgAreaSelect after [42874].  Adds ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 19:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42932</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42932/1522785021685519</guid>
      <description>&lt;p&gt;
Media: Update minified version of imgAreaSelect after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42874" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;[42874]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Adds imgAreaSelect to the uglify grunt process.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42930" title="Media: Update minified version of imgAreaSelect after [42874].
Adds ..."&gt;[42930]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43500 (Improve JS Documentation: gallery-add.js) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 19:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43500#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43500#comment:3/1522784892470826</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42931" title="Media: Update built files after [42798].
See #43500."&gt;42931&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Update built files after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42798" title="Docs: Improve JSDoc for ..."&gt;[42798]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43500" title="#43500: defect (bug): Improve JS Documentation: gallery-add.js (reopened)"&gt;#43500&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42931]: Media: Update built files after [42798].  See #43500.</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 19:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42931</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42931/1522784891983497</guid>
      <description>&lt;p&gt;
Media: Update built files after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42798" title="Docs: Improve JSDoc for ..."&gt;[42798]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43500" title="#43500: defect (bug): Improve JS Documentation: gallery-add.js (reopened)"&gt;#43500&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41242 (Image crop not working in mobile screen.) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 19:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41242#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41242#comment:33/1522784739598887</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42930" title="Media: Update minified version of imgAreaSelect after [42874].
Adds ..."&gt;42930&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Update minified version of imgAreaSelect after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42874" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;[42874]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds imgAreaSelect to the uglify grunt process.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42930]: Media: Update minified version of imgAreaSelect after [42874].  Adds ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 19:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42930</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42930/1522784739128466</guid>
      <description>&lt;p&gt;
Media: Update minified version of imgAreaSelect after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42874" title="Media: Fix image cropping on touch screen devices.
* In initCrop, ..."&gt;[42874]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Adds imgAreaSelect to the uglify grunt process.
&lt;/p&gt;
&lt;p&gt;
Props adamsilverstein.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41242" title="#41242: defect (bug): Image crop not working in mobile screen. (closed: fixed)"&gt;#41242&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Apr 2018 18:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442#comment:7/1522779412296279</guid>
      <description>&lt;p&gt;
Looking at 43442.diff, thinking we may be better off doing a custom db query. Updating each comment in a loop would be very ineffective. Perhaps something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wpdb-&amp;gt;query(
    $wpdb-&amp;gt;prepare( "UPDATE $wpdb-&amp;gt;comments SET comment_agent = '', comment_author = %s, comment_author_email = '', comment_author_IP = '0.0.0.0', comment_author_url = '', user_id = 0 WHERE comment_author_email = %s", __( 'Anonymous' ), $email )
);
&lt;/pre&gt;&lt;p&gt;
Of course this will not run any of the actions and filters that run when updating a comment. Thinking that is acceptable since this is a special multi-comments update, not a usual edit-a-comment one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 03 Apr 2018 18:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:30/1522778442045503</guid>
      <description>&lt;p&gt;
My intention/thinking of adding the License/Data information during installation was with the idea:
&lt;/p&gt;
&lt;p&gt;
Since we don't know exactly at the moment what is needed and what is not and what might break updates by reading an informative text of what WordPress sends during updates there is basically a 2 way option, 1] you install it so you're automatically accepting the mentioned or 2] you don't install it.
&lt;/p&gt;
&lt;p&gt;
This might seem harsh and against our friendly community and the whole WP idea etc but hey, it's software at the end of the day and we're talking about regulations from now on. Up until today that's how all installations are working afaic:
&lt;/p&gt;
&lt;p&gt;
1] you either click Next after reading the License &amp;amp; Agreement
2] Cancel ( no install )
3] Install and 'choose' if you want to send out telemetry data.
&lt;/p&gt;
&lt;p&gt;
No 3. is something that we can't seem to figure out at the moment so we're left with 1 + 2 unfortunately.
&lt;/p&gt;
&lt;p&gt;
There's no point of an opt-in for the data gathered during updates atm since nobody is sure about them or at least I haven't seen an 100% definite reply up to now. Even though the above mentioned plugins do exist and do handle it, I wouldn't feel comfortable combining anything into core without being 100% sure. Updates recently broke down, let's try to avoid that from happening again especially with something  privacy-concerning.
&lt;/p&gt;
&lt;p&gt;
If you see it this way then yes 'just an informative' message goes a long way towards being compliant, than  either not being or having broken installations out of the blue.
&lt;/p&gt;
&lt;p&gt;
If the above thoughts seem bold I can assure you that personally I'm the type of guy that doesn't even care what data are gathered and will not even in the future to be totally honest as I don't have anything to hide and I don't mind so my installations will continue to get updates/send data/have telemetry call it whatever :P .
&lt;/p&gt;
&lt;p&gt;
All of this is to actually protect WordPress from users as well not only to give users the options needed :) .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Tue, 03 Apr 2018 17:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:24/1522778264062788</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24672#comment:23" title="Comment 23"&gt;hawaiipersson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a plugin where to enforce the use of its class directly in a theme that would be a question of bad plugin design, rather than a weakness for the extendability in itself.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't understand what you are trying to say here.  If a plugin subclasses &lt;code&gt;WP_Post&lt;/code&gt; how would it use it in theme templates in without conflicting with another plugin that used the same approach?   IOW, what is your use-case for a subclass?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In my opinion plugin authors should never introduce code in the theme that would break the site it the plugin fails or is deactivated. In fact, the high use of custom functions from plugins called in themes is one of the biggest problems with Wordpress today, in my opinion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are thinking of only selected scenarios and selected use-case.  Please understand there are other scenarios and use-cases than the ones you are focused on.
&lt;/p&gt;
&lt;p&gt;
There are very valid scenarios and use-cases where code in the theme should be dependent upon a plugin. Those scenarios are custom &lt;em&gt;"applications"&lt;/em&gt; where themes are developed specifically for a &lt;em&gt;"(typically vertical market) application"&lt;/em&gt; plugin, and complex sites with a lot of custom functionality.  And in post cases the plugin should be a must-use plugin so deactivation is not possible &lt;em&gt;(btw, I don't understand the concept of a plugin "failing"; sounds like a plugin with a bug to me.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
In other words when sites are developed and deployed by professional developers and sysadmins vs. by end users then intertwining themes and plugins is not a concern.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins should be encouraged to only introduce content modifications through filters and action hooks. With other words, even though I understand your concern, I do not believe that this should be dealt with by Wordpress core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is where I am especially confused. You say people &lt;em&gt;"should be encouraged to only introduce content modifications through filters and action hooks"&lt;/em&gt; but then when I suggest adding filters and action hooks to WP_Post you argue that &lt;em&gt;"this should not be dealt with by Wordpress core?"&lt;/em&gt;  Your two statements seem to contradict each other?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Apr 2018 17:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:29/1522776095222302</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:28" title="Comment 28"&gt;DavidAnderson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As with everything else in WordPress, site owners can opt out of this service by using a plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If the intention is to comply with the GDPR, then the GDPR requires explicit informed consent for all PII (which includes all URLs and IP addresses that can eventually be traced to an individual). Opt-in-by-default, and requiring explicit opt-out action, are specifically prohibited.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Think there may be some misunderstanding here. I'm not talking about giving or withholding consent of sending a site's URL to another site (this actually happens every time somebody follows a link on the internet). I'm talking about discontinuing a service that helps to keep a particular website secure.
&lt;/p&gt;
&lt;p&gt;
As mentioned in previous comments, there are specific rules in the GDPR concerning information needed for security reasons. They seem to apply in this case.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I do not work for the WP Foundation and it is not my business...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I do not work for the WP Foundation either. WordPress is an open source project, and everybody here is contributing to it :)
&lt;/p&gt;
&lt;p&gt;
I'll try to explain my point once more:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It will be really foolish to force site owners into making a decision about keeping their websites secure without giving them enough information so they can make an informed decision.
&lt;/li&gt;&lt;li&gt;For that reason think this ticket should focus on providing that information, including what data is sent on update checks, how it is used, and what it would mean for their site if these checks are disabled.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'd also really like to hear a lawyer's opinion on whether domain names and websites IP addresses constitute "personal data" under the GDPR. If anybody knows of any such opinions that are posted somewhere, linking them here would be very helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40948 (Load meta files earlier in `wp-settings.php`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:58:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40948#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40948#comment:16/1522774729611496</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40229 (Add meta_query to wp_site_query) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:46:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40229#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40229#comment:10/1522774010671800</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40229/40229.diff" title="Attachment '40229.diff' in Ticket #40229"&gt;40229.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40229/40229.diff" title="Download"&gt;â€‹&lt;/a&gt; implements meta query functionality in &lt;code&gt;WP_Site_Query&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The implementation itself is trivial and straightforward. It follows mostly how other query classes do it. The orderby-meta functionality deserves an extra look because it's the most complicated part, but the provided tests confirm it works as expected.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;class-wp-meta-query.php&lt;/code&gt; is loaded earlier in &lt;code&gt;wp-settings.php&lt;/code&gt; to allow this functionality early during the multisite bootstrap process. This will fix &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40948" title="#40948: enhancement: Load meta files earlier in `wp-settings.php` (closed: fixed)"&gt;#40948&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Comprehensive tests have been added for the meta query functionality, i.e. one parameterized test with 10 datasets, each testing different behavior.
&lt;/li&gt;&lt;li&gt;Three additional tests have been added to verify that adding/updating/deleting site meta busts the site query cache.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>chrislema</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:100/1522773816829094</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41316#comment:99" title="Comment 99"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the suggestion, @chrislema! You mention people donâ€™t read a lot, but this introduces a lot more text â€” can you walk us through your thought process a bit more?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're right. It absolutely does.
&lt;/p&gt;
&lt;p&gt;
The additional text starts with headers to suggest a process. It's value neutral so as not to scare someone. But also can create a pause so that people don't just blindly click a button.
&lt;/p&gt;
&lt;p&gt;
By putting the button in the second column, we essentially highlight that there's a step one before a step two. Again, it's a way to make sure people are paying attention to the fact that they'll be testing something - which is reinforced by the third column.
&lt;/p&gt;
&lt;p&gt;
Even if they don't read anything but the headers, the layout now helps put their action in context and prepares them for what they're about to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40229.diff attached to Ticket #40229</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40229/40229.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40229/40229.diff/1522773649669513</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41316 (Introduce "Try Gutenberg" callout) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:38:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41316#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41316#comment:99/1522773523758773</guid>
      <description>&lt;p&gt;
Thanks for the suggestion, @chrislema! You mention people donâ€™t read a lot, but this introduces a lot more text â€” can you walk us through your thought process a bit more?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:87/1522772226101872</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #cli by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/cli/p1522772224000203"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42929]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42929</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42929/1522771601249160</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 3.7 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42928]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:06:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42928</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42928/1522771592185324</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 3.8 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42927]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42927</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42927/1522771585118655</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 3.9 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42926]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42926</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42926/1522771578156547</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.0 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42925]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42925</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42925/1522771571399828</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.1 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42924]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42924/1522771564078295</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.2 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42923]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:05:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42923</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42923/1522771556871217</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.3 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42922]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:05:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42922</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42922/1522771550405315</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42921]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42921</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42921/1522771543307503</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.5 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42920]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42920</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42920/1522771536271812</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42919]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42919</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42919/1522771530128203</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42918]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42918</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42918/1522771522886787</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.8 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42917]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 16:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42917</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42917/1522771466005456</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42893" title="Template: Make sure the version string is correctly escaped for use in ..."&gt;[42893]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43586 (Minor UI adjustments to the Author box in the Edit Comment screen) updated</title>
      
        <dc:creator>rhetorical</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:49:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43586#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43586#comment:15/1522770597532049</guid>
      <description>&lt;p&gt;
I updated the padding to the 10px and adjusted the mobile viewport. I tried to match that up closely to the padding on the "quick-editor" comment form.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>author-box-in-mobile-viewport-with-43586.7.diff.jpg attached to Ticket #43586</title>
      
        <dc:creator>rhetorical</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43586/author-box-in-mobile-viewport-with-43586.7.diff.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43586/author-box-in-mobile-viewport-with-43586.7.diff.jpg/1522770529041854</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>43586.7.diff attached to Ticket #43586</title>
      
        <dc:creator>rhetorical</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43586/43586.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43586/43586.7.diff/1522770475690481</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [42916]: Meta: Simplify the delete all meta query in `delete_metadata()`.  ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42916</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42916/1522770073615541</guid>
      <description>&lt;p&gt;
Meta: Simplify the delete all meta query in &lt;code&gt;delete_metadata()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42913" title="Meta: Simplify the delete all meta query in `delete_metadata()`.
"&gt;[42913]&lt;/a&gt; to the 4.5 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42915]: Meta: Simplify the delete all meta query in `delete_metadata()`.  ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42915</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42915/1522770064576087</guid>
      <description>&lt;p&gt;
Meta: Simplify the delete all meta query in &lt;code&gt;delete_metadata()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42913" title="Meta: Simplify the delete all meta query in `delete_metadata()`.
"&gt;[42913]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42914]: Meta: Simplify the delete all meta query in `delete_metadata()`.  ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:40:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42914/1522770058293029</guid>
      <description>&lt;p&gt;
Meta: Simplify the delete all meta query in &lt;code&gt;delete_metadata()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42913" title="Meta: Simplify the delete all meta query in `delete_metadata()`.
"&gt;[42913]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42913]: Meta: Simplify the delete all meta query in `delete_metadata()`. </title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42913/1522769981385505</guid>
      <description>&lt;p&gt;
Meta: Simplify the delete all meta query in &lt;code&gt;delete_metadata()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42912]: HTTP: Don't treat `localhost` as same host by default.  Merge of ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:34:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42912/1522769699526467</guid>
      <description>&lt;p&gt;
HTTP: Don't treat &lt;code&gt;localhost&lt;/code&gt; as same host by default.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42894" title="HTTP: Don't treat `localhost` as same host by default.
"&gt;[42894]&lt;/a&gt; to the 4.5 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42911]: HTTP: Don't treat `localhost` as same host by default.  Merge of ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:34:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42911/1522769692500282</guid>
      <description>&lt;p&gt;
HTTP: Don't treat &lt;code&gt;localhost&lt;/code&gt; as same host by default.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42894" title="HTTP: Don't treat `localhost` as same host by default.
"&gt;[42894]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42910]: HTTP: Don't treat `localhost` as same host by default.  Merge of ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42910/1522769685145784</guid>
      <description>&lt;p&gt;
HTTP: Don't treat &lt;code&gt;localhost&lt;/code&gt; as same host by default.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42894" title="HTTP: Don't treat `localhost` as same host by default.
"&gt;[42894]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42909]: HTTP: Don't treat `localhost` as same host by default.  Merge of ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42909/1522769678791447</guid>
      <description>&lt;p&gt;
HTTP: Don't treat &lt;code&gt;localhost&lt;/code&gt; as same host by default.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42894" title="HTTP: Don't treat `localhost` as same host by default.
"&gt;[42894]&lt;/a&gt; to the 4.8 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42908]: HTTP: Don't treat `localhost` as same host by default.  Merge of ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42908/1522769659471661</guid>
      <description>&lt;p&gt;
HTTP: Don't treat &lt;code&gt;localhost&lt;/code&gt; as same host by default.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42894" title="HTTP: Don't treat `localhost` as same host by default.
"&gt;[42894]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42907]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42907/1522769384639992</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 3.7 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42906]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42906/1522769377167645</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 3.8 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42905]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42905/1522769370488225</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 3.9 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42904]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42904/1522769361955739</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.0 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42903]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:29:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42903/1522769352978256</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.1 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42902]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:29:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42902/1522769345501661</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.2 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42901]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42901/1522769338697826</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.3 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42900]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42900/1522769330462283</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.4 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42899]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42899/1522769323079188</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.5 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42898]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42898/1522769317953517</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42897]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42897/1522769310346977</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42896]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:28:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42896</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42896/1522769301642828</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.8 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:14/1522769183087381</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43620#comment:13" title="Comment 13"&gt;rianrietveld&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for the review and the suggestions!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Above the title there is an explanation about this page and how it is generated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good idea imho.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In the content area a good default text is added on creation of the page (maybe reviewed per country?). Site owners can edit this to their liking.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, the plan is to include the "default" text from WordPress when a new page is created. The site owners will also have the option to select an existing privacy policy page when they already have one.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
At the bottom of the content there will an auto generated list of links, to all the Privacy Policy pages of the plugins on their sites. That way the page doesn't have to be updated when the plugins update their statement.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thought of doing this but the problem will be that most privacy policies on plugins websites will not be translated. I'm not sure if that's acceptable. If it is, that'd be the easiest solution. Technically we can even add a "dynamic" list of links when outputting the privacy policy page on the front-end. Then the policy won't need to be edited at all when plugins are added, deleted or updated.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also: in the construction above content managers can edit the policies of the plugins, which may cause problems for the plugins if they are altered wrongly. By referring to a page of the plugin, the responsibility and text stays with the plugin owner.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The site owners should always be responsible for their sites policies. We'll be getting into very murky waters if plugins "inherit" any legal responsibilities from the sites they are used on.
&lt;/p&gt;
&lt;p&gt;
The idea for the above postbox is that plugins should add there "information that may need to be added to the site's policy", not completed individual policies for each plugin. Then the site owner will be able to use that information in creating their own privacy policy, and hopefully seek some legal advice about the whole policy content.
&lt;/p&gt;
&lt;p&gt;
I'm also thinking if we should move the postbox under the editor and have a link that will scroll to it (and focus it) in the explanation above the title. It seems it is going to be under the editor in Gutenberg too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42895]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:21:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42895/1522768918865202</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42892" title="Login: Use `wp_safe_redirect()` when redirecting the login page if ..."&gt;[42892]&lt;/a&gt; to the 4.9 branch.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43586 (Minor UI adjustments to the Author box in the Edit Comment screen) updated</title>
      
        <dc:creator>rhetorical</dc:creator>

      <pubDate>Tue, 03 Apr 2018 15:08:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43586#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43586#comment:14/1522768106365290</guid>
      <description>&lt;p&gt;
@birgire thanks for the comments.
&lt;/p&gt;
&lt;p&gt;
I believe you're right about the padding it should be 10px, I measured the padding on the form and 10 would align it perfectly left with the label.
&lt;/p&gt;
&lt;p&gt;
In regards to the overall padding, textfields have a width of 98 percent, in general they would never meet up with the right padding. Should I make a special exception for this form only just so they match up with the 10px margin?
&lt;/p&gt;
&lt;p&gt;
I'll also take a look at the mobile viewport, forgot about that one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42894]: HTTP: Don't treat `localhost` as same host by default. </title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:59:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42894/1522767584850403</guid>
      <description>&lt;p&gt;
HTTP: Don't treat &lt;code&gt;localhost&lt;/code&gt; as same host by default.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [42893]: Template: Make sure the version string is correctly escaped for use in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42893</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42893/1522767528874115</guid>
      <description>&lt;p&gt;
Template: Make sure the version string is correctly escaped for use in attributes.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:28/1522767379294513</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress doesn't harvest or scrape
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In that section, I was responding to your hypothetical last sentence, not to the specific issue in this ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As with everything else in WordPress, site owners can opt out of this service by using a plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If the intention is to comply with the GDPR, then the GDPR requires explicit informed consent for all PII (which includes all URLs and IP addresses that can eventually be traced to an individual). Opt-in-by-default, and requiring explicit opt-out action, are specifically prohibited.
&lt;/p&gt;
&lt;p&gt;
(Which, interestingly, makes it like the wordpress.org plugin directory's rules for remote HTTP requests by plugins).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'll repeat myself in saying that IMHO the focus here should be about informing and educating the site owners
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You speak as if the GDPR is modelled upon, or at least fundamentally similar in intention to, previous data protection regimes. It isn't. By design, it's radically and intentionally different, whether we like it or not. I do not work for the WP Foundation and it is not my business to say whether the WP Foundation should comply with EU laws or not. Though, if the final decision is to not comply, or to comply with what the WP Foundation wishes the GDPR had been (rather than what it actually is), this will certainly cause a lot of problems (hopefully fixable by plugins, but requiring the community to specifically research/learn and implement this site-by-site would be bad).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:27/1522766923002400</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:26" title="Comment 26"&gt;DavidAnderson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So, yes, if 1) you are an entity subject to the GDPR (like the WP Foundation is), and if 2) you harvest and process data that you scrape from a website...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WordPress doesn't harvest or scrape any data from any website. WordPress provides a service to update the software people and companies use to power their websites.
&lt;/p&gt;
&lt;p&gt;
Anyway, this ticket is about sending information about the site, WordPress (the software) and the hosting environment (the server) when checking for updates. As with everything else in WordPress, site owners can opt out of this service by using a plugin. I personally think this is a very bad idea as that will make their sites vulnerable to attacks. But people are free to make their own decisions.
&lt;/p&gt;
&lt;p&gt;
I'll repeat myself in saying that IMHO the focus here should be on informing and educating the site owners about what data is used when checking for updates, not forcing them to choose something when most of them cannot make an "informed decision".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42892]: Login: Use `wp_safe_redirect()` when redirecting the login page if ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42892/1522765876145247</guid>
      <description>&lt;p&gt;
Login: Use &lt;code&gt;wp_safe_redirect()&lt;/code&gt; when redirecting the login page if forced to use HTTPS.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43587 (UI adjustments to the Status box in the Edit Comment screen) updated</title>
      
        <dc:creator>nfmohit</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43587#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43587#comment:12/1522765810523826</guid>
      <description>&lt;p&gt;
@birgire Whoops! I did? Yeah looks like I did. Sorry about that, it was a mistake. Thank you so much for reopening the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39318 (Assign a theme when creating a site (Multisite)) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39318#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39318#comment:7/1522764220506142</guid>
      <description>&lt;p&gt;
I just reviewed &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39318/39318.2.patch" title="Attachment '39318.2.patch' in Ticket #39318"&gt;39318.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39318/39318.2.patch" title="Download"&gt;â€‹&lt;/a&gt;. Some notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Let's not rely on &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13743" title="#13743: enhancement: Ability to choose a network default theme (reopened)"&gt;#13743&lt;/a&gt; here. It's not necessary for this feature to work, we can use &lt;code&gt;WP_DEFAULT_THEME&lt;/code&gt; for now. Once &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/13743" title="#13743: enhancement: Ability to choose a network default theme (reopened)"&gt;#13743&lt;/a&gt; gets ready, we simply need to update the code.
&lt;/li&gt;&lt;li&gt;If the theme requested doesn't exist (see line 68), nothing should change from the current behavior. I recommend you wrap all the following code that eventually updates the &lt;code&gt;$meta&lt;/code&gt; array into a conditional that only runs if &lt;code&gt;$theme-&amp;gt;exists()&lt;/code&gt;. In other words: Keep &lt;code&gt;$meta&lt;/code&gt; the &lt;code&gt;public&lt;/code&gt; flag only in case the requested theme doesn't exist, only set &lt;code&gt;stylesheet&lt;/code&gt; and &lt;code&gt;template&lt;/code&gt; if it &lt;em&gt;does&lt;/em&gt; exist. Alternatively, we might wanna &lt;code&gt;wp_die()&lt;/code&gt; with an error, but since providing the theme is not crucial, I'm not sure we need to do that.
&lt;/li&gt;&lt;li&gt;A minor suggestion: Your patch is not wrong there at all, but in line 304 and following, I think it's better readable to not use &lt;code&gt;printf()&lt;/code&gt; and instead output HTML directly. Same for the select tag itself, it should not be echoed, but directly outputted as HTML.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43572 (Bundled Themes: Bump version number and update changelog in Twenty ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 14:00:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43572#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43572#comment:6/1522764038129166</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1522764036000052"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Tue, 03 Apr 2018 13:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:26/1522763822724960</guid>
      <description>&lt;p&gt;
@azaozz I'm not sure if your thinking is that the GDPR couldn't possibly require anything onerous, and that if it seems to imply anything onerous, then we must be reading it wrongly? On the contrary... (as I said, WHOIS is likely to soon end as far as EU citizens' data is concerned).... being onerous is not an unanticipated side-effect; it's *intended* to be a revolution, and to place heavy burdens on data processors, to force them both to not process anything that they really don't need to, and to make sure that what they do process, they do according to strict and onerous rules (which is why there's been 2 years for implementation since its requirements were published). N.B. I'm neither defending nor opposing the GDPR, or the work that compliance with it entails; just trying to be accurate about what the reality of the situation.
&lt;/p&gt;
&lt;p&gt;
So, yes, if 1) you are an entity subject to the GDPR (like the WP Foundation is), and if 2) you harvest and process data that you scrape from a website and connect it in your data store in such a way that it can, through direct or indirect means, be identified with an individual EU citizen (e.g. the website has an 'About' page that identifies a specific individual), then indeed the GDPR *does* bear upon that. "But that's a really onerous requirement" doesn't matter; the GDPR's POV on that - for better or for worse, whether I like it or not - is "yes, that's what we wanted to accomplish, it seems like things are going well."
&lt;/p&gt;
&lt;p&gt;
N.B. The wording of the GDPR concerning being 'associated' isn't that something is associated in some or any general way. It's about what data you *store* and/or *process*. If you don't store the URL (or anything else that comes into the PII category), then I believe you can process the content of any website to your heart's content without any GDPR implications.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Apr 2018 13:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:25/1522763186892916</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:24" title="Comment 24"&gt;DavidAnderson&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Under the *GDPR's* definition, it is not the case that some data is 'personal' and other data isn't. *All* linked data is personal as soon as *any* of it can be _associated_ with an _identifiable_ person - see: &lt;a href="https://core.trac.wordpress.org/ticket/43492#comment:14"&gt;https://core.trac.wordpress.org/ticket/43492#comment:14&lt;/a&gt; . (And things like whether it can be obtained elsewhere or not is not relevant).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, I understand. That's why I asked which of the above data is considered "personal".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's not clear to me that, if the URL was omitted, there'd be anything to make it personal data, and if the data wouldn't then be covered by the GDPR's anonymization provisions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure that's possible. Many sites are hosted on shared servers and share the same IP address.
&lt;/p&gt;
&lt;p&gt;
However, if domain names are considered "personal data" under GDPR, that means &lt;strong&gt;everything&lt;/strong&gt; on the Internet is "personal data" as everything is associated with a domain name :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20491 (Introduce some JavaScript i18n functions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 13:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20491#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20491#comment:86/1522761621545804</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-js by schlessera. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1522761618000226"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Tue, 03 Apr 2018 13:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:24/1522760979189886</guid>
      <description>&lt;p&gt;
@azaozz I think you might be using a 'personal' definition of 'personal data'. Under the *GDPR's* definition, it is not the case that some data is 'personal' and other data isn't. *All* linked data is personal as soon as *any* of it can be _associated_ with an _identifiable_ person - see: &lt;a href="https://core.trac.wordpress.org/ticket/43492#comment:14"&gt;https://core.trac.wordpress.org/ticket/43492#comment:14&lt;/a&gt; . (And things like whether it can be obtained elsewhere or not is not relevant).
&lt;/p&gt;
&lt;p&gt;
The key from a GDPR POV, as I understand it, is that the GDPR doesn't offer exceptions for things like "if the user decided to put their name in the URL or on the 'About' page of their website, that's their problem". It's reasonably forseeable that many URLs sent in updates checks are "identifiable" with a person (in distinction to, e.g. if they decided to put it in the name of a customised plugin); generally, the GDPR's rules all apply *without any distinction based upon how you obtained that data* (or whether it was already public by some other means, etc.). These attributes are the deliberate intention of the GDPR; it's not loose wording or a mistake; that result is exactly what they are trying to achieve.
&lt;/p&gt;
&lt;p&gt;
N.B. WHOIS may be killed by GDPR, according to many news sources.
&lt;/p&gt;
&lt;p&gt;
It's not clear to me that, if the URL was omitted, there'd be anything to make it personal data, and if the data wouldn't then be covered by the GDPR's anonymization provisions.
&lt;/p&gt;
&lt;p&gt;
Update: &lt;a class="ext-link" href="https://medium.com/@subsign/google-analytics-and-gdpr-compliance-3fad792babf5"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://medium.com/@subsign/google-analytics-and-gdpr-compliance-3fad792babf5&lt;/a&gt; says that the GDPR considers an IP address as PII (personally identifiable information). That makes sense if the GDPR's "indirectly" (for methods of identifying) can include non-public things (e.g. a hosting company provides assistance with turning IP address + plugin combinations back into a website and thus into a person (though probably with just the IP address and the site install info anyone could do that anyway via using the various public reverse "what is hosted on this IP?" lookup tools)).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 03 Apr 2018 13:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:51/1522760596434127</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43055#comment:49" title="Comment 49"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
See &lt;em&gt;option 3&lt;/em&gt; in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43055#comment:3" title="Comment 3"&gt;comment:3&lt;/a&gt;, I think there more in-depth discussion in Slack at the time though I'd have to double check
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm suggesting something more radical: eliminating the build folder, moving all js and css files outside src.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 13:01:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:50/1522760480407037</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-js by aduth. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1522760478000353"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Apr 2018 12:53:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:23/1522760028473863</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43492#comment:22" title="Comment 22"&gt;idea15&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We've already established that the dataset sent back by telemetry checks (&lt;a class="ext-link" href="https://github.com/gdpr-compliance/info/blob/master/Synched-info.md"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/gdpr-compliance/info/blob/master/Synched-info.md&lt;/a&gt;) constitutes personal data.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is generally data about WordPress (the software) and the hosting company (the server). For clarity, could you point out which data is considered "personal"? For example, what is personal in the "core update" check:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Site URL - freely available from the domain registry
&lt;/li&gt;&lt;li&gt;Site IP address (this is the server's IP address, not a "personal" address of any of the site's visitors) - server/hosting company info
&lt;/li&gt;&lt;li&gt;WordPress version
&lt;/li&gt;&lt;li&gt;PHP version - server/hosting company info
&lt;/li&gt;&lt;li&gt;MySQL version - server/hosting company info
&lt;/li&gt;&lt;li&gt;Locale
&lt;/li&gt;&lt;li&gt;Number of sites (i.e., on a multisite install) (not stored)
&lt;/li&gt;&lt;li&gt;Number of users (not stored)
&lt;/li&gt;&lt;li&gt;Whether multisite is enabled or not
&lt;/li&gt;&lt;li&gt;On Multisite installs, the URL of the parent blog (i.e., the parent blog of pento.blog is wordpress.com)
&lt;/li&gt;&lt;li&gt;Initial DB version (corresponds with the version of WordPress that was initially installed for this site) - this is the same as "WordPress version" above
&lt;/li&gt;&lt;li&gt;Report data on whether a site updated successfully or not
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Think we have touched an interesting question here: is the information about an internet site "personal data"? This is not information about who owns the site, who made it, who pays for it, who visits the site, etc. If we were sending the admin's email address to wp.org when checking for updates (which BTW would be nice in cases when an update fails), I'd agree that should be opt-in.
&lt;/p&gt;
&lt;p&gt;
I think that the focus here should be about informing and educating the site owners about what data is used when checking for updates, not forcing them to choose something when most of them cannot make an "informed decision" about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43658 (Media attachment filter drop-down mime types in grid mode is not ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 03 Apr 2018 12:43:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43658#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43658#comment:3/1522759382823408</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@itzmekhokan thanks for the bug report and patch!
&lt;/p&gt;
&lt;p&gt;
Overall your patch looks good and I see the issue you are trying to resolve. Can you please provide the code snippet you are using to alter the dropdown for testing? Also, it would be nice to add a a unit test confirming the filter works as expected and changes the return from &lt;code&gt;wp_enqueue_media&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
One small coding standards correction, this line is missing some whitespace before/after brackets: &lt;code&gt;unset($mimeTypes[$mime_type]); &lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43684 (append blank line in front of a table when switching from text to ...) created</title>
      
        <dc:creator>max345</dc:creator>

      <pubDate>Tue, 03 Apr 2018 12:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43684</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43684/1522757653834734</guid>
      <description>&lt;p&gt;
"&amp;amp;nbsp;" is appened in front of a table when switching from text editor to visual editor if the cursor is at the begining of the textarea or the textarea doesn't have focus.
&lt;/p&gt;
&lt;p&gt;
To reproduce this bug, create a new post, choose tab "text editor", add the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;table&amp;gt;
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;hello&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Then save draft and change to "visual editor".
&lt;/p&gt;
&lt;p&gt;
Now the table has a blank line above and if you return to text editor you see this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;amp;nbsp;
&amp;lt;table&amp;gt;
&amp;lt;tbody&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td&amp;gt;hello&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This bug happens in 4.9.x, not in 4.8.5.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43208 (Separate setting validation from sanitization) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 11:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43208#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43208#comment:6/1522755141646772</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43208/43208.5.diff" title="Attachment '43208.5.diff' in Ticket #43208"&gt;43208.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43208/43208.5.diff" title="Download"&gt;â€‹&lt;/a&gt; makes the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fix minor bug in &lt;code&gt;register_setting()&lt;/code&gt; where the count of arguments passed to the filter was wrong prior.
&lt;/li&gt;&lt;li&gt;Only call &lt;code&gt;validate_option()&lt;/code&gt; in Customizer if the customize setting is an actual option, NOT part of a multidimensional array option (a new utility method &lt;code&gt;is_multidimensional()&lt;/code&gt; has been introduced for that).
&lt;/li&gt;&lt;li&gt;Call &lt;code&gt;validate_option()&lt;/code&gt; before calling &lt;code&gt;update_option()&lt;/code&gt; in the Customizer, and do not save if errors occur.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The latter two changes above ensure that options in the Customizer are validated as expected. We could go even further if we wanted to and even validate multidimensional option settings. That would require us to call &lt;code&gt;validate_option()&lt;/code&gt; with the whole root value, with the actual value being part of the array (which could happen with the &lt;code&gt;multidimensional_replace()&lt;/code&gt; method). However, since all of this logic needs to happen in the &lt;code&gt;WP_Customize_Manager&lt;/code&gt; as well, we'd need to make the &lt;code&gt;get_root_value()&lt;/code&gt; and &lt;code&gt;multidimensional_replace()&lt;/code&gt; methods public, which would be ugly. On the other hand, the requirement to have duplicate logic here is ugly already anyway. :/
&lt;/p&gt;
&lt;p&gt;
Pinging @johnjamesjacoby for general feedback and @westonruter for the Customizer part specifically.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43208.5.diff attached to Ticket #43208</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 03 Apr 2018 11:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43208/43208.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43208/43208.5.diff/1522755063887715</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43587 (UI adjustments to the Status box in the Edit Comment screen) reopened</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 03 Apr 2018 11:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43587#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43587#comment:11/1522754874780204</guid>
      <description>&lt;p&gt;
@nfmohit I reopen the ticket, looks like you accidentally closed it as invalid ;-)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43682 (Document $relative_file, $stylesheet global in wp_print_theme_file_tree()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 03 Apr 2018 11:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43682#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43682#comment:2/1522754416656260</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43675 (UI adjustments for comments and posts timestamp inputs . Make the ...) updated</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Tue, 03 Apr 2018 10:38:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43675#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43675#comment:3/1522751891523428</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43675.diff attached to Ticket #43675</title>
      
        <dc:creator>jainnidhi</dc:creator>

      <pubDate>Tue, 03 Apr 2018 10:37:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43675/43675.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43675/43675.diff/1522751844667643</guid>
      <description>&lt;p&gt;
I've fixed the alignment in this patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 03 Apr 2018 10:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:62/1522751603902262</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:59" title="Comment 59"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the key thing we need to get at is defining what an "autosave" is.
&lt;/p&gt;
&lt;p&gt;
To me, the basic logic flow seems something like:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User starts editing: this creates a sort of "future revision" that they're working on, forked from the original post
&lt;/li&gt;&lt;li&gt;User makes some changes: this updates the "future revision" that they're working on
&lt;/li&gt;&lt;li&gt;User hits save: this "commits" the "future revision", and saves the original post
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
...
IMO we need to get a concrete mental model of how this works, independent of the actual internal behaviour.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. The current (non-API) logic is:
Save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post (a post is always edited as we start with an auto-draft).
&lt;/li&gt;&lt;li&gt;User clicks Save.
&lt;/li&gt;&lt;li&gt;The post is updated in the db.
&lt;/li&gt;&lt;li&gt;At the same time a revision of the post is auto-created with identical content.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
When saving, the post is always updated and an identical revision is always created. Note that revisions (including autosave revisions) also provide an "audit trail". That's another reason revisions are not editable directly by the users.
&lt;/p&gt;
&lt;p&gt;
Auto-save:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User edits the post.
&lt;/li&gt;&lt;li&gt;Periodically the client checks for changes. If there are any, the client saves the post.
&lt;/li&gt;&lt;li&gt;The server has different logic for this save:
&lt;ul&gt;&lt;li&gt;If the post is a draft, it is updated in the db without creating another revision.
&lt;/li&gt;&lt;li&gt;If the post is a draft but the post author is different than the current user, the post is not updated and a revision is created.
&lt;/li&gt;&lt;li&gt;If the post is published a revision is created without updating the post.
&lt;/li&gt;&lt;li&gt;When creating a revision following the above logic, if an autosaved revision already exists, it is updated instead of creating another autosaved revision. Additionally if the post content is identical to the new content that is being auto-saved, the previous autosave revision is deleted to prevent having a redundant revision (i.e. if the update of the previous autosaved revision will make it identical to the current post, there is no need of it).
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
When auto-saving the post may be updated (most common case), or a revision may be created, updated or deleted.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The flow I'm thinking would be something like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User starts editing: &lt;code&gt;POST /wp/v2/posts/{id}/revisions&lt;/code&gt; creates a new "future revision"
&lt;/li&gt;&lt;li&gt;User makes some changes: &lt;code&gt;PUT /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt; updates this "future revision"
&lt;/li&gt;&lt;li&gt;User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt; commits the "future revision"
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
This differs a lot from the current workflow. Generally when auto-saving in any app (not WP), the actual item is being updated. In WP the logic is more complex as we have revisions and states, draft vs. published. If we create and update a revision directly instead of updating the current item, it will be unexpected.
&lt;/p&gt;
&lt;p&gt;
This will generally mean that a post will always have an autosaved revision. That revision will usually be more recent than the post content, and the user will have to manually "restore" that autosave revision before continuing to edit. That's not a good UX :) This can happen now too, but is relatively rare.
&lt;/p&gt;
&lt;p&gt;
I don't mind changing how saving and auto-saving works in WP, but we'll need to come up with a nice workflow. Unsure if now is the best time as this ticket is urgent, but if you think we can manage it in the next 2-3 days, I'm all for trying :)
&lt;/p&gt;
&lt;p&gt;
Also, the part: "User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt;" would be an actual save, i.e. &lt;code&gt;POST /wp/v2/posts/{id}&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not sure the current behaviour in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/43316.12.diff" title="Attachment '43316.12.diff' in Ticket #43316"&gt;43316.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/43316.12.diff" title="Download"&gt;â€‹&lt;/a&gt; makes sense though; you POST to /autosaves, which updates the actual post?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, the auto-saving logic is more complex. It may update a draft post without creating a revision. See the above description.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I am -1 on this "detect how much has changed" idea; that seems like a pretty fundamental change, and not one that we should make in the context of this issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a "disaster recovery" for a rare edge case that was planned for the current (non-API) autosave too. We can remove it if need be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43683 (add_form_fields &amp; edit_form_fields adding order.) closed</title>
      
        <dc:creator>basvandijkk</dc:creator>

      <pubDate>Tue, 03 Apr 2018 10:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43683#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43683#comment:1/1522751281101843</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43683 (add_form_fields &amp; edit_form_fields adding order.) created</title>
      
        <dc:creator>basvandijkk</dc:creator>

      <pubDate>Tue, 03 Apr 2018 10:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43683</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43683/1522749971238426</guid>
      <description>&lt;p&gt;
Whenever you use the following action:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'*custom_taxonomy*_add_form_fields'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The content gets printed after all of the other category fields.
But when using the following action:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'*custom_taxonomy*_edit_form_fields'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The content gets printed before all of the other category fields. Its not a major bug/mistake but it woud definitely be an improvement if the same position would be used for both the actions.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Steps to reproduce:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make a custom taxonomy.
&lt;/li&gt;&lt;li&gt;Use the actions "*custom_taxonomy*_add_form_fields" &amp;amp; "*custom_taxonomy*_edit_form_fields" and print something within.
&lt;/li&gt;&lt;li&gt;View the position of the printed text when creating a new category(within custom taxonomy ofcourse).
&lt;/li&gt;&lt;li&gt;View the position of the printed text when editing an existing category(within custom taxonomy ofcourse).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Expected output:&lt;/strong&gt;
Having both actions being executed before OR after all of the form existing(by default) fields.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43587 (UI adjustments to the Status box in the Edit Comment screen) closed</title>
      
        <dc:creator>nfmohit</dc:creator>

      <pubDate>Tue, 03 Apr 2018 09:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43587#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43587#comment:10/1522748057129468</guid>
      <description>invalid: &lt;p&gt;
Thank you so much for checking the patch out @birgire !
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
@afercia suggested here (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2" title="#2: defect (bug):  posting per xmlrpc - works, but gives errmsgs ala &amp;#34;invalid xml&amp;#34; (closed: fixed)"&gt;#2&lt;/a&gt;) that we should display the radio buttons by default and not use the extra "Edit" link to display it, for accessibility reasons.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm sorry I completely misunderstood that part. I initially intended to make the comment status radio buttons mimic the post status selection as we can see in the posts and pages, but after @afercia's comment, I went with the radio buttons instead of the selection. Didn't realize we were referring to the "Edit" toggle link. My bad. I have removed that in this patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43587/43587.3.diff" title="Attachment '43587.3.diff' in Ticket #43587"&gt;43587.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43587/43587.3.diff" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
On that screenshot I also added an extra left margin on the holders of the form inputs. What do you think? (I opened the timestamp edit, just to better show the alignment there)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I really like the idea of pushing the form inputs a little to the right aligning them with their section headers, but I haven't added it in the patch yet as I think we require more opinions on this. I believe if we are going to implement this, it'll also apply to the similar sections like post status and visibility selection in posts and pages, as we are trying to keep the layout consistent between comments and post types. If everyone is okay with it, I'll update my patch with that applied. Opinions?
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Do we need the bold status text, shown in the screenshot? It could help to see the previous status, if we've changed it (without saving). It's also in-line with e.g. the timestamp layout.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I really prefer keeping the bold text showing the current comment status, it is static now though and doesn't change when a different status is selected (until the comment is saved, of course).
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
So should the icons be added via &lt;code&gt;aria-hidden&lt;/code&gt; span tags here, instead of adding them via CSS generated content?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd also prefer adding the icons via &lt;code&gt;aria-hidden&lt;/code&gt; span tags, but I also need more opinions here as CSS generated content is being used consistently in other sections like post status, post visibility and timestamp in post types.
&lt;/p&gt;
&lt;p&gt;
Personally, I think if we are going to add the left margins to the form holders and change to using &lt;code&gt;aria-hidden&lt;/code&gt; span tags for the icons, we'd like to do that globally in posts and other sections as well. Opinions?
&lt;/p&gt;
&lt;p&gt;
Thank you so much!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43586 (Minor UI adjustments to the Author box in the Edit Comment screen) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 03 Apr 2018 09:20:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43586#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43586#comment:13/1522747228699586</guid>
      <description>&lt;p&gt;
@rhetorical thanks for the update.
&lt;/p&gt;
&lt;p&gt;
I noticed that the &lt;code&gt;h2&lt;/code&gt; header in meta-boxes have &lt;code&gt;padding: 8px 12px&lt;/code&gt; but the content of (some) meta-boxes have &lt;code&gt;padding: 10px&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I therefore wonder if the surrounding padding should also be &lt;code&gt;10px&lt;/code&gt; here, like shown in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43586/author-box-10px-padding.jpg" title="Attachment 'author-box-10px-padding.jpg' in Ticket #43586"&gt;author-box-10px-padding.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43586/author-box-10px-padding.jpg" title="Download"&gt;â€‹&lt;/a&gt;, compared to the current layout from the &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43586/43586.6.diff" title="Attachment '43586.6.diff' in Ticket #43586"&gt;43586.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43586/43586.6.diff" title="Download"&gt;â€‹&lt;/a&gt; patch: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43586/author-box-with-43586.6.diff.jpg" title="Attachment 'author-box-with-43586.6.diff.jpg' in Ticket #43586"&gt;author-box-with-43586.6.diff.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43586/author-box-with-43586.6.diff.jpg" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The mobile viewport needs adjustments (see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43586/author-box-in-mobile-viewport-with-43586.6.diff.jpg" title="Attachment 'author-box-in-mobile-viewport-with-43586.6.diff.jpg' in Ticket #43586"&gt;author-box-in-mobile-viewport-with-43586.6.diff.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43586/author-box-in-mobile-viewport-with-43586.6.diff.jpg" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>author-box-10px-padding.jpg attached to Ticket #43586</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 03 Apr 2018 09:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43586/author-box-10px-padding.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43586/author-box-10px-padding.jpg/1522746571399802</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>author-box-in-mobile-viewport-with-43586.6.diff.jpg attached to Ticket #43586</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 03 Apr 2018 09:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43586/author-box-in-mobile-viewport-with-43586.6.diff.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43586/author-box-in-mobile-viewport-with-43586.6.diff.jpg/1522746556257849</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>author-box-with-43586.6.diff.jpg attached to Ticket #43586</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 03 Apr 2018 09:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43586/author-box-with-43586.6.diff.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43586/author-box-with-43586.6.diff.jpg/1522746537163786</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43620 (Privacy Policy page design) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Tue, 03 Apr 2018 08:59:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43620#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43620#comment:13/1522745981257748</guid>
      <description>&lt;p&gt;
Hey Mel,
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
which do you think will be better for folks using screen readers here â€” showing a bunch of copy in a list of scrollable containers, or having a "read more" link on each container?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Whichever you choose: the text of the copy button or read more link should be unique (you can add the name of the plugin with screen-reader-text). Otherwise it's just a bunch of meaningless "copy" and "read more" buttons/links in the lists. And the message must be placed somewhere a screen reader noticed it before entering the content of the page, because this is unexpected behavior from the normal procedure.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;From a usability/maintainable point of view, here is my proposal:&lt;/strong&gt;
Above the title there is an explanation about this page and how it is generated.
&lt;/p&gt;
&lt;p&gt;
In the content area a good default text is added on creation of the page (maybe reviewed per country?). Site owners can edit this to their liking.
&lt;/p&gt;
&lt;p&gt;
At the bottom of the content there will an auto generated list of links, to all the Privacy Policy pages of the plugins on their sites. That way the page doesn't have to be updated when the plugins update their statement. Also: in the construction above content managers can edit the policies of the plugins, which may cause problems for the plugins if they are altered wrongly. By referring to a page of the plugin, the responsibility and text stays with the plugin owner.
&lt;/p&gt;
&lt;p&gt;
Bonus: it's super accessible and doesn't involve a scrollbar or tons of reading from the site owner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43587.3.diff attached to Ticket #43587</title>
      
        <dc:creator>nfmohit</dc:creator>

      <pubDate>Tue, 03 Apr 2018 08:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43587/43587.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43587/43587.3.diff/1522745751341407</guid>
      <description>&lt;p&gt;
Removes the comment status 'Edit' toggle and contains slight visual improvements and corrections
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>#43374.patch attached to Ticket #43374</title>
      
        <dc:creator>teddytime</dc:creator>

      <pubDate>Tue, 03 Apr 2018 08:28:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43374/%2343374.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43374/%2343374.patch/1522744107574376</guid>
      <description>&lt;p&gt;
This is a patch that resolves the warning
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14949 (Login gives false assurance of having logged out) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:49:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14949#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14949#comment:26/1522741740899565</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1522741737000097"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36131 (User can register / relogin when logged in already) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36131#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36131#comment:4/1522741739816592</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1522741737000097"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24672 (Remove final from WP_Post class) updated</title>
      
        <dc:creator>hawaiipersson</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24672#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24672#comment:23/1522741486255706</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24672#comment:22" title="Comment 22"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;That said&lt;/strong&gt;, I am more and more concerned about my prior advocacy for this.  It only works to subclass WP_Post when there can be only one, e.g. that the code is in the theme or specific to a site.
&lt;/p&gt;
&lt;p&gt;
Beyond that if two plugins subclass a &lt;code&gt;WP_Post&lt;/code&gt; and both plugins want to use in the same context â€” such as in a theme template page â€” only one of them can win.
&lt;/p&gt;
&lt;p&gt;
So I am thinking that to extend a &lt;code&gt;WP_Post&lt;/code&gt; we should use action and filter hooks instead of subclassing, and inspecting &lt;code&gt;'supports'&lt;/code&gt; to be the WordPress equivalent of for testing a class for an interface.
&lt;/p&gt;
&lt;p&gt;
See my proposal &lt;a href="https://core.trac.wordpress.org/ticket/12955#comment:69"&gt;here&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If a plugin where to enforce the use of its class directly in a theme that would be a question of bad plugin design, rather than a weakness for the extendability in itself. In my opinion plugin authors should never introduce code in the theme that would break the site it the plugin fails or is deactivated. In fact, the high use of custom functions from plugins called in themes is one of the biggest problems with Wordpress today, in my opinion.
&lt;/p&gt;
&lt;p&gt;
Plugins should be encouraged to only introduce content modifications through filters and action hooks. With other words, even though I understand your concern, I do not believe that this should be dealt with by Wordpress core.
&lt;/p&gt;
&lt;p&gt;
@jorbin
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What happens when a plugin adds a method that returns unescaped data and handles the escaping later and later core adds a method with the same name where it is returned escaped? A 2nd plugin using that method could introduce a security vulnerability since it assumes the data is escaped by core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry but I don't get this. A second plugin would instantiate \WP_Post, not a plugins extension of it - would it not? Without (bad design) dependencies between plugins this would never happen. When calling \WP_Post methods the return format would always be as expected. Extending a class doesn't change the behavior of the core class itself.
&lt;/p&gt;
&lt;p&gt;
Also it would be a security vulnerability introduced by the plugin, and should therefor be handled by the plugin. Wordpress core can not and should not raise concerns only because there are bad plugin authors :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:81/1522740946473528</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41191#comment:77" title="Comment 77"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42891" title="General: Improve wording for PHP version nag.
This changeset adjusts ..."&gt;42891&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Improve wording for PHP version nag.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This changeset adjusts the tone of the message to fit the usual core voice better and addresses accessibility concerns.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props schlessera.&lt;br /&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/41191" title="#41191: enhancement: Create browse happy type notice for PHP versions (reopened)"&gt;#41191&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'd suggest rewording this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] what to do if it turns out you can't [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To remove the &lt;em&gt;if it turns out&lt;/em&gt; part. Not as bad as the wording highlighted in &lt;a href="https://core.trac.wordpress.org/ticket/41191?replyto=77#comment:51"&gt;c51&lt;/a&gt; but still could be improved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43675 (UI adjustments for comments and posts timestamp inputs . Make the ...) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:16:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43675#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43675#comment:2/1522739806159725</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43679 (Add $this to found_users_query filter) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43679#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43679#comment:2/1522739559850384</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The patch needs a refresh to indent the doc-block items properly so they align as per WPCS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43680 (Add new filter to WP_User_Query) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:10:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43680#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43680#comment:3/1522739440380922</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Removing the performance focus and converting from bug to enhancement as nothing is technically broken here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43681 (Incorrect HTTP status code in 'posts' query.) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43681#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43681#comment:1/1522739224478697</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Converting to a bug considering the wrong HTTP status code is being returned here.
&lt;/p&gt;
&lt;p&gt;
From a quick glance it seems as if a few errors are defaulting to a 400 error code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25072 (Send no-cache response header from wp-cron.php requests) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 03 Apr 2018 07:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25072#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25072#comment:10/1522738963755061</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This seems sensible to me, the patch requires a refresh:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reference to &lt;code&gt;DISABLE_WP_CRON&lt;/code&gt; can eb removed
&lt;/li&gt;&lt;li&gt;The comment needs to be converted to a docblock.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Apr 2018 06:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:61/1522738511618036</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43316#comment:59" title="Comment 59"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(We never really used it, but the &lt;a class="ext-link" href="https://github.com/WP-API/proposals/blob/master/0000-template.md"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;template in the proposals repo&lt;/a&gt; would be useful to establish a design doc for this.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I &lt;a class="ext-link" href="https://github.com/WP-API/proposals/blob/add-autosaves/text/0000-autosaves.md"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;wrote up a design doc&lt;/a&gt; based on my comment above to lay this out a bit better.
&lt;/p&gt;
&lt;p&gt;
Is there anything fundamentally wrong with this design that I'm missing? I &lt;em&gt;think&lt;/em&gt; (hope) that it satisfies the points here.
&lt;/p&gt;
&lt;p&gt;
(I'm happy to also come up with the implementation; I'm trying to get back on top of my open source time.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17957 (wp_reschedule_event &amp; daylight saving) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 03 Apr 2018 06:53:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17957#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17957#comment:19/1522738427386577</guid>
      <description>wontfix: &lt;p&gt;
After seven years it seems safe to conclude there's a lack of interest in supporting both UTC and local time in wp-cron.
&lt;/p&gt;
&lt;p&gt;
Closing this off as wontfix.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11831 (Warning when wp-cron fails) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 03 Apr 2018 06:24:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11831#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11831#comment:34/1522736665333158</guid>
      <description>&lt;p&gt;
Is this still an issue since the WordPress 4.6 switch to Requests?
&lt;/p&gt;
&lt;p&gt;
I'm unable to reproduce, many of the lines referenced no longer exist.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43682 (Document $relative_file, $stylesheet global in wp_print_theme_file_tree()) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Tue, 03 Apr 2018 06:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43682#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43682#comment:1/1522735286399535</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43682.patch attached to Ticket #43682</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Tue, 03 Apr 2018 06:01:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43682/43682.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43682/43682.patch/1522735265683793</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43682 (Document $relative_file, $stylesheet global in wp_print_theme_file_tree()) created</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Tue, 03 Apr 2018 06:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43682</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43682/1522735234812045</guid>
      <description>&lt;p&gt;
global $relative_file, $stylesheet are used but it is not mentioned in the documentation of the wp_print_theme_file_tree() function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41965 (WP Cron job not created for future scheduled post (causing Missed ...) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 03 Apr 2018 05:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41965#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41965#comment:1/1522734652852036</guid>
      <description>invalid: &lt;p&gt;
Welcome to trac, I'm sorry for the delayed response.
&lt;/p&gt;
&lt;p&gt;
I've tested this using the WordPress Backbone REST API client and am unable to reproduce.
&lt;/p&gt;
&lt;p&gt;
The steps I followed were:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;create and save a draft post via the rest API.
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;pwcc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;wp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;models&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Draft via REST API'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'draft'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'2018-05-01 00:00:00'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;pwcc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;modify the date and schedule the post per step B above.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm going to close this ticket of for now as invalid (which is trac's unfriendly term for unable to reproduce), feel free to add further details to the ticket if needs be.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Apr 2018 05:50:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:60/1522734633189179</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not certain on the actual implementation of autosaves, but it seems like they use revisions under the hood?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've been digging into the implementation here; autosaves do indeed create revisions. They are identified by the slug being &lt;code&gt;{id}-autosave&lt;/code&gt;. &lt;code&gt;wp_get_post_autosave()&lt;/code&gt; and &lt;code&gt;wp_create_post_autosave()&lt;/code&gt; appear to be where the one-autosave-per-user concept is handled.
&lt;/p&gt;
&lt;p&gt;
In the REST API, I would map these to a query instead. Something like &lt;code&gt;/revisions?autosave=true&amp;amp;author=1&lt;/code&gt; would get the autosave for the current user if one exists, and you could use the revision's ID to update that autosave.
&lt;/p&gt;
&lt;p&gt;
In one sense, this does expose some of the internals of how autosaves work, but I don't think that's a bad thing. I had no real idea how autosaves worked internally, and my previous thinking still aligned with this; knowing that they really are revisions internally I think solidifies the revision-based design for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32656 (Add hooks to allow hijacking cron implementation) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Apr 2018 05:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32656#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32656#comment:18/1522734312183073</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This looks good to me. The only thing I'd be concerned about is changing the return value from &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, which could break existing checks of the return value. I doubt that'll have any issues in reality though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Apr 2018 05:07:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:59/1522732025758453</guid>
      <description>&lt;p&gt;
I've been watching this ticket for a while and thinking about it; it's a tough problem to crack. Trying to summarise what I think the difficulties and decisions to make are:
&lt;/p&gt;
&lt;p&gt;
I think the key thing we need to get at is defining what an "autosave" is. @azaozz mentions 'autosaving is "trigger saving a post"'; how does autosaving differ from a regular update in that regard? When would I want to differentiate a manual save from an autosave?
&lt;/p&gt;
&lt;p&gt;
To me, the basic logic flow seems something like:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;User starts editing: this creates a sort of "future revision" that they're working on, forked from the original post
&lt;/li&gt;&lt;li&gt;User makes some changes: this updates the "future revision" that they're working on
&lt;/li&gt;&lt;li&gt;User hits save: this "commits" the "future revision", and saves the original post
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The difference between 2 and 3 is why we need the distinction between manual saves and autosaves. Only 3 should create a "real revision", whereas 2 is just internal behaviour. Does this seem accurate?
&lt;/p&gt;
&lt;p&gt;
IMO we need to get a concrete mental model of how this works, independent of the actual internal behaviour.
&lt;/p&gt;
&lt;p&gt;
(We never really used it, but the &lt;a class="ext-link" href="https://github.com/WP-API/proposals/blob/master/0000-template.md"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;template in the proposals repo&lt;/a&gt; would be useful to establish a design doc for this.)
&lt;/p&gt;
&lt;p&gt;
I quite like the concept of treating autosaves as actual future revisions from the client's perspective. Both revisions and autosaves share the same logical underpinnings of being an alternative version of the post with changes, and the post can be updated to use that version's data instead (whether restoring a revision or "committing" an autosave). I'm not certain on the actual implementation of autosaves, but it seems like they use revisions under the hood?
&lt;/p&gt;
&lt;p&gt;
The flow I'm thinking would be something like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User starts editing: &lt;code&gt;POST /wp/v2/posts/{id}/revisions&lt;/code&gt; creates a new "future revision"
&lt;/li&gt;&lt;li&gt;User makes some changes: &lt;code&gt;PUT /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt; updates this "future revision"
&lt;/li&gt;&lt;li&gt;User hits save: &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt; commits the "future revision"
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The main change here would be this idea of updating a "future revision", which would avoid the massive-amounts-of-revisions problem. It would be entirely up to the client to control the autosave behaviour and when to commit, which is definitely the right choice to make IMO. (This may require changes to the underlying API in WP, as I'm not sure what's supported around this.)
&lt;/p&gt;
&lt;p&gt;
If we don't build it into the revisions endpoint, I'm +1 on a separate autosaves endpoint, which I think makes more sense than having a flag in regular updates. I'm not sure the the current behaviour in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43316/43316.12.diff" title="Attachment '43316.12.diff' in Ticket #43316"&gt;43316.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43316/43316.12.diff" title="Download"&gt;â€‹&lt;/a&gt; makes sense though; you POST to /autosaves, which updates the actual post?
&lt;/p&gt;
&lt;p&gt;
Also, I am -1 on this "detect how much has changed" idea; that seems like a pretty fundamental change, and not one that we should make in the context of this issue.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(I've forgotten how we support "restoring" revisions).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We never actually ended up including this ability, since IIRC we thought it may someday interfere with autosaving. :)
&lt;/p&gt;
&lt;p&gt;
I'd propose that we go with the original design, which is &lt;code&gt;POST /wp/v2/posts/{id}/revisions/{rev_id}&lt;/code&gt; restores a revision; this fits with the same action "committing" a "future revision" as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43439 (&amp;_embed only embedding first 10 categories) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Apr 2018 04:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43439#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43439#comment:3/1522730248635411</guid>
      <description>&lt;p&gt;
@kadamwhite What sort of changes did you have in mind for making this more predictable?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32656 (Add hooks to allow hijacking cron implementation) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 03 Apr 2018 03:08:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32656#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32656#comment:17/1522724918288288</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32656/32656.4.diff" title="Attachment '32656.4.diff' in Ticket #32656"&gt;32656.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32656/32656.4.diff" title="Download"&gt;â€‹&lt;/a&gt; :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Added &lt;code&gt;wp_get_scheduled_event()&lt;/code&gt; per @ethitter's notes above, this should allow custom runners to avoid filtering options
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_get_schedule()&lt;/code&gt; altered to use the new function.
&lt;/li&gt;&lt;li&gt;Tidied up the docs a bit to include recommended return values and some corrections
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@johnbillion: From @DavidAnderson's earlier work, each function returns values for plugins to emulate. Plugin authors can still return unexpected values but that's a problem elsewhere in WP so I'm inclined to let it pass.
&lt;/p&gt;
&lt;p&gt;
I've written too much code in this patch to commit it without someone else adding &lt;code&gt;commit&lt;/code&gt; keyword.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32656.4.diff attached to Ticket #32656</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Tue, 03 Apr 2018 03:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32656/32656.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32656/32656.4.diff/1522724794061227</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43350 (REST API: Support for WP Cron) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Apr 2018 02:51:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43350#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43350#comment:3/1522723900520458</guid>
      <description>wontfix: &lt;p&gt;
WP Cron is an internal API, not something we want to expose publicly. Additionally, cron schedules are defined in code, not as resources in the database. We aren't planning on adding support for this any time in the forseeable future.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43349 (WP Rest API: Support for WP Mail) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Tue, 03 Apr 2018 02:50:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43349#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43349#comment:3/1522723848776028</guid>
      <description>wontfix: &lt;p&gt;
&lt;code&gt;wp_mail&lt;/code&gt; is an internal API, not something we want to expose publicly. We aren't planning on adding support for it any time in the forseeable future.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43055 (Reorganize Core JS / introduce build step) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 03 Apr 2018 01:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43055#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43055#comment:49/1522717411331122</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43055#comment:48" title="Comment 48"&gt;adamsilverstein&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wild idea: can we consider building into &lt;code&gt;src&lt;/code&gt; instead of into &lt;code&gt;build&lt;/code&gt;? That might mean moving all CSS files out of &lt;code&gt;src&lt;/code&gt; as well, and building them back into place. Wondering if we can eliminate the &lt;code&gt;build&lt;/code&gt; folder entirely, this would let developers continue running their existing local setups without any directory changes, the only new requirement would be running the build step to start and &lt;code&gt;watch&lt;/code&gt; for css/js development.
&lt;/p&gt;
&lt;p&gt;
Its a bit odd that with this change as it stands we wind up with three locations for files - the root where source files live (JavaScript), &lt;code&gt;src&lt;/code&gt; where some source files live (php, css) and &lt;code&gt;build&lt;/code&gt; where everything gets copied to from &lt;code&gt;src&lt;/code&gt;. Am I missing something, is there some other reason we need to have separate src and build folders? If not, lets consider make a complete shift and avoiding the double folder build process.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;em&gt;option 3&lt;/em&gt; in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43055#comment:3" title="Comment 3"&gt;comment:3&lt;/a&gt;, I think there more in-depth discussion in Slack at the time though I'd have to double check
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>