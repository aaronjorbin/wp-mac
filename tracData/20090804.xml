<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #6969 (Don't apply wptexturize() to the insides of shortcode tags) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 04 Aug 2009 23:30:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6969#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6969#comment:33/1249428648000000</guid>
      <description>&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10548" title="#10548: enhancement: There should be way to prevent WP from touching the content within a ... (closed: duplicate)"&gt;#10548&lt;/a&gt; as duplicate of this
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10548 (There should be way to prevent WP from touching the content within a ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 04 Aug 2009 23:30:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10548#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10548#comment:1/1249428620000000</guid>
      <description>duplicate: &lt;p&gt;
This is a duplicate of many.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6969" title="#6969: enhancement: Don't apply wptexturize() to the insides of shortcode tags (closed: wontfix)"&gt;#6969&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6444" title="#6444: defect (bug): Changeset 7561 (post rc3) leaves an open &amp;lt;p&amp;gt; at the end of the ... (closed: fixed)"&gt;#6444&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10547 (There should be way to prevent WP from touching the content within a ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 04 Aug 2009 23:27:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10547#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10547#comment:1/1249428465000000</guid>
      <description>duplicate: &lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10548" title="#10548: enhancement: There should be way to prevent WP from touching the content within a ... (closed: duplicate)"&gt;#10548&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10548 (There should be way to prevent WP from touching the content within a ...) created</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Tue, 04 Aug 2009 23:26:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10548</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10548/1249428385000000</guid>
      <description>&lt;p&gt;
I fail. Reposted with proper formatting:
&lt;/p&gt;
&lt;p&gt;
It is very furstrating now that "do_shortcode" is called after all the WP formatting stuff (e.g. wpautop, escaping html entities) because the content are usually messed up. There should be an option to get the RAW content.
&lt;/p&gt;
&lt;p&gt;
Possible use cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a [noformat]...&lt;a href="http://core.trac.wordpress.org/noformat"&gt;noformat&lt;/a&gt; shortcode
&lt;/li&gt;&lt;li&gt;Create a [style]...&lt;a href="http://core.trac.wordpress.org/style"&gt;style&lt;/a&gt; shortcode, which will put the content into a &amp;lt;style&amp;gt; element and inject it into the &amp;lt;head&amp;gt;
&lt;/li&gt;&lt;li&gt;Create a [markdown]...&lt;a href="http://core.trac.wordpress.org/markdown"&gt;markdown&lt;/a&gt; shortcode, which formats the content with markdown
&lt;/li&gt;&lt;li&gt;Mini template language like the conditional custom fields shortcode plugin (or the php shortcode plugin)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Obviously, it is undesirable to have the content preformatted in either of the use cases listed above. For instance, in the CSS example, you'd have to go through the trouble of unescaping the HTML entities and then removing all the &amp;lt;br /&amp;gt; and &amp;lt;p&amp;gt; insterted by wpautop.
&lt;/p&gt;
&lt;p&gt;
The trivial solution would be to put do_shortcode before the other formatting filters. However, this might have potential drawbacks too. For instance, the "unsafe" HTML inserted by the shortcode might get stripped too. (Which might or might not be a good thing). This enhancement obviously requries more thoughts so I'd like to see more disscusion of the potential advantages and disadvantages here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10547 (There should be way to prevent WP from touching the content within a ...) created</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Tue, 04 Aug 2009 23:25:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10547</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10547/1249428300000000</guid>
      <description>&lt;p&gt;
It is very furstrating now that "do_shortcode" is called after all the WP formatting stuff (e.g. wpautop, escaping html entities) because the content are usually messed up. There should be an option to get the RAW content.
&lt;/p&gt;
&lt;p&gt;
Possible use cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a [noformat]...&lt;a href="http://core.trac.wordpress.org/noformat"&gt;noformat&lt;/a&gt; shortcode
&lt;/li&gt;&lt;li&gt;Create a [style]...&lt;a href="http://core.trac.wordpress.org/style"&gt;style&lt;/a&gt; shortcode, which will put the content into a &amp;lt;style&amp;gt; element and inject it into the &amp;lt;head&amp;gt;
&lt;/li&gt;&lt;li&gt;Create a [markdown]...&lt;a href="http://core.trac.wordpress.org/markdown"&gt;markdown&lt;/a&gt; shortcode, which formats the content with markdown
&lt;/li&gt;&lt;li&gt;Mini template language like the conditional custom fields shortcode plugin (or the php shortcode plugin)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Obviously, it is undesirable to have the content preformatted in either of the use cases listed above. For instance, in the CSS example, you'd have to go through the trouble of unescaping the HTML entities and then removing all the &amp;lt;br /&amp;gt; and &amp;lt;p&amp;gt; insterted by wpautop.
&lt;/p&gt;
&lt;p&gt;
The trivial solution would be to put do_shortcode before the other formatting filters. However, this might have potential drawbacks too. For instance, the "unsafe" HTML inserted by the shortcode might get stripped too. (Which might or might not be a good thing). This enhancement obviously requries more thoughts so I'd like to see more disscusion of the potential advantages and disadvantages here.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10546 (Change VARCHAR keys to SMALLINT) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 04 Aug 2009 23:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10546#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10546#comment:1/1249427589000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Strange we have (many useless) components for everything except Database..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10546 (Change VARCHAR keys to SMALLINT) created</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Tue, 04 Aug 2009 22:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10546</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10546/1249423470000000</guid>
      <description>&lt;p&gt;
Back in 2.4 all ENUMs where changed to VARCHAR(20) for reasons of portability(FN1).  That move addressed an abstract concern while introducing two (2) tangible concerns: 1.) bloating of indexes and 2.) reduction of scalability.  This is especially a concern as the discussion for adding meta data for more types (i.e. links, comments, etc.) has the potential to add more meta records.
&lt;/p&gt;
&lt;p&gt;
Personally I'd really like to see a move back to ENUMs (which are an excellent feature of MySQL) but failing that I'd recommend we add a wp_meta table with fields ID (smallint) and Name (varchar(255)) and use smallint foreign keys linking to wp_meta whereever varchar(20) keys are currently used.  One or the other solution addresses these concerns, but status quo does not.
&lt;/p&gt;
&lt;p&gt;
Footnotes:
&lt;/p&gt;
&lt;p&gt;
FN1 - While the portability concern probably seemed like a good idea at the time it appears the concern may be little more than academic (FN2,FN3) especially considering how few plugins or themes would work with other databases.
&lt;/p&gt;
&lt;p&gt;
FN2 - &lt;a class="ext-link" href="http://codex.wordpress.org/Using_Alternative_Databases"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Using_Alternative_Databases&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
FN3 - &lt;a class="ext-link" href="http://wordpress.org/support/topic/549"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/549&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:6/1249422974000000</guid>
      <description>&lt;p&gt;
Related ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7042" title="#7042: feature request: Use exif rotation data when uploading pictures (closed: wontfix)"&gt;#7042&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The challenge here is that imagerotate() is "...only available if PHP is compiled with the bundled version of the GD library". There are replacement functions but they are very slow especially for large images as they copy the source image pixel by pixel.
&lt;/p&gt;
&lt;p&gt;
Perhaps we can do image rotation only when the function is available. Image flip can be done with imagecopyresampled() (the same function used for resizing) and cropping with Jcrop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10464 (enhancement for after_plugin_row hook) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:52:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10464#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10464#comment:1/1249422753000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11775" title="Move plugin update notice output to the plugin specific hook so as to ..."&gt;[11775]&lt;/a&gt;) Move plugin update notice output to the plugin specific hook so as to make them easier to filter and manage from plugins that want to do there own thing. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10464" title="#10464: enhancement: enhancement for after_plugin_row hook (closed: fixed)"&gt;#10464&lt;/a&gt; props strider72.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11775]: Move plugin update notice output to the plugin specific hook so as to ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:52:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11775</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11775/1249422751152555</guid>
      <description>&lt;p&gt;
Move plugin update notice output to the plugin specific hook so as to make them easier to filter and manage from plugins that want to do there own thing. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10464" title="#10464: enhancement: enhancement for after_plugin_row hook (closed: fixed)"&gt;#10464&lt;/a&gt; props strider72.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10462 (WordPress export and import should support sticky post status) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:46:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10462#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10462#comment:2/1249422408000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11774" title="Add support for sticky posts to the WXR exporter and importer. Fixes ..."&gt;[11774]&lt;/a&gt;) Add support for sticky posts to the WXR exporter and importer. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10462" title="#10462: defect (bug): WordPress export and import should support sticky post status (closed: fixed)"&gt;#10462&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11774]: Add support for sticky posts to the WXR exporter and importer. Fixes ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:46:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11774</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11774/1249422402212839</guid>
      <description>&lt;p&gt;
Add support for sticky posts to the WXR exporter and importer. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10462" title="#10462: defect (bug): WordPress export and import should support sticky post status (closed: fixed)"&gt;#10462&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10454 (Add support for setting users_can_register option via XML-RPC and ...) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:30:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10454#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10454#comment:4/1249421426000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11773" title="Allow user registration to be enabled by an XMLRPC client. Fixes ..."&gt;[11773]&lt;/a&gt;) Allow user registration to be enabled by an XMLRPC client. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10454" title="#10454: enhancement: Add support for setting users_can_register option via XML-RPC and ... (closed: fixed)"&gt;#10454&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11773]: Allow user registration to be enabled by an XMLRPC client. Fixes ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11773</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11773/1249421421515656</guid>
      <description>&lt;p&gt;
Allow user registration to be enabled by an XMLRPC client. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10454" title="#10454: enhancement: Add support for setting users_can_register option via XML-RPC and ... (closed: fixed)"&gt;#10454&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10454 (Add support for setting users_can_register option via XML-RPC and ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:28:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10454#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10454#comment:3/1249421325000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11772" title="Ensure that users_can_register is sanitised correctly. See #10454 ..."&gt;[11772]&lt;/a&gt;) Ensure that users_can_register is sanitised correctly. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10454" title="#10454: enhancement: Add support for setting users_can_register option via XML-RPC and ... (closed: fixed)"&gt;#10454&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11772]: Ensure that users_can_register is sanitised correctly. See #10454 ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11772</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11772/1249421322937276</guid>
      <description>&lt;p&gt;
Ensure that users_can_register is sanitised correctly. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10454" title="#10454: enhancement: Add support for setting users_can_register option via XML-RPC and ... (closed: fixed)"&gt;#10454&lt;/a&gt; props josephscott.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10545 (_publish_post_hook (adding to postmeta existing hooks)) created</title>
      
        <dc:creator>butuzov</dc:creator>

      <pubDate>Tue, 04 Aug 2009 21:22:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10545</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10545/1249420977000000</guid>
      <description>&lt;p&gt;
The problem that each time yuo press publish (assuming this is a save button) wp add to postmeta table new records even thay already exist now.
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( get_option('default_pingback_flag') )
		$wpdb-&amp;gt;insert( $wpdb-&amp;gt;postmeta, $data + array( 'meta_key' =&amp;gt; '_pingme' ) );
	$wpdb-&amp;gt;insert( $wpdb-&amp;gt;postmeta, $data + array( 'meta_key' =&amp;gt; '_encloseme' ) );
&lt;/pre&gt;&lt;p&gt;
shoud be (something like)
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( get_option('default_pingback_flag') ){
		get_post_meta($post_id, '_pingme') ? update_post_meta($post_id, '_pingme', 1) : add_post_meta($post_id, '_pingme', 1);
	get_post_meta($post_id, '_encloseme') ? update_post_meta($post_id, '_encloseme', 1) : add_post_meta($post_id, '_encloseme', 1);
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10544 (Specify tags on new posts through the URL) created</title>
      
        <dc:creator>rvenable</dc:creator>

      <pubDate>Tue, 04 Aug 2009 20:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10544</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10544/1249417317000000</guid>
      <description>&lt;p&gt;
I want to create links like such: "Add a new post with tag X" with a URL like this: wp-admin/post-new.php?new_tag=X
&lt;/p&gt;
&lt;p&gt;
Clicking on the link would take you to the Add New Post admin panel with tag X already added.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, there is no clean way for a plugin to make this work. The only clean way would be to add a filter on 'terms_to_edit' which adds the new_tag var to the end of the terms.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, get_terms_to_edit() returns early if there is no post ID and never reaches the necessary filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_terms_to_edit( $post_id, $taxonomy = 'post_tag' ) {
	$post_id = (int) $post_id;
	if ( !$post_id )
		return false; // &amp;lt;------ BAILS OUT EARLY HERE
	$tags = wp_get_post_terms($post_id, $taxonomy, array());
	if ( !$tags )
		return false;
	if ( is_wp_error($tags) )
		return $tags;
	foreach ( $tags as $tag )
		$tag_names[] = $tag-&amp;gt;name;
	$tags_to_edit = join( ',', $tag_names );
	$tags_to_edit = esc_attr( $tags_to_edit );
	$tags_to_edit = apply_filters( 'terms_to_edit', $tags_to_edit, $taxonomy );   // &amp;lt;-------- THE FILTER I NEED TO HOOK ONTO TO ADD MY NEW TAG
	return $tags_to_edit;
}
&lt;/pre&gt;&lt;p&gt;
So, a possible solution would be to still apply the filter when bailing out on an empty post_id.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10526 (oEmbed provider) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 04 Aug 2009 18:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10526#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10526#comment:3/1249410573000000</guid>
      <description>&lt;p&gt;
-1 from me as well BTW. It'd almost never get used, so it's plugin territory... for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10324 (Better Timezone Selection interface) updated</title>
      
        <dc:creator>naomi86</dc:creator>

      <pubDate>Tue, 04 Aug 2009 17:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10324#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10324#comment:3/1249408070000000</guid>
      <description>&lt;p&gt;
I used php to detect the user ip and then get the information using a zoneinfo database. The area and gmt is put into the timezone combobox and selected as the default value.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>options-general.php attached to Ticket #10324</title>
      
        <dc:creator>naomi86</dc:creator>

      <pubDate>Tue, 04 Aug 2009 17:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10324/options-general.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10324/options-general.php/1249407927000000</guid>
      <description>&lt;p&gt;
Timezone using automatic detection
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10324 (Better Timezone Selection interface) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Tue, 04 Aug 2009 15:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10324#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10324#comment:2/1249399571000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10324#comment:1" title="Comment 1"&gt;jamierumbelow&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having the interface try to guess the user's timezone would be nice, but as far as the actual input goes, I think it would be a lot easier, more standardised and overall better if we used the Zoneinfo database specification for timezones.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what we already have right now, a dropdown with the zoneinfo zone list, generated by PHP itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>janeforshort</dc:creator>

      <pubDate>Tue, 04 Aug 2009 12:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:5/1249389121000000</guid>
      <description>&lt;p&gt;
I believe Andrew was going to be working on this feature.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10526 (oEmbed provider) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Tue, 04 Aug 2009 07:46:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10526#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10526#comment:2/1249371964000000</guid>
      <description>&lt;p&gt;
As I said on the dev chat I reckon the provider side of this sits firmly in plugin land at the moment, simply due to the likely amount of take up weighed against any possible downsides (bloat, etc.).  So it gets a -1 from me at the moment for core. Maybe wayyyy in the future, when people know about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11771]: Add support for 'include' and 'exclude' to [gallery] ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 04 Aug 2009 07:32:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11771</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11771/1249371138472600</guid>
      <description>&lt;p&gt;
Add support for 'include' and 'exclude' to [gallery] (include="123,456" would show only these attachments regardless of the parent post, exclude="789,123" would exclude these attachments and show the rest).
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10540 (Typo in l10n.php) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 04 Aug 2009 07:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10540#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10540#comment:4/1249370493000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10541 (WP 2.8.2 and 2.8.3 auto-upgrade failing due to fs_connect() returning ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 04 Aug 2009 06:56:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10541#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10541#comment:2/1249368995000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ok, So in short:
&lt;/p&gt;
&lt;p&gt;
If WordPress is installed in /(as visible by FTP) then the automatic upgrade is not working by FTP any more?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 04 Aug 2009 06:50:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:11/1249368624000000</guid>
      <description>&lt;p&gt;
Updated plan is shortcodes. Custom, "hard coded" shortcodes for widely used sites such as YouTube. This allows extended options like colors, etc. that you can't control with oEmbed.
&lt;/p&gt;
&lt;p&gt;
Falls back to oEmbed for unsupported sites, but the oEmbed shortcode is capability controlled. Requires that the author have &lt;code&gt;unfiltered_html&lt;/code&gt; cap, else they could run their own oEmbed provider and inject "any" HTML they want (even if it's kses'ed, they could still do bad stuff via Flash).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Tue, 04 Aug 2009 05:48:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:10/1249364910000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10337#comment:9" title="Comment 9"&gt;lloydbudd&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think oEmbed is a great default experience, but if technically feasible would be great to have these short codes of a little different style, with traditional short code taking precedence if already loaded (would have to extend their definitions).
&lt;/p&gt;
&lt;p&gt;
For example, user pastes link to Flickr video:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Check if traditional short code in system matching that definition. Can provide explicit fields for the possible parameters defined for the short code (addresses MU, security, and customization/flexibility).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;If unfiltered HTML cap. then use oembed stages you describe above.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
The Proof of Concept plugin attached above prefers predefined shortcodes over oEmbed.  If it notices that there's an already defined shortcode for the resource I'm trying to oEmbed, it uses the shortcode, not the oEmbed stuff.
&lt;/p&gt;
&lt;p&gt;
I'm talking about the plugin's backend stuff.  There's no UI at all in the proof of concept plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 04 Aug 2009 05:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:9/1249364134000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10337#comment:7" title="Comment 7"&gt;Viper007Bond&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This was a widely requested feature in the 2.9 feature poll:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/development/2009/07/2-9-vote-results/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/development/2009/07/2-9-vote-results/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm excited by this work!
&lt;/p&gt;
&lt;p&gt;
I do think an important context of the voting results is that WordPress.com customers (a restricted WordPress MU environment with limited embed options) were called to vote: &lt;a class="ext-link" href="http://en.blog.wordpress.com/2009/07/08/media-feature-vote/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.blog.wordpress.com/2009/07/08/media-feature-vote/&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've been thinking about it over the past week or two and I'm currently of the opinion that implementing an &lt;a class="ext-link" href="http://oembed.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;oEmbed&lt;/a&gt; client with some manually coded fallbacks for popular sites that don't support oEmbed yet would be the way to go.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;My Current Brainstorm&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
New UI element is added, perhaps a new media button called like External Embed or something. I dunno, UI's aren't my strong suit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Strengthen the muscle by working it ;-)
&lt;/p&gt;
&lt;p&gt;
There is a UI for this in WordPress already, but I don't think it works as many would expect.
&lt;/p&gt;
&lt;p&gt;
All of the Upload/Insert include From URL, so for Video I go there and enter a YouTube URL thinking it will add that video to the post, but instead it currently (v2.8.x and trunk &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11731" title="&amp;#34;Trash&amp;#34; status for comments, first run, props caesarsgrunt, see #4529"&gt;r11731&lt;/a&gt;) just creates a link to the URL with the text you enter as the title.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The user is prompted for the URL to the object (video, image, etc.).
&lt;/p&gt;
&lt;p&gt;
WordPress then...
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Connects to the URL looking in the head for a discovery &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; to their oEmbed provider.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;If not found, it checks the URL against an internal (filterable) list of oEmbed providers. This is meant for sites that support oEmbed but that don't have discovery links.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;If still not found, then it checks the URL against and internal sudo-oEmbed provider. Similar &lt;a class="ext-link" href="http://oohembed.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://oohembed.com/&lt;/a&gt; but it'd be internal rather than relying on a third party service. This is meant for popular sites that we want to support but that don't support oEmbed themselves (for example YouTube).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
mdawaffe and I have been discussing this and the only real concern seems to be malicious HTML getting in from the provider (say hidden tracking codes, advertising, etc.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However this would still happen if the user was to just copy/paste in the code themselves.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct, though expectations sometimes change when there is a different experience.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's also the decision about whether to do this with shortcodes or not.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The before method&lt;/strong&gt; consists of the oEmbed result HTML being inserted directly into the post contents. The user can then see the HTML and remove/edit anything they want, if they desire. The drawback is if the provider updates their embed code, it's not updated on the blog. Although this can be a pro if the update consists of malicious HTML. The other problem is it's harder to change things like width/height as it's often defined multiple times.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think you nail the issue of the experience not being that much better than pasting in the embed code oneself.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;The after (shortcode) method&lt;/strong&gt; consists of a shortcode being inserted into the post rather than the HTML. The oEmbed request is made on post display (and probably cached for performance purposes). This is future proof and probably easier on the user, but the user has no control over the HTML. This does allow &lt;code&gt;unfiltered_html&lt;/code&gt; lacking users (i.e. WPMU) to embed though, which is both a pro and con.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Lack Of Customization&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Another problem with oEmbed is the lack of customization. For example, you couldn't easily set a default color for Vimeo embeds.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I am thinking about using oEmbed for making for easy embeds, but I am concerned about possible security issues, lack of customization, and so forth. As such, I am looking for feedback and ideas.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How it fits into the existing roles and permissions system needs to be vetted.
&lt;/p&gt;
&lt;p&gt;
Also important will be clear, immediate feedback for a web service that is not supported and generic instructions for copy &amp;amp; pasting embed code provided.
&lt;/p&gt;
&lt;p&gt;
I think oEmbed is a great default experience, but if technically feasible would be great to have these short codes of a little different style, with traditional short code taking precedence if already loaded (would have to extend their definitions).
&lt;/p&gt;
&lt;p&gt;
For example, user pastes link to Flickr video:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Check if traditional short code in system matching that definition. Can provide explicit fields for the possible parameters defined for the short code (addresses MU, security, and customization/flexibility).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;If unfiltered HTML cap. then use oembed stages you describe above.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10543 (Incorrect (non-UTF-8) character handling in tag's name and slug) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Tue, 04 Aug 2009 05:26:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10543</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10543/1249363571000000</guid>
      <description>&lt;p&gt;
Incorrect (non-UTF-8) character tag's name and slug are handled in different way: name is truncated on 1st such character, and in slug they are just removed (no truncation). WP should handle both in the same way - drop invalid characters, instead of truncation.
&lt;/p&gt;
&lt;p&gt;
I found this issue recently. One of the Polish programs for adding posts to the Wordpresses does not encode tags in UTF-8 - it left them in ISO-8859-2. I notified author of this bug. Unfortunately there are many copies around, so it may take a long time before everyone upgrade.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10542 (Import Wordpress XML limited to 37 items) created</title>
      
        <dc:creator>jgoodwin</dc:creator>

      <pubDate>Tue, 04 Aug 2009 04:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10542</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10542/1249360290000000</guid>
      <description>&lt;p&gt;
Wordpress' import function is limiting to 37 items (pages). Tested on small XML file in both WP 2.8.2 and 2.8.3
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10538 (XMLRPC: File Upload missing Base64 Decode) closed</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Tue, 04 Aug 2009 04:10:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10538#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10538#comment:3/1249359056000000</guid>
      <description>invalid: &lt;p&gt;
Exactly what redsweater said.  Go back and make sure that you specify that the data in the bits field is using the &amp;lt;base64&amp;gt; tag.  The library that WordPress uses for XML-RPC takes care of decoding base64 fields automatically.
&lt;/p&gt;
&lt;p&gt;
I'm closing this ticket as invalid.  If you do find that there is a problem we can always come back and open this up again.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #3260 (XML output (rss, atom, rdf ...) should always use UTF-8 or CDATA for ...) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 04 Aug 2009 04:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3260#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3260#comment:13/1249358461000000</guid>
      <description>&lt;p&gt;
&amp;amp; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8217" title="#8217: defect (bug): Check all checkbox never becomes checked (closed: fixed)"&gt;#8217&lt;/a&gt; is U+2019 ('RIGHT SINGLE QUOTATION MARK'). It may be normal if the title contains this character. Would you mind minding the URL of your feed here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10486 (404 Template Pages) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Tue, 04 Aug 2009 02:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10486#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10486#comment:4/1249354027000000</guid>
      <description>&lt;p&gt;
I read though the WordPress code and it's not like the code has a bug, it's just lacking the feature to pickup on missing content. The problem with generating a solution for this "bug" is that we don't know there is no content until we're half way though the template it did match. What I don't get, is that this problem can be avoided with the right non-default permalink structure. So, does that mean we can patch this problem, so visitors don't use a template that doesn't have content available? I'm thinking we could check for content based on what the URL says it's going to be when WordPress is deciding what template to use and give a 404 if nothing is found... basically. We'd have to be careful, because some templates may be designed to not have content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10486 (404 Template Pages) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Tue, 04 Aug 2009 02:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10486#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10486#comment:3/1249352501000000</guid>
      <description>&lt;p&gt;
I'll pick up this ticket or the one it's a dup of, if no one else will and someone is willing to mentor me or give feedback to my ideas. I'd like to suggest a solution, but I don't know enough about the WordPress template system at the moment... I'll look into it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10191 (WordPress not determining if a request is a 404) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Tue, 04 Aug 2009 02:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10191#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10191#comment:3/1249351838000000</guid>
      <description>&lt;p&gt;
Ticket 10486 is probably a dup of this one, but does a good job of giving more detail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10486 (404 Template Pages) updated</title>
      
        <dc:creator>dcole07</dc:creator>

      <pubDate>Tue, 04 Aug 2009 02:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10486#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10486#comment:2/1249351765000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
To summarize this problem, WordPress is able to find a template based on URL information, but it turns out to be the wrong template, because there is not content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10541 (WP 2.8.2 and 2.8.3 auto-upgrade failing due to fs_connect() returning ...) updated</title>
      
        <dc:creator>jimsky7</dc:creator>

      <pubDate>Tue, 04 Aug 2009 02:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10541#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10541#comment:1/1249351733000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10541 (WP 2.8.2 and 2.8.3 auto-upgrade failing due to fs_connect() returning ...) created</title>
      
        <dc:creator>jimsky7</dc:creator>

      <pubDate>Tue, 04 Aug 2009 02:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10541</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10541/1249351631000000</guid>
      <description>&lt;p&gt;
Under some conditions (may be because web server docroot differs from the FTP base directory) WP 2.8.2 and now WP 2.8.3 auto-upgrades fail.  See discussion here with more details -&amp;gt; &lt;a class="ext-link" href="http://wordpress.org/support/topic/296758"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/296758&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When I try an auto-upgrade I get a message "Installation failed" before any attempt is even made to download the zip file.
&lt;/p&gt;
&lt;p&gt;
Here's the detail I reported in that forum posting:
&lt;/p&gt;
&lt;p&gt;
I have traced through the code that performs the auto-upgrade and for reasons not yet known to me it checks to see if the directory "/" exists (it's checking for ABSPATH and WP_CONTENT_DIR before it begins upgrading) and the check fails ... so my upgrade stops. No error message is being returned from fs_connect() [in file wp-upgrader.php] which is the routine that is called to check for existence of various directories before an upgrade can begin. I don't see why there's no error message generated (yet) in fs_connect(). I modified the code so it would skip checking if the directory name is "/" and my upgrade to 2.8.3 was performed just fine - took about 60 seconds.
&lt;/p&gt;
&lt;p&gt;
wp_update_core() instantiates a Core_Upgrader and the -&amp;gt;upgrade method is invoked, and the Core_Upgrader does this
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$res = $this-&amp;gt;fs_connect( array(ABSPATH, WP_CONTENT_DIR) );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and fs_connect() performs a check on "/" (which is the FTP root directory rather than the docroot which in my case is /var/www/sky/) instead of what we expected ABSPATH to be and fails.  For reasons unknown to me, no error is reported back to be shown in the window, so this is kind of tough to debug.
&lt;/p&gt;
&lt;p&gt;
Sorry that I had to report this as WP 2.9 in Trac because 2.8.2 and 2.8.3 are not available as Version numbers in the popup.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10540 (Typo in l10n.php) updated</title>
      
        <dc:creator>CalebKniffen</dc:creator>

      <pubDate>Tue, 04 Aug 2009 01:36:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10540#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10540#comment:3/1249349787000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10540 (Typo in l10n.php) updated</title>
      
        <dc:creator>CalebKniffen</dc:creator>

      <pubDate>Tue, 04 Aug 2009 01:35:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10540#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10540#comment:2/1249349757000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>ngettext_with_context_patch.patch attached to Ticket #10540</title>
      
        <dc:creator>CalebKniffen</dc:creator>

      <pubDate>Tue, 04 Aug 2009 01:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10540/ngettext_with_context_patch.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10540/ngettext_with_context_patch.patch/1249349731000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #3260 (XML output (rss, atom, rdf ...) should always use UTF-8 or CDATA for ...) updated</title>
      
        <dc:creator>iron_xman</dc:creator>

      <pubDate>Tue, 04 Aug 2009 00:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3260#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3260#comment:12/1249347152000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3260 (XML output (rss, atom, rdf ...) should always use UTF-8 or CDATA for ...) updated</title>
      
        <dc:creator>iron_xman</dc:creator>

      <pubDate>Tue, 04 Aug 2009 00:52:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3260#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3260#comment:11/1249347139000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10540 (Typo in l10n.php) updated</title>
      
        <dc:creator>CalebKniffen</dc:creator>

      <pubDate>Tue, 04 Aug 2009 00:45:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10540#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10540#comment:1/1249346726000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3260 (XML output (rss, atom, rdf ...) should always use UTF-8 or CDATA for ...) updated</title>
      
        <dc:creator>iron_xman</dc:creator>

      <pubDate>Tue, 04 Aug 2009 00:28:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3260#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3260#comment:10/1249345682000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3260 (XML output (rss, atom, rdf ...) should always use UTF-8 or CDATA for ...) updated</title>
      
        <dc:creator>iron_xman</dc:creator>

      <pubDate>Tue, 04 Aug 2009 00:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3260#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3260#comment:9/1249345651000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can we look at wrapping the title tag in the rss feed in CDATA as it throws up when there are entities in the title?  I've been building a script to bring in an rss feed from a wordpress site, and display it on my site, and it keeps coming back with the &amp;amp; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8217" title="#8217: defect (bug): Check all checkbox never becomes checked (closed: fixed)"&gt;#8217&lt;/a&gt; as a weird garbage character.  When it's wrapped in CDATA tags, it works as expected.  In looking at the code, the content of the rss is in CDATA, but not the title, why?  The fix would be very simple to do, as long as there aren't any side effects.  I haven't noticed any in my own install.
I hate hacking core files, so I'm requesting that this be added.  And as it pertains to this bug, I thought I would re-open it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10540 (Typo in l10n.php) created</title>
      
        <dc:creator>CalebKniffen</dc:creator>

      <pubDate>Tue, 04 Aug 2009 00:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10540</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10540/1249345556000000</guid>
      <description>&lt;p&gt;
On line 256 of l10n there is what I believe to be a typo.
&lt;/p&gt;
&lt;pre class="wiki"&gt;return apply_filters( 'ngettext_with_context ', $translation, $single, $plural, $number, $context, $domain );
&lt;/pre&gt;&lt;p&gt;
I think it the filter should not be "ngettext_with_context " but rather "ngettext_with_context".
&lt;/p&gt;
&lt;p&gt;
I apologize in advance if I am not submitting this correctly it is my first time.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10539 (Comments Pagination Links disappear if you separate comments from pings) updated</title>
      
        <dc:creator>aldolat</dc:creator>

      <pubDate>Mon, 03 Aug 2009 23:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10539#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10539#comment:1/1249343362000000</guid>
      <description>&lt;p&gt;
You may also try to copy
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="navigation"&amp;gt;
	&amp;lt;?php previous_comments_link() ?&amp;gt;
	&amp;lt;?php next_comments_link() ?&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
before AND after this piece of code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ol class="commentlist"&amp;gt;
&amp;lt;?php wp_list_comments('type=pings'); ?&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/pre&gt;&lt;p&gt;
You'll see that only the first copy will display the links correctly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10538 (XMLRPC: File Upload missing Base64 Decode) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Mon, 03 Aug 2009 23:37:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10538#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10538#comment:2/1249342622000000</guid>
      <description>&lt;p&gt;
amatheson: I suspect you're not wrapping the base64 data in a &amp;lt;base64&amp;gt; tag as required. The decoding happens at a lower level than xmlrp.php. You have to wrap the bits data in &amp;lt;base64&amp;gt;
&lt;/p&gt;
&lt;p&gt;
This came up recently in an almost identical bug. I guess the documentation could make a point of underlining this base64 tag requirement.
&lt;/p&gt;
&lt;p&gt;
Daniel
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10539 (Comments Pagination Links disappear if you separate comments from pings) created</title>
      
        <dc:creator>aldolat</dc:creator>

      <pubDate>Mon, 03 Aug 2009 23:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10539</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10539/1249341331000000</guid>
      <description>&lt;p&gt;
If you try to separate the comments from pings (trackback and pinkbacks), the links to comments pagination (Previous and Next Comments) disappear if they are located &lt;strong&gt;after&lt;/strong&gt; the call to wp_list_comments('type=pings') function.
For example, after this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ol class="commentlist"&amp;gt;
&amp;lt;?php wp_list_comments('type=comment');?&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/pre&gt;&lt;p&gt;
paste:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;ol class="commentlist"&amp;gt;
&amp;lt;?php wp_list_comments('type=pings'); ?&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Now, you should not see the links to Previous and Next comments.
&lt;/p&gt;
&lt;p&gt;
Instead, you should continue to see the links located before the wp_list_comments.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10290 (Images uploaded via WLW do not add to Gallery) updated</title>
      
        <dc:creator>ioni</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:59:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10290#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10290#comment:9/1249340343000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Next verion, maybe?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:8/1249339904000000</guid>
      <description>&lt;p&gt;
Reverseable Shortcodes is by mdawaffe as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>reverseable-shortcodes.tar.gz attached to Ticket #10337</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10337/reverseable-shortcodes.tar.gz</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10337/reverseable-shortcodes.tar.gz/1249339882000000</guid>
      <description>&lt;p&gt;
Reversable shortcodes allowing non-unfiltered_html user to paste certain embed HTMLs and have it be stored in DB as a shortcode
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>oembed.php attached to Ticket #10337</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10337/oembed.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10337/oembed.php/1249339660000000</guid>
      <description>&lt;p&gt;
Shortcode-based oEmbed proof-of-concept plugin by mdawaffe
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10337 (Easier embeds for 2.9  (oEmbed perhaps?)) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 22:42:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10337#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10337#comment:7/1249339368000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was a widely requested feature in the 2.9 feature poll:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/development/2009/07/2-9-vote-results/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/development/2009/07/2-9-vote-results/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Since I've spent so much of my life &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/vipers-video-quicktags/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dealing with embeds&lt;/a&gt;, Jane asked me take a look at implementing easier embeds.
&lt;/p&gt;
&lt;p&gt;
I've been thinking about it over the past week or two and I'm currently of the opinion that implementing an &lt;a class="ext-link" href="http://oembed.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;oEmbed&lt;/a&gt; client with some manually coded fallbacks for popular sites that don't support oEmbed yet would be the way to go.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;My Current Brainstorm&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
New UI element is added, perhaps a new media button called like External Embed or something. I dunno, UI's aren't my strong suit.
&lt;/p&gt;
&lt;p&gt;
The user is prompted for the URL to the object (video, image, etc.).
&lt;/p&gt;
&lt;p&gt;
WordPress then...
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Connects to the URL looking in the head for a discovery &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; to their oEmbed provider.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;If not found, it checks the URL against an internal (filterable) list of oEmbed providers. This is meant for sites that support oEmbed but that don't have discovery links.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;If still not found, then it checks the URL against and internal sudo-oEmbed provider. Similar &lt;a class="ext-link" href="http://oohembed.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://oohembed.com/&lt;/a&gt; but it'd be internal rather than relying on a third party service. This is meant for popular sites that we want to support but that don't support oEmbed themselves (for example YouTube).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
mdawaffe and I have been discussing this and the only real concern seems to be malicious HTML getting in from the provider (say hidden tracking codes, advertising, etc.) However this would still happen if the user was to just copy/paste in the code themselves.
&lt;/p&gt;
&lt;p&gt;
There's also the decision about whether to do this with shortcodes or not.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The before method&lt;/strong&gt; consists of the oEmbed result HTML being inserted directly into the post contents. The user can then see the HTML and remove/edit anything they want, if they desire. The drawback is if the provider updates their embed code, it's not updated on the blog. Although this can be a pro if the update consists of malicious HTML. The other problem is it's harder to change things like width/height as it's often defined multiple times.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The after (shortcode) method&lt;/strong&gt; consists of a shortcode being inserted into the post rather than the HTML. The oEmbed request is made on post display (and probably cached for performance purposes). This is future proof and probably easier on the user, but the user has no control over the HTML. This does allow &lt;code&gt;unfiltered_html&lt;/code&gt; lacking users (i.e. WPMU) to embed though, which is both a pro and con.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Lack Of Customization&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Another problem with oEmbed is the lack of customization. For example, you couldn't easily set a default color for Vimeo embeds.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I am thinking about using oEmbed for making for easy embeds, but I am concerned about possible security issues, lack of customization, and so forth. As such, I am looking for feedback and ideas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10526 (oEmbed provider) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 21:39:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10526#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10526#comment:1/1249335590000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just for clarification for everyone: he's talking about a provider, not a consumer.
&lt;/p&gt;
&lt;p&gt;
Example: link to one of your WordPress posts on another site and the content of the post could be read and embedded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10538 (XMLRPC: File Upload missing Base64 Decode) updated</title>
      
        <dc:creator>amatheson</dc:creator>

      <pubDate>Mon, 03 Aug 2009 20:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10538#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10538#comment:1/1249330789000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #10538</title>
      
        <dc:creator>amatheson</dc:creator>

      <pubDate>Mon, 03 Aug 2009 20:05:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10538/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10538/xmlrpc.php.diff/1249329906000000</guid>
      <description>&lt;p&gt;
Diff of xmlrpc.php (v2.8.3)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10538 (XMLRPC: File Upload missing Base64 Decode) created</title>
      
        <dc:creator>amatheson</dc:creator>

      <pubDate>Mon, 03 Aug 2009 20:04:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10538</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10538/1249329881000000</guid>
      <description>&lt;p&gt;
I was using the upload XML RPC function to mass import images from a previous blog and found that all the files uploaded were being stored incorrectly. Looking into it, I discovered that although the documentation says that the 'bits' argument is a base64 value (&lt;a class="ext-link" href="http://codex.wordpress.org/XML-RPC_wp#wp.uploadFile"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/XML-RPC_wp#wp.uploadFile&lt;/a&gt;) but that the mw_newMediaObject() function does not decode the 'bits' value.  I've attached a diff that I've produced against the 2.8.3 version of xmlrpc.php.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 17:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:13/1249322332000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4021#comment:11" title="Comment 11"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Checkboxes then -- toggle each role.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah.. Thats the ovbious solution, But still doesn't look pretty to me.
&lt;/p&gt;
&lt;p&gt;
Is the 'read' capability used to be able to see posts/etc? I've not tested it, just spotted it a few times?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All roles have the &lt;code&gt;read&lt;/code&gt; cap, yes. It allows reading of content.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6698 (Editing a published post causes excessive pings / closing comments on ...) reopened</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Mon, 03 Aug 2009 15:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6698#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6698#comment:50/1249314929000000</guid>
      <description>&lt;p&gt;
Reading through this, I'm not sure why there was all this patching, none of which solved the original problem.
&lt;/p&gt;
&lt;p&gt;
To solve the actual original problem: Can we detect when the post_content changed and only generate a ping event when it has actually changed (and not some other field has been altered)?
&lt;/p&gt;
&lt;p&gt;
This keeps the real-time aspect (which is indeed critical, IMO), while solving the original problem of not forcing pings when the content remains unaltered.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [11770]: 2.8.3</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 03 Aug 2009 15:26:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11770/1249313203474749</guid>
      <description>&lt;p&gt;
2.8.3
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Milestone 2.8.3 completed</title>
      

      <pubDate>Mon, 03 Aug 2009 15:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/milestone/2.8.3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/milestone/2.8.3/1249313199000000</guid>
      <description></description>
      <category>milestone</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 15:22:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:12/1249312970000000</guid>
      <description>&lt;p&gt;
Theres a lot of plugins dealing with private "content" and imho it would be better to encourage developing/merging into a canonical plugin rather than putting a limited feature set directly into core. ( thats if canonical plugins happens like Matt talked about in State of the Word - SF ) Once the canonical plugin is matured it may go into core.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-wordpress/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-wp-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-wp-2/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/user-access-manager/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/user-access-manager/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/accessqontrol/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/accessqontrol/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wp-sentry/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wp-sentry/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-files/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-files/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wpnamedusers/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wpnamedusers/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/social-privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/social-privacy/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/private-wp/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/private-wp/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/privatepost/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/privatepost/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wp-ucanhide/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/wp-ucanhide/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/privateplus/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/privateplus/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7103 (Post Template) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 13:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7103#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7103#comment:9/1249304785000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7103#comment:5" title="Comment 5"&gt;janeforshort&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I second the idea of doing this as a plugin, which would also give us an idea of how many people would find it useful (enough for core).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If in core it will be popular cause theme developers will pick up on it.
&lt;/p&gt;
&lt;p&gt;
There are several plugin solutions available, and this should be a nice candidate as a canonical plugin imho. ( Matt talking about connecting plugin devs to make canonical plugins at WC SF. )
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/custom-post-template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/custom-post-template/&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/single-post-template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/single-post-template/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9674 (Better support for custom post types) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 12:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9674#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9674#comment:12/1249303519000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10012 (No custom taxonomy import, nor export) updated</title>
      
        <dc:creator>tntc1978</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10012#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10012#comment:3/1249295754000000</guid>
      <description>&lt;p&gt;
With use-cases &lt;a class="ext-link" href="http://justintadlock.com/archives/2009/06/04/using-custom-taxonomies-to-create-a-movie-database"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;like these&lt;/a&gt;, it seems that this feature should be essential in an export and import.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:9/1249295313000000</guid>
      <description>&lt;p&gt;
my environment
Apache 1.3.37
PHP 5.2.5
MySQL 5.1.22-rc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:4/1249293790000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Dont know why this happened
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You changed the component, So the owner changed. Dont worry about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>JohnMyr</dc:creator>

      <pubDate>Mon, 03 Aug 2009 10:01:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:3/1249293665000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10528#comment:1" title="Comment 1"&gt;JohnMyr&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Dont know why this happened, certainly not an intention by me: &lt;strong&gt;owner  markjaquith deleted&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 03 Aug 2009 09:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:11/1249292989000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Checkboxes then -- toggle each role.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah.. Thats the ovbious solution, But still doesn't look pretty to me.
&lt;/p&gt;
&lt;p&gt;
Is the 'read' capability used to be able to see posts/etc? I've not tested it, just spotted it a few times?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4021 (Private Blog Option request "Visible only to users I choose") updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Mon, 03 Aug 2009 08:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4021#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4021#comment:10/1249289804000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4021#comment:9" title="Comment 9"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One of the things i see wrong with the Roles option, Is that it would mean the user would have to select all the roles that they want to see the content, Ie. Admins &amp;amp; Editors, which will probably end up coming down to a "It should know if i select Editors, that obviously i intended Administrators to see it as well.."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Checkboxes then -- toggle each role.
&lt;/p&gt;
&lt;p&gt;
The drawback of all or nothing (i.e. registered users only) is that it doesn't work on open registration blogs or blogs with lots of untrusted users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10367 (Assert the existence of ABSPATH in wp-settings.php) reopened</title>
      
        <dc:creator>wet</dc:creator>

      <pubDate>Mon, 03 Aug 2009 05:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10367#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10367#comment:4/1249276899000000</guid>
      <description>&lt;p&gt;
In the light of the &lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/11769"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;current&lt;/a&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/11766"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;CYA&lt;/a&gt; &lt;a class="ext-link" href="http://core.trac.wordpress.org/changeset/11761#file10"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;swoop&lt;/a&gt;, would this patch be eventually reconsidered for commit?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [11769]: Stop direct loading of files in wp-admin that should only be included, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 03 Aug 2009 00:07:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11769</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11769/1249258061421222</guid>
      <description>&lt;p&gt;
Stop direct loading of files in wp-admin that should only be included, for 2.8
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [11768]: Stop direct loading of files in wp-admin that should only be included, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 03 Aug 2009 00:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11768/1249257885286413</guid>
      <description>&lt;p&gt;
Stop direct loading of files in wp-admin that should only be included, for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>