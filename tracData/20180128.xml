<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43142 (Do not warm term meta cache unnecessarily) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 28 Jan 2018 22:39:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43142#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43142#comment:4/1517179163811301</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Commit keyword removed as it applies to the previous patch.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43142/43142.2.diff" title="Attachment '43142.2.diff' in Ticket #43142"&gt;43142.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43142/43142.2.diff" title="Download"&gt;​&lt;/a&gt; removes term caching from several instances in &lt;code&gt;src/wp-includes/taxonomy.php&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp_insert_term()&lt;/code&gt;: search for siblings with the same name
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_insert_term()&lt;/code&gt;: search for all siblings
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_set_object_terms()&lt;/code&gt;: search for old &lt;code&gt;tt_ids&lt;/code&gt; using &lt;code&gt;wp_get_object_terms()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_set_object_terms()&lt;/code&gt;: search for final &lt;code&gt;tt_ids&lt;/code&gt; using &lt;code&gt;wp_get_object_terms()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_get_term_hierarchy()&lt;/code&gt;: hierarchy update as in previous patch
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@boonebgorges would you mind taking another look at the new patch? It's the calls setting an objects terms that I am least sure about.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43142.2.diff attached to Ticket #43142</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 28 Jan 2018 22:30:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43142/43142.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43142/43142.2.diff/1517178605260500</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29204 (SimplePie non-static WP_Feed_Cache::create error in fetch_feed()) updated</title>
      
        <dc:creator>rogerlos</dc:creator>

      <pubDate>Sun, 28 Jan 2018 22:28:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29204#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29204#comment:25/1517178501192615</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
I've been staring at
&lt;/p&gt;
&lt;pre class="wiki"&gt;Non-static method WP_Feed_Cache::create() should not be called statically
In \wp-includes\SimplePie\Registry.php [line 215]:
&lt;/pre&gt;&lt;p&gt;
on my dashboard for a few years now...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43142 (Do not warm term meta cache unnecessarily) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 28 Jan 2018 22:22:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43142#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43142#comment:3/1517178175463420</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 28 Jan 2018 17:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:27/1517161660553204</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by paragonie. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1517161658000046"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>paragoninitiativeenterprises</dc:creator>

      <pubDate>Sun, 28 Jan 2018 17:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:26/1517161630613092</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://twitter.com/GossiTheDog/status/957566213508468737"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/GossiTheDog/status/957566213508468737&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.bleepingcomputer.com/news/security/hacker-compromised-official-phpbb-download-links/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.bleepingcomputer.com/news/security/hacker-compromised-official-phpbb-download-links/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Supply chain attacks are on criminals' radars. It would be wise to take them seriously today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43166 (4.9 broke uploaded images' paths on my network installation) updated</title>
      
        <dc:creator>pasqal</dc:creator>

      <pubDate>Sun, 28 Jan 2018 17:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43166#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43166#comment:2/1517159330804619</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43166#comment:1" title="Comment 1"&gt;abdullahramzan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello @pasqal ,
&lt;/p&gt;
&lt;p&gt;
Please deactivate the plugins one by one and then check which plugin is conflicting with your WordPress and then contact the plugin author or reach them on its support forum.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hello @abdullahramzan,
&lt;/p&gt;
&lt;p&gt;
Already tried that, and it did not work.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>On Insert.png attached to Ticket #43171</title>
      
        <dc:creator>carnellm</dc:creator>

      <pubDate>Sun, 28 Jan 2018 16:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43171/On%20Insert.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43171/On%20Insert.png/1517157405218983</guid>
      <description>&lt;p&gt;
On Insert
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>On Editing After Insert.png attached to Ticket #43171</title>
      
        <dc:creator>carnellm</dc:creator>

      <pubDate>Sun, 28 Jan 2018 16:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43171/On%20Editing%20After%20Insert.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43171/On%20Editing%20After%20Insert.png/1517157383900314</guid>
      <description>&lt;p&gt;
On Editing After Insert
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43171 (Image Title Not Carrying through on Insert) created</title>
      
        <dc:creator>carnellm</dc:creator>

      <pubDate>Sun, 28 Jan 2018 16:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43171</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43171/1517157354178977</guid>
      <description>&lt;p&gt;
If I go into a post, page, or widget and insert and image the image title does not come through on that original insert. This happens with either a new uploaded image or one from the gallery. I can set the alt-text, caption, title, and such, but when it is inserted the title is the only field not to come through. It is blank. I can then go in and edit the image and fix the title and it takes. If I am editing an image in the image widget, the same thing happens. And if it is an existing image widget that I am just changing the image in, it will actually leave the title from the previous image - not blank it out or use the newly specified title.  I have verified this with new images, edited images, uploaded images, images from the media library, different image formats, etc...  And verified on multiple sites, on different hosts, with any and or all plug-ins deactivated or activated. Oh, and different themes. Everything from complex magazine theme to standard WP TwentyTen theme and stuff in between.  Can give access to sites where this happens. Actually, I have found no sites where it actually works correctly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>18322.2.diff attached to Ticket #18322</title>
      
        <dc:creator>NathanAtmoz</dc:creator>

      <pubDate>Sun, 28 Jan 2018 16:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18322/18322.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18322/18322.2.diff/1517156448902516</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18322 (The Road to Magic Quotes Sanity) updated</title>
      
        <dc:creator>NathanAtmoz</dc:creator>

      <pubDate>Sun, 28 Jan 2018 16:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18322#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18322#comment:48/1517156420264076</guid>
      <description>&lt;p&gt;
There's been &lt;a class="ext-link" href="https://externals.io/messages/100087"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;discussion&lt;/a&gt; that the super globals might become read-only in PHP8. While this is a long way off and certainly not a certainty, the idea of immutable super globals is intriguing.
&lt;/p&gt;
&lt;p&gt;
The attached patch creates a new class that stores the super globals before &lt;code&gt;wp_magic_quotes()&lt;/code&gt; is called, so the data is all unslashed. It also adds some helper function to get the data, but there's no way to modify the data - ensuring that the data is always unslashed.
&lt;/p&gt;
&lt;p&gt;
This would allow core a way forward by offering an API to get the unslashed data but still maintaining the quoted super globals. Unsupported plugins that were written to work with the actual PHP super globals would still work and not have security compromised. Supported plugins could change to use the new API if they want to work exclusively with unslashed data.
&lt;/p&gt;
&lt;p&gt;
In core, the new way to access the super globals would be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Old way
if( isset( $_POST[ 'var' ] ) ) {
  do_something_with( $_POST[ 'var' ] );
}
// New way
if( ! is_null( $var = _POST( 'var' ) ) ) {
  do_something_with( $var );
}
&lt;/pre&gt;&lt;p&gt;
and it would be up to each individual case to decide if it should be slashed before using. This also has the added benefit of not quoting and unquoting unnecessarily.
&lt;/p&gt;
&lt;p&gt;
The downside is obviously that there will be two sets of the super globals available: the actual super globals that have been slashed and the un-modified, unslashed, actually-not super globals.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 28 Jan 2018 16:10:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:99/1517155813211794</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pessoft. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1517155810000037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42888 (Add a "Show" button next to password fields on mobile) updated</title>
      
        <dc:creator>Iceable</dc:creator>

      <pubDate>Sun, 28 Jan 2018 15:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42888#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42888#comment:16/1517153498485452</guid>
      <description>&lt;p&gt;
I restarted from scratch for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42888/42888-4.diff" title="Attachment '42888-4.diff' in Ticket #42888"&gt;42888-4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42888/42888-4.diff" title="Download"&gt;​&lt;/a&gt; with a more global approach to work on all password fields, and included more accessibility considerations thanks to @afercia 's comments:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Used an actual &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; instead of a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; in &lt;code&gt;wp-login.php&lt;/code&gt; (login form and password reset form)
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Added text (Show / Hide) next to the icon on login et password reset forms.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note: this makes the button larger and the field smaller. It will be even larger for languages in which the words for "Show" and "Hide" are longer. Not sure whether this will be an issue or not, but if it is then maybe we can move the button below the field as opposed to on the right.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Changed the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around inputs with &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I could have removed some of them completely (which actually makes no visual difference), but I thought some wrappers wouldn't hurt and may be useful in some cases.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Used non wrapping &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;'s' with &lt;code&gt;for&lt;/code&gt; attributes for input fields.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;While I was at it, I also got rid of &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags and adjusted &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;'s' in other forms in &lt;code&gt;wp-login.php&lt;/code&gt; (lost password, register)
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Enqueued &lt;code&gt;user-profile.js&lt;/code&gt; on the login form page, and modified the password fields related functions so that:
&lt;ul&gt;&lt;li&gt;They also work for the login page so we don't need to write additional functions
&lt;/li&gt;&lt;li&gt;They use the "new approach" (toggling the field's &lt;code&gt;type&lt;/code&gt; between &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; instead of using mirrored fields) for all password fields: login, password reset, add new user, edit user
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note: &lt;code&gt;jQuery&lt;/code&gt; was not loaded on the login page before. It is now since it is a dependency of &lt;code&gt;user-profile.js&lt;/code&gt;. I don't see it as an issue, but worth noting.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Login and Password reset pages: added the &lt;code&gt;.no-js&lt;/code&gt; class to &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, so we can use &lt;code&gt;.hide-if-no-js&lt;/code&gt; to hide the toggle button when JS is not available.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
[edit] Just realized after uploading the patch that the button doesn't have the right height in Firefox. Changing line 94 in &lt;code&gt;login.css&lt;/code&gt; from &lt;code&gt;height: 100%;&lt;/code&gt; to &lt;code&gt;height: 40px;&lt;/code&gt; fixes it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42888-4.diff attached to Ticket #42888</title>
      
        <dc:creator>Iceable</dc:creator>

      <pubDate>Sun, 28 Jan 2018 15:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42888/42888-4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42888/42888-4.diff/1517153170528084</guid>
      <description>&lt;p&gt;
New approach for all password fields + accessbiility
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43166 (4.9 broke uploaded images' paths on my network installation) updated</title>
      
        <dc:creator>abdullahramzan</dc:creator>

      <pubDate>Sun, 28 Jan 2018 14:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43166#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43166#comment:1/1517149961224919</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @pasqal ,
&lt;/p&gt;
&lt;p&gt;
Please deactivate the plugins one by one and then check which plugin is conflicting with your WordPress and then contact the plugin author or reach them on its support forum.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43138 (Deleting intermediate image-sizes with non-ASCII file-names) updated</title>
      
        <dc:creator>idofri</dc:creator>

      <pubDate>Sun, 28 Jan 2018 11:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43138#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43138#comment:3/1517137371188236</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've made a bigger ticket for this as I ran into this same issue elsewhere: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43170" title="#43170: defect (bug): Replace all usages of basename() with wp_basename() in order to ... (new)"&gt;#43170&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43170 (Replace all usages of basename() with wp_basename() in order to ...) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 28 Jan 2018 10:27:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43170#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43170#comment:1/1517135241955626</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The above attached patch is just one example where we need to swap it out. I discovered this when writing a unit test for one of my plugins:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/Viper007Bond/regenerate-thumbnails/commit/08f5eabd3ff041938aab0b0d1a3a5bde4aaaaca3#diff-35c785b29ba1242d0fbf2db80deb00c8R567"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Viper007Bond/regenerate-thumbnails/commit/08f5eabd3ff041938aab0b0d1a3a5bde4aaaaca3#diff-35c785b29ba1242d0fbf2db80deb00c8R567&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I ended up having to clone &lt;code&gt;self::factory()-&amp;gt;attachment-&amp;gt;create_upload_object()&lt;/code&gt; so that I didn't end up with &lt;code&gt;unnamed-file.jpg&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43138 (Deleting intermediate image-sizes with non-ASCII file-names) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 28 Jan 2018 10:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43138#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43138#comment:2/1517134409978563</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This patch fixes only A single instance of the described issue and should be examined more widely.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've made a bigger ticket for this as I ran into this same issue elsewhere: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43170" title="#43170: defect (bug): Replace all usages of basename() with wp_basename() in order to ... (new)"&gt;#43170&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43170-tests-factory-attachments.patch attached to Ticket #43170</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 28 Jan 2018 10:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43170/43170-tests-factory-attachments.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43170/43170-tests-factory-attachments.patch/1517134340110983</guid>
      <description>&lt;p&gt;
Allow for multibyte filenames in attachment unit tests.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43170 (Replace all usages of basename() with wp_basename() in order to ...) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 28 Jan 2018 10:10:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43170</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43170/1517134209647324</guid>
      <description>&lt;p&gt;
We still use &lt;code&gt;basename()&lt;/code&gt; in a lot of places even though it isn't multibyte compatible out of the box. See &lt;a class="ext-link" href="http://php.net/basename"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/basename&lt;/a&gt; and &lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=62119"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bugs.php.net/bug.php?id=62119&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Example filename where it can fail: &lt;code&gt;麻美.jpg&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
We should replace all uses of &lt;code&gt;basename()&lt;/code&gt; with our own &lt;code&gt;wp_basename()&lt;/code&gt;. This will probably need a lot of testing, so probably best to avoid one big patch and instead change calls in small chunks.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43138" title="#43138: defect (bug): Deleting intermediate image-sizes with non-ASCII file-names (new)"&gt;#43138&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41612 ("URL" field in Media Modal confusing for newer users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 27 Jan 2018 19:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41612#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41612#comment:7/1517080573496623</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43169" title="#43169: defect (bug): Media views: avoid to move focus programmatically when not strictly ... (reviewing)"&gt;#43169&lt;/a&gt; (for the focus issue)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43169 (Media views: avoid to move focus programmatically when not strictly ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 27 Jan 2018 19:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43169#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43169#comment:1/1517080533038255</guid>
      <description>&lt;p&gt;
Partially related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41612" title="#41612: enhancement: &amp;#34;URL&amp;#34; field in Media Modal confusing for newer users (new)"&gt;#41612&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43169 (Media views: avoid to move focus programmatically when not strictly ...) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 27 Jan 2018 19:13:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43169</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43169/1517080430081770</guid>
      <description>&lt;p&gt;
Ideally, focus should be managed programmatically only to "repair" the native tab order and avoid focus losses. For example, when opening a modal dialog focus needs to be moved to the modal and when closing it, focus must be moved back to the control that opened the modal.
&lt;/p&gt;
&lt;p&gt;
In the media views, in many cases, moving focus is designed for a mouse-based interaction flow and, generally, it appears it was designed with a specific workflow in mind, that is: the workflow the developers felt was "right". In other words: based on assumptions.
&lt;/p&gt;
&lt;p&gt;
While I understand the intent was good, this is very problematic for keyboard users. Let's make a couple examples:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/SpSTMrgvdn.png"&gt;&lt;img src="https://cldup.com/SpSTMrgvdn.png" alt="https://cldup.com/SpSTMrgvdn.png" crossorigin="anonymous" title="https://cldup.com/SpSTMrgvdn.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When adding an attachment to a post, for example selecting an image in the media grid, focus is moved to the URL field in the details sidebar. This is not an issue for mouse users: they can click another image at any time. Now, say a keyboard users is trying to add a gallery and needs to select multiple images: every time the user selects an image pressing the Spacebar, focus goes to the sidebar. Now the user is forced to tab many times, potentially hundreds of times depending on the number of images in the grid, to go to the grid again and select another image. Not to mention screen reader users will hardly understand why the context is changed and what the next step is.
&lt;/p&gt;
&lt;p&gt;
In this case, focus should just stay in place on the selected image. It is far better to avoid an abrupt change of context rather than assuming that moving focus to the URL field is of any help for users.
&lt;/p&gt;
&lt;p&gt;
One more example:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/xmCQcKmGST.png"&gt;&lt;img src="https://cldup.com/xmCQcKmGST.png" alt="https://cldup.com/xmCQcKmGST.png" crossorigin="anonymous" title="https://cldup.com/xmCQcKmGST.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Over time, the media modal has been adapted and used also for other core features. In the screenshot above, that is what happens when editing an image attached to an Image widget in the widgets screen. Focus is moved to the URL field, if the image is linked (when it's not linked, there's no URL field displayed). Notice this happens only the first time the modal opens, not sure why.
&lt;/p&gt;
&lt;p&gt;
Regardless, for keyboard and screen reader users big part of the content of the modal gets "skipped" and they land in the middle of some content without any context or meaningful information about what just happened.
&lt;/p&gt;
&lt;p&gt;
I'd like to propose to remove any focus management from the media views, except for the cases where keeping focus within the modal is necessary. It is far better to keep the native tab order: users will find their way, once they learn how the interface is structured. Worth reminding assistive technologies users already have tools to jump to different part of the content, if the content is semantic and well structured.
&lt;/p&gt;
&lt;p&gt;
I'd also like to quote what the React team states in their documentation dedicated to accessibility, they say it very well, far better than I could ever say:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://reactjs.org/docs/accessibility.html#programmatically-managing-focus"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://reactjs.org/docs/accessibility.html#programmatically-managing-focus&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Use it (Ed. focus management) to repair the keyboard focus flow when it is disturbed, &lt;strong&gt;not to try and anticipate how users want to use applications&lt;/strong&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>iris picker z-index.png attached to Ticket #43168</title>
      
        <dc:creator>crstnio</dc:creator>

      <pubDate>Sat, 27 Jan 2018 18:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43168/iris%20picker%20z-index.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43168/iris%20picker%20z-index.png/1517079526147780</guid>
      <description>&lt;p&gt;
Iris color picker handle z-index bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43168 (Customizer: Iris color picker handle above section title) created</title>
      
        <dc:creator>crstnio</dc:creator>

      <pubDate>Sat, 27 Jan 2018 18:58:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43168/1517079485085770</guid>
      <description>&lt;p&gt;
When Iris color picker is opened, the handle displays bevor the section title – if section is visible during scroll-up.
&lt;/p&gt;
&lt;p&gt;
Section title styles:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#customize-controls .customize-info.is-in-view,
#customize-controls .customize-section-title.is-in-view {
    z-index: 9;
}
&lt;/pre&gt;&lt;p&gt;
Handle styles:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.iris-picker .iris-square-handle {
    z-index: 10;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43167 (Unable to install worpress, error on wp-admin/setup-config.php) created</title>
      
        <dc:creator>irecinius</dc:creator>

      <pubDate>Sat, 27 Jan 2018 18:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43167/1517078863649799</guid>
      <description>&lt;p&gt;
Install Step 2: fails with message
"WordPress database error Unknown column 'wp_' in 'field list' for query SELECT wp_"
&lt;/p&gt;
&lt;p&gt;
MYSQL -&amp;gt; SELECT VERSION();
RESPONSE -&amp;gt; '5.6.38-83.0-log'
&lt;/p&gt;
&lt;p&gt;
Bug:
Setup-Config@L310
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-admin/setup-config.php#L310"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-admin/setup-config.php#L310&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Running the query:
$wpdb-&amp;gt;query( "SELECT $prefix" );
&lt;/p&gt;
&lt;p&gt;
MYSQL -&amp;gt; SELECT wp_
RESPONSE -&amp;gt; Error Code: 1054. Unknown column 'wp_' in 'field list'
&lt;/p&gt;
&lt;p&gt;
Observations, query fails regardless if prefix exists or not, tested on a working database, same query fails with same message
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43166 (4.9 broke uploaded images' paths on my network installation) created</title>
      
        <dc:creator>pasqal</dc:creator>

      <pubDate>Sat, 27 Jan 2018 18:05:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43166/1517076307440273</guid>
      <description>&lt;p&gt;
I run a network installation. I upgraded from 4.8.2 to 4.9 back in December but found out that images were broken on all of my network's sites.
&lt;/p&gt;
&lt;p&gt;
My network's sites are as follows:
&lt;/p&gt;
&lt;p&gt;
Site 1: &lt;a class="ext-link" href="https://www.mybrand.com/es/blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.mybrand.com/es/blog/&lt;/a&gt;
Site 2: &lt;a class="ext-link" href="https://www.mybrand.com/en/blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.mybrand.com/en/blog/&lt;/a&gt;
Site 3: &lt;a class="ext-link" href="https://www.mybrand.co.uk/en/blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.mybrand.co.uk/en/blog/&lt;/a&gt;
Site 4: &lt;a class="ext-link" href="https://www.mybrand.it/it/blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.mybrand.it/it/blog/&lt;/a&gt;
etc.
&lt;/p&gt;
&lt;p&gt;
4.9 converts a 4.8.2 working image URL on Site 1, such as:
&lt;a class="ext-link" href="https://www.mybrand.com/es/blog/wp-content/uploads/sites/1/2016/09/image.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.mybrand.com/es/blog/wp-content/uploads/sites/1/2016/09/image.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
...into the following non-existent URL:
&lt;a class="ext-link" href="https://www.mybrand.com/es/blog/wp-content/uploads/2016/09/image.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.mybrand.com/es/blog/wp-content/uploads/2016/09/image.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
... thus resulting in a 404 response for the image load.
&lt;/p&gt;
&lt;p&gt;
Since I had upgraded some plugins together with the Wordpress core, what I tried first was deactivating those, with no success. So I ended up downgrading the core back to 4.8.2, which fixed the bug.
&lt;/p&gt;
&lt;p&gt;
Last week I again tried upgrading to 4.9.2, with the same result (the image bug is still there). This time I downgraded to 4.8.5, which works fine.
&lt;/p&gt;
&lt;p&gt;
All sites use the Twenty Sixteen template.
&lt;/p&gt;
&lt;p&gt;
My current install includes the following plugins at the network level:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;AddToAny Share Buttons Version 1.7.23
&lt;/li&gt;&lt;li&gt;All In One SEO Pack Version 2.4.4.1
&lt;/li&gt;&lt;li&gt;Autoptimize Version 2.3.2
&lt;/li&gt;&lt;li&gt;Broken Link Checker Version 1.11.5
&lt;/li&gt;&lt;li&gt;Custom Meta Widget Version 1.4.8
&lt;/li&gt;&lt;li&gt;Custom Permalinks Version 1.2.12
&lt;/li&gt;&lt;li&gt;Customize Login Image Version 3.3.1
&lt;/li&gt;&lt;li&gt;Disable REST API Version 1.4.2
&lt;/li&gt;&lt;li&gt;External Links Version 6.8.1
&lt;/li&gt;&lt;li&gt;Google Analytics for WordPress by MonsterInsights Version 6.2.7
&lt;/li&gt;&lt;li&gt;Google Captcha (reCAPTCHA) by BestWebSoft Version 1.33
&lt;/li&gt;&lt;li&gt;HREFLANG Tags Lite Version 1.5.6 | By DCGWS
&lt;/li&gt;&lt;li&gt;Jetpack by WordPress.com Version 5.7.1
&lt;/li&gt;&lt;li&gt;kk Star Ratings Version 2.6
&lt;/li&gt;&lt;li&gt;Simple 301 Redirects Version 1.07
&lt;/li&gt;&lt;li&gt;W3 Total Cache Version 0.9.6
&lt;/li&gt;&lt;li&gt;wBounce Version 1.8
&lt;/li&gt;&lt;li&gt;WordPress Importer Version 0.6.3
&lt;/li&gt;&lt;li&gt;WP Downgrade Version 1.1.4
&lt;/li&gt;&lt;li&gt;WP Login Flow Version 1.0.0
&lt;/li&gt;&lt;li&gt;WP Rollback Version 1.5
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I actually installed WP Downgrade and WP Rollback after 4.9 broke my installation, to help downgrade to a working version.
&lt;/p&gt;
&lt;p&gt;
All templates and plugins are up to date.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43163 (Did you know? CSS notification needs a Dismiss button to close) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 27 Jan 2018 17:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43163#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43163#comment:5/1517072889349931</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Although @pracko makes a point when says experienced users don't need a persistent reminder and argues that editing in the 253 pixels wide (!) editor in the Customizer is any better than using the classic theme editor (well actually this depends on the use cases), going through &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42100" title="#42100: task (blessed): File editor warning copy / UI tweaks (closed: fixed)"&gt;#42100&lt;/a&gt; and looking a bit at WordPress history, there are other cases of persistent notices or other persistent "hints". I'd rather point out that there's no consistency though:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/PjW6Q2vxnC.png"&gt;&lt;img src="https://cldup.com/PjW6Q2vxnC.png" alt="https://cldup.com/PjW6Q2vxnC.png" crossorigin="anonymous" title="https://cldup.com/PjW6Q2vxnC.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id="Designconsistency"&gt;Design consistency&lt;/h2&gt;
&lt;p&gt;
I'm not sure why the Editor screen uses the new notice, while the Widgets and Menus screens use the "Manage with Live Preview" button (which I always found not so nice looking, to be fair). Historically, the persistent notices have been used for pages that were going to be dismissed, or their usage discouraged, like the Custom Header and Custom Background pages. For pages still in use, the choice has been the less invasive "Manage" button.
&lt;/p&gt;
&lt;p&gt;
I'm pretty sure there were good argumentation when these buttons and notices were introduced but now it's probably time to try to introduce some consistency and improve things. Consistency is key. I'd lean towards the notices just because the buttons bother me, and I'd prefer to have the main heading on its own reserved space, without any additional element close to it. But that's just my personal preference.
&lt;/p&gt;
&lt;h2 id="Languageconsistency"&gt;Language consistency&lt;/h2&gt;
&lt;p&gt;
What is the proper name to use for the Customizer? As a user, I have no idea what a &lt;code&gt;built-in CSS editor&lt;/code&gt; is. And I have no idea clicking on a link that says &lt;code&gt;built-in CSS editor&lt;/code&gt; actually brings me to the Customizer. Links purpose/destination should always be clear, even when the link is read out of context. The link text should include the word "Customizer" or "Live Preview" or whatever the hte Customizer should be named.
&lt;/p&gt;
&lt;p&gt;
I seem to recall there was a long discussion when the "Manage" buttons were introduced, focused on avoiding to use the word "Customizer". I guess that's the reason why the buttons use "Live Preview" with title case: to indicate the name of a WordPress feature. However, the old Custom Header/Background pages use "Customizer". I'd agree this is a minor case since these pages are hidden by default. By the way, the word "Customizer" is now used in a very prominent place: the 4.9 About page:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Major Customizer Improvements, Code Error Checking, and More!&lt;/code&gt;
&lt;code&gt;Welcome to an improved Customizer workflow ...&lt;/code&gt;
&lt;code&gt;Customizer Workflow Improved&lt;/code&gt;
&lt;code&gt;Customizer JS API Improvements&lt;/code&gt;
&lt;code&gt;We’ve made numerous improvements to the Customizer JS API ...&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not a native English speaker and I do know "Customizer" is very difficult to translate. In the Italian translation, it's always translated with "Personalizza", which is the verb imperative mood "Customize" and I can tell you that's far from ideal. On the other hand, any Italian people I talk with, they call it with the English word "Customizer" because that just makes more sense. In my country, we're not opposed to using non-italian terms, when that makes sense. However, this may not apply to other countries and cultures. A more generic term like "Live Preview" might be a better option. Regardless of the final choice, there should be some consistency in the interface. Right now, WordPress is using both "Live Preview" and "Customizer", which is confusing for users.
&lt;/p&gt;
&lt;p&gt;
Minor: does "live preview" needs a hyphen when used as a verb? There's no consistency here either:
&lt;code&gt;There’s no need to change your CSS here — you can edit and live preview CSS changes in the built-in CSS editor.&lt;/code&gt;
&lt;code&gt;You can now manage and live-preview Custom Header in the Customizer.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I do realize the considerations about naming are a bit out of the scope of this ticket, glad to create a new one if there's consensus.
&lt;/p&gt;
&lt;p&gt;
/cc @melchoyce @helen
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39242 (Add caching to count_user_posts()) updated</title>
      
        <dc:creator>milindmore22</dc:creator>

      <pubDate>Sat, 27 Jan 2018 12:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39242#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39242#comment:2/1517057512138321</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, performances of websites using REST is highly affected.
&lt;/p&gt;
&lt;p&gt;
I have added a patch based on WP VIP function below.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Cached version of count_user_posts, which is uncached but doesn't always need to hit the db
 *
 * count_user_posts is generally fast, but it can be easy to end up with many redundant queries
 * if it's called several times per request. This allows bypassing the db queries in favor of
 * the cache
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wpcom_vip_count_user_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;is_numeric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$cache_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'vip_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$user_id&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$cache_group&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'user_posts_count'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$cache_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cache_group&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;count_user_posts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;wp_cache_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$cache_key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$cache_group&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;MINUTE_IN_SECONDS&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$count&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Do we need proper cache invalidation or  5 Min expiration timeout will do ?
&lt;/p&gt;
&lt;p&gt;
I think we should handle this in 5.0 thoughts ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39242.diff attached to Ticket #39242</title>
      
        <dc:creator>milindmore22</dc:creator>

      <pubDate>Sat, 27 Jan 2018 12:45:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39242/39242.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39242/39242.diff/1517057124251125</guid>
      <description>&lt;p&gt;
Cache for count_user_posts
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>contributor-list-issue-with-plugin-details.png attached to Ticket #43165</title>
      
        <dc:creator>alkesh7</dc:creator>

      <pubDate>Sat, 27 Jan 2018 12:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43165/contributor-list-issue-with-plugin-details.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43165/contributor-list-issue-with-plugin-details.png/1517056423668002</guid>
      <description>&lt;p&gt;
Issue with Contributor list - Showing username instead of name
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43165 (Contributors 'Username' displaying instead of 'Name' with plugin's ...) created</title>
      
        <dc:creator>alkesh7</dc:creator>

      <pubDate>Sat, 27 Jan 2018 12:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43165</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43165/1517056351279828</guid>
      <description>&lt;p&gt;
I noticed that there is an issue with showing a list of contributor names with WordPress backend panel.
&lt;/p&gt;
&lt;p&gt;
There might be an issue with Backend API call or variable selection.
&lt;/p&gt;
&lt;p&gt;
Let me explain,
&lt;/p&gt;
&lt;p&gt;
I picked one plugin &lt;strong&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/blog-designer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Blog Designer&lt;/a&gt;&lt;/strong&gt; for reference. Just scroll down and check list of &lt;strong&gt;Contributors &amp;amp; Developers&lt;/strong&gt;. You will see that name of those plugin's contributors.
&lt;/p&gt;
&lt;p&gt;
While, I'm checking that same exact plugin contributor's list on &lt;em&gt;Add New&lt;/em&gt; plugin page within &lt;span class="underline"&gt;WordPress backend panel&lt;/span&gt;.
&lt;/p&gt;
&lt;p&gt;
That showing username of those contributors. Please check attachment for more details.
&lt;/p&gt;
&lt;p&gt;
Please correct the contributor listing call with proper field selection in coding.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 27 Jan 2018 11:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:64/1517053197726612</guid>
      <description>&lt;p&gt;
Good spots, I was running my test with the plugin active and did not catch the missing class.
&lt;/p&gt;
&lt;p&gt;
Active plugins should be listed, the active theme is more prominent because it's not something you often swap in and out like plugins I presume (the inspiration for that field came from the WooCommerce implementation of their own debug area, that is my understanding of that field at least).
&lt;/p&gt;
&lt;p&gt;
Fixing title cases, relabling the site language bit and the local switch as well as typo are excellent.
&lt;/p&gt;
&lt;p&gt;
As for the loopback checker, I'm wondering if it would make sense to take the loopback test that was put in for the theme and plugin editors and split it into a stand alone function for better reusability? It's currently part of &lt;code&gt;wp_edit_theme_plugin_file()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 27 Jan 2018 11:23:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:63/1517052222348072</guid>
      <description>&lt;p&gt;
This is coming along well, thanks @Clorith!
&lt;/p&gt;
&lt;p&gt;
Some minor notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Why is the active theme listed, but not the active plugins
&lt;/li&gt;&lt;li&gt;Minor detail: "Active theme" is written with a small "T", "Inactive Plugins" with a capital "P". I think title case should be used for all sections
&lt;/li&gt;&lt;li&gt;In this line: &lt;code&gt;( ! empty( $locale ) ? $original_locale : get_locale() )&lt;/code&gt; — &lt;code&gt;$original_locale&lt;/code&gt; and &lt;code&gt;$locale&lt;/code&gt; are not defined. That's a remnant from the locale switching in the plugin. Just use &lt;code&gt;get_locale()&lt;/code&gt;. And perhaps rename the section to "Site Language" for clarification.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$loopback = Health_Check_Loopback::can_perform_loopback(); &lt;/code&gt; — the class obviously doesn't exist in core, leading to a fatal error.
&lt;/li&gt;&lt;li&gt;Typo: "this is information that may be considers private" -&amp;gt; "considered"
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 27 Jan 2018 11:20:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:62/1517052010088281</guid>
      <description>&lt;p&gt;
You are absolutely right, hazards of copying :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39165.10.patch attached to Ticket #39165</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 27 Jan 2018 11:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/39165.10.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/39165.10.patch/1517051980522854</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Sat, 27 Jan 2018 11:06:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:61/1517051162183336</guid>
      <description>&lt;p&gt;
One thing @Clorith, I think you need to drop the text-domain :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Sat, 27 Jan 2018 11:03:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:60/1517051014853826</guid>
      <description>&lt;p&gt;
I don't think it should be in the side menu. This looks good to me. @SergeyBiryukov could you have a look?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38157 (Add tests for get_post_type_labels()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 27 Jan 2018 10:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38157#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38157#comment:8/1517048540545251</guid>
      <description>&lt;p&gt;
@birgire Good call! I haven't closely looked at the tests, but yes, that should generally be avoided. I'll try to have a look at it soon. Perhaps even by going through _all_ tests to improve this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>not-gettexted-0.mo attached to Ticket #42818</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 27 Jan 2018 10:10:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42818/not-gettexted-0.mo</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42818/not-gettexted-0.mo/1517047843656748</guid>
      <description>&lt;p&gt;
Compiled test translation changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42818 (i18n Tools have PHP 7.2 compatibility issues) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 27 Jan 2018 10:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42818#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42818#comment:3/1517047714497594</guid>
      <description>&lt;p&gt;
Attached two patches that address the issue.
&lt;/p&gt;
&lt;p&gt;
The first patch takes care of makepot.php, the create_function call there simply wraps the input into curly braces, so the fix is simple - move to a function of its own.
&lt;/p&gt;
&lt;p&gt;
The second patch handles the two calls inside not-gettexted.php. Their usage was is a bit tricker, relying on dynamic state, so the functionality was moved into stateful classes, and a method is returned instead of a function.
&lt;/p&gt;
&lt;p&gt;
The second patch also fixes two test issues in not-gettexted:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;A failing case in the replace test: http vs https URLs in the expected result, seems like links to wordpress.org in PHP files were replaced to their secure counterparts but the po/mos were not touched, so the translation was not being found
&lt;/li&gt;&lt;li&gt;construct vs setUp for initialization on the test case
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
All tests pass with both patches applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42818.2.diff attached to Ticket #42818</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 27 Jan 2018 10:01:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42818/42818.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42818/42818.2.diff/1517047310537872</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>42818.patch attached to Ticket #42818</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Sat, 27 Jan 2018 08:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42818/42818.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42818/42818.patch/1517043107815069</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 27 Jan 2018 01:04:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:59/1517015088030341</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/39165.9.patch" title="Attachment '39165.9.patch' in Ticket #39165"&gt;39165.9.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/39165.9.patch" title="Download"&gt;​&lt;/a&gt; Introduces the footer link, basic styling to keep tables aligned for readability and an updated &lt;code&gt;info.php&lt;/code&gt; file that's brought in line with the &lt;code&gt;Debug information&lt;/code&gt;tab in the Health Check plugin at this time.
&lt;/p&gt;
&lt;p&gt;
I'm still not sold on adding it to the side menu in wp-admin, it's not something we hope will need to be directly accessed in such a "grand" manner often, but the footer link works.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39165.9.patch attached to Ticket #39165</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 27 Jan 2018 01:00:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/39165.9.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/39165.9.patch/1517014854461595</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43163 (Did you know? CSS notification needs a Dismiss button to close) updated</title>
      
        <dc:creator>pracko</dc:creator>

      <pubDate>Sat, 27 Jan 2018 00:26:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43163#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43163#comment:4/1517012775989013</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43163#comment:3" title="Comment 3"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am actually in favor of the messages at the top of the editor pages being non-dismissible. We want to encourage users to stick with the tools they're given that will prevent them from accidentally losing the changes they've made.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am up for hearing arguments for it needing to be dismissible though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
OK, here's one: the warning takes up too much space. As an experienced designer who knows what he's doing, I don't need a bulky reminder constantly nagging me to use the narrow and virtually unusable CSS editor in the customizer. I want to be able to remove nags when I don't find them useful or applicable to my situation. The warning is helpful, but not necessary to be persistent; therefore it should be dismissable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>