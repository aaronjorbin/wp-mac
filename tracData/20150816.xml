<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #32741 (External links in the Customizer preview should open in a new tab ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 16 Aug 2015 23:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32741#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32741#comment:4/1439766860071827</guid>
      <description>&lt;p&gt;
Just noticed today that you &lt;em&gt;can't&lt;/em&gt; open a link in a new tab with ctrl+click - the only way to do it is by right-clicking. So we definitely need to do something here, since even default browser behavior doesn't work for users that know how to use it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 16 Aug 2015 22:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:24/1439764540594725</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-passwords by peterwilsoncc. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-passwords/p1439764538000010"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 16 Aug 2015 20:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:10/1439758574834743</guid>
      <description>&lt;p&gt;
33377.3.diff looks good for now.
&lt;/p&gt;
&lt;p&gt;
Eventually in PHP we should do something similar to the JS -- remove line breaks after any &amp;lt;br&amp;gt;, replace remaining line breaks with &amp;lt;br&amp;gt;, add line breaks after all &amp;lt;br&amp;gt; to make it prettier.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$pee = preg_replace( '|(&amp;lt;br[^&amp;gt;]*&amp;gt;)\s*\n|i', '$1', $pee );
$pee = preg_replace( '|\s*\n|', '&amp;lt;br /&amp;gt;', $pee );
$pee = preg_replace( '|(&amp;lt;br[^&amp;gt;]*&amp;gt;)|i', "$1\n", $pee );
&lt;/pre&gt;&lt;p&gt;
This changes the behaviour so a bit reluctant to do it now, so close to release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33382 (Asterisk-space sometimes doesn't convert to a bullet) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 16 Aug 2015 20:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33382#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33382#comment:3/1439755749428546</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33382 (Asterisk-space sometimes doesn't convert to a bullet) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 16 Aug 2015 20:08:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33382#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33382#comment:2/1439755721276067</guid>
      <description>&lt;p&gt;
In 33382.patch: exclude shift when checking for modifier keys when applying the list patterns on pressing the spacebar.
&lt;/p&gt;
&lt;p&gt;
The patterns that activate on enter are still canceled when any modifier is pressed. Currently shift + enter produces a &amp;lt;br&amp;gt; and cancels the replacement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33382.patch attached to Ticket #33382</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 16 Aug 2015 20:02:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33382/33382.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33382/33382.patch/1439755358933304</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33382 (Asterisk-space sometimes doesn't convert to a bullet) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 16 Aug 2015 19:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33382#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33382#comment:1/1439753654486337</guid>
      <description>&lt;p&gt;
We specifically check for modifier keys when pressing the spacebar: &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/tinymce/plugins/wptextpattern/plugin.js#L47"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/tinymce/plugins/wptextpattern/plugin.js#L47&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/tinymce/plugins/wptextpattern/plugin.js#L41"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/js/tinymce/plugins/wptextpattern/plugin.js#L41&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Perhaps we can only check for Ctrl, Cmd and Alt and allow Shift?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33384 (Create new dashicons: Food-icons) created</title>
      
        <dc:creator>truebiger</dc:creator>

      <pubDate>Sun, 16 Aug 2015 13:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33384</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33384/1439733411951693</guid>
      <description>&lt;p&gt;
Some new dashicons to use (among others) for custom post types would be very handy. Food icons (except for a carrot) are missing completely.
&lt;/p&gt;
&lt;p&gt;
A drink and a dish would be perfect.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 16 Aug 2015 13:10:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:83/1439730630793397</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30261#comment:82" title="Comment 82"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not fixed?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry - almost. We need to properly set a default value for the 'finished_splitting_shared_terms' option, to prevent 'notoptions' database queries before the routine is finished. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.20.diff" title="Attachment '30261.20.diff' in Ticket #30261"&gt;30261.20.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.20.diff" title="Download"&gt;​&lt;/a&gt; needs review before commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>30261.20.diff attached to Ticket #30261</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 16 Aug 2015 13:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/30261/30261.20.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/30261/30261.20.diff/1439730549098525</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32139 (Add PHPDoc for all global $wp_query in /wp-includes/query.php) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 16 Aug 2015 09:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32139#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32139#comment:12/1439715620393006</guid>
      <description>&lt;p&gt;
Although PhpStorm 9 now automatically recognizes common WordPress global variables like &lt;code&gt;$wpdb&lt;/code&gt; or &lt;code&gt;$wp_query&lt;/code&gt;, it would be nice to improve documentation wherever we can.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sun, 16 Aug 2015 01:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:23/1439690326833246</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What WordPress can and must do is to to scan the plugin/theme directories for plugins using things that will break when running PHP 5.5 and later. So they can show to the outside that nothing can break when moving to the latest PHP version. I already have seen enough breakage that this can become a serious issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great point. I agree that would be an important step on the WordPress side.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Setting the date is something that needs to be done together with host. WordPress isn't really a big party in this. People can believe that WordPress can push them but they can't. They can use &lt;a class="ext-link" href="https://wordpress.org/hosting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/hosting/&lt;/a&gt; to push ("blackmail") hosts but that only work for a few of them. Weirdly to say but WordPress is to small for it. If there is a good way for hosts to tackle their increase in support (fixing sites) then making the push will become easier. Depending on the host this can be really tricky since you probably do need some development skills.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My fear is that there are so many parties involved with nothing to gain that no consensus will be made. I don't see how it's unfair or blackmail if: 1. They have irresponsibly allowed their systems to decay (in terms of staying on one version). 2. We're talking about an extended timeframe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 15 Aug 2015 23:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:22/1439681033887165</guid>
      <description>&lt;p&gt;
To me this is a users problem on the first place but that's to easy to say. If you say hosts should update then there is a problem since most hosts are already supporting 5.6 or 5.5. They simply can't just kill old versions as @jdgrimes said in one of his comments. Hosts also play the long game like WordPress does for the exact same reason: No breakage for their users.
So it's up to the user to update the PHP version of their account or sites (depending how the host work).  The big problem then is to make them understand why and how they can do the update themselves. When then the percentage of for example PHP 5.2 drops then it's easier for hosts and WordPress to kill it.
&lt;/p&gt;
&lt;p&gt;
What WordPress can and must do is to to scan the plugin/theme directories for plugins using things that will break when running PHP 5.5 and later. So they can show to the outside that nothing can break when moving to the latest PHP version. I already have seen enough breakage that this can become a serious issue.
&lt;/p&gt;
&lt;p&gt;
Setting the date is something that needs to be done together with host. WordPress isn't really a big party in this. People can believe that WordPress can push them but they can't. They can use &lt;a class="ext-link" href="https://wordpress.org/hosting/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/hosting/&lt;/a&gt; to push ("blackmail") hosts but that only work for a few of them. Weirdly to say but WordPress is to small for it. If there is a good way for hosts to tackle their increase in support (fixing sites) then making the push will become easier. Depending on the host this can be really tricky since you probably do need some development skills.
&lt;/p&gt;
&lt;p&gt;
This all said, I'm more then happy to work with the hosts in Europe on this and other systems out there to see how we can all combine our power to make the push.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 15 Aug 2015 22:03:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:82/1439676204627880</guid>
      <description>&lt;p&gt;
Not fixed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 21:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:21/1439673018828599</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:19" title="Comment 19"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Those who have access to the data have said before that the PHP usage for the latest version of WordPress isn't significantly different than the totals across all WordPress versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've found a link to this: &lt;a class="ext-link" href="http://wordpress-hackers.1065353.n5.nabble.com/php-v-td42729.html#d1383867550000-120"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress-hackers.1065353.n5.nabble.com/php-v-td42729.html#d1383867550000-120&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's part of a debate on this topic that took place on the wp-hackers mailing list in November 2013.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 21:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:20/1439672937122610</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:17" title="Comment 17"&gt;stracker.phil&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The hosts will actually have to force users to update the PHP versions they are running
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, actually we clarified above that most users cannot update PHP because it's up to the host ;)
&lt;/p&gt;
&lt;p&gt;
My host for example swiches my PHP version automatically once a year; I can downgrade to 1 previous version for a limited time. That's a good strategy in my eyes.
&lt;/p&gt;
&lt;p&gt;
I don't like to ackowledge the point, that users do not know what PHP is and should not be confronted with it. If they run a website they should be literate enough to understand - or if they really don't know then they usually did not set up the site alone and have a web developer who maintains their website and knows about this stuff.
After all setting up a WordPress site is not like making a phone call; it's something that needs a little bit of expertise and commitment.
&lt;/p&gt;
&lt;p&gt;
You need to take your car to maintenance once a year (I have no idea how my car works), we need to go to health-checks regulary (I have no idea how my bod/the medication works), when the fridge is broken you call a technican, and so on... you get my point, right? it's: When PHP is needs an update you email your host ;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think these are valid arguments. I think maybe it comes down to the difference between what a user probably &lt;em&gt;should&lt;/em&gt; know, and what they actually do know. I really can't say that I have any experience there, so I'll let those who do respond. Maybe @ipstenu or others who are on the support forums a lot would have some idea of how an average user would respond to a notice about outdated PHP.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Besides that opinion I'll instantly sign your 5-step proposal!
For point 4: Let's suggest a date and see if they comply? "We want to get this done until Jan 2017. You will get a last reminder 6 months before we switch so you have plenty of time to react or get in touch with us in case this does not work for you"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, something like that would be good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:50:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:19/1439671831538248</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:18" title="Comment 18"&gt;stracker.phil&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, if you compare the numbers in the current stats here: &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/stats/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You might notice: 14% of sites use PHP 5.2 and at the same time around 16% use WP 3.7 or earlier (which was released 2013)
So my impression is, that people with PHP 5.2 are the people that do not even update WP to current version.
Just an impression by looking at those charts...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Those who have access to the data have said before that the PHP usage for the latest version of WordPress isn't significantly different than the totals across all WordPress versions. But it is possible that this is changing, and it would be nice if we could see the stats (it's been requested many times).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:18/1439671013771150</guid>
      <description>&lt;p&gt;
Also, if you compare the numbers in the current stats here: &lt;a class="ext-link" href="https://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/about/stats/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You might notice: 14% of sites use PHP 5.2 and at the same time around 16% use WP 3.7 or earlier (which was released 2013)
So my impression is, that people with PHP 5.2 are the people that do not even update WP to current version.
Just an impression by looking at those charts...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:31:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:17/1439670676436091</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The hosts will actually have to force users to update the PHP versions they are running
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, actually we clarified above that most users cannot update PHP because it's up to the host ;)
&lt;/p&gt;
&lt;p&gt;
My host for example swiches my PHP version automatically once a year; I can downgrade to 1 previous version for a limited time. That's a good strategy in my eyes.
&lt;/p&gt;
&lt;p&gt;
I don't like to ackowledge the point, that users do not know what PHP is and should not be confronted with it. If they run a website they should be literate enough to understand - or if they really don't know then they usually did not set up the site alone and have a web developer who maintains their website and knows about this stuff.
After all setting up a WordPress site is not like making a phone call; it's something that needs a little bit of expertise and commitment.
&lt;/p&gt;
&lt;p&gt;
You need to take your car to maintenance once a year (I have no idea how my car works), we need to go to health-checks regulary (I have no idea how my bod/the medication works), when the fridge is broken you call a technican, and so on... you get my point, right? it's: When PHP is needs an update you email your host ;)
&lt;/p&gt;
&lt;p&gt;
Besides that opinion I'll instantly sign your 5-step proposal!
For point 4: Let's suggest a date and see if they comply? "We want to get this done until Jan 2017. You will get a last reminder 6 months before we switch so you have plenty of time to react or get in touch with us in case this does not work for you"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:16/1439669942787666</guid>
      <description>&lt;p&gt;
Yes, so whatever strategy is decided upon could take years. At least we would know what's going on and have measurable forward progress instead of this "wait and see" business.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33383 (Comment reply links are always to first comment form on a page even ...) created</title>
      
        <dc:creator>johnh10</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33383/1439669548332929</guid>
      <description>&lt;p&gt;
Using $withcomments to allow comments to be displayed on main index page, clicking 'reply' to any comment on any post reloads the index page with the focus on the first post's comment form, and ALL comment forms now have 'Leave a Reply to [NAME]'.
&lt;/p&gt;
&lt;p&gt;
The focus should be on the target post's comment form, and only that comment form should have 'Leave a Reply to [NAME]'.
&lt;/p&gt;
&lt;p&gt;
How to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Clean WordPress install.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Use default theme Twenty Twelve or another.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Settings-&amp;gt;Discussion : Enable threaded comments should be checked by default.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Edit theme index page and add comment code after get_template_part function that displays the post content. For instance, index.php loop for Twenty Twelve theme:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;                        &amp;lt;?php while ( have_posts() ) : the_post(); ?&amp;gt;
                                &amp;lt;?php get_template_part( 'content', get_post_format() ); ?&amp;gt;
                                &amp;lt;?php
                                        // If comments are open or we have at least one comment, load up the comment template.
                                        if ( comments_open() || get_comments_number() ) :
                                                $withcomments=1; comments_template();
                                        endif;
                                ?&amp;gt;
                        &amp;lt;?php endwhile; ?&amp;gt;
&lt;/pre&gt;&lt;ol start="5"&gt;&lt;li&gt;WordPress install should come with a 'Hello World' post. Create and approve a generic comment for this post.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="6"&gt;&lt;li&gt;Create a new post and publish. Create and approve a generic comment for this post too.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="7"&gt;&lt;li&gt;View the Site home page. It should show your two posts, each with a comment that shows a 'reply' link. On the last post's comment, click the 'reply' link.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="8"&gt;&lt;li&gt;Notice it will reload the home page, but the focus will be on the comment form for the first post, not the one you are trying to leave a comment reply for.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Also notice both comment forms will display the same 'Leave a Reply to [NAME]'.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 20:03:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:15/1439669001585832</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:10" title="Comment 10"&gt;alexander.rohmann&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress changing it's requirements is the only thing that will necessitate the change needed for hosts. We can sympathize with hosts all day long, but we're really just coddling them, and enabling their lethargicness.
&lt;/p&gt;
&lt;p&gt;
I understand our responsibility to users, but WordPress can not be held accountable for the shortcomings of hosts who refuse to update. There is every right, reason, and explanation to tell users that they can't update to the latest WordPress because in all honestly their hosting provider is years behind technological evolution. Wake up people.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In fairness to the hosts, I think it should be noted that often the reason that they aren't updating is in the interests of the users, too. I think it should be clarified that the problem isn't that hosts aren't offering modern versions of PHP, it is that many sites are just still running on the older versions that the hosts are still maintaining. The hosts will actually have to force users to update the PHP versions they are running. That can be a real pain, and the problem is that often a user's site isn't just running WordPress, it is running some other obscure script that is not compatible with modern PHP. So it is a big load on support each time hosts have to do this. In other words, (and I think we agree on this) it takes time. I'm not saying the hosts shouldn't be more proactive, I just wanted all of that to be clear.
&lt;/p&gt;
&lt;p&gt;
I agree with you that at some point we'll just have to leave some hosts (and users) behind. But in deference to our users, I think we should try a little harder to motivate the hosts ourselves without getting the site admins involved in this mess more than is necessary. I think that getting the hosts to work with the WordPress community in setting a goal that they can aim for will help to motivate them to do this more quickly. But we have to actually set a realistic goal and then stop coddling hosts that miss it. I completely agree there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:14/1439668748615477</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The hangup seems to be on no. 3, because, as far as I know, there is no simple strategy laid out in plain terms. It's always, "when the number of sites is lower." And I understand why the core leads might like to remain non-committal, but the purpose of this ticket is to try and put something together that is a little bit more concrete.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That'd be a great start and would help some of us feel at ease about it.
&lt;/p&gt;
&lt;p&gt;
Not a fan of point 4. It's just too etherial. We could ask "How long do you need?" and use that to get an idea, but it's going to take someone to just make a decision and pick a date (or release cycle). Otherwise we'll be having the same conversations again year after year.
&lt;/p&gt;
&lt;p&gt;
It sounds like we've been extending an offer to a seat at the decision making table to hosts for quite some time. That door needs to close at some point. Fish or cut bait.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:46:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:13/1439667995896402</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:11" title="Comment 11"&gt;stracker.phil&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jdgrimes, actually I don't really agree with the statement that we need to deal with the site-hosts and not the site-admins here. If a site-admin knows that his WordPress updates will stop in 36 months from now he will have the means to (a) ensure that the PHP version gets updated in time or (b) just be cool about his site getting no more updates.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the concern of the core leads is that most users have no idea what PHP is, much less how to get it updated.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After all the site-admins are the people we can reach and talk to directly. We can make them understand the situation and guide them to contact their hosts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's true that we naturally have a more direct line of communication with site admins. However, as you imply, they can't actually solve the situation. For the most part, our communication would be to tell them "ask your host to do this thing that you don't understand because reasons." We'd really just be co-opting them as middle men. And I think that's just going to make them frustrated with WordPress or their host, most probably both.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I imagine this could be realized by adding a new message on the Updates page (and maybe also in the main Dashboard):
A) "Your website is ready for WordPress 5.0 (read more here)"
B) "Warning: Your website is not ready for WordPress 5.0! Please read the details here to make sure your automatic upgrades will work in the future"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree that there will probably be a point where we'll do something like this. But I'm beginning to see the wisdom of the core leads in not wanting to do it yet. It's really a drastic measure, and one that will really shake people up (some of whom are antagonistic toward some decisions in the WordPress community anyway). Even just a few percent of sites is millions of site-admins. Nobody wants millions of site admins breathing down their backs. Even if every one of them is very understanding and kind, the support load would be enormous, both for the WordPress community and the hosts. Which is why I think it is unfair to both the hosts and the site admins not to seek to open lines of communication to the hosts instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And note that this change in requirements does NOT mean that we break peoples websites if they don't upgrade PHP in time. It just means that they will not get new upgrades via the built in update function while PHP version is too low.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, and we can be much more comfortable about doing this when the time comes now that we can continue to offer automatic security updates.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
My Proposal:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Identify the hosts that are running the sites on outdated versions of PHP.
&lt;/li&gt;&lt;li&gt;Open dialog about this with them.
&lt;/li&gt;&lt;li&gt;State explicitly what our strategy for supported PHP versions is.
&lt;/li&gt;&lt;li&gt;Let them help us choose a date as a goal for implementing that strategy.
&lt;/li&gt;&lt;li&gt;Work toward implementing that strategy, and hopefully meeting our goal. Yay!
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I think no. 1 and no. 2 are already being done. The hangup seems to be on no. 3, because, as far as I know, there is no simple strategy laid out in plain terms. It's always, "when the number of sites is lower." And I understand why the core leads might like to remain non-committal, but the purpose of this ticket is to try and put something together that is a little bit more concrete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:33:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:12/1439667225173672</guid>
      <description>&lt;p&gt;
@stracker.phil exactly! And as I mentioned above, WordPress could still provide security updates to those users in an LTS fashion by providing minor releases on the last branch supporting PHP EOL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:81/1439666683250008</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33619" title="Don't suspend cache invalidation when running term splitting batch ..."&gt;33619&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't suspend cache invalidation when running term splitting batch routine.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_suspend_cache_invalidation()&lt;/code&gt; was originally added to increase performance,&lt;br /&gt;
but the switch to batch processing in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33615" title="Term splitting routine should be run in a separate process, triggered ..."&gt;[33615]&lt;/a&gt; mitigates serious performance&lt;br /&gt;
concerns.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As a precaution against timeouts, the batch size has been reduced from 20 to 10.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Chouby.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [33619]: Don't suspend cache invalidation when running term splitting batch ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:24:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/33619</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/33619/1439666682294190</guid>
      <description>&lt;p&gt;
Don't suspend cache invalidation when running term splitting batch routine.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_suspend_cache_invalidation()&lt;/code&gt; was originally added to increase performance,
but the switch to batch processing in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33615" title="Term splitting routine should be run in a separate process, triggered ..."&gt;[33615]&lt;/a&gt; mitigates serious performance
concerns.
&lt;/p&gt;
&lt;p&gt;
As a precaution against timeouts, the batch size has been reduced from 20 to 10.
&lt;/p&gt;
&lt;p&gt;
Props Chouby.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30261" title="#30261: enhancement: Split all existing shared taxonomy terms on WP upgrade (closed: fixed)"&gt;#30261&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 19:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:11/1439666130690152</guid>
      <description>&lt;p&gt;
@jdgrimes, actually I don't really agree with the statement that we need to deal with the site-hosts and not the site-admins here. If a site-admin knows that his WordPress updates will stop in 36 months from now he will have the means to (a) ensure that the PHP version gets updated in time or (b) just be cool about his site getting no more updates.
&lt;/p&gt;
&lt;p&gt;
After all the site-admins are the people we can reach and talk to directly. We can make them understand the situation and guide them to contact their hosts.
&lt;/p&gt;
&lt;p&gt;
I imagine this could be realized by adding a new message on the Updates page (and maybe also in the main Dashboard):
A) "Your website is ready for WordPress 5.0 (read more here)"
B) "Warning: Your website is not ready for WordPress 5.0! Please read the details here to make sure your automatic upgrades will work in the future"
&lt;/p&gt;
&lt;p&gt;
And note that this change in requirements does NOT mean that we break peoples websites if they don't upgrade PHP in time. It just means that they will not get new upgrades via the built in update function while PHP version is too low.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 16:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:10/1439656027681035</guid>
      <description>&lt;p&gt;
@jdgrimes, Agreed. For the most part I don't care how long the process takes, my fear is that there isn't a process at all.
&lt;/p&gt;
&lt;p&gt;
If you consider the practice: "if it aint broke dont fix it"
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;For Hosts:&lt;/strong&gt; I don't blame them. Nothing is broken, things are still working, so why change anything?
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;For WordPress:&lt;/strong&gt; Developing on unsupported software? Now that is broken. Nobody is saying the fix has to be a sweeping breaking change, but why can't we come up with a creative solution?
&lt;/p&gt;
&lt;p&gt;
WordPress changing it's requirements is the only thing that will necessitate the change needed for hosts. We can sympathize with hosts all day long, but we're really just coddling them, and enabling their lethargicness.
&lt;/p&gt;
&lt;p&gt;
I understand our responsibility to users, but WordPress can not be held accountable for the shortcomings of hosts who refuse to update. There is every right, reason, and explanation to tell users that they can't update to the latest WordPress because in all honestly their hosting provider is years behind technological evolution. Wake up people.
&lt;/p&gt;
&lt;p&gt;
Desiring to be all things to all people is the shortest road to stagnation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27473 (Thickbox width and height parameters are ignored when using TB_iframe) updated</title>
      
        <dc:creator>andddd</dc:creator>

      <pubDate>Sat, 15 Aug 2015 15:36:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27473#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27473#comment:10/1439652993576029</guid>
      <description>&lt;p&gt;
Is it fixed? How do you workaround that issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 15:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:9/1439651733207086</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:8" title="Comment 8"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A debate on this from 2014: &lt;a class="ext-link" href="http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quoting @nacin from there:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress does work with hosts to get PHP updated. We keep a pretty close eye on defaults and offerings, and even see how much the numbers move when a big host makes a large shift. We casually survey them to see what their reasons are for updating. The difference is we're not going to put users in the middle of all of this political melee.
&lt;/p&gt;
&lt;p&gt;
And for as long as PHP upstream shows a lack of respect for shared hosting situations, dropping security support for PHP 5.2 while it was still powering a vast majority of websites, dropping security support for PHP 5.3 while it (and 5.2) are a vast majority of websites, it's really not in our best interest to "play along" at the expense of our users. Tens of millions of users would be affected — and potentially stranded, or certainly wondering why WordPress is putting them in the middle of all of this — all because reasons. It's completely silly. [...]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I applaud the WordPress project leaders for not bringing the users into this. It could easily turn into an all-out food fight among the users, the WordPress community, the hosts, the PHP devs, etc. I agree that we should continue to protect our users from all of this. But at the same time, we're all impatient, and I guess we just wish that there was more that could be done to speed up the process. My biggest fear is that everyone is just kicking the can down the road, and that in ten years we'll be sitting here having the same discussion about PHP 5.6 (or 5.5, or 5.4, God forbid). I don't think we need to start playing a blame game, but I'd like to know what can be done, and what is actually being done, to make PHP version transitions easier in the future? At some point somebody has to say, "You know what, this is really broken and here's what we're going to do to fix it in the future." I realize that isn't something that falls on WordPress, but we feel more pain from it than anyone else (although the hosts' pangs are more severe ;-).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33279 (Smilies forcibly have font-height) updated</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33279#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33279#comment:1/1439650212400208</guid>
      <description>&lt;p&gt;
Hi! I found solving of my problem. This behaviour was changed by &lt;strong&gt;pento&lt;/strong&gt; in revisions &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31733" title="Add emoji support, with Twemoji fallback.
Replace exisiting smilies ..."&gt;[31733]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31864" title="Emoji: Gmail doesn't obey an `&amp;lt;img&amp;gt;`'s inline CSS `height` rule, ..."&gt;[31864]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31909" title="Emoji: [31864] changed emoji image's inline style from `height` to ..."&gt;[31909]&lt;/a&gt;. I consider that hard-styling of height and max-height in html-code is not correct because restricts possibilities of other users (me, for example) to use full-size smilies. He has to look for another solving of his problem.
&lt;/p&gt;
&lt;p&gt;
I made patch, that removes this hard-styling from code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting.php.patch attached to Ticket #33279</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33279/formatting.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33279/formatting.php.patch/1439650183657084</guid>
      <description>&lt;p&gt;
Removing hard-slyling of height and max-height in html-code for smilies
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33278 (Naming files with dimensions when manually cropping images) updated</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:33:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33278#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33278#comment:5/1439649194423532</guid>
      <description>&lt;p&gt;
Hi! I made the patch! Please, put it in the code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>image-edit.php.patch attached to Ticket #33278</title>
      
        <dc:creator>acbaile</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33278/image-edit.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33278/image-edit.php.patch/1439649129268968</guid>
      <description>&lt;p&gt;
Patch that improve this functionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Sat, 15 Aug 2015 14:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:8/1439648911671871</guid>
      <description>&lt;p&gt;
A debate on this from 2014: &lt;a class="ext-link" href="http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://planetozh.com/blog/2014/01/why-wordpress-should-drop-php-5-2/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 15 Aug 2015 13:22:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:7/1439644972940314</guid>
      <description>&lt;p&gt;
For posterity: This ticket was forked from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23880" title="#23880: feature request: Minimum PHP version in Plugins (closed: duplicate)"&gt;#23880&lt;/a&gt;.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I tend to agree with @alexander.rohmann and @stracker.phil. I think we should work toward one day only supporting active PHP versions.
&lt;/li&gt;&lt;li&gt;But we have to keep in mind that isn't as simple as telling a user "upgrade your PHP!". It's hosts we're dealing with, not WordPress site admins. Users don't know how to update their PHP, so it comes down to hosts forcing an update on them, which is a sticky situation.
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/ticket/23880#comment:54"&gt;I'd advocate that we aim to accomplish that by the EOL of PHP 5.6&lt;/a&gt;, which is 2 years away. That should give plenty of time for hosts to upgrade, or have some kind of plan in place if they don't.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 15 Aug 2015 13:21:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:6/1439644864780123</guid>
      <description>&lt;p&gt;
Related: &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/ticket%3A802" title="ticket:802 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#meta802&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>stracker.phil</dc:creator>

      <pubDate>Sat, 15 Aug 2015 10:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:5/1439635454616096</guid>
      <description>&lt;p&gt;
Totally agree with alexander.rohmann!
&lt;/p&gt;
&lt;p&gt;
Since people are using a seriously deprecated PHP version, which alone opens major security issues, I see it as a community responsibility that we have to push people to update to a newer version that is actively maintained.
&lt;/p&gt;
&lt;p&gt;
So If people want to use an deprecated PHP version, they might as well stick with an deprecated version of WordPress, but not get any of the new features of newer releases.
&lt;/p&gt;
&lt;p&gt;
We tell people to harden their website by upgrading WordPress here:
&lt;a class="ext-link" href="http://codex.wordpress.org/Hardening_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Hardening_WordPress&lt;/a&gt;
But when I take a look at known vulnerabilities in PHP I'm afraid that updating only WP is not enough. Updating PHP is also a requirement to keep a site secure:
&lt;a class="ext-link" href="http://www.cvedetails.com/vulnerability-list/vendor_id-74/product_id-128/PHP-PHP.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.cvedetails.com/vulnerability-list/vendor_id-74/product_id-128/PHP-PHP.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33382 (Asterisk-space sometimes doesn't convert to a bullet) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 10:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33382/1439634232848110</guid>
      <description>&lt;p&gt;
If you're typing quickly, sometimes you'll still be holding down the Shift key as you press Space, after pressing &lt;code&gt;*&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This causes the sequence to not convert to a bullet. (The same behaviour occurs for &lt;code&gt;1) &lt;/code&gt;, but not for &lt;code&gt;1. &lt;/code&gt;, because of the lack of Shift in the latter.)
&lt;/p&gt;
&lt;p&gt;
Chrome 44.0.2403.155, OSX.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:19/1439630479454619</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33313#comment:18" title="Comment 18"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(Note: Polylang is hiding the primary colum via CSS for max-width 782px.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That won't be the case in the future as I will change the primary column to adapt the table to this new mobile view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29680,​33373 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:07:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29680%2C33373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29680%2C33373/1439629637352033</guid>
      <description>duplicate: &lt;p&gt;
Hello Teammmate, welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Thanks for your report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29680" title="#29680: defect (bug): PHP open_basedir errors are outputted during setup and load (closed: fixed)"&gt;#29680&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #29697 (Weird ... After Title in Plugin Viewer) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:03:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29697#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29697#comment:17/1439629439711094</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 09:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:18/1439629214277495</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33313#comment:17" title="Comment 17"&gt;Chouby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The strings translations table has no row actions and is broken without the patch. I tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33313/" title="Attachments of Ticket #33313"&gt;33313.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33313/" title="Download"&gt;​&lt;/a&gt; and that's ok for me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed that the patch fixes the issue, see attached screenshots. (Note: Polylang is hiding the primary colum via CSS for max-width 782px.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33313-polylang-after.png attached to Ticket #33313</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:56:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-after.png/1439629005250777</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>33313-polylang-before.png attached to Ticket #33313</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33313/33313-polylang-before.png/1439628994042508</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>33358.5.diff attached to Ticket #33358</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33358/33358.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33358/33358.5.diff/1439628629843703</guid>
      <description>&lt;p&gt;
Adds changelog entry to wp_new_user_notification()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 15 Aug 2015 08:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:8/1439627356839982</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The issue exists at least since 3.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33313 (Responsive list tables have no toggle row buttons when there have no ...) updated</title>
      
        <dc:creator>Chouby</dc:creator>

      <pubDate>Sat, 15 Aug 2015 07:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33313#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33313#comment:17/1439625242835764</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33313#comment:16" title="Comment 16"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Chouby How do I break Polylang?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The langages table is working good without the patch. To break it, you need to add a language, then go in the strings translations tab (which appears only once a language exists). The strings translations table has no row actions and is broken without the patch. I tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33313/" title="Attachments of Ticket #33313"&gt;33313.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33313/" title="Download"&gt;​&lt;/a&gt; and that's ok for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 05:08:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:7/1439615291010062</guid>
      <description>&lt;p&gt;
The class should be on &lt;code&gt;&amp;lt;td id="wp-word-count"&amp;gt;&lt;/code&gt;, not the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;. Same as on &lt;code&gt;&amp;lt;td id="content-resize-handle" class="hide-if-no-js"&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 15 Aug 2015 04:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:6/1439614681321425</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33379 (Word count on post edit screen should be hidden if javascript is disabled) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sat, 15 Aug 2015 04:57:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33379#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33379#comment:5/1439614670408134</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:9/1439602869435419</guid>
      <description>&lt;p&gt;
33377.3.diff looks better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:4/1439602768282146</guid>
      <description>&lt;p&gt;
The whole point of picking a date is to incentivize people to update. The outdated PHP installs would only break if people decided to update WordPress.
&lt;/p&gt;
&lt;p&gt;
If not an exact date, it could be tied to a major release. This would easily be solved by:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Announcing (tomorrow/soon) that WP 4.5 will only support active PHP.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt; Diverting Automatic updates to the 4.4.X branch for security fixes only if EOL PHP is detected.&lt;/strong&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Then a hard date perhaps 2-3 years out could be set for the discontinuation of those security updates.
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:38:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:80/1439602703855163</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30261 (Split all existing shared taxonomy terms on WP upgrade) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30261#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30261#comment:79/1439602656931922</guid>
      <description>&lt;p&gt;
I'm fine with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/30261/30261.19.diff" title="Attachment '30261.19.diff' in Ticket #30261"&gt;30261.19.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/30261/30261.19.diff" title="Download"&gt;​&lt;/a&gt; being committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:12:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:6/1439601175759462</guid>
      <description>&lt;p&gt;
No worries.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 01:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:3/1439601165565720</guid>
      <description>&lt;p&gt;
A calendar deadline probably isn't reasonable. If an arbitrary date is picked, and the date comes and the % of users on each PHP version remains the same, then a new date would be set.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I know that we're still waiting for version numbers to decrease. Considering how far past EOL we've become, is that not reasonable?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not at all unfortunately: from a % users perspective, if WordPress updated to a minimum requirement of 5.4 tomorrow, almost half of WordPress installs wouldn't be able to operate on it. To have a minimum requirement of EOL/supported versions, would mean that in 30 days, the minimum requirement would be 5.5, which would mean over half of WordPress installs (and 12.5% of the internet) would not be able to operate on it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:5/1439600222310876</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33380#comment:4" title="Comment 4"&gt;valendesigns&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So the question here is whether this is an actual regression, and if it should be in the 4.3 milestone? We shouldn't add to 4.3 without discussing it first.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, its not. It was added to 4.3 when it looked like a regression in core as an editor bug. Thought I moved it to Future Release when I updated it. Oh well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:55:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:2/1439600120693218</guid>
      <description>&lt;p&gt;
Instead of picking an arbitrary version, I'm proposing that we simply set a date for committing to PHP supported versions only (&lt;a class="ext-link" href="http://php.net/supported-versions.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/supported-versions.php&lt;/a&gt;) from that day onwards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33376-enhanced-upgrade.patch attached to Ticket #33376</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33376/33376-enhanced-upgrade.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33376/33376-enhanced-upgrade.patch/1439599999366812</guid>
      <description>&lt;p&gt;
33376 with deduplication of user_email routine
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>33376-no-upgrade.patch attached to Ticket #33376</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:50:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33376/33376-no-upgrade.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33376/33376-no-upgrade.patch/1439599853472798</guid>
      <description>&lt;p&gt;
33376 without updating existing sites
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33376 (Create index on user_email) updated</title>
      
        <dc:creator>chriscct7</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33376#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33376#comment:3/1439599809040279</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33376#comment:2" title="Comment 2"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This may fail for user_email, as a plugin could have allowed users with the same email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33376#comment:2" title="Comment 2"&gt;knutsp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This may fail for user_email, as a plugin could have allowed users with the same email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To do so would either require direct SQL calls or overriding tons of checks for email_exists in order to avoid the fact that WordPress prevents users from sharing an email address. I'm sure a plugin could be devised, if so desired, that could break on any nearly any change to WordPress core.
&lt;/p&gt;
&lt;p&gt;
A plugin that allows the same email to be shared would also break other issues like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9568" title="#9568: feature request: Allow users to log in using their email address (closed: fixed)"&gt;#9568&lt;/a&gt; (login via an email address; which user gets logged in when they share an email?), as well as developers ability to count on predicable results to core functions like &lt;code&gt;get_user_by('email', $value)&lt;/code&gt;. As such, changing the tables to not support duplicates simply complements checks WordPress already has.
&lt;/p&gt;
&lt;p&gt;
If it was desired, we could skip the upgrades on existing installs (patch for that attached), but in any case. A better option would be to query all rows where duplicates exist and update the emails to be &lt;code&gt;username+{email}&lt;/code&gt;. Patch also attached for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:1/1439599615298909</guid>
      <description>&lt;p&gt;
PHP 5.3.19 minimum is on my wishlist.  PHP upgrade does get a lot of community enthusiasm, but we are ultimately limited by the share of versions out in the wild, installed by hosting companies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33297 (Better wording for the help tab on Edit Page screen) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33297#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33297#comment:1/1439598787196256</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can't do anything about this now. We are in a string freeze.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33380 (Twenty Fifteen doesn't handle lists (ordered and non-ordered) very ...) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33380#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33380#comment:4/1439597504617433</guid>
      <description>&lt;p&gt;
So the question here is whether this is an actual regression, and if it should be in the 4.3 milestone? We shouldn't add to 4.3 without discussing it first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33377.3.diff attached to Ticket #33377</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33377/33377.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33377/33377.3.diff/1439597314686789</guid>
      <description>&lt;p&gt;
alternative regex pattern
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33377 (Wpautop may create extra &lt;br&gt; tags) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 15 Aug 2015 00:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33377#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33377#comment:8/1439596921876858</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/33377/33377.2.diff" title="Attachment '33377.2.diff' in Ticket #33377"&gt;33377.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/33377/33377.2.diff" title="Download"&gt;​&lt;/a&gt; adds a second test and changes the regex pattern on line 493 to account for oddly formatted break tags when making the conversion to paragraphs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>