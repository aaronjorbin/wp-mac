<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #47459 (Introduce new a function to retrieve size of files) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 23:46:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47459#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47459#comment:2/1559432783589891</guid>
      <description>&lt;p&gt;
Sorry, now I see that you've already mentioned &lt;code&gt;filesize()&lt;/code&gt; in the ticket description.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47459 (Introduce new a function to retrieve size of files) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 23:44:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47459#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47459#comment:1/1559432687566993</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @justinahinon, welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is a &lt;a class="ext-link" href="https://www.php.net/manual/en/function.filesize.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;filesize()&lt;/a&gt; PHP function that WordPress itself uses to &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.2.1/src/wp-includes/media.php?marks=3269-3282#L3257"&gt;display the size of files in Media Library&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.2.1/src/wp-includes/media.php#L3257" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You can use it to get the file size in bytes, e.g. &lt;code&gt;7358&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$file = get_attached_file( $attachment_id );
echo filesize( $file ); // size in bytes, e.g.
&lt;/pre&gt;&lt;p&gt;
Or combine it with &lt;code&gt;size_format()&lt;/code&gt; to get a human-readable string, e.g. &lt;code&gt;7 KB&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$file = get_attached_file( $attachment_id );
echo size_format( filesize( $file ) );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47457.2.diff attached to Ticket #47457</title>
      
        <dc:creator>chetan200891</dc:creator>

      <pubDate>Sat, 01 Jun 2019 23:18:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47457/47457.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47457/47457.2.diff/1559431091693451</guid>
      <description>&lt;p&gt;
Created patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47459 (Introduce new a function to retrieve size of files) created</title>
      
        <dc:creator>justinahinon</dc:creator>

      <pubDate>Sat, 01 Jun 2019 23:00:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47459/1559430015279473</guid>
      <description>&lt;p&gt;
While working on a plugin, I realized that there was not a dedicated WordPress function to retrieve the size of the media library files. The question does not seem to have been asked on the trac previously (after a brief search).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So I think it would be good to introduce such a function. It would not take long to write since PHP already provides filesize(). It could be a new function or it could be added to an existing one (I'm thinking of &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_get_attachment_metadata"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp_get_attachment_metadata()&lt;/a&gt; ).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47227 (i18n: Merge similar translation strings - site health tabs) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 22:10:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47227#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47227#comment:11/1559427023566539</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #47227 (i18n: Merge similar translation strings - site health tabs) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 22:09:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47227#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47227#comment:10/1559426983966030</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45488" title="I18N: Merge duplicate &amp;#34;Status&amp;#34; and &amp;#34;Info&amp;#34; strings on Site Health ..."&gt;45488&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Merge duplicate "Status" and "Info" strings on Site Health screens.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47227" title="#47227: defect (bug): i18n: Merge similar translation strings - site health tabs (closed: fixed)"&gt;#47227&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45488]: I18N: Merge duplicate "Status" and "Info" strings on Site Health ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 22:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45488/1559426982895783</guid>
      <description>&lt;p&gt;
I18N: Merge duplicate "Status" and "Info" strings on Site Health screens.
&lt;/p&gt;
&lt;p&gt;
Props ramiy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47227" title="#47227: defect (bug): i18n: Merge similar translation strings - site health tabs (closed: fixed)"&gt;#47227&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #39647,​47450 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 19:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39647%2C47450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39647%2C47450/1559417289856621</guid>
      <description>duplicate: &lt;p&gt;
Hi @mikewestcoast, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39647" title="#39647: defect (bug): Make media upload &amp;#34;HTTP error.&amp;#34; more user-helpful (new)"&gt;#39647&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>Abigailm</dc:creator>

      <pubDate>Sat, 01 Jun 2019 19:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:109/1559416817124750</guid>
      <description>&lt;p&gt;
This comment is also added for informational purposes:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I am also still seeing this error, now with a reference to line 310 (PHP 7.3, WP 5.2.1).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my case it is tied to the enhanced search plugin, Relevanssi -- and occurs if the plugin option for "Create custom search result snippets" is enabled.  This has been a consistent issue for me --- but I don't know whether it should be seen as a problem with the wordpress core template or with the coding of that particular feature of the plugin. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The error appears to be tied to this line of code in the plugin:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;
	/** This filter is documented in wp-includes/post-template.php */
	$content = apply_filters( 'the_content', $content );
&lt;/pre&gt;&lt;p&gt;
So basically, the plugin is calling the apply_filters function that is coded into post-template.php ... and somewhere along the line that generates the PHP "implements Countable" warning in some (but not all) use cases.&lt;br /&gt;
  &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>current-time1.patch attached to Ticket #40653</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sat, 01 Jun 2019 18:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40653/current-time1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40653/current-time1.patch/1559412187316578</guid>
      <description>&lt;p&gt;
Improved test.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47014 (Tag balancing corrupts Custom Elements) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Sat, 01 Jun 2019 17:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47014#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47014#comment:9/1559411907194955</guid>
      <description>&lt;p&gt;
I really like the effort made by @dmsnell in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47014/47014-1.diff" title="Attachment '47014-1.diff' in Ticket #47014"&gt;47014-1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47014/47014-1.diff" title="Download"&gt;​&lt;/a&gt; to expand the regex pattern with comments, it's really helpful. I wish this would be a standard in core :-)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think it would also be nice to have the stripped regex pattern available, either as part of an inline comment or vice versa, with the expanded version as a comment.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What do you think about capitalizing the regex comments and end each line with a dot, when possible?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would suggest adding to the test cases in &lt;code&gt;data_custom_elements()&lt;/code&gt;, to cover all the capturing groups in the regex. Here's an example:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;my-custom-element data-attribute="value"/&amp;gt;&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
to cover the 4th and the 5th capturing groups.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And e.g. &lt;code&gt;&amp;lt;my-custom-element/&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;my-custom-element /&amp;gt;&lt;/code&gt; to the existing cases for the first three capturing groups.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can this be a strict comparison:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$is_single_tag = in_array( $tag, $single_tags );
&lt;/pre&gt;&lt;p&gt;
as flagged by the coding standard check?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47456 (Improve the user interface to ensure correct usage of the image alt text) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 01 Jun 2019 17:28:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47456#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47456#comment:2/1559410103668766</guid>
      <description>&lt;p&gt;
6) I'd argue that there's nothing wrong with linking directly to an image file, as long as the alt attribute or link text clearly indicates that this is a link to an image file. Though a direct link to an image file is of no use to a screen reader user, a link to (for example) a full sized version of an image can be of significant use to low vision users, and can be desirable for some images. It's certainly not a primary usage that has any benefits, but I think that as long as screen reader users are able to identify that this link is not of value to them, there's no great reason to discourage it. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25747 (The `http_api_debug` hook isn't called for all HTTP requests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 01 Jun 2019 16:55:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25747#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25747#comment:9/1559408103615289</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25747/25747.3.diff" title="Attachment '25747.3.diff' in Ticket #25747"&gt;25747.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25747/25747.3.diff" title="Download"&gt;​&lt;/a&gt; introduces a much simpler patch than prior ones. It calls the &lt;code&gt;http_api_debug&lt;/code&gt; hook on all erroneous responses. There's no need to call the hook for errors being returned by &lt;code&gt;pre_http_request&lt;/code&gt; because it's already catchable via that filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In addition, I've changed the error code for the error returned when requests are blocked so that loggers, debuggers, etc can differentiate between an unexpected error and an expected one.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>25747.3.diff attached to Ticket #25747</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 01 Jun 2019 16:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25747/25747.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25747/25747.3.diff/1559407919055831</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42814 (PHP 7.2 Warning: ...wp-includes/post-template.php on line 284) updated</title>
      
        <dc:creator>jcdev518</dc:creator>

      <pubDate>Sat, 01 Jun 2019 16:46:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42814#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42814#comment:108/1559407619163522</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42814#comment:25" title="Comment 25"&gt;Kelderic&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I just ran into this when I began testing with PHP 7.2. In my &amp;lt;head&amp;gt; section of my theme, I call &lt;code&gt;get_the_excerpt&lt;/code&gt; as part of Open Graph meta tags. I have tried passing the post ID using &lt;code&gt;get_the_ID&lt;/code&gt;, and passing &lt;code&gt;$post&lt;/code&gt;, but I can't get rid of the error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If we add:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;if ( ! is_array($pages) ) {
        $pages = [];
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
At line 283 of post-template.php, we correct the issue. Long term, we need to check that all expected arrays are really arrays, and convert &lt;code&gt;NULL&lt;/code&gt; values to empty arrays before calling &lt;code&gt;count()&lt;/code&gt;. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Re: ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42814" title="#42814: defect (bug): PHP 7.2 Warning: ...wp-includes/post-template.php on line 284 (closed: fixed)"&gt;#42814&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I know this has been marked as "completed" but I ran into a similar issue with PHP 7.2 this many months later. &lt;br /&gt;
Same error, but on line 310 of post-template.php after calling get_the_content() outside of the main loop. This is in a singular page template where $post is already global. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Although it seemed redundant, I wrapped the call inside the loop:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;have_posts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="nx"&gt;the_post&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;get_the_content&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="k"&gt;endwhile&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and it fixed the error, as it's no longer trying to count() a null value in {{{#!php&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$elements['pages'];
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
FYI this is now on WP 5.2.1 - thought I'd mention it as a way to fix without modifying core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47442 (Twitter auto-embed fails if twitter username contains Emoji icon) updated</title>
      
        <dc:creator>dijkenwater</dc:creator>

      <pubDate>Sat, 01 Jun 2019 16:21:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47442#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47442#comment:2/1559406082116426</guid>
      <description>&lt;p&gt;
Hi @desrosj ,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
i add for example 10 Links with tweets to an article. After Publishing everything works fine. And after a while the embed tweets with emojis in the usernames are displayed as a link in the article and not as a embeded tweet.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm working with the Code-Editor. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 01 Jun 2019 15:47:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:17/1559404057310997</guid>
      <description>&lt;p&gt;
@Collizo4sky No, no news. Sorry.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47454 (BC Math isn't used in WordPress core) updated</title>
      
        <dc:creator>bronsonquick</dc:creator>

      <pubDate>Sat, 01 Jun 2019 15:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47454#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47454#comment:6/1559402363588610</guid>
      <description>&lt;p&gt;
Hey @Clorith,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I "kind of" understand the logic behind that but that being said I'm pretty sysops and devops heavy I'm wondering if I should patch WordPress core to recommend &lt;code&gt;opcache&lt;/code&gt;, &lt;code&gt;memcache&lt;/code&gt; and &lt;code&gt;memcached&lt;/code&gt; too in the Site Health checks? That will add a hell of a lot more performance to WordPress sites than BC Math. Core doesn't need &lt;code&gt;bcmath&lt;/code&gt; and it doesn't need any of the packages I mentioned as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sorry if I sound horrible i just don't understand the logic behind this.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47454 (BC Math isn't used in WordPress core) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 01 Jun 2019 15:01:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47454#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47454#comment:5/1559401264021601</guid>
      <description>&lt;p&gt;
Hiya,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You're right, core doesn't directly use it, but all the recommendations we put in are based on what the &lt;a class="ext-link" href="https://make.wordpress.org/hosting"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Hosting Team&lt;/a&gt; has put up as &lt;a class="ext-link" href="https://make.wordpress.org/hosting/handbook/handbook/server-environment/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;recommendations and requirements&lt;/a&gt; (I would presume this is because plugins or themes use it actively).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would propose that you join in on their discussions on this, as the recommendations and requirements in the Site Health module should always reflect what they propose as good standards.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47455 (Duplicate attributes 'width' and 'height' in ...) updated</title>
      
        <dc:creator>albertomake</dc:creator>

      <pubDate>Sat, 01 Jun 2019 14:51:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47455#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47455#comment:2/1559400678988214</guid>
      <description>&lt;p&gt;
Same error. Thanks for your answer.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>instructions.png attached to Ticket #46529</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 13:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/46529/instructions.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/46529/instructions.png/1559395371471134</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #46529 (CSS line-height values should be unitless - media-views.css) reopened</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 13:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46529#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46529#comment:6/1559395348617794</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
line 328 - .media-sidebar .sidebar-title&lt;br /&gt;
line 1139 - .attachments-browser .instructions&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;.attachments-browser .instructions&lt;/code&gt; is still used for the instructions that appear in the edit gallery view, edit playlist view, and for example in the Customizer when setting a header image. See attached screenshot.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Re: &lt;code&gt;.media-sidebar .sidebar-title&lt;/code&gt; after some software archeology, I think it's a leftover, as well as &lt;code&gt;sidebar-content&lt;/code&gt; and &lt;code&gt;.media-sidebar .search&lt;/code&gt; and these rules can be safely removed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
They were introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22321" title="Add a sidebar to the media modal.
* Adds `wp.media.view.Sidebar`, to ..."&gt;[22321]&lt;/a&gt; for the first implementation of the media sidebar. Then removed right after in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22362" title="Streamlining media, part I.
The main goal here is to rearrange the ..."&gt;[22362]&lt;/a&gt;. Also, as far as I can tell there's no search in the sidebar.&lt;br /&gt;
 &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #47454 (BC Math isn't used in WordPress core) updated</title>
      
        <dc:creator>galbaras</dc:creator>

      <pubDate>Sat, 01 Jun 2019 13:06:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47454#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47454#comment:4/1559394389427445</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47458 (Fix tab sequence order in the Media attachment browser) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 12:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47458#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47458#comment:1/1559391390596595</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Problem :&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the Close button comes from the media modal template thus the CLose button is first in the DOM order
&lt;/li&gt;&lt;li&gt;then, the edit-attachments view adds the Previous and Next buttons: they're after in the DOM source and absolutely positioned to make them appear before the Close button
&lt;/li&gt;&lt;li&gt;these elements can't be rearranged because they pertain to different views
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47458/47458.diff" title="Attachment '47458.diff' in Ticket #47458"&gt;47458.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47458/47458.diff" title="Download"&gt;​&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;makes the modal Close button optional via a &lt;code&gt;hasCloseButton&lt;/code&gt; property, default: true
&lt;/li&gt;&lt;li&gt;makes the edit-attachments template use its own Close button so it can be placed in the right order
&lt;/li&gt;&lt;li&gt;no visual changes
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47449 ("Publishing Failed" message. Yet, it did publish.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 12:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47449#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47449#comment:1/1559391310243249</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47448 (CSV import MIME type fails with HTML content) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 12:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47448#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47448#comment:1/1559391282673544</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47458.diff attached to Ticket #47458</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 12:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47458/47458.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47458/47458.diff/1559391254803535</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47452 (WordPress taking time to login and throwing time-out error on upgrading) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 12:10:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47452#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47452#comment:2/1559391021579028</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47427 (deleted pages for a plugin prevent page creation during ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 12:07:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47427#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47427#comment:3/1559390833731154</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11863" title="#11863: enhancement: Trashed items interfere with page/post slug generation (closed: fixed)"&gt;#11863&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21970" title="#21970: defect (bug): 404 error when a post has the same slug as with a deleted (trash) page. (closed: fixed)"&gt;#21970&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47451 (Twenty Ten: Make theme responsive) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 01 Jun 2019 12:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47451#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47451#comment:2/1559390741841938</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>attachments browser order.png attached to Ticket #47458</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47458/attachments%20browser%20order.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47458/attachments%20browser%20order.png/1559390283310559</guid>
      <description>&lt;p&gt;
Wrong DOM order in the attachments brower
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47458 (Fix tab sequence order in the Media attachment browser) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47458/1559390231676155</guid>
      <description>&lt;p&gt;
In the media views attachments browser, the visual order of the Close, Previous, and Next buttons doesn't match the DOM order.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For accessibility, visual order and DOM order must match when this affects the meaning and operability of a page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Success Criterion 2.4.3 Focus Order&lt;br /&gt;
&lt;a class="ext-link" href="https://www.w3.org/TR/WCAG21/#focus-order"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/WCAG21/#focus-order&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a Web page can be navigated sequentially and the navigation sequences affect meaning or operation, focusable components receive focus in an order that preserves meaning and operability.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Making visual and DOM order match benefits keyboard users who navigate documents sequentially and expect the focus order to be consistent with the sequential reading order.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Affects, for example:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;keyboard users, whether they just prefer to use a keyboard or must rely on keyboard
&lt;/li&gt;&lt;li&gt;users with disabilities that make reading difficult
&lt;/li&gt;&lt;li&gt;users with visual impairments
&lt;/li&gt;&lt;li&gt;screen magnifier users
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47457 (Fix the mediaelements player controls bar sizing) updated</title>
      
        <dc:creator>vaishalipanchal</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47457#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47457#comment:1/1559389974376975</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47457.diff attached to Ticket #47457</title>
      
        <dc:creator>vaishalipanchal</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47457/47457.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47457/47457.diff/1559389959987171</guid>
      <description>&lt;p&gt;
Patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47416 (Site health - Rest API error - cURL error 28) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47416#comment:7/1559389214302251</guid>
      <description>invalid: &lt;p&gt;
I'm closing this ticket again as the reporter found the problem on their end.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@capbussat if you need help with your code, I'd recommend opening a ticket on our &lt;a class="ext-link" href="https://wordpress.org/support/forums"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>mediaelements player controls bar.png attached to Ticket #47457</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47457/mediaelements%20player%20controls%20bar.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47457/mediaelements%20player%20controls%20bar.png/1559389174126159</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47457 (Fix the mediaelements player controls bar sizing) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:39:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47457</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47457/1559389154548688</guid>
      <description>&lt;p&gt;
In the media views, the mediaelements player controls bar exceeds the width of the video. See attached screenshot. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This happens because the media views stylesheet switches everything to &lt;code&gt;content-box&lt;/code&gt; sizing, while it appears the mediaelements player expects &lt;code&gt;border-box&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This CSS rule in &lt;code&gt;media-views.css&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;.media-modal * {
    box-sizing: content-box;
}
&lt;/pre&gt;&lt;p&gt;
conflicts with this CSS rule in &lt;code&gt;mediaelementplayer-legacy.min.css&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;.mejs-container,
.mejs-container * {
    box-sizing: border-box;
}
&lt;/pre&gt;&lt;p&gt;
Explicitly setting &lt;code&gt;box-sizing: border-box;&lt;/code&gt; with some higher specificity to the mediaplayer &lt;code&gt;.mejs-controls&lt;/code&gt; element fixes the problem.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47456 (Improve the user interface to ensure correct usage of the image alt text) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47456#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47456#comment:1/1559387759759063</guid>
      <description>&lt;p&gt;
@joedolson when you have a chance, please do feel free to check if I missed anything important.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47456 (Improve the user interface to ensure correct usage of the image alt text) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47456</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47456/1559387723194524</guid>
      <description>&lt;p&gt;
Splitting this out from the &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/created_by/karlgroves"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCampus accessibility report issues on the Gutenberg GitHub&lt;/a&gt;, see &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/15309"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/15309&lt;/a&gt; as part of the reported issue applies to the Media Views in core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41467" title="#41467: enhancement: Disassociate image alt text from media object (closed: wontfix)"&gt;#41467&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Problem"&gt;Problem&lt;/h2&gt;
&lt;p&gt;
A common misconception is that the image alt text should always be a "description of the image". In most of the cases, this is misleading. Actually, the image alt text needs to describe the purpose of the image in its specific context. For more details, see the W3C Alt Text Decision Tree tutorial (&lt;a class="ext-link" href="https://www.w3.org/WAI/tutorials/images/decision-tree/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/WAI/tutorials/images/decision-tree/&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WordPress stores a "default" alt text in the media object. While storing a default value may help users when they build their content, it also promotes a misunderstanding of the purpose of the alt text.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the accessibility team, we think this is more an user interface problem rather than a data model problem. The user interface should ensure users clearly understand that alt attributes are context sensitive and that the "default" alt value needs to be changed (or even removed) based on the specific usage.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Datamodelproblem:"&gt;Data model problem:&lt;/h2&gt;
&lt;p&gt;
The alt text is not constant: it needs to describe the image purpose on a case by case basis.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Userinterfaceproblem:"&gt;User interface problem:&lt;/h2&gt;
&lt;p&gt;
The alt text from the media library is automatically assigned as the alt text within the post: this is not always correct. Actually, in most of the cases it produces wrong alt text.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Improvementstoevaluate"&gt;Improvements to evaluate&lt;/h2&gt;
&lt;p&gt;
Credits: Some of the following points come from @carlseibert and @joedolson comments on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41467" title="#41467: enhancement: Disassociate image alt text from media object (closed: wontfix)"&gt;#41467&lt;/a&gt;, and from the Gutenberg GitHub issue.&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;allow saving multiple alt attributes for a given media object: a default attribute and a set of alternates users can select from
&lt;/li&gt;&lt;li&gt;have something in the editor UI that would let users know whether the alt text was filled, and what it says
&lt;/li&gt;&lt;li&gt;modifications on the Media views side to differentiate between the alt text describing the image and the alt text for a specific usage, which might override the normal alt text without changing it
&lt;/li&gt;&lt;li&gt;all linked images must have alternative text if the image is the sole content of the link, and the action should be blocked if this is not true
&lt;/li&gt;&lt;li&gt;any guidance given should inform users that the text provided needs to inform the user of the link action
&lt;/li&gt;&lt;li&gt;include a warning about linking directly to the image file: linking directly to images is inadvisable, because the resulting image view in the browser does not include alternate text
&lt;/li&gt;&lt;li&gt;when the image is linked to the image file itself, the alt text can remain the normal alternative text for that image, with an appended indicator that the link is to view the image
&lt;/li&gt;&lt;li&gt;worth considering plugins that add "lightbox" modals, sliders and the like often use the alt text value to add contextual text within their UI
&lt;/li&gt;&lt;li&gt;images used to link to other resources should offer a field to add dedicated link text separate from the image's own description; in this case the alt text should be empty. Example markup (simplified):
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25747 (The `http_api_debug` hook isn't called for all HTTP requests) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sat, 01 Jun 2019 11:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25747#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25747#comment:8/1559387699274129</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #47128,​47455 batch updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Sat, 01 Jun 2019 10:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=47128%2C47455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=47128%2C47455/1559386060987775</guid>
      <description>duplicate: &lt;p&gt;
Thanks for reporting this, @albertomake! It seems this was reported already in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47128" title="#47128: defect (bug): Twenty Nineteen: Remove duplicate height and width attribute from SVG icon (closed: fixed)"&gt;#47128&lt;/a&gt;. I am going to close this one.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Feel free to reopen if you think issue is different then that.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #47455 (Duplicate attributes 'width' and 'height' in ...) created</title>
      
        <dc:creator>albertomake</dc:creator>

      <pubDate>Sat, 01 Jun 2019 09:33:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47455</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47455/1559381593370595</guid>
      <description>&lt;p&gt;
Hi, in the latest version of the Twenty Nineteen I just found some svgs with 'width' and 'height' values in class-twentynineteen-svg-icons.php&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;		'keyboard_arrow_left'      =&amp;gt; /* material-design – keyboard_arrow_left */ '
&amp;lt;svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"&amp;gt;
	&amp;lt;path d="M14 7l-5 5 5 5V7z"&amp;gt;&amp;lt;/path&amp;gt;
	&amp;lt;path fill="none" d="M24 0v24H0V0h24z"&amp;gt;&amp;lt;/path&amp;gt;
&amp;lt;/svg&amp;gt;',
		'arrow_drop_down_ellipsis' =&amp;gt; /* custom – arrow_drop_down_ellipsis */ '
&amp;lt;svg width="24" height="24" xmlns="http://www.w3.org/2000/svg"&amp;gt;
    &amp;lt;g fill="none" fill-rule="evenodd"&amp;gt;
        &amp;lt;path d="M0 0h24v24H0z"/&amp;gt;
        &amp;lt;path fill="currentColor" fill-rule="nonzero" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12 6.48 2 12 2zM6 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm6 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm6 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"/&amp;gt;
    &amp;lt;/g&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/pre&gt;&lt;p&gt;
There is no need to have width and height attributes as the 'public static function get_svg' is adding the width and height. This generate a Duplicate error. Use validator.w3.org for more details. I would propose to remove those attributes from the svg tag:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;		'keyboard_arrow_left'      =&amp;gt; /* material-design – keyboard_arrow_left */ '
&amp;lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"&amp;gt;
	&amp;lt;path d="M14 7l-5 5 5 5V7z"&amp;gt;&amp;lt;/path&amp;gt;
	&amp;lt;path fill="none" d="M24 0v24H0V0h24z"&amp;gt;&amp;lt;/path&amp;gt;
&amp;lt;/svg&amp;gt;',
		'arrow_drop_down_ellipsis' =&amp;gt; /* custom – arrow_drop_down_ellipsis */ '
&amp;lt;svg xmlns="http://www.w3.org/2000/svg"&amp;gt;
    &amp;lt;g fill="none" fill-rule="evenodd"&amp;gt;
        &amp;lt;path d="M0 0h24v24H0z"/&amp;gt;
        &amp;lt;path fill="currentColor" fill-rule="nonzero" d="M12 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12 6.48 2 12 2zM6 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm6 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm6 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"/&amp;gt;
    &amp;lt;/g&amp;gt;
&amp;lt;/svg&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>before.png attached to Ticket #47454</title>
      
        <dc:creator>bronsonquick</dc:creator>

      <pubDate>Sat, 01 Jun 2019 09:09:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47454/before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47454/before.png/1559380156139353</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>after.png attached to Ticket #47454</title>
      
        <dc:creator>bronsonquick</dc:creator>

      <pubDate>Sat, 01 Jun 2019 09:09:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47454/after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47454/after.png/1559380142934005</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47454 (BC Math isn't used in WordPress core) updated</title>
      
        <dc:creator>bronsonquick</dc:creator>

      <pubDate>Sat, 01 Jun 2019 08:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47454#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47454#comment:3/1559379279709048</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Apologies if these images don't work because it's been years since I've used Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/attachment/ticket/47454/before.png"&gt;&lt;img src="https://core.trac.wordpress.org/attachment/ticket/47454/before.png" alt="https://core.trac.wordpress.org/attachment/ticket/47454/before.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/attachment/ticket/47454/before.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://core.trac.wordpress.org/attachment/ticket/47454/before.png"&gt;&lt;img src="https://core.trac.wordpress.org/attachment/ticket/47454/before.png" alt="https://core.trac.wordpress.org/attachment/ticket/47454/before.png" crossorigin="anonymous" title="https://core.trac.wordpress.org/attachment/ticket/47454/before.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47454 (BC Math isn't used in WordPress core) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Sat, 01 Jun 2019 08:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47454#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47454#comment:2/1559378773125816</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47454 (BC Math isn't used in WordPress core) updated</title>
      
        <dc:creator>bronsonquick</dc:creator>

      <pubDate>Sat, 01 Jun 2019 08:40:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47454#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47454#comment:1/1559378418876177</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47454.diff attached to Ticket #47454</title>
      
        <dc:creator>bronsonquick</dc:creator>

      <pubDate>Sat, 01 Jun 2019 08:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47454/47454.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47454/47454.diff/1559378312978454</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47454 (BC Math isn't used in WordPress core) created</title>
      
        <dc:creator>bronsonquick</dc:creator>

      <pubDate>Sat, 01 Jun 2019 08:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47454/1559377925574576</guid>
      <description>&lt;p&gt;
I had one of my old colleagues freaking out about the &lt;code&gt;The optional module, bcmath, is not installed, or has been disabled.&lt;/code&gt; which is under &lt;code&gt;4 Recommended improvements&lt;/code&gt; in Site Health.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@rmccue and I identified that BC Math isn't used in WordPress core. I assumed it was likely to be used in Jetpack but that wasn't the case. @webaware identified that it is optionally used in Yoast SEO so I guess that's why this is a recommend improvement but I believe this shouldn't be a recommendation and plugins such as Yoast Seo should hook into Site Health to make that recommendation if the plugin is installed and enabled.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It's been ages since I've used trac but I'll try and remember how to contribute a patch for this shortly! There' doesn't appear to be a 'Site Health' component so I'll guess I'll post this to General and let one of the amazing Trac Gardeners pop it in the right place! &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47453 (WP_Http_Parser warning on plugins page) created</title>
      
        <dc:creator>indeveler</dc:creator>

      <pubDate>Sat, 01 Jun 2019 07:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47453/1559374891688914</guid>
      <description>&lt;p&gt;
Warning: call_user_func() expects parameter 1 to be a valid callback, class 'WP_Http_Parser' not found.&lt;br /&gt;
Happens when update_plugins transient is deleted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Possible fix: &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;// On line 519 (before call_user_func call)
if (class_exists($class)) {
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47014 (Tag balancing corrupts Custom Elements) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 01 Jun 2019 07:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47014#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47014#comment:8/1559373156601397</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47014#comment:7" title="Comment 7"&gt;dmsnell&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@flixos90 for your perusal I also submitted a patch based on your work. in it I've taken the expanded tag name rules you provided but then moved the parsing logic mostly back into the RegExp. In the process I created a series of helper variables to make the logic clearer for me to understand.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Awesome, those changes look good to me.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Concerning the other tests I was curious why you removed the checks that specifically handled those cases? Did you intend on removing those in your patch? the &lt;code&gt;is_serialized()&lt;/code&gt; test and changes in &lt;code&gt;wp_targeted_link_rel_callback&lt;/code&gt; and such?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I really just noticed these changes actually. I swear I didn't make them (at least not on purpose), I don't know how they got into this patch. Guess it now makes sense why I was completely confused about those other tests failing. 🙈 Long story short, thanks for bringing them back.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2019-06-01 12-40-26.png attached to Ticket #47452</title>
      
        <dc:creator>kevintran094</dc:creator>

      <pubDate>Sat, 01 Jun 2019 07:12:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47452/Screenshot%20from%202019-06-01%2012-40-26.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47452/Screenshot%20from%202019-06-01%2012-40-26.png/1559373129530782</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47452 (WordPress taking time to login and throwing time-out error on upgrading) updated</title>
      
        <dc:creator>kevintran094</dc:creator>

      <pubDate>Sat, 01 Jun 2019 07:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47452#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47452#comment:1/1559373099651015</guid>
      <description></description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47452 (WordPress taking time to login and throwing time-out error on upgrading) created</title>
      
        <dc:creator>kevintran094</dc:creator>

      <pubDate>Sat, 01 Jun 2019 07:08:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47452/1559372936104263</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Description&lt;/strong&gt;: When new updates are available, I upgraded to the new version but after the upgrade successful, I still see the upgrade version and after that WordPress started working very slow. Any operation performed on the platform will take more time to load and sometimes it comes up with "connection time out" error too. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Steps to reproduce&lt;/strong&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Check for update
&lt;/li&gt;&lt;li&gt;update your WordPress version from your site to version 5.2.1
&lt;/li&gt;&lt;li&gt;Route to the dashboard, where you will see update button to version 5.2.1
&lt;/li&gt;&lt;li&gt;Perform any operation like (user info, plugin page, widget page) it takes time to load and sometimes it throws "connection time out".
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;System Info:&lt;/strong&gt;&lt;br /&gt;
System: Windows, Linux &lt;br /&gt;
Browser: Chrome 74.0.3729.131 (Official Build) (64-bit)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Sat, 01 Jun 2019 06:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:16/1559371174571190</guid>
      <description>&lt;p&gt;
@westonruter any news or decision about this ticket?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47014 (Tag balancing corrupts Custom Elements) updated</title>
      
        <dc:creator>dmsnell</dc:creator>

      <pubDate>Sat, 01 Jun 2019 04:47:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47014#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47014#comment:7/1559364449071114</guid>
      <description>&lt;p&gt;
@flixos90 for your perusal I also submitted a patch based on your work. in it I've taken the expanded tag name rules you provided but then moved the parsing logic mostly back into the RegExp. In the process I created a series of helper variables to make the logic clearer for me to understand.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Concerning the other tests I was curious why you removed the checks that specifically handled those cases? Did you intend on removing those in your patch? the &lt;code&gt;is_serialized()&lt;/code&gt; test and changes in &lt;code&gt;wp_targeted_link_rel_callback&lt;/code&gt; and such?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47014-1.diff attached to Ticket #47014</title>
      
        <dc:creator>dmsnell</dc:creator>

      <pubDate>Sat, 01 Jun 2019 04:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47014/47014-1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47014/47014-1.diff/1559362589912041</guid>
      <description>&lt;p&gt;
Updated the RegExp to move all parsing into the pattern and use helper variables to clarify logic
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40439 (Save progress of intermediate image creation after upload) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 01 Jun 2019 01:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40439#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40439#comment:34/1559351880562399</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40439#comment:31" title="Comment 31"&gt;mikeschroder&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
...in this pass, I switched to using &lt;code&gt;_wp_create_image_subsizes&lt;/code&gt; rather than have &lt;code&gt;multi_resize&lt;/code&gt; update meta because the &lt;code&gt;WP_Image_Editor&lt;/code&gt; abstraction is based around modification of a single image file rather than a WordPress attachment.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that works better, thanks @mikeschroder.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Was also thinking we should probably move these functions to a &lt;code&gt;WP_Image_Resize&lt;/code&gt; or perhaps &lt;code&gt;WP_Image_Create_Subsizes&lt;/code&gt; class? Can probably be just static. Then we can bring over other/existing functions that deal with resizing and generating the image meta, and just leave stubs outside the class. That would let us organize and name the new additions better, have some private vars and methods, etc.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm almost done reviewing the patch. The last remaining thing to "grok" is how to handle (in a compatible way) the fact that &lt;code&gt;wp_generate_attachment_metadata()&lt;/code&gt; actually creates the image sub-sizes rather than (only) generating the meta data :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Then we'll add the "multi-request" resizing to the same class. There we can look into the elapsed time since the current run started, similarly to how Site Health calculates file sizes, and trigger the next request when it is (perhaps) over 20 seconds? Would be a nice optimization.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47451 (Twenty Ten: Make theme responsive) updated</title>
      
        <dc:creator>davidbaumwald</dc:creator>

      <pubDate>Sat, 01 Jun 2019 00:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47451#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47451#comment:1/1559347536559467</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47451 (Twenty Ten: Make theme responsive) created</title>
      
        <dc:creator>skierpage</dc:creator>

      <pubDate>Fri, 31 May 2019 23:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47451/1559346323359927</guid>
      <description>&lt;p&gt;
Google is downgrading my site in search results because "Your page is not mobile-friendly," even though I'm using the latest version 2.9 of your Twenty Ten theme.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"Todd Halfpenny" has written the CSS to address this as both a &lt;a class="ext-link" href="http://toddhalfpenny.com/2010/08/18/a-responsive-twenty-ten-wordpress-theme/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;child theme&lt;/a&gt; and a &lt;a class="ext-link" href="https://wordpress.org/plugins/responsive-twentyten/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plug-in&lt;/a&gt;. Please update this theme, thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47436 (Menu depth doesn't affect menu-item-has-children) updated</title>
      
        <dc:creator>mikeybinns</dc:creator>

      <pubDate>Fri, 31 May 2019 20:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47436#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47436#comment:2/1559334453508552</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
These patches work for the first depth (the main line) but the class is also added to lower level submenus.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Example:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Depth = 1
&amp;lt;li class="no-class"&amp;gt;
  &amp;lt;a&amp;gt;menu item&amp;lt;/a&amp;gt;
&amp;lt;/li&amp;gt;
Depth = 2
&amp;lt;li class="menu-item-has-children"&amp;gt;
  &amp;lt;a&amp;gt;menu item&amp;lt;/a&amp;gt;
  &amp;lt;ul class="sub-menu"&amp;gt;
    &amp;lt;li class="menu-item-has-children"&amp;gt;
      &amp;lt;a&amp;gt;2nd depth menu item with removed submenu&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
  &amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I think this needs some kind of depth iterator, so the function knows the max depth and the current item depth.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
Mikey&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39750 (Twenty Seventeen: Wrong image sizes within gallery on site view) closed</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 31 May 2019 18:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39750#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39750#comment:6/1559327291985838</guid>
      <description>invalid: &lt;p&gt;
I do not believe that this is a bug, so I am going to close it as &lt;code&gt;invalid&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also I cannot see that this was introduced in either the &lt;code&gt;4.7.2&lt;/code&gt; Core update or the &lt;code&gt;1.1&lt;/code&gt; Twenty Seventeen update.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you believe that this is an error, feel free to reopen the ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39750 (Twenty Seventeen: Wrong image sizes within gallery on site view) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 31 May 2019 18:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39750#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39750#comment:5/1559326148019140</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39966 (Twenty Ten: Featured Images on Category/Archive pages) closed</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 31 May 2019 17:37:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39966#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39966#comment:2/1559324241628948</guid>
      <description>wontfix: &lt;p&gt;
Thanks for your suggestion @ashercantrell. At this time I don't think that we be adding anything new to the Twenty Ten theme, so I am going to close this as a &lt;code&gt;wontfix&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This suggestion could be accomplished by creating a child theme of Twenty Ten, see here for directions &lt;a class="ext-link" href="https://developer.wordpress.org/themes/advanced-topics/child-themes/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/advanced-topics/child-themes/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #47450 (Every time I upload any image or any type of media, it shows an HTTP error.) updated</title>
      
        <dc:creator>mikewestcoast</dc:creator>

      <pubDate>Fri, 31 May 2019 17:32:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47450#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47450#comment:1/1559323924256129</guid>
      <description>&lt;p&gt;
By the way, many times when I get this "HTTP error" message, the images load. But then sometimes the images actually don't load. When the images don't load, I re-load the images for a 2nd time and after the 2nd time of uploading the images, WordPress uploads the images successfully. However, even when I load images a 2nd time, WordPress shows there is an "HTTP error".  &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Uploading an image shows an HTTP error every time for all of 2019 -Sent to WordPress.org 31 May 2019.jpg attached to Ticket #47450</title>
      
        <dc:creator>mikewestcoast</dc:creator>

      <pubDate>Fri, 31 May 2019 17:28:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47450/Uploading%20an%20image%20shows%20an%20HTTP%20error%20every%20time%20for%20all%20of%202019%20-Sent%20to%20WordPress.org%2031%20May%202019.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47450/Uploading%20an%20image%20shows%20an%20HTTP%20error%20every%20time%20for%20all%20of%202019%20-Sent%20to%20WordPress.org%2031%20May%202019.jpg/1559323723296365</guid>
      <description>&lt;p&gt;
This image shows that every time I upload an image to the media library, WordPress claims there is an HTTP error. Usually the image loads, sometimes not.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47450 (Every time I upload any image or any type of media, it shows an HTTP error.) created</title>
      
        <dc:creator>mikewestcoast</dc:creator>

      <pubDate>Fri, 31 May 2019 17:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47450/1559323624615536</guid>
      <description>&lt;p&gt;
Every time I upload any image or any type of media, it shows an HTTP error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Will WordPress fix this problem? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47449 ("Publishing Failed" message. Yet, it did publish.) created</title>
      
        <dc:creator>mikewestcoast</dc:creator>

      <pubDate>Fri, 31 May 2019 17:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47449</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47449/1559322884116652</guid>
      <description>&lt;p&gt;
For the last several months (March-May 2019) in the Gutenberg Editor, once in a while, when you hit "Update", the Gutenberg Editor says "Publishing Failed". Yet, it IS publishing the update and publishing is NOT failing. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And once in a while when using the Classic Editor, after hitting the "Update" button, it will respond as if the update did not happen and claim an error occurred. After hitting "Update" a white blank screen will appear with this message at the top: "PHP Notice: Unknown: file created in the system's temporary directory in Unknown on line 0". Yet, hitting back button and then clicking on "View Page", the changes did take place. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Any suggestions? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>02 italic.png attached to Ticket #47327</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 31 May 2019 16:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47327/02%20italic.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47327/02%20italic.png/1559319725815164</guid>
      <description>&lt;p&gt;
More examples of large blocks of italic text (from the Media Editor page)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>random.csv attached to Ticket #47448</title>
      
        <dc:creator>netweblogic</dc:creator>

      <pubDate>Fri, 31 May 2019 15:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47448/random.csv</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47448/random.csv/1559318060645796</guid>
      <description>&lt;p&gt;
Example CSV file that'll fail to get uploaded.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47448 (CSV import MIME type fails with HTML content) created</title>
      
        <dc:creator>netweblogic</dc:creator>

      <pubDate>Fri, 31 May 2019 15:54:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47448</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47448/1559318041325842</guid>
      <description>&lt;p&gt;
Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45615" title="#45615: defect (bug): CSV Mime Type fails upload (closed: fixed)"&gt;#45615&lt;/a&gt; which is not fully resolved.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've noticed that with CSV uploads, if a CSV contains HTML (which is valid content for a CSV file), the MIME type in the following function gets returned as 'text/html':&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/functions.php#L2567"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/functions.php#L2567&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$real_mime = finfo_file( $finfo, $file );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Here's a simple CSV file sample that demonstrates the problem. Try uploading that to media and you get &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry, this file type is not permitted for security reasons.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class="wiki"&gt;"Name","Surname","DOB","Text"
"John","Smith","1980-01-01","&amp;lt;a href=""http://wordpress.org/""&amp;gt;WordPress&amp;lt;/a&amp;gt;"
&lt;/pre&gt;&lt;p&gt;
Remove the HTML in there, and it uploads without issue. I think CSV should permit text/html as well as a valid mime type.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37926 (Twenty Eleven &amp; Twenty Twelve: Dropdown category widget exceeds parent ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Fri, 31 May 2019 15:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37926#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37926#comment:7/1559318022074978</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47447 (Allow client-side storing of comment meta) created</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Fri, 31 May 2019 15:46:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47447</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47447/1559317612022587</guid>
      <description>&lt;p&gt;
As a modern counterpart to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12431" title="#12431: enhancement: Record comment meta in wp_new_comment (closed: fixed)"&gt;#12431&lt;/a&gt;, I think it'd be nice if plugins could add comment meta from the client side as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
An example use case would be &lt;a class="ext-link" href="https://github.com/iandunn/compassionate-comments"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;a plugin that identifies toxic comments, and then encourages the author to rephrase it to be more kind before it gets submitted&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It's currently possible by adding a &lt;code&gt;preprocess_comment&lt;/code&gt; callback that examines &lt;code&gt;$_POST&lt;/code&gt;, verifies and sanitizes the data, and then adds it to &lt;code&gt;$commentdata&lt;/code&gt; before that gets passed to &lt;code&gt;wp_insert_comment()&lt;/code&gt;. It could be much easier and standardized, though.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Ideally, I think a client-side script should be able to just append a hidden input field named &lt;code&gt;comment_meta[]&lt;/code&gt; to the &lt;code&gt;.form-submit&lt;/code&gt; element, and have it be automatically added via &lt;code&gt;wp_insert_comment()&lt;/code&gt;, rather than being ignored by &lt;code&gt;wp_handle_comment_submission()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since it's coming from the client side, the data can't be trusted. We need to verify that it was added by the enqueued script, and then sanitize it. Maybe there could be something similar to &lt;code&gt;register_post_meta()&lt;/code&gt; with a &lt;code&gt;allow_in_form&lt;/code&gt; boolean param, and a &lt;code&gt;sanitize_callback&lt;/code&gt; param.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47446 (Tools &gt; Export does not include term meta data for a custom post type) created</title>
      
        <dc:creator>mclaurent</dc:creator>

      <pubDate>Fri, 31 May 2019 15:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47446</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47446/1559317134665347</guid>
      <description>&lt;p&gt;
Steps:&lt;br /&gt;
# Register a public custom post type &lt;br /&gt;
# Register a custom taxonomy with a custom term_meta&lt;br /&gt;
# populate with dummy posts, terms and term meta values&lt;br /&gt;
# go to tools &amp;gt; export and select your custom post type&lt;br /&gt;
# The resulting XML is perfectly valid and includes all posts along with the terms of the taxonomy. Observe that none of the terms have their corresponding term_meta&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Expected: &lt;br /&gt;
When exporting content of one custom post type, the term_meta should be included.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Solution:&lt;br /&gt;
I have not found one. Looking at wp-admin/includes/export.php:148 I can see that $terms is only populated when $args&lt;a class="missing wiki"&gt;content?&lt;/a&gt; is set to all ("All Content"). Here the source I am referring to: &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.2.1/wp-admin/includes/export.php#L148"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.2.1/wp-admin/includes/export.php#L148&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Environment: WP 5.2.1, WAMP, PHP7.2&lt;br /&gt;
 &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47442 (Twitter auto-embed fails if twitter username contains Emoji icon) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 31 May 2019 15:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47442#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47442#comment:1/1559316831086995</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @dijkenwater,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can you provide some more details to help others reproduce the issue? I tried, but have been unable to reproduce in my testing. I have tried embedding tweets where usernames contain emojis in the block editor using the Twitter embed block, the Classic Editor block, and the Classic Editor.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You mentioned that they work and then stop after a while. Have you been able to determine what stops them from working? Also, when they do not work, is there any browser level ad blocker or tracking script prevention running?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47141 (Radio and checkbox labels rely on implicit association) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 31 May 2019 15:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47141#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47141#comment:5/1559315155040967</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1559315153119200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44317 (wp_safe_redirect() and wp_redirect() shouldn't allow non-3xx status codes) updated</title>
      
        <dc:creator>mjnewman</dc:creator>

      <pubDate>Fri, 31 May 2019 14:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44317#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44317#comment:2/1559313312853704</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added check_http_status_code() function to check if an HTTP status code is within a specific range, such as 3XX, or a multiple ranges, such as 2XX and 3XX. Includes option to wp_die(). Returns the HTTP status code if it's within the specified range.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Added check_http_status_code() to wp_redirect() after the 'wp_redirect_status' filter is applied.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44317.diff attached to Ticket #44317</title>
      
        <dc:creator>mjnewman</dc:creator>

      <pubDate>Fri, 31 May 2019 14:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44317/44317.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44317/44317.diff/1559312874613856</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15307 (Fix Delay on Admin Bar Dropdowns) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 31 May 2019 14:19:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15307#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15307#comment:5/1559312354740355</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1559312352066900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41467 (Disassociate image alt text from media object) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 31 May 2019 14:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41467#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41467#comment:9/1559312163309299</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1559312162064500"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47441 (WP_Ajax_Upgrader_Skin Bug: "unique" error code is always 1) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 31 May 2019 14:13:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47441#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47441#comment:3/1559311990507406</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45487" title="Upgrade/Install: Correct operator precedence for an error code in ..."&gt;45487&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade/Install: Correct operator precedence for an error code in &lt;code&gt;WP_Ajax_Upgrader_Skin::error()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jrf.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47441" title="#47441: defect (bug): WP_Ajax_Upgrader_Skin Bug: &amp;#34;unique&amp;#34; error code is always 1 (closed: fixed)"&gt;#47441&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45487]: Upgrade/Install: Correct operator precedence for an error code in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 31 May 2019 14:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45487/1559311989350408</guid>
      <description>&lt;p&gt;
Upgrade/Install: Correct operator precedence for an error code in &lt;code&gt;WP_Ajax_Upgrader_Skin::error()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jrf.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47441" title="#47441: defect (bug): WP_Ajax_Upgrader_Skin Bug: &amp;#34;unique&amp;#34; error code is always 1 (closed: fixed)"&gt;#47441&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47439 (wp-phpunit: go_to() does not unset current_screen) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 31 May 2019 14:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47439#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47439#comment:3/1559311588063929</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45486" title="Build/Test Tools: Add `$current_screen` to the list of globals to ..."&gt;45486&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Add &lt;code&gt;$current_screen&lt;/code&gt; to the list of globals to unset in &lt;code&gt;WP_UnitTestCase_Base::go_to()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mauteri.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47439" title="#47439: defect (bug): wp-phpunit: go_to() does not unset current_screen (closed: fixed)"&gt;#47439&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45486]: Build/Test Tools: Add `$current_screen` to the list of globals to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 31 May 2019 14:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45486</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45486/1559311587010865</guid>
      <description>&lt;p&gt;
Build/Test Tools: Add &lt;code&gt;$current_screen&lt;/code&gt; to the list of globals to unset in &lt;code&gt;WP_UnitTestCase_Base::go_to()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props mauteri.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47439" title="#47439: defect (bug): wp-phpunit: go_to() does not unset current_screen (closed: fixed)"&gt;#47439&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47441 (WP_Ajax_Upgrader_Skin Bug: "unique" error code is always 1) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 31 May 2019 13:58:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47441#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47441#comment:2/1559311138037786</guid>
      <description>&lt;p&gt;
Note: this is the only code within WordPress which is affected by this PHP 7.4/8.0 change based on an analysis done by Nikita Popov of PHP core before this change was implemented.&lt;br /&gt;
See:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://news.php.net/php.internals/105442"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://news.php.net/php.internals/105442&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://gist.github.com/nikic/a4df3e8e18c7955c2c21cf6cdb4cbfaa"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/nikic/a4df3e8e18c7955c2c21cf6cdb4cbfaa&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
FYI: there will soon be a sniff available in &lt;a class="ext-link" href="https://github.com/PHPCompatibility/PHPCompatibility"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPCompatibility&lt;/a&gt; to detect code affected by this change so userland code/plugins/themes can verify whether they are affected.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45130 (Defer jQuery WordPress Admin &amp; Customizer doesn't work properly) updated</title>
      
        <dc:creator>remzicavdar</dc:creator>

      <pubDate>Fri, 31 May 2019 13:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45130#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45130#comment:12/1559310882703576</guid>
      <description>&lt;p&gt;
We could also provide a set of options. Like what I did with my plugin: &lt;a class="ext-link" href="https://github.com/Remzi1993/wp-jquery-manager"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Remzi1993/wp-jquery-manager&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The default would be what you describe, in the head and jQuery 1x for maximum backward compatibility. And settings for (advanced) users / developers so that they can decide what they want enabled or disabled.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://ps.w.org/jquery-manager/assets/screenshot-1.png"&gt;&lt;img src="https://ps.w.org/jquery-manager/assets/screenshot-1.png" alt="https://ps.w.org/jquery-manager/assets/screenshot-1.png" crossorigin="anonymous" title="https://ps.w.org/jquery-manager/assets/screenshot-1.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://ps.w.org/jquery-manager/assets/screenshot-2.png"&gt;&lt;img src="https://ps.w.org/jquery-manager/assets/screenshot-2.png" alt="https://ps.w.org/jquery-manager/assets/screenshot-2.png" crossorigin="anonymous" title="https://ps.w.org/jquery-manager/assets/screenshot-2.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47427 (deleted pages for a plugin prevent page creation during ...) updated</title>
      
        <dc:creator>nbi1</dc:creator>

      <pubDate>Fri, 31 May 2019 13:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47427#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47427#comment:2/1559310666476733</guid>
      <description>&lt;p&gt;
It's a Wordpress policy decision as to whether or not to enforce good plugin behavior. I think it's in Wordpress best interest to prohibit plugin behaviors that make Wordpress difficult to use. With the current implementation if a plugin fails to create pages the user is left wondering what happened and how to rectify the situation. That's not a very user friendly system. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"wouldn't concurrent trash/live pages be very confusing for users?"&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Why would they be? During normal usage/operation the user has no reason to think about the contents of 'trash'. The only reason to access 'trash' directly is in the event that something was accidentally deleted and needs to be restored. It is far more confusing to let plugins install without successfully completing all the required installation steps such as running a page creation wizard. Right now Wordpress treats such a plugin installation as a valid install which in fact it is not because most plugins cannot function properly unless all installation steps were successfully completed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
"can't the plugin make sure to remove the pages it created...."&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes it could and that would be a good way of dealing with the situation *iff* plugins could reliably identify and remove files that they were responsible for. How to enforce this behavior though?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Although clean installation and un-installation are equally important I'm more concerned about the former because that can be a showstopper that prevents plugin use. With the current implementation why are plugins looking at the contents of 'trash' in order to decide whether or not to run the page creation wizard? No assumptions should be made about the contents of 'trash' so this is a logic error. Is this simply an error on part of the plugin or is this a consequence of some Wordpress restriction/enforcement? In either case it's wrong, makes Wordpress difficult to use, and should be corrected.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47156 (Consider a way to clear the wp.a11y.speak() live regions) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 31 May 2019 13:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47156#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47156#comment:2/1559310052069441</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47122 (Media views: fix unlabelled controls) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 31 May 2019 13:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47122#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47122#comment:1/1559310004631041</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47171 (Incorrect cursor used on buttons) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 31 May 2019 13:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47171#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47171#comment:4/1559309872319809</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47320 (Site Health: Call to API with $_COOKIE and PHPSESSID) updated</title>
      
        <dc:creator>netweblogic</dc:creator>

      <pubDate>Fri, 31 May 2019 13:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47320#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47320#comment:6/1559307805441170</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47320#comment:5" title="Comment 5"&gt;matthieumota&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it will be better to close session in the plugin code base no ? Everybody get this issue I think...&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think what @Clorith means is the problem with 'fixing' the site check, in this case, is that the way we're using sessions might be 'wrong'.  Other parts of core might do the same thing and therefore our code would cause problems there too, hence the site check giving a warning of the potential problem.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd be interested to know what other instances a loopback like this occurs in core, requiring this check to also maintain session data the same way. The only thing that springs to mind is maybe multiple modifications in the block editor triggering multiple async API calls. Crons like updates for example I believe are fired off independently without any user/session data?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47445 (Unable to set rows attribute for textarea input in the Customizer) created</title>
      
        <dc:creator>timhavinga</dc:creator>

      <pubDate>Fri, 31 May 2019 12:58:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47445</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47445/1559307490919243</guid>
      <description>&lt;p&gt;
Hi there,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Currently, when a textarea input is added to the Customizer via WP_Customize_Manager::add_control(), the number of rows is fixed to 5. See &lt;a href="https://core.trac.wordpress.org/browser/tags/5.2/src/wp-includes/class-wp-customize-manager.php#L4140"&gt;line 4140 of the Customize Manager&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could this be fixed to be 5 by default, but enables me to override this?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47369 (Admin pages have two viewport meta tags on mobile) updated</title>
      
        <dc:creator>ajayghaghretiya1</dc:creator>

      <pubDate>Fri, 31 May 2019 11:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47369#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47369#comment:4/1559303666120133</guid>
      <description>&lt;p&gt;
If _pad_meta() will be deprecated then do we need to remove all the dependency as in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18926" title="Make iPad support usable again, add viewport meta, see #18863"&gt;[18926]&lt;/a&gt;?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47320 (Site Health: Call to API with $_COOKIE and PHPSESSID) updated</title>
      
        <dc:creator>matthieumota</dc:creator>

      <pubDate>Fri, 31 May 2019 11:54:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47320#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47320#comment:5/1559303663812303</guid>
      <description>&lt;p&gt;
I think it will be better to close session in the plugin code base no ? Everybody get this issue I think...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We can easily resolve the bug on code. I can write that but I need to take the time to understand the rules of contributions, it is the most time-consuming and I've no time at the moment...&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47320 (Site Health: Call to API with $_COOKIE and PHPSESSID) updated</title>
      
        <dc:creator>netweblogic</dc:creator>

      <pubDate>Fri, 31 May 2019 11:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47320#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47320#comment:4/1559302727778254</guid>
      <description>&lt;p&gt;
@Clorith thanks for the feedback... upon some further research, making use of session_write_close() and keeping sessions open/locked only when we know it'll be needed for writing seems to have done the trick and probably a better approach anyway.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For anyone with a similar problem, maybe this explains it better, my previous snippet failed the site health tests, this one doesn't:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nb"&gt;session_start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//this loads variables to $_SESSION for reading
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$your_plugin_needs_session_saving&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nb"&gt;session_write_close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;//other plugins can restart a session again via session_start()
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// if session writing is needed, close session after writing is done
&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I'm not sure if this would work for all use cases, but in my case I only need to write to sessions when particular actions are taken, avoiding (hopefully) all situations where there'd be a conflict due to session locking.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The only argument I'd make towards it possibly being a bug in Site Health is that in my case, until now, my plugin session handling worked fine with all other WP functionality (at least, I've not been made aware of any issues).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47424 (Need to add comment before function definition,) updated</title>
      
        <dc:creator>priyankkpatel</dc:creator>

      <pubDate>Fri, 31 May 2019 11:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47424#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47424#comment:8/1559301988394554</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47424#comment:4" title="Comment 4"&gt;desrosj&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like &lt;code&gt;list_plugin_updates()&lt;/code&gt; was &lt;a href="https://core.trac.wordpress.org/browser/branches/2.7/wp-admin/update-core.php#L15"&gt;actually included in 2.7&lt;/a&gt; in changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9543" title="More core update to update-core.php.  Allow re-installing current ..."&gt;[9543]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for this, @priyankkpatel!&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are welcome.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47424 (Need to add comment before function definition,) updated</title>
      
        <dc:creator>ajayghaghretiya1</dc:creator>

      <pubDate>Fri, 31 May 2019 11:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47424#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47424#comment:7/1559301681708546</guid>
      <description>&lt;p&gt;
@SergeyBiryukov I've updated the descriptions for the other functions in that file. Is it good to go now?&lt;br /&gt;
@mukesh27 Any thoughts on this? ;)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 31 May 2019 11:20:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:102/1559301609797895</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>update-description.diff attached to Ticket #47424</title>
      
        <dc:creator>ajayghaghretiya1</dc:creator>

      <pubDate>Fri, 31 May 2019 11:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47424/update-description.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47424/update-description.diff/1559301522213272</guid>
      <description>&lt;p&gt;
Updated the description for the other functions in the update-core.php file.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47444 (Deprecate the caption field from the media modal) created</title>
      
        <dc:creator>andraganescu</dc:creator>

      <pubDate>Fri, 31 May 2019 11:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47444/1559301376427810</guid>
      <description>&lt;p&gt;
While working on keeping authored captions in Gutenberg (&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/15004"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/15004&lt;/a&gt;), I realised that having "attachment captions", a property of "caption" for the attachment entity, makes little sense (to me). &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A caption's role is to describe the figure &lt;strong&gt;in context&lt;/strong&gt;. Alt text is a precise description of the image, which, yes, is common to all contexts, but caption seems to be directly influenced by where I use an image.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Say I have a picture of a beautiful apple. If I use it in an article about how Apple stock is doing well, then I might caption it "Apple stock is ripe to sell". However, if I use it in an article about the way Magic Mouse is charging, I might caption it "Thank God Apple didn't design apples". In both cases the Alt text would be "Picture of a ripe apple".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Can we, or is there at least a possibility, to deprecate having captions in the media modal attached to each image there?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47416 (Site health - Rest API error - cURL error 28) updated</title>
      
        <dc:creator>nirvak</dc:creator>

      <pubDate>Fri, 31 May 2019 11:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47416#comment:6/1559301052551188</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I solved the issue.&lt;br /&gt;
It was the plugin "WP GDPR".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Deactivating it, solved the problem.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47443 (REST-API prevents users with edit_published_posts capability updating ...) updated</title>
      
        <dc:creator>derweili</dc:creator>

      <pubDate>Fri, 31 May 2019 11:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47443#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47443#comment:1/1559300755140469</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47443.diff attached to Ticket #47443</title>
      
        <dc:creator>derweili</dc:creator>

      <pubDate>Fri, 31 May 2019 11:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47443/47443.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47443/47443.diff/1559300579797685</guid>
      <description>&lt;p&gt;
Patch V1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47441 (WP_Ajax_Upgrader_Skin Bug: "unique" error code is always 1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 31 May 2019 10:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47441#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47441#comment:1/1559299306541686</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47439 (wp-phpunit: go_to() does not unset current_screen) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 31 May 2019 10:40:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47439#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47439#comment:2/1559299243602481</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45882 (REST Block Renderer: Fails when using the Advanced &gt; Additional CSS ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 31 May 2019 10:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45882#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45882#comment:10/1559297837735818</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by phpbitscreativestudio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1559297836048800"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47282 (Use font-display for Google Fonts in core themes) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 31 May 2019 10:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47282#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47282#comment:6/1559297380318040</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/45485" title="Bundled Theme: Load Google fonts with `display=fallback` parameter for ..."&gt;45485&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bundled Theme: Load Google fonts with &lt;code&gt;display=fallback&lt;/code&gt; parameter for better UX in case the font cannot be loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Providing this query parameter ensures the stylesheet contains the &lt;code&gt;font-display: fallback&lt;/code&gt; rule. This changeset also updates the Open Sans font used by core accordingly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47282" title="#47282: enhancement: Use font-display for Google Fonts in core themes (closed: fixed)"&gt;#47282&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [45485]: Bundled Theme: Load Google fonts with `display=fallback` parameter for ...</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 31 May 2019 10:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/45485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/45485/1559297379163088</guid>
      <description>&lt;p&gt;
Bundled Theme: Load Google fonts with &lt;code&gt;display=fallback&lt;/code&gt; parameter for better UX in case the font cannot be loaded.
&lt;/p&gt;
&lt;p&gt;
Providing this query parameter ensures the stylesheet contains the &lt;code&gt;font-display: fallback&lt;/code&gt; rule. This changeset also updates the Open Sans font used by core accordingly.
&lt;/p&gt;
&lt;p&gt;
Props westonruter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47282" title="#47282: enhancement: Use font-display for Google Fonts in core themes (closed: fixed)"&gt;#47282&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>47436.2.patch attached to Ticket #47436</title>
      
        <dc:creator>viralsampat</dc:creator>

      <pubDate>Fri, 31 May 2019 10:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47436/47436.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47436/47436.2.patch/1559297349076613</guid>
      <description>&lt;p&gt;
Updated Patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47443 (REST-API prevents users with edit_published_posts capability updating ...) created</title>
      
        <dc:creator>derweili</dc:creator>

      <pubDate>Fri, 31 May 2019 10:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47443/1559296979618234</guid>
      <description>&lt;p&gt;
When a user has &lt;code&gt;edit_posts&lt;/code&gt; and &lt;code&gt;edit_published_posts&lt;/code&gt; capabilities but &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;publish_posts&lt;/code&gt; capability and they edit a published post they they get following error:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;'Sorry, you are not allowed to publish posts in this post type.'
&lt;/pre&gt;&lt;p&gt;
Because the Block Editor relies on the REST-API, you can see this behavior in the Gutenberg Editor as well.&lt;br /&gt;
In Gutenberg they don't see the above error. Instead you see a "Submit for Review" button instead of an Update Button.&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="ToReproduce"&gt;To Reproduce&lt;/h2&gt;
&lt;ol&gt;&lt;li&gt;Create a user with edit_pages and edit_published_pages capabilities but not publish_pages capability
&lt;/li&gt;&lt;li&gt;Login as that user and edit a published page in the Classic Editor
&lt;/li&gt;&lt;li&gt;See that the primary action button is "Update"
&lt;/li&gt;&lt;li&gt;Switch to the Block Editor and see that the primary action button is "Submit for Review"
&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="Ithinktherearetwochangesthatneedtobedone:"&gt;I think there are two changes that need to be done:&lt;/h2&gt;
&lt;h3 id="a1.inwp-includesrest-apiendpointsclass-wp-rest-posts-controller.php:1825"&gt;1. in  wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php:1825&lt;/h3&gt;
&lt;p&gt;
The if statement should be changed to:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'attachment'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_type&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'publish'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cap&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;edit_published_posts&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cap&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;publish_posts&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
After this first change you will have the "Update" Button back in the editor, but you still can't update the post. You will receive the above &lt;code&gt;Sorry, you are not allowed to publish posts in this post type.&lt;/code&gt; answer from the REST-API. A additional change must be done:&lt;br /&gt;
&lt;/p&gt;
&lt;h3 id="a2.inwp-includesrest-apiendpointsclass-wp-rest-posts-controller.php:1148"&gt;2. in  wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php:1148&lt;/h3&gt;
&lt;p&gt;
The if statement should be changed to&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cap&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;publish_posts&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cap&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;edit_published_posts&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rest_cannot_publish'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Sorry, you are not allowed to publish posts in this post type.'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;rest_authorization_required_code&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h2 id="Related"&gt;Related&lt;/h2&gt;
&lt;p&gt;
Github Issue for Gutenberg: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/13342"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/13342&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I am concerned about introducing security risk with this changes.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47014 (Tag balancing corrupts Custom Elements) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 31 May 2019 09:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47014#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47014#comment:6/1559296531464386</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47014/47014.diff" title="Attachment '47014.diff' in Ticket #47014"&gt;47014.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47014/47014.diff" title="Download"&gt;​&lt;/a&gt; makes the following updates:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Consider capitalized tags only if they don't include a dash (i.e. allow dashes only in combination with &lt;code&gt;[a-z0-9]&lt;/code&gt;).
&lt;/li&gt;&lt;li&gt;Update the regex so that we can check whether spaces were provided after what we assume to be the tag or not.
&lt;/li&gt;&lt;li&gt;If there were no spaces provided and the first following character is a dash, we are in a tag that uses capitalization in combination with dashes, which is invalid - so the part is kept unchanged. That is not a super-elegant solution, but what I came up with that doesn't require tons of changes.
&lt;/li&gt;&lt;li&gt;Add more tests, for invalid custom elements and for a capitalized regular tag to make sure those continue to work.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I noticed, while this patch works completely for all the &lt;code&gt;balanceTags()&lt;/code&gt; tests, it seems to cause breakage in three other tests for &lt;code&gt;wp_targeted_link_rel()&lt;/code&gt;, which I'm not sure about why they're happening - would be great if one of y'all could verify if that happens for you too. Either way, I wanted to upload this patch already as possible iteration.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>47014.diff attached to Ticket #47014</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 31 May 2019 09:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47014/47014.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47014/47014.diff/1559296093446444</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47416 (Site health - Rest API error - cURL error 28) updated</title>
      
        <dc:creator>capbussat</dc:creator>

      <pubDate>Fri, 31 May 2019 09:39:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47416#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47416#comment:5/1559295571451658</guid>
      <description>&lt;p&gt;
I have the same issue with my Plugin 'Mis Cursos' &lt;a class="ext-link" href="https://wordpress.org/plugins/mis-cursos/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/mis-cursos/&lt;/a&gt; gives error in Health Site page.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;cURL error 28: Operation timed out after
&lt;/pre&gt;&lt;p&gt;
I may change slightly my code to avoid session lock conflict with REST API . I have tested locally and so far message dissapears from Health Site page, but then I see PHP notices in error log like PHP Warning:  session_start(): Cannot start session when headers already sent in.  &lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// session
&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;mis_cursos_register_session&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;session_id&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
       &lt;span class="nb"&gt;session_start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// session
&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;mis_cursos_destroy_session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// generally better than UNSET each session variable
&lt;/span&gt;     &lt;span class="nb"&gt;session_destroy&lt;/span&gt; &lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;is_admin&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;  &lt;span class="c1"&gt;// DONE avoid session locks with REST_API !
&lt;/span&gt;    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'mis_cursos_register_session'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_logout'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mis_cursos_destroy_session'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mis_cursos_destroy_session'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47436 (Menu depth doesn't affect menu-item-has-children) updated</title>
      
        <dc:creator>rishishah</dc:creator>

      <pubDate>Fri, 31 May 2019 09:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47436#comment:1/1559294387558021</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47436.patch attached to Ticket #47436</title>
      
        <dc:creator>rishishah</dc:creator>

      <pubDate>Fri, 31 May 2019 09:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47436/47436.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47436/47436.patch/1559294255945007</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
Fix with tests
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #46032 (Plugin details text direction layout (RTL)) updated</title>
      
        <dc:creator>man4toman</dc:creator>

      <pubDate>Fri, 31 May 2019 09:13:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46032#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46032#comment:5/1559294017777155</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47014 (Tag balancing corrupts Custom Elements) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 31 May 2019 08:11:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47014#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47014#comment:5/1559290303543202</guid>
      <description>&lt;p&gt;
@dmsnell Thanks for these detailed observations. There are indeed several shortcomings in the current parser, but fixing all of them goes beyond the scope of this ticket. I also think only covering regular word characters in this iteration is a valuable enough change.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I agree though that we must make sure to not accidentally allow invalid tags (e.g. custom element tags including capital letters as you mention). Something I'm also wondering about: Is it actually valid to have a tag like &lt;code&gt;&amp;lt;---&amp;gt;&lt;/code&gt;? According to &lt;a class="ext-link" href="https://w3c.github.io/webcomponents/spec/custom/#valid-custom-element-name"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the spec&lt;/a&gt; it seems so.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47427 (deleted pages for a plugin prevent page creation during ...) updated</title>
      
        <dc:creator>andraganescu</dc:creator>

      <pubDate>Fri, 31 May 2019 08:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47427#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47427#comment:1/1559290248320973</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there @nbi1 and welcome to WordPress Trac. First thank you for your submission, it is an interesting usecase. Second, I have some questions:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;why should this be a core functionality?
&lt;/li&gt;&lt;li&gt;can't the plugin make sure to remove the pages it created, using maybe &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/register_uninstall_hook/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/register_uninstall_hook/&lt;/a&gt; even if they are in the trash?
&lt;/li&gt;&lt;li&gt;wouldn't concurrent trash/live pages be very confusing for users?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Thank you for your time and answers! :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47442 (Twitter auto-embed fails if twitter username contains Emoji icon) created</title>
      
        <dc:creator>dijkenwater</dc:creator>

      <pubDate>Fri, 31 May 2019 07:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47442/1559289438470115</guid>
      <description>&lt;p&gt;
Every time we add a Twitter link to our articles, the embedded (auto-embed) tweets stop working after a while. this happens only, when the username contains a emoji icon. All other tweets works fine. Adding the embed code from twitter works also fine (with emoji in username)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>47441.patch attached to Ticket #47441</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 31 May 2019 05:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47441/47441.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47441/47441.patch/1559279554018428</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47441 (WP_Ajax_Upgrader_Skin Bug: "unique" error code is always 1) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 31 May 2019 05:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47441/1559279478792372</guid>
      <description>&lt;p&gt;
The concatenation and plus/minus signs in PHP have the &lt;a class="ext-link" href="https://www.php.net/manual/en/language.operators.precedence.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;same operator precedence&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
With that in mind, have a look at the following code in &lt;code&gt;wp-admin/includes/class-wp-ajax-upgrader-skin.php&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;// Count existing errors to generate an unique error code.
&lt;/span&gt;&lt;span class="nv"&gt;$errors_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_error_codes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'unknown_upgrade_error_'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$errors_count&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$string&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The "unique" error code, will basically always be &lt;code&gt;1&lt;/code&gt; as the concatenation is done first, the resulting string which doesn't start with a number is then cast to an integer - &lt;code&gt;0&lt;/code&gt; - before the addition of &lt;code&gt;1&lt;/code&gt; is done and &lt;code&gt;0 + 1&lt;/code&gt; will &lt;strong&gt;always&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="https://3v4l.org/EYuU8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://3v4l.org/EYuU8&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While this is a bug in its own right as is, as of PHP 8.0, the operator precedence of concatenation will be lowered, with deprecation notices being thrown as of PHP 7.4 for unparenthesized expressions containing an '.' before a '+' or '-'.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also see:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wiki.php.net/rfc/concatenation_precedence"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wiki.php.net/rfc/concatenation_precedence&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47440 (add_header X-Frame-Options) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 31 May 2019 01:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47440#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47440#comment:1/1559266983385481</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Iframes have valid use-cases, and as a result using &lt;code&gt;X-Frame-Options: SAMEORIGIN&lt;/code&gt; when it's expected an application is using them isn't going to severely reduce security.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;X-Frame-Options: DENY&lt;/code&gt; I believe will also block the WordPress page embeds (ie. embedding your blog post preview onto another WordPress site). &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Additionally, WordPress already sends a &lt;code&gt;X-Frame-Options: SAMEORIGIN&lt;/code&gt; header for Login/Admin requests - &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12293" title="#12293: defect (bug): Frame Busting in the Admin (closed: fixed)"&gt;#12293&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47440 (add_header X-Frame-Options) created</title>
      
        <dc:creator>sudoranger</dc:creator>

      <pubDate>Fri, 31 May 2019 01:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47440/1559266456134231</guid>
      <description>&lt;p&gt;
Hello.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Today, I came across an issue. I'm using Nginx webserver and this on my configuration.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
add_header X-Frame-Options DENY;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is the recommended setting to secure Nginx for click hijacking. More information can be found here &lt;a class="ext-link" href="https://www.keycdn.com/blog/x-frame-options"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.keycdn.com/blog/x-frame-options&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are three settings for X-Frame-Options:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
SAMEORIGIN: This setting will allow the page to be displayed in a frame on the same origin as the page itself.&lt;br /&gt;
DENY: This setting will prevent a page displaying in a frame or iframe.&lt;br /&gt;
ALLOW-FROM URI: This setting will allow a page to be displayed only on the specified origin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For your information, WordPress themes and plugins page:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Appearance &amp;gt; Themes &amp;gt; Add New
&lt;/li&gt;&lt;li&gt;Plugins &amp;gt; Add New
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
are currently using frames to pull the information from wordpress.org so this will end up showing "Connection Refused" unless I changed the setting to add_header X-Frame-Options SAMEORIGIN;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would like to request WordPress team to change this behavior to use other methods than frame to show this "external" web site in the administration page. This is a very bad experience in terms of UX and security-design unless you can convince me otherwise that denying x-frame-options isn't a big deal. In my normal nginx setup, I usually use DENY to improve my unwanted experience to the end users from malicious scripts.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4479 (`&lt;em&gt;` without a closing tag in `wp-admin/users.php`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 31 May 2019 01:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4479#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4479#comment:6/1559266253180857</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #docs by tellyworth. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/docs/p1559266251002900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47439 (wp-phpunit: go_to() does not unset current_screen) updated</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Fri, 31 May 2019 00:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47439#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47439#comment:1/1559263367555364</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47439.patch attached to Ticket #47439</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Fri, 31 May 2019 00:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47439/47439.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47439/47439.patch/1559263343438534</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47439 (wp-phpunit: go_to() does not unset current_screen) created</title>
      
        <dc:creator>mauteri</dc:creator>

      <pubDate>Fri, 31 May 2019 00:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47439/1559263276592055</guid>
      <description>&lt;p&gt;
&lt;code&gt;current_screen&lt;/code&gt; should be added to this array for unsetting: &lt;a class="ext-link" href="https://github.com/wp-phpunit/wp-phpunit/blob/master/includes/abstract-testcase.php#L710"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-phpunit/wp-phpunit/blob/master/includes/abstract-testcase.php#L710&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As of now, if you &lt;code&gt;set_current_screen&lt;/code&gt; (which is automatically done in &lt;code&gt;WP_Ajax_UnitTestCase&lt;/code&gt; to &lt;code&gt;set_current_screen( 'ajax' )&lt;/code&gt;) &lt;code&gt;is_admin()&lt;/code&gt; will be true when you tell your test, for example, &lt;code&gt;$this-&amp;gt;go_to( '/' );&lt;/code&gt; A test like this will fail:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;go_to( '/' ); // go to homepage
$this-&amp;gt;assertFalse( is_admin() ); // fails because is_admin() is true
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47423 (Docs: Added the `locale` field to description for insert_user_meta filter.) updated</title>
      
        <dc:creator>tmatsuur</dc:creator>

      <pubDate>Fri, 31 May 2019 00:06:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47423#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47423#comment:4/1559261180368012</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/47423#comment:2" title="Comment 2"&gt;desrosj&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think we need to add a &lt;code&gt;@since&lt;/code&gt; annotation because no parameters were added to the filter, just possible values within the &lt;code&gt;$meta&lt;/code&gt; array. I can change that when I commit.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks @desrosj &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In such cases, I did not know that &lt;code&gt;@ since&lt;/code&gt; is unnecessary. I want to be careful in the future.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>