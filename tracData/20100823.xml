<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Mon, 23 Aug 2010 23:58:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:12/1282607892000000</guid>
      <description>&lt;p&gt;
i'm personnaly using the following filter :
&lt;/p&gt;
&lt;p&gt;
'manage_' . screen . '_columns' ...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14678 (Custom headers wrong protocol if admin is ssl) created</title>
      
        <dc:creator>tino972</dc:creator>

      <pubDate>Mon, 23 Aug 2010 23:23:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14678/1282605800000000</guid>
      <description>&lt;p&gt;
If the admin is accessed through ssl (in my case, with FORCE_ADMIN_SSL), custom headers are accessed through https unconditionaly.
&lt;/p&gt;
&lt;p&gt;
Accessing the blog with regular http still has the header image accessed through https.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14677 (Use BASENAME as post_name map in Movable Type / TypePad import) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 22:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14677#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14677#comment:2/1282601679000000</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/changeset/279927"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/changeset/279927&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #11422 (Use BASENAME as post_name in MT import) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 22:08:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11422#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11422#comment:4/1282601300000000</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="ext-link" href="http://plugins.trac.wordpress.org/changeset/279921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/changeset/279921&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14677 (Use BASENAME as post_name map in Movable Type / TypePad import) updated</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Mon, 23 Aug 2010 22:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14677#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14677#comment:1/1282601119000000</guid>
      <description>&lt;p&gt;
see also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11422" title="#11422: enhancement: Use BASENAME as post_name in MT import (closed: fixed)"&gt;#11422&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>movabletype-importer.diff attached to Ticket #14677</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Mon, 23 Aug 2010 22:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14677/movabletype-importer.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14677/movabletype-importer.diff/1282601075000000</guid>
      <description>&lt;p&gt;
Map basename to post_name. Static strings instead of dynamic. Movable Type not MovableType.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14677 (Use BASENAME as post_name map in Movable Type / TypePad import) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Mon, 23 Aug 2010 22:03:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14677</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14677/1282601034000000</guid>
      <description>&lt;p&gt;
The current version of &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/movabletype-importer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;movabletype-importer&lt;/a&gt; does not map Movable Type / TypePad slugs to WordPress slugs (basename and post_name in respective vocabularies).
&lt;/p&gt;
&lt;p&gt;
The attached patch recognizes the BASELINE line and saves as the post object's post_name. I have also changed dynamic strings to static for speed and changed "MovableType" to "Movable Type" to match the brand.
&lt;/p&gt;
&lt;p&gt;
If committed this patch will better help transition post URLs between Movable Type and TypePad blogs and their new WordPress blog.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 21:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:39/1282600291000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15526" title="munge admin-table.js &amp;amp; minify jquery.query"&gt;[15526]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15526]: munge admin-table.js &amp; minify jquery.query</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 21:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15526/1282599865387230</guid>
      <description>&lt;p&gt;
munge admin-table.js &amp;amp; minify jquery.query
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 21:31:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:38/1282599105000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15525" title="Fix Recently Active plugins screen. See #14579"&gt;[15525]&lt;/a&gt;) Fix Recently Active plugins screen. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15525]: Fix Recently Active plugins screen. See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 21:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15525</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15525/1282599102521760</guid>
      <description>&lt;p&gt;
Fix Recently Active plugins screen. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>14672.2.diff attached to Ticket #14672</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 20:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14672/14672.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14672/14672.2.diff/1282595004000000</guid>
      <description>&lt;p&gt;
Drop WP_USE_MULTIPLE_DB
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14465 (Update Plugins Hangs while displaying 'updating') updated</title>
      
        <dc:creator>venik4</dc:creator>

      <pubDate>Mon, 23 Aug 2010 19:25:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14465#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14465#comment:2/1282591521000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Same problem here with 3.0.1 using both Firefox and IE from two different computers. The plugins actually update, but the update scree never refreshes. The same happens when upgrading or reinstalling wordpress: the upgrade completed, but the screen doesn't refresh. Tried cleaning browser cache and cookies, deleting "upgrade" folder, removing ".maintenance" file, and manually upgrading wordpress. No fix so far. The issue started after upgrade to 3.0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15524]: Use global_terms_enabled() instead of is_multisite() for term quick-editing</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 18:56:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15524</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15524/1282589799623403</guid>
      <description>&lt;p&gt;
Use global_terms_enabled() instead of is_multisite() for term quick-editing
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [15523]: Fix typo  There were multiple to-s </title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 23 Aug 2010 18:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15523</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15523/1282589726838888</guid>
      <description>&lt;p&gt;
Fix typo
&lt;/p&gt;
&lt;p&gt;
There were multiple to-s
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [15522]: I18n fixes  Do not leave more than %s in a translatable string and add ...</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 23 Aug 2010 18:53:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15522</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15522/1282589618504211</guid>
      <description>&lt;p&gt;
I18n fixes
&lt;/p&gt;
&lt;p&gt;
Do not leave more than %s in a translatable string and add a comment for translators what each placeholder means
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14672 (DB: ::constructor() sets charset, ::db_connect() does not) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 18:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14672#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14672#comment:2/1282589059000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14672 (DB: ::constructor() sets charset, ::db_connect() does not) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 18:18:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14672#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14672#comment:1/1282587491000000</guid>
      <description>&lt;p&gt;
Patch cleans things up a bit and merges init_charset() and set_charset() from hyperdb. I'd prefer to remove WP_USE_MULTIPLE_DB and encourage using hyperdb for such setups.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14672.diff attached to Ticket #14672</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 18:17:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14672/14672.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14672/14672.diff/1282587429000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14676 (Moderation email option is confusing, limited) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 23 Aug 2010 18:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14676#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14676#comment:1/1282587011000000</guid>
      <description>&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/6286" title="#6286: enhancement: Proposed changes to &amp;#34;E-mail me whenever&amp;#34; Discussion Options (new)"&gt;#6286&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7235" title="#7235: enhancement: Auto Deleting of attachments (closed: wontfix)"&gt;#7235&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I agree, if the post author does have comment moderation abilities and their email doesn't match the admin email, also send to them.
&lt;/p&gt;
&lt;p&gt;
Related: tying the admin email to an "owner" account might be an interesting solution to a handful of related UX tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14664 (add &lt;link rel="profile" ... /&gt; to wp_head()) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 23 Aug 2010 17:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14664#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14664#comment:7/1282585750000000</guid>
      <description>&lt;p&gt;
&lt;strong&gt;add_theme_support('profiles')&lt;/strong&gt; registers &lt;span class="underline"&gt;major wordpress feature&lt;/span&gt; like custom-header, custom-background, post-thumbnails, menus and more.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;add_action('wp_head','profile_rel_link',1)&lt;/strong&gt; addes simple &amp;lt;link&amp;gt; element to &amp;lt;head&amp;gt;.
&lt;/p&gt;
&lt;p&gt;
The use of theme support sounds good &lt;span class="underline"&gt;BUT&lt;/span&gt; in this case i prefer to use a simple head action. "rel-profiles" is not a wordpress feature, it a simple head element indicates that microformat's vocabulary is formally defined in the document.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14676 (Moderation email option is confusing, limited) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Mon, 23 Aug 2010 17:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14676/1282583183000000</guid>
      <description>&lt;p&gt;
The setting is "E-mail me whenever a comment is held for moderation" but in that sentence "me" is inaccurate; moderation emails are sent to admin_email.
&lt;/p&gt;
&lt;p&gt;
"Email the admin ($admin_email) whenever" would be accurate.
&lt;/p&gt;
&lt;p&gt;
Here's a related question: Why not send moderation emails to post authors?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14649 (Throw error when registering a Post Type longer than 20 chars) updated</title>
      
        <dc:creator>stephdau</dc:creator>

      <pubDate>Mon, 23 Aug 2010 16:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14649#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14649#comment:2/1282582550000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;register_post_type( 'a_really_long_post_type_namespace', ... );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The above will end up having "a_really_long_post_" only in the DB in post_type.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 23 Aug 2010 16:50:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:13/1282582210000000</guid>
      <description>&lt;p&gt;
Testing determined that passing &lt;code&gt;null&lt;/code&gt; to array_slice() 3rd parameter will get to the end of the array.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14671.3.diff attached to Ticket #14671</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 23 Aug 2010 16:48:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14671/14671.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14671/14671.3.diff/1282582128000000</guid>
      <description>&lt;p&gt;
Corrections to 14671.002.diff : PHPdoc for new function. Lowercase constant usage. Don't define max arguments, use null instead.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14662 (Posts and Terms APIs allow loops in hierarchical data) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Mon, 23 Aug 2010 16:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14662#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14662#comment:5/1282581936000000</guid>
      <description>&lt;p&gt;
PS: A PHP4 rewrite is straightforward.  We could use normal callbacks instead of ArrayAccess ones.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 23 Aug 2010 16:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:12/1282579994000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14671#comment:11" title="Comment 11"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;14671.002.diff&lt;/code&gt; checks internal PHP functions and keeps the default at 1 for those, but sets it to 100 for all others. Using a smaller subset of PHP functions would be faster, but might require some maintenance in the future, if we want to keep the ability to set internal PHP functions as callbacks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14671.2.diff attached to Ticket #14671</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 23 Aug 2010 16:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14671/14671.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14671/14671.2.diff/1282579566000000</guid>
      <description>&lt;p&gt;
Make default to pass all parameters and allowed_args limits.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>patch.patch attached to Ticket #14675</title>
      
        <dc:creator>johnpbloch</dc:creator>

      <pubDate>Mon, 23 Aug 2010 15:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14675/patch.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14675/patch.patch/1282578288000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14675 (Enhancement: Better Post Type Handling for Permalinks and Queries) created</title>
      
        <dc:creator>johnpbloch</dc:creator>

      <pubDate>Mon, 23 Aug 2010 15:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14675</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14675/1282578269000000</guid>
      <description>&lt;p&gt;
This is an enhancement to add better handling of post type in permalinks and WP_Query. This will fix a few deficiencies in WordPress' handling of these items.
&lt;/p&gt;
&lt;p&gt;
The first deficiency this addresses is that WordPress doesn't automatically handle multi-post queries for custom post types. For example, with a post type 'products', the permastruct is &lt;code&gt;'products/%products%'&lt;/code&gt;. If someone were to go to &lt;code&gt;http://example.com/products/&lt;/code&gt; they would find a 404 error, not a list of products. This enhancement adds a &lt;code&gt;%post_type%&lt;/code&gt; rewrite tag to WP_Query that gets added to all custom post types when they're registered.
&lt;/p&gt;
&lt;p&gt;
Second, this adds permalink support for all the normal rewrite tags for all post types.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 23 Aug 2010 15:41:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:11/1282578107000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;14671.002.diff&lt;/code&gt; checks internal PHP functions and keeps the default at 1 for those, but sets it to 100 for all others. Using a smaller subset of PHP functions would be faster, but might require some maintenance in the future, if we want to keep the ability to set internal PHP functions as callbacks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14671.002.diff attached to Ticket #14671</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 23 Aug 2010 15:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14671/14671.002.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14671/14671.002.diff/1282577983000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14674 (HR destroys HTML) created</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Mon, 23 Aug 2010 15:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14674</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14674/1282575795000000</guid>
      <description>&lt;p&gt;
if you add &amp;lt;hr /&amp;gt; to the post (via HTML editor, or via enhanced TinyMCE editor) followed by normal text id do not add the &amp;lt;p&amp;gt; for that paragraph, but add the finishing &amp;lt;/p&amp;gt;
&lt;/p&gt;
&lt;p&gt;
so it than looks like
&lt;/p&gt;
&lt;p&gt;
&amp;lt;p&amp;gt;some text&amp;lt;/p&amp;gt;
&amp;lt;hr&amp;gt;some other text&amp;lt;/p&amp;gt;
&lt;/p&gt;
&lt;p&gt;
it can be solved by adding extra line break after &amp;lt;hr&amp;gt; but after reediting the post, the linebreak disapears and must be added again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 23 Aug 2010 14:39:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:10/1282574370000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 23 Aug 2010 14:00:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:9/1282572050000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14671#comment:7" title="Comment 7"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Function A accepts 3 parameters with 3rd being optional.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
The programmer wishes to use this same function for two or more filters, but wants to specify different behavior when the 3rd parameter is set.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what &lt;code&gt;current_filter()&lt;/code&gt; is for. It's much more powerful than going on the number of parameters passed.
&lt;/p&gt;
&lt;p&gt;
We considered this, but thought that it was both an edge case and an instance of sloppy coding (why do that when we have a function that tells you exactly which hook is being run?)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@mark: re the php built-in functions I'd take the view that we replace trim and so forth with custom wrappers where necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think it's that much work to support internal PHP functions, either using the exhaustive method I provided, or just enumerating common use cases. There aren't that many that are ever used. Or, we could mark as deprecated the use of internal PHP functions, while still supporting them for a while.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13847 (WP increasing the memory above other server limit) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13847#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13847#comment:18/1282571462000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="ext-link" href="http://unit-tests.trac.wordpress.org/ticket/6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://unit-tests.trac.wordpress.org/ticket/6&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14654 (When WP_DEBUG, mysql socket error should be displayed) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14654#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14654#comment:1/1282570733000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14672" title="#14672: defect (bug): DB: ::constructor() sets charset, ::db_connect() does not (closed: fixed)"&gt;#14672&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14673 (Using edit_theme_options capability only for Theme options not possible) created</title>
      
        <dc:creator>davecpage</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14673</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14673/1282570717000000</guid>
      <description>&lt;p&gt;
An additional capability edit_theme_options was added back in April as per &lt;a class="ext-link" href="http://wpdevel.wordpress.com/2010/04/16/i-notice-a-lot-of-themes-passing-the-e/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;dev chat&lt;/a&gt; as many themes were using the capability edit_themes when registering their options pages. Unfortunately although this capability works fine with menus and the custom header &amp;amp; footer code you can't use it for generic theme options pages.
&lt;/p&gt;
&lt;p&gt;
If a theme registers it's options using edit_theme_options the options page will display correctly, but the page won't save unless the user also has the manage_options capability, which is fine for administrator level users as they have manage_options too, but not other level users who could have been given just edit_theme_options.
&lt;/p&gt;
&lt;p&gt;
I looked into changing line 30 of wp-admin/options.php from:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !current_user_can('manage_options') )
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !current_user_can('manage_options') &amp;amp;&amp;amp; !current_user_can('edit_theme_options') )
&lt;/pre&gt;&lt;p&gt;
which seems to work, but I'm not sure if that opens up any security issues.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14654.patch attached to Ticket #14654</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14654/14654.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14654/14654.patch/1282570661000000</guid>
      <description>&lt;p&gt;
Do Errors on first mysql_connect when WP_DEBUG is true
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5455 (Charset SQL Injection Vulnerability) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5455#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5455#comment:28/1282570367000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14672" title="#14672: defect (bug): DB: ::constructor() sets charset, ::db_connect() does not (closed: fixed)"&gt;#14672&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14672 (DB: ::constructor() sets charset, ::db_connect() does not) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14672</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14672/1282570341000000</guid>
      <description>&lt;p&gt;
I just ran over duplicated code in wpdb regarding making use of the mysql_connect function while looking into &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14654" title="#14654: enhancement: When WP_DEBUG, mysql socket error should be displayed (closed: fixed)"&gt;#14654&lt;/a&gt;. That smell lead me to the reconnigtion of an inconsistency between the default contructor of the class and the (undocumented) &lt;code&gt;db_connect()&lt;/code&gt; function:
&lt;/p&gt;
&lt;p&gt;
the constructor does make use of the blogs charset setting while connecting to the database, while db_connect() does not contain anything like that. This leaves db_connect() open to charset based sql injections. Basically &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10597" title="Use real escape in environments that support it. see #5455"&gt;[10597]&lt;/a&gt; as a fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5455" title="#5455: defect (bug): Charset SQL Injection Vulnerability (closed: worksforme)"&gt;#5455&lt;/a&gt; is missing for db access that is relying on db_connect() (Multisite?).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14655 (Malformed dashboard URL can cause infinite ajax recursion) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14655#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14655#comment:1/1282570290000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15521]: Some escaping</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15521</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15521/1282569951183292</guid>
      <description>&lt;p&gt;
Some escaping
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14664 (add &lt;link rel="profile" ... /&gt; to wp_head()) updated</title>
      
        <dc:creator>zeo</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14664#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14664#comment:6/1282569118000000</guid>
      <description>&lt;p&gt;
IMHO this isn't about OLD VS 2010 theme. It's basically HTML4 VS HTML5.
&lt;/p&gt;
&lt;p&gt;
HTML4 introduce profile attribute from HEAD. Then HTML5 drops profile attribute from HEAD and then it's suggested to add rel="profile" to LINK.
&lt;/p&gt;
&lt;p&gt;
Perhaps not to be added to default filters but as add_theme_support('profile_rel_link') or something similar to avoid multiple profile defined.
&lt;/p&gt;
&lt;p&gt;
Since twentyten is tagged with microformats this is currently the correct profile URI: &lt;code&gt;&amp;lt;link rel="profile" href="http://microformats.org/profile/specs http://microformats.org/profile/hatom" /&amp;gt;&lt;/code&gt;. And for "OLD" theme: &lt;code&gt;&amp;lt;head profile="http://microformats.org/profile/specs http://microformats.org/profile/hatom"&amp;gt;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14245 (Remove create_function from preg_replace_callback to improve memory usage) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14245#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14245#comment:3/1282569093000000</guid>
      <description>&lt;p&gt;
Memory Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13847" title="#13847: defect (bug): WP increasing the memory above other server limit (closed: fixed)"&gt;#13847&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13847 (WP increasing the memory above other server limit) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:10:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13847#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13847#comment:17/1282569052000000</guid>
      <description>&lt;p&gt;
Memory Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14245" title="#14245: defect (bug): Remove create_function from preg_replace_callback to improve memory usage (closed: duplicate)"&gt;#14245&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12315 ("Link URL" on uploaded images does not update when saving a post) updated</title>
      
        <dc:creator>blueajcooper</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12315#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12315#comment:7/1282568937000000</guid>
      <description>&lt;p&gt;
This issue is definitely alive and kicking. I'm going to have to follow some instructions from the wordpress forums to read the url I need from the description field instead.
&lt;/p&gt;
&lt;p&gt;
Just follow rogermh's instructions above to replicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14245 (Remove create_function from preg_replace_callback to improve memory usage) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14245#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14245#comment:2/1282568881000000</guid>
      <description>&lt;p&gt;
Just added a patch that solves the reported memory issue. Compared to Nacins suggestion it does not re-introduced an already deprecated function (!) nor does it change the existing function header of &lt;code&gt;wp_kses_split2()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14245.patch attached to Ticket #14245</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 13:05:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14245/14245.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14245/14245.patch/1282568720000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13847 (WP increasing the memory above other server limit) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 12:54:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13847#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13847#comment:16/1282568084000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13847#comment:15" title="Comment 15"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Isn't there a suhosin ini setting that allows to pull the max memory limit directly? I suspect the current patch ought to be changed in such a way that, when present, it gets used instead of a flat 256MB, along with a warning to the end user in a way or another where it's useful (i.e. upgrades and file uploads).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure, my first patch is &lt;em&gt;only&lt;/em&gt; adding a constant instead of using the magic numbers. So it address only the furthermost problem that stands in the way to enable a user to deal with the problem w/o modifying core-code.
&lt;/p&gt;
&lt;p&gt;
The standard PHP Memory Setting can be read by using the &lt;code&gt;ini_get()&lt;/code&gt; function (I assume that by proxy this will be gathering the same value suhosin is checking against) and if that set to the maximum available memory would certainly solve the problem but if so, there would be no need at all to use &lt;code&gt;ini_set()&lt;/code&gt; all over the place because it's then assumed that the server has been already configured.
&lt;/p&gt;
&lt;p&gt;
But wordpress is assuming that the server is not properly configured and therefore assumes it's the better admin by just setting this up high.
&lt;/p&gt;
&lt;p&gt;
As you can see it's not trivial to find the right solution so I started by removing that flaw that is solveable right away: reducing the magic numbers to a single constant.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14425" title="#14425: defect (bug): fetch_feed fatal memory error (closed: maybelater)"&gt;#14425&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14425 (fetch_feed fatal memory error) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 12:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14425#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14425#comment:4/1282568079000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13847" title="#13847: defect (bug): WP increasing the memory above other server limit (closed: fixed)"&gt;#13847&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14245 (Remove create_function from preg_replace_callback to improve memory usage) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 12:25:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14245#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14245#comment:1/1282566310000000</guid>
      <description>&lt;p&gt;
Maybe using a static function does the job as well and saving the global namespace function starting with subjective stuff like funky? Not that I like create_function that much, but well, it was in use anyway and it's for this callback only.
&lt;/p&gt;
&lt;p&gt;
Second patch looks being an upload in error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14664 (add &lt;link rel="profile" ... /&gt; to wp_head()) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Mon, 23 Aug 2010 12:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14664#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14664#comment:5/1282565932000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14664#comment:2" title="Comment 2"&gt;ramoonus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you tagged it for 3.1?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, 3.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14657 (Resync Boolean Type Case) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 23 Aug 2010 12:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14657#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14657#comment:2/1282565666000000</guid>
      <description>&lt;p&gt;
Well, to me they should be lowercase because of having to type them out a lot. The other reason is that language reserve words or keywords should always be lowercase to differentiate from other user defined terms.
&lt;/p&gt;
&lt;p&gt;
The argument is whether or not the language type lowercase usage should be used verses the language implementation of them actually being constants, albeit case-insensitive constants.
&lt;/p&gt;
&lt;p&gt;
The problem also is that if we switch over to using what is defined as constants, we'll have to use &lt;code&gt;NULL&lt;/code&gt; instead of &lt;code&gt;null&lt;/code&gt; as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Mon, 23 Aug 2010 11:25:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:8/1282562726000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14671#comment:7" title="Comment 7"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I guess I need to explain. The backwards compatibility I was describing had nothing to with passing more parameters than the function definition supports, but really had to do with passing less parameters than the function supports.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Function A accepts 3 parameters with 3rd being optional.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
The programmer wishes to use this same function for two or more filters, but wants to specify different behavior when the 3rd parameter is set.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I considered raising the same issue (I occasionally do this), but I then felt that the cost of myself adding an extra function to work around it was quite tiny. It's much tinier than me wasting my time needing to remember to pass ghat 3rd argument anyway...
&lt;/p&gt;
&lt;p&gt;
@mark: re the php built-in functions I'd take the view that we replace trim and so forth with custom wrappers where necessary. And then let WP complain or crash: doing so will make missing function args or extra passed args easier to track.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10825 (Flash Uploader Breaks with HTTP Authentication) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 11:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10825#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10825#comment:6/1282561683000000</guid>
      <description>&lt;p&gt;
Slightly Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14648" title="#14648: defect (bug): Flash Uploader security error in IDN domains (closed: wontfix)"&gt;#14648&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14648 (Flash Uploader security error in IDN domains) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 11:07:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14648#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14648#comment:1/1282561636000000</guid>
      <description>&lt;p&gt;
Is the 2.8.3 Blog where you get this working running on a IDN domain as well?
&lt;/p&gt;
&lt;p&gt;
Slightly Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10825" title="#10825: defect (bug): Flash Uploader Breaks with HTTP Authentication (closed: wontfix)"&gt;#10825&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9751 (Add notice for users running PHP 4) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 10:04:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9751#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9751#comment:23/1282557846000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14656" title="#14656: defect (bug): Better Error Message on Date/Time functionality (closed: wontfix)"&gt;#14656&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14656 (Better Error Message on Date/Time functionality) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 10:04:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14656#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14656#comment:1/1282557840000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.stackexchange.com/questions/566/i-get-the-php-date-time-library-is-not-supported-by-your-web-host-on-my-centos/579#579"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;As reported&lt;/a&gt;, upgrading to PHP 5.2 does remove the error message.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9751" title="#9751: task (blessed): Add notice for users running PHP 4 (closed: wontfix)"&gt;#9751&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14512 (Hook for comments_popup_link) closed</title>
      
        <dc:creator>dereksingko</dc:creator>

      <pubDate>Mon, 23 Aug 2010 09:19:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14512#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14512#comment:1/1282555185000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14649 (Throw error when registering a Post Type longer than 20 chars) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 09:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14649#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14649#comment:1/1282555095000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Are you adding the post type via the admin UI? If so, please provide the URL of the page in Admin where you do this.
&lt;/p&gt;
&lt;p&gt;
Even better please provide some simple steps on how to reproduce the problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14659 (Incorrect mime type served for some uploaded files) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 09:14:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14659#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14659#comment:2/1282554882000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since shortinit was new to 3.0 I assume that this is a multisite related issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14399 (get_term_children doesn't call clean_term_cache() if necessary) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 09:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14399#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14399#comment:4/1282554735000000</guid>
      <description>&lt;p&gt;
Using a function called "clean" to "build" something looks pretty akward - needless to say that from what I read here it might be that the live data structure is just called cache here for no apparent reason.
&lt;/p&gt;
&lt;p&gt;
So please fix in the docs at least.
&lt;/p&gt;
&lt;p&gt;
And btw, why doesn't the code example work? Looks pretty straight forward and valid to me.
&lt;/p&gt;
&lt;p&gt;
Miradev did you refer to some example code in the docs to create your example code? If so, providing more info about that location would be helpful as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14664 (add &lt;link rel="profile" ... /&gt; to wp_head()) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 09:05:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14664#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14664#comment:4/1282554335000000</guid>
      <description>&lt;p&gt;
Nice find!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 09:03:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:7/1282554230000000</guid>
      <description>&lt;p&gt;
Maybe some function to list menu and submenu pages so it's easier to gather what to remove. Just an idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14667 (Avoid name conflicts for 'make_clickable' when integrating WP with ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 08:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14667#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14667#comment:5/1282553919000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14667#comment:3" title="Comment 3"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I didn't misunderstand the request.
&lt;/p&gt;
&lt;p&gt;
I don't think we should be renaming all our functions to have a wp_ prefix which is the /only/ way to attempt to avoid this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm, the request was to make it a plugable function and not to rename all functions for having nicer names.
&lt;/p&gt;
&lt;p&gt;
And I really see no need to jump the gun on closing this ticket. First of all, I think it's a pretty valid request to make wordpress better integrateable with another very popular php board software. It think we should be more friendly here. I know tons of webmasters who want to combine blog and board on their sites and if some that simple change can make a difference, why not?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14657 (Resync Boolean Type Case) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Mon, 23 Aug 2010 08:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14657#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14657#comment:1/1282553530000000</guid>
      <description>&lt;p&gt;
From what I remember, the use of the constants &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; should be lowercase. Patch looks good in that sense to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10955 (Replace ThickBox) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Mon, 23 Aug 2010 08:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10955#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10955#comment:12/1282552600000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Version tracks the original report..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 23 Aug 2010 07:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:7/1282549659000000</guid>
      <description>&lt;p&gt;
I guess I need to explain. The backwards compatibility I was describing had nothing to with passing more parameters than the function definition supports, but really had to do with passing less parameters than the function supports.
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Function A accepts 3 parameters with 3rd being optional.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
The programmer wishes to use this same function for two or more filters, but wants to specify different behavior when the 3rd parameter is set.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Your patch, as it is now, will not allow for this specific use case. Believe me, I have seen people do this and had legitimate reasons for doing so.
&lt;/p&gt;
&lt;p&gt;
Now that I have answered your request, how about answering the rest of mine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 23 Aug 2010 06:15:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:6/1282544144000000</guid>
      <description>&lt;p&gt;
&amp;lt;blockquote&amp;gt;Removal of a feature will break backwards compatibility&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Re-read the ticket. You don't understand it.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;blockquote&amp;gt;If memory serves, there is huge harm in passing more arguments than needed to php's built-in functions.&amp;lt;/blockquote&amp;gt;
&lt;/p&gt;
&lt;p&gt;
That was the sort of gotcha I was looking for, but I think we can overcome it.
&lt;/p&gt;
&lt;p&gt;
We could keep the argument, but set the default number of args to one for built-in PHP functions.
&lt;/p&gt;
&lt;p&gt;
This increases peak memory usage by 55K, and uses between 1 and 1.5 ms to generate the initial list. Total time cost on my system, with 388 calls is 2.5 ms.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function is_internal_php_function( $function_name ) {
	global $php_internal_functions;
	if ( !isset( $php_internal_functions ) ) {
		$functions = get_defined_functions();
		$php_internal_functions = array_flip( $functions['internal'] );
	}
	return isset( $php_internal_functions[$function_name] );
}
&lt;/pre&gt;&lt;p&gt;
But only a very small subset of those internal PHP functions are ever used in WordPress filters. We might be able to just manually enumerate them, and set the &lt;code&gt;$accepted_args&lt;/code&gt; to 1 by default for those.
&lt;/p&gt;
&lt;p&gt;
WordPress itself only uses three PHP internal functions in filters:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
trim(), strip_tags(), and urldecode()
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can think of a few other useful ones (&lt;code&gt;intval()&lt;/code&gt;, for instance.
&lt;/p&gt;
&lt;p&gt;
In either case, we'd be keeping the optional argument, just choosing a more intuitive default, to remove the necessity for &lt;code&gt;10,2&lt;/code&gt; nonsense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14486 (Twenty Ten: Removed header image renders an empty img tag) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 23 Aug 2010 05:58:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14486#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14486#comment:2/1282543138000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15520" title="Check for header image before showing it, in Twenty Ten. props ..."&gt;[15520]&lt;/a&gt;) Check for header image before showing it, in Twenty Ten. props koopersmith, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14486" title="#14486: defect (bug): Twenty Ten: Removed header image renders an empty img tag (closed: fixed)"&gt;#14486&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15520]: Check for header image before showing it, in Twenty Ten. props ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 23 Aug 2010 05:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15520</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15520/1282543135738927</guid>
      <description>&lt;p&gt;
Check for header image before showing it, in Twenty Ten. props koopersmith, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14486" title="#14486: defect (bug): Twenty Ten: Removed header image renders an empty img tag (closed: fixed)"&gt;#14486&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10955 (Replace ThickBox) updated</title>
      
        <dc:creator>freddyware</dc:creator>

      <pubDate>Mon, 23 Aug 2010 03:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10955#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10955#comment:11/1282534742000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12285 (Migrate Link Categories management page to edit-tags.php) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Mon, 23 Aug 2010 02:48:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12285#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12285#comment:2/1282531709000000</guid>
      <description>&lt;p&gt;
It looks like scribu's massive patch addressed this when he added the default-list-tables. Is there any of the above work left to be done?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14666.diff attached to Ticket #14666</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 02:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14666/14666.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14666/14666.diff/1282529808000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 02:15:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:6/1282529724000000</guid>
      <description>&lt;p&gt;
Usage example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function remove_menu_test() {
	// Remove the entire Tools menu
	remove_menu_page('tools.php');
	// Remove the Categories submenu from Posts
	remove_submenu_page('edit.php', 'edit-tags.php?taxonomy=category');
}
add_action('admin_menu', 'remove_menu_test');
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 23 Aug 2010 02:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:5/1282529410000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
14666.diff introduces remove_menu_page() and remove_submenu_page().
&lt;/p&gt;
&lt;p&gt;
It also removes some repetitive docblock text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 23 Aug 2010 01:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:5/1282526130000000</guid>
      <description>&lt;p&gt;
Removal of a feature will break backwards compatibility and will affect a small percentage of plugin / theme developers. Deprecating the argument using one of the built-in deprecate functions should be used first and then the code should be removed at a future date.
&lt;/p&gt;
&lt;p&gt;
Besides the reasoning you have in the summary, why would you want to remove the functionality?
&lt;/p&gt;
&lt;p&gt;
Several key points of contention:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I don't think the removal of code is dependent of people who have never worked on the plugin system and most likely have no idea how it would affect those used to this feature you plan on removing. Honestly, I think the vote should be with those who have actually written a patch for the plugin system and have provided support in the past.
&lt;/li&gt;&lt;li&gt;Lets weight the pros and cons. What other reasons do you have for removing the feature?
&lt;/li&gt;&lt;li&gt;Saying a feature is useless, is a matter of opinion that is quite bluntly is useless. It is like saying something sucks. It is subjective, unproven and unprovable, and pointless. There are many features that are rarely used, like for example the blog-by-email. Lets remove that why don't we, oh wait that was tried and the few people that wanted it argued for keeping it.
&lt;/li&gt;&lt;li&gt;This code has been in WordPress since the plugin API has been extended back in 1.2 to 1.5. Why break compatibility now?
&lt;/li&gt;&lt;li&gt;Have you done any statistics on which fraction of public plugins use the feature? We can put the guess at around .01% to 1%.
&lt;/li&gt;&lt;li&gt;Does this really affect beginners? In what way? I suppose you've handled the support, in what way were they confused with the feature. Is it something that inline documentation or Codex level documentation can correct in the future?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 22 Aug 2010 21:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:4/1282511827000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is definitely one of the common first plugin gotchas.
&lt;/p&gt;
&lt;p&gt;
Sounds like a great fix.
&lt;/p&gt;
&lt;p&gt;
If there is an issue with php built-ins we could make the default behaviour be to pass an infinite number of args and preserve the current behaviour if a number was specified.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 22 Aug 2010 21:14:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:3/1282511648000000</guid>
      <description>&lt;p&gt;
If memory serbes, there is huge harm in passing more arguments than needed to php's built-in functions.
&lt;/p&gt;
&lt;pre class="wiki"&gt;addslahes('test', 'test'); // warning or fatal?
&lt;/pre&gt;&lt;p&gt;
Userland functions can accept additional args without issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 20:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:2/1282508250000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 22 Aug 2010 20:03:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671#comment:1/1282507424000000</guid>
      <description>&lt;p&gt;
Nacin just came over and said he also can't think of a reason that it wouldn't work.
&lt;/p&gt;
&lt;p&gt;
Uploaded patch isn't complete... we'd remove some more code that manages accepted args, but the patch makes it so that all the arguments are passed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14671.diff attached to Ticket #14671</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 22 Aug 2010 20:02:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14671/14671.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14671/14671.diff/1282507341000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14671 (Deprecate the "accepted args" argument in add_filter() and add_action()) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 22 Aug 2010 20:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14671</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14671/1282507217000000</guid>
      <description>&lt;p&gt;
There is no harm in passing additional arguments to action/hook callbacks. Why do we force developers to explicitly ask for additional arguments to be passed? It is a maximum, and it doesn't matter if the maximum is exceeded. We can just pass all the arguments, all the time. Callbacks can use them, or ignore them. &lt;code&gt;add_action()&lt;/code&gt; and &lt;code&gt;add_filter()&lt;/code&gt; can lose their 4th argument.
&lt;/p&gt;
&lt;p&gt;
Ran this by koopersmith and beaulebens, they couldn't find any reasons this would be a problem.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14667 (Avoid name conflicts for 'make_clickable' when integrating WP with ...) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sun, 22 Aug 2010 19:24:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14667#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14667#comment:4/1282505072000000</guid>
      <description>&lt;p&gt;
Reason #1 why you &lt;strong&gt;always&lt;/strong&gt; prefix/namespace functions in any application / library.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14670 (sunrise.php in single site installations) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 22 Aug 2010 19:17:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14670</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14670/1282504674000000</guid>
      <description>&lt;p&gt;
Let's make sunrise.php work regardless of is_multisite().
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14669 (get_categories returns only after page reload all cats) created</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Sun, 22 Aug 2010 18:21:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14669</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14669/1282501286000000</guid>
      <description>&lt;p&gt;
I am using in a plugin the following script:
&lt;/p&gt;
&lt;pre class="wiki"&gt;  //  check if default cat exists
  if ( !get_cat_ID('ImportFit') )
  {
    wp_create_category( 'ImportFit' );
  }
  $categories = get_categories(array('hide_empty' =&amp;gt; false));
&lt;/pre&gt;&lt;p&gt;
with a var_dump on $categories I can see, that the created category is returned only after one page reload. in the category view in the backend the created cat is visible.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14668 (Check for scheduled event to prevent duplicates) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 16:58:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14668#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14668#comment:1/1282496333000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree that it's a good idea to prevent multiple recurring events with the same callback to be scheduled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14639 (Posts in the Trash drag attachment pages down with them) updated</title>
      
        <dc:creator>markel</dc:creator>

      <pubDate>Sun, 22 Aug 2010 16:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14639#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14639#comment:3/1282493256000000</guid>
      <description>&lt;p&gt;
Point taken.
&lt;/p&gt;
&lt;p&gt;
I'll argue then instead that the permalink should also result in a 404 when the post has been permanently deleted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 22 Aug 2010 15:23:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:4/1282490584000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes please :-)
&lt;/p&gt;
&lt;p&gt;
Naming and arguments should match with the other admin menus functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14639 (Posts in the Trash drag attachment pages down with them) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 22 Aug 2010 15:18:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14639#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14639#comment:2/1282490323000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attachments inherit post status from the post they are attached too so they should behave as if they were no longer published which is what is happening here.
&lt;/p&gt;
&lt;p&gt;
Why would you expect otherwise?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14667 (Avoid name conflicts for 'make_clickable' when integrating WP with ...) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 22 Aug 2010 14:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14667#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14667#comment:3/1282488919000000</guid>
      <description>wontfix: &lt;p&gt;
I didn't misunderstand the request.
&lt;/p&gt;
&lt;p&gt;
I don't think we should be renaming all our functions to have a wp_ prefix which is the /only/ way to attempt to avoid this.
&lt;/p&gt;
&lt;p&gt;
Renaming individual functions for cases like this is just going to lead to a load of code bloat as we still need to provide a wrapper function with the old name for backward compatibility.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14653 (Log IP address un UserMeta when account is created) updated</title>
      
        <dc:creator>ipstenu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 14:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14653#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14653#comment:3/1282486546000000</guid>
      <description>&lt;p&gt;
Trolls and sock puppets.
&lt;/p&gt;
&lt;p&gt;
Spammers are one thing, but morons who like to intentionally be dicks, pardon me, are another. They're often people who try to make multiple accounts, all from the same IP, to intentionally cause mayhem and piss people off.  Being able to see where all the accounts were made from can help weed out the idiots.
&lt;/p&gt;
&lt;p&gt;
And I wouldn't think you need to monitor when the IP changes. That's already logged in comments so you can search that way very easily.  And yes, it helps me a lot :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14668 (Check for scheduled event to prevent duplicates) created</title>
      
        <dc:creator>markparolisi</dc:creator>

      <pubDate>Sun, 22 Aug 2010 13:45:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14668</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14668/1282484735000000</guid>
      <description>&lt;p&gt;
wp_schedule_event() checks if the interval (hourly, daily, etc) of the event is valid, but it does not check if the event is already scheduled.
A simple check of the cron array should return false if the event already exists.
This will prevent crippling DB queries resulting from endless duplication of scheduled events
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14667 (Avoid name conflicts for 'make_clickable' when integrating WP with ...) reopened</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 22 Aug 2010 13:03:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14667#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14667#comment:2/1282482185000000</guid>
      <description>&lt;p&gt;
Reopening, because I think you misunderstood the request.
&lt;/p&gt;
&lt;p&gt;
As I understand the question, he's merely pointing out that this function exists in multitudes of applications. And that its name ought to be prefixed, e.g. wp_make_clickable(), or the whole function ought to be be wrapped around a function_exists() condition, to avoid conflicts from occurring.
&lt;/p&gt;
&lt;p&gt;
Imo, it's reasonable to assume that any such function's signature would be the same as that of WP.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 11:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:11/1282476408000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
screen options still not showing up ! (it did in 3.0)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's because it's doing it wrong. If it was calling register_column_headers(), like it was supposed to, it would work (with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15519" title="replace $table with $wp_list_table. See #14651"&gt;r15519&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14667 (Avoid name conflicts for 'make_clickable' when integrating WP with ...) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 22 Aug 2010 11:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14667#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14667#comment:1/1282476275000000</guid>
      <description>wontfix: &lt;p&gt;
Pluggable functions are only really for authentication/authorisation functionality which this is not.
&lt;/p&gt;
&lt;p&gt;
Also in general it is likely that they will become filter/hook based in future rather than replaced by new functions as that is more the WordPress way and also allows for more than one authentication plugin to hook in.
&lt;/p&gt;
&lt;p&gt;
We would not make 'make_clickable' a pluggable function.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 11:22:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:10/1282476169000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15519" title="replace $table with $wp_list_table. See #14651"&gt;[15519]&lt;/a&gt;) replace $table with $wp_list_table. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14651" title="#14651: defect (bug): Call to undefined function get_hidden_columns() (closed: fixed)"&gt;#14651&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15519]: replace $table with $wp_list_table. See #14651</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 11:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15519</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15519/1282476166319429</guid>
      <description>&lt;p&gt;
replace $table with $wp_list_table. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14651" title="#14651: defect (bug): Call to undefined function get_hidden_columns() (closed: fixed)"&gt;#14651&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14665 (Make the 'more information' link for comment-keyboard-shortcut ...) updated</title>
      
        <dc:creator>qwertymaniac</dc:creator>

      <pubDate>Sun, 22 Aug 2010 08:49:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14665#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14665#comment:1/1282466984000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14667 (Avoid name conflicts for 'make_clickable' when integrating WP with ...) created</title>
      
        <dc:creator>RegisJesuit</dc:creator>

      <pubDate>Sun, 22 Aug 2010 05:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14667</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14667/1282455587000000</guid>
      <description>&lt;p&gt;
The function 'make_clickable' in wp-includes/formatting.php should be a pluggable function. When programming authentication plugins for other platforms (example: phpBB), 'make_clickable' is a common name between both and the names clash, causing a PHP error. Making it a pluggable function would eliminate this problem completely.
&lt;/p&gt;
&lt;p&gt;
In addition, it would be easier for plugin developers to redefine their own clickables.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 01:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:37/1282441836000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15518" title="use is_a() instead of is_object() in screen_meta(). See #14579"&gt;[15518]&lt;/a&gt;) use is_a() instead of is_object() in screen_meta(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15518]: use is_a() instead of is_object() in screen_meta(). See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 01:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15518</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15518/1282441834083209</guid>
      <description>&lt;p&gt;
use is_a() instead of is_object() in screen_meta(). See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Sun, 22 Aug 2010 01:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:9/1282441628000000</guid>
      <description>&lt;p&gt;
last test from svn
&lt;/p&gt;
&lt;p&gt;
bug : Call to undefined function get_hidden_columns() has disappeared
&lt;/p&gt;
&lt;p&gt;
but
&lt;/p&gt;
&lt;p&gt;
screen options still not showing up ! (it did in 3.0)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 01:39:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:8/1282441158000000</guid>
      <description>&lt;p&gt;
Not yet, but you can take a look in these files:
&lt;/p&gt;
&lt;p&gt;
wp-admin/includes/list-table.php
wp-admin/includes/default-list-tables.php
&lt;/p&gt;
&lt;p&gt;
and this ticket: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Sun, 22 Aug 2010 01:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:7/1282440339000000</guid>
      <description>&lt;p&gt;
@nacin, any doc on that new api (besides php code) ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13937 (Pass named arguments to add_meta_box()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 00:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13937#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13937#comment:9/1282436142000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 00:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:3/1282436102000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 22 Aug 2010 00:14:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:2/1282436063000000</guid>
      <description>&lt;p&gt;
I think remove_menu_item() might be confused with the 3.0 Menus. We should include admin in there. The whole list would look like this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add_admin_menu() - currently add_menu_page()
&lt;/li&gt;&lt;li&gt;add_admin_submenu() - currently add_menu_page()
&lt;/li&gt;&lt;li&gt;remove_admin_menu()
&lt;/li&gt;&lt;li&gt;remove_admin_submenu()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This would be a good opportunity to pass named arguments instead of a numeric list. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13937" title="#13937: enhancement: Pass named arguments to add_meta_box() (closed: wontfix)"&gt;#13937&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>