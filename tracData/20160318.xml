<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36274 (Youtube oEmbed handlers should be HTTPS) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 18 Mar 2016 23:37:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36274#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36274#comment:1/1458344226993603</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36274 (Youtube oEmbed handlers should be HTTPS) created</title>
      
        <dc:creator>tollmanz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 22:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36274</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36274/1458341954257125</guid>
      <description>&lt;p&gt;
All of the handlers for Youtube oEmbeds utilize HTTP URIs. The HTTP URIs redirect to HTTPS. The URIs should be hardcoded has HTTPS.
&lt;/p&gt;
&lt;p&gt;
This is beneficial for performance (i.e., removes a costly redirect) and security (i.e., mitigates a person in the middle opportunity).
&lt;/p&gt;
&lt;p&gt;
The URIs I am referring to are:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'#http://((m|www)\.)?youtube\.com/watch.*#i'          =&amp;gt; array( 'http://www.youtube.com/oembed',                             true  ),
'#https://((m|www)\.)?youtube\.com/watch.*#i'         =&amp;gt; array( 'http://www.youtube.com/oembed?scheme=https',                true  ),
'#http://((m|www)\.)?youtube\.com/playlist.*#i'       =&amp;gt; array( 'http://www.youtube.com/oembed',                             true  ),
'#https://((m|www)\.)?youtube\.com/playlist.*#i'      =&amp;gt; array( 'http://www.youtube.com/oembed?scheme=https',                true  ),
'#http://youtu\.be/.*#i'                              =&amp;gt; array( 'http://www.youtube.com/oembed',                             true  ),
'#https://youtu\.be/.*#i'                             =&amp;gt; array( 'http://www.youtube.com/oembed?scheme=https',                true  )
&lt;/pre&gt;&lt;p&gt;
Additionally, this is a great first patch ticket.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20299 (Preview changes on a published post makes all post meta "live") updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 18 Mar 2016 22:45:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20299#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20299#comment:58/1458341101498536</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20299#comment:57" title="Comment 57"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@adamsilverstein in regards to &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/11049" title="#11049: defect (bug): Page Preview does not autosave page template (accepted)"&gt;#11049&lt;/a&gt; and not being able to preview a change to a page template, will the scope here also include addressing the issue where changing the featured image actually makes it go live immediately (the opposite problem from page template)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this plugin plus some whitelisting would address this issue.
&lt;/p&gt;
&lt;p&gt;
Previews currently rely on an autosave revision to load their data, and since post meta like featured image is not revisioned it gets saved, then the stored value 'previewed'.
&lt;/p&gt;
&lt;p&gt;
All that should be required to fix this (after installing the plugin) is whitelisting &lt;code&gt;_thumbnail_id&lt;/code&gt; with the &lt;code&gt;wp_post_revision_meta_keys &lt;/code&gt; filter. The plugin already includes code to load the revisioned meta for previews, see &lt;a class="ext-link" href="https://github.com/adamsilverstein/wp-post-meta-revisions/blob/master/wp-post-meta-revisions.php#L38"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/adamsilverstein/wp-post-meta-revisions/blob/master/wp-post-meta-revisions.php#L38&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you have a chance, please give it a try: I will do more testing and refreshing of patches on my end soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Fri, 18 Mar 2016 22:39:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:29/1458340789463476</guid>
      <description>&lt;p&gt;
@westonruter @celloexpressions
&lt;/p&gt;
&lt;p&gt;
Yes! This is precisely what I was hinting at in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:7" title="Comment 7"&gt;my earlier comment&lt;/a&gt;. Theme authors should be able to define the size, width, height, and flexibility of the logo to the design specs. This is in line with other features, and provides the theme author with detail control to choose how a logo is incorporated most appropriately in the design.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Fri, 18 Mar 2016 22:33:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:28/1458340385830812</guid>
      <description>&lt;p&gt;
I don't see a reason why we shouldn't allow themes to specify it as suggested in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:25" title="Comment 25"&gt;25&lt;/a&gt; in addition to optionally define a custom image size.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 22:18:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:27/1458339518435061</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@celloexpressions so then really what you've identified is that the theme support feature for &lt;code&gt;custom-logo&lt;/code&gt; should have better alignment with the existing feature arguments for &lt;code&gt;custom-header&lt;/code&gt;? In Twenty Sixteen, the custom header support is added via:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_theme_support&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'custom-header'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'twentysixteen_custom_header_args'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'default-text-color'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$default_text_color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'width'&lt;/span&gt;                  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'height'&lt;/span&gt;                 &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'flex-height'&lt;/span&gt;            &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'wp-head-callback'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'twentysixteen_header_style'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So the &lt;code&gt;custom-header&lt;/code&gt; supports &lt;code&gt;flex-height&lt;/code&gt; and &lt;code&gt;flex-width&lt;/code&gt; arguments, as well as &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments. You're saying that these should be used for Custom Logo instead of adding a custom image size and referencing its name. I suppose the feature could allow the size to be defined via a &lt;code&gt;size&lt;/code&gt; argument as it is now, or the dimensions could be defined via attributes like &lt;code&gt;custom-header&lt;/code&gt; accepts.
&lt;/p&gt;
&lt;p&gt;
As for how custom logo relates to custom header, I'll defer to @obenland.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:45/1458333890056757</guid>
      <description>&lt;p&gt;
As discussed in Slack - thanks for taking time to explain @westonruter - either way has the same hinderance to a themer. If having the register option in sidebar means people have potentially more ease then I guess that should be the route. I still would love to see this become opt out at some point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34221 (Update dashicons for 4.5) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34221#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34221#comment:15/1458333761407072</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37037" title="Dashicons: Fix incorrect ID in SVG version of font.
See #34221.
"&gt;37037&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Dashicons: Fix incorrect ID in SVG version of font.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34221" title="#34221: task (blessed): Update dashicons for 4.5 (closed: fixed)"&gt;#34221&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37037]: Dashicons: Fix incorrect ID in SVG version of font.  See #34221. </title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:42:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37037</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37037/1458333760815133</guid>
      <description>&lt;p&gt;
Dashicons: Fix incorrect ID in SVG version of font.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34221" title="#34221: task (blessed): Update dashicons for 4.5 (closed: fixed)"&gt;#34221&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34221 (Update dashicons for 4.5) closed</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34221#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34221#comment:14/1458333133715688</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:26/1458333007777152</guid>
      <description>&lt;p&gt;
We definitely need to make a decision regarding the potential change (above) to how the &lt;code&gt;add_theme_support&lt;/code&gt; arguments work before the first RC.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:25/1458332848424967</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think the missing flex-width/height checks were an oversight, since we didn't have any places using it in core yet (but we wanted to provide that functionality in the control). This is definitely a place to use both flex width and flex height.
&lt;/p&gt;
&lt;p&gt;
That being said, I'm starting to think that the way logo size is defined with &lt;code&gt;add_theme_support()&lt;/code&gt; is problematic - by using a separately-defined image size. If we are going to support crop, wouldn't it be better to let the theme directly specify the desired width and height of the logo, and also the flex-height and flex-width arguments, in the add theme support arguments? For example,
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_theme_support( 'custom_logo', array(
     'width' =&amp;gt; 1200, // Suggested width, because flex_width.
     'height' =&amp;gt; 175, // Required height, because not flex_height.
     'flex_width' =&amp;gt; true,
     'flex_height' =&amp;gt; false,
) );
&lt;/pre&gt;&lt;p&gt;
Are there any benefits to defining logos as an image size that could end up with an arbitrary forced crop, instead of defining the arguments that get passed to the customizer control directly? With the above, the theme can basically say that it can accommodate images of any aspect ratio as long as either the height or the width is fixed at a size (one &lt;code&gt;flex_&lt;/code&gt; is true), images of any size (both &lt;code&gt;flex_&lt;/code&gt;s are true), or only a specific aspect ratio and size (both &lt;code&gt;flex_&lt;/code&gt;s false). This would also avoid creating an extra image size for every image uploaded to a site that isn't the logo.
&lt;/p&gt;
&lt;p&gt;
As an aside, I understood the reasoning for having a separate logo option in addition to header images and site icons was that it would be used specifically for traditional specifically-designed logos, not general images. Header images and site icons are more appropriate for things that could be cropped from another image, but if logos are intended to be able to operate the same way I really don't see why we would want to have a separate logos feature also (keeping in mind that it's not difficult for themes to add the appropriate image controls that they may need in the Customizer).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34221 (Update dashicons for 4.5) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34221#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34221#comment:13/1458332743348563</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37036" title="Dashicons: Update to the latest files.
Updates .dashicons-googleplus ..."&gt;37036&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Dashicons: Update to the latest files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Updates .dashicons-googleplus (f462) and adds three new icons, .dashicons-move (f545), .dashicons-laptop (f547), and .dashicons-paperclip (f546).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props liljimmi, melchoyce, empireoflight, aargh-a-knot.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34221" title="#34221: task (blessed): Update dashicons for 4.5 (closed: fixed)"&gt;#34221&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37036]: Dashicons: Update to the latest files.  Updates .dashicons-googleplus ...</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:25:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37036</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37036/1458332742764931</guid>
      <description>&lt;p&gt;
Dashicons: Update to the latest files.
&lt;/p&gt;
&lt;p&gt;
Updates .dashicons-googleplus (f462) and adds three new icons, .dashicons-move (f545), .dashicons-laptop (f547), and .dashicons-paperclip (f546).
&lt;/p&gt;
&lt;p&gt;
Props liljimmi, melchoyce, empireoflight, aargh-a-knot.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34221" title="#34221: task (blessed): Update dashicons for 4.5 (closed: fixed)"&gt;#34221&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35390 (image_constrain_size_for_editor() should not affect images generated ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35390#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35390#comment:20/1458332473949835</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1458332471000213"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35973 (Imagick HHVM compatibility) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35973#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35973#comment:26/1458332053723147</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1458332051000199"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34221 (Update dashicons for 4.5) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34221#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34221#comment:12/1458331894719529</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design-dashicons by liljimmi. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design-dashicons/p1458331892000050"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34945 (HTTPS website with HTTP images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34945#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34945#comment:62/1458331825188449</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1458331823000189"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:23/1458331690642537</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1458331689000184"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:22/1458331459816759</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37035" title="Media: fix erroneously inserting a rel attribute in ..."&gt;37035&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: fix erroneously inserting a rel attribute in &lt;code&gt;get_image_send_to_editor()&lt;/code&gt;. Reverts most of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34259" title="Media: In `get_image_send_to_editor()`, allow a custom value for ..."&gt;[34259]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34260" title="Media: In `wp_ajax_send_attachment_to_editor()`, the fallback logic ..."&gt;[34260]&lt;/a&gt; and adds a unit test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, azaozz.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36084" title="#36084: defect (bug): Link to media images now get a rel=attachment (closed: fixed)"&gt;#36084&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37035]: Media: fix erroneously inserting a rel attribute in ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:04:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37035</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37035/1458331459237309</guid>
      <description>&lt;p&gt;
Media: fix erroneously inserting a rel attribute in &lt;code&gt;get_image_send_to_editor()&lt;/code&gt;. Reverts most of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34259" title="Media: In `get_image_send_to_editor()`, allow a custom value for ..."&gt;[34259]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34260" title="Media: In `wp_ajax_send_attachment_to_editor()`, the fallback logic ..."&gt;[34260]&lt;/a&gt; and adds a unit test.
&lt;/p&gt;
&lt;p&gt;
Props joemcgill, azaozz.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36084" title="#36084: defect (bug): Link to media images now get a rel=attachment (closed: fixed)"&gt;#36084&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35874 (XMLRPC: Draft posts are published immediately when changed to ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 18 Mar 2016 20:01:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35874#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35874#comment:28/1458331292843858</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35874/35874.diff" title="Attachment '35874.diff' in Ticket #35874"&gt;35874.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35874/35874.diff" title="Download"&gt;​&lt;/a&gt; I refreshed and ready to go. I asked @DrewAPicture to clarify the inline comment verbiage for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:44/1458331120061659</guid>
      <description>&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35855#comment:41" title="Comment 41"&gt;41&lt;/a&gt; (with per-widget and per-sidebar opt-in) sounds like the best option to me for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:43/1458330929686296</guid>
      <description>&lt;p&gt;
@karmatosed thoughts on the two approaches for indicating sidebar support in a theme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:54:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:24/1458330882082294</guid>
      <description>&lt;p&gt;
@obenland @mor10 thanks! OK, please give &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36255/36255.5.diff" title="Attachment '36255.5.diff' in Ticket #36255"&gt;36255.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36255/36255.5.diff" title="Download"&gt;​&lt;/a&gt; a try. There are 3 different scenarios that can happen now:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Theme without defined image size: suggested size is the medium image width/height, with flex for custom ratios.
&lt;/li&gt;&lt;li&gt;Theme with defined image size without hard crop (allows width/height flex).
&lt;/li&gt;&lt;li&gt;Theme with defined image size with a hard crop (disallows width/height flex; keeps aspect ratio).
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Please let me know if if I'm missing anything else, and if the &lt;code&gt;medium&lt;/code&gt; size is a good fallback image size.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:34/1458330690969005</guid>
      <description>&lt;p&gt;
@azaozz
&lt;/p&gt;
&lt;p&gt;
Yeah, you're completely right about &lt;code&gt;test_wp_calculate_image_srcset_src_first()&lt;/code&gt;. I wrote it right after fixing the bug not thinking about the fact that most existing tests would fail and that fixing them results in testing this. And I also see the problems with using that shuffle now. Although I think it wouldn't cause random failure but more a false positive.
Anyways, it's a bad/useless test. Thanks for the feedback! I learned something :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36255.5.diff attached to Ticket #36255</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36255/36255.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36255/36255.5.diff/1458330647067718</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35874 (XMLRPC: Draft posts are published immediately when changed to ...) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35874#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35874#comment:27/1458330583003054</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35874.diff attached to Ticket #35874</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35874/35874.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35874/35874.diff/1458330536758628</guid>
      <description>&lt;p&gt;
Refreshed patch and made minor style adjustments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:33/1458330291235187</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37034" title="Responsive Images: the `src` of the image has to be first in the ..."&gt;37034&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Responsive Images: the &lt;code&gt;src&lt;/code&gt; of the image has to be first in the &lt;code&gt;srcset&lt;/code&gt;, because of a bug in iOS8. Update the unit tests to reflect the changes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jaspermdegroot, joemcgill, azaozz.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35030" title="#35030: defect (bug): Responsive Images: wrong source selected in iOS8 (closed: fixed)"&gt;#35030&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37034]: Responsive Images: the `src` of the image has to be first in the ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37034</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37034/1458330290363811</guid>
      <description>&lt;p&gt;
Responsive Images: the &lt;code&gt;src&lt;/code&gt; of the image has to be first in the &lt;code&gt;srcset&lt;/code&gt;, because of a bug in iOS8. Update the unit tests to reflect the changes.
&lt;/p&gt;
&lt;p&gt;
Props jaspermdegroot, joemcgill, azaozz.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35030" title="#35030: defect (bug): Responsive Images: wrong source selected in iOS8 (closed: fixed)"&gt;#35030&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36255.4.diff attached to Ticket #36255</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36255/36255.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36255/36255.4.diff/1458330124099071</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 19:14:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:32/1458328485718305</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1458328483000168"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 18:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:31/1458327412613693</guid>
      <description>&lt;p&gt;
Yep, the changes in 35030.4.patch look good, and array() + array() is better there than array_merge().
&lt;/p&gt;
&lt;p&gt;
However the changes to the tests need more.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Not sure what is being tested with &lt;code&gt;test_wp_calculate_image_srcset_src_first()&lt;/code&gt;. It is not needed to specifically test if the image src is first in srcset. That is being tested by all other srcset tests already.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Another big problem there is that some of the test data is randomized. This means it may introduce intermittent failures. As we are testing array order it may fail because of &lt;code&gt;shuffle()&lt;/code&gt;. That's really bad for testing :) If there are 10 cases, all need to be tested every time so we can see which one fails.
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;There is a lot of repetition in most of the srcset testing functions when generating comparison strings. It would be good to "DRY" that and include the functionality from the new &lt;code&gt;_src_first()&lt;/code&gt; helper. This is pretty much the same in 4 places:
&lt;pre class="wiki"&gt;$year_month = date('Y/m');
$uploads_dir = 'http://' . WP_TESTS_DOMAIN . '/wp-content/uploads/';
// Set up test cases for all expected size names.
$intermediates = array( 'medium', 'medium_large', 'large', 'full' );
foreach ( $_wp_additional_image_sizes as $name =&amp;gt; $additional_size ) {
	if ( ! $_wp_additional_image_sizes[$name]['crop'] || 0 === $_wp_additional_image_sizes[$name]['height'] ) {
		$intermediates[] = $name;
	}
}
$expected = "";
foreach ( $image_meta['sizes'] as $name =&amp;gt; $size ) {
	// Whitelist the sizes that should be included so we pick up 'medium_large' in 4.4.
	if ( in_array( $name, $intermediates ) ) {
		$expected .= $uploads_dir . $year_month . '/' . $size['file'] . ' ' . $size['width'] . 'w, ';
	}
}
$expected .= $uploads_dir . $image_meta['file'] . ' ' . $image_meta['width'] .'w';
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Of course, that is a test change so it can be added in RC too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10970 (Remove 'siteurl' setting from options-general.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 17:24:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10970#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10970#comment:35/1458321865899938</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by johnbillion. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1458321863001042"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34806 (Core Themes: Consider updating screenshots to 1200 x 900) closed</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 18 Mar 2016 17:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34806#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34806#comment:18/1458320442070349</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37033" title="Twenty Thirteen, Twenty Fourteen, Twenty Fifteen: Update screenshots ..."&gt;37033&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Thirteen, Twenty Fourteen, Twenty Fifteen: Update screenshots to 1200 x 900&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34806" title="#34806: defect (bug): Core Themes: Consider updating screenshots to 1200 x 900 (closed: fixed)"&gt;#34806&lt;/a&gt;&lt;br /&gt;
Props: iamtakashi&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37033]: Twenty Thirteen, Twenty Fourteen, Twenty Fifteen: Update screenshots ...</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 18 Mar 2016 17:00:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37033</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37033/1458320440868836</guid>
      <description>&lt;p&gt;
Twenty Thirteen, Twenty Fourteen, Twenty Fifteen: Update screenshots to 1200 x 900
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34806" title="#34806: defect (bug): Core Themes: Consider updating screenshots to 1200 x 900 (closed: fixed)"&gt;#34806&lt;/a&gt;
Props: iamtakashi
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 16:57:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:16/1458320254377394</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/33473" title="#33473: feature request: Shortcodes + Widgets + Nav Menus. Unified &amp;#34;component&amp;#34; API (aka Content ... (new)"&gt;#33473&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Fri, 18 Mar 2016 16:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:23/1458320102629080</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:22" title="Comment 22"&gt;obenland&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:20" title="Comment 20"&gt;westonruter&lt;/a&gt;:
Makes sense.
&lt;/p&gt;
&lt;p&gt;
Would it make sense to always offer the cropper, not just when there is an image size? If there is no image size the cropper could be fluid, without a pre-set ratio.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From my perspective, yes. Cropper has value, especially when the proportions are undefined. Provides room for experimentation in context.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34806 (Core Themes: Consider updating screenshots to 1200 x 900) updated</title>
      
        <dc:creator>iamtakashi</dc:creator>

      <pubDate>Fri, 18 Mar 2016 16:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34806#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34806#comment:17/1458318709943420</guid>
      <description>&lt;p&gt;
As @davidakennedy pointed out, I don't think we need to update older than Twenty Thirteen at this point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 16:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:30/1458317254586113</guid>
      <description>&lt;p&gt;
Patch 35030.4 looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:22/1458316571598072</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:20" title="Comment 20"&gt;westonruter&lt;/a&gt;:
Makes sense.
&lt;/p&gt;
&lt;p&gt;
Would it make sense to always offer the cropper, not just when there is an image size? If there is no image size the cropper could be fluid, without a pre-set ratio.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24152 (Use JSON as alternative to headers) updated</title>
      
        <dc:creator>DvanKooten</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24152#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24152#comment:27/1458316294651802</guid>
      <description>&lt;p&gt;
YES PLEASE.
&lt;/p&gt;
&lt;p&gt;
On top of all already mentioned benefits, this'll ditch the dependency on &lt;code&gt;get_file_data()&lt;/code&gt; to read the plugin/theme information making it much easier to get that same info from outside of WordPress. Gulp was mentioned already but there's loads more of course.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_get_theme()&lt;/code&gt; and &lt;code&gt;get_plugin_data()&lt;/code&gt; could take care of this in a backwards compatible way, so that can't be a reason not do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:21/1458315684919937</guid>
      <description>&lt;p&gt;
Point taken. I'm starting to lean towards reverting as well, except that I suspect &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32074" title="#32074: defect (bug): get_image_send_to_editor() improperly documented (closed: fixed)"&gt;#32074&lt;/a&gt; was reported because someone was attempting to pass a different string to it. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36084/36084.7.diff" title="Attachment '36084.7.diff' in Ticket #36084"&gt;36084.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36084/36084.7.diff" title="Download"&gt;​&lt;/a&gt; is identical to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36084/36084.6.diff" title="Attachment '36084.6.diff' in Ticket #36084"&gt;36084.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36084/36084.6.diff" title="Download"&gt;​&lt;/a&gt; but moves setting &lt;code&gt;$rel&lt;/code&gt; after &lt;code&gt;$url&lt;/code&gt; is set to avoid errors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36084.7.diff attached to Ticket #36084</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36084/36084.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36084/36084.7.diff/1458315472051754</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35654 (Make Gallery size default configurable) updated</title>
      
        <dc:creator>Stagger Lee</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:34:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35654#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35654#comment:2/1458315279409824</guid>
      <description>&lt;p&gt;
It works well. It inserts attribute inside shortcode, your image size from filter is used. Just this JS code responsible for select dropdown switch cannot work with this filter.
Image sizes miss "galleryDefaults" if I remember right.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19627 (Themes should be able to opt-in to a static front page) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19627#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19627#comment:71/1458314944635943</guid>
      <description>&lt;p&gt;
@poena I don't fully understand what mean by the text change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:29/1458314778081268</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35030/35030.4.patch" title="Attachment '35030.4.patch' in Ticket #35030"&gt;35030.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35030/35030.4.patch" title="Download"&gt;​&lt;/a&gt; fixes the failing tests after &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35030/35030.3.patch" title="Attachment '35030.3.patch' in Ticket #35030"&gt;35030.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35030/35030.3.patch" title="Download"&gt;​&lt;/a&gt; by replacing &lt;code&gt;_get_image_size_array_from_name()&lt;/code&gt; with &lt;code&gt;_get_image_size_array_from_meta()&lt;/code&gt;, passing the same meta that's being used to calculate &lt;code&gt;srcset&lt;/code&gt; attributes, instead of hard coding assumed image widths into our tests. This also cleans up a few formatting issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35030.4.patch attached to Ticket #35030</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 18 Mar 2016 15:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35030/35030.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35030/35030.4.patch/1458314619617279</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36273 (update_attached_file() on Windows will result in invalid image path ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 18 Mar 2016 13:17:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36273#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36273#comment:1/1458307057508770</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds like &lt;code&gt;update_attached_file()&lt;/code&gt; should pass &lt;code&gt;$file&lt;/code&gt; through &lt;code&gt;wp_normalize_path()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36272 (Adding media RSS module in wordpress feed) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 18 Mar 2016 13:13:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36272#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36272#comment:2/1458306817806365</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 12:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:28/1458305990081300</guid>
      <description>&lt;p&gt;
There is a problem with the &lt;code&gt;_get_image_size_array_from_name()&lt;/code&gt; helper function in the test. Working on a fix for that now and will submit an updated patch soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <author>brentjett@…</author>

      <pubDate>Fri, 18 Mar 2016 12:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:10/1458304138717783</guid>
      <description>&lt;p&gt;
Yes it would! :) Completely behind you on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 18 Mar 2016 11:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:322</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:322/1458302289914233</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37032" title="Docs: Document default `WP_Ajax_Response::add()` arguments as a hash ..."&gt;37032&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Document default &lt;code&gt;WP_Ajax_Response::add()&lt;/code&gt; arguments as a hash notation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds example output to the DocBlock description based on default argument values.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy for the initial patch.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37032]: Docs: Document default `WP_Ajax_Response::add()` arguments as a hash ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Fri, 18 Mar 2016 11:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37032</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37032/1458302288471415</guid>
      <description>&lt;p&gt;
Docs: Document default &lt;code&gt;WP_Ajax_Response::add()&lt;/code&gt; arguments as a hash notation.
&lt;/p&gt;
&lt;p&gt;
Adds example output to the DocBlock description based on default argument values.
&lt;/p&gt;
&lt;p&gt;
Props ramiy for the initial patch.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32246" title="#32246: task (blessed): Fix a variety of phpDoc issues (closed: fixed)"&gt;#32246&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36273 (update_attached_file() on Windows will result in invalid image path ...) created</title>
      
        <dc:creator>Whissi</dc:creator>

      <pubDate>Fri, 18 Mar 2016 10:48:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36273</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36273/1458298096543739</guid>
      <description>&lt;p&gt;
Calling &lt;em&gt;update_attached_file( $image-&amp;gt;ID, $file );&lt;/em&gt; on platforms like Windows can be really bad if &lt;em&gt;$file&lt;/em&gt; was normalized/validated using PHP's &lt;em&gt;realpath()&lt;/em&gt; function:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Image
&lt;/span&gt;&lt;span class="nv"&gt;$image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;preg_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'!^image/!'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;get_post_mime_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$image&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"Invalid image id (#%s)"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Easy case: Let's imagine we can get the path from meta data
&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_attached_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$image&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Well, in real world you could have created the path manually...
// The only important thing to know is, that we call "realpath()" which will
// convert any directory separator into the native directory separator:
// Linux will end with /dir/subdir/basename.jpg
// Windows will end with C:\Dir\Subdir\basename.jpg
&lt;/span&gt;&lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Again, this is just a demo, for real world cases see plugins like "Force Regenerate Thumbnails"
// But this is a valid API call:
&lt;/span&gt;&lt;span class="nx"&gt;update_attached_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$image&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// On Windows this will result in an update statement like
//   UPDATE `postmeta` SET `meta_value` = 'C:WWWSitesdemohtdocswordpresswp-contentuploads201603example.jpg' WHERE `post_id` = 123 AND `meta_key` = '_wp_attached_file'
// when $file was set to "C:\WWW\Sites\demo\htdocs\wordpress\wp-content\uploads\2016\03\example.jpg"
// Now imagine a plugin which is re-generating thumbnails :]
&lt;/span&gt;
&lt;span class="c1"&gt;// The problem is
//   $meta_value = wp_unslash($meta_value);
// in wp-includes/meta.php update_metadata().
&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When using &lt;em&gt;update_attached_file()&lt;/em&gt; we should make sure that &lt;em&gt;update_metadata()&lt;/em&gt; don't update the path value to an invalid value...
&lt;/p&gt;
&lt;p&gt;
PS: After you updated all image paths to an invalid value, the media library won't work anymore:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[18-Mar-2016 07:31:10 UTC] PHP Warning:  file_exists() expects parameter 1 to be a valid path, string given in C:\WWW\Sites\demo\htdocs\wordpress\wp-includes\media.php on line 3063
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>babbardel</dc:creator>

      <pubDate>Fri, 18 Mar 2016 10:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:21/1458296961123092</guid>
      <description>&lt;p&gt;
What would happen when a different file format is uploaded (eg. &lt;strong&gt;SVG&lt;/strong&gt; or &lt;strong&gt;GIF&lt;/strong&gt;)? Should this functionality be implemented by a specific list of formats (e.g. PNG, JPG)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35874 (XMLRPC: Draft posts are published immediately when changed to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 09:49:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35874#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35874#comment:26/1458294553854170</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by rachelbaker. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1458294552001004"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 09:38:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:27/1458293900053557</guid>
      <description>&lt;p&gt;
Replying to @azaozz, @johnbillion, and @joemcgill:
&lt;/p&gt;
&lt;p&gt;
Good point about page caching. So let's indeed not do something for iOS(8) specific.
&lt;/p&gt;
&lt;p&gt;
Just to put things in perspective: 1% of ~3.5 billion internet users is still 35 million people. It's a bigger market share than whole Windows Phone. These are probably mostly people that have an iThing that can't be upgraded to iOS9 so I think the number won't decrease very fast either. If it was about iOS8 users not benefiting from an enhancement it would be a different story, but here we are breaking something that used to be ok. So I really think we should fix this.
&lt;/p&gt;
&lt;p&gt;
In 35030.3.patch: Instead of using two arrays, prepend the src image to the &lt;code&gt;$sources&lt;/code&gt; array. Compared to @azaozz his patch I used the &lt;code&gt;+&lt;/code&gt; operator instead &lt;code&gt;array_merge()&lt;/code&gt; because of the difference in how duplicate keys are handled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31600-incr_decr_offset_type_check-2.diff attached to Ticket #31600</title>
      
        <dc:creator>jipmoors</dc:creator>

      <pubDate>Fri, 18 Mar 2016 09:07:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31600/31600-incr_decr_offset_type_check-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31600/31600-incr_decr_offset_type_check-2.diff/1458292071416321</guid>
      <description>&lt;p&gt;
Simplified the code.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #8994,​36272 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 18 Mar 2016 08:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=8994%2C36272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=8994%2C36272/1458291222995240</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to trac! Thanks for creating this ticket, but we're already tracking this in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/8994" title="#8994: feature request: Incorporate MediaRSS Plugin into core (new)"&gt;#8994&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
At the moment this is plugin territory and I recommend you a plugin like &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-feed-post-thumbnail/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-feed-post-thumbnail/&lt;/a&gt; (note: I'm the co-developer) to implement this.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>35030.3.patch attached to Ticket #35030</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Fri, 18 Mar 2016 08:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35030/35030.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35030/35030.3.patch/1458291136242769</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36272 (Adding media RSS module in wordpress feed) created</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Fri, 18 Mar 2016 08:39:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36272</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36272/1458290379773047</guid>
      <description>&lt;p&gt;
I had to add media tag manually for my client, because I was adding a featured image to the feed and I noticed that wordpress doesn't have
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/"&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
tag in its rss tag. I noticed this when I got error in my feed validation, so I had to add it using
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rss2_ns'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'custom_prefix_add_media_namespace'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;custom_prefix_add_media_namespace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"xmlns:media="&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;yahoo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;mrss&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="s2"&gt;"n"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I saw a ticket &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/35043" title="#35043: defect (bug): Images in RSS feed are broken (accepted)"&gt;#35043&lt;/a&gt; regarding images in the feed being broken, but I'm not sure if this refers to images in the content, or the featured image.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if it's needed for the images in the content, but it is if we want to add featured image as a media to the feed.
&lt;/p&gt;
&lt;p&gt;
Could we have a feed that will automatically add featured image to the main feed as a
&lt;code&gt;&amp;lt;media:thumbnail url="..." /&amp;gt;&lt;/code&gt;  if the image is set?
&lt;/p&gt;
&lt;p&gt;
There already &lt;a class="ext-link" href="http://matthewman.net/2012/10/09/wordpress-rss-custom-elements/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;are hacks out there&lt;/a&gt;, so why not make it official?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36271 (Trigger _doing_it_wrong if wp_send_json is used on a REST API request) created</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 18 Mar 2016 07:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36271</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36271/1458285858328285</guid>
      <description>&lt;p&gt;
We should heavily discourage users from using wp_send_json (&amp;amp; co.) on REST API requests. Two changes I want to make:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;If &lt;code&gt;_doing_it_wrong&lt;/code&gt; is triggered on a REST request, we should add a header ala the &lt;code&gt;_deprecated_function&lt;/code&gt; headers.
&lt;/li&gt;&lt;li&gt;If &lt;code&gt;wp_send_json&lt;/code&gt; is called on a REST request, we should trigger a &lt;code&gt;_doing_it_wrong&lt;/code&gt; and point people towards &lt;code&gt;WP_REST_Response&lt;/code&gt; and &lt;code&gt;WP_Error&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36268 (Too many syllables) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 18 Mar 2016 07:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36268#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36268#comment:4/1458285287528689</guid>
      <description>worksforme: &lt;p&gt;
Code is poetry, Spanish is complex, ticket is closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #20299 (Preview changes on a published post makes all post meta "live") updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 06:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20299#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20299#comment:57/1458281071586008</guid>
      <description>&lt;p&gt;
@adamsilverstein in regards to &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/11049" title="#11049: defect (bug): Page Preview does not autosave page template (accepted)"&gt;#11049&lt;/a&gt; and not being able to preview a change to a page template, will the scope here also include addressing the issue where changing the featured image actually makes it go live immediately (the opposite problem from page template)? I couldn't find a trac ticket about this, but as a user I would expect to be able to set a featured image and then click Preview, and then actually _preview_ that change without it going live for all. The solution seems as simple as changing the featured image behavior to populate a hidden &lt;code&gt;_thumbnail_id&lt;/code&gt; input so that it gets sent along with all of the other postmeta upon hitting Save or Preview. (In other words, the &lt;code&gt;wp_ajax_set_post_thumbnail()&lt;/code&gt; should be eliminated.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 05:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:9/1458279547845770</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33473#comment:8" title="Comment 8"&gt;brentjett@…&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The one major hurdle that I see in the WP_Widget API is that the main widget array keys the declared widget types off the class name which prevents any widget controller class from backing multiple types of widgets. This is the reason, I think, that nobody has every written a good "Build Your Own Widgets" type plugin. You can't base multiple widgets on a single class and simply pass each instance some configuration data. Now if that were able to change and the widget API could use some other unique identifier, the opportunities to create this type of view object dynamically from a UI explodes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wouldn't this be accomplished by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28216" title="#28216: defect (bug): Allow to register pre-instantiated widgets (closed: fixed)"&gt;#28216&lt;/a&gt;? It's something I'm planning to commit early in 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 05:26:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:20/1458278793302858</guid>
      <description>&lt;p&gt;
OK, I think I figured out the issue with cropping. When Site Icon was added (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16434" title="#16434: task (blessed): Give site admin ability to upload favicon in Settings, General (closed: fixed)"&gt;#16434&lt;/a&gt;) it defined a &lt;code&gt;CustomizeImageCropper&lt;/code&gt; which included (&lt;a href="https://core.trac.wordpress.org/changeset/33154#file9"&gt;r33154&lt;/a&gt;):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;cropDetails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dst_width&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;cropDetails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dst_height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This worked fine for an image with a hard crop, such as a square site icon, which is what this new cropper was added for. However, defining the destination width and height is not desired when &lt;code&gt;flex_width&lt;/code&gt; and &lt;code&gt;flex_height&lt;/code&gt; have been defined. So I believe all that is needing to be done is change the above to:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flex_width&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;cropDetails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dst_width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flex_height&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;cropDetails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dst_height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;control&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36255/36255.3.diff" title="Attachment '36255.3.diff' in Ticket #36255"&gt;36255.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36255/36255.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Aside: I don't see any &lt;code&gt;WP_Customize_Cropped_Image_Control&lt;/code&gt; instances in Core even making use of &lt;code&gt;flex_width&lt;/code&gt; or &lt;code&gt;flex_height&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@obenland @celloexpressions please review, as you both were the Site Icon developers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36255.3.diff attached to Ticket #36255</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 05:13:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36255/36255.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36255/36255.3.diff/1458278014854386</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 04:55:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:19/1458276905925419</guid>
      <description>&lt;p&gt;
In the &lt;code&gt;crop-image&lt;/code&gt; WP Admin Ajax request, it sends along parameters like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_customize:on
id:5291
context:custom_logo
cropDetails[x1]:300
cropDetails[y1]:549
cropDetails[x2]:1336
cropDetails[y2]:1356
cropDetails[width]:1036
cropDetails[height]:807
cropDetails[dst_width]:1200
cropDetails[dst_height]:175
action:crop-image
&lt;/pre&gt;&lt;p&gt;
It seems the problem is that the destination height/width (the defined image size) are overriding the width/height as defined by the user-selected crop region.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 04:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:18/1458276589104275</guid>
      <description>&lt;p&gt;
Another option would be to go ahead and use the cropped image control, but then to define the &lt;code&gt;$flex_width&lt;/code&gt; and &lt;code&gt;$flex_height&lt;/code&gt; args to correspond to the image size's &lt;code&gt;$crop&lt;/code&gt; value. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36255/36255.2-alt.diff" title="Attachment '36255.2-alt.diff' in Ticket #36255"&gt;36255.2-alt.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36255/36255.2-alt.diff" title="Download"&gt;​&lt;/a&gt;. There's a big problem here though: it seems that if you select a crop that doesn't match the aspect ratio defined in the image size, the cropped image will appear get stretched according to the &lt;code&gt;$width&lt;/code&gt; and &lt;code&gt;$height&lt;/code&gt; initially defined, not the actual width and height that the user selected during the crop.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36255.2-alt.diff attached to Ticket #36255</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 04:40:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36255/36255.2-alt.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36255/36255.2-alt.diff/1458276051998698</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 04:35:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:17/1458275725745289</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In some additional testing I found a key problem with [36255.0.diff] specifically in regards to Twenty Sixteen. It defines its logo image size as:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	add_image_size( 'twentysixteen-logo', 1200, 175 );
&lt;/pre&gt;&lt;p&gt;
Notice the very wide width but the absence of the &lt;code&gt;$crop&lt;/code&gt; argument. In other words, this image size is indicating the &lt;em&gt;maximum&lt;/em&gt; width and &lt;em&gt;maximum&lt;/em&gt; height that that the image can be. Nevertheless, in the patch it would present the fixed crop at that ratio, resulting in a very wide image crop, which likely would not be desired. I've improved this in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36255/36255.1.diff" title="Attachment '36255.1.diff' in Ticket #36255"&gt;36255.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36255/36255.1.diff" title="Download"&gt;​&lt;/a&gt; by taking into account the &lt;code&gt;$crop&lt;/code&gt; arg, opting to not use a cropped image control if this is not defined.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36255.1.diff attached to Ticket #36255</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 04:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36255/36255.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36255/36255.1.diff/1458275432972302</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29832 (Add filter to final output of gallery_shortcode) updated</title>
      
        <dc:creator>gnotaras</dc:creator>

      <pubDate>Fri, 18 Mar 2016 04:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29832#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29832#comment:7/1458273849445309</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29832#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;pre class="wiki"&gt;function filter_gallery_shortcode_output_29832( $gallery, $attr ) {
	remove_filter( 'post_gallery', __FUNCTION__, 10, 2 );
	$gallery = gallery_shortcode( $attr );
	add_filter( 'post_gallery', __FUNCTION__, 10, 2 );
	// Change the output
	// $gallery = ...
	return $gallery;
}
add_filter( 'post_gallery', 'filter_gallery_shortcode_output_29832', 10, 2 );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
@SergeyBiryukov that was a nice workaround for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36270" title="#36270: enhancement: Allow filtering of the final HTML output of media related shortcodes (new)"&gt;#36270&lt;/a&gt; !
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 03:53:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:42/1458273228662666</guid>
      <description>&lt;p&gt;
I'd like to commit the consensus approach tomorrow (Friday) so that I can publish a Make Core post with field guide notes on how to implement selective refresh for themes and widgets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 18 Mar 2016 03:20:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:16/1458271208946543</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36269 (WordPress 4.4.2 Gallery Ordering) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 18 Mar 2016 02:54:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36269#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36269#comment:1/1458269673494210</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @aj@isimplifyme.com, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Does it still happen with all plugins disabled and a default theme (Twenty Sixteen or Twenty Fifteen) activated?
&lt;/p&gt;
&lt;p&gt;
Could you provide the steps to reproduce the issue on a clean install?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35105 (Specifiy minimum node and npm version in package.json) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 18 Mar 2016 02:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35105#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35105#comment:9/1458269660240906</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35105/35105.2.diff" title="Attachment '35105.2.diff' in Ticket #35105"&gt;35105.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35105/35105.2.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Minimum NodeJS version is set as &lt;code&gt;4.2.1&lt;/code&gt; which was the first LTS version of the 4.x branch released per the LTS announcement &lt;a class="ext-link" href="https://nodejs.org/en/blog/community/node-v5/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;The latest NodeJS 4.x.x LTS version is installed using NVM for Travis CI (bbPress Travis CI &lt;a class="ext-link" href="https://travis-ci.org/ntwb/bbPress/jobs/116805325#L191"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;job example&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35105.2.diff attached to Ticket #35105</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 18 Mar 2016 02:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35105/35105.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35105/35105.2.diff/1458269411755013</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36270 (Allow filtering of the final HTML output of media related shortcodes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 18 Mar 2016 02:48:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36270#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36270#comment:1/1458269332627416</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14130" title="#14130: enhancement: Better gallery shortcode filter (closed: wontfix)"&gt;#14130&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20230" title="#20230: enhancement: Add new filter post_gallery_results to replace the core gallery ... (closed: duplicate)"&gt;#20230&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29832" title="#29832: enhancement: Add filter to final output of gallery_shortcode (closed: wontfix)"&gt;#29832&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 18 Mar 2016 02:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:26/1458269329879461</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35030#comment:25" title="Comment 25"&gt;azaozz&lt;/a&gt; &amp;amp; &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35030#comment:24" title="Comment 24"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
I agree about the page caching. If we do mess with the order, it will need to happen on the server side because anything we do in JS on the client side would cause a double download due to the preloader beginning to fetch the resource before JS is ready.
&lt;/p&gt;
&lt;p&gt;
Alternately, we could leave things as since iOS Safari 8 usage is below 1%, according to &lt;a class="ext-link" href="http://caniuse.com/usage-table"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;StatCounter GlobalStats&lt;/a&gt;. Anyone who needs to support older versions of iOS can add a polyfill for &lt;code&gt;srcset&lt;/code&gt;. It may not be worth the tradeoff of adding more overhead to a display filter to support such a small user base.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36270 (Allow filtering of the final HTML output of media related shortcodes) created</title>
      
        <dc:creator>gnotaras</dc:creator>

      <pubDate>Fri, 18 Mar 2016 02:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36270</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36270/1458268382978725</guid>
      <description>&lt;p&gt;
Sometimes it is required to further process the final HTML output of the media related shortcodes, eg &lt;code&gt;caption&lt;/code&gt; or &lt;code&gt;gallery&lt;/code&gt;, so as to add extra HTML code such as enclosing div or span elements or just modify the existing HTML code during run time.
&lt;/p&gt;
&lt;p&gt;
For instance the final output of &lt;code&gt;img_caption_shortcode&lt;/code&gt; could be filtered:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.4.2/src/wp-includes/media.php#L1537"&gt;https://core.trac.wordpress.org/browser/tags/4.4.2/src/wp-includes/media.php#L1537&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Passing all relevant image attachment data, like ID and size, would also be very useful.
&lt;/p&gt;
&lt;p&gt;
I hope that I am not missing anything but right now the only way to insert code inside the &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; block seems to be the complete override of the &lt;code&gt;img_caption_shortcode&lt;/code&gt; function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 02:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:25/1458266996098541</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35030#comment:24" title="Comment 24"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Right, keep forgetting about page caching. Can drop the &lt;code&gt;$is_iOS&lt;/code&gt; stuff and do that for all &lt;code&gt;srcset&lt;/code&gt; then, like the other patches. As far as I gather, all other browsers would still work properly. It's pity to have to mess with the order just to avoid an old iOS bug, but...
&lt;/p&gt;
&lt;p&gt;
That would mean some of the test will have to be corrected too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 18 Mar 2016 01:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:24/1458265733008022</guid>
      <description>&lt;p&gt;
We can't have server side code that changes based on the client, as it's not compatible with page caching. Is there anything we can do client-side?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <author>brentjett@…</author>

      <pubDate>Fri, 18 Mar 2016 00:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:8/1458261464942170</guid>
      <description>&lt;p&gt;
Thanks guys for jumping into this! I, of course, love the idea of having a unified "View" format that could be used anywhere, and perhaps even down the road encourage some of the page builder projects to adopt the format similar to the way Fields API is hoping to gain adoption in the custom fields plugins. As far as a public API to easily register a single "view thingy" and get both a widget and a shortcode, it really isn't a stretch to create a subclass of WP_Widget that subsumes the responsibilities of both kinds of objects, sets up the shortcake ui and all that. That'd be an easy way to begin playing with API vocabulary.
&lt;/p&gt;
&lt;p&gt;
The one major hurdle that I see in the WP_Widget API is that the main widget array keys the declared widget types off the class name which prevents any widget controller class from backing multiple types of widgets. This is the reason, I think, that nobody has every written a good "Build Your Own Widgets" type plugin. You can't base multiple widgets on a single class and simply pass each instance some configuration data. Now if that were able to change and the widget API could use some other unique identifier, the opportunities to create this type of view object dynamically from a UI explodes.
&lt;/p&gt;
&lt;p&gt;
Incidentally, I've also been working with the lead developer at Beaver Builder lately and talking about their module format. There are a few things about it that I like, a few things I don't (same lack of class reuse as WP_Widget), but it's a good reference if you're looking for alternate view/component/module/widget sorts of implementations. &lt;a class="ext-link" href="https://www.wpbeaverbuilder.com/custom-module-documentation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.wpbeaverbuilder.com/custom-module-documentation/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Love to talk about this some more and happy to get involved!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 00:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:20/1458260416832806</guid>
      <description>&lt;p&gt;
36084.6.diff is same as 36084.5.diff except it doesn't set &lt;code&gt;$rel&lt;/code&gt; to a string in wp_ajax_send_attachment_to_editor() before it's needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36084.6.diff attached to Ticket #36084</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 00:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36084/36084.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36084/36084.6.diff/1458260288921976</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 00:12:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:23/1458259945528209</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35030#comment:22" title="Comment 22"&gt;jaspermdegroot&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Yes, probably better to do it right in the loop. A simple &lt;code&gt;array_merge()&lt;/code&gt; would do it, no need of anything more? Also no need of specific tests for it in that case? It's like testing if array_merge() works.
&lt;/p&gt;
&lt;p&gt;
In 35030.2.patch: simplify 35030.1.patch and use array_merge() to ensure the src URL is first in the srcset only in iOS.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35030.2.patch attached to Ticket #35030</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 18 Mar 2016 00:06:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35030/35030.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35030/35030.2.patch/1458259575872851</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 17 Mar 2016 23:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:7/1458258394738511</guid>
      <description>&lt;p&gt;
The quickest way to an initial functioning feature plugin I think would be to introduce a &lt;code&gt;widget&lt;/code&gt; shortcode, and then to implement Shortcake support for this shortcode as a Post Element, bringing in the widget form into the Shortcake UI. Integrating the widget form would be vastly simplified once &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/33507" title="#33507: enhancement: Allow widget controls to be JS-driven (accepted)"&gt;#33507&lt;/a&gt; is implemented (via Fields API). The TinyMCE view for previewing this widget in the content could then be generated by an Ajax call to &lt;code&gt;the_widget()&lt;/code&gt;. A widget would need to indicate the stylesheet to be used in a TinyMCE view context. As for where the widget data is stored when it is used in a shortcode: there could be an &lt;code&gt;id&lt;/code&gt; attribute for the &lt;code&gt;widget&lt;/code&gt; shortcode that could point to a pre-existing widget to pull in. This would be handy for re-using a widget across multiple pages, similar to an image from the media library.
&lt;/p&gt;
&lt;p&gt;
The opposite integration, allowing a shortcode to be used as a widget, is described here: &lt;a class="ext-link" href="https://github.com/wp-shortcake/shortcake/issues/210"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wp-shortcake/shortcake/issues/210&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 17 Mar 2016 23:36:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:6/1458257799026706</guid>
      <description>&lt;p&gt;
Definitely some overlap, but I'd love to see Fields API considered for implementation in the fold here, as it would really bolster a truly unified schema for WP. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33473 (Shortcodes + Widgets + Nav Menus. Unified "component" API (aka Content ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 17 Mar 2016 23:34:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33473#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33473#comment:5/1458257664077369</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
I just opened an issue on the Shortcake project a few days ago to discuss this very thing. (In shortcake, content blocks are called “post elements”.) &lt;a class="ext-link" href="https://twitter.com/danielbachhuber/status/709502403729428481"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;According&lt;/a&gt; to @danielbachhuber, this is the “Grand Unification Theory of WordPress”.
&lt;/p&gt;
&lt;p&gt;
It should be trivial for a widget and shortcode to be used interchangeably as content blocks in post content or sidebars. the UI for manipulating a content block could be accessed via the Shortcake UI, a widget form, or Customizer control. The form UI should be managed by the Fields API. A content block could be inserted into post content via shortcode, into a sidebar via a widget, or into another context via a dedicated tag template (like &lt;code&gt;the_content_block()&lt;/code&gt; with a hat tip to &lt;code&gt;the_widget()&lt;/code&gt; and &lt;code&gt;do_shortcode()&lt;/code&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;h2 id="ContentBlocks:ShortcodesWidgets"&gt;&lt;a class="ext-link" href="https://github.com/wp-shortcake/shortcake/issues/585"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Content Blocks: Shortcodes &amp;amp; Widgets&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
I recall talking a conversation at some point with @mattheu regarding how shortcodes (as enhanced by shortcake) are a great candidate for the much-mused “content blocks”. I believe in this conversation it was also suggested that widgets (and nav menu items to a limited extent) are just another side of the same coin. I've been wanting to tackle a rewrite of widgets for awhile now to make them JS-driven (&lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/33507" title="#33507: enhancement: Allow widget controls to be JS-driven (accepted)"&gt;#33507&lt;/a&gt;). This now has a dependency on adding JSON schema information to widgets to allow their PHP-serialized instance data to be reliably represented as JSON (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35574" title="#35574: enhancement: Add REST API JSON schema information to WP_Widget (new)"&gt;#35574&lt;/a&gt;), and this in-turn now seems to have a dependency on the Fields API which can be used to specify the schema and also dynamically build the form control via JS.
&lt;/p&gt;
&lt;p&gt;
All of this to say, and forgive me if this all been hashed out previously, to me it seems that the Shortcake project has a lot of overlap with Widgets and the Fields API. Shortcodes could even be implemented as widgets, where the shortcode name is an alias for the widget type (class or &lt;code&gt;id_base&lt;/code&gt;), and the shortcode attributes can be passed in directly to &lt;code&gt;the_widget&lt;/code&gt; as instance data.
&lt;/p&gt;
&lt;p&gt;
I wanted to open an issue to start a conversation and dump some ideas I've had for awhile, if at least to direct me to where I can join an existing conversation.
&lt;/p&gt;
&lt;p&gt;
Some related Trac tickets:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/33507" title="#33507: enhancement: Allow widget controls to be JS-driven (accepted)"&gt;#33507&lt;/a&gt;: Allow widget controls to be JS-driven
&lt;/li&gt;&lt;li&gt;&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35574" title="#35574: enhancement: Add REST API JSON schema information to WP_Widget (new)"&gt;#35574&lt;/a&gt;: Add REST API JSON schema information to WP_Widget
&lt;/li&gt;&lt;li&gt;&lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/28580" title="#28580: enhancement: Speed up customizer by lazy-loading panels/sections/controls and ... (assigned)"&gt;#28580&lt;/a&gt;: Speed up customizer by lazy-loading controls and settings as needed
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://make.wordpress.org/design/2013/08/08/proposal-improving-the-content-editing-experience/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/design/2013/08/08/proposal-improving-the-content-editing-experience/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wptavern.com/revamping-the-content-creation-experience-in-wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wptavern.com/revamping-the-content-creation-experience-in-wordpress&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21602 (redirect_canonical can lead to infinite loop on index navigation if ...) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 17 Mar 2016 23:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21602#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21602#comment:27/1458256951000231</guid>
      <description>&lt;p&gt;
Okay, so I spent a good chunk of time going over this one. It seems to me that we either need to flesh out the &lt;code&gt;$compare_redirect&lt;/code&gt; and &lt;code&gt;$compare_original&lt;/code&gt; variables quite a bit and use them for all comparisons, or we need to make &lt;code&gt;$redirect_url&lt;/code&gt; and &lt;code&gt;$requested_url&lt;/code&gt; into something that we can compare (in this case with lowercase host names).
&lt;/p&gt;
&lt;p&gt;
I'm with Dion on this. It doesn't seem like it makes sense to flesh out the compare variables, since what we really care about are the actual urls. I ran a bunch of tests, and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21602/21602.2.diff" title="Attachment '21602.2.diff' in Ticket #21602"&gt;21602.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21602/21602.2.diff" title="Download"&gt;​&lt;/a&gt; works really well for me. I'm in favor of moving forward with that one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 17 Mar 2016 22:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:15/1458253667507224</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Thu, 17 Mar 2016 22:17:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:14/1458253075208841</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:13" title="Comment 13"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm convinced it is better to have this than to not have it, so I'm proposing commit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Second'd.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 17 Mar 2016 22:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:13/1458252654745523</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm convinced it is better to have this than to not have it, so I'm proposing commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Thu, 17 Mar 2016 21:46:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:22/1458251197070504</guid>
      <description>&lt;p&gt;
@azaozz
&lt;/p&gt;
&lt;p&gt;
You mean after the filter so we don't have to preserve the keys anymore? That's also an option.
Only thing to keep in mind is that we have to find the src image in the &lt;code&gt;$sources&lt;/code&gt; array by its URL. The width from &lt;code&gt;$size_array&lt;/code&gt; doesn't match with the image width used as key in &lt;code&gt;$sources&lt;/code&gt; when an image is constrained to the content width.
&lt;/p&gt;
&lt;p&gt;
In my patch I added &lt;code&gt;$is_src&lt;/code&gt; so we only check once if current image is the src image. I suggest we keep that part to improve performance, even if we don't need that variable anymore for to fix this issue.
&lt;/p&gt;
&lt;p&gt;
I guess we don't have to make any changes in existing tests if we only change the array order for iOS. The test that I added for this ticket could be updated so it sets global &lt;code&gt;$is_iphone&lt;/code&gt; (includes iPads) to &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35022 (WP allows Unicode 0x00a0 spaces in editor but shortcode parser can't ...) updated</title>
      
        <dc:creator>steevithak</dc:creator>

      <pubDate>Thu, 17 Mar 2016 21:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35022#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35022#comment:17/1458250645253217</guid>
      <description>&lt;p&gt;
Ok, first attempt at a patch is uploaded. To fix the parsing of shortcodes with Unicode non-breaking spaces, I modified the regex currently in use by replacing the list of ASCII whitespace chars (\x00-\x20) with the \s whitespace match and then converting the regex to Unicode mode by adding the 'u' modifier. In theory this means any legal white space character ASCII or Unicode should now work.
&lt;/p&gt;
&lt;p&gt;
To fix the problem with corrupted quote characters that causes the first shortcode attribute to be dropped, I add a work around in which the Unicode quote entity values are replaced with conventional ASCII quote chars prior to running the shortcode attribute parser. This allowed a simple one-line fix that doesn't require messing with the complex attribute parsing regex. The downside is that this is really just a work-around because I don't know where in WP the quote characters are being corrupted. This one-line change could be reverted later if someone figures out the real source of this problem.
&lt;/p&gt;
&lt;p&gt;
Dislaimer: this works for me but hasn't been tested extensively. Hopefully some core developers can take a look and make sure it doesn't break anything. @chriscct7
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35022.patch attached to Ticket #35022</title>
      
        <dc:creator>steevithak</dc:creator>

      <pubDate>Thu, 17 Mar 2016 21:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35022/35022.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35022/35022.patch/1458250010070326</guid>
      <description>&lt;p&gt;
Fix parsing of shortcodes that contain Unicode non-breaking spaces or Unicode quotes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 17 Mar 2016 21:12:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:12/1458249170235818</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:11" title="Comment 11"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@mor10 Can you give &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36255/36255.0.diff" title="Attachment '36255.0.diff' in Ticket #36255"&gt;36255.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36255/36255.0.diff" title="Download"&gt;​&lt;/a&gt; a try, both with a custom-logo specifying an image size and not specifying an image size? If an image size is specified for the custom logo, you should see the crop dialog appear if the aspect ratio isn't correct. If there is no image size specified, then the &lt;code&gt;full&lt;/code&gt; size should be used in the theme instead (without a crop step).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Tested, and works as you describe it. This alleviates the immediate problem in a clean way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Mar 2016 20:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:21/1458247928542433</guid>
      <description>&lt;p&gt;
How about we do that only for iOS and "pluck" that URL out of the array after the loop and unshift? Will make a patch this afternoon. The tests may have to be updated too to reflect the different array ordering.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35022 (WP allows Unicode 0x00a0 spaces in editor but shortcode parser can't ...) updated</title>
      
        <dc:creator>steevithak</dc:creator>

      <pubDate>Thu, 17 Mar 2016 20:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35022#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35022#comment:16/1458247464610371</guid>
      <description>&lt;p&gt;
Great, this just got more complicated. I found the problem causing the mis-parsing of the first attribute following a shortcode with a non-breaking space (the problem @boonebgorges refers to in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35022#comment:3" title="Comment 3"&gt;comment:3&lt;/a&gt;). It looks like some other part of Wordpress (not shortcodes.php) is unable to identify the shortcodes as shortcodes, so it's doing some sort conversion of quote characters into fancy Unicode quote characters. So instead of [shortcode foo="1,2,3"], it gets corrupted into [shortcode foo=”1,2,3″]. Once that happens, the regexes in shortcodes.php mis-parse the parameters list in a way that causes at least the first one to be lost. Even with code added in shortcodes.php to remove the non-breaking space within the shortcode, it's still broken because of the quotes. I don't know where in WP the quote-mangling code might be found, so the best I can think of is to modify the shortcode parser to handle Unicode as well as ASCII quote characters. Any other ideas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 17 Mar 2016 20:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:11/1458245125156060</guid>
      <description>&lt;p&gt;
@mor10 Can you give &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36255/36255.0.diff" title="Attachment '36255.0.diff' in Ticket #36255"&gt;36255.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36255/36255.0.diff" title="Download"&gt;​&lt;/a&gt; a try, both with a custom-logo specifying an image size and not specifying an image size? If an image size is specified for the custom logo, you should see the crop dialog appear if the aspect ratio isn't correct. If there is no image size specified, then the &lt;code&gt;full&lt;/code&gt; size should be used in the theme instead (without a crop step).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 17 Mar 2016 19:59:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:41/1458244764331246</guid>
      <description>&lt;p&gt;
There is a certain elegance to letting the theme opt-in be an argument on &lt;code&gt;register_sidebar()&lt;/code&gt; as it would be more closely aligned with how a &lt;code&gt;WP_Widget&lt;/code&gt; is proposed to be defined with support:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;  class WP_Widget_Pages extends WP_Widget {
        public function __construct() {
                $widget_ops = array(
                        'classname' =&amp;gt; 'widget_pages',
                        'description' =&amp;gt; __( 'A list of your site&amp;amp;#8217;s Pages.' ),
&lt;span class="gi"&gt;+                       'customize_selective_refresh' =&amp;gt; true,
&lt;/span&gt;                );
                parent::__construct( 'pages', __('Pages'), $widget_ops );
        }
  }
...
  register_sidebar( array(
        'name' =&amp;gt; __( 'Widget Area', 'twentyfifteen' ),
        'id' =&amp;gt; 'sidebar-1',
        'description' =&amp;gt; __( 'Add widgets here to appear in your sidebar.', 'twentyfifteen' ),
        'before_widget' =&amp;gt; '&amp;lt;aside id="%1$s" class="widget %2$s"&amp;gt;',
        'after_widget' =&amp;gt; '&amp;lt;/aside&amp;gt;',
        'before_title' =&amp;gt; '&amp;lt;h2 class="widget-title"&amp;gt;',
        'after_title' =&amp;gt; '&amp;lt;/h2&amp;gt;',
&lt;span class="gi"&gt;+       'customize_selective_refresh' =&amp;gt; true,
&lt;/span&gt;  ) );
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
So there is this option using &lt;code&gt;register_sidebar()&lt;/code&gt;, and then the option for using &lt;code&gt;add_theme_support()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_theme_support( 'customize-selective-refresh-widgets' );
&lt;/pre&gt;&lt;p&gt;
Although, the identifier &lt;code&gt;customize-selective-refresh-widgets&lt;/code&gt; vs &lt;code&gt;customize_selective_refresh&lt;/code&gt; isn't set in stone either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35647 (API index should include home URL) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 17 Mar 2016 19:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35647#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35647#comment:14/1458242159907491</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37031" title="REST API: Add `home_url` to API index to avoid confusion with ..."&gt;37031&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Add &lt;code&gt;home_url&lt;/code&gt; to API index to avoid confusion with &lt;code&gt;site_url&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Confusion abound, the API index is the generic term &lt;code&gt;url&lt;/code&gt; to display the &lt;code&gt;site_url&lt;/code&gt;. New &lt;code&gt;home&lt;/code&gt; key will display the &lt;code&gt;home_url&lt;/code&gt; in the index as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35647" title="#35647: defect (bug): API index should include home URL (closed: fixed)"&gt;#35647&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37031]: REST API: Add `home_url` to API index to avoid confusion with ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 17 Mar 2016 19:15:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37031</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37031/1458242157830114</guid>
      <description>&lt;p&gt;
REST API: Add &lt;code&gt;home_url&lt;/code&gt; to API index to avoid confusion with &lt;code&gt;site_url&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Confusion abound, the API index is the generic term &lt;code&gt;url&lt;/code&gt; to display the &lt;code&gt;site_url&lt;/code&gt;. New &lt;code&gt;home&lt;/code&gt; key will display the &lt;code&gt;home_url&lt;/code&gt; in the index as well.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35647" title="#35647: defect (bug): API index should include home URL (closed: fixed)"&gt;#35647&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>MH Themes</dc:creator>

      <pubDate>Thu, 17 Mar 2016 19:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:40/1458241468714345</guid>
      <description>&lt;p&gt;
I think making it opt-out (at least in case of WP 4.5) is a no-go and would cause quite a mess as this will potentially break thousands of themes and possibly many theme authors won't have this on their radar at the moment and implementing also takes time. If this is being considered, then it would probably make sense to at least wait until 4.6 and ensure that this is extensively announced (and educated) so that theme developers have time to dig into this and make necessary changes.
&lt;/p&gt;
&lt;p&gt;
Especially in case of widgets this can have quite an impact. Widgets can basically do anything and there are lots of scenarios where widgets won't be compatible anymore out of the box. I think this is different to the previous nav menus implementation, as widgets can be much more complex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>ashiquzzaman</dc:creator>

      <pubDate>Thu, 17 Mar 2016 18:14:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:10/1458238456263941</guid>
      <description>&lt;p&gt;
I think it'd be better if there's an optional extra crop option available for users, that way they can either simply upload and use as it is without cropping or they can choose to crop the photo if they wish to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 17 Mar 2016 18:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:39/1458238334362758</guid>
      <description>&lt;p&gt;
It could actually work to do selective refresh opt-in on a per-sidebar level. For example, if a theme with multiple sidebars can easily support selective refresh for one, but needs more work for another, they could add support just for the one sidebar for now.
&lt;/p&gt;
&lt;p&gt;
I almost lean towards making it opt-out and making a big push to educate theme developers about how to address any issues, like with nav menus. There were some issues there, as there will be here, but I'm concerned about getting adequate adoption unless there's some aspect of forcing themes to adjust. There are plenty of reasons not to do that as well, though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 17 Mar 2016 17:46:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:9/1458236809131452</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:8" title="Comment 8"&gt;TimothyBlynJacobs&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Presenting a user with a crop control for a logo doesn't make any sense. Header images can be cropped because they are images, not graphic design elements. What would a user be expected to do when presented with a crop image control for their logo? Cut their logo in half?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You are using a narrow definition of the word "logo". Yes, in a case where a user has a custom properly rendered logo, cropping it would make no sense. In the wild, many users will not have a file of that type. Instead they will have an image or graphic or part of either that they want to use as a logo. In those cases, a cropping feature is important.
&lt;/p&gt;
&lt;p&gt;
Observing how people use existing logo plugins and the header image function, I think this is vital. Making the assumption that people have custom logos is not realistic imo. We need to provide workable options for the average user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 17 Mar 2016 17:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:8/1458236346733779</guid>
      <description>&lt;p&gt;
Presenting a user with a crop control for a logo doesn't make any sense. Header images can be cropped because they are images, not graphic design elements. What would a user be expected to do when presented with a crop image control for their logo? Cut their logo in half?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 17 Mar 2016 17:36:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:7/1458236186434440</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36255#comment:2" title="Comment 2"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
There are a ton of examples of sites and solutions that require a crop for a logo to be displayed, most prominently Twitter and Facebook, both of which crop a logo to a square. IMO the requirement that the feature must allow the user to upload a logo image of any proportion is an unreasonable constraint for theme designers and developers. A logo can be incorporated in a theme in many different ways, and a large number of those ways would require some sort of proportion restriction to avoid layout and/or functionality issues. Furthermore, without restrictions, a user could upload logos with proportions that would create severe layout issues that are then attributed to the theme. I can mock up some examples of this if you like.
&lt;/p&gt;
&lt;p&gt;
I think the solution here is to approach this feature more like the Header Image feature by providing the theme author the option of defining a size and whether or not the width and height of a logo can be flexible. I understand this is not how the feature currently works, but it would provide theme authors with the control they need and uses the ability to configure their logos to fit within those defined parameters. It is also an established methodology in WordPress and a flow the user is familiar with.
&lt;/p&gt;
&lt;p&gt;
To me as a designer, the display of logo is not flexible in the context of the overall design. Its exact position, size, and proportions play a significant role in how the overall theme is designed and laid out, and while flexibility can be added, it is not automatically assumed. Forcing this kind of restriction on me as a designer will ensure I find other ways of restricting the logo display (ie hard-crop on the back end through the custom image size). Removing this option would result in me not using the feature at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Thu, 17 Mar 2016 17:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:6/1458235484815052</guid>
      <description>&lt;p&gt;
From a user perspective, this is necessary. While designers and developers may have images that are cropped to fit, most users do not, or do not know how to do it. WordPress has trained its users to assume a crop UI will appear whenever a crop is relevant (Site Icon, Header Image, etc), and the lack of such a UI in this features seems arbitrary.
&lt;/p&gt;
&lt;p&gt;
More importantly, if no crop option is provided, theme developers will resort to automatic hard crop on the back end to ensure the image is output in the correct proportions. For users who do not crop their images in advance, this will appear random and cause frustration.
&lt;/p&gt;
&lt;p&gt;
The larger concern of a crop UI adding an extra step in the user flow is equally true for Site Icon and Header Image, so if that's the conversation we're having, it must be expanded to these features. From a user perspective there is no qualitative difference between these three features, and arguing that the UI is too obtrusive in this instance but not the two other ones is not consistent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35640 (No API to set a nav menu location) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 17:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35640#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35640#comment:4/1458234905692773</guid>
      <description>&lt;p&gt;
Awaiting Review doesn't really have a good meaning, which is part of the big problem with a needs-based workflow rather than a status-based one.
&lt;/p&gt;
&lt;p&gt;
I would probably never mark something future release without a patch. The point is that there are good ideas, and then there are good ideas with patches awaiting review. I would tend to give preference to the latter for "punting".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33300 (More text patterns) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 17:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33300#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33300#comment:35/1458234676490346</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33300#comment:33" title="Comment 33"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another thought: we can also use &lt;code&gt;~~~&lt;/code&gt; for horizontal lines &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
--- (hyphens) already works for horizontal rules &lt;code&gt;&amp;lt;hr /&amp;gt;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36055 (Filter xmlrpc_enabled only partly works) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 17:08:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36055#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36055#comment:47/1458234488539908</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36055#comment:46" title="Comment 46"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sure and the second patch works exactly like that. Can we at least create it as a new feature in 4.6? Having only a doc change is no change at all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Feel free to create a new ticket for a new feature.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36268 (Too many syllables) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 17 Mar 2016 16:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36268#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36268#comment:3/1458231662287719</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://users.ipfw.edu/jehle/poesia/sylcount.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Syllables aren't counted directly in Spanish&lt;/a&gt;, but there's also a touch of poetic license. ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 17 Mar 2016 16:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:38/1458231233413467</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35855#comment:37" title="Comment 37"&gt;grapplerulrich&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I understand it correctly we are defining if that the widget is selective refresh ready using &lt;code&gt;$widget_ops&lt;/code&gt; in the WP_Widget class. Could we not use &lt;code&gt;register_sidebar()&lt;/code&gt; to define if the sidebar is selective refresh ready?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are two separate supports flags needed:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;A &lt;strong&gt;theme&lt;/strong&gt; needs to indicate it supports selective refresh for the &lt;em&gt;sidebars&lt;/em&gt; that it defines. Consider Twenty Thirteen which uses Masonry for the footer sidebar. For this I am proposing the &lt;code&gt;add_theme_support()&lt;/code&gt; call. It's true that this could be defined at the individual sidebar level as a new argument passed into &lt;code&gt;register_sidebar()&lt;/code&gt;, but I should think that “selectively” implementing selective refresh for one sidebar but not another wouldn't be something we want to encourage?
&lt;/li&gt;&lt;li&gt; A &lt;strong&gt;widget&lt;/strong&gt; needs to indicate it supports selective refresh in the common case for widgets that have dynamic elements that have to be initialized with JavaScript, such as the Twitter Timeline, Facebook Like Box, and Contact Info widgets in Jetpack. This is what the &lt;code&gt;$widget_options&lt;/code&gt; argument for &lt;code&gt;WP_Widget&lt;/code&gt; is proposed for.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So selective refresh would be available for previewing a specific widget change only if these two conditions are met.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36269 (WordPress 4.4.2 Gallery Ordering) created</title>
      
        <author>aj@…</author>

      <pubDate>Thu, 17 Mar 2016 16:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36269</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36269/1458230460694377</guid>
      <description>&lt;p&gt;
There seems to be an issue with the ordering functionality in the latest version of WordPress. Wordpress seems to ignore/misunderstand gallery image order.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35855 (Let selective refresh component be required but be opt-in for ...) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Thu, 17 Mar 2016 15:36:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35855#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35855#comment:37/1458228979445484</guid>
      <description>&lt;p&gt;
I read the explanation on the &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/02/16/selective-refresh-in-the-customizer/#selective-refresh-of-widgets"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;make post&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If I understand it correctly we are defining if that the widget is selective refresh ready using &lt;code&gt;$widget_ops&lt;/code&gt; in the WP_Widget class. Could we not use &lt;code&gt;register_sidebar()&lt;/code&gt; to define if the sidebar is selective refresh ready?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36081 (Activity dashboard widget is not using word-wrap: break-word) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Thu, 17 Mar 2016 15:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36081#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36081#comment:7/1458227369353414</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36081#comment:6" title="Comment 6"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems like we should introduce a common class for this, something like &lt;code&gt;.wordwrap&lt;/code&gt; or &lt;code&gt;.breakword&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Makes sense, let me know if I should proceed with it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36268 (Too many syllables) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 17 Mar 2016 13:50:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36268#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36268#comment:2/1458222625320993</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sounds like a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30000" title="#30000: enhancement: Alot more tickets than before (closed: fixed)"&gt;#30000&lt;/a&gt; to me?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22293 (New filter for wp_update_term and wp_insert_term) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 17 Mar 2016 13:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22293#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22293#comment:9/1458222099013961</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-login.php.4.patch attached to Ticket #35422</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 17 Mar 2016 12:18:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35422/wp-login.php.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35422/wp-login.php.4.patch/1458217090665173</guid>
      <description>&lt;p&gt;
with the extra the in doc block removed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36268 (Too many syllables) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 17 Mar 2016 11:51:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36268#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36268#comment:1/1458215516330978</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That is alot of syllables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27762 (Remove whitespace between menu items) updated</title>
      
        <dc:creator>EddYerburgh</dc:creator>

      <pubDate>Thu, 17 Mar 2016 11:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27762#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27762#comment:12/1458213885049533</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36268 (Too many syllables) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Thu, 17 Mar 2016 11:21:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36268</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36268/1458213689119820</guid>
      <description>&lt;p&gt;
The "haiku" that came
with the &lt;a class="ext-link" href="https://wordpress.org/news/2016/03/wordpress-4-5-beta-4/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;new beta version&lt;/a&gt;:
19 syllables.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35640 (No API to set a nav menu location) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Thu, 17 Mar 2016 11:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35640#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35640#comment:3/1458212594061622</guid>
      <description>&lt;p&gt;
Isn't Awaiting Review the milestone for tickets that have not been triaged, which either go to Future Release (meaning yes we should do this at some point) or close?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33300 (More text patterns) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 17 Mar 2016 10:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33300#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33300#comment:34/1458211371488274</guid>
      <description>&lt;p&gt;
The current patterns are confusing, I think we should reserve different chars to different actions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;#&lt;/code&gt; for headings. &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;##&lt;/code&gt;, &lt;code&gt;###&lt;/code&gt;, &lt;code&gt;####&lt;/code&gt;, &lt;code&gt;#####&lt;/code&gt;, &lt;code&gt;######&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;*&lt;/code&gt; for bold text. &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;_&lt;/code&gt; for italic text. &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;__&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;~&lt;/code&gt; for strikethrough. &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;~~&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;`&lt;/code&gt;  for code.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;-&lt;/code&gt; for horizontal lines. &lt;code&gt;---&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35647 (API index should include home URL) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 17 Mar 2016 10:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35647#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35647#comment:13/1458210954098999</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The version field indicates the first version in which the issue was present.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33300 (More text patterns) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 17 Mar 2016 10:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33300#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33300#comment:33/1458210670721305</guid>
      <description>&lt;p&gt;
Another thought: we can also use &lt;code&gt;~~~&lt;/code&gt; for horizontal lines &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-ajax-response.php.2.patch attached to Ticket #32246</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 17 Mar 2016 10:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-ajax-response.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-ajax-response.php.2.patch/1458209377608087</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35647 (API index should include home URL) updated</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Thu, 17 Mar 2016 10:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35647#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35647#comment:12/1458209362028451</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
To me it's kinda "wierd" that the "url" is siteurl. We mostly put WP in a subdirectory so that the /wp-json/ url key would be "domain.com/wp/" - a link that would just result in a 404.
&lt;/p&gt;
&lt;p&gt;
But I guess that the name can't be changed now due to backwards compatibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Thu, 17 Mar 2016 10:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:321</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:321/1458209322042733</guid>
      <description>&lt;p&gt;
@DrewAPicture Good feedback, see the attached patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35480 (Some notice and warning in wp_calculate_image_srcset() function media.php) updated</title>
      
        <dc:creator>overclokk</dc:creator>

      <pubDate>Thu, 17 Mar 2016 10:04:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35480#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35480#comment:21/1458209071067559</guid>
      <description>&lt;p&gt;
Thank you guys :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36055 (Filter xmlrpc_enabled only partly works) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 17 Mar 2016 09:13:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36055#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36055#comment:46/1458206036099946</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36055#comment:39" title="Comment 39"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36055#comment:27" title="Comment 27"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even if the original intent of this filter was to shut down XML-RPC completely, the fact that it has behaved this way for 9 versions sets the expectation that it doesn't do that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The original intent of the filter was to replace the previous code / UI option whose intent disable the XML-RPC api for performing logged in actions.
&lt;/p&gt;
&lt;p&gt;
It was never intended to completely turn off XML-RPC because then pingbacks wouldn't work, it was all about disabling the XMLRPC publishing interface which wasn't used by a lot of people and needed a thorough code review.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure and the second patch works exactly like that. Can we at least create it as a new feature in 4.6? Having only a doc change is no change at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35456 (New args for apply_filters in WP_Widget_Archives) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 09:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35456#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35456#comment:2/1458205815899274</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@sebastian.pisula: Any new arguments will need accompanying &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#since-section-changelogs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;changelog entries&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35449 (Add ability to filter back to blog link on login page) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 09:08:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35449#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35449#comment:3/1458205736477073</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@adamsilverstein: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35449/35449.2.diff" title="Attachment '35449.2.diff' in Ticket #35449"&gt;35449.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35449/35449.2.diff" title="Download"&gt;​&lt;/a&gt; introduces an inconsistency in changing the default "Back to %s" string to "Return to %s" while naming the filter "back_to_blog_link". We should probably pick one :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19958 (Allow custom post types as "home" and get_posts() to return results ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 09:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19958#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19958#comment:29/1458205275717336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19958#comment:28" title="Comment 28"&gt;pbearne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
happy to refresh when needed
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Happy to consider a refreshed patch :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35422 (only exit if the redirect is true when registering on multisites) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35422#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35422#comment:10/1458205095411078</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@pbearne In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35422/wp-login.php.3.patch" title="Attachment 'wp-login.php.3.patch' in Ticket #35422"&gt;wp-login.php.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35422/wp-login.php.3.patch" title="Download"&gt;​&lt;/a&gt;: "the the"
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35640 (No API to set a nav menu location) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:56:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35640#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35640#comment:2/1458204995396479</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's leave it as Awaiting Review til there's a patch ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34149 (Standardize wp-signup.php to also use search engine visibility text) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:55:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34149#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34149#comment:26/1458204945364216</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35568 (Incorrect documentation for the set_auth_cookie/set_logged_in_cookie ...) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:52:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35568#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35568#comment:3/1458204731770466</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to mark the &lt;em&gt;good-first-bug&lt;/em&gt; as "claimed".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:78/1458203694800424</guid>
      <description>&lt;p&gt;
Yeah, the naming should probably be as generic as possible. But that's a detail.
&lt;/p&gt;
&lt;p&gt;
Besides that, I'd probably remove &lt;code&gt;has_excerpt()&lt;/code&gt; and &lt;code&gt;has_post_thumbnail()&lt;/code&gt; methods. The respective functions can just do something like &lt;code&gt;empty( $post-&amp;gt;get_excerpt() )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/humanmade/WordPress-Objects/blob/master/wordpress-objects.post.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/humanmade/WordPress-Objects/blob/master/wordpress-objects.post.php&lt;/a&gt; could serve as an inspiration for what is possible. I particularly like simple methods like &lt;code&gt;get_title ()&lt;/code&gt;, &lt;code&gt;get_parent()&lt;/code&gt;, &lt;code&gt;get_status()&lt;/code&gt;, and the &lt;code&gt;*_meta()&lt;/code&gt; ones.
&lt;/p&gt;
&lt;p&gt;
The usefulness of such an enhancement has already been discussed a couple of times and we definitely do not need to move everything into &lt;code&gt;WP_Post&lt;/code&gt;, only where it makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:17:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:77/1458202631243314</guid>
      <description>&lt;p&gt;
@DrewAPicture this is example. I think that final version will be with correct names. I need feedback from other developers. This will small step for OOP for WordPress :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:12:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:20/1458202362590641</guid>
      <description>&lt;p&gt;
In 35030.1.patch: Refreshed the patch and added a bit more information to the inline comment.
&lt;/p&gt;
&lt;p&gt;
@joemcgill - We can't use &lt;code&gt;array_unshift()&lt;/code&gt; because we use numerical keys in our array (the image width) and that function will modify them to start counting from zero.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12267 (Upgrade loop objects to provide identical presentational interfaces) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:10:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12267#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12267#comment:76/1458202229170922</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@sebastian.pisula looking at &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/12267/36235.patch" title="Attachment '36235.patch' in Ticket #12267"&gt;36235.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/12267/36235.patch" title="Download"&gt;​&lt;/a&gt;, seems like there's inconsistency in method naming. I think we should err on the side of always excluding &lt;code&gt;_post_&lt;/code&gt; in method names because it's mostly moot in the scope of a post object class.
&lt;/p&gt;
&lt;p&gt;
This also promotes consistency in later decorating other objects with similar methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #9568,​35986 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=9568%2C35986</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=9568%2C35986/1458201952914184</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37030" title="Docs: Improve 4.5 changelog entries introduced in [36992] for ..."&gt;37030&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve 4.5 changelog entries introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36992" title="Users: Add `@since` entries to `wp_authenticate()` and its filters now ..."&gt;[36992]&lt;/a&gt; for &lt;code&gt;wp_authenticate()&lt;/code&gt;, and the &lt;code&gt;authenticate&lt;/code&gt; and &lt;code&gt;wp_login_failed&lt;/code&gt; hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9568" title="#9568: feature request: Allow users to log in using their email address (closed: fixed)"&gt;#9568&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35986" title="#35986: task (blessed): 4.5 Docs Audit (closed: fixed)"&gt;#35986&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37030]: Docs: Improve 4.5 changelog entries introduced in [36992] for ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37030</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37030/1458201951954718</guid>
      <description>&lt;p&gt;
Docs: Improve 4.5 changelog entries introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36992" title="Users: Add `@since` entries to `wp_authenticate()` and its filters now ..."&gt;[36992]&lt;/a&gt; for &lt;code&gt;wp_authenticate()&lt;/code&gt;, and the &lt;code&gt;authenticate&lt;/code&gt; and &lt;code&gt;wp_login_failed&lt;/code&gt; hooks.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9568" title="#9568: feature request: Allow users to log in using their email address (closed: fixed)"&gt;#9568&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35986" title="#35986: task (blessed): 4.5 Docs Audit (closed: fixed)"&gt;#35986&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:9/1458201949742426</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36224" title="#36224: enhancement: WP_Taxonomy class (closed: fixed)"&gt;#36224&lt;/a&gt; (&lt;code&gt;WP_Taxonomy&lt;/code&gt; class)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:05:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:8/1458201913701343</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Food for thought: Is there value in not locking ourselves into "post type" vernacular and instead going with &lt;code&gt;WP_Content_Type&lt;/code&gt;? There have been some mutterings over the years about the missed opportunity in calling everything "posts".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 to that. Definitely to be considered.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
In general, what we get from such a class:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improved documentation on DevHub, moving/copying lots of information out of register_taxonomy() into a separate page.
&lt;/li&gt;&lt;li&gt;Better type hinting thanks to PHPDoc changes.
&lt;/li&gt;&lt;li&gt;Forward compatibility (think magic getter/setter for deprecated arguments, improving the way we handle default values, etc.)
&lt;/li&gt;&lt;li&gt;Better error prevention
&lt;/li&gt;&lt;li&gt;Makes adding a REST API endpoint for getting post types easier
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36246 (wp_get_attachment_image should use wp_get_attachment_metadata) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 08:02:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36246#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36246#comment:2/1458201734220086</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 07:55:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:7/1458201343560448</guid>
      <description>&lt;p&gt;
Food for thought: Is there value in not locking ourselves into "post type" vernacular and instead going with &lt;code&gt;WP_Content_Type&lt;/code&gt;? There have been some mutterings over the years about the missed opportunity in calling everything "posts".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35030.1.patch attached to Ticket #35030</title>
      
        <dc:creator>jaspermdegroot</dc:creator>

      <pubDate>Thu, 17 Mar 2016 07:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35030/35030.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35030/35030.1.patch/1458201262136532</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 07:54:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:320</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:320/1458201253792180</guid>
      <description>&lt;p&gt;
@ramiy: Also, on the &lt;code&gt;$id&lt;/code&gt; and &lt;code&gt;$data&lt;/code&gt; arguments, should mention that they also accept a &lt;code&gt;WP_Error&lt;/code&gt; object and under what circumstances that might be passed. You can be general, but helpful to have more information than simply that these two args can also accept &lt;code&gt;WP_Error&lt;/code&gt; objects. The idea is to explain &lt;em&gt;why&lt;/em&gt; :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32246 (Fix a variety of phpDoc issues) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 07:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32246#comment:319</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32246#comment:319/1458201132353613</guid>
      <description>&lt;p&gt;
@ramiy on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32246/class-wp-ajax-response.php.patch" title="Attachment 'class-wp-ajax-response.php.patch' in Ticket #32246"&gt;class-wp-ajax-response.php.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32246/class-wp-ajax-response.php.patch" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;For the &lt;code&gt;$args&lt;/code&gt; parameter description, "to override the defaults" is a given. Maybe something like this instead: "Optional. An array or string of XML response arguments."
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;$action&lt;/code&gt; argument description should indicate the boolean, i.e. "&lt;strong&gt;Whether to&lt;/strong&gt; use a nonce. Default false."
&lt;/li&gt;&lt;li&gt;In descriptions, we use ID vs id
&lt;/li&gt;&lt;li&gt;For &lt;code&gt;$position&lt;/code&gt;, listing out the accepted values and what they mean is helpful, but the description of what the argument represents is missing.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$supplemental&lt;/code&gt;: There should be backticks around &lt;code&gt;&amp;lt;supplemental&amp;gt;&lt;/code&gt; in the description
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35017 (Bug in bindPasswordForm() LastPass mismatch issue) updated</title>
      
        <dc:creator>erwinwessels</dc:creator>

      <pubDate>Thu, 17 Mar 2016 07:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35017#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35017#comment:1/1458200914382273</guid>
      <description>&lt;p&gt;
Just bumped into this one myself; turns out it's (surprise) a broken plugin. The reset password functionality significantly changed, and the plugin I was using (Theme My Login) apparently wasn't compatible. Disabling the plugin made the problem go away.
&lt;/p&gt;
&lt;p&gt;
Edit: copy the updated resetpass-form.php from this plugin, if that causes your issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Mar 2016 05:07:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:19/1458191263338372</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36084#comment:18" title="Comment 18"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My preference currently would be to keep the changes introduced last cycle, and do &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36084/36084.3.diff" title="Attachment '36084.3.diff' in Ticket #36084"&gt;36084.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36084/36084.3.diff" title="Download"&gt;​&lt;/a&gt; with an added sanity check to make sure the value is a string. The logic seems more straightforward to me and removes the confusing redundancy that existed before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34259" title="Media: In `get_image_send_to_editor()`, allow a custom value for ..."&gt;[34259]&lt;/a&gt; (et al.).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, it's similar to 36084.3.diff.
&lt;/p&gt;
&lt;p&gt;
I'm 50/50 on whether we need to support string there. It was added for no good reason (to match the docs?) and is very doubtful anything is using it.
&lt;/p&gt;
&lt;p&gt;
However we should not change how that parameter works, only revert. The bug is that in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34259" title="Media: In `get_image_send_to_editor()`, allow a custom value for ..."&gt;[34259]&lt;/a&gt; the boolean was reversed. However &lt;code&gt;$rel&lt;/code&gt; has been a boolean for many years. There is no good reason to change it instead of fix the bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36255 (Custom Logo: Crop UI) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 17 Mar 2016 05:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36255#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36255#comment:5/1458190807360899</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'll note that it is not a complicated technical change, but it has significant usability implications, particularly with the flow disruption of an added step. It can also be implemented in a plugin fairly easily in theory. I think it could cause many users to crop images unnecessarily. Would definitely want to see some usability research or targeted user testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35300 (Clean up emoji compatibility code) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35300#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35300#comment:7/1458190754635989</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37029" title="Emoji: The `everythingExceptFlag` browser support flag, introduced in ..."&gt;37029&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Emoji: The &lt;code&gt;everythingExceptFlag&lt;/code&gt; browser support flag, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36816" title="Emoji: Clean up the emoji browser support tests.
As new sets of emoji ..."&gt;[36816]&lt;/a&gt;, wasn't being initialised correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35300" title="#35300: task (blessed): Clean up emoji compatibility code (closed: fixed)"&gt;#35300&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37029]: Emoji: The `everythingExceptFlag` browser support flag, introduced in ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37029</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37029/1458190754095031</guid>
      <description>&lt;p&gt;
Emoji: The &lt;code&gt;everythingExceptFlag&lt;/code&gt; browser support flag, introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36816" title="Emoji: Clean up the emoji browser support tests.
As new sets of emoji ..."&gt;[36816]&lt;/a&gt;, wasn't being initialised correctly.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35300" title="#35300: task (blessed): Clean up emoji compatibility code (closed: fixed)"&gt;#35300&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36266 (Emoji Diversity support test fails in Safari) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:54:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36266#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36266#comment:4/1458190453141794</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36266 (Emoji Diversity support test fails in Safari) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36266#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36266#comment:3/1458190430177757</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37028" title="Emoji: Fix the diversity emoji check in Safari.
When the browser test ..."&gt;37028&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Emoji: Fix the diversity emoji check in Safari.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When the browser test for diversity emoji was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36160" title="Emoji: Add a test to the emoji loader, to see if the browser supports ..."&gt;[36160]&lt;/a&gt;, it included a workaround for Chrome not being able to compare &lt;code&gt;Uint8ClampedArray&lt;/code&gt; objects directly, by converting them to a string. Unfortunately, Safari doesn't support the &lt;code&gt;Uint8ClampedArray.toString()&lt;/code&gt; method correctly, so the test was incorrectly failing in Safari.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36266" title="#36266: defect (bug): Emoji Diversity support test fails in Safari (closed: fixed)"&gt;#36266&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37028]: Emoji: Fix the diversity emoji check in Safari.  When the browser test ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:53:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37028</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37028/1458190429592763</guid>
      <description>&lt;p&gt;
Emoji: Fix the diversity emoji check in Safari.
&lt;/p&gt;
&lt;p&gt;
When the browser test for diversity emoji was added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36160" title="Emoji: Add a test to the emoji loader, to see if the browser supports ..."&gt;[36160]&lt;/a&gt;, it included a workaround for Chrome not being able to compare &lt;code&gt;Uint8ClampedArray&lt;/code&gt; objects directly, by converting them to a string. Unfortunately, Safari doesn't support the &lt;code&gt;Uint8ClampedArray.toString()&lt;/code&gt; method correctly, so the test was incorrectly failing in Safari.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36266" title="#36266: defect (bug): Emoji Diversity support test fails in Safari (closed: fixed)"&gt;#36266&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36217 (WP_Post_Type class) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36217#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36217#comment:6/1458189641603059</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37027]: Post 4.5-beta4 version bump.</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:33:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37027</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37027/1458189229751607</guid>
      <description>&lt;p&gt;
Post 4.5-beta4 version bump.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34733 (Responsive Images: Inline docs fixes) closed</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:23:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34733#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34733#comment:15/1458188621957243</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37026]: 4.5-beta4</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:16:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37026</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37026/1458188204149788</guid>
      <description>&lt;p&gt;
4.5-beta4
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36216 (Keyboard shortcut for displaying contextual help) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:15:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36216#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36216#comment:2/1458188155604462</guid>
      <description>&lt;p&gt;
I'm partial to the way GMail handles the help modal. If a text input of any kind isn't focused, simply typing ? (question mark) opens the help modal. Slick.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36231 (Nonce validation fails if JSON body contains "_wpnonce") updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 17 Mar 2016 04:12:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36231#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36231#comment:4/1458187962794120</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by rmccue. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1458187960000611"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #21509,​36055 batch updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 03:52:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21509%2C36055</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21509%2C36055/1458186761900901</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37025" title="Docs: Clarify documentation for the `xmlrpc_enabled` filter to better ..."&gt;37025&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Clarify documentation for the &lt;code&gt;xmlrpc_enabled&lt;/code&gt; filter to better explain that its scope only extends to methods requiring authentication.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When the &lt;code&gt;xmlrpc_enabled&lt;/code&gt; filter was initially introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21509" title="Update wp_update_user() phpdoc to reflect a possible return of ..."&gt;[21509]&lt;/a&gt;, it was effectively intended to replace the `enable_xmlrpc' UI option, which only controlled whether authenticated XML-RPC methods were enabled, such as for publishing actions. This change clarifies the expected behavior and adds information about ways to more granularly control XML-RPC method and request behavior with related hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Part props mensmaximus.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21509" title="#21509: enhancement: Enable XML-RPC by default and remove the option (closed: fixed)"&gt;#21509&lt;/a&gt;. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36055" title="#36055: defect (bug): Filter xmlrpc_enabled only partly works (closed: fixed)"&gt;#36055&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37025]: Docs: Clarify documentation for the `xmlrpc_enabled` filter to better ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 03:52:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37025</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37025/1458186760693445</guid>
      <description>&lt;p&gt;
Docs: Clarify documentation for the &lt;code&gt;xmlrpc_enabled&lt;/code&gt; filter to better explain that its scope only extends to methods requiring authentication.
&lt;/p&gt;
&lt;p&gt;
When the &lt;code&gt;xmlrpc_enabled&lt;/code&gt; filter was initially introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21509" title="Update wp_update_user() phpdoc to reflect a possible return of ..."&gt;[21509]&lt;/a&gt;, it was effectively intended to replace the `enable_xmlrpc' UI option, which only controlled whether authenticated XML-RPC methods were enabled, such as for publishing actions. This change clarifies the expected behavior and adds information about ways to more granularly control XML-RPC method and request behavior with related hooks.
&lt;/p&gt;
&lt;p&gt;
Part props mensmaximus.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21509" title="#21509: enhancement: Enable XML-RPC by default and remove the option (closed: fixed)"&gt;#21509&lt;/a&gt;. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36055" title="#36055: defect (bug): Filter xmlrpc_enabled only partly works (closed: fixed)"&gt;#36055&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36055.3.patch attached to Ticket #36055</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 03:28:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36055/36055.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36055/36055.3.patch/1458185300106313</guid>
      <description>&lt;p&gt;
Improved filter docs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36055 (Filter xmlrpc_enabled only partly works) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 17 Mar 2016 03:25:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36055#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36055#comment:44/1458185133212420</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36055/36055.3.patch" title="Attachment '36055.3.patch' in Ticket #36055"&gt;36055.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36055/36055.3.patch" title="Download"&gt;​&lt;/a&gt; clarifies the hook docs for the &lt;code&gt;xmlrpc_enabled&lt;/code&gt; filter. Part props would go to @mensmaximus for &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36055#comment:37" title="Comment 37"&gt;comment:37&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36055 (Filter xmlrpc_enabled only partly works) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 17 Mar 2016 02:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36055#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36055#comment:43/1458182868597746</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by drew. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1458182865000894"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 17 Mar 2016 01:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:18/1458179466923597</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36084#comment:16" title="Comment 16"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thinking more about this: we've supported a string for &lt;code&gt;$rel&lt;/code&gt; in &lt;code&gt;get_image_send_to_editor()&lt;/code&gt; for a while. Removing it now may eventually break some plugin...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The main advantage I see in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36084/36084.5.diff" title="Attachment '36084.5.diff' in Ticket #36084"&gt;36084.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36084/36084.5.diff" title="Download"&gt;​&lt;/a&gt; over &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36084/36084.3.diff" title="Attachment '36084.3.diff' in Ticket #36084"&gt;36084.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36084/36084.3.diff" title="Download"&gt;​&lt;/a&gt; is the validation that &lt;code&gt;$rel&lt;/code&gt; is a string, otherwise, I don't see much benefit over &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36084/36084.3.diff" title="Attachment '36084.3.diff' in Ticket #36084"&gt;36084.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36084/36084.3.diff" title="Download"&gt;​&lt;/a&gt; since functionally, we're building an identical default &lt;code&gt;$rel&lt;/code&gt; attribute in &lt;code&gt;wp_ajax_send_attachment_to_editor()&lt;/code&gt; before converting to a (bool) when calling &lt;code&gt;get_image_send_to_editor()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If we needed to support a fallback case when someone passes &lt;code&gt;true&lt;/code&gt; to the &lt;code&gt;$rel&lt;/code&gt; param in &lt;code&gt;get_image_send_to_editor()&lt;/code&gt; I suspect we would have heard about it when changed that behavior in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34259" title="Media: In `get_image_send_to_editor()`, allow a custom value for ..."&gt;[34259]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
My preference currently would be to keep the changes introduced last cycle, and do &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36084/36084.3.diff" title="Attachment '36084.3.diff' in Ticket #36084"&gt;36084.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36084/36084.3.diff" title="Download"&gt;​&lt;/a&gt; with an added sanity check to make sure the value is a string. The logic seems more straightforward to me and removes the confusing redundancy that existed before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34259" title="Media: In `get_image_send_to_editor()`, allow a custom value for ..."&gt;[34259]&lt;/a&gt; (et al.).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31792 (register_uninstall_hook causes large #s of unnecessary updates to ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 17 Mar 2016 01:32:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31792#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31792#comment:13/1458178325034566</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31792#comment:12" title="Comment 12"&gt;jeichorn&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So this finally happened to me again.  I was able to trace down the cause.
&lt;/p&gt;
&lt;p&gt;
Objects are being stored in the uninstall_plugins due to the uninstall being callbacks being on classes.  The un-serization happens in the first plugin that calls register_uninstall_hook, but the classes used by other plugins aren't loaded yet, set they un-serialize as PHP_Incomplete_Class.  Then when the next plugin calls register_uninstall_hook, its serializing an object with the actual class name so its a different value in PHP, so the comparison in update_option fails.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This should be prevented since WordPress 3.1 - &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16339" title="Only a static class method or function can be used in an uninstall ..."&gt;[16339]&lt;/a&gt;. Can you see how that's being bypassed?
&lt;/p&gt;
&lt;p&gt;
I have a feeling this may be caused because the plugin registered it prior to that code being added in 3.1, and ultimately having that value stuck in the array?
If the plugin were to fix itself and register a valid uninstall hook, the issue would clear itself - but I'm guessing the plugin never did.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35030 (Responsive Images: wrong source selected in iOS8) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 17 Mar 2016 01:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35030#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35030#comment:19/1458178229620718</guid>
      <description>&lt;p&gt;
@jaspermdegroot looks like the patch needs a refresh, but generally, this looks good. Wondering if we could use an &lt;code&gt;array_unshift()&lt;/code&gt; to prepend a source when &lt;code&gt;$is_src&lt;/code&gt; is true to avoid using two separate array. We should also add some inline docs explaining why we're forcing the &lt;code&gt;src&lt;/code&gt; to the front of the &lt;code&gt;srcset&lt;/code&gt; list.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Mar 2016 01:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:17/1458177121210622</guid>
      <description>&lt;p&gt;
In 36084.5.diff: same as 36084.4.diff but also support string for &lt;code&gt;$rel&lt;/code&gt; (see above).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36084.5.diff attached to Ticket #36084</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Mar 2016 01:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36084/36084.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36084/36084.5.diff/1458177050339210</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35947 (Customizer panel fails to fully expand leaving extra margin) updated</title>
      
        <dc:creator>rheinardkorf</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:47:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35947#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35947#comment:27/1458175641875442</guid>
      <description>&lt;p&gt;
My tests shows that the issue seems to be partially resolved. Testing with @ryankienstra 's &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/145/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;pull request&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I am noticing that the focus does not get applied when first attempting to get focus. A subsequent click fixed the issue. I am not sure if this is a result of the patch or need another ticket raised.
&lt;/p&gt;
&lt;p&gt;
To reproduce on "Twenty Sixteen".
1) Focus on a navigation element.
2) Focus on a widget.
3) Focus on a navigation element again.
&lt;/p&gt;
&lt;p&gt;
You should notice that the first time attempting a focus that the inner control does not receive focus. A subsequent click will give you focus and if you're using navigation elements, each focus on navigation element will have appropriate focus.  Same is true for widgets.
&lt;/p&gt;
&lt;p&gt;
@westonruter this sounds similar to your issue described in your screencast.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33300 (More text patterns) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33300#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33300#comment:32/1458175586657423</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37024" title="TinyMCE: Adjust textpattern tests for the changes in [37023].
See #33300."&gt;37024&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: Adjust textpattern tests for the changes in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37023" title="TinyMCE: after discussion in Slack ..."&gt;[37023]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33300" title="#33300: task (blessed): More text patterns (closed: fixed)"&gt;#33300&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37024]: TinyMCE: Adjust textpattern tests for the changes in [37023].  See #33300.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:46:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37024</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37024/1458175586006061</guid>
      <description>&lt;p&gt;
TinyMCE: Adjust textpattern tests for the changes in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37023" title="TinyMCE: after discussion in Slack ..."&gt;[37023]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33300" title="#33300: task (blessed): More text patterns (closed: fixed)"&gt;#33300&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10726 (Admin notifications for more than 1 email) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10726#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10726#comment:27/1458175527965912</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by tripflex. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1458175526000888"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:16/1458175212298960</guid>
      <description>&lt;p&gt;
Thinking more about this: we've supported a string for &lt;code&gt;$rel&lt;/code&gt; in &lt;code&gt;get_image_send_to_editor()&lt;/code&gt; for a while. Removing it now may eventually break some plugin...
&lt;/p&gt;
&lt;p&gt;
I'll be pretty easy to continue supporting a string there but not use it in core. New patch coming up :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10726 (Admin notifications for more than 1 email) updated</title>
      
        <dc:creator>tripflex</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10726#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10726#comment:26/1458174193419648</guid>
      <description>&lt;p&gt;
Whenever I wanted to do something like this it was as easy as filtering &lt;code&gt;wp_mail&lt;/code&gt;, checking if &lt;code&gt;to&lt;/code&gt; was set to the same thing as the value in &lt;code&gt;admin_email&lt;/code&gt; and then adding any additional ones I want, and returning back to &lt;code&gt;wp_mail&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Only thing missing would be check for admin email if &lt;code&gt;to&lt;/code&gt; is an array, but I have yet to see a case of that where the plugin/theme didn't have its own method of adding additional emails.
&lt;strong&gt;&lt;em&gt;I'm going to leave this here but I just realized that this only checks the TO and has no way to tell if it's actually an admin email ... so say the &lt;code&gt;admin_email&lt;/code&gt; is the same as your user account, you request password reset ... it will send to those additional emails as well --- sorry about that&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'wp_mail', 'my_custom_to_admin_emails' );
/**
* Filter WP_Mail Function to Add Multiple Admin Emails
*
*
*
* @param array $args A compacted array of wp_mail() arguments, including the "to" email,
*                    subject, message, headers, and attachments values.
*
* @return array
*/
function my_custom_to_admin_emails( $args ) {
    // This assumes that admin emails are sent with only the admin email
    // used in the to argument.
    if( is_array( $args['to'] ) ) return $args;
    $admin_email = get_option( 'admin_email' );
    // Check if admin email is in string, as plugins/themes could have changed format (ie. Administrator &amp;lt;admin@domain.com&amp;gt; )
    if( strpos( $args['to'], $admin_email ) !== FALSE ){
        /**
        * Set the to key value to an array of emails, including original admin email
        *
        * All email addresses supplied to wp_mail() as the $to parameter must comply with RFC 2822. Some valid examples:
        * user@example.com
        * User &amp;lt;user@example.com&amp;gt;
        */
        $args['to'] = array( $args['to'], 'user@example.com', 'User &amp;lt;user@example.com&amp;gt;' );
    }
    return $args;
}
&lt;/pre&gt;&lt;p&gt;
Just thought I would add this here in case others come looking for other solutions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36084 (Link to media images now get a rel=attachment) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:15:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36084#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36084#comment:15/1458173739487212</guid>
      <description>&lt;p&gt;
How about 36084.4.diff. It reverts most of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34259" title="Media: In `get_image_send_to_editor()`, allow a custom value for ..."&gt;[34259]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34260" title="Media: In `wp_ajax_send_attachment_to_editor()`, the fallback logic ..."&gt;[34260]&lt;/a&gt;, fix inline docs for &lt;code&gt;$rel&lt;/code&gt; being boolean, and tweaks the tests from 36084.3.diff to apply for that.
&lt;/p&gt;
&lt;p&gt;
It also brings back the original behaviour for &lt;code&gt;$rel&lt;/code&gt;: insert &lt;code&gt;attachment wp-att-####&lt;/code&gt; then true.
&lt;/p&gt;
&lt;p&gt;
Another place that may need fixing is inside the editor. Currently when an image wrapped in a link is edited, the link's rel attribute is not changed/removed/added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36084.4.diff attached to Ticket #36084</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 17 Mar 2016 00:01:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36084/36084.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36084/36084.4.diff/1458172919376094</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>