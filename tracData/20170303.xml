<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>39909.patch attached to Ticket #39909</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Fri, 03 Mar 2017 23:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39909/39909.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39909/39909.patch/1488585092855440</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39909 (Make title behaviours consistent across all widgets on first load) updated</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Fri, 03 Mar 2017 23:51:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39909#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39909#comment:4/1488585071284712</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added diff that implements the proposed behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 03 Mar 2017 23:05:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:124/1488582339629948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:122" title="Comment 122"&gt;seancjones&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not sure what you mean about "still a way from the point where we could do the yellow vs green though".  Colors/graphs of any kind are a very, very good teaching tool. I understand not wanting to make someone feel panicked if they're "Yellow" and maybe just have "green" and "red", or something equivalent UX people like.
&lt;/p&gt;
&lt;p&gt;
But people do NOT read, they DO look at graphs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree that when we present this information to users, that this is a good way to do it. I'm just cautioning that if we are talking about presenting this to everybody within the admin panel, the core devs are going to be very hesitant to do that. Trust me, I've memorized all of the talking points. :-) I think that if they will agree to pursue educating users about this at all, they'll want to test the waters first. (And really, it would be easy to get this wrong and end up scaring people, so that's a good thing.) I like @alexander.rohmann's idea of eventually doing something similar to browsehappy as well. I just think that if we try to jump in with both feet, the core devs will just try to shut down the whole education idea.
&lt;/p&gt;
&lt;p&gt;
As far as the parallel between this and browsehappy goes, note that folks will be quick to point out that one difference is that many users actually know what their browser is, what it does, and most of them can update it (actually, not all though). But in this case, many users know nothing about PHP, what it does, and they don't have any control over what version they are running. I think though that as far as that last point, users are probably gaining more control over what PHP version they are running. Possibly most of the remaining users are on crummy hosts and don't have any control though.
&lt;/p&gt;
&lt;p&gt;
This isn't to argue against the idea, just to prepare you for what has been said about the idea before. I think that before the core team and the support team are ready to OK something like this, they're going to want some proof that it is feasible and worth the effort. Which is why at this point we'll probably have to thing minimalistically in regard to scope (how many users are exposed to whatever we come up with), though I guess really that doesn't have to necessarily cramp the method that is used—something like brosehappy is one good idea, but probably only shown to the users running the very oldest PHP version (5.2).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36613 (Browser back button doesn't work in Theme Browser) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 03 Mar 2017 22:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36613#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36613#comment:13/1488581972617110</guid>
      <description>&lt;p&gt;
@adamsilverstein finally tested a bit, yep previous error seems gone. However, there are still edge cases where seems it's a bit difficult to make the history work correctly. To reproduce one of these cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;start from the Popular tab (&lt;code&gt;?browse=popular&lt;/code&gt;)
&lt;/li&gt;&lt;li&gt;click on the second theme
&lt;/li&gt;&lt;li&gt;the installer opens, navigate 2 themes forward
&lt;/li&gt;&lt;li&gt;click on the browser's Back button three times, and the installer closes
&lt;/li&gt;&lt;li&gt;you're back on the Popular tab
&lt;/li&gt;&lt;li&gt;notice your browser's Forward button is disabled, maybe should keep the forward history
&lt;/li&gt;&lt;li&gt;notice in the browser address bar &lt;code&gt;?browse=popular&lt;/code&gt; is gone
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Now start a new theme navigation:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;click on the third theme
&lt;/li&gt;&lt;li&gt;the installer opens, navigate 2 themes forward
&lt;/li&gt;&lt;li&gt;click on the browser's back three times, and the installer closes
&lt;/li&gt;&lt;li&gt;you're now on the Featured tab, you should be on the Popular one
&lt;/li&gt;&lt;li&gt;notice your browser's Forward button is enabled and clickable
&lt;/li&gt;&lt;li&gt;click on the browser's Forward button
&lt;/li&gt;&lt;li&gt;the address bar gets updated with the last theme displayed parameter &lt;code&gt;?theme=themename&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;nothing happens but you get a JS error &lt;code&gt;Cannot read property 'toJSON' of undefined&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;refresh the page, and the theme installer opens
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I &lt;em&gt;think&lt;/em&gt; some of the issues come from underlying issues in the theme installer, but haven't looked in depth.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40029 (Media endpoint can return wrong number of results) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 03 Mar 2017 22:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40029#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40029#comment:1/1488580511145971</guid>
      <description>&lt;p&gt;
I think there are also other situations where the pagination/count values returned by the API are not reliable.  We should investigate this more in general and either resolve these situations, or document this caveat and indicate that client code should be prepared to deal with this.
&lt;/p&gt;
&lt;p&gt;
This situation in particular is pretty edge-case since WordPress &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/post.php?marks=2467-2468,2486#L2465"&gt;should handle this correctly&lt;/a&gt; under normal circumstances.  It would be good to see some repro steps if this is more common than I'm thinking.  See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39881" title="#39881: defect (bug): `WP_REST_Posts_Controller::check_read_permission()` should check if ... (closed: fixed)"&gt;#39881&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40029 (Media endpoint can return wrong number of results) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 03 Mar 2017 22:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40029</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40029/1488580102703056</guid>
      <description>&lt;p&gt;
&lt;code&gt;WP_REST_Posts_Controller::check_read_permission()&lt;/code&gt; will filter out items from a collection based on readability of the item's parent.
&lt;/p&gt;
&lt;p&gt;
Attachments have a weird association with a post via the "Uploaded To" paradigm, but can exist outside of a parent after that parent mysteriously disappears - example: bug in WordPress, post gets trashed and deleted but image does not rescind its association, etc.
&lt;/p&gt;
&lt;p&gt;
What can happen - I request 10 items on page 1 and get back 7? The fulfillment of the request should be opaque to the client. I have 100s of images - if I ask for 10, I should get 10. The SQL probably needs to be more aggressive by including a clause like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;post_parent = 0 OR post_parent IN (.... {subquery that looks only for IDs that exist} ....)
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36514 (posting with custom taxes) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 03 Mar 2017 22:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36514#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36514#comment:20/1488579898039338</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40028.diff attached to Ticket #40028</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 03 Mar 2017 22:01:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40028/40028.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40028/40028.diff/1488578510762846</guid>
      <description>&lt;p&gt;
Check &lt;code&gt;$_wp_suspend_cache_invalidation&lt;/code&gt; (and also some related whitespace &amp;amp; order clean-up in &lt;code&gt;clean_blog_cache()&lt;/code&gt;)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40028 (Network/Site cache cleaning does not obey cache invalidation suspension) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Fri, 03 Mar 2017 22:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40028</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40028/1488578400082913</guid>
      <description>&lt;p&gt;
Sites &amp;amp; Networks do not obey the &lt;code&gt;$_wp_suspend_cache_invalidation&lt;/code&gt; global when their &lt;code&gt;clean&lt;/code&gt; functions are called.
&lt;/p&gt;
&lt;p&gt;
This can result in an excessive number of cache invalidations when this global value is explicitly set.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40027 (Tags and Categories should have a "slugs" parameter for batch fetching) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 03 Mar 2017 21:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40027#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40027#comment:2/1488577274913013</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is very similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38579" title="#38579: enhancement: REST API: Allow listing posts that match any of a set of slugs rather ... (closed: fixed)"&gt;#38579&lt;/a&gt; for posts.  As Adam mentioned, we should use the same &lt;code&gt;slug&lt;/code&gt; parameter but support arrays and comma-separated lists.  Let's see if we can get it in the next minor release.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39909 (Make title behaviours consistent across all widgets on first load) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 03 Mar 2017 21:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39909#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39909#comment:3/1488576760733895</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ready for dev. Patch would include whatever the default titles are as found in &lt;code&gt;WP_*_Widget::widget()&lt;/code&gt; methods to be added to the &lt;code&gt;title&lt;/code&gt; input &lt;code&gt;placeholder&lt;/code&gt; in the corresponding&lt;code&gt;WP_*_Widget::form()&lt;/code&gt; methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40025 (Customer checkbox control is checked when the default value is false.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 03 Mar 2017 21:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40025#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40025#comment:1/1488576617373216</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@gandham Please provide a standalone plugin with code that demonstrates the issue you're having.
&lt;/p&gt;
&lt;p&gt;
From your screenshot, I see you have “flase” (a mispelling). In PHP, if you try to use &lt;code&gt;flase&lt;/code&gt; you'll get:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Notice: Use of undefined constant flase - assumed 'flase'
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In other words, it converts &lt;code&gt;flase&lt;/code&gt; into a string &lt;code&gt;'flase'&lt;/code&gt; and this would then be interpreted as boolean &lt;code&gt;true&lt;/code&gt;, and result in the checkbox being checked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Fri, 03 Mar 2017 21:26:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:123/1488576403707347</guid>
      <description>&lt;p&gt;
@seancjones That's great stuff!
&lt;/p&gt;
&lt;p&gt;
Anyone remember this? &lt;a class="ext-link" href="http://browsehappy.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://browsehappy.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think something more designed, and engaging as an informational site could be cool. It would be pretty easy to get up on GitHub pages. I bought &lt;a class="ext-link" href="http://codehappy.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codehappy.org/&lt;/a&gt; a while back in anticipation of something like this and would be happy to point it to a site made for this cause.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>seancjones</dc:creator>

      <pubDate>Fri, 03 Mar 2017 21:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:122/1488576228456222</guid>
      <description>&lt;p&gt;
I'll hold off until I get word from @jorbin. This is now in Markdown anyway.
&lt;/p&gt;
&lt;p&gt;
Not sure what you mean about "still a way from the point where we could do the yellow vs green though".  Colors/graphs of any kind are a very, very good teaching tool. I understand not wanting to make someone feel panicked if they're "Yellow" and maybe just have "green" and "red", or something equivalent UX people like.
&lt;/p&gt;
&lt;p&gt;
But people do NOT read, they DO look at graphs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40027 (Tags and Categories should have a "slugs" parameter for batch fetching) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Mar 2017 20:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40027#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40027#comment:1/1488573936692781</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
From a design standpoint we've tried to make any list-style query parameter (include, exclude, categories, etc) behave the same... in this regard I agree that "slug" is the odd one out, because it is a filtering query that returns an array, but does not accept multiple values. I'm in favor of the change, as the benefit to clients is significant and the query overhead within WP should be significantly less of a burden than the HTTP latency or query overhead of making multiple requests in parallel or sequence
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 03 Mar 2017 20:18:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:121/1488572310711562</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:119" title="Comment 119"&gt;seancjones&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jdgrimes Great document! I modified it, hope you don't mind. It's in a Gist. Feel free to fork and make any changes. If you recommend a better location I'll put it there.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/smcjones/6a46957b6a89568243350ac0f395db85"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/smcjones/6a46957b6a89568243350ac0f395db85&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Cool. I agree with @Sobak that we're probably going to want a full repo for this though. Not only does it support PRs, but it also allows us to break out discussion of each point into separate issues, instead of continuing to grow this already huge ticket. Eventually that should probably be under the WordPress organization on GitHub, but I guess there is nothing stopping us from going ahead and creating a repo, that can be transferred to there later.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I reference colors in the gist.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is an interesting idea. I think we're still a way from the point where we could do the yellow vs green though. Eventually it might be nice, but it requires user education, and we still need to test the waters regarding how easy/beneficial it is going to be to educate users about this. Even if the core devs admit that some education effort here might be necessary, I think that they'll probably want to keep that to a minimum.
&lt;/p&gt;
&lt;p&gt;
So I think we should focus on starting small, just educating those users who are using the oldest version of PHP, and see how that goes. Then we could think about green and yellow users.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For those who didn't see, @jorbin brought this up in &lt;a class="ext-link" href="https://make.wordpress.org/core/2017/03/03/dev-chat-summary-march-1st-4-7-3-week-5/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the last core dev chat in Slack&lt;/a&gt;, suggesting that version support procedures for all of the different technologies used by WordPress should be discussed at the upcoming community summit. High-five to him for his continued willingness to wrestle with this stuff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40027 (Tags and Categories should have a "slugs" parameter for batch fetching) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 03 Mar 2017 20:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40027</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40027/1488571717331503</guid>
      <description>&lt;p&gt;
I have 8 categories but I want to query only 3:
1 taco
2 burrito
3 enchilada
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/categories?slug=taco&lt;/code&gt; only returns one item because there is no batch slug mechanism
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/categories?include[]=1&amp;amp;include[]=2&amp;amp;include[]=3&lt;/code&gt; returns all 3
&lt;/p&gt;
&lt;p&gt;
What I want:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;/categories?slugs[]=taco&amp;amp;slugs[]=burrito&amp;amp;slugs[]=enchilada&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The endpoints, by default, are way too slow to effectively be used with serial HTTP. The batching parameters are essential.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>Sobak</dc:creator>

      <pubDate>Fri, 03 Mar 2017 19:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:120/1488570627788545</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:119" title="Comment 119"&gt;seancjones&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jdgrimes Great document! I modified it, hope you don't mind. It's in a Gist. Feel free to fork and make any changes. If you recommend a better location I'll put it there.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/smcjones/6a46957b6a89568243350ac0f395db85"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/smcjones/6a46957b6a89568243350ac0f395db85&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi!
&lt;/p&gt;
&lt;p&gt;
Thank you, it's definitely something to begin with. I would suggest to make it a repository, though. Gists are nice for fast prototyping of documents but they lack pull requests support. Sure, what's happening it's totally unofficiall but I still believe this work could be used somehow later on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>seancjones</dc:creator>

      <pubDate>Fri, 03 Mar 2017 19:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:119/1488569647055358</guid>
      <description>&lt;p&gt;
@jdgrimes Great document! I modified it, hope you don't mind. It's in a Gist. Feel free to fork and make any changes. If you recommend a better location I'll put it there.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/smcjones/6a46957b6a89568243350ac0f395db85"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/smcjones/6a46957b6a89568243350ac0f395db85&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note:
&lt;/p&gt;
&lt;p&gt;
I reference colors in the gift. This is related to the thought I have below. It seems to make sense to put this in the dashboard and provide the UX folks with information like recommended PHP version. Because a picture is worth a thousand words, I believe color coding would be very helpful. Just to throw out some - maybe bad ideas as I know there is color blindness out there:
&lt;/p&gt;
&lt;p&gt;
Green - Good - display positive message, you are up-to-date (WordPress recommended minimum version)
Yellow - OK - display cautious message: could be better, but not the end of the world (PHP supported version)
Red - Danger! - display urgent message: Upgrade version ASAP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Revelation‏.png attached to Ticket #22363</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Fri, 03 Mar 2017 18:17:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22363/Revelation%E2%80%8F.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22363/Revelation%E2%80%8F.png/1488565020817577</guid>
      <description>&lt;p&gt;
Another file with special (hidden) character
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40020 (Customizer fails to load in Safari due to X-Origin Header mismatch) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 03 Mar 2017 18:04:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40020#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40020#comment:1/1488564252536737</guid>
      <description>&lt;p&gt;
Hey there, thanks for your report!
&lt;/p&gt;
&lt;p&gt;
This sounds like a duplicate of &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39128" title="#39128: defect (bug): Customize: Preview fails to load when domain mapping in use ... (assigned)"&gt;#39128&lt;/a&gt;. Can you verify that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40022 (Too much data in wp_options entry where option_name = 'cron' drags down WP) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 03 Mar 2017 18:02:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40022#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40022#comment:4/1488564131929786</guid>
      <description>&lt;p&gt;
In this case, a plugin misbehaved and created a huge cron option. That's not that different to a plugin bloating up the posts table or another option in the database, IMHO.
&lt;/p&gt;
&lt;p&gt;
If you want to "fix" it for cron specifically, I'd suggest going with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15148" title="#15148: enhancement: Cron Storage Abstraction (closed: wontfix)"&gt;#15148&lt;/a&gt; or something like Cavalcade.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40026 (Image Uploading and Resizing) created</title>
      
        <dc:creator>khenkel</dc:creator>

      <pubDate>Fri, 03 Mar 2017 17:57:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40026</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40026/1488563869204112</guid>
      <description>&lt;p&gt;
When uploading an image, the link to edit the image is available but when trying to resize the numbers in the selection fields display NaN. Also unable to actually crop or scale the image. Once the image has been uploaded and you return to the image it is then able to be edited.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39206 (Replace `is_super_admin()` with `current_user_can( 'manage_options' )` ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 03 Mar 2017 17:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39206#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39206#comment:8/1488563404392520</guid>
      <description>&lt;p&gt;
I'd prefer a &lt;code&gt;setup_network&lt;/code&gt; meta capability (handled in &lt;code&gt;map_meta_cap()&lt;/code&gt;) which maps to the logic you mentioned.
&lt;/p&gt;
&lt;p&gt;
Needs a patch, and the cap needs adding to &lt;code&gt;Tests_User_Capabilities::_getSingleSiteMetaCaps()&lt;/code&gt; and &lt;code&gt;Tests_User_Capabilities::_getMultiSiteMetaCaps()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customize-bug.png attached to Ticket #40025</title>
      
        <dc:creator>gandham</dc:creator>

      <pubDate>Fri, 03 Mar 2017 17:15:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40025/customize-bug.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40025/customize-bug.png/1488561329003026</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40025 (Customer checkbox control is checked when the default value is false.) created</title>
      
        <dc:creator>gandham</dc:creator>

      <pubDate>Fri, 03 Mar 2017 17:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40025</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40025/1488561084391056</guid>
      <description>&lt;p&gt;
If we set the default value of the setting as boolean  false, not "false", checkbox on the customiser is checked.
If I set the default value to 0, it is working as expected.
&lt;/p&gt;
&lt;p&gt;
Should a boolean false be treated as false?
&lt;/p&gt;
&lt;p&gt;
Customiser saves the false value as 0 and true value as 1, when actually saving to the db.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39973 (Adding playbuzz.com as an oEmbed provider) updated</title>
      
        <dc:creator>playbuzz</dc:creator>

      <pubDate>Fri, 03 Mar 2017 16:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39973#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39973#comment:2/1488558103913378</guid>
      <description>&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Is the service popular enough for core developers to have heard of it before? Is it “mainstream?”&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Playbuzz is indeed a mainstream platform: Playbuzz-powered content is published regularly on over 13,000+ of our editorial partners’s sites, including: CNBC, The Huffington Post, The Telegraph, MTV, Sports Illustrated, Sky Sports, USA Today and many more. Commercial partners, for sponsored content campaigns, include: Unilever, Clinique, Walgreens, Samsung, Halifax, Ford, American Express and many more. Our content creators community consists of over 100k creators, and monthly traffic to our website is at 20 million visits.
&lt;/p&gt;
&lt;p&gt;
Playbuzz is the winner of Digiday Europe’s &lt;a class="ext-link" href="http://digiday.com/awards/financial-times-publisher-year-digiday-awards-europe/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Best Publishing Platform and Best Brand Platform 2016&lt;/a&gt;, and is featured regularly on leading technology and business publications, such as &lt;a class="ext-link" href="https://techcrunch.com/2016/08/05/playbuzz-impact/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TechCrunch&lt;/a&gt;, Business Insider, &lt;a class="ext-link" href="http://mashable.com/2014/10/08/playbuzz-buzzfeed/#33uvO5SbksqY"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Mashable&lt;/a&gt;, &lt;a class="ext-link" href="http://blogs.wsj.com/digits/2016/03/31/disney-saban-invest-in-content-platform-maker-playbuzz/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;The Wall-Street Journal&lt;/a&gt; and more.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;If similar services are already supported, how does this service compare in terms of size, features, and backing?&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Playbuzz is currently the leading authoring platform for interactive content, offering users a toolset of over a dozen different interactive storytelling tools. Content items created using the Playbuzz platform can be translated to over 40 languages, and combine video, text and visual features in order to deliver a compelling message to online readers worldwide. The company operates offices in 7 different locations, including the US, UK, China, Russia and Israel.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Does this service have a large following on Twitter, Facebook, or other social media?  Is its Twitter account verified?&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The Playbuzz twitter account is indeed verified. Between our B2C and B2B channels (Facebook and Twitter), we have over 2.5 million followers on Facebook, and reach over 112k people on Twitter. In addition, Playbuzz content was &lt;a class="ext-link" href="https://www.newswhip.com/2015/02/the-biggest-facebook-publishers-of-january-2015/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the most shared on Facebook&lt;/a&gt; in 2015.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Is its oEmbed endpoint clearly established and properly documented? (Sometimes, they are just a developer’s pet project that may not be supported.)&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The oEmbed service was established a couple of years ago, and is being used ever since. Please find the documentation &lt;a class="ext-link" href="https://publishers.playbuzz.com/academy/how_to/how-to-use-playbuzz-wordpress-oembed/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Does the oEmbed endpoint work with WordPress’ oEmbed auto-discovery? If not, could it be made to work with additional HTML tags or attributes being whitelisted?&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
No, the oEmbed endpoint does not work with the WordPress’ auto-discovery. Playbuzz does not fit the type of content that can be embedded via non-whitelisted sites, such as links, blockquotes, and iframes.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Does the service make an effort to build relationships with developers, such as through robust APIs?&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The Playbuzz community consists of developers, creators and designers who seek out new ways to improve the content they create. Our community managers maintain a close relationship with users, and invite them to be the first to try new features. In addition, Playbuzz organizes and hosts meetups for developers in the company’s office in Tel Aviv on a regular basis.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;How old is the service?&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Playbuzz was founded in 2012 and released its product soon after.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Does it have a well-established Wikipedia article? (Seriously.)&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Please find the Playbuzz Wikipedia page &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Playbuzz"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Has anyone written a WordPress plugin that leverages the service in some way, whether adding it as an oEmbed provider, creating a shortcode, or leveraging other APIs of the service? Do these plugins have any noticeable adoption or traction that would indicate usage and demand?&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The Playbuzz WordPress plugin supports oEmbed, with over 5000 downloads and a rapidly growing awareness and popularity among Playbuzz partners, partially as a result of Playbuzz’s efforts to promoting the adoption of the Wordpress plugin.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Is the provider frequently proposed?&lt;/strong&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Unknown.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40022 (Too much data in wp_options entry where option_name = 'cron' drags down WP) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Mar 2017 15:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40022#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40022#comment:3/1488556689180244</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15148" title="#15148: enhancement: Cron Storage Abstraction (closed: wontfix)"&gt;#15148&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40024 (Include CPT archives in the menu cutomizer) created</title>
      
        <dc:creator>eclare</dc:creator>

      <pubDate>Fri, 03 Mar 2017 15:35:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40024</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40024/1488555325926050</guid>
      <description>&lt;p&gt;
If we create a new Custom Post Type and go to the menu customizer, we can insert links to particular posts of that type.
&lt;/p&gt;
&lt;p&gt;
What we can't easily do is insert a link to the Custom Post Type archive page.
&lt;/p&gt;
&lt;p&gt;
Example: we create a Movies CPT. We want to add a link to the list (archive) of all Movies to the menu. We can't do that unless we use the custom URL field (and the URL is not provided anywhere in the admin panel, only in the CPT registering code itself).
&lt;/p&gt;
&lt;p&gt;
Enhancement needed: add a section which lets you link to archive pages for CPTs.
&lt;/p&gt;
&lt;p&gt;
Suggested name for the box: "Content archives" or "Custom content archives".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40022 (Too much data in wp_options entry where option_name = 'cron' drags down WP) updated</title>
      
        <dc:creator>yannielsen</dc:creator>

      <pubDate>Fri, 03 Mar 2017 15:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40022#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40022#comment:2/1488555261659847</guid>
      <description>&lt;p&gt;
Thank you @pothi :-) I'm considering just coding this "right away" if noone else is working on it and if it's deemed to be a good idea :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40022 (Too much data in wp_options entry where option_name = 'cron' drags down WP) updated</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Fri, 03 Mar 2017 15:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40022#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40022#comment:1/1488555114490145</guid>
      <description>&lt;p&gt;
Welcome to WP core trac.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
if it was an idea to implement a mechanism to split up the 'cron' entry into multiples when passing a threshold?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Of course.
&lt;/p&gt;
&lt;p&gt;
Probably, WP could get some inspiration from &lt;a class="ext-link" href="https://github.com/humanmade/Cavalcade"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/humanmade/Cavalcade&lt;/a&gt; .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40023 (Include CPT &amp; term archives in the inline link insert search field) created</title>
      
        <dc:creator>eclare</dc:creator>

      <pubDate>Fri, 03 Mar 2017 15:26:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40023</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40023/1488554778026583</guid>
      <description>&lt;p&gt;
When we insert a link using the inline modal, we can search for pages, posts &amp;amp; custom post type pages.
&lt;/p&gt;
&lt;p&gt;
What the search feature of this field does NOT find is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Custom Post Type archive pages (like "movies" for a Movie CPT, with a list of all movies)
&lt;/li&gt;&lt;li&gt;term archive pages (like "Horror" for a normal post category or for a custom post type category)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The most common scenario: user wants to link to a category page. The link modal doesn't suggest it.
&lt;/p&gt;
&lt;p&gt;
Enhancement needed: the search feature of the add link field should also suggest CPT archives &amp;amp; term archives.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 03 Mar 2017 15:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:118/1488553536717441</guid>
      <description>&lt;p&gt;
I two more thoughts on this last night:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Building docs and possibly adding a notice eventually is something that is going to need input from the UX team or whoever can help us do usertests. Sometimes it is hard for us to really know how a user is going to respond to something like that in real life. Non-devs will need to be heavily involved.
&lt;/li&gt;&lt;li&gt;As far as time based vs percentage based in terms of deciding when to update, I don't support an entirely percentage-based approach. Of course, the percentage does need to be taken into account, but I think that a time factor has to be there as well, and here is why. If we just say, for the sake of example, that we're going to drop support once a version reaches 5% usage, then we are basically always going to be leaving approximately the last 5% of users on an unsupported version. Even if everybody is more proactive about staying up to date, that just means that we get to 5% quicker. Some people will still come in last, even if they aren't taking years to update. That's why there needs to be a deadline component. If we set a date 6 months or a year ahead of time, that gives everybody enough time that potentially when the deadline comes there is nobody still running that version. I realize that won't actually happen, but you get the general idea. A large number of that 5% is given a better chance of getting updated in time, probably by their hosts, and never even having to deal with this.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So basically, I'd recommend something similar to @Sobak: once we approach 5% (or whatever number), we should set a date 3 releases into the future. Maybe during that first release cycle, we are basically just giving hosts a chance to get their users updated so that the users themselves never have to deal with it. When the second release comes around, we will have it begin warning users about the impending requirement update. (Actually, depending on how the infrastructure is built, this wouldn't necessarily have to coincide with a release, I guess. But it does make sense to tell users, "get ready for the next version of WordPress.") Then in the third release, the requirement would officially be upped, and new features could be introduced in that release that required newer PHP features.
&lt;/p&gt;
&lt;p&gt;
If we started work on this now, we could try to up the requirement in WordPress 5.0, which has a nice ring to it even if WordPress doesn't follow semantic versioning.
&lt;/p&gt;
&lt;p&gt;
However, what percentage to actually use is the question. Given about 60 million WordPress installs (the number quoted on the homepage), 5% = 3 million people. However, based on &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:88" title="Comment 88"&gt;the numbers that @dd32 shared above&lt;/a&gt;, we know that the latest 4 versions of WordPress (4.4-4.7), likely represent about half of that right now. These are the people who are the most likely to actually update WordPress in the next year or so, and they are a full 3/4 of all WordPress users. Of that majority of users who mostly haven't abandoned their sites then, that 5% actually becomes just 1.5 million people. But wait, the percentage for those newer versions isn't 5%. 4.4 was the first version that came in under that, about 4.75%. 4.7 is at ~2.5%. So we are talking about something like 3.5-4% of these users here. Which comes out to closer to just 1 million installs. Yes, that is still a lot, but remember that it is actually less than 1.75% of all WordPress installs. That is the percentage of WordPress users who are likely going to actually want to update in the near future and not be able to due to their PHP version, assuming that we dropped PHP 5.2 &lt;em&gt;today&lt;/em&gt;. But say that it takes us about a year? The total number of installs on PHP 5.2 will only be about 3.3% then. (Yes, I keep track of all this with equations and graphs. :-) That's about 2 million total installs, which would come out to something like 500k installs in the latest 4 versions at that time, the ones where most users are going to update from. Which will be something like 0.8% of WordPress's total userbase.
&lt;/p&gt;
&lt;p&gt;
500k is a big number. But I don't think it is unreasonable. In fact, I'd say that if we set a date now (like WP 5.0), and communicate that to hosts, it might end up being significantly lower by the time we feel like we need to begin actively trying to educate the affected users about the situation.
&lt;/p&gt;
&lt;p&gt;
As others have mentioned, I think that ideally the ultimate goal would be to get to a place where we only support non-EOL PHP versions. That isn't going to happen overnight, obviously, and for the next few years, maybe even 5, we'll have to just drop EOL versions one by one. But eventually though, we should get to the place where there are few enough users using EOL versions that we are comfortable switching to a PHP version support routine that is based on PHP's schedule. The PHP release schedule seems generous enough on its own that at that point it should give users and hosts sufficient time to update as each version approaches EOL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40022 (Too much data in wp_options entry where option_name = 'cron' drags down WP) created</title>
      
        <dc:creator>yannielsen</dc:creator>

      <pubDate>Fri, 03 Mar 2017 14:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40022</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40022/1488550971704153</guid>
      <description>&lt;p&gt;
Recently I experienced an installation running on a Cloud Server with 10GB RAM, 4 CPU cores being dragged down because of a plugin 'malfunctioning' with cron events.
&lt;/p&gt;
&lt;p&gt;
The plugin created excessive amounts of extra entries in wp_options entry where option_name = 'cron' resulting in a 15,4MB entry in the table.
&lt;/p&gt;
&lt;p&gt;
It wasn't a "endless loop"-error that suddenly resulted in it. It had gone unnoticed for quite some time before it got to the point where the server timed out because the requests to the database simply became too slow.
&lt;/p&gt;
&lt;p&gt;
The plugin should ofcourse not be doing that, but it got me wondering if it was an idea to implement a mechanism to split up the 'cron' entry into multiples when passing a threshold?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 03 Mar 2017 12:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:13/1488545697388538</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38922#comment:11" title="Comment 11"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The extra response size seems like something we can live with until &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38131" title="#38131: enhancement: REST API: Provide interface to include or exclude specific fields from ... (closed: fixed)"&gt;#38131&lt;/a&gt; is done.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds fine waiting and agree we will need this functionality repeatedly. I added the patch for consideration and to demonstrate how to filter the response.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39909 (Make title behaviours consistent across all widgets on first load) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 03 Mar 2017 11:40:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39909#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39909#comment:2/1488541246064733</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39909#comment:1" title="Comment 1"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@karmatosed what do you think about updating each widget to have a &lt;code&gt;placeholder&lt;/code&gt; in each of their “Title” inputs if there is a default title that gets rendered in the preview? This would be a quick win.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quick wins are 👍 I agree in hindsight lets not add a backwards-incompatible change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40021 (Empty p tags when adding multiple consecutive shortcodes in the editor.) updated</title>
      
        <dc:creator>kmgalanakis</dc:creator>

      <pubDate>Fri, 03 Mar 2017 10:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40021#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40021#comment:1/1488535876984522</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40021 (Empty p tags when adding multiple consecutive shortcodes in the editor.) created</title>
      
        <dc:creator>kmgalanakis</dc:creator>

      <pubDate>Fri, 03 Mar 2017 10:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40021</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40021/1488535769925295</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Steps to reproduce&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a simple shortcode in your &lt;code&gt;functions.php&lt;/code&gt; file.
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;dummy_div_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$atts&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;div&amp;gt;Lorem ipsum dolor sit amet.&amp;lt;/div&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_shortcode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'dummy-div'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'dummy_div_handler'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;Add the &lt;code&gt;[dummy-div][dummy-div]&lt;/code&gt; shortcodes to a new page using either the Visual or the Text editor.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The markup that is outputted on the browser is
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;&amp;lt;div&amp;gt;Lorem ipsum dolor sit amet.&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;Lorem ipsum dolor sit amet.&amp;lt;/div&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
which clearly is invalid. The browser processes the page source and transforms those  &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; tags to empty &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags by adding the missing opening or closing tag, so the resulting markup is something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;div&amp;gt;Lorem ipsum dolor sit amet.&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;Lorem ipsum dolor sit amet.&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 03 Mar 2017 07:53:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:12/1488527622986774</guid>
      <description>&lt;p&gt;
@adamsilverstein @jnylen0 thanks, I totally trust your judgment since you're the experts here :) As a non-expert, I think solving the general issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38131" title="#38131: enhancement: REST API: Provide interface to include or exclude specific fields from ... (closed: fixed)"&gt;#38131&lt;/a&gt; make sense though.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The extra response size seems like something we can live with until &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38131" title="#38131: enhancement: REST API: Provide interface to include or exclude specific fields from ... (closed: fixed)"&gt;#38131&lt;/a&gt; is done.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, after all, in this specific case with tags, the size difference is pretty small. However, in other cases it's potentially huge. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38920" title="#38920: enhancement: Use REST API for link query in editor (new)"&gt;#38920&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Fri, 03 Mar 2017 07:49:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:8/1488527362877366</guid>
      <description>&lt;p&gt;
okey
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39888#comment:7" title="Comment 7"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Tickets are fixed when a commit is made to WordPress trunk.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Mar 2017 07:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:7/1488525426161642</guid>
      <description>&lt;p&gt;
Tickets are fixed when a commit is made to WordPress trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Fri, 03 Mar 2017 07:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:6/1488525255820617</guid>
      <description>&lt;p&gt;
@SergeyBiryukov  could you set props for this bug. If it is fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>Sobak</dc:creator>

      <pubDate>Fri, 03 Mar 2017 06:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:117/1488523132797110</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:111" title="Comment 111"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm really not sure what many of the comments here are about, but they don't seem to be about coming up with a strategy for upgrading the minimum version of PHP.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I hope @jdgrimes explained reason for such impression. To me, it looks like people were waiting to see actual arguments and feedback from the core developers and it's great it happened!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing that I think predates implementing any sort of process is coming up with some user level educational materials about 1) What PHP (and for that matter, MySQL and other server technologies) are 2) Why new versions are important and 3) How to go about upgrading. I would love to see someone step up and own the creation of that matterial.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Absolutely fair point. I propose to make it open and collaborative effort, perhaps using GitHub.
&lt;/p&gt;
&lt;p&gt;
If you are asking for suggested strategies and concrete ideas, here are mine.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Start joint effort on educational materials which would be linked from the dashboard.
&lt;/li&gt;&lt;li&gt;Revive &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23880" title="#23880: feature request: Minimum PHP version in Plugins (closed: duplicate)"&gt;#23880&lt;/a&gt; to improve UX. Personally, I think it would be good to contact guys working on &lt;a class="ext-link" href="https://github.com/Yoast/whip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Yoast whip package&lt;/a&gt; to make use of their ideas and also make sure the work isn't duplicated without a need.
&lt;/li&gt;&lt;li&gt;When looking at PHP 5.2 (or any other PHP version) usage metrics, focus on last two major releases of WordPress. People running older versions probably just abandoned their installs.
&lt;/li&gt;&lt;li&gt;I wasn't able to find out much about WordPress release process so I don't know if there is any strict scheudle for releasing new major versions and how often it happen. For now, let me suggest three major releases cycle (so it results in about the one year if I'm not mistaken). First release to just inform people that WordPress is looking for new possibilities and improvements and thus they should know what the hell that PHP is and why running old version is bad for them. Second release to inform that it's last branch (in terms of software management) compatible with their current environment (provided with educational materials, of course) and third release to actually bump the requirements.
&lt;/li&gt;&lt;li&gt;Bump to PHP 5.3. When it comes to further updates strategy, I think 5% of versions share (across two most recent WP releases) is safe time to start that three-releases cycle I talked about. Probably it's still more tolerant than what most software does so hopefully it would fit WordPress philosophy of putting user first (which I absolutely agree with, to be clear)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Looking forward to hear your (and others) opinion on that! Thank you for your efforts of finding a consensus.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>CyberCr33p</dc:creator>

      <pubDate>Fri, 03 Mar 2017 06:13:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:116/1488521607195810</guid>
      <description>&lt;p&gt;
In my country we say: You can't make an omelette without breaking eggs. But you don't need to break many eggs in this case.
&lt;/p&gt;
&lt;p&gt;
Most servers running old PHP versions use old and outdated OS version. I am sure that the wordpress versions running in these machines are old too. Most users with old wordpress versions don't know or don't care for security and they will stay in the same old wordpress version for ever (or until someone hacks them).
&lt;/p&gt;
&lt;p&gt;
To show a message in dashboard to notify for upgrading php will not help these users either, because to see the message they need to have a newer wordpress version that supports auto-updates.
&lt;/p&gt;
&lt;p&gt;
In fewer words, if you change the minimum php version it will not case any trouble to most people with old wordpress versions.
&lt;/p&gt;
&lt;p&gt;
Also someone that doesn't upgrade wordpress and plugins (and any other CMS) is a security threat for all the internet users (spam, phishing, ddos, etc).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40014 (&amp; converted to '#038) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 03 Mar 2017 05:01:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40014#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40014#comment:3/1488517314822328</guid>
      <description>&lt;p&gt;
For me its absolutely fine with "Plain" in permalink settings as well.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://prnt.sc/efe2rp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://prnt.sc/efe2rp&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38280.5.diff attached to Ticket #38280</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 03 Mar 2017 04:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38280/38280.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38280/38280.5.diff/1488515447789598</guid>
      <description>&lt;p&gt;
Updated patch adds another meta key for tracking the object types that were counted. Also removes all previously counted object types each time to prevent abandoned meta keys.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 03 Mar 2017 04:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:11/1488514952534218</guid>
      <description>&lt;p&gt;
I would prefer that we solve the general case in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38131" title="#38131: enhancement: REST API: Provide interface to include or exclude specific fields from ... (closed: fixed)"&gt;#38131&lt;/a&gt; instead of adding special logic based on &lt;code&gt;$_GET['action']&lt;/code&gt;.  That logic isn't very RESTful and I foresee hundreds of other special cases appearing for wp-admin usage if we're not careful.
&lt;/p&gt;
&lt;p&gt;
The extra response size seems like something we can live with until &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38131" title="#38131: enhancement: REST API: Provide interface to include or exclude specific fields from ... (closed: fixed)"&gt;#38131&lt;/a&gt; is done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39932 (`get_terms()` with `name` and without `taxonomy` generates warning) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 03:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39932#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39932#comment:2/1488510100363927</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40147" title="Taxonomy: When querying terms, ensure `$taxonomies` is an array.
This ..."&gt;40147&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: When querying terms, ensure &lt;code&gt;$taxonomies&lt;/code&gt; is an array.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This avoids PHP notices that otherwise arise when no &lt;code&gt;taxonomy&lt;/code&gt;&lt;br /&gt;
parameter is passed to &lt;code&gt;get_terms()&lt;/code&gt; or &lt;code&gt;WP_Term_Query&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dlh.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39932" title="#39932: defect (bug): `get_terms()` with `name` and without `taxonomy` generates warning (closed: fixed)"&gt;#39932&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40147]: Taxonomy: When querying terms, ensure `$taxonomies` is an array.  This ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 03:01:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40147</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40147/1488510099908552</guid>
      <description>&lt;p&gt;
Taxonomy: When querying terms, ensure &lt;code&gt;$taxonomies&lt;/code&gt; is an array.
&lt;/p&gt;
&lt;p&gt;
This avoids PHP notices that otherwise arise when no &lt;code&gt;taxonomy&lt;/code&gt;
parameter is passed to &lt;code&gt;get_terms()&lt;/code&gt; or &lt;code&gt;WP_Term_Query&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dlh.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39932" title="#39932: defect (bug): `get_terms()` with `name` and without `taxonomy` generates warning (closed: fixed)"&gt;#39932&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39932 (`get_terms()` with `name` and without `taxonomy` generates warning) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 03:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39932#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39932#comment:1/1488510031334372</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, I think this is right. Previously, it wasn't possible to query for terms without passing a taxonomy, so this problem never really arose in the past.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34545 ('parent_item' taxonomy label should be used in tag edit form) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 02:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34545#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34545#comment:3/1488509614908001</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40146" title="Taxonomy: Improve 'Parent' label when editing taxonomy terms.
Instead ..."&gt;40146&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Improve 'Parent' label when editing taxonomy terms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Instead of the hardcoded 'Parent', use the &lt;code&gt;parent_item&lt;/code&gt; label.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props abrain, dlh.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34545" title="#34545: enhancement: 'parent_item' taxonomy label should be used in tag edit form (closed: fixed)"&gt;#34545&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40146]: Taxonomy: Improve 'Parent' label when editing taxonomy terms.  Instead ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 02:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40146</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40146/1488509614445540</guid>
      <description>&lt;p&gt;
Taxonomy: Improve 'Parent' label when editing taxonomy terms.
&lt;/p&gt;
&lt;p&gt;
Instead of the hardcoded 'Parent', use the &lt;code&gt;parent_item&lt;/code&gt; label.
&lt;/p&gt;
&lt;p&gt;
Props abrain, dlh.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34545" title="#34545: enhancement: 'parent_item' taxonomy label should be used in tag edit form (closed: fixed)"&gt;#34545&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39984 (wp_insert_term can return wrong ID when multiple existing terms are ...) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 02:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39984#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39984#comment:6/1488509354107424</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40145" title="Taxonomy: Take 'parent' into account when checking for terms with ..."&gt;40145&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Take 'parent' into account when checking for terms with duplicate names.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Terms with duplicate names are not allowed at the same level of a&lt;br /&gt;
taxonomy hierarchy. The name lookup introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34809" title="When creating terms, avoid false dupe checks due to accented ..."&gt;[34809]&lt;/a&gt; did not&lt;br /&gt;
properly account for the 'parent' parameter, with the result that&lt;br /&gt;
the duplicate-name restriction was tighter than intended (terms&lt;br /&gt;
with duplicate names could not be created at different levels of&lt;br /&gt;
a single hierarchy).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39984" title="#39984: defect (bug): wp_insert_term can return wrong ID when multiple existing terms are ... (closed: fixed)"&gt;#39984&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40145]: Taxonomy: Take 'parent' into account when checking for terms with ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 02:49:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40145/1488509353605219</guid>
      <description>&lt;p&gt;
Taxonomy: Take 'parent' into account when checking for terms with duplicate names.
&lt;/p&gt;
&lt;p&gt;
Terms with duplicate names are not allowed at the same level of a
taxonomy hierarchy. The name lookup introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34809" title="When creating terms, avoid false dupe checks due to accented ..."&gt;[34809]&lt;/a&gt; did not
properly account for the 'parent' parameter, with the result that
the duplicate-name restriction was tighter than intended (terms
with duplicate names could not be created at different levels of
a single hierarchy).
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39984" title="#39984: defect (bug): wp_insert_term can return wrong ID when multiple existing terms are ... (closed: fixed)"&gt;#39984&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39984 (wp_insert_term can return wrong ID when multiple existing terms are ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 02:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39984#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39984#comment:5/1488508750111439</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40144" title="Taxonomy: Improve precision of duplicate name checks when inserting ..."&gt;40144&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Improve precision of duplicate name checks when inserting terms.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_insert_term()&lt;/code&gt; does not allow for terms with the same name to exist&lt;br /&gt;
at the same hierarchy level, unless the second term has a unique slug.&lt;br /&gt;
When this logic was refactored in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31792" title="In `wp_insert_term()`, allow a term with an existing name if a unique ..."&gt;[31792]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34809" title="When creating terms, avoid false dupe checks due to accented ..."&gt;[34809]&lt;/a&gt;, a bug was&lt;br /&gt;
introduced whereby it was possible to bypass the no-same-named-sibling&lt;br /&gt;
check in cases where the first term had a non-auto-generated slug&lt;br /&gt;
(ie, where the name was 'Foo' but the slug something other than 'foo',&lt;br /&gt;
such that the second term would get the non-matching slug 'foo').&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This changeset fixes this issue by ensuring that the duplicate name&lt;br /&gt;
check runs both in cases where there's an actual slug clash *and* in&lt;br /&gt;
cases where no explicit &lt;code&gt;slug&lt;/code&gt; has been provided to &lt;code&gt;wp_insert_term()&lt;/code&gt;.&lt;br /&gt;
The result is a more reliable error condition:&lt;br /&gt;
&lt;code&gt;wp_insert_term( 'Foo' ... )&lt;/code&gt; will always fail if there's a sibling&lt;br /&gt;
'Foo', regardless of the sibling's slug.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39984" title="#39984: defect (bug): wp_insert_term can return wrong ID when multiple existing terms are ... (closed: fixed)"&gt;#39984&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40144]: Taxonomy: Improve precision of duplicate name checks when inserting ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 02:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40144</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40144/1488508749499893</guid>
      <description>&lt;p&gt;
Taxonomy: Improve precision of duplicate name checks when inserting terms.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_insert_term()&lt;/code&gt; does not allow for terms with the same name to exist
at the same hierarchy level, unless the second term has a unique slug.
When this logic was refactored in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31792" title="In `wp_insert_term()`, allow a term with an existing name if a unique ..."&gt;[31792]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34809" title="When creating terms, avoid false dupe checks due to accented ..."&gt;[34809]&lt;/a&gt;, a bug was
introduced whereby it was possible to bypass the no-same-named-sibling
check in cases where the first term had a non-auto-generated slug
(ie, where the name was 'Foo' but the slug something other than 'foo',
such that the second term would get the non-matching slug 'foo').
&lt;/p&gt;
&lt;p&gt;
This changeset fixes this issue by ensuring that the duplicate name
check runs both in cases where there's an actual slug clash *and* in
cases where no explicit &lt;code&gt;slug&lt;/code&gt; has been provided to &lt;code&gt;wp_insert_term()&lt;/code&gt;.
The result is a more reliable error condition:
&lt;code&gt;wp_insert_term( 'Foo' ... )&lt;/code&gt; will always fail if there's a sibling
'Foo', regardless of the sibling's slug.
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39984" title="#39984: defect (bug): wp_insert_term can return wrong ID when multiple existing terms are ... (closed: fixed)"&gt;#39984&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39984 (wp_insert_term can return wrong ID when multiple existing terms are ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 03 Mar 2017 02:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39984#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39984#comment:4/1488508290370395</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks, @mikejolley.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think it's important we allow multiple terms with same names under different parents.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, WP has always allowed this. This particular weird bug was introduced as part of a refactor in support of multibyte slugs. See &lt;a href="https://core.trac.wordpress.org/ticket/31328#comment:9"&gt;https://core.trac.wordpress.org/ticket/31328#comment:9&lt;/a&gt; and follow-up conversation, especially &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/31792" title="In `wp_insert_term()`, allow a term with an existing name if a unique ..."&gt;[31792]&lt;/a&gt;. (Prior to WP 4.2, this specific kind of bug didn't occur because we used &lt;code&gt;term_exists()&lt;/code&gt; instead of &lt;code&gt;get_term_by( 'name' )&lt;/code&gt;; &lt;code&gt;term_exists()&lt;/code&gt; would fall back on a slug check.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40000 (Alot of tickets continue to be created) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 03 Mar 2017 01:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40000#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40000#comment:18/1488506308783503</guid>
      <description>&lt;p&gt;
Alot of you make phenomenal points.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40014 (&amp; converted to '#038) updated</title>
      
        <dc:creator>fervillz</dc:creator>

      <pubDate>Fri, 03 Mar 2017 00:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40014#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40014#comment:2/1488499619863346</guid>
      <description>&lt;p&gt;
Hi @subrataemfluence,
&lt;/p&gt;
&lt;p&gt;
Hmm. Can you try to modify your &lt;strong&gt;Permalink Settings&lt;/strong&gt; to the default &lt;strong&gt;'Plain&lt;/strong&gt;' .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39854 (REST API: Add gmt_offset to base /wp-json response) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 02 Mar 2017 23:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39854#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39854#comment:14/1488498959727353</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unless someone disagrees with the approach here, we'll get it committed after the 4.7.3 release ships.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would prefer to see *everything*, especially "new" things committed to trunk for soak well in advance of 4.7.x merges, just to get extra testing of things prior to branch use - even though this is a small change, catching small discrepancies is hard if things get trunk commits delayed for any reason.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40000 (Alot of tickets continue to be created) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 23:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40000#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40000#comment:17/1488496932537493</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-bootstrap by sam. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-bootstrap/p1488496930288820"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>fightthecurrent</dc:creator>

      <pubDate>Thu, 02 Mar 2017 23:20:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:115/1488496841819420</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:111" title="Comment 111"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm really not sure what many of the comments here are about, but they don't seem to be about coming up with a strategy for upgrading the minimum version of PHP.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My proposal: no later than whenever a version of PHP gets EOL'd, regardless of user share. WordPress can potentially still run on older versions of PHP, but they wouldn't be officially supported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39981 (Multisite Domain Mapping doesn't work or not activated at all) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 02 Mar 2017 23:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39981#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39981#comment:6/1488496442616271</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 02 Mar 2017 23:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:114/1488496399048425</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:111" title="Comment 111"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm really not sure what many of the comments here are about, but they don't seem to be about coming up with a strategy for upgrading the minimum version of PHP. They aren't suggesting concrete plans for when the minimum version increases process should be triggered( Is it when we hit 1% of all sites?  0.5% of the last two major versions? something else?) or what that process should look like ( Is it a 2-year process, a 4 major release process, or something different? What are the steps of the process?).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, just about everything possible has probably already been proposed in very general terms. The reason why it keeps going in circles is that nothing that is suggested seems to gain any traction with core devs.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"Just do it" isn't a process and that level of hostility towards millions of users isn't something I'm comfortable with.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure anyone has really suggested that, and I think everybody applauds the fact that WordPress is putting users first. If it comes across otherwise, apologies.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One thing that I think predates implementing any sort of process is coming up with some user level educational materials about 1) What PHP (and for that matter, MySQL and other server technologies) are 2) Why new versions are important and 3) How to go about upgrading. I would love to see someone step up and own the creation of that matterial.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I 100% agree. I would point out though that this is a 180° turn-around from the previous stance, which seemed to be that users should never have to know anything about this technology. So I absolutely agree that we should revisit the admin notice idea with good docs for all of this in place. Here are &lt;a class="ext-link" href="http://wordpoints.org/user-guide/php-compatibility/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;some user docs regarding PHP&lt;/a&gt; that I recently wrote up for a plugin, in preparation for potentially upping the PHP version in the future. It is partly based on &lt;a class="ext-link" href="https://codex.buddypress.org/getting-started/buddypress-2-8-will-require-php-5-3/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;BuddyPress's docs&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 02 Mar 2017 23:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:113/1488496047301373</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:112" title="Comment 112"&gt;alexander.rohmann&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@jorbin Looks like we posted at around the same time. Thoughts on my previous comment? We seem to be trending on an idea. User education would be super valuable. It does risks putting outdated hosts in a bad spot because the curtain gets pulled back, but that might not be such a bad thing after all this time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A dashboard notice was considered in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9751" title="#9751: task (blessed): Add notice for users running PHP 4 (closed: wontfix)"&gt;#9751&lt;/a&gt; and while I was originally in favor, without a large amount of educational information (much more than could or should reasonably fit in a notice), it doesn't solve anything. It just becomes either a notice for users to ignore or if not worded really well, argumentum in terrorem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39981 (Multisite Domain Mapping doesn't work or not activated at all) closed</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 02 Mar 2017 23:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39981#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39981#comment:5/1488495762657084</guid>
      <description>invalid: &lt;p&gt;
Please don't shout. I did read that. That's not what I see on a clean install, unless I'm trying to edit the main site on the network.
&lt;/p&gt;
&lt;p&gt;
Which shouldn't be a question of 'mapping' because you don't map the primary domain on the network. If you're trying to map your primary domain, then that's why you can't edit it, and this is by design.
&lt;/p&gt;
&lt;p&gt;
You're not supposed to change the main domain of your network unless you seriously totally 10000% know what you're doing, because you could very easily break everything.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/network/site-info.php#L161"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/network/site-info.php#L161&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Multisite can be pretty dangerous. If you change the primary domain you need to use serialization safe search/replace.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Thu, 02 Mar 2017 22:57:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:112/1488495470446974</guid>
      <description>&lt;p&gt;
@jorbin Looks like we posted at around the same time. Thoughts on my previous comment? We seem to be trending on an idea. User education would be super valuable. It does risks putting outdated hosts in a bad spot because the curtain gets pulled back, but that might not be such a bad thing after all this time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 22:55:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:77/1488495343452515</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by enshrined. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488495340618218"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 02 Mar 2017 22:54:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:111/1488495274473581</guid>
      <description>&lt;p&gt;
I'm really not sure what many of the comments here are about, but they don't seem to be about coming up with a strategy for upgrading the minimum version of PHP. They aren't suggesting concrete plans for when the minimum version increases process should be triggered( Is it when we hit 1% of all sites?  0.5% of the last two major versions? something else?) or what that process should look like ( Is it a 2-year process, a 4 major release process, or something different? What are the steps of the process?).  "Just do it" isn't a process and that level of hostility towards millions of users isn't something I'm comfortable with.
&lt;/p&gt;
&lt;p&gt;
One thing that I think predates implementing any sort of process is coming up with some user level educational materials about 1) What PHP (and for that matter, MySQL and other server technologies) are 2) Why new versions are important and 3) How to go about upgrading. I would love to see someone step up and own the creation of that matterial.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Thu, 02 Mar 2017 22:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:110/1488495221133845</guid>
      <description>&lt;p&gt;
It's really nice to see some revived interest here. Thanks to everyone for chiming in.
&lt;/p&gt;
&lt;p&gt;
@seancjones Some great points about user experience. This also echoes some of @jdgrimes comment. If I was part of that 2.5%, I'd would gratefully welcome someone telling me that I'm paying a web host for 10yr old defunct technology. But it would seem we're more afraid of "punishing" them. Feels like an irresponsible enablement of ignorance at the expense of progress.
&lt;/p&gt;
&lt;p&gt;
How far would one friendly dashboard notice go?
&lt;/p&gt;
&lt;p&gt;
"Hey guy, you're on a really old PHP version. You should consider asking your host to upgrade. Read this article for more info"
&lt;/p&gt;
&lt;p&gt;
That's a pretty simple place to start without punishing the users, while lighting a fire under negligent hosts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <author>chris@…</author>

      <pubDate>Thu, 02 Mar 2017 22:26:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:109/1488493607244768</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:107" title="Comment 107"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One of WordPress's development philosophies is the 80% rule. Any feature that doesn't benefit 80% of users doesn't belong in core. While that is about user-facing features, can't we at least agree that the same type of logic really has to be applied here at some point?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately the corollary to that is that the 20% should be able to be made up by plugin developers and themers.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Right now we are holding the entirety of WordPress core hostage to 5% of users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I assume that the 5% means the 5.2 people, right? So were basically talking about using namespaces and anonymous functions in core files? That's really the two big changes between 5.2 and 5.3 (unless you count &lt;code&gt;goto&lt;/code&gt;) and doesn't really seem to be a deal breaker to me.
&lt;/p&gt;
&lt;p&gt;
All of my code targets PHP 7 unless I have a specific client request or I'm making an public plugin, so I personally want to up these numbers, too. But core's perspective is that those percentages, even if they seem small to us, actually turn into a lot of customers and those customers, in various manners, turn into dollars.
&lt;/p&gt;
&lt;p&gt;
Putting a PHP version check in a plugin in activation/load (since PHP versions can change on the fly) is probably the safest and easiest thing to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 02 Mar 2017 22:09:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:10/1488492565143694</guid>
      <description>&lt;p&gt;
@afercia in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38922/38922.3.diff" title="Attachment '38922.3.diff' in Ticket #38922"&gt;38922.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38922/38922.3.diff" title="Download"&gt;​&lt;/a&gt; I added a filter on &lt;code&gt;rest_prepare_post_tag&lt;/code&gt; to reduce the returned data. the result is the response size now matches the wp-ajax response. We can expand this filter if we want to include additional fields.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38922.3.diff attached to Ticket #38922</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 02 Mar 2017 22:06:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38922/38922.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38922/38922.3.diff/1488492403979561</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40007 (update_option function does not work if the $value argument is false ...) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 02 Mar 2017 21:59:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40007#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40007#comment:8/1488491941922448</guid>
      <description>&lt;p&gt;
Converting to &lt;code&gt;0(int)&lt;/code&gt; instead of &lt;code&gt;"0"(string)&lt;/code&gt; will result in a database write on every call, as all options are recorded as strings. The old and new value comparison becomes &lt;code&gt;0 === "0"&lt;/code&gt; and evaluates to false. (related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38903" title="#38903: defect (bug): Prevent `update_option()` from updating when the old and new values ... (closed: fixed)"&gt;#38903&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
A more robust solution would be to correctly cast the value before comparing old an new values.
&lt;/p&gt;
&lt;p&gt;
It's worth noting &lt;code&gt;add_option()&lt;/code&gt; will fail to store the value &lt;code&gt;false&lt;/code&gt; too. &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/option.php?marks=410-411#L410"&gt;ref&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>fightthecurrent</dc:creator>

      <pubDate>Thu, 02 Mar 2017 21:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:108/1488489007690984</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:107" title="Comment 107"&gt;jdgrimes&lt;/a&gt;:
👏 👏 👏 💯 🔥 🔥 🔥
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 02 Mar 2017 21:06:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:107/1488488817700673</guid>
      <description>&lt;p&gt;
Speaking of WordPress philosophies, I've had a thought on this that I've declined to voice up until now, but here it goes. One of WordPress's development philosophies is the 80% rule. Any feature that doesn't benefit 80% of users doesn't belong in core. While that is about user-facing features, can't we at least agree that the same type of logic really has to be applied here at some point? Right now we are holding the entirety of WordPress core hostage to 5% of users. Putting in so much effort to please a small number of users is silly, which is why the 80% rule exists. I think that if the average user knew that WordPress was putting a large amount of effort into not breaking 3% of user's sites, rather than building new features or fixing real bugs, they would be disgusted. Sure, everyone is pleased that we want the best for users, but building WordPress 20.5 to run on a PHP version that 5 sites are still hanging onto is ridiculous. Obviously, that isn't something that anybody is suggesting should happen here. The question this ticket is trying to resolve though, is what exactly &lt;em&gt;is&lt;/em&gt; going to happen? And until there is an actual discussion where the core devs are helping develop a strategy instead of saying  "not yet", many developers are going to remain frustrated. As pointed out above, if WordPress doesn't lead on this, forcing plugin authors to take the initiative, the developer community is going to fragment, and as a result UX is going to be degraded.
&lt;/p&gt;
&lt;p&gt;
So OK, maybe we're not going to come up with a 95% rule for PHP versions. Maybe we want to be more pragmatic here (and that's probably good). But it is very frustrating when there is no end in sight, when there doesn't even appear to be any desire to even begin the process of preparing to prepare core for this. For all we know, WordPress 20.5 &lt;em&gt;will&lt;/em&gt; still support PHP 5.2, because there seem to be no plans whatsoever to strategize actually updating the PHP version someday. It is almost as if we are hoping to ignore the problem and then it will go away. We know that isn't the intention, and that the goal is doing what is best for users. But we'd like some of the core devs to reconsider whether this is still the best thing for users at this point, or at what point continuing to support outdated PHP versions is no longer going to be the best thing for users. At some point it isn't anymore. I think everyone agrees on that. Somehow though, we're able to disagree about whether we should talk about when that point is, and how to prepare for it.
&lt;/p&gt;
&lt;p&gt;
Huh, when put that way, it is actually kind of humorous. :-)
&lt;/p&gt;
&lt;p&gt;
Actually though, after considering the recent replies to this ticket, a sort of strategy has been outlined, though it needs some polish:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Wait.
&lt;/li&gt;&lt;li&gt;Let plugins do the legwork.
&lt;/li&gt;&lt;li&gt;At some point, as yet undetermined, up core's requirement.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Others have already objected to different parts of this strategy, so I won't bother with that. I will say though, that if this is the way that we are going to go, then WordPress should encourage it by reducing pain for users as plugins start becoming incompatible. Otherwise this is pretty certainly &lt;em&gt;not&lt;/em&gt; the best experience for users. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23880" title="#23880: feature request: Minimum PHP version in Plugins (closed: duplicate)"&gt;#23880&lt;/a&gt; would seem to be a must.
&lt;/p&gt;
&lt;p&gt;
Also, even given that, it still doesn't invalidate the point of this ticket. WordPress core will still need to prepare to update, and still need to come up with some idea of when it will do that (IMO).
&lt;/p&gt;
&lt;p&gt;
Finally, I'd like to echo @fightthecurrent's reply to @johnbillion: we should also be strategizing when and how to EOL WordPress 3.7. The 80%-rule type logic applies there too. Backporting indefinitely risks bringing the development of new features to a complete halt. Not in the best interest of users. At some point we have to stop rewarding irresponsible users at the expense of responsible ones. It is just wrong. OK, they are really just ignorant. Then educate them. If they don't take action, then they are definitely irresponsible. Being irresponsible means that bad things happen sometimes. Like your site getting hacked. As others have said, it is called life. This isn't being callous, it is seeing a problem that will eventually place a drag on the entire project, and taking the initiative to inform the affected users so they can fix it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2017-03-02 at 12.42.39 PM.png attached to Ticket #40020</title>
      
        <dc:creator>nickkeenan</dc:creator>

      <pubDate>Thu, 02 Mar 2017 20:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40020/Screen%20Shot%202017-03-02%20at%2012.42.39%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40020/Screen%20Shot%202017-03-02%20at%2012.42.39%20PM.png/1488487561053145</guid>
      <description>&lt;p&gt;
Screenshot of Safari Console Error
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40020 (Customizer fails to load in Safari due to X-Origin Header mismatch) created</title>
      
        <dc:creator>nickkeenan</dc:creator>

      <pubDate>Thu, 02 Mar 2017 20:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40020</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40020/1488487528241448</guid>
      <description>&lt;p&gt;
Steps to Reproduce:
&lt;/p&gt;
&lt;p&gt;
1) Using Safari (10.0.3, possibly other recent versions)
2) Plugins disabled, using TwentySeventeen theme, and WP 4.7.2
3) This is a site where the &lt;strong&gt;home&lt;/strong&gt; and &lt;strong&gt;siteurl&lt;/strong&gt; slightly differ.  home is &lt;strong&gt;domain.com&lt;/strong&gt;, and siteurl is &lt;strong&gt;domain.com/wp&lt;/strong&gt;.
3) Open the Customizer.
&lt;/p&gt;
&lt;p&gt;
Result: Blank Customizer Frame, with console errors:
&lt;/p&gt;
&lt;p&gt;
[Error] Multiple 'X-Frame-Options' headers with conflicting values ('ALLOW-FROM &lt;a class="ext-link" href="http://archetype.gameflow.design/wp/wp-admin/customize.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://archetype.gameflow.design/wp/wp-admin/customize.php&lt;/a&gt;, SAMEORIGIN') encountered when loading '&lt;a class="ext-link" href="http://domain.com/?customize_changeset_uuid={{INSERT-UUID-HERE}}&amp;amp;customize_theme=twentyseventeen&amp;amp;customize_messenger_channel=preview-0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://domain.com/?customize_changeset_uuid={{INSERT-UUID-HERE}}&amp;amp;customize_theme=twentyseventeen&amp;amp;customize_messenger_channel=preview-0&lt;/a&gt;'. Falling back to 'DENY'.
&lt;/p&gt;
&lt;p&gt;
[Error] Refused to display '&lt;a class="ext-link" href="http://archetype.gameflow.design/?customize_changeset_uuid={{INSERT-UUID-HERE}}&amp;amp;customize_theme=twentyseventeen&amp;amp;customize_messenger_channel=preview-0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://archetype.gameflow.design/?customize_changeset_uuid={{INSERT-UUID-HERE}}&amp;amp;customize_theme=twentyseventeen&amp;amp;customize_messenger_channel=preview-0&lt;/a&gt;' in a frame because it set 'X-Frame-Options' to 'ALLOW-FROM &lt;a class="ext-link" href="http://archetype.gameflow.design/wp/wp-admin/customize.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://archetype.gameflow.design/wp/wp-admin/customize.php&lt;/a&gt;, SAMEORIGIN'.
&lt;/p&gt;
&lt;p&gt;
Potential Cause:
There are conflicting X-Frame-Headers which fallback to DENY in Safari 10.0.3.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp-includes/class-wp-customize-manager.php&lt;/code&gt; line 1599:
&lt;code&gt;public function filter_iframe_security_headers( $headers )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Conflicts with
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp-includes/functions.php&lt;/code&gt; line 5017:
&lt;code&gt;function send_frame_options_header()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Which is loaded on &lt;code&gt;default-filters.php&lt;/code&gt; on either &lt;code&gt;login_init&lt;/code&gt; or &lt;code&gt;admin_init&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40019 (wp_get_custom_css_post returns Post that are not Custom CSS CPTs) created</title>
      
        <dc:creator>starepod</dc:creator>

      <pubDate>Thu, 02 Mar 2017 20:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40019</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40019/1488486187052735</guid>
      <description>&lt;p&gt;
I'm not sure how it happened, but the Post ID for a standard Post was used as the value for custom_css_post_id in the theme-mods_themename option. Even though it is not a Custom CSS Post, it's content was filtered and returned as if it were.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38100 (Gallery Caption Filter) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 02 Mar 2017 20:21:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38100#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38100#comment:2/1488486068597279</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36270 (Allow filtering of the final HTML output of media related shortcodes) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 02 Mar 2017 20:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36270#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36270#comment:3/1488486026672846</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 20:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963#comment:3/1488485199298880</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by blobfolio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488485196610747"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39980 (Improve handling of image previews for non-image files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:56:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39980#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39980#comment:5/1488484606886759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488484604544031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:9/1488484497550686</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488484495532001"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:76/1488484256115654</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by blobfolio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488484253504565"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37840 (Optimize full size images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37840#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37840#comment:14/1488483574051507</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488483571430061"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37840 (Optimize full size images) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37840#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37840#comment:13/1488483546192356</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21819 (Avoid redundant crops for custom headers in the media library) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:38:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21819#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21819#comment:14/1488483531334567</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488483529424579"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36581 (Customizer Header Image Control should extend the cropped image control) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36581#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36581#comment:6/1488483405525768</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488483403409454"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39994 (Introduce Core Widget: Video) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:33:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39994#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39994#comment:3/1488483227400035</guid>
      <description>&lt;p&gt;
As I mentioned in the audio ticket (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39995" title="#39995: enhancement: Introduce Core Widget: Audio (closed: fixed)"&gt;#39995&lt;/a&gt;), the widget would ideally handle both a locally hosted video file along with videos from major hosting platforms like YouTube, Vimeo, and VideoPress. One this is split into a standalone widget, we should evaluate whether it makes sense to handle embedding from third-parties in v1 or wait for a v2.
&lt;/p&gt;
&lt;p&gt;
There's been previous exploration into embedding from third-party video services in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38172" title="#38172: task (blessed): Enable Video Headers in Custom Headers (closed: fixed)"&gt;#38172&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21295 (Retroactively generate new images sizes if requested) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21295#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21295#comment:22/1488482680146741</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488482677330081"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15311 (dynamic image resize (on the fly) using already available functions) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15311#comment:126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15311#comment:126/1488482680000483</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488482677330081"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39647 (Make media upload "HTTP error." more user-helpful) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:15:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39647#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39647#comment:6/1488482152249667</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488482149271376"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24251 (Reconsider SVG inclusion to get_allowed_mime_types) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:15:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24251#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24251#comment:75/1488482129208202</guid>
      <description>&lt;p&gt;
Wanted to mention a proof-of-concept plugin along these lines: &lt;a class="ext-link" href="https://github.com/Blobfolio/svgeez"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Blobfolio/svgeez&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@drrobotnik KSES is not fully XML-compliant nor extensible in the right ways to make it work with SVG. SVGeez employs DOMDocument-based parsing for environments supporting it, and a KSES-like fallback for those that don't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40017 (wp_get_image_mime() returns 'application/octet-stream' for non-image files.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 19:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40017#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40017#comment:2/1488481543507891</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by blobfolio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488481541203399"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40017 (wp_get_image_mime() returns 'application/octet-stream' for non-image files.) updated</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40017#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40017#comment:1/1488480970644480</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a patch, tweaked a little bit to match the coding style of nearby lines.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>exif.diff attached to Ticket #40017</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40017/exif.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40017/exif.diff/1488480925412637</guid>
      <description>&lt;p&gt;
Implements fix.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:52:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:9/1488480775617522</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38922#comment:5" title="Comment 5"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Worth noting the REST API response return by default &lt;em&gt;all&lt;/em&gt; the fields, even the ones that in this case are not needed,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a very good point, and something we are discussing supporting directly in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38131" title="#38131: enhancement: REST API: Provide interface to include or exclude specific fields from ... (closed: fixed)"&gt;#38131&lt;/a&gt;.  In the meantime, we could address the issue here using a filter (&lt;code&gt;rest_prepare_post_tag&lt;/code&gt;?) to reduce the returned fields to only those that we need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40018 (Customize: Selective refresh always falls back to full refreshes when ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40018#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40018#comment:1/1488480599361643</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The fix is simply to override any existing HTTP status with &lt;code&gt;200&lt;/code&gt; in the handler for partial refresh requests. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40018/40018.diff" title="Attachment '40018.diff' in Ticket #40018"&gt;40018.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40018/40018.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40018.diff attached to Ticket #40018</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40018/40018.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40018/40018.diff/1488480535741185</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40018 (Customize: Selective refresh always falls back to full refreshes when ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40018</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40018/1488480514050644</guid>
      <description>&lt;p&gt;
When a partial refresh request is made, if the response has an error code the partial will invoke its fall back behavior, normally resulting in a full refresh. A 404 status is considered an error code by the selective refresh JS, and so this means that attempting selective refresh on the 404 template will currently always result in the fallback behavior ensuing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>seancjones</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:42:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:106/1488480124152874</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:105" title="Comment 105"&gt;pcarvalho&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
how is dropping support a nightmare compared doing the backports to this 6/3/2 year old dead version of php? dropping support is to stop doing the fixes beyond 3.7 and version X for php.
&lt;/p&gt;
&lt;p&gt;
@fightthecurrent said it nicely: EOL is A-OK.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We don't even need to drop back compatibility for fixes, necessarily. It's more a matter of how this gets implemented and the policies surrounding it. If there is a larger issue about back compatibility becoming difficult, that's a separate can of worms, and, IMO, is not directly related to this. That process can either be revised or improved, and will be an issue if kept as-is, regardless or this decision. Likewise, it might be able to be made easier to backport to 3.7 and that could be the case regardless of a change in PHP version. I do not think the two issues should be conflated based on comments here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40017 (wp_get_image_mime() returns 'application/octet-stream' for non-image files.) created</title>
      
        <dc:creator>blobfolio</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40017</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40017/1488478830584392</guid>
      <description>&lt;p&gt;
In the newly-added function &lt;code&gt;wp_get_image_mime()&lt;/code&gt;, the following line should be split into two parts:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$mime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;image_type_to_mime_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;exif_imagetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;code&gt;exif_imagetype()&lt;/code&gt; will return &lt;code&gt;FALSE&lt;/code&gt; on failure.
&lt;code&gt;image_type_to_mime_type()&lt;/code&gt; will cast &lt;code&gt;FALSE&lt;/code&gt; as an integer, resulting in a response of "application/octet-stream" even for invalid files.
&lt;/p&gt;
&lt;p&gt;
Some EXIF types &lt;em&gt;are&lt;/em&gt; "application/octet-stream", so to differentiate between failures and merely strange formats, it would be better written like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'exif_imagetype'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$exif_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;exif_imagetype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$file&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$mime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;image_type_to_mime_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$exif_type&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$mime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>pcarvalho</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:105/1488478627403537</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:101" title="Comment 101"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:100" title="Comment 100"&gt;pcarvalho&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What would happen to them? nothing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "nothing" here is significant. Increasing the minimum required version of PHP would potentially result in hundreds of thousands of sites being "orphaned" on old versions of WordPress,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
sorry to say this, but that's the actual reality. not sure about the numbers, but there's a good bunch of wordpress sites lost in the wild with no updates. Pandering to these sleeping beauties makes no sense to me. Its to the "updated wordpress+old php" that need attention.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and the project would be left with a security fix back-compat nightmare which is worse than it is now (security fixes are currently backported to 3.7 when appropriate and it's becoming more difficult with every new release).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
how is dropping support a nightmare compared doing the backports to this 6/3/2 year old dead version of php? dropping support is to stop doing the fixes beyond 3.7 and version X for php.
&lt;/p&gt;
&lt;p&gt;
@fightthecurrent said it nicely: EOL is A-OK.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>fightthecurrent</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:104/1488478402888430</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:103" title="Comment 103"&gt;seancjones&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
It would be really nice if we could change the dialog to: How can we make the user experience better, supporting WordPress' core mission, while also addressing this PHP version issue in a constructive, conservative, and incremental way?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well said, @seancjones!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>seancjones</dc:creator>

      <pubDate>Thu, 02 Mar 2017 18:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:103/1488477914415184</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:93" title="Comment 93"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Plugins and Themes can require a higher version of PHP than what WordPress does. You do not have to support an outdated version of PHP or outdated install of WordPress&lt;/strong&gt; - I don't support anything older than PHP 5.4 and WordPress 4.4 at present, that's a choice I've made, and every time someone contacts me (at least once a week) asking why the plugin doesn't work for them, I explain that the detailed error message meant they need to contact their host, you can do that too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are a few different points of view here. Mine is that I 100% agree that users should come first - it's an awesome thing about WordPress. I love it, and it's what's made it so popular.
&lt;/p&gt;
&lt;p&gt;
Where I disagree with you is that what you're describing is a good user experience.
&lt;/p&gt;
&lt;p&gt;
Imagine for one second:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PHP 5.2.* user and 5.3.* user does not understand what PHP is, and just wants a website. Installs WordPress. Is very excited!
&lt;/li&gt;&lt;li&gt;Wants &lt;strong&gt;Tumblr Importer&lt;/strong&gt;. Is really excited to get images from Tumblr on their website.
&lt;/li&gt;&lt;li&gt;Plugin doesn't work. They get a detailed message explaining why it doesn't work, which they may or may not read/understand.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Putting myself in this user's shoes, if this happened for multiple plugins or themes, I would get frustrated. To make matters worse, each plugin developer has a different approach to handling this as there is no core solution in WordPress for declaring a PHP minimum version. This results in a truly terrible and confusing WordPress experience for the least technical people.
&lt;/p&gt;
&lt;p&gt;
I am not saying raising the PHP minimum version is the only answer. I am saying that it feels pretty obvious to me that we can do a lot better as a community to help users with outdated versions of PHP figure out why their WordPress install is running like a 1989 Chevy Nova without an oil change, and getting worse every day. This is one approach, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23880" title="#23880: feature request: Minimum PHP version in Plugins (closed: duplicate)"&gt;#23880&lt;/a&gt; is another.
&lt;/p&gt;
&lt;p&gt;
The arguments against doing something are compelling, but they assume that the only steps that can be taken would hurt the user experience and not help improve a bad one. It would be really nice if we could change the dialog to: How can we make the user experience better, supporting WordPress' core mission, while also addressing this PHP version issue in a constructive, conservative, and incremental way?
&lt;/p&gt;
&lt;p&gt;
And in a quick response to @johnbillion:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the project would be left with a security fix back-compat nightmare which is worse than it is now (security fixes are currently backported to 3.7 when appropriate and it's becoming more difficult with every new release).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it's already more difficult with every new release, is there a way to review this separate concern and apply those systems and structures to any upgrade decision? If you're already telling me that back-compat is tough, the status quo is going to become untenable in the future. Saying that is the reason not to upgrade PHP doesn't feel quite right to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>fightthecurrent</dc:creator>

      <pubDate>Thu, 02 Mar 2017 17:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:102/1488477088509654</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:101" title="Comment 101"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Increasing the minimum required version of PHP would potentially result in hundreds of thousands of sites being "orphaned" on old versions of WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll use a sweeping generalization here: every other open source project does this. And it's ok. Declaring EOL is a natural, healthy part of releasing software.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and the project would be left with a security fix back-compat nightmare which is worse than it is now (security fixes are currently backported to 3.7 when appropriate and it's becoming more difficult with every new release).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just like PHP has an EOL, WordPress can do the same. It's up to the user to keep their software up to date. Software is like food: if it sits for too long, it goes bad. The burden of responsibility lies on the user to clean out their fridge, not WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 02 Mar 2017 17:43:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:101/1488476600347004</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:100" title="Comment 100"&gt;pcarvalho&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What would happen to them? nothing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The "nothing" here is significant. Increasing the minimum required version of PHP would potentially result in hundreds of thousands of sites being "orphaned" on old versions of WordPress, and the project would be left with a security fix back-compat nightmare which is worse than it is now (security fixes are currently backported to 3.7 when appropriate and it's becoming more difficult with every new release).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>pcarvalho</dc:creator>

      <pubDate>Thu, 02 Mar 2017 17:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:100/1488476053266113</guid>
      <description>&lt;p&gt;
Hi everyone!
&lt;/p&gt;
&lt;p&gt;
One of the things i find weird is that some are suggesting that dropping support for dangerously old php versions is going against users.
&lt;/p&gt;
&lt;p&gt;
What would happen to them? nothing. At worst, these sites using php 5.2/3/4 and old wordpress versions will stay the same. If using latest version, they either upgrade php and wordpress or do nothing. Its their decision.
&lt;/p&gt;
&lt;p&gt;
Why is WordPress banking the debt for this? Are there any other open source projects that take this responsibility? All i see is: update or you're on your own.
&lt;/p&gt;
&lt;p&gt;
And what is being suggested here is: for those wp sites that are updated but using old php version, create a plan/documentation/support for them to upgrade. Its for their own good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39984 (wp_insert_term can return wrong ID when multiple existing terms are ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Thu, 02 Mar 2017 17:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39984#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39984#comment:3/1488476012057086</guid>
      <description>&lt;p&gt;
Yeah that sounds about right. It's hard to explain this one. I think it's important we allow multiple terms with same names under different parents. I'm not sure how we'd fix this in our API if it were disallowed :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>Sobak</dc:creator>

      <pubDate>Thu, 02 Mar 2017 17:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:99/1488475010380244</guid>
      <description>&lt;p&gt;
Exactly. Given enormous popularity of WordPress and thus scale of such migration, probably everyone is fully aware that it won't be matter of one month - let it be even a year (or more if it's justified), but apparently it can't be stressed enough - &lt;em&gt;let's come up with a plan&lt;/em&gt;. A scheudle. Declare PHP 5.2 version share which is acceptable for you, if you're uncomfortable with blindly sticking to a date. Anything what can actually be discussed and we could reasonably respond to.
&lt;/p&gt;
&lt;p&gt;
Repeating that it's &lt;em&gt;"too early"&lt;/em&gt; and refusing to make any decisions seems like pretending that there is not problem at all. It's far from being constructive, not so say it's immature.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 02 Mar 2017 17:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:61/1488474638360050</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12423#comment:48" title="Comment 48"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/html-editor-syntax-highlighter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;HTML Editor Syntax Highlighter&lt;/a&gt;, for content editor, also uses CodeMirror.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/advanced-code-editor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Advanced Code Editor&lt;/a&gt;, for theme and plugin file editing, also uses CodeMirror.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/syntax-highlighter-for-postpage-html-editor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Syntax Highlighter for Post/Page HTML Editor&lt;/a&gt;, also uses CodeMirror.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.org/plugins/syntax-highlighter-for-wp-editor/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Syntax Highlighter for WP Editor&lt;/a&gt;, CodeMirror yet again, for the theme and plugin file editors.
&lt;/li&gt;&lt;li&gt;Jetpack, as you know, uses CodeMirror for Custom CSS.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I use CodeMirror for just about everything in this plugin: &lt;a class="ext-link" href="https://wordpress.org/plugins-wp/scripts-n-styles/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins-wp/scripts-n-styles/&lt;/a&gt; and I'm willing to consult and contribute.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40016 (Twenty Seventeen: Nested comment replies don't indent properly) updated</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Thu, 02 Mar 2017 17:06:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40016#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40016#comment:2/1488474419889039</guid>
      <description>&lt;p&gt;
Hi @DougJoseph, thanks for ticket!
&lt;/p&gt;
&lt;p&gt;
I can't seem to reproduce this when I quickly tested. Can you test again with clean install and without any plugins?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>fightthecurrent</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:98/1488473982372912</guid>
      <description>&lt;p&gt;
And just so I'm not criticizing without action, my solution would be what @alexander.rohmann is suggesting: let's at least put a plan together. WordPress can't keep supporting 5.2 forever.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>fightthecurrent</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:97/1488473823034466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33381#comment:95" title="Comment 95"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it's not something that aligns with the WordPress philosophies and as such isn't something we'd do.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Philosophies can be amended, much like the Constitution. It's okay to say "We got this wrong the first time, here's an adjusted version of the philosophy."
&lt;/p&gt;
&lt;p&gt;
In any other field, if a professional is aware that a service they're providing has an inherent issue (in our case, no security updates for the last 6 years), they'd be liable for a a complaint being filed against them to an ethical board and potentially having their license censured or revoked, and potentially even legal action taken against them. &lt;strong&gt;WordPress is knowingly not encouraging users who aren't aware of security threats to continue to use a version of PHP that is not maintained or supported anymore which may lead to their site being compromised.&lt;/strong&gt; WordPress is the "authority" or "expert" in this situation and isn't taking measures to educate those users who are unaware there's an issue in the first place.
&lt;/p&gt;
&lt;p&gt;
This is &lt;em&gt;not&lt;/em&gt; putting the users first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39912 (Image empty alt attributes get stripped out when editing the image ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39912#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39912#comment:17/1488473686172789</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by sami.keijonen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1488473683418023"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29722 (wp_localize_script should be able to manage scalars) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29722#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29722#comment:16/1488473040449300</guid>
      <description>&lt;p&gt;
I added a &lt;a href="https://core.trac.wordpress.org/ticket/25280#comment:32"&gt;new patch on 25280&lt;/a&gt; that proposes adding a new helper that bundles the code and tests from the latest patch here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25280 (wp_localize_script unexpectedly converts numbers to strings) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:34:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25280#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25280#comment:32/1488472456968350</guid>
      <description>&lt;p&gt;
What about leaving &lt;code&gt;wp_localize_script&lt;/code&gt; as is for backward compatibility and introducing a new helper with better behavior?
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/25280/25280.3.diff" title="Attachment '25280.3.diff' in Ticket #25280"&gt;25280.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/25280/25280.3.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a new helper function for passing data from PHP to JS: &lt;code&gt;wp_pass_data_to_script&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Includes passing tests from this ticket and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29722" title="#29722: defect (bug): wp_localize_script should be able to manage scalars (new)"&gt;#29722&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Includes multidimensional array html entity decoding from &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29722" title="#29722: defect (bug): wp_localize_script should be able to manage scalars (new)"&gt;#29722&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40002 (Bump Akismet External - 4.7.x/4.8 Edition) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40002#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40002#comment:3/1488472086265431</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40016 (Twenty Seventeen: Nested comment replies don't indent properly) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:26:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40016#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40016#comment:1/1488471984551936</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>25280.3.diff attached to Ticket #25280</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25280/25280.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25280/25280.3.diff/1488471947220537</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40016 (Twenty Seventeen: Nested comment replies don't indent properly) created</title>
      
        <dc:creator>DougJoseph</dc:creator>

      <pubDate>Thu, 02 Mar 2017 16:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40016</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40016/1488471673627025</guid>
      <description>&lt;p&gt;
Hello. On the Twenty Seventeen theme, in the comments area, nested replies don't indent properly.
&lt;/p&gt;
&lt;p&gt;
The avatar indents, but the comment itself does not. This causes the comment to be partially covered up by the avatar.
&lt;/p&gt;
&lt;p&gt;
I have confirmed the behavior occurring both on the default theme page with two columns, and on a full-width theme page with one column.
&lt;/p&gt;
&lt;p&gt;
Below is a screenshot showing this issue in action:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://wvupci.org/wp-content/uploads/Screen-Shot-2017-03-02-at-11.13.33-AM.png"&gt;&lt;img src="http://wvupci.org/wp-content/uploads/Screen-Shot-2017-03-02-at-11.13.33-AM.png" alt="http://wvupci.org/wp-content/uploads/Screen-Shot-2017-03-02-at-11.13.33-AM.png" crossorigin="anonymous" title="http://wvupci.org/wp-content/uploads/Screen-Shot-2017-03-02-at-11.13.33-AM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>URL-string.png attached to Ticket #40014</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 15:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40014/URL-string.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40014/URL-string.png/1488469697861498</guid>
      <description>&lt;p&gt;
Neither Address bar not the Status bar has converted '&amp;amp;' to '&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38" title="#38: enhancement: More Better Options Regarding Authors (closed: invalid)"&gt;#038&lt;/a&gt;'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40014 (&amp; converted to '#038) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 15:46:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40014#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40014#comment:1/1488469593469848</guid>
      <description>&lt;p&gt;
Yes, the link you provided does change &lt;code&gt;&amp;amp;&lt;/code&gt; to &lt;code&gt;#038&lt;/code&gt; but for me it did not happen. I am using the similar code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo paginate_links(array(
   'total' =&amp;gt; $query-&amp;gt;max_num_pages,
   'format' =&amp;gt; 'page/%#%',
   'add_args' =&amp;gt; array( 'place' =&amp;gt; 1, 'type' =&amp;gt; 4),
));
&lt;/pre&gt;&lt;p&gt;
URLs still come up as &lt;code&gt;http://local.tourplanner.com/page/2?place=1&amp;amp;type=4&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Browser: Chrome
WP Version: 4.7.2
Theme: Custom (no child theme)
&lt;/p&gt;
&lt;p&gt;
Two differences between yours and mine are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;My site is still in localhost while yours is hosted
&lt;/li&gt;&lt;li&gt;I am using a theme built from scratch, no parent theme used, although I believe that should not make any difference in this case.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Screenshot attached. Neither Status bar nor the Address bar has converted &lt;code&gt;&amp;amp;&lt;/code&gt; to &lt;code&gt;#038&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 15:41:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963#comment:2/1488469297682569</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by blobfolio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488469295878031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40007 (update_option function does not work if the $value argument is false ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 15:07:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40007#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40007#comment:7/1488467250554680</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40007.patch attached to Ticket #40007</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 15:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40007/40007.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40007/40007.patch/1488467157708728</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40007 (update_option function does not work if the $value argument is false ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 15:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40007#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40007#comment:6/1488467035266615</guid>
      <description>&lt;p&gt;
Further inspecting the core function &lt;code&gt;update_action&lt;/code&gt; reveals something strange!
&lt;/p&gt;
&lt;p&gt;
The value &lt;code&gt;false&lt;/code&gt; is actually being treated as an empty string, but &lt;code&gt;true&lt;/code&gt; is not! So when I am passing &lt;code&gt;false&lt;/code&gt; for a key which I know does not exist there yet, &lt;code&gt;get_option&lt;/code&gt; returns an empty string (&lt;code&gt;$old_value = get_option( $option );&lt;/code&gt;), which when being compared in the following snippet:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $value === $old_value ) return false;
&lt;/pre&gt;&lt;p&gt;
always returning false as both &lt;code&gt;$value&lt;/code&gt; and &lt;code&gt;$old_value&lt;/code&gt; are nothing but &lt;strong&gt;empty strings&lt;/strong&gt;!
&lt;/p&gt;
&lt;p&gt;
This is the reason &lt;code&gt;update_option('_option_key_index', false)&lt;/code&gt;, never adds a record in the database. But if I pass &lt;code&gt;update_option('_option_key_index', 0)&lt;/code&gt; it does.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 02 Mar 2017 13:59:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:7/1488463179655129</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39822#comment:5" title="Comment 5"&gt;miyauchi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But there are some errors on &lt;code&gt;/usr/local/bin/phpunit --group ajax&lt;/code&gt; with PHPUnit 6 for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;setExpectedException()&lt;/code&gt; has been removed in PHPUnit 6: &lt;a class="ext-link" href="https://github.com/sebastianbergmann/phpunit/issues/2074"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/sebastianbergmann/phpunit/issues/2074&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40007 (update_option function does not work if the $value argument is false ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 13:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40007#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40007#comment:5/1488462105418010</guid>
      <description>&lt;p&gt;
Although &lt;code&gt;false&lt;/code&gt; is not being recognized a value 0 is actually adding / updating record in the table. So it is only Boolean &lt;code&gt;false&lt;/code&gt; which is not working! I am under an impression that this value has a conflict somewhere in the function!
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;true&lt;/code&gt; - works. Value added is 1
&lt;code&gt;1&lt;/code&gt; - works. Value added is 1
&lt;code&gt;false&lt;/code&gt; - does not work - No record added
&lt;code&gt;0&lt;/code&gt; - works - Value added is 0
&lt;code&gt;'true'&lt;/code&gt; - works. Value added is 'true'
&lt;code&gt;'false'&lt;/code&gt; - works. Value added is 'false'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Mar 2017 13:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:133</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:133/1488460632597885</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1488460630165639"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40015 (In multisite e-mails can contain HTML entities) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Mar 2017 13:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40015#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40015#comment:2/1488460488445748</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39981 (Multisite Domain Mapping doesn't work or not activated at all) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 02 Mar 2017 13:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39981#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39981#comment:4/1488460079879013</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40015 (In multisite e-mails can contain HTML entities) updated</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Thu, 02 Mar 2017 12:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40015#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40015#comment:1/1488458938919035</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch contains tests for bug. I've also included a couple of other tests relating to the two functions fixed, although not related to this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40015.diff attached to Ticket #40015</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Thu, 02 Mar 2017 12:47:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40015/40015.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40015/40015.diff/1488458841615395</guid>
      <description>&lt;p&gt;
Decode HTML entities in site name and blog name for MS emails
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40007 (update_option function does not work if the $value argument is false ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 12:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40007#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40007#comment:4/1488458499327034</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My apology for closing the ticket. That was not intended. I will try once again.
&lt;/p&gt;
&lt;p&gt;
However, you should have been more precise. You mentioned about &lt;code&gt;false&lt;/code&gt; but never mentioned what &lt;code&gt;true&lt;/code&gt; did for you. This is a good practice to explain everything in detail as much as possible so that others know exactly where and what to look at.
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40015 (In multisite e-mails can contain HTML entities) created</title>
      
        <dc:creator>stephenharris</dc:creator>

      <pubDate>Thu, 02 Mar 2017 12:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40015</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40015/1488458447057288</guid>
      <description>&lt;p&gt;
This ticket concerns e-mails which are sent in a multsite context when a blog's admin e-mail is changed, or a user changes their e-mail address.
&lt;/p&gt;
&lt;p&gt;
If the sitename contains  HTML entities these appear in the e-mail - they are not decoded.
&lt;/p&gt;
&lt;p&gt;
If the blogname contains quotes these appear in the e-mail as HTML entities. (&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27801" title="Always decode special characters for email subjects.
props tlovett1, ..."&gt;[27801]&lt;/a&gt; decoded all but the quotes).
&lt;/p&gt;
&lt;p&gt;
This bug was fixed for non-multsite installations in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9913" title="#9913: defect (bug): Plain text emails sent with encoded quotes (closed: fixed)"&gt;#9913&lt;/a&gt;. Also related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35415" title="#35415: defect (bug): Incorrect get_current_blog_id() docs (closed: fixed)"&gt;#35415&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12584" title="#12584: defect (bug): Emails from WordPress Admin are html encoded (closed: fixed)"&gt;#12584&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39981 (Multisite Domain Mapping doesn't work or not activated at all) reopened</title>
      
        <dc:creator>avibrazil</dc:creator>

      <pubDate>Thu, 02 Mar 2017 12:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39981#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39981#comment:3/1488458342448891</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39981#comment:1" title="Comment 1"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just edit the Site Address to what you want, save, done. Tested this on 4.6 and 4.7 and 4.8 and it works :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So you didn't read me previous post where I said the following:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;THE “Site Address (URL)” FIELD IS NOT EDITABLE IN MY FRESH 4.7.2 INSTALLATION.&lt;/strong&gt; I can see the URL but can't edit it.
&lt;/p&gt;
&lt;p&gt;
So besides de wrong documentation, apparently there is a bug in current WordPress.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #40007 (update_option function does not work if the $value argument is false ...) reopened</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Thu, 02 Mar 2017 12:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40007#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40007#comment:3/1488457807341095</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40007#comment:2" title="Comment 2"&gt;subrataemfluence&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
According to the structure as of now the datatype the &lt;code&gt;option_name&lt;/code&gt; column in &lt;code&gt;wp_options&lt;/code&gt; is of string type (&lt;code&gt;varchar(191)&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
The reason it does not add a record with &lt;code&gt;update_option('aaa2345454', false)&lt;/code&gt; is you are passing a Boolean value.
&lt;/p&gt;
&lt;p&gt;
To add / update a record with value &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; you either need to pass it directly as string like
&lt;/p&gt;
&lt;pre class="wiki"&gt;update_option('aaa2345454', 'false');
&lt;/pre&gt;&lt;p&gt;
or in case you are grabbing this value from somewhere else which is a Boolean then you need to create a string alternative for your value before you actually send it:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$value = true; //hard coding the $value here. You may be grabbing it from somewhere else.
$converted_value = ($value) ? 'true' : 'false';
update_option('aaa2345454', $converted_value)
&lt;/pre&gt;&lt;p&gt;
The above would add / update the value in &lt;code&gt;wp_options&lt;/code&gt; table with a value either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;option_value&lt;/code&gt; column. However, the value would not insert as a real Boolean type.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I want to add a Boolean false value, not STRING 'false' value, these are 2 different things.
&lt;/p&gt;
&lt;p&gt;
Why &lt;code&gt;update_option( 'aaa2345', true )&lt;/code&gt; works and &lt;code&gt;update_option( 'aaa2346', false )&lt;/code&gt; does not?
I think you did not understand the issue here. I will reopen this, why close so fast? Just a close keyword is enough, maybe someone has a different opinion.
&lt;/p&gt;
&lt;p&gt;
Even if &lt;code&gt;update_option( 'aaa2346', false )&lt;/code&gt; does not work it should at least insert a new row into the database.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39893 (Header Media: YouTube Embed Does Not Fill Screen) updated</title>
      
        <dc:creator>cingrosso</dc:creator>

      <pubDate>Thu, 02 Mar 2017 09:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39893#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39893#comment:3/1488446707215113</guid>
      <description>&lt;p&gt;
That's great Brady,
&lt;/p&gt;
&lt;p&gt;
I'll take a look and test the plugin and report back.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Many thanks&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39893#comment:2" title="Comment 2"&gt;bradyvercher&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've looked into this a bit and there isn't really a great solution. The iframe that contains the video is automatically stretched to fill the screen, but YouTube has a resize handler that adjusts the dimensions of the video so that it always fits the screen rather than fill the iframe as desired.
&lt;/p&gt;
&lt;p&gt;
I did go ahead and &lt;a class="ext-link" href="https://github.com/bradyvercher/custom-header-youtube"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;put together a quick plugin&lt;/a&gt; that attempts to counteract YouTube's behavior by resizing the iframe to ensure the video always fills the container. I haven't done much testing with Twenty Seventeen and it only works with widescreen videos at the moment, but otherwise it should be pretty solid.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 08:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:28/1488445022257377</guid>
      <description>&lt;p&gt;
I've forked the slurper and have written a parser for obtaining the sidebar args for the themes: &lt;a class="ext-link" href="https://github.com/xwp/WordPress-Theme-Directory-Slurper/tree/master/feature-stats/registered-widget-sidebars"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/WordPress-Theme-Directory-Slurper/tree/master/feature-stats/registered-widget-sidebars&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here are stats from the parsing : &lt;a class="ext-link" href="https://docs.google.com/spreadsheets/d/1sjm95-P7ocEL1m1TlAToL83TLNEijo9RKyBmERMA5hs/edit#gid=0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://docs.google.com/spreadsheets/d/1sjm95-P7ocEL1m1TlAToL83TLNEijo9RKyBmERMA5hs/edit#gid=0&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The most common number of sidebars is 1. Half as common is to have 2, with a little bit less common to have 0 sidebars. Here are the top 10 sidebar counts:
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;th&gt; &lt;strong&gt;Sidebar Count&lt;/strong&gt; &lt;/th&gt;&lt;th&gt; &lt;strong&gt;Theme Quantity&lt;/strong&gt;
&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 1        &lt;/td&gt;&lt;td&gt; 1308
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 2        &lt;/td&gt;&lt;td&gt; 748
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 0        &lt;/td&gt;&lt;td&gt; 612
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 4        &lt;/td&gt;&lt;td&gt; 444
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 5        &lt;/td&gt;&lt;td&gt; 377
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 3        &lt;/td&gt;&lt;td&gt; 365
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 6        &lt;/td&gt;&lt;td&gt; 236
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 7        &lt;/td&gt;&lt;td&gt; 129
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; 8        &lt;/td&gt;&lt;td&gt; 90
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
Plotted:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/39693/quantity-of-themes-having-sidebar-counts.png"&gt;&lt;img width="400" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/39693/quantity-of-themes-having-sidebar-counts.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As for the most popular sidebar IDs used, here are the top ~30:
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;th&gt; &lt;strong&gt;Sidebar ID&lt;/strong&gt; &lt;/th&gt;&lt;th&gt; &lt;strong&gt;Count&lt;/strong&gt;
&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-1 &lt;/td&gt;&lt;td&gt; 2234
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-2 &lt;/td&gt;&lt;td&gt; 810
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-3 &lt;/td&gt;&lt;td&gt; 416
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-4 &lt;/td&gt;&lt;td&gt; 299
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar &lt;/td&gt;&lt;td&gt; 234
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-1 &lt;/td&gt;&lt;td&gt; 233
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-2 &lt;/td&gt;&lt;td&gt; 224
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-3 &lt;/td&gt;&lt;td&gt; 218
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-5 &lt;/td&gt;&lt;td&gt; 203
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; primary-widget-area &lt;/td&gt;&lt;td&gt; 162
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-4 &lt;/td&gt;&lt;td&gt; 134
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; first-footer-widget-area &lt;/td&gt;&lt;td&gt; 132
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; second-footer-widget-area &lt;/td&gt;&lt;td&gt; 131
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; third-footer-widget-area &lt;/td&gt;&lt;td&gt; 124
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-6 &lt;/td&gt;&lt;td&gt; 120
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; fourth-footer-widget-area &lt;/td&gt;&lt;td&gt; 97
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; secondary-widget-area &lt;/td&gt;&lt;td&gt; 96
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; right-sidebar &lt;/td&gt;&lt;td&gt; 80
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-widget-area &lt;/td&gt;&lt;td&gt; 76
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer &lt;/td&gt;&lt;td&gt; 70
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-widget-area &lt;/td&gt;&lt;td&gt; 70
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; primary-sidebar &lt;/td&gt;&lt;td&gt; 69
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-left &lt;/td&gt;&lt;td&gt; 68
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-right &lt;/td&gt;&lt;td&gt; 66
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-left &lt;/td&gt;&lt;td&gt; 65
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-right &lt;/td&gt;&lt;td&gt; 60
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; sidebar-7 &lt;/td&gt;&lt;td&gt; 56
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; footer-sidebar &lt;/td&gt;&lt;td&gt; 52
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt; primary &lt;/td&gt;&lt;td&gt; 51
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
There is a degree of normalization that can be done for these, such as replacing “fourth” with 4, removing hyphens, removing “sidebar” and “widget area” and so on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40014 (&amp; converted to '#038) created</title>
      
        <dc:creator>fervillz</dc:creator>

      <pubDate>Thu, 02 Mar 2017 08:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40014</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40014/1488444106910218</guid>
      <description>&lt;p&gt;
Hi guys,
&lt;/p&gt;
&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30831" title="#30831: defect (bug): paginate_links() now needs add_args=false (closed: fixed)"&gt;#30831&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Using WordPress v4.7.2 . With paginate_links() and setting the 'add_args' to an an array of values breaks the url. Specifically replaces &lt;strong&gt;&amp;amp;&lt;/strong&gt; with &lt;strong&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38" title="#38: enhancement: More Better Options Regarding Authors (closed: invalid)"&gt;#038&lt;/a&gt;&lt;/strong&gt;;
&lt;/p&gt;
&lt;p&gt;
Sample code below:
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo paginate_links(
    array(
       'base'    =&amp;gt; str_replace( $big, '%#%', esc_url( get_pagenum_link( $big ) ) ),
       'current' =&amp;gt; max( 1, get_query_var( 'paged' ) ),
       'total'   =&amp;gt; $query_object-&amp;gt;max_num_pages,
       'format' =&amp;gt; 'page/%#%',
       'add_args' =&amp;gt; array( 'project' =&amp;gt; 1 /* or whatever the project number is*/ ),
) );
&lt;/pre&gt;&lt;p&gt;
The code above replaces  &lt;strong&gt;&amp;amp;&lt;/strong&gt; with &lt;strong&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38" title="#38: enhancement: More Better Options Regarding Authors (closed: invalid)"&gt;#038&lt;/a&gt;&lt;/strong&gt;;
&lt;/p&gt;
&lt;p&gt;
Sample result: &lt;a class="ext-link" href="http://domain.com/?page_id=1&amp;amp;paged=2#038project=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://domain.com/?page_id=1&amp;amp;paged=2#038project=1&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>quantity-of-themes-having-sidebar-counts.png attached to Ticket #39693</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 08:31:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39693/quantity-of-themes-having-sidebar-counts.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39693/quantity-of-themes-having-sidebar-counts.png/1488443484171216</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40013 (Inifinite loop in subfolder) created</title>
      
        <dc:creator>dSero</dc:creator>

      <pubDate>Thu, 02 Mar 2017 08:00:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40013</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40013/1488441633410553</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
We implemented WP on a dedicated server, where /blog serves as a subfolder behind an AWS application ELB that directs all /blog traffic to this server. The ELB also offloads the SSL.
&lt;/p&gt;
&lt;p&gt;
When configuring the WP, we faced an inifinte loop (301 redirect) on the /blog/ path, while intenral paths works great (/blog/trial for exmample).
&lt;/p&gt;
&lt;p&gt;
When debugging the code, we found out that the "protect against chained redirects"  in /var/www/html/wp-includes/canonical.php actually doesn't work, as the if state should be true instead of false:
&lt;/p&gt;
&lt;p&gt;
Please find trace below:
&lt;/p&gt;
&lt;p&gt;
Pages flow:
index.php
wp-blog-header.php
require_once( ABSPATH . WPINC . '/template-loader.php' );
/var/www/html/wp-includes/template-loader.php
do_action( 'template_redirect' ); ==&amp;gt;
/var/www/html/wp-includes/default-filters.php
add_action( 'template_redirect', 'redirect_canonical' );
The actual broken code is in:
/var/www/html/wp-includes/canonical.php
=&amp;gt; $redirect_url is empty inside, so return;
And the broken code in it is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;redirect_canonical&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$redirect_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="c1"&gt;// protect against chained redirects
&lt;/span&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;redirect_canonical&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$redirect_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;wp_redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$redirect_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Looks like there is a bug when there a sub folder model is being used.
Instead of protecting from chained redirects, the if actually causes them, since the return from the funciton when URLs are the same if return;
So correct code should be:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;redirect_canonical&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$redirect_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And not
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;redirect_canonical&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$redirect_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40007 (update_option function does not work if the $value argument is false ...) closed</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 02 Mar 2017 07:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40007#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40007#comment:2/1488438530580690</guid>
      <description>invalid: &lt;p&gt;
According to the structure as of now the datatype the &lt;code&gt;option_name&lt;/code&gt; column in &lt;code&gt;wp_options&lt;/code&gt; is of string type (&lt;code&gt;varchar(191)&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
The reason it does not add a record with &lt;code&gt;update_option('aaa2345454', false)&lt;/code&gt; is you are passing a Boolean value.
&lt;/p&gt;
&lt;p&gt;
To add / update a record with value &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; you either need to pass it directly as string like
&lt;/p&gt;
&lt;pre class="wiki"&gt;update_option('aaa2345454', 'false');
&lt;/pre&gt;&lt;p&gt;
or in case you are grabbing this value from somewhere else which is a Boolean then you need to create a string alternative for your value before you actually send it:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$value = true; //hard coding the $value here. You may be grabbing it from somewhere else.
$converted_value = ($value) ? 'true' : 'false';
update_option('aaa2345454', $converted_value)
&lt;/pre&gt;&lt;p&gt;
The above would add / update the value in &lt;code&gt;wp_options&lt;/code&gt; table with a value either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;option_value&lt;/code&gt; column. However, the value would not insert as a real Boolean type.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>aussieguy123</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:8/1488433416467455</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:5/1488433132138154</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40003 (Error in pagination classes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40003#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40003#comment:4/1488433062812715</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39888 (Right after delete author - PHP notices on '%s is currently editing') updated</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:23:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39888#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39888#comment:4/1488432221192187</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please have a look on this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22222.patch attached to Ticket #39888</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:18:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39888/22222.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39888/22222.patch/1488431887365886</guid>
      <description>&lt;p&gt;
This will be the right cure to handle this situation.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>22xx22.2.patch attached to Ticket #39888</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:13:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39888/22xx22.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39888/22xx22.2.patch/1488431631456597</guid>
      <description>&lt;p&gt;
Since $lock_holder = get_userdata( $lock_holder ); will return false if user id userid not exit. and the rest functionality will work as expected.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>22xx22.patch attached to Ticket #39888</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:13:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39888/22xx22.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39888/22xx22.patch/1488431601971940</guid>
      <description>&lt;p&gt;
Since $lock_holder = get_userdata( $lock_holder ); will return false if user id userid not exit.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40003 (Error in pagination classes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Mar 2017 05:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40003#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40003#comment:3/1488431322264080</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/20094" title="Output themes and theme-install infinite scrolling args in JS, rather ..."&gt;[20094]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40002 (Bump Akismet External - 4.7.x/4.8 Edition) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 02 Mar 2017 03:20:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40002#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40002#comment:2/1488424823671882</guid>
      <description>fixed: &lt;p&gt;
We'll bump it prior to all stable releases - that means &lt;code&gt;branches/4.7&lt;/code&gt; and &lt;code&gt;trunk/&lt;/code&gt; will need to be updated before each point release is made if it needs updating.
&lt;/p&gt;
&lt;p&gt;
I've gone ahead and done so in:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;trunk: &lt;a class="ext-link" href="https://build.trac.wordpress.org/changeset/40081"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://build.trac.wordpress.org/changeset/40081&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;branches/4.7: &lt;a class="ext-link" href="https://build.trac.wordpress.org/changeset/40082"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://build.trac.wordpress.org/changeset/40082&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Marking this as fixed for now, with the expectation that @kraftbj will re-open as future releases are made.
This is potentially something we should have as a phpunit test for trunk-only, verifying that the akismet external is up to date.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>39984.diff attached to Ticket #39984</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 02 Mar 2017 03:14:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39984/39984.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39984/39984.diff/1488424497693287</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39984 (wp_insert_term can return wrong ID when multiple existing terms are ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 02 Mar 2017 03:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39984#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39984#comment:2/1488424462979408</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the detailed report and the patch, @mikejolley. I've attached a second patch that includes a test demonstrating the problem and the fix.
&lt;/p&gt;
&lt;p&gt;
Regarding your point 2 - I would like to talk through what's happening here, since it seems like a change in behavior. I believe that your patch for 1 has turned up a bug, along the following lines:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's possible for there to be more than one member of &lt;code&gt;$name_matches&lt;/code&gt;, either because of accented characters (see the following block) or because of hierarchy branches like the one described in this ticket.
&lt;/li&gt;&lt;li&gt;When no slug is provided to &lt;code&gt;wp_insert_term()&lt;/code&gt; and there's a name match (in the relevant part of the taxonomy), we generally want to return an error - this is one of the legacy error conditions of &lt;code&gt;wp_insert_term()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;It's usually the case that the first member of the &lt;code&gt;$name_matches&lt;/code&gt; array will have the non-prefixed slug. That is: under normal circumstances (entering category names from the Dashboard), WP is responsible for generating slugs; so the first 'Child' will get the slug &lt;code&gt;child&lt;/code&gt;, the second will get &lt;code&gt;child-foo&lt;/code&gt;, etc. Since the default sort order of &lt;code&gt;get_terms()&lt;/code&gt; is by ID, &lt;code&gt;child&lt;/code&gt; will practically always be first.
&lt;/li&gt;&lt;li&gt;This means that the &lt;code&gt;$name_match-&amp;gt;slug === $slug&lt;/code&gt; condition on line 2066 is usually met. But it's sorta coincidental that this works: if you first created 'Child' with the manual slug &lt;code&gt;child-foo&lt;/code&gt; and then created a second 'Child' with &lt;code&gt;child&lt;/code&gt;, you'd surface the bug, independently of the hierarchy issue described in this ticket.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Does that sound right to you? If so, there are really two bugs to fix here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Thu, 02 Mar 2017 03:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:96</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:96/1488423607717873</guid>
      <description>&lt;p&gt;
I can appreciate that. Although, at some point someone is left with the bill. Those users may not understand, but that doesn't make them any less responsible.
&lt;/p&gt;
&lt;p&gt;
It's off-putting that you say something doesn't align with core philosophies, then in the next breath encourage plugin developers to take actions that violate those philosophies. Pardon me for saying it, but it kinda comes off as lack of leadership.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I never said do it tomorrow, but I'm very concerned there isn't a plan written up.
&lt;/p&gt;
&lt;p&gt;
WordPress is build around a 10 year old PHP version, that has been unsupported the past 6 of those years. I can't get my head around why that doesn't scream liability to everyone.
&lt;/p&gt;
&lt;p&gt;
How much time is wasted backporting what should be modern code to meet old constraints?
&lt;/p&gt;
&lt;p&gt;
When does it become more costly to continue this, than to bother 2.5% of users? Users who could very easily be instructed and led through an update process, or presented with a choice of options.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40012 (Only add_metadata if no matching value) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40012#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40012#comment:1/1488423495131396</guid>
      <description>&lt;p&gt;
Thinking about this more, there could be 4 types of uniqueness:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Unique &lt;code&gt;meta_key&lt;/code&gt; to all objects
&lt;/li&gt;&lt;li&gt;Unique &lt;code&gt;meta_key&lt;/code&gt; to the &lt;code&gt;$object_id&lt;/code&gt; (what &lt;code&gt;$unique&lt;/code&gt; currently checks)
&lt;/li&gt;&lt;li&gt;Unique &lt;code&gt;meta_key&lt;/code&gt; and &lt;code&gt;meta_value&lt;/code&gt; to all objects
&lt;/li&gt;&lt;li&gt;Unique &lt;code&gt;meta_key&lt;/code&gt; and &lt;code&gt;meta_value&lt;/code&gt; the &lt;code&gt;$object_id&lt;/code&gt; (what my patch adds)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40003 (Error in pagination classes) updated</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:51:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40003#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40003#comment:2/1488423118533960</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@SGr33n This is perfect.
No need to let that class there, if that is not in use.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:50:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:95/1488423055339734</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thoughts on serving PHP 5.2 users security updates only? (explained in more detail above)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That punishes users for something they don't understand or control, so no, it's not something that aligns with the WordPress philosophies and as such isn't something we'd do.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress has become an ecosystem unto itself, which for the PHP developer means it's incredibly difficult to work on either side of the fence. Perpetuating adherence to unsupported technology is just an ever growing technical liability.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And one which you're free to do what you want within - like I said, you don't have to support WordPress 3.7, although WordPress still supports it by shipping security releases for it - did you know we're up to &lt;a class="ext-link" href="https://wordpress.org/download/release-archive/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;3.7.18?&lt;/a&gt;, likewise, you don't have to support PHP 5.x if you don't want to, you can make your plugin PHP 7.x only if you want, you'll just need to educate your users who can't use it about how to update their systems - if your plugin requires newer features you're in a far better place to educate the user as to why you need it than WordPress is.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Yes, I'd prefer WordPress dropped support for PHP 5.2, 5.3 and even 5.4 - there's 1/3 of the WordPress 4.7 user-base right there, but I don't think it's an effort which at this time can be pushed by WordPress itself, some plugins such as &lt;a class="ext-link" href="https://github.com/Yoast/wordpress-seo/issues/6293"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Yoast SEO&lt;/a&gt; are planning to throw notices to older PHP users in an attempt to get their user base to update so that they can bump their minimum PHP versions, I'm eagerly awaiting to see how that goes and to see if it can form the basis of a larger push from the WordPress community as a whole, rather than relying upon WordPress core itself to be the driving force.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>aussieguy123</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:49:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:7/1488422946637067</guid>
      <description>&lt;p&gt;
@westonruter I've managed to reproduce this issue on both WordPress.com VIP and also our custom docker environment based on VIP quickstart.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:6/1488422867339423</guid>
      <description>&lt;p&gt;
@aussieguy123 so actually you're not experiencing the issue on WordPress.com but rather on VIP Quickstart?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>alexander.rohmann</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:33:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:94/1488422030416796</guid>
      <description>&lt;p&gt;
Nobody said blindly drop support. The point of this conversation is to find a path forward. I've still not gotten any direct feedback on my major version proposal. Thoughts on serving PHP 5.2 users security updates only? (explained in more detail above)
&lt;/p&gt;
&lt;p&gt;
While WordPress is a big part of the web, you can not deny that this fractures the development community as a whole.
&lt;/p&gt;
&lt;p&gt;
WordPress has become an ecosystem unto itself, which for the PHP developer means it's incredibly difficult to work on either side of the fence. Perpetuating adherence to unsupported technology is just an ever growing technical liability.
&lt;/p&gt;
&lt;p&gt;
You keep coming back to "users first" - then find a solution that keeps them first, but also moves things forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40004 (Wrap docblock description of `wp_term_is_shared()` to 80 characters) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40004#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40004#comment:1/1488421630511286</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40143" title="Improve formatting in `wp_term_is_shared()` docblock.
Props netweb. ..."&gt;40143&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Improve formatting in &lt;code&gt;wp_term_is_shared()&lt;/code&gt; docblock.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props netweb.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40004" title="#40004: defect (bug): Wrap docblock description of `wp_term_is_shared()` to 80 characters (closed: fixed)"&gt;#40004&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40143]: Improve formatting in `wp_term_is_shared()` docblock.  Props netweb. ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:27:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40143</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40143/1488421630045074</guid>
      <description>&lt;p&gt;
Improve formatting in &lt;code&gt;wp_term_is_shared()&lt;/code&gt; docblock.
&lt;/p&gt;
&lt;p&gt;
Props netweb.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40004" title="#40004: defect (bug): Wrap docblock description of `wp_term_is_shared()` to 80 characters (closed: fixed)"&gt;#40004&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40008 (A multisite test (currently unknown) should remove added image thumbnails) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40008#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40008#comment:5/1488421505987541</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40142" title="Tests: Starter content tests should use copies of images stored in ..."&gt;40142&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Starter content tests should use copies of images stored in /tmp.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This ensures that generated thumbnails are kept out of the version-&lt;br /&gt;
controlled &lt;code&gt;DIR_TESTDATA&lt;/code&gt; directory.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props bor0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40008" title="#40008: defect (bug): A multisite test (currently unknown) should remove added image thumbnails (closed: fixed)"&gt;#40008&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40142]: Tests: Starter content tests should use copies of images stored in ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40142</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40142/1488421505516795</guid>
      <description>&lt;p&gt;
Tests: Starter content tests should use copies of images stored in /tmp.
&lt;/p&gt;
&lt;p&gt;
This ensures that generated thumbnails are kept out of the version-
controlled &lt;code&gt;DIR_TESTDATA&lt;/code&gt; directory.
&lt;/p&gt;
&lt;p&gt;
Props bor0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40008" title="#40008: defect (bug): A multisite test (currently unknown) should remove added image thumbnails (closed: fixed)"&gt;#40008&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40008 (A multisite test (currently unknown) should remove added image thumbnails) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40008#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40008#comment:4/1488421423556159</guid>
      <description>&lt;p&gt;
Technique looks good to me. Thanks for the patch, @bor0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40012.diff attached to Ticket #40012</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40012/40012.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40012/40012.diff/1488420899474057</guid>
      <description>&lt;p&gt;
Proof of concept. Needs testing with serialized data.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:93/1488420476570671</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
you shared some pretty interesting data. Any chance on getting those for March 2017?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I actually tweeted that data recently - &lt;a class="ext-link" href="https://twitter.com/dd32/status/834613251178508289"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/dd32/status/834613251178508289&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
WP4.7-only stats of [PHP] 5.6 @ 43%, 5.4 @ 20%, and 5.5 @ 14%, PHP 7.x is @ ~10% leaving only 12% for PHP 5.2+5.3
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;PHP 5.2: ~2.5%
&lt;/li&gt;&lt;li&gt;PHP 5.3: 9%
&lt;/li&gt;&lt;li&gt;PHP 5.4: 20%
&lt;/li&gt;&lt;li&gt;PHP 5.5: 14%
&lt;/li&gt;&lt;li&gt;PHP 5.6: 43%
&lt;/li&gt;&lt;li&gt;PHP 7.0: 10%
&lt;/li&gt;&lt;li&gt;PHP 7.1: ~1.5%
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
(Note, these numbers are rounded, yet shockingly add up to 100%)
&lt;/p&gt;
&lt;p&gt;
While PHP 5.2 for WordPress 4.7 is at &amp;lt;3% now, which is much lower than the ~5.5% figure which represents all versions 3.0~4.7, what those figures don't tell you is just how many people would be affected by a forced change.
&lt;/p&gt;
&lt;p&gt;
On average, at every WordPress event you go to, 3 out of every 100 people are probably running PHP 5.2 - and have no idea what PHP is, there are hundreds of thousands (or millions) of people who are in that group of people.
You could say that those 3 people probably don't go to WordPress events, but you'd be surprised, they're the new users on bad hosts, those who have had a WordPress site that had just worked for the last 5+ years, they're the ones who rely upon WordPress doing it's job and running their site, taking away all the technicalities of publishing on the web.
&lt;/p&gt;
&lt;p&gt;
WordPress isn't going to blindly drop support for those users - and we're not going to bump the required version of PHP while not actually requiring it - that user experience comes first.
Moving to PHP 5.3 gains core nothing, Moving to PHP 5.4 gains core nothing either - if there were features in those versions which were needed by WordPress - we'd have moved already.
Supporting the older versions in core does not bring a significant barrier to contributors, many new functions that we've needed (JSON, Hashing, PHP7 random functions, Multibyte and autoload) have been &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/compat.php"&gt;shimmed&lt;/a&gt; with PHP variants which allow us to use the functionality in the older versions - sure, it might not be as performant, but it works just fine.
If PHP versions prevent you from contributing to WordPress, submit the patch anyway and note it requires PHP 8, someone else can alter it to work back to 5.2 - determining what the issue is and what code needs to fix it is 90% of the work.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Plugins and Themes can require a higher version of PHP than what WordPress does. You do not have to support an outdated version of PHP or outdated install of WordPress&lt;/strong&gt; - I don't support anything older than PHP 5.4 and WordPress 4.4 at present, that's a choice I've made, and every time someone contacts me (at least once a week) asking why the plugin doesn't work for them, I explain that the detailed error message meant they need to contact their host, you can do that too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40012 (Only add_metadata if no matching value) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40012</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40012/1488420283914374</guid>
      <description>&lt;p&gt;
&lt;code&gt;add_metadata()&lt;/code&gt; has a &lt;code&gt;$unique&lt;/code&gt; parameter, but it only looks for a unique &lt;code&gt;meta_key&lt;/code&gt; for the given object ID. I have a need to add meta-data with the same &lt;code&gt;meta_key&lt;/code&gt; but different values, and only if that &lt;code&gt;meta_value&lt;/code&gt; isn't already present with the same key.
&lt;/p&gt;
&lt;p&gt;
To do this now, requires:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Getting all meta-data for the ID by &lt;code&gt;meta_key&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Checking those array-values for my value
&lt;/li&gt;&lt;li&gt;Bailing if it's already present, or...
&lt;/li&gt;&lt;li&gt;Proceeding with &lt;code&gt;$unique&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It'd be lovely if &lt;code&gt;add_metadata()&lt;/code&gt; either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Accepted strings like &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; for the &lt;code&gt;$unique&lt;/code&gt; parameter, to switch up the check
&lt;/li&gt;&lt;li&gt;Added a second parameter for unique value in addition to a unique key
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39997 (Bundled Themes: Pass theme version number to wp_enqueue_style()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Mar 2017 02:01:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39997#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39997#comment:15/1488420063202492</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39982 (Twenty Seventeen: Cannot update twenty-seventeen theme) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 02 Mar 2017 01:36:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39982#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39982#comment:1/1488418617443013</guid>
      <description>invalid: &lt;p&gt;
Hi @subrataemfluence and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
Unfortunately this isn't a core WordPress bug - WordPress is unable to modify the files it's mentioned, this is likely due to mixed permissions on the server (or mixed file owners).
&lt;/p&gt;
&lt;p&gt;
You'll need to manually fix the errors on your webhost by using FTP or your web hosts control panel.
Your web host may also be willing to help you fix the inconsistent permissions, you'll have to contact their support for that though.
&lt;/p&gt;
&lt;p&gt;
I'm marking this as invalid due to it being a server configuration issue.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40008 (A multisite test (currently unknown) should remove added image thumbnails) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 02 Mar 2017 01:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40008#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40008#comment:3/1488418603605949</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @bor0
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>aussieguy123</dc:creator>

      <pubDate>Thu, 02 Mar 2017 01:20:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:5/1488417613443946</guid>
      <description>&lt;p&gt;
@westonruter
&lt;/p&gt;
&lt;p&gt;
here is the output of _wpCustomizeSettings.controls.site_icon.attachment . Sizes is actually not empty, but the "full" size is missing.
&lt;/p&gt;
&lt;p&gt;
The fix addresses the symptom. If the root cause is no full size being generated, that should be fixed seperately.
&lt;/p&gt;
&lt;p&gt;
You are right that jetpack is involved. Deactivating jetpack (wp plugin deactivate jetpack --network) works around the problem. The other way around it is to delete the site_icon option ( wp --url=&amp;lt;yoursite.local&amp;gt; option delete site_icon ).
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"cropped-mars-1.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"filename"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"cropped-mars-1.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/cropped-mars-1-jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"alt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"caption"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"cropped-mars-1-jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"inherit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"uploadedTo"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"date"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1488348427000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"modified"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1488348427000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"menuOrder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"mime"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"image/jpeg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"image"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"subtype"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"jpeg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-includes/images/media/default.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"dateFormatted"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"March 1, 2017"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"nonces"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"update"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"4f78209afe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"delete"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"cc6e068550"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"edit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"41f6cf352f"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"editLink"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-admin/post.php?post=44&amp;amp;action=edit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"meta"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"authorName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"wordpress"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"filesizeInBytes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;38387&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"filesizeHumanReadable"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"37 KB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"landscape"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"sizes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"spp_thumbnail"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-100x75.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"landscape"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"promo_thumbnail"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;149&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-149x86.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"landscape"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"story_crop"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;237&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;316&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-316x237.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"landscape"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"story_portrait"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;421&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;316&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-316x421.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"portrait"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"gallery_portrait"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;488&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;366&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-366x488.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"portrait"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"gallery_alt_image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;433&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;288&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-288x433.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"portrait"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"tablet_thumbnail"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;110&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;196&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-196x110.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"landscape"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="nt"&gt;"tablet_square_small"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nt"&gt;"height"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"width"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-234x234.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nt"&gt;"orientation"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"landscape"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="nt"&gt;"compat"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nt"&gt;"item"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;input type=\"hidden\" name=\"attachments[44][menu_order]\" value=\"0\" /&amp;gt;&amp;lt;p class=\"media-types media-types-required-info\"&amp;gt;Required fields are marked &amp;lt;span class=\"required\"&amp;gt;*&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;\n\t\t\t&amp;lt;table class=\"compat-attachment-fields\"&amp;gt;\t\t&amp;lt;tr class='compat-field-wpcom_thumbnails'&amp;gt;\t\t\t&amp;lt;th scope='row' class='label'&amp;gt;&amp;lt;label for='attachments-44-wpcom_thumbnails'&amp;gt;&amp;lt;span class='alignleft'&amp;gt;Thumbnail Images&amp;lt;/span&amp;gt;&amp;lt;br class='clear' /&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;/th&amp;gt;\n\t\t\t&amp;lt;td class='field'&amp;gt;&amp;lt;p class=\"hide-if-js\"&amp;gt;You need to enable Javascript to use this functionality.&amp;lt;/p&amp;gt;&amp;lt;input type=\"button\" class=\"hide-if-no-js button\" onclick=\"jQuery(this).hide();jQuery('#wpcom-thumbs-44').slideDown('slow');\" value=\"Show Thumbnails\" /&amp;gt;&amp;lt;div id=\"wpcom-thumbs-44\" class=\"hidden\"&amp;gt;&amp;lt;p&amp;gt;Click on a thumbnail image to modify it. Each thumbnail has likely been scaled down in order to fit nicely into a grid.&amp;lt;br /&amp;gt;&amp;lt;strong&amp;gt;Only thumbnails that are cropped are shown.&amp;lt;/strong&amp;gt; Other sizes are hidden because they will be scaled to fit.&amp;lt;/p&amp;gt;&amp;lt;div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=thumbnail\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;thumbnail&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-150x150.jpg\" alt=\"thumbnail\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=spp_thumbnail\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;spp_thumbnail&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-100x75.jpg\" alt=\"spp_thumbnail\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=promo_thumbnail\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;promo_thumbnail&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-149x86.jpg\" alt=\"promo_thumbnail\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=story_crop\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;story_crop&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-316x237.jpg\" alt=\"story_crop\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=story_portrait\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;story_portrait&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-316x421.jpg\" alt=\"story_portrait\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=major_event\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;major_event&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x366.jpg\" alt=\"major_event\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_portrait\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_portrait&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-366x488.jpg\" alt=\"gallery_portrait\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_landscape\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_landscape&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x488.jpg\" alt=\"gallery_landscape\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_landscape_alt\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_landscape_alt&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x433.jpg\" alt=\"gallery_landscape_alt\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_square\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_square&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"gallery_square\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=venti\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;venti&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"venti\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_landscape\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_landscape&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_landscape\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_alt_image\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_alt_image&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-288x433.jpg\" alt=\"gallery_alt_image\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_portrait\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_portrait&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_portrait\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_square\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_square&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_square\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_wide\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_wide&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_wide\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_thumbnail\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_thumbnail&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-196x110.jpg\" alt=\"tablet_thumbnail\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_gallery_landscape\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_gallery_landscape&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x488.jpg\" alt=\"tablet_gallery_landscape\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_square_small\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_square_small&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-234x234.jpg\" alt=\"tablet_square_small\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=spp_thumbnail\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;spp_thumbnail&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-100x75.jpg\" alt=\"spp_thumbnail\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=promo_thumbnail\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;promo_thumbnail&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-149x86.jpg\" alt=\"promo_thumbnail\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=story_crop\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;story_crop&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-316x237.jpg\" alt=\"story_crop\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=story_portrait\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;story_portrait&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-316x421.jpg\" alt=\"story_portrait\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=major_event\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;major_event&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x366.jpg\" alt=\"major_event\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_portrait\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_portrait&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-366x488.jpg\" alt=\"gallery_portrait\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_landscape\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_landscape&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x488.jpg\" alt=\"gallery_landscape\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_landscape_alt\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_landscape_alt&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x433.jpg\" alt=\"gallery_landscape_alt\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_square\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_square&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"gallery_square\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=venti\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;venti&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"venti\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_landscape\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_landscape&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_landscape\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=gallery_alt_image\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;gallery_alt_image&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-288x433.jpg\" alt=\"gallery_alt_image\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_portrait\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_portrait&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_portrait\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_square\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_square&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_square\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_wide\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_wide&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1.jpg\" alt=\"tablet_wide\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_thumbnail\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_thumbnail&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-196x110.jpg\" alt=\"tablet_thumbnail\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_gallery_landscape\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_gallery_landscape&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-512x488.jpg\" alt=\"tablet_gallery_landscape\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=\"float:left;margin:0 20px 20px 0;min-width:250px;\"&amp;gt;&amp;lt;a href=\"http://heraldsun.local/wp-admin/admin.php?action=wpcom_thumbnail_edit&amp;amp;#038;id=44&amp;amp;#038;size=tablet_square_small\" target=\"_blank\"&amp;gt;&amp;lt;strong&amp;gt;tablet_square_small&amp;lt;/strong&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;img src=\"http://heraldsun.local/wp-content/uploads/sites/10/2017/03/cropped-mars-1-234x234.jpg\" alt=\"tablet_square_small\" /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/td&amp;gt;\n\t\t&amp;lt;/tr&amp;gt;\n&amp;lt;/table&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nt"&gt;"meta"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40008 (A multisite test (currently unknown) should remove added image thumbnails) updated</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Thu, 02 Mar 2017 01:06:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40008#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40008#comment:2/1488416812307595</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Proposed patch does it similarly like other tests do (e.g. &lt;code&gt;rest-attachments-controller.php&lt;/code&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40008.diff attached to Ticket #40008</title>
      
        <dc:creator>bor0</dc:creator>

      <pubDate>Thu, 02 Mar 2017 01:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40008/40008.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40008/40008.diff/1488416741158705</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:59:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:4/1488416340261330</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:3/1488416233041133</guid>
      <description>&lt;p&gt;
@aussieguy123 also, if you open up your console, what does &lt;code&gt;_wpCustomizeSettings.controls.site_icon.attachment&lt;/code&gt; output? I'm expecting it to have an empty &lt;code&gt;sizes&lt;/code&gt; property. But I want to know what the other properties are as well. Please attach the JSON.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:51:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:2/1488415884655399</guid>
      <description>&lt;p&gt;
@aussieguy123 This is only happening in a context where Jetpack's Photon service is being used, right?
&lt;/p&gt;
&lt;p&gt;
Does your patch fix the problem or just the symptom? In other words, if image sizes are being dynamically generated, is the original image going to be shown?
&lt;/p&gt;
&lt;p&gt;
It could be that there is actually a Jetpack issue where where it should be filtering &lt;code&gt;wp_prepare_attachment_for_js&lt;/code&gt; to supply all of the added image &lt;code&gt;sizes&lt;/code&gt; with URLs off to the WordPress.com endpoints.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36183 (Twenty Fourteen: Incompatibility with Right-To-Left (RTL) webpages AND ...) updated</title>
      
        <dc:creator>parsmizban</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:49:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36183#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36183#comment:11/1488415747976606</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36183.patch attached to Ticket #36183</title>
      
        <dc:creator>parsmizban</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:48:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36183/36183.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36183/36183.patch/1488415696600548</guid>
      <description>&lt;p&gt;
This patch will fix Video Player for RTL, Regards
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40011 (Do not add scheme prefix to "null" origin in wp-json's ...) updated</title>
      
        <dc:creator>vicshih</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40011#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40011#comment:1/1488415615863253</guid>
      <description>&lt;p&gt;
Might relate to &lt;a href="https://core.trac.wordpress.org/ticket/20681"&gt;https://core.trac.wordpress.org/ticket/20681&lt;/a&gt; also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40011 (Do not add scheme prefix to "null" origin in wp-json's ...) created</title>
      
        <dc:creator>vicshih</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40011</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40011/1488415568879980</guid>
      <description>&lt;p&gt;
In some contexts (e.g. privacy-sensitive), the Origin header is "null".
&lt;/p&gt;
&lt;p&gt;
In these cases the REST API responds with an Access-Control-Allow-Origin header with the value "&lt;a class="ext-link" href="http://$origin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://$origin&lt;/a&gt;", since the original origin goes through esc_url_raw() before rendering.  The browser then does not consider these equivalent and aborts the request with:
&lt;/p&gt;
&lt;p&gt;
The 'Access-Control-Allow-Origin' header has a value '&lt;a class="ext-link" href="http://null"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://null&lt;/a&gt;' that is not equal to the supplied origin. Origin 'null' is therefore not allowed access.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39990 (Bug Library media files in RTL (Farsi)) closed</title>
      
        <dc:creator>parsmizban</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:36:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39990#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39990#comment:3/1488414975885395</guid>
      <description>worksforme: &lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
It should be OK in RTL,
What is your current theme ?
Please change your theme to default one, like twentyfifteen and also disable your plugins temporary
And check it again
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39550 (Some Non-image files fail to upload after 4.7.1) updated</title>
      
        <dc:creator>Blue Liquid Designs</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39550#comment:132</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39550#comment:132/1488414564153377</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39550#comment:131" title="Comment 131"&gt;blobfolio&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Thanks for the details. &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39963" title="#39963: enhancement: MIME Alias Handling (reopened)"&gt;#39963&lt;/a&gt; looks like the perfect solution to the problem and I'll be following that ticket more closely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) updated</title>
      
        <dc:creator>aussieguy123</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010#comment:1/1488414080848537</guid>
      <description>&lt;p&gt;
Heres the exact js error:
&lt;/p&gt;
&lt;p&gt;
Uncaught TypeError: Cannot read property 'url' of undefined
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
at eval (eval at m.template (underscore.min.js?ver=1.8.3:5), &amp;lt;anonymous&amp;gt;:23:35)
at c (underscore.min.js?ver=1.8.3:5)
at wp-util.js?ver=4.8-alpha-40139:34
at child.renderContent (customize-controls.js?ver=4.8-alpha-40139:2223)
at Object.&amp;lt;anonymous&amp;gt; (customize-controls.js?ver=4.8-alpha-40139:1974)
at i (jquery.js?ver=1.12.4:2)
at Object.add [as done] (jquery.js?ver=1.12.4:2)
at Function.&amp;lt;anonymous&amp;gt; (customize-controls.js?ver=4.8-alpha-40139:1970)
at i (jquery.js?ver=1.12.4:2)
at Object.fireWith [as resolveWith] (jquery.js?ver=1.12.4:2)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39955 (Media details: HTML character shown as code) updated</title>
      
        <dc:creator>parsmizban</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39955#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39955#comment:2/1488413967374529</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>fix_customizer.diff attached to Ticket #40010</title>
      
        <dc:creator>aussieguy123</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:04:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40010/fix_customizer.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40010/fix_customizer.diff/1488413088022393</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40010 (Customize: Template for site icon control fails to check if full image ...) created</title>
      
        <dc:creator>aussieguy123</dc:creator>

      <pubDate>Thu, 02 Mar 2017 00:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40010</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40010/1488413066515488</guid>
      <description>&lt;p&gt;
Looks like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36749" title="#36749: defect (bug): Customizer wont load: issue with site-icon control (closed: fixed)"&gt;#36749&lt;/a&gt; has shown itself again in the latest core commits.
&lt;/p&gt;
&lt;p&gt;
I've attached a patch, which fixes this issue.
&lt;/p&gt;
&lt;p&gt;
Seems that the template is not checking if data.attachment.sizes.full exists before printing out  data.attachment.sizes.full.url. This causes a console error (trying to get property url from a non-object).
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Open Customizer
&lt;/li&gt;&lt;li&gt;Under site identity upload an image
&lt;/li&gt;&lt;li&gt;Publish
&lt;/li&gt;&lt;li&gt;Refresh the page
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Expected:
Page loads normally with new icon
&lt;/p&gt;
&lt;p&gt;
Actual:
Page partially loads, customizer is broken
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>