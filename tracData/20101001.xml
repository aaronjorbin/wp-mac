<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:59:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:20/1285977543000000</guid>
      <description>&lt;p&gt;
Last commit did contain misleading information in the docblocks at least. Just pick the stuff you're ok with from the patch and drop the rest nacin. But even try to iterate when there's some feedback for the good of us all.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13257 (Pass $post to post_type_link filter, instead of $id) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13257</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13257/1285977314000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the idea (makes sense) but patch is stale.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12526" title="#12526: enhancement: Introduce has_term() to the tax API (closed: fixed)"&gt;#12526&lt;/a&gt; (for mixed/optional post argument)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:19/1285977268000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13257" title="#13257: defect (bug): Pass $post to post_type_link filter, instead of $id (closed: duplicate)"&gt;#13257&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13218 (Allow to specify name of drop-in which is not a plugin) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:49:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13218/1285976945000000</guid>
      <description>&lt;p&gt;
Just create a subdicretory within your plugin bundle directory, and inside that subdirectory another one and place the dropin file there. AFAIK wordpress only checks the first two levels while scanning for files). That should solve your problem.
&lt;/p&gt;
&lt;p&gt;
As this feature request is somehow very specific and an overall solution would need some thoughful design and implementation I suggest to close as wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12832 (Use the same data type for site statuses) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12832</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12832/1285976775000000</guid>
      <description>&lt;p&gt;
October is starting. Any feedback for 3.1 line-up? Postponing to 3.2?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13173 (get_date_from_gmt does not properly convert non-DST dates when DST is ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13173</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13173/1285976674000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please name the PHP version you are experiencing this with and the os and if it's 32 or 64 bit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13066 (Last-Modified headers for individual comment feeds are incorrect) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13066</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13066/1285976602000000</guid>
      <description>&lt;p&gt;
Looks like there is no intention to fix this. Close as wontfix?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13078 (Make wp_register_style and wp_enqueue_style consistent) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13078/1285976453000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yeah both functions should be propagated for theme and plugin authors. A user does not expect a difference in handling the URLs here, so this should be streamlined.
&lt;/p&gt;
&lt;p&gt;
Patch is stale.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13069 (Use GlotPress list of locales instead of the one in ms.php) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13069</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13069/1285976301000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is this referring to mu_dropdown_languages() in /wp-admin/includes/ms.php ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:30:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:18/1285975849000000</guid>
      <description>fixed: &lt;p&gt;
Our API is quite consistent with term then tax.
&lt;/p&gt;
&lt;p&gt;
Closing as fixed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12905 (the_title_attribute() is hard to internationalize) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12905/1285975784000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14972" title="#14972: enhancement: Proposal:  Pool of common strings for core, themes, and plugins (closed: maybelater)"&gt;#14972&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14972 (Proposal:  Pool of common strings for core, themes, and plugins) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14972#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14972#comment:8/1285975713000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14039" title="#14039: enhancement: Consolidate strings with same meaning but different wording (closed: duplicate)"&gt;#14039&lt;/a&gt; (Duplicate?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14039 (Consolidate strings with same meaning but different wording) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14039</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14039/1285975660000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14972" title="#14972: enhancement: Proposal:  Pool of common strings for core, themes, and plugins (closed: maybelater)"&gt;#14972&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:24:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:7/1285975496000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14997#comment:6" title="Comment 6"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That will be easy to spot if you have WP_DEBUG on.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well that's nice. Being lazy on the implementation and leaving the work to debuggers.
&lt;/p&gt;
&lt;p&gt;
I think you didn't get my point. It's not about whether or not unset variables are able to spot.
&lt;/p&gt;
&lt;p&gt;
It's about the matter of fact that the filter should not be able to break the data in the function in such an elementary way (unsetting local function variables). Just making my mind about the constraints of the suggested implementation.
&lt;/p&gt;
&lt;p&gt;
But I have no clue how to rate deleted array keys when the data get's back into that function. Empty string? The original string? Does there need to be a "where" inside $where?  I was just giving note on the issue which went through my head.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11981 (Bad default data for icon_dir filter in in post-template.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11981#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11981#comment:4/1285975181000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was fixed recently to introduce SSL support, I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12700 (Malformed permalinks for feeds and paged / generate_rewrite_rules) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12700#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12700#comment:17/1285975116000000</guid>
      <description>invalid: &lt;p&gt;
If it ain't broke, don't fix it.
&lt;/p&gt;
&lt;p&gt;
We have more important things to work on, like maybe a better rewrite engine altogether: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12935" title="#12935: enhancement: Evolve the URL routing system (closed: wontfix)"&gt;#12935&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:16:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:17/1285974999000000</guid>
      <description>&lt;p&gt;
Well the natural order is that you start with the more broad one (e.g. taxnomony) and then you locate the concrete in there (e.g. term). So my first argument is the expected order of arguments. Remember, this is introducing a new function.
&lt;/p&gt;
&lt;p&gt;
Next to that I just prooved you wrong. There are more than that one function where this is the case.
&lt;/p&gt;
&lt;p&gt;
NULL term as a joker. Awful if you ask me. I suggest to add an aditional function: has_taxonomy() and then to check for taxnonomy only - not for a term (as the function name suggests).
&lt;/p&gt;
&lt;p&gt;
Naming should be precise. At least we should try hard if we introduce something new :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13041 (Canonical redirection will redirect a non-exitant page to a post.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13041</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13041/1285974667000000</guid>
      <description>&lt;p&gt;
Patch still applies clean. It's in wp-includes/
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12922 (Setting featured image does not require the post to be saved) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12922</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12922/1285974484000000</guid>
      <description>&lt;p&gt;
Both sides are somehow right. Wontfix?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12768 (Store only relative path in theme_mod() for 'header_image' and ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12768</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12768/1285974385000000</guid>
      <description>&lt;p&gt;
I think the full path is necessary beause of the pretty permalink option. Imagine you are on same month archive and the link must work directly read out from options w/o any additional calculation. It's somewhat a concept in Wordpress to use absolute URLs instead of relative ones, so it's a constraint in using the software.
&lt;/p&gt;
&lt;p&gt;
For deploy, you need to go through all (serialized) option values and replace the old URL with the new one. It's a PITA, yeah, there are some tools that deal with that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12700 (Malformed permalinks for feeds and paged / generate_rewrite_rules) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 23:03:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12700/1285974184000000</guid>
      <description>&lt;p&gt;
Any traction on this one? I don not fully understand the patch and what this is about, so maybe some love by someone else?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11988 (VERP does not work) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11988</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11988/1285973963000000</guid>
      <description>&lt;p&gt;
"Upstream" for PHPMailer for PHP 4 is WordPress :) If we do not fix this, there is no fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15012 (Maximum # of revisions for pages) created</title>
      
        <dc:creator>chrsc</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15012</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15012/1285973950000000</guid>
      <description>&lt;p&gt;
Found this bug from a client reporting that their page editor would only display html code. I noticed no revisions were being listed at the bottom of the page, so I used mysql to delete some revisions and then the editor displayed correctly, as well as the revisions list was showing up again.
&lt;/p&gt;
&lt;p&gt;
The maximum # of revisions is 35 (or at least it was for this page), which also maybe attributed to the amount of content in the page as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11981 (Bad default data for icon_dir filter in in post-template.php) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11981</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11981/1285973846000000</guid>
      <description>fixed: &lt;p&gt;
Patch is stale. Trunk is somehow fixed. The only bad default describben here I could find is located in get_attachment_icon_src(), depreceted since 2.5 or so.
&lt;/p&gt;
&lt;p&gt;
I close as fixed. If the problem still exists, please feel free to reopen and provide a fresh patch. I could not find this issue any longer.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:16/1285973411000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
All the functions that make use of has_term not even have the taxonomy name in their function name.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They're not relevant to the discussion precisely because they don't have a $taxonomy parameter.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh that's not true. For example is_object_in_term() has $taxnomy first and then $term.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ok, so you found a single counter-example. That doesn't validate adding yet another inconsistency.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Made a patch that puts the arguments into the expected order and removes their optional status (at least for the first two) as it makes no sense to run a check on a NULL taxononmy or look for the NULL term.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
NULL taxonomy no, but NULL term yes: check if the post has &lt;em&gt;any&lt;/em&gt; terms in the given taxonomy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12363 (Comment permalink wrong when only listing one comment type) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:49:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12363</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12363/1285973371000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12141 (Edit link in Press This doesn't work in Safari) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12141</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12141/1285973232000000</guid>
      <description>&lt;p&gt;
This report is some days older. I do not have a safari to reproduce. Can someone with the specified system please try to reproduce the problem?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14487 (Update #user_info a:active, #footer a:active) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14487/1285973143000000</guid>
      <description>&lt;p&gt;
This should be easy and quick to fix. If I remember correctly there is some touch-up for the admin CSS colors in the pipe? But maybe that's after 3.1 release.
&lt;/p&gt;
&lt;p&gt;
This issue looks like a minor one to fix anyway to me. To which color does that needs to be set?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485/1285973058000000</guid>
      <description>&lt;p&gt;
I smell cache as well. It would be good to know if the reporter can specify if making use of multisite or not.
&lt;/p&gt;
&lt;p&gt;
Simple steps how to reproduce are welcome as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11856 (URL for 1st comments page is not canonical) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11856/1285972945000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Any chance for a patch? Any feedback from GSOC which is over now?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12863 (jQuery UI 1.8) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12863/1285972836000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this needs a lot of testing. And we don't have any tests for it as far as I remember. So good to have a patch now!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:35:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:15/1285972515000000</guid>
      <description>&lt;p&gt;
Made a patch that puts the arguments into the expected order and removes their optional status (at least for the first two) as it makes no sense to run a check on a NULL taxononmy or look for the NULL term.
&lt;/p&gt;
&lt;p&gt;
Additionally I tried to make the docblocks less complicate. It's far away from perfect, just one little step, I'm sure everybody else will find additional stuff that can be improved with the docblocks. Looks like a lot of redundant information in there.
&lt;/p&gt;
&lt;p&gt;
There were some minor issues that looked like being created by doing copy &amp;amp; paste unreviewed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>clipboard.patch attached to Ticket #12526</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:30:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12526/clipboard.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12526/clipboard.patch/1285972205000000</guid>
      <description>&lt;p&gt;
Argument Order and Optionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526/1285972081000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12526#comment:9" title="Comment 9"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That would be inconsistent with all the rest of the tax api which has $term
first and $taxonomy second.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh that's not true. For example is_object_in_term() has $taxnomy first and then $term. All the functions that make use of has_term not even have the taxonomy name in their function name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:22:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:13/1285971756000000</guid>
      <description>&lt;p&gt;
That would be inconsistent with all the rest of the tax api which has $term first and $taxonomy second.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:17:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:12/1285971452000000</guid>
      <description>&lt;p&gt;
Functions that are easy to read (e.g. that consists only of a function call to has_term()), when the make use of the @use docblock that states this simple fact, is only adding redundant information and instead of helping, makes it harder to read and understand the function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 22:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:11/1285970917000000</guid>
      <description>&lt;p&gt;
Please improve the function argument order, first $taxonomy, then $term. Looks more natural to me.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function has_term( $term = '', $taxonomy = '', $post = null ) {
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function has_term( $taxonomy = '', $term = '', $post = null ) { }
&lt;/pre&gt;&lt;p&gt;
Next to that, those arguments are not optional, in this implementation they are. That's probably a mistake.
&lt;/p&gt;
&lt;p&gt;
I don't see any necessity to introduce optional arguments here. The post-&amp;gt;id can be generated in the deprecated function.
&lt;/p&gt;
&lt;p&gt;
I check if I can make a useful patch, reopening so far.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>15008-4.diff attached to Ticket #15008</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 21:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15008/15008-4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15008/15008-4.diff/1285968760000000</guid>
      <description>&lt;p&gt;
Forgot xmlrpc function...
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15008 (Deleting a category can orphan posts from the term_relationships table) updated</title>
      
        <dc:creator>louyx</dc:creator>

      <pubDate>Fri, 01 Oct 2010 21:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15008#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15008#comment:5/1285968443000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>15008-2.2.diff attached to Ticket #15008</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 21:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15008/15008-2.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15008/15008-2.2.diff/1285967953000000</guid>
      <description>&lt;p&gt;
remove (int) cast
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15008 (Deleting a category can orphan posts from the term_relationships table) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 21:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15008#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15008#comment:4/1285967589000000</guid>
      <description>&lt;p&gt;
Updated diff deprecates wp_delete_category and places logic inside wp_delete_term.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15008-2.diff attached to Ticket #15008</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 21:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15008/15008-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15008/15008-2.diff/1285967514000000</guid>
      <description>&lt;p&gt;
deprecates wp_delete_category
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15008 (Deleting a category can orphan posts from the term_relationships table) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:54:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15008#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15008#comment:3/1285966479000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15008#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should deprecate wp_delete_category() (also being used in XMLRPC) and move the logic into wp_delete_term().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15008 (Deleting a category can orphan posts from the term_relationships table) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:54:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15008#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15008#comment:2/1285966457000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15011 (WP_Http fails to load some conditions) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:32:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15011#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15011#comment:4/1285965120000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15011 (WP_Http fails to load some conditions) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15011#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15011#comment:3/1285965113000000</guid>
      <description>&lt;p&gt;
WordPress core includes class-http.php right after it includes http.php. So I'm thinking you have something else going on here.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #15011 (WP_Http fails to load some conditions) closed</title>
      
        <dc:creator>cthomas_engauge</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15011#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15011#comment:2/1285964902000000</guid>
      <description>fixed: &lt;p&gt;
Specifically I'm finding events in my error log that show that sometimes wordpress is trying to instantiate the object, but class-http.php is not loaded. I'm running a hybrid child theme called skeleton and no plugins.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:6/1285964506000000</guid>
      <description>&lt;p&gt;
That will be easy to spot if you have WP_DEBUG on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15011 (WP_Http fails to load some conditions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15011#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15011#comment:1/1285964326000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15011" title="#15011: defect (bug): WP_Http fails to load some conditions (closed: invalid)"&gt;cthomas_engauge&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm experiencing an issue where when you redirect to wordpress from another server, WP_Http is instantiated before the class has been loaded.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure what that means or what you're trying to do, but class-http.php is always included by core, so there's no reason to conditionally include class-http.php as it should always exist.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>http.php.patch attached to Ticket #15011</title>
      
        <dc:creator>cthomas_engauge</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15011/http.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15011/http.php.patch/1285964190000000</guid>
      <description>&lt;p&gt;
Patch file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15011 (WP_Http fails to load some conditions) created</title>
      
        <dc:creator>cthomas_engauge</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:16:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15011</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15011/1285964172000000</guid>
      <description>&lt;p&gt;
I'm experiencing an issue where when you redirect to wordpress from another server, WP_Http is instantiated before the class has been loaded.
&lt;/p&gt;
&lt;p&gt;
PHP Fatal error:  Class 'WP_Http' not found in /usr/local/www/production/engauge.com/docroot/wp-includes/http.php on line 26
PHP Fatal error:  Class 'WP_Http' not found in /usr/local/www/production/engauge.com/docroot/wp-includes/http.php on line 26
PHP Fatal error:  Class 'WP_Http' not found in /usr/local/www/production/engauge.com/docroot/wp-includes/http.php on line 26
PHP Fatal error:  Class 'WP_Http' not found in /usr/local/www/production/engauge.com/docroot/wp-includes/http.php on line 26
PHP Fatal error:  Class 'WP_Http' not found in /usr/local/www/production/engauge.com/docroot/wp-includes/http.php on line 26
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15008 (Deleting a category can orphan posts from the term_relationships table) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 20:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15008#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15008#comment:1/1285963965000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we should deprecate wp_delete_category() (also being used in XMLRPC) and move the logic into wp_delete_term().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14999 (Reject invalid theme.zip uploads) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 19:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14999#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14999#comment:4/1285962142000000</guid>
      <description>&lt;p&gt;
I looked at this briefly this morning and even tested it by zipping a file with no style.css in it (or other legit theme files for that matter).
&lt;/p&gt;
&lt;p&gt;
The zip is uploaded, unpacked, and moved to the theme folder. If all that works, the importer responds positively because it did upload, unpack, and move a folder to the themes directory as requested.
&lt;/p&gt;
&lt;p&gt;
If you then go look at the available themes, you will see the improperly documented theme at the bottom of the screen in the 'broken themes' sections. Also confirmed is that 'folder already exists' message when attempting to upload it again... but that makes since.
&lt;/p&gt;
&lt;p&gt;
If you didn't want to do verification at the point of unpacking the zip (this process takes place in the parent class BTW and not just the install themes extended class), we could possibly tack on an error message in the theme instal skin that identifies that folder as being broken along with a link as Joshua mentioned . We could possibly even provide a link to delete the folder...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12863 (jQuery UI 1.8) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 19:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12863#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12863#comment:8/1285961993000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14750 (Add menus, menu items to import and export) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 19:27:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14750#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14750#comment:5/1285961276000000</guid>
      <description>&lt;p&gt;
I did some digging around and found the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The 'nav_menu' taxonomy is included at the top of the export file in the main channel along with any other core / custom terms.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;Posts with post type of 'nav_menu_item' already get included in the export file if all content types are selected. This is because can_export is true by default (it doesn't appear in the select box for content types on the export page because is_public is set to false).&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;Posts with post type of 'nav_menu_item' fail to have their associated 'nav_menu' term taxonomy id associated with them in the export file.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The above results in the following when imported via the core WordPress Importer plugin
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;New taxonomy and terms are created for the 'nav_menu' taxonomy if they do not exist already (ie the Menus themselves get imported.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;New menu items are imported correctly.&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;New menu items are not correctly associated with their correct menu (no object_to_term_taxonomy relationship is established in the term_relationships table
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This means that all we have to do to get nav menus exporting / importing correctly when all content types are selected during export process is to a) Tweak export script to add the nav_menu to the nav_menu_items and b) tweak the import plugin to set those relationships correctly.
&lt;/p&gt;
&lt;p&gt;
Seems like this should be corrected before tackling user specified options. Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 19:25:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:5/1285961143000000</guid>
      <description>&lt;p&gt;
After thinking about the suggested patch a bit, I was wondering how to deal with unset variables. Those are local variables that are unset prior to the patch to whitelist them for changes (EXTR_SKIP). If a filter now unsets array keys of the same name, those value will stay unset in the function but they are expected to be existing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14999 (Reject invalid theme.zip uploads) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 19:21:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14999#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14999#comment:3/1285960918000000</guid>
      <description>&lt;p&gt;
There should exist a function that checks for a style.css already, isn't it?
&lt;/p&gt;
&lt;p&gt;
With "the directory" nacin assumes wordpress.org/extend/themes, not the directory in which the broken theme has been copied into.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tinymce-3.3.9.1.zip attached to Ticket #12574</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 01 Oct 2010 19:19:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12574/tinymce-3.3.9.1.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12574/tinymce-3.3.9.1.zip/1285960760000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12574 (Update Tinymce) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 01 Oct 2010 18:53:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12574#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12574#comment:9/1285959224000000</guid>
      <description>&lt;p&gt;
I had to ZIP the patch file as it was too big. Also included is &lt;code&gt;wp-tinymce.js.gz&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This is a patch that applies TinyMCE v3.3.9.1 (3.3.9.2 was just released, so the patch will need refreshing).
&lt;/p&gt;
&lt;p&gt;
Applying the patch seems to fix TinyMCE for IE9 (it's broken for IE9 in WP trunk), but the alignment buttons throw a Javascript error in all browsers. I have no idea why they aren't working. TinyMCE and Javascript aren't my strongest areas.
&lt;/p&gt;
&lt;p&gt;
I'd appreciate it if someone else could take over for me. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14587 (Eliminate admin_notice_feed()) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 18:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14587#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14587#comment:2/1285958068000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15679" title="Eliminate admin_notice_feed(). Props technosailor. fixes #14587"&gt;[15679]&lt;/a&gt;) Eliminate admin_notice_feed(). Props technosailor. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14587" title="#14587: defect (bug): Eliminate admin_notice_feed() (closed: fixed)"&gt;#14587&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15679]: Eliminate admin_notice_feed(). Props technosailor. fixes #14587</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 18:34:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15679</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15679/1285958065696606</guid>
      <description>&lt;p&gt;
Eliminate admin_notice_feed(). Props technosailor. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14587" title="#14587: defect (bug): Eliminate admin_notice_feed() (closed: fixed)"&gt;#14587&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14586 (Eliminate wordpressmu_wp_mail_from()) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 18:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14586#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14586#comment:1/1285957970000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15678" title="Remove wordpressmu_wp_mail_from(). fixes #14586"&gt;[15678]&lt;/a&gt;) Remove wordpressmu_wp_mail_from(). fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14586" title="#14586: defect (bug): Eliminate wordpressmu_wp_mail_from() (closed: fixed)"&gt;#14586&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15678]: Remove wordpressmu_wp_mail_from(). fixes #14586</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 18:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15678</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15678/1285957967977201</guid>
      <description>&lt;p&gt;
Remove wordpressmu_wp_mail_from(). fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14586" title="#14586: defect (bug): Eliminate wordpressmu_wp_mail_from() (closed: fixed)"&gt;#14586&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12526 (Introduce has_term() to the tax API) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12526#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12526#comment:10/1285955096000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15677" title="has_term(). Props ptahdunbar. fixes #12526"&gt;[15677]&lt;/a&gt;) has_term(). Props ptahdunbar. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12526" title="#12526: enhancement: Introduce has_term() to the tax API (closed: fixed)"&gt;#12526&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15677]: has_term(). Props ptahdunbar. fixes #12526</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:44:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15677</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15677/1285955093866288</guid>
      <description>&lt;p&gt;
has_term(). Props ptahdunbar. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12526" title="#12526: enhancement: Introduce has_term() to the tax API (closed: fixed)"&gt;#12526&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15006 (Closing tag for empty &lt;p&gt; tag is removed) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:44:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15006#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15006#comment:4/1285955062000000</guid>
      <description>&lt;p&gt;
Unsurprisingly perhaps, when I activated PHP Markdown (which automatically disables wpautop and does its own autoparagraphing) the problem disappeared.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14746.5.diff attached to Ticket #14746</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:25:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14746/14746.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14746/14746.5.diff/1285953958000000</guid>
      <description>&lt;p&gt;
Reduce to the essentials
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15006 (Closing tag for empty &lt;p&gt; tag is removed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15006#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15006#comment:3/1285953525000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Why do you need an empty &amp;lt;p&amp;gt; tag anyway?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15006 (Closing tag for empty &lt;p&gt; tag is removed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15006#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15006#comment:2/1285953460000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15007 ($wp_query-&gt;query_vars['cat'] not set properly) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15007#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15007#comment:3/1285953221000000</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12891" title="#12891: task (blessed): Advanced multi-taxonomy WP_Query()s (closed: fixed)"&gt;#12891&lt;/a&gt; I mean.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15007 ($wp_query-&gt;query_vars['cat'] not set properly) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15007#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15007#comment:2/1285953192000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Caused by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15007" title="#15007: defect (bug): $wp_query-&amp;gt;query_vars['cat'] not set properly (closed: fixed)"&gt;#15007&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm on it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 17:12:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:50/1285953162000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15007" title="#15007: defect (bug): $wp_query-&amp;gt;query_vars['cat'] not set properly (closed: fixed)"&gt;#15007&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15009 (Widget RSS unstopable loop on self timeout) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15009#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15009#comment:5/1285951405000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15009 (Widget RSS unstopable loop on self timeout) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15009#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15009#comment:4/1285951398000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8910" title="#8910: defect (bug): Limit the RSS widget from using its own url (closed: fixed)"&gt;#8910&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15009 (Widget RSS unstopable loop on self timeout) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15009#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15009#comment:3/1285951385000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #15010 (logged user can see wp-login.php ????) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:42:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15010#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15010#comment:3/1285951336000000</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15010 (logged user can see wp-login.php ????) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:42:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15010#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15010#comment:2/1285951327000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14949" title="#14949: defect (bug): Login gives false assurance of having logged out (new)"&gt;#14949&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15010 (logged user can see wp-login.php ????) updated</title>
      
        <dc:creator>pentatonicfunk</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:40:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15010#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15010#comment:1/1285951252000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15010 (logged user can see wp-login.php ????) created</title>
      
        <dc:creator>pentatonicfunk</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15010</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15010/1285951137000000</guid>
      <description>&lt;p&gt;
when you already logged in, and you type &lt;a class="ext-link" href="http://yursite.com/wp-login.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://yursite.com/wp-login.php&lt;/a&gt;, you can see the login form
but for what ?? we already logged in , so show this login form is useless, and make user confuse whether they already logged in or not
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15009 (Widget RSS unstopable loop on self timeout) closed</title>
      
        <dc:creator>pentatonicfunk</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15009#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15009#comment:2/1285950759000000</guid>
      <description>fixed: &lt;p&gt;
the solution is just load widget rss when the requester is the client
so i change line
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_widget('WP_Widget_RSS');
&lt;/pre&gt;&lt;p&gt;
with
&lt;/p&gt;
&lt;pre class="wiki"&gt;if($_SERVER['SERVER_ADDR']!=determineIP()){
		register_widget('WP_Widget_RSS');
}
function determineIP() {
   if (checkIP($_SERVER["HTTP_CLIENT_IP"])) {
       return $_SERVER["HTTP_CLIENT_IP"];
   }
   foreach (explode(",",$_SERVER["HTTP_X_FORWARDED_FOR"]) as $ip) {
       if (checkIP(trim($ip))) {
           return $ip;
       }
   }
   if (checkIP($_SERVER["HTTP_X_FORWARDED"])) {
       return $_SERVER["HTTP_X_FORWARDED"];
   } elseif (checkIP($_SERVER["HTTP_X_CLUSTER_CLIENT_IP"])) {
       return $_SERVER["HTTP_X_CLUSTER_CLIENT_IP"];
   } elseif (checkIP($_SERVER["HTTP_FORWARDED_FOR"])) {
       return $_SERVER["HTTP_FORWARDED_FOR"];
   } elseif (checkIP($_SERVER["HTTP_FORWARDED"])) {
       return $_SERVER["HTTP_FORWARDED"];
   } else {
       return $_SERVER["REMOTE_ADDR"];
   }
}
/* BOB: By Grant Burton @ BURTONTECH.COM (11-30-2008): IP-Proxy-Cluster Fix */
function checkIP($ip) {
   if (!empty($ip) &amp;amp;&amp;amp; ip2long($ip)!=-1 &amp;amp;&amp;amp; ip2long($ip)!=false) {
       $private_ips = array (
       array('0.0.0.0','2.255.255.255'),
       array('10.0.0.0','10.255.255.255'),
       array('127.0.0.0','127.255.255.255'),
       array('169.254.0.0','169.254.255.255'),
       array('172.16.0.0','172.31.255.255'),
       array('192.0.2.0','192.0.2.255'),
       array('192.168.0.0','192.168.255.255'),
       array('255.255.255.0','255.255.255.255')
       );
       foreach ($private_ips as $r) {
           $min = ip2long($r[0]);
           $max = ip2long($r[1]);
           if ((ip2long($ip) &amp;gt;= $min) &amp;amp;&amp;amp; (ip2long($ip) &amp;lt;= $max)) return false;
       }
       return true;
   } else {
       return false;
   }
}
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15009 (Widget RSS unstopable loop on self timeout) updated</title>
      
        <dc:creator>pentatonicfunk</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15009#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15009#comment:1/1285950582000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15009 (Widget RSS unstopable loop on self timeout) created</title>
      
        <dc:creator>pentatonicfunk</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:29:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15009</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15009/1285950558000000</guid>
      <description>&lt;p&gt;
RSS widget allow us to input our own blog page rss/feed, but on some server it is possible to some page get timeout when RSS widget request feed on that page,
since that page is wordpress page, af course the page will load widget_init (again) and since that page time out, the RSS widget will doing unstopple loop until get the feed,
it is very annoying, and make server busy
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>15008.diff attached to Ticket #15008</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15008/15008.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15008/15008.diff/1285949400000000</guid>
      <description>&lt;p&gt;
if taxonomy is category, send through wp_delete_category wrapper function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15008 (Deleting a category can orphan posts from the term_relationships table) created</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Fri, 01 Oct 2010 16:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15008</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15008/1285949277000000</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;p&gt;
1) Create a new category
&lt;/p&gt;
&lt;p&gt;
2) Place a post in only that category
&lt;/p&gt;
&lt;p&gt;
3) Delete that category
&lt;/p&gt;
&lt;p&gt;
4) Observe that post no longer exists in term_relationship table (also causes posts to not appear in edit-posts list when filtered for 'uncategorized').
&lt;/p&gt;
&lt;p&gt;
Cause of problem:
Direct calls to wp_delete_term() bypass logic and args previously populated in wp_delete_category().
&lt;/p&gt;
&lt;p&gt;
Possible solutions:
Add logic from wp_delete_category() above each call for wp_delete_term and pass the args directly to wp_delete_term or conditionally check for taxonomy type and pass to wp_delete_category (a wrap for wp_delete_term) to pick up needed logic.
&lt;/p&gt;
&lt;p&gt;
The attached diff takes approach two and passes to wp_delete_category if 'category' == $taxonomy
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14972 (Proposal:  Pool of common strings for core, themes, and plugins) updated</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Fri, 01 Oct 2010 15:54:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14972#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14972#comment:7/1285948473000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10964 (Improving query_posts performance) updated</title>
      
        <dc:creator>phpquery</dc:creator>

      <pubDate>Fri, 01 Oct 2010 15:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10964#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10964#comment:52/1285947961000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
great work, I was kicked out of different web hosting just because of the "CPU throttling" and this issue.
&lt;/p&gt;
&lt;p&gt;
For applying a fix to my 3.0.1 I should only download the query.php from the main
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/query.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/query.php&lt;/a&gt;
or should patch manually using query.php.&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15490" title="Allow plugins to add more options to the comment status meta box ..."&gt;r15490&lt;/a&gt;.patch ?
Also how can I patch using this file?
&lt;/p&gt;
&lt;p&gt;
Sorry for the laziness :/
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14941 (dynamic unloading and loading of plugins) updated</title>
      
        <dc:creator>kgraeme</dc:creator>

      <pubDate>Fri, 01 Oct 2010 15:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14941#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14941#comment:12/1285947729000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14941#comment:10" title="Comment 10"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sounds like the Subscribe2 plugin needs a check for the current_site and/or current_blog to prevent the double email.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not just Subscribe2 though. I see the same behavior with Twitter Tools and the like.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14941 (dynamic unloading and loading of plugins) updated</title>
      
        <dc:creator>kgraeme</dc:creator>

      <pubDate>Fri, 01 Oct 2010 15:40:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14941#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14941#comment:11/1285947620000000</guid>
      <description>&lt;p&gt;
I'm also getting double emails/tweets/etc from Subscribe2, Twitter Tools, or any plugin that sends a notification when a post is published. Also using donncha's sitewide tags which appears to be what's actually calling the switch_to_blog() function that trips this behavior. Sitewide tags has been one of the core essential plugins for wordpress-mu for years and it would be crippling to lose the functionality.
&lt;/p&gt;
&lt;p&gt;
So add my voice to asking for a fix/feature to resolve this.
&lt;/p&gt;
&lt;p&gt;
(We're even getting complaints from congressional representatives because of double email!)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12863 (jQuery UI 1.8) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 01 Oct 2010 15:13:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12863#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12863#comment:7/1285945997000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12863 (jQuery UI 1.8) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 01 Oct 2010 15:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12863#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12863#comment:6/1285945935000000</guid>
      <description>&lt;p&gt;
Though barely qualified to be making this patch, I thought it would be good to have it in sooner than later, so I tried my hand at it.
&lt;/p&gt;
&lt;p&gt;
I am running it on two different setups and haven’t noticed anything broken yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>r12863-jquery-ui-185.diff attached to Ticket #12863</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 01 Oct 2010 15:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12863/r12863-jquery-ui-185.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12863/r12863-jquery-ui-185.diff/1285945803000000</guid>
      <description>&lt;p&gt;
jQuery UI update from 1.7.3 to 1.8.5
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15007 ($wp_query-&gt;query_vars['cat'] not set properly) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 14:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15007#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15007#comment:1/1285942415000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14999 (Reject invalid theme.zip uploads) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 14:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14999#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14999#comment:2/1285942369000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14999#comment:1" title="Comment 1"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is no such "standard WP folder structure for themes".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Simply checking for a style.css file is all we need to do here.
&lt;/p&gt;
&lt;p&gt;
The problem does not exist for themes coming from the directory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15007 ($wp_query-&gt;query_vars['cat'] not set properly) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 01 Oct 2010 14:11:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15007</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15007/1285942300000000</guid>
      <description>&lt;p&gt;
I've noticed some themes are returning the same content for all categories when running current trunk (when visiting /category/foo|bar|baz).  They have usage of $wp_query-&amp;gt;query_vars['cat'] in common. Switching them to get_queried_object_id() fixes them, but we should preserve back compat.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15006 (Closing tag for empty &lt;p&gt; tag is removed) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 01 Oct 2010 13:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15006#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15006#comment:1/1285941036000000</guid>
      <description>&lt;p&gt;
The workaround I am currently using:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p style="text-align: right;"&amp;gt;Text Here&amp;lt;/p&amp;gt;
&amp;lt;p style="text-align: right;"&amp;gt;.&amp;lt;/p&amp;gt;
More Text Here
&lt;/pre&gt;&lt;p&gt;
Putting any text in the second paragraph somehow fixes the problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15006 (Closing tag for empty &lt;p&gt; tag is removed) created</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Fri, 01 Oct 2010 13:48:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15006</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15006/1285940892000000</guid>
      <description>&lt;p&gt;
I have a page post that starts like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p style="text-align: right;"&amp;gt;Text Here&amp;lt;/p&amp;gt;
&amp;lt;p style="text-align: right;"&amp;gt;&amp;lt;/p&amp;gt;
More Text Here
&lt;/pre&gt;&lt;p&gt;
The HTML source saves correctly, but the page output omits the closing tag for the second P element, causing the rest of the page to be invalid.
&lt;/p&gt;
&lt;p&gt;
If you have any trouble reproducing this I will be happy to debug it on my server.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 13:11:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:4/1285938683000000</guid>
      <description>&lt;p&gt;
Patch looks nice to me. I first would have argumented, that it's possible to create a class and handle it therein for a plugin, but the filter introduced with the patch looks nice as well. Should save plugin authors some time to code something based on the SQL commands.
&lt;/p&gt;
&lt;p&gt;
Making SQL queries the other command pattern next to the HTTP query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14998 (Allow WP_User-&gt;has_cap() to accept TRUE or FALSE as capability) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 13:02:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14998#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14998#comment:1/1285938178000000</guid>
      <description>&lt;p&gt;
I think that introduces bugs as it can differ on runtime. You seem to have a faible to overload function arguments, but I don't think that this is helpful generally.
&lt;/p&gt;
&lt;p&gt;
Probably the information stored with the menu elements which capabilities are needed will be executed for other users as well which would return true for them even if they don't have the needed capability. That could be somehow dangerous and hard to debug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14999 (Reject invalid theme.zip uploads) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 12:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14999#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14999#comment:1/1285937895000000</guid>
      <description>&lt;p&gt;
There is no such "standard WP folder structure for themes". The only thing that can be checked for are the checks that are done to iterate over installed themes and filtering out invalid ones.
&lt;/p&gt;
&lt;p&gt;
I dunno if it's possible to do that decision in reverse to find out if a theme is valid or not. Must be the up-most sub-directory within the themes directory then. Maybe some code needs to be restructured for that and then it's possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15000 (add_meta_box() should accept array of post types) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 12:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15000#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15000#comment:3/1285937643000000</guid>
      <description>&lt;p&gt;
+1 for wontfix, iterating should be something a developer handles on it's own normally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15001 (Duplication and incompatibilities in register_new_user() and ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 12:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15001#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15001#comment:1/1285937544000000</guid>
      <description>&lt;p&gt;
Your considerations look very useful to me. Maybe starting with removing code duplication and putting the shared code into functions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 01 Oct 2010 12:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:25/1285937123000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:16" title="Comment 16"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Boone went above and beyond in tracking down individual MU versions. By no means is that necessary.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and then:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, us using &lt;code&gt;@since MU&lt;/code&gt; originated in 3.0, and I want to continue that pattern. (That's why I haven't committed scribu's patch yet.) This is a special case. I believe it is important for us to differentiate whether MS functions were introduced after the merge, or whether they were a product of the merge.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you please explain me if it is not necessary to document the MU versions, why you believe those are important? I have problems to understand that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 01 Oct 2010 08:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:37/1285922900000000</guid>
      <description>&lt;p&gt;
For the backend, is the existing admin bar going to be merged into the new one?
&lt;/p&gt;
&lt;p&gt;
This would be very good, I think, as the new one from wp.com is more discreet and yet, it seems to me, more discoverable than the one we already had.
&lt;/p&gt;
&lt;p&gt;
Besides, I hate looking at so many bars taking up so many pixels of vertical space.  Browsers have their own bars too, and we can’t fill up the whole place with bars. :-D  Something’s got to give.
&lt;/p&gt;
&lt;p&gt;
Other than that, my concerns (dynamic CSS, jQuery dependency, option to switch on/off) were already addressed and I like the projected direction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15005 (Network theme assets are not efficiently cached) created</title>
      
        <dc:creator>berniecode</dc:creator>

      <pubDate>Fri, 01 Oct 2010 07:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15005</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15005/1285917271000000</guid>
      <description>&lt;p&gt;
In Wordpress 3, when you install a theme and activate it as a network theme, all sites share one set of theme files on disk. However, each site accesses the files through a different URL.
&lt;/p&gt;
&lt;p&gt;
For example, if you have two sites, sitea and siteb, using a subfolder install and both using the theme "my-theme", the theme files will be accessed through:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://example.com/sitea/wp-content/themes/my-theme/style.css
and
http ://example.com/siteb/wp-content/themes/my-theme/style.css
&lt;/pre&gt;&lt;p&gt;
Both these URLs point to the same file through URL rewriting, but the browser loads and caches them each separately so when navigating between sites, the assets loaded on one site are not reused from the cache for the next site.
&lt;/p&gt;
&lt;p&gt;
The correct behaviour would be for each site to have a stylesheet loaded from
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://example.com/wp-content/themes/my-theme/style.css
&lt;/pre&gt;&lt;p&gt;
Workaround:
&lt;/p&gt;
&lt;p&gt;
I have fixed this issue on my own site with a filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('theme_root_uri', 'alter_theme_root_uri');
function alter_theme_root_uri($theme_root_uri) {
    // replace
    //     http://example.com/sitename/wp-content/themes
    // with
    //     http://example.com/wp-content/themes
    return preg_replace('#/[\w-]+/(wp-content/themes)#', '/\1', $theme_root_uri);
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 01 Oct 2010 07:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:36/1285917188000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>lonelicloud</dc:creator>

      <pubDate>Fri, 01 Oct 2010 07:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:35/1285916991000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I found a bug:
&lt;/p&gt;
&lt;p&gt;
First, I'm using Multisite mode of WP 3.1 alpha.
Second, when I update to the newest alpha version, I noticed that when I was in admin panel, the front-end code was loaded in. If you check the source code of admin panel page, you should understand what I mean.
And in this case, Google analysis code has been loaded with this. You should find URL contains /wp-admin/ is counted in your google analysis.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14990 (Use CODE instead of KBD tag) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 01 Oct 2010 06:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14990#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14990#comment:3/1285916083000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with nacin.  KBD is the correct semantic choice here.
&lt;/p&gt;
&lt;p&gt;
CODE, on the other hand, is incorrect, not only here but in most other places it is used in the WP dashboard.
&lt;/p&gt;
&lt;p&gt;
If the admin was HTML5, we could replace CODE in such instances with the repurposed I element (alternative voice or mood conventionally set in italic) and be done with it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15004 (Missing index on signups table) updated</title>
      
        <dc:creator>barry</dc:creator>

      <pubDate>Fri, 01 Oct 2010 03:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15004#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15004#comment:1/1285904976000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>15004.diff attached to Ticket #15004</title>
      
        <dc:creator>barry</dc:creator>

      <pubDate>Fri, 01 Oct 2010 03:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15004/15004.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15004/15004.diff/1285904950000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15004 (Missing index on signups table) created</title>
      
        <dc:creator>barry</dc:creator>

      <pubDate>Fri, 01 Oct 2010 03:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15004</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15004/1285904905000000</guid>
      <description>&lt;pre class="wiki"&gt;wp-includes/ms-functions.php:590:
$signup = $wpdb-&amp;gt;get_row( $wpdb-&amp;gt;prepare("SELECT * FROM $wpdb-&amp;gt;signups WHERE user_email = %s", $user_email) );
wp-includes/ms-functions.php:595:
$wpdb-&amp;gt;query( $wpdb-&amp;gt;prepare("DELETE FROM $wpdb-&amp;gt;signups WHERE user_email = %s", $user_email) );
&lt;/pre&gt;&lt;p&gt;
But there is no index on user_email in the signups table.  Makes these queries perform a full table scan which is slow when you have lots of signups.
&lt;/p&gt;
&lt;p&gt;
Attached patch adds the index but I can't figure out how schema upgrades on MS-specific tables ever get run after the initial activation of MS mode and table creation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 01:45:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:3/1285897505000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_query_clauses.diff attached to Ticket #14997</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 01:44:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14997/wp_query_clauses.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14997/wp_query_clauses.diff/1285897476000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 01:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:2/1285897426000000</guid>
      <description>&lt;p&gt;
While coming up with a patch, I noticed the 'posts_*_paged' filters. These were introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2000" title="Add post_where_paged and post_join_paged filter hooks.  Move ..."&gt;[2000]&lt;/a&gt;, back when WP had something called 'paging by days':
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/classes.php?annotate=blame&amp;amp;rev=2000#L482"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/classes.php?annotate=blame&amp;amp;rev=2000#L482&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_query_bits.diff attached to Ticket #14997</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 01:34:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14997/wp_query_bits.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14997/wp_query_bits.diff/1285896860000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 01:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:24/1285896753000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15676" title="Add inline documentation for ms-blogs.php. See #14953"&gt;[15676]&lt;/a&gt;) Add inline documentation for ms-blogs.php. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15676]: Add inline documentation for ms-blogs.php. See #14953</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 01 Oct 2010 01:32:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15676</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15676/1285896751297125</guid>
      <description>&lt;p&gt;
Add inline documentation for ms-blogs.php. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:7/1285887599000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14993#comment:6" title="Comment 6"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Example of the current implementation on wordpress.com: &lt;a class="ext-link" href="http://hakre.wordpress.com/2010/09/29/washtml-php-library/#comment-954"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Link&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think &lt;code&gt;?&lt;/code&gt; being a part of the link in that example is a bug. I like how GMail formatted your example (I received your comment via e-mail). Google.com was properly links, but neither the &lt;code&gt;?&lt;/code&gt; nor the &lt;code&gt;!&lt;/code&gt; were.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14582 (Save/Publish spinners should be separate) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14582#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14582#comment:8/1285886633000000</guid>
      <description>&lt;p&gt;
Do you mean move everything to a single class, eliminating both the multiple IDs and the inline CSS ? I'd support that.&lt;br /&gt;
&lt;br /&gt;
One of the big problems with WP's CSS is that IDs are getting added in patches like this on a regular basis, bloat builds up over time with hundreds of single use IDs.&lt;br /&gt;
&lt;br /&gt;
Hopefully with the CSS refactor we can make more smart/dynamic classes for use in multiple instances
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15003 (Upgraded WordPress, Code appearing) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15003#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15003#comment:1/1285886268000000</guid>
      <description>invalid: &lt;p&gt;
Trac is for developing the next version of WordPress.
&lt;/p&gt;
&lt;p&gt;
Please use the support forums instead:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14582 (Save/Publish spinners should be separate) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14582#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14582#comment:7/1285886243000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's move these to a class. The visibility bit should be the default in CSS as well, with JS then toggling it.
&lt;/p&gt;
&lt;p&gt;
This keeps bugging me every time I save a post draft, so I'm likely going to just run with this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15003 (Upgraded WordPress, Code appearing) created</title>
      
        <dc:creator>astriker</dc:creator>

      <pubDate>Thu, 30 Sep 2010 22:30:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15003</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15003/1285885842000000</guid>
      <description>&lt;p&gt;
I have changed my theme, deactivated all plugins and I have extra code showing on my blog now that I clicked update. It shows update core from nightly build and such, so i do believe related to the upgrade.
&lt;/p&gt;
&lt;p&gt;
The link is -
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://astriker.com/blog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://astriker.com/blog/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14711 (Indexes for comment_author_email and user_id) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:42:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14711#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14711#comment:9/1285882927000000</guid>
      <description>&lt;p&gt;
Code for this recently hit the Akismet WP plugin and it makes for queries that look like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT( * )
FROM wp_comments
WHERE user_id = 5
AND comment_approved = 1
&lt;/pre&gt;&lt;p&gt;
and:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT( * )
FROM wp_comments
WHERE comment_author_email = 'joseph@josephscott.org'
AND comment_author = 'Joseph Scott'
AND comment_author_url = 'http://josephscott.org/'
AND comment_approved = 1
&lt;/pre&gt;&lt;p&gt;
The first is for comments left by users that were logged in, the second for those who weren't logged in.  Unfortunately both of these queries do full table scans.  Two new indexes that would help: user_id and comment_author_email (this seemed like the most likely to get a hit vs. author, author_url).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15002 (unfiltered_html capability is not observed when set explicitly for role) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:37:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15002#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15002#comment:2/1285882667000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15002 (unfiltered_html capability is not observed when set explicitly for role) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15002#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15002#comment:1/1285882656000000</guid>
      <description>&lt;p&gt;
You're missing an important section of the code that follows. There is no break; there. The comment specifically says it falls through:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	case 'unfiltered_html':
		// Disallow unfiltered_html for all users, even admins and super admins.
		if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
			$caps[] = 'do_not_allow';
			break;
		}
		// Fall through if not DISALLOW_UNFILTERED_HTML
	case 'delete_user':
	case 'delete_users':
		// If multisite these caps are allowed only for super admins.
		if ( is_multisite() &amp;amp;&amp;amp; !is_super_admin() )
			$caps[] = 'do_not_allow';
		else
			$caps[] = $cap;
		break;
&lt;/pre&gt;&lt;p&gt;
That might as well read this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	case 'unfiltered_html':
		// Disallow unfiltered_html for all users, even admins and super admins.
		if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
			$caps[] = 'do_not_allow';
			break;
		}
		// If multisite these caps are allowed only for super admins.
		if ( is_multisite() &amp;amp;&amp;amp; !is_super_admin() )
			$caps[] = 'do_not_allow';
		else
			$caps[] = $cap;
		break;
&lt;/pre&gt;&lt;p&gt;
I'm thinking you have something else going on which is why this isn't working for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14711 (Indexes for comment_author_email and user_id) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14711#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14711#comment:8/1285882640000000</guid>
      <description>&lt;p&gt;
@hakre: we'd like to use this in the Akismet plugin, see &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/ticket/1198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/ticket/1198&lt;/a&gt; and the corresponding changeset &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/changeset/294390"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://plugins.trac.wordpress.org/changeset/294390&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That query will almost certainly change before the plugin release, but it'll give you an idea of what we're trying to do and demonstrate that there's a practical need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:24:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994#comment:3/1285881864000000</guid>
      <description>&lt;p&gt;
Isn't there an in_filter() function?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15002 (unfiltered_html capability is not observed when set explicitly for role) created</title>
      
        <dc:creator>phlux0r</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:16:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15002</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15002/1285881407000000</guid>
      <description>&lt;p&gt;
When the unfiltered_html capability is explicitly set for a user role, WP does not observe it.
&lt;/p&gt;
&lt;p&gt;
In wp-includes/capabilities.php around line 1021 the code is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;        case 'unfiltered_html':
                // Disallow unfiltered_html for all users, even admins and super admins.
                if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
                        $caps[] = 'do_not_allow';
                        break;
                }
                // Fall through if not DISALLOW_UNFILTERED_HTML
&lt;/pre&gt;&lt;p&gt;
My fix is to change it to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;        case 'unfiltered_html':
                // Disallow unfiltered_html for all users, even admins and super admins.
                if ( defined('DISALLOW_UNFILTERED_HTML') &amp;amp;&amp;amp; DISALLOW_UNFILTERED_HTML ) {
                        $caps[] = 'do_not_allow';
                        break;
                } else { // FIX to observe the unfiltered_html capability assigned to role
                        $caps[] = $cap;
                        break;
                }
                // Fall through if not DISALLOW_UNFILTERED_HTML
&lt;/pre&gt;&lt;p&gt;
Cheers, Robert
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11905 (trac spam) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11905#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11905#comment:5/1285880929000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11905#comment:4" title="Comment 4"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then I deal with the very rare spam comment flood manually.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I get viagra emails from trac daily. It makes me start to question myself. (lol)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14582 (Save/Publish spinners should be separate) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14582#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14582#comment:6/1285880602000000</guid>
      <description>&lt;p&gt;
On 2nd review I'd like to question why we need a new ID and inline styles add in this patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11905 (trac spam) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 21:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11905#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11905#comment:4/1285880447000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11905#comment:3" title="Comment 3"&gt;dangayle&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please, the spam from the WordPress trac generates a LOT of emails if you're subscribed to the &lt;a class="ext-link" href="http://lists.automattic.com/mailman/listinfo/wp-trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-trac mailing list&lt;/a&gt;. It makes it really difficult for gmail to distinguish what is real and what is spam, so the filter doesn't work the greatest.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Surely. For Gmail, my wp-trac filter is set to never send any of them to spam if they're from the proper email address. Then I deal with the very rare spam comment flood manually.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just install &lt;a class="ext-link" href="http://trac.edgewall.org/wiki/SpamFilter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;SpamFilter&lt;/a&gt; or something. It even uses Akismet!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We have Akismet installed. It wasn't working right last time we had a spam issue, but I think Barry has addressed that.
&lt;/p&gt;
&lt;p&gt;
Whenever we do have an issue, we'll all notice it pretty quickly thanks to wp-trac. (If not, hop into #wordpress-dev.) We can then make Trac read-only temporarily, block the dotorg account, and run a query to remove the comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11905 (trac spam) updated</title>
      
        <dc:creator>dangayle</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:50:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11905#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11905#comment:3/1285879842000000</guid>
      <description>&lt;p&gt;
Please, the spam from the WordPress trac generates a LOT of emails if you're subscribed to the &lt;a class="ext-link" href="http://lists.automattic.com/mailman/listinfo/wp-trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-trac mailing list&lt;/a&gt;. It makes it really difficult for gmail to distinguish what is real and what is spam, so the filter doesn't work the greatest.
&lt;/p&gt;
&lt;p&gt;
Just install &lt;a class="ext-link" href="http://trac.edgewall.org/wiki/SpamFilter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;SpamFilter&lt;/a&gt; or something. It even uses Akismet!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14133 (Custom post type breaks the_editor in plugins) updated</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14133#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14133#comment:4/1285879229000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14133.diff attached to Ticket #14133</title>
      
        <dc:creator>blepoxp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:39:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14133/14133.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14133/14133.diff/1285879195000000</guid>
      <description>&lt;p&gt;
If post parent is empty, return true
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 20:08:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:23/1285877280000000</guid>
      <description>&lt;p&gt;
You're right, I misread.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would say that only functions that provide more information on the usage of the function should be linked with @uses as some functions and methods are helpers for other functions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14290 (register_new_user() can't handle WP_Error result from wp_create_user()) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14290#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14290#comment:2/1285876405000000</guid>
      <description>&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15001" title="#15001: defect (bug): Duplication and incompatibilities in register_new_user() and ... (new)"&gt;#15001&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15000 (add_meta_box() should accept array of post types) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15000#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15000#comment:2/1285875446000000</guid>
      <description>&lt;p&gt;
A roundabout solution presented there, but so it goes.  A straightforward foreach would be more concise:
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach ( array( 'post', 'page', 'event' ) as $page )
    add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), $page, 'side' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:35:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:22/1285875300000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:21" title="Comment 21"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:19" title="Comment 19"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should remove all those @uses because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;they get stale really fast
&lt;/li&gt;&lt;li&gt;you can get that information by using PHPXref or just looking at the source
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
As the Codex says, @uses should only be used for globals, like $wpdb.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The codex does not say that. It also wouldn't be true in any case. The only reason the @uses would be stale is if there were modifications to the code without updating the inline documentation.
&lt;/p&gt;
&lt;p&gt;
Using a separate application takes away from the reasons behind phpdocumentor sites. I would say that only functions that provide more information on the usage of the function should be linked with &lt;code&gt;@uses&lt;/code&gt; as some functions and methods are helpers for other functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15000 (add_meta_box() should accept array of post types) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:17:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15000#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15000#comment:1/1285874267000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13305" title="#13305: enhancement: Allow multiple post types to use same add_meta_box call (Pass an array ... (closed: wontfix)"&gt;#13305&lt;/a&gt; which was wontfix'd.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15001 (Duplication and incompatibilities in register_new_user() and ...) created</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15001</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15001/1285874171000000</guid>
      <description>&lt;p&gt;
As a result of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12778" title="Add email and login dupe checking down into wp_insert_user(). Tidy up ..."&gt;[12778]&lt;/a&gt;, the commit of a patch that was part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11644" title="#11644: task (blessed): multiple blogs &amp;amp; sites / merge WPMU (closed: fixed)"&gt;#11644&lt;/a&gt; (the MU-merge ticket), &lt;code&gt;wp_insert_user()&lt;/code&gt; was modified to introduce user verification checks.  The addition of these checks also introduced a number of duplications and incompatibilities between it and &lt;code&gt;register_new_user()&lt;/code&gt;.  (Bear in mind that &lt;code&gt;register_new_user()&lt;/code&gt; calls &lt;code&gt;wp_create_user()&lt;/code&gt; which calls &lt;code&gt;wp_insert_user()&lt;/code&gt;.)
&lt;/p&gt;
&lt;p&gt;
These issues include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Duplication (both run-time execution and code): both functions perform &lt;code&gt;username_exists()&lt;/code&gt; and &lt;code&gt;email_exists()&lt;/code&gt; checks.  Ideally, we should only perform each check once, and from a single piece of code.
&lt;/li&gt;&lt;li&gt;Whereas both functions perform &lt;code&gt;username_exists()&lt;/code&gt; and &lt;code&gt;email_exists()&lt;/code&gt; checks, &lt;code&gt;register_new_user()&lt;/code&gt; performs more checks (empty_username, invalid_username, empty_email, invalid_email).  If the former 2 are being checked, all 6 criteria should be checked.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_insert_user()&lt;/code&gt; can now return a WP_Error object, but &lt;code&gt;register_new_user()&lt;/code&gt; can't handle it (I reported this in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14290" title="#14290: defect (bug): register_new_user() can't handle WP_Error result from wp_create_user() (closed: fixed)"&gt;#14290&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;&lt;code&gt;register_new_user()&lt;/code&gt; generates a new generic error if &lt;code&gt;wp_create_user()&lt;/code&gt; (via &lt;code&gt;wp_insert_user()&lt;/code&gt;) returns an error (assuming proper patch &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14290" title="#14290: defect (bug): register_new_user() can't handle WP_Error result from wp_create_user() (closed: fixed)"&gt;#14290&lt;/a&gt;), rather than passing along the more specific error it was told about
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If an error is returned by &lt;code&gt;wp_create_user()&lt;/code&gt;, &lt;code&gt;register_new_user()&lt;/code&gt; throws a generic 'registerfail' error (&lt;code&gt;'&amp;lt;strong&amp;gt;ERROR&amp;lt;/strong&amp;gt;: Couldn&amp;amp;#8217;t register you... please contact the &amp;lt;a href="mailto:%s"&amp;gt;webmaster&amp;lt;/a&amp;gt; !'&lt;/code&gt;).  However, most likely it received a more informative WP_Error object.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;register_new_user()&lt;/code&gt; allows errors to be suppressed via filters, but &lt;code&gt;wp_insert_user()&lt;/code&gt; does not
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;code&gt;register_new_user()&lt;/code&gt; has the filter 'registration_errors' which allows plugins to suppress any encountered errors.  Having done so, &lt;code&gt;register_new_users()&lt;/code&gt;'s subsequent call to &lt;code&gt;wp_create_user()&lt;/code&gt; can generate an error (of the type already suppressed) which is then un-suppressable.  This renders the 'registration_errors' filter useless for the username_exists and email_exists errors (and possibly other in the future).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
These different issues may warrant separate tickets, but cumulatively I think they point to the need to refactor &lt;code&gt;register_new_user()&lt;/code&gt; and &lt;code&gt;wp_insert_user()&lt;/code&gt; to be more efficient and compatible.
&lt;/p&gt;
&lt;p&gt;
This is a rare instance where I don't include an immediate patch for a ticket, but I wanted to get it out there and see if we can try and get these fixed for 3.1.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>15000.diff attached to Ticket #15000</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15000/15000.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15000/15000.diff/1285874158000000</guid>
      <description>&lt;p&gt;
Aforementioned patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15000 (add_meta_box() should accept array of post types) created</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:15:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15000</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15000/1285874104000000</guid>
      <description>&lt;p&gt;
I often find myself defining an identical meta box for different post types.  It would be nice if &lt;code&gt;add_meta_box()&lt;/code&gt; accepted an array as its &lt;code&gt;$page&lt;/code&gt; argument.  For backward-compatibility the function will still accept a string.  So for all else being equal, the same metabox could be added to multiple post types in a single line of code.  Of course, if the meta box needs per-post_type configuration, &lt;code&gt;add_meta_box()&lt;/code&gt; could be called separately for each post type.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), 'post', 'side' );
add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), 'page', 'side' );
add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), 'event', 'side' );
&lt;/pre&gt;&lt;p&gt;
would become:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_meta_box( 'my-geo', 'Geolocation Info', array( &amp;amp;$this, 'geo_form' ), array( 'post', 'page', 'event' ), 'side' );
&lt;/pre&gt;&lt;p&gt;
Of course, the former would continue to work.
&lt;/p&gt;
&lt;p&gt;
One could certainly loop through the post types manually to call &lt;code&gt;add_meta_box()&lt;/code&gt;, but I think the proposed patch clarifies coding intention.
&lt;/p&gt;
&lt;p&gt;
Patch is attached.  (In the patch, I didn't indent the content of the newly introduced &lt;code&gt;foreach() ... endforeach;&lt;/code&gt; since it would look like the whole function got changed when in fact I only made a very minor change.  The function also has a precendent of a non-indented foreach.  However, I would anticipate the actual commit might want the indentation, which can be provided.)
&lt;/p&gt;
&lt;p&gt;
(Note: affects, or affected by, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13937" title="#13937: enhancement: Pass named arguments to add_meta_box() (closed: wontfix)"&gt;#13937&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>14998.diff attached to Ticket #14998</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14998/14998.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14998/14998.diff/1285874096000000</guid>
      <description>&lt;p&gt;
Aforementioned patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14999 (Reject invalid theme.zip uploads) created</title>
      
        <dc:creator>jstrebel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14999</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14999/1285874092000000</guid>
      <description>&lt;p&gt;
When a user uploads (/wp-admin/theme-install.php) a theme.zip file from their desktop that may have an invalid folder structure WP accepts the upload. The theme does not appear in the /wp-admin/themes.php list of available themes so the user assumes it was not taken and they try the upload again and are met with a cryptic "Folder already exists" message.
&lt;/p&gt;
&lt;p&gt;
Perhaps WP could validate the internal file/folder structure of the theme.zip and reject the upload with a clearer message such as: "This theme does not comply with the standard WP folder structure for themes. Please see this topic &amp;lt;link to topic&amp;gt; that explains the proper standard. Note: Please alert the theme author to modify their theme.zip download to comply"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14998 (Allow WP_User-&gt;has_cap() to accept TRUE or FALSE as capability) created</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 30 Sep 2010 19:14:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14998</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14998/1285874081000000</guid>
      <description>&lt;p&gt;
It would be handy (and in some instances potentially eliminate some redundancy) if &lt;code&gt;WP_User-&amp;gt;has_cap()&lt;/code&gt; could be made to immediately return TRUE or FALSE if passed a boolean as the capability.  The primary use case for this is for invoking the various menu-adding functions (&lt;code&gt;add_menu_page()&lt;/code&gt;, &lt;code&gt;add_submenu_page()&lt;/code&gt;, etc) after having determined the current user already has sufficient capabilities to view the menu.  In such cases, we can bypass any further capability checks and simply pass TRUE or FALSE as the capability.
&lt;/p&gt;
&lt;p&gt;
A simplistic example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;   if ( current_user_can( 'manage_options' ) ) {
      add_options_page( 'My Plugin', 'Item A', 'manage_options', 'my-plugin-a', array( &amp;amp;$this, 'my_menu_a' ) );
      add_options_page( 'My Plugin', 'Item B', 'manage_options', 'my-plugin-b', array( &amp;amp;$this, 'my_menu_b' ) );
      // do some other stuff here for someone with 'manage_options' capabilities
   }
&lt;/pre&gt;&lt;p&gt;
In the above, the current user is being checked three times for the 'manage_options' capability.  With the attached patch applied, it'd be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;   if ( current_user_can( 'manage_options' ) ) {
      add_options_page( 'My Plugin', 'Item A', true, 'my-plugin-a', array( &amp;amp;$this, 'my_menu_a' ) );
      add_options_page( 'My Plugin', 'Item B', true, 'my-plugin-b', array( &amp;amp;$this, 'my_menu_b' ) );
      // do some other stuff here for someone with 'manage_options' capabilities
   }
&lt;/pre&gt;&lt;p&gt;
The patch should allow for a boolean to be specified as a capability in any capability-accepting function.  If true or false is a capability (or in the list of capabilities), then &lt;code&gt;has_cap()&lt;/code&gt; will return that boolean without further capability checking.  In the event a capabilities array contains both, false takes precendence over true (err on the side of restriction rather than permission).
&lt;/p&gt;
&lt;p&gt;
Patch attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997#comment:1/1285871869000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Props!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14349 (Filter to query_posts() args) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14349#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14349#comment:11/1285871797000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14997" title="#14997: enhancement: Single filter for all WP_Query clauses (closed: fixed)"&gt;#14997&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14997 (Single filter for all WP_Query clauses) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14997</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14997/1285871690000000</guid>
      <description>&lt;p&gt;
From &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14349" title="#14349: enhancement: Filter to query_posts() args (closed: worksforme)"&gt;#14349&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Most times, when you have to manipulate the raw SQL request in WP_Query, you need to alter multiple clauses (JOIN, WHERE etc.).
&lt;/p&gt;
&lt;p&gt;
Currently, you need to register a callback for each of those:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function fictional_alter_where( $where, $wp_query ) {
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
        $where .= " AND meta_value IN ( 'foo', 'bar' )";
    }
    return $where;
}
add_filter( 'posts_where', 'fictional_alter_where' );
function fictional_alter_join( $join, $wp_query ) {
    global $wpdb;
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
        $join .= " JOIN $wpdb-&amp;gt;postmeta ON ($wpdb-&amp;gt;posts.ID = $wpdb-&amp;gt;postmeta.post_id )";
    }
    return $join;
}
add_filter( 'posts_where', 'fictional_alter_join' );
&lt;/pre&gt;&lt;p&gt;
I think we can all agree that this is pretty cumbersome.
&lt;/p&gt;
&lt;p&gt;
Here's how it can look like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function fictional_alter_query( $bits, $wp_query ) {
    global $wpdb;
    if ( $wp_query-&amp;gt;get( 'custom_var' ) ) {
    	$bits['where'] .= " AND meta_value IN ( 'foo', 'bar' )";
        $bits['join']  .= " JOIN $wpdb-&amp;gt;postmeta ON ($wpdb-&amp;gt;posts.ID = $wpdb-&amp;gt;postmeta.post_id )";
    }
    return $bits;
}
new WP_Query_Manipulation( 'fictional_alter_query' );
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/14349/wp-query-manipulation.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_Query_Manipulation&lt;/a&gt; is a class that leverages the existing hooks, but it has a lot of overhead and isn't 100% reliable.
&lt;/p&gt;
&lt;p&gt;
So, I propose we add this filter in WP_Query.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:23:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:21/1285871014000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:19" title="Comment 19"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should remove all those @uses because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;they get stale really fast
&lt;/li&gt;&lt;li&gt;you can get that information by using PHPXref or just looking at the source
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
As the Codex says, @uses should only be used for globals, like $wpdb.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:20/1285870911000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
See ms-blogs.2.diff
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:28/1285870878000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:27" title="Comment 27"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't know. We'll discuss it today at the dev meeting.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm really motivated to get some of this included in core (even if that means v3.2.)  I just want to feel like I've contributed real tangible value to core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ms-blogs.2.diff attached to Ticket #14953</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/ms-blogs.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/ms-blogs.2.diff/1285870878000000</guid>
      <description>&lt;p&gt;
Set @since MU. More warnings on switch_to_blog()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:19/1285870486000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:17" title="Comment 17"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
14953-2.diff finishes off ms-functions.php.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We should remove all those @uses because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;they get stale really fast
&lt;/li&gt;&lt;li&gt;you can get that information by using PHPXref or just looking at the source
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 18:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:27/1285870084000000</guid>
      <description>&lt;p&gt;
I don't know. We'll discuss it today at the dev meeting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:26/1285869431000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:25" title="Comment 25"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
No can do, since that would cause syntax errors. So, I think we should go with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As an alternate, or a stop gap?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:25/1285869220000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:24" title="Comment 24"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If that's the case I say we add the &lt;code&gt;private&lt;/code&gt;s back in and even the &lt;code&gt;static&lt;/code&gt; method unless  you see the latter as an issue?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No can do, since that would cause syntax errors. So, I think we should go with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:18/1285868437000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://codex.wordpress.org/Inline_Documentation"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Inline_Documentation&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Columns should break at either 80 or 100 for consistency with the rest of WordPress. Long Descriptions should be Informative paragraphs with concise information related to the technical details and additional information that couldn't be fit in the short description.
&lt;/p&gt;
&lt;p&gt;
However, more or less, one could go through and edit the files for consistency after they are complete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:14:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:24/1285866877000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:23" title="Comment 23"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ah, another "wonderful" thing about PHP4: objects are not passed by reference, but are cloned. That's why we have add_action_ref_array().
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well that's a bit of a bummer.  I'm starting to understand why people have been ranting about the switch for so long now.
&lt;/p&gt;
&lt;p&gt;
If that's the case I say we add the &lt;code&gt;private&lt;/code&gt;s back in and even the &lt;code&gt;static&lt;/code&gt; method unless  you see the latter as an issue?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add a big warning in the docs, signaling that this doesn't work properly in PHP4
&lt;/li&gt;&lt;li&gt;punt to WP 3.2 and only commit &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; in 3.1
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I'm good for either.  What does the core team think about adding PHP5-specific code right now?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, we generally use 'delete' when it's related to user data, like posts and comments. We use 'remove' for everything else: remove_action(), remove_theme_support() etc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds good.  I'll make those changes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I used the terms "Menu Section" and "Menu Item" because AFAICT there hasn't been consistent naming and the names that have been used are unclear (at least to me.) If there are terms that others would prefer, I can change.
&lt;/p&gt;
&lt;p&gt;
We do have a naming convention:
&lt;/p&gt;
&lt;pre class="wiki"&gt;menu: a top-level item
submenu: an item inside a menu
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
Ugh. Those terms were some of what caused me difficulty when I first tried to understand the menus, and hence why I used different terms. The "submenu" term is particularly problematic for me because AFAICT they are options, not (sub)menus. And even "menu" is not so good because isn't the entire thing a menu?
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Proposal&lt;/em&gt;: Evolve these terms and make a break from the past?  After all, we are talking about deprecating the old architecture, why not deprecate the terms too?  Here are some potentials:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;menu section, menu item
&lt;/li&gt;&lt;li&gt;menu section, menu option
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And there might be others?
&lt;/p&gt;
&lt;p&gt;
I'll wait to make the "delete_*" -&amp;gt; "remove_*" changes until we decide on this.
&lt;/p&gt;
&lt;p&gt;
Also, can I lobby for deprecating the external use of the existing functions and moving to these or something else that is &lt;code&gt;$args&lt;/code&gt; based rather than 6 or 7 parameters?  They include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;add_menu_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_object_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_utility_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_submenu_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_management_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_options_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_theme_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_plugins_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_users_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_dashboard_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_posts_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_media_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_links_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_pages_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_comments_page()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;add_plugins_page()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The new functions could call these with an &lt;em&gt;"undocumented"&lt;/em&gt; additional parameter that, if not passed, would trigger a deprecated warning when &lt;code&gt;WP_DEBUG&lt;/code&gt; is set.  Doing this could really streamline this otherwise very obtuse API. Thoughts?
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12734 (Nav Menus don't scale for big sites) reopened</title>
      
        <dc:creator>radial</dc:creator>

      <pubDate>Thu, 30 Sep 2010 17:04:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12734#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12734#comment:32/1285866281000000</guid>
      <description>&lt;p&gt;
This is definitely not fixed.  We have a VPS with 1.98ghz processor and about 1.5gb of RAM.&amp;amp;nbsp; Our nav menu contains about 150 items. When saving the menu, it may take a full minute just to save this.&amp;amp;nbsp; CPU usage for the nav-menus.php process peaks out at about 85% for that minute.&amp;amp;nbsp; If the user thinks somethings wrong and backs out or reloads, the saving stops and cuts off the menu items that have not been saved.&amp;amp;nbsp; It's a PITA to have to recreate the menu, especially when it's not easy to find the pages because they aren't listed in any order, and the search for pages doesn't work.&amp;lt;br&amp;gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14660 (Hierarchical Page List in wp-admin/nav-menus.php) updated</title>
      
        <dc:creator>radial</dc:creator>

      <pubDate>Thu, 30 Sep 2010 16:47:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14660#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14660#comment:3/1285865255000000</guid>
      <description>&lt;p&gt;
It would be extremely useful if this list was at least ordered alphabetically
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 16:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:11/1285864375000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14953-2.diff attached to Ticket #14953</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 30 Sep 2010 15:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/14953-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/14953-2.diff/1285861005000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 30 Sep 2010 15:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:17/1285860989000000</guid>
      <description>&lt;p&gt;
14953-2.diff finishes off ms-functions.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>sbressler</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:34/1285858448000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14772#comment:33" title="Comment 33"&gt;layotte&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FYI, I did notice a bug with the Admin bar... if you are in Dashboard -&amp;gt; Update (and click to update a plugin) the Admin bar shows up in the Update Plugins iframe.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Already reported here: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/14772#comment:17"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/14772#comment:17&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994#comment:2/1285858373000000</guid>
      <description>&lt;p&gt;
It would be nice if we had consistent names and behaviour:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;current_hook()
&lt;/li&gt;&lt;li&gt;doing_hook()
&lt;/li&gt;&lt;li&gt;did_hook()
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
On did_hook(): Both do_action() and apply_filters() can be called multiple times, so there's no reason to artificially limit ourselves to did_action().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14651 (Call to undefined function get_hidden_columns()) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14651#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14651#comment:21/1285858249000000</guid>
      <description>&lt;p&gt;
for info (In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15653" title="Column headers revamp:
	* undeprecate get_column_headers()
	* ..."&gt;[15653]&lt;/a&gt;) &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14776" title="#14776: defect (bug): 'manage_' . screen . '_columns' filter not working (closed: fixed)"&gt;#14776&lt;/a&gt; undeprecates get_hidden_columns()
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994#comment:1/1285857866000000</guid>
      <description>&lt;p&gt;
+1 on using &lt;code&gt;doing_hook()&lt;/code&gt; as the generic name.
&lt;/p&gt;
&lt;p&gt;
When I first read the title of this ticket, I was very skeptical that this function would have a practical use.  After reading your description, though, I can think of at least 3 times I've had to work around the lack of this function to do the same or very similar things.  Fantastic idea!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:33/1285855702000000</guid>
      <description>&lt;p&gt;
FYI, I did notice a bug with the Admin bar... if you are in Dashboard -&amp;gt; Update (and click to update a plugin) the Admin bar shows up in the Update Plugins iframe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>media.patch attached to Ticket #14996</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:02:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14996/media.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14996/media.patch/1285855379000000</guid>
      <description>&lt;p&gt;
stripslashes from $_POST&lt;a class="missing wiki"&gt;instertonly?&lt;/a&gt;&lt;a class="missing wiki"&gt;title?&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14996 (Inserting an video/audio/media with an apostrophe in the title results ...) created</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 14:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14996</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14996/1285855344000000</guid>
      <description>&lt;p&gt;
If you insert a link using the Video, Audio, or Media buttons (note the Image button) and the Title has an apostrophe, the apostrophe is escaped with a slash.
&lt;/p&gt;
&lt;p&gt;
e.g.
&lt;/p&gt;
&lt;p&gt;
Video URL: &lt;a class="ext-link" href="http://my.awesomevideo.com/video"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my.awesomevideo.com/video&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Title: Lew's Awesome Video
&lt;/p&gt;
&lt;p&gt;
&amp;lt;a href="&lt;a class="ext-link" href="http://my.awesomevideo.com/video"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://my.awesomevideo.com/video&lt;/a&gt;"&amp;gt;Lew\'s Awesome Video&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Seems related to an old (already fixed) bug &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6414" title="#6414: defect (bug): Inserting an image with an apostrophe in the title or caption results ... (closed: invalid)"&gt;#6414&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 13:14:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:32/1285852459000000</guid>
      <description>&lt;p&gt;
I just uploaded trunk to do some testing and saw this error when I went to wp-admin.
&lt;/p&gt;
&lt;p&gt;
Parse error: syntax error, unexpected '&amp;amp;', expecting T_VARIABLE or '$' in /homepages/3/d238924033/htdocs/trunk.lewayotte.com/wp-includes/admin-bar/admin-bar-class.php on line 120
&lt;/p&gt;
&lt;p&gt;
But I just realized I was in a PHP4 environment, so you can probably ignore my patch.
&lt;/p&gt;
&lt;p&gt;
Lew
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-bar-class.php attached to Ticket #14772</title>
      
        <dc:creator>layotte</dc:creator>

      <pubDate>Thu, 30 Sep 2010 13:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14772/admin-bar-class.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14772/admin-bar-class.php/1285852117000000</guid>
      <description>&lt;p&gt;
syntax error, unexpected '&amp;amp;', expecting T_VARIABLE or '$' (in PHP5.3 environment)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14995 (minor typing mistake results in ignoring parameters for the pack() ...) created</title>
      
        <dc:creator>jakub.misek</dc:creator>

      <pubDate>Thu, 30 Sep 2010 13:02:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14995/1285851729000000</guid>
      <description>&lt;p&gt;
/wp-includes/js/tinymce/plugins/spellchecker/classes/utils/JSON.php
&lt;/p&gt;
&lt;p&gt;
line 535, 539, 543
&lt;/p&gt;
&lt;p&gt;
wrong order of parenthesis and commas results in calling ord() function with more than 1 parameter.
&lt;/p&gt;
&lt;p&gt;
Warning: ord() expects exactly 1 parameter, 2 given
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14994 (Introduce a way to identify a hook in progress) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 11:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14994</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14994/1285845752000000</guid>
      <description>&lt;p&gt;
We have did_action() and current_filter() but I've come across a use case for a hybrid of sorts, doing_action().
&lt;/p&gt;
&lt;p&gt;
Problem is, did_action() returns true the moment the hook is fired. Thus if you need to wait until after the hook is done executing, you need to also check current_filter(). The problem arises when there was another hook called since thne, because current_filter() does not traverse back up the stack.
&lt;/p&gt;
&lt;p&gt;
I considered adding an argument to either of the two other functions mentioned, but I think a new function makes the most sense. did_action() only works for actions. While current_filter() works for all hooks, it does one thing and that is to return the current hook. A new function makes the most sense here.
&lt;/p&gt;
&lt;p&gt;
doing_action() might not be the best name because did_action() only works for actions, but this would work for filters as well. At that point, I might recommend doing_hook().
&lt;/p&gt;
&lt;pre class="wiki"&gt;function doing_action( $action ) {
   global $wp_current_filter;
   return in_array( $action, $'wp_current_filter );
}
&lt;/pre&gt;&lt;p&gt;
The use case was that a plugin was applying the_content on wp_head. That was messing with my footnotes plugin. So I needed to make sure I had completely processed wp_head first, but there was no way to do that. Now I would be able to check &lt;code&gt;if ( did_action('wp_head') &amp;amp;&amp;amp; ! doing_action('wp_head') )&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:39:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:31/1285843157000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14990 (Use CODE instead of KBD tag) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:32:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14990#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14990#comment:2/1285842748000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
kbd is designed to be user input. I suppose we're probably inconsistent with this, but kbd seems semantic and proper here.
&lt;/p&gt;
&lt;p&gt;
A footnote, i18n-change is only necessary for changes late in the development cycle (near or after string freeze) or for point releases, that way we can alert translators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14990 (Use CODE instead of KBD tag) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14990#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14990#comment:1/1285842406000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:23/1285842347000000</guid>
      <description>&lt;p&gt;
Ah, another "wonderful" thing about PHP4: objects are not passed by reference, but are cloned. That's why we have add_action_ref_array().
&lt;/p&gt;
&lt;p&gt;
I think we should either:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add a big warning in the docs, signaling that this doesn't work properly in PHP4
&lt;/li&gt;&lt;li&gt;punt to WP 3.2 and only commit &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt; in 3.1
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, I used the terms "Menu Section" and "Menu Item" because AFAICT there hasn't been consistent naming and the names that have been used are unclear (at least to me.) If there are terms that others would prefer, I can change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We do have a naming convention:
&lt;/p&gt;
&lt;pre class="wiki"&gt;menu: a top-level item
submenu: an item inside a menu
&lt;/pre&gt;&lt;p&gt;
Also, we generally use 'delete' when it's related to user data, like posts and comments. We use 'remove' for everything else: remove_action(), remove_theme_support() etc.
&lt;/p&gt;
&lt;p&gt;
So, delete_admin_menu_section() would become remove_admin_menu() and delete_admin_menu_item() would be remove_admin_submenu().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14992 (When Object Caching is enabled switch_to_blog causes issues with some ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14992#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14992#comment:3/1285842124000000</guid>
      <description>&lt;p&gt;
Switch to blog is database only. Object Cache is not database.
&lt;/p&gt;
&lt;p&gt;
Strictly spoken, this is not a bug.
&lt;/p&gt;
&lt;p&gt;
As scribu already reported, this function is often not properly understood and therefore probably misused in some places. And as this ticket implies some of us might need more functionality in switching blogs, not only for the database context but also for the object-cache.
&lt;/p&gt;
&lt;p&gt;
I suggest to refactor switch_to_blog into switch_to_blog_database() and deprecate the older one/change it's use to switch every context available for a switch (e.g. database and then probably soon objectcache).
&lt;/p&gt;
&lt;p&gt;
Then other developers can implement new and needed functionality in similar named functions like switch_to_blog_objectchache().
&lt;/p&gt;
&lt;p&gt;
Just a raw idea:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function switch_to_blog($blogid) {
  $blogid = normalize_blogid($blogid);
  if (!is_valid_blogid($blogid))
    return false;
  current_blogid = get_current_blogid();
  if (!switch_to_blog_database($blogid)) {
    return false;
  }
  if (!switch_to_blog_objectcache($blogid)) {
    switch_to_blog_database($current_blogid);
    return false;
  }
  return $blogid;
}
&lt;/pre&gt;&lt;p&gt;
In contrast to my argumentation in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;, I think that the object-cache as it is something quite related to the database, should be able to switch as well and it should be useful to provide that functionality as well ASAP. I wonder how wordpress.com is dealing with such issues, assuming that they should have a setup when this comes into play. Maybe some wpcom devs can provide some useful feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 10:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:6/1285840855000000</guid>
      <description>&lt;p&gt;
This is a bug in wordpress. URL is defined by &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc3986"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RFC3986&lt;/a&gt; and the "!" character is part of the reserved group which makes it immune to transition. Simply said: It's part of the URL - in any case.
&lt;/p&gt;
&lt;p&gt;
Space is not btw, which means, that if it's followed by space it can be both: an exclamation mark and the end of a sentence.
&lt;/p&gt;
&lt;p&gt;
As we already do treat other chars of the reserved group as part of the URL (e.g. "?"), "!" should be treated the same.
&lt;/p&gt;
&lt;p&gt;
If the discussion in this ticket changes some minds that treating characters of the reserved group differently as we currently do in make_clickable, then the behaviour should be changed for the other reserved characters as well.
&lt;/p&gt;
&lt;p&gt;
For any decision, this will break backwards-compability.
&lt;/p&gt;
&lt;p&gt;
Reserved characters are:
&lt;/p&gt;
&lt;pre class="wiki"&gt;      reserved    = gen-delims / sub-delims
      gen-delims  = ":" / "/" / "?" / "#" / "[" / "]" / "@"
      sub-delims  = "!" / "$" / "&amp;amp;" / "'" / "(" / ")"
                  / "*" / "+" / "," / ";" / "="
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://tools.ietf.org/html/rfc3986#page-13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Source: RFC 3986 page 13&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A nice test-text:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Did it appear on http://www.google.com/?
Yes, it did appear on http://www.google.com/!
&lt;/pre&gt;&lt;p&gt;
Example of the current implementation on wordpress.com: &lt;a class="ext-link" href="http://hakre.wordpress.com/2010/09/29/washtml-php-library/#comment-954"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Link&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:16/1285839786000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14953#comment:13" title="Comment 13"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The last commit did use the MU version number (prefixing it with MU) which is needlessly inventing something new on top of PHPDoc and breaks with the documentation standard and with the current doing everywhere else in the project. Everywhere else is with a very few exceptions, a related case where this is problematic is here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14921" title="#14921: defect (bug): WP_Dependencies is tagged as external but is core package (closed: wontfix)"&gt;#14921&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As we do not need to do documentation work for the past of the MU fork (the MU fork is as much as I know history), I suggest to change the @since tags to &lt;code&gt;@since 3.0.0&lt;/code&gt; to streamline them with the rest of the codebase.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Boone went above and beyond in tracking down individual MU versions. By no means is that necessary. However, us using &lt;code&gt;@since MU&lt;/code&gt; originated in 3.0, and I want to continue that pattern. (That's why I haven't committed scribu's patch yet.) This is a special case. I believe it is important for us to differentiate whether MS functions were introduced after the merge, or whether they were a product of the merge.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Simon, patches don't trigger comment notifications, so I'm only seeing your patches now.
&lt;/p&gt;
&lt;p&gt;
Normally there's no need to document every single function via @uses, or even some of them. However, switch_to_blog() and restore_current_blog() need some serious documentation on exactly what they do and what they don't do, ref &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14992" title="#14992: defect (bug): When Object Caching is enabled switch_to_blog causes issues with some ... (closed: worksforme)"&gt;#14992&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14941" title="#14941: feature request: dynamic unloading and loading of plugins (closed: wontfix)"&gt;#14941&lt;/a&gt; in particular. We don't need to do little ones like did_action() but for others, it would help to not only include them but to have a description on how said function is used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:34:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:15/1285839272000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14783" title="#14783: enhancement: Incorrect/missing PHPDoc (closed: fixed)"&gt;#14783&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14783 (Incorrect/missing PHPDoc) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14783#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14783#comment:9/1285839236000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt; (missing PHP Docs)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14921 (WP_Dependencies is tagged as external but is core package) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14921#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14921#comment:5/1285839203000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:14/1285839170000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14953" title="#14953: enhancement: Add inline documentation to MultiSite functions (closed: fixed)"&gt;#14953&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14953 (Add inline documentation to MultiSite functions) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 30 Sep 2010 09:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14953#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14953#comment:13/1285839090000000</guid>
      <description>&lt;p&gt;
I suggest to put the wordpress version number to &lt;a class="ext-link" href="http://manual.phpdoc.org/HTMLSmartyConverter/HandS/phpDocumentor/tutorial_tags.since.pkg.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;@since&lt;/a&gt; (Documentation), as @since documents when (at which version) an element was first added to a package.
&lt;/p&gt;
&lt;p&gt;
The file changed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15675" title="Some phpdoc for ms-functions.php. props boonebgorges. see #14953."&gt;r15675&lt;/a&gt; have the following package phpdocs:
&lt;/p&gt;
&lt;pre class="wiki"&gt; * @package WordPress
 * @subpackage Multisite
&lt;/pre&gt;&lt;p&gt;
The last commit did use the MU version number (prefixing it with MU) which is needlessly inventing something new on top of PHPDoc and breaks with the documentation standard and with the current doing everywhere else in the project. Everywhere else is with a very few exceptions, a related case where this is problematic is here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14921" title="#14921: defect (bug): WP_Dependencies is tagged as external but is core package (closed: wontfix)"&gt;#14921&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As we do not need to do documentation work for the past of the MU fork (the MU fork is as much as I know history), I suggest to change the @since tags to &lt;code&gt;@since 3.0.0&lt;/code&gt; to streamline them with the rest of the codebase.
&lt;/p&gt;
&lt;p&gt;
Let me know if you would like to have a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ALT switch_to_blog and restore_current_blog inline docs.diff attached to Ticket #14953</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 30 Sep 2010 07:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/ALT%20switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/ALT%20switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff/1285833573000000</guid>
      <description>&lt;p&gt;
Alternative diff, this time with @uses for all functions called within the documented function, is this best practice to list them exhaustively or only where a comment on usage is required/given?
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>switch_to_blog and restore_current_blog inline docs.diff attached to Ticket #14953</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Thu, 30 Sep 2010 07:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14953/switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14953/switch_to_blog%20and%20restore_current_blog%20inline%20docs.diff/1285833199000000</guid>
      <description>&lt;p&gt;
Go on then, I'll bite: docs for switch_to_blog (inc beware, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14992" title="#14992: defect (bug): When Object Caching is enabled switch_to_blog causes issues with some ... (closed: worksforme)"&gt;#14992&lt;/a&gt;) and restore_current_blog
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 05:08:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:22/1285823299000000</guid>
      <description>&lt;p&gt;
BTW, it would be really nice if we could figure out a way to transition to using named identifiers instead of file/slug for identifiers. For example, this is not a really great identifier to have to deal with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;edit-tags.php?taxonomy=movie-genre&amp;amp;post_type=movie
&lt;/pre&gt;&lt;p&gt;
One issue (of many) if the ambiguity regarding the need to HTML encode/decode the ampersands as well the general length and complexity of this. It would be soooo much better to be able to simply call this the`"movie-genre-tags"' menu item or similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 30 Sep 2010 05:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:21/1285822975000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:20" title="Comment 20"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
These are the things that aren't supported in the antique version of PHP4:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;static method calls: &lt;code&gt;WP_AdminMenuSection::add($section,$args);&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;access modifiers for methods or properties:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;private function add(...)&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;private $index;&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Figures. Much of the work I did was rearchitect so I could use private.  Ah well.
&lt;/p&gt;
&lt;p&gt;
New version up:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/792b7aa5b695d1092520"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/792b7aa5b695d1092520&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Attempts to make PHP 4.x compatible by removing static and private functions and vars (though I can't test against v4.0)
&lt;/li&gt;&lt;li&gt;Added hookname property to both section and item
&lt;/li&gt;&lt;li&gt;Renamed property with list of items to be "items" instead of "submenus"
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>14991.2.diff attached to Ticket #14991</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 01:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14991/14991.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14991/14991.2.diff/1285810183000000</guid>
      <description>&lt;p&gt;
made sure top rules stayed first
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14991 (extra_rules_top should take priority over extra_permastructs) updated</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Thu, 30 Sep 2010 01:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14991#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14991#comment:3/1285810067000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14991#comment:2" title="Comment 2"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Won't that put the "top" rules last?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch.  Adding a new patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14991 (extra_rules_top should take priority over extra_permastructs) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 30 Sep 2010 00:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14991#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14991#comment:2/1285805987000000</guid>
      <description>&lt;p&gt;
Won't that put the "top" rules last?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>