<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39272 (Twenty Seventeen: Incorrect $content_width) reopened</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 23:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39272#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39272#comment:16/1482449244173424</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39272 (Twenty Seventeen: Incorrect $content_width) closed</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 23:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39272#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39272#comment:15/1482449004784395</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39635" title="Twenty Seventeen: Fix incorrect `$content_width` value in theme
This ..."&gt;39635&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Seventeen: Fix incorrect &lt;code&gt;$content_width&lt;/code&gt; value in theme&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This addresses a major bug. Incorrectly setting the &lt;code&gt;$content_width&lt;/code&gt; causes media embeds to end up with the wrong aspect ratio, among other issues. This fix uses &lt;code&gt;template_redirect&lt;/code&gt;,  to ensure conditional theme tags can be used. It also defines a default value at &lt;code&gt;after_theme_setup&lt;/code&gt; so that plugins have something to work with at &lt;code&gt;init&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props sstoqnov, laurelfulford, obenland.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39272" title="#39272: defect (bug): Twenty Seventeen: Incorrect $content_width (closed: fixed)"&gt;#39272&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39635]: Twenty Seventeen: Fix incorrect `$content_width` value in theme  This ...</title>
      
        <dc:creator>davidakennedy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 23:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39635</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39635/1482449003223579</guid>
      <description>&lt;p&gt;
Twenty Seventeen: Fix incorrect &lt;code&gt;$content_width&lt;/code&gt; value in theme
&lt;/p&gt;
&lt;p&gt;
This addresses a major bug. Incorrectly setting the &lt;code&gt;$content_width&lt;/code&gt; causes media embeds to end up with the wrong aspect ratio, among other issues. This fix uses &lt;code&gt;template_redirect&lt;/code&gt;,  to ensure conditional theme tags can be used. It also defines a default value at &lt;code&gt;after_theme_setup&lt;/code&gt; so that plugins have something to work with at &lt;code&gt;init&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props sstoqnov, laurelfulford, obenland.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39272" title="#39272: defect (bug): Twenty Seventeen: Incorrect $content_width (closed: fixed)"&gt;#39272&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:57:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:8/1482443834202449</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39377 (wpautop adds a extra &lt;/p&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39377#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39377#comment:1/1482443822178324</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a patch that does fix it but the fix is to add span to the block items which does feel right
&lt;/p&gt;
&lt;p&gt;
This was caused by &lt;a href="https://core.trac.wordpress.org/changeset/38592"&gt;https://core.trac.wordpress.org/changeset/38592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39376 (Pass WP_REST_Request object to registered callback for a route schema.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:55:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39376#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39376#comment:2/1482443713033809</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>formatting.php.patch attached to Ticket #39377</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39377/formatting.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39377/formatting.php.patch/1482443702180595</guid>
      <description>&lt;p&gt;
fixes it
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39378 (Allow passing custom class to the post pagination functions) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39378#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39378#comment:1/1482443524501158</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39378.patch attached to Ticket #39378</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39378/39378.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39378/39378.patch/1482443511602212</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31071 (media / post_mime_type related queries are very slow on larger sites) updated</title>
      
        <dc:creator>shakeels</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:49:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31071#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31071#comment:51/1482443356390672</guid>
      <description>&lt;p&gt;
@GunGeekATX That's the same issue that we have here.  It's a large site and based on how we are doing things, we know that it's always going to be a certain way.  There is no sense in even doing the lookup.  A filter on it would probably be an ideal setup for us as well.
&lt;/p&gt;
&lt;p&gt;
I basically ended up using @sboisvert patch that adds a filter.  Like in @GunGeekATX case, we always know that the value will be constant because of how we are using it.  In that case, for me, it's far easier to just bypass the entire query and just return false.  For us, that works right now, but it would be nice to get this into core so I don't have to patch it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39376.diff attached to Ticket #39376</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:44:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39376/39376.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39376/39376.diff/1482443079484792</guid>
      <description>&lt;p&gt;
Pass $route to the registered schema callback.  Also adds tests for this.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39378 (Allow passing custom class to the post pagination functions) created</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39378/1482443042220501</guid>
      <description>&lt;p&gt;
The functions &lt;code&gt;the_posts_pagination()&lt;/code&gt; and &lt;code&gt;get_the_posts_pagination()&lt;/code&gt; should accept a class to be used instead of only defaulting to &lt;code&gt;.pagination&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If anyone wishes to achieve this meanwhile, it must be done with the &lt;code&gt;navigation_markup_template&lt;/code&gt; filter, unfortunately:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;navigvation_markup_template_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$class&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'pagination'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$class&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'%1$s'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'posts-pagination'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$template&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'navigation_markup_template'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'navigvation_markup_template_filter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Autop-extra-p.php.2.patch attached to Ticket #39377</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.2.patch/1482442808780060</guid>
      <description>&lt;p&gt;
fixed the uses comment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:39:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:7/1482442782072646</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have added a test for this while I was creating one the other ticket
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Autop-extra-p-in-figure.php.patch attached to Ticket #39307</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:39:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39307/Autop-extra-p-in-figure.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39307/Autop-extra-p-in-figure.php.patch/1482442740965526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Autop-extra-p.php.patch attached to Ticket #39377</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39377/Autop-extra-p.php.patch/1482442436091683</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:21:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:6/1482441700975119</guid>
      <description>&lt;p&gt;
I am seeing similar problem in this ticket &lt;a href="https://core.trac.wordpress.org/ticket/39377"&gt;https://core.trac.wordpress.org/ticket/39377&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39377 (wpautop adds a extra &lt;/p&gt;) created</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 22 Dec 2016 21:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39377/1482441674378078</guid>
      <description>&lt;p&gt;
I am seeing similar problem  this code
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wpautop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
renders
&lt;/p&gt;
&lt;pre class="wiki"&gt; "&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
"
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39361 (Object not properly tested against in wp-includes/post-template.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39361#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39361#comment:1/1482440307600258</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @fourstringfail.
&lt;/p&gt;
&lt;p&gt;
Can you tell us in what situation the &lt;code&gt;post_content&lt;/code&gt; property would not be set here?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39376 (Pass WP_REST_Request object to registered callback for a route schema.) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39376#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39376#comment:1/1482439629932170</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39376" title="#39376: enhancement: Pass WP_REST_Request object to registered callback for a route schema. (closed: wontfix)"&gt;nerrad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I did a patch for this is it something that would be considered?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 from me, it's a harmless and potentially useful change that probably somebody intended to make at some point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39376 (Pass WP_REST_Request object to registered callback for a route schema.) created</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39376/1482439015637391</guid>
      <description>&lt;p&gt;
The documentation here (&lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/schema/#resource-schema"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/schema/#resource-schema&lt;/a&gt;) indicates that an instance of &lt;code&gt;WP_REST_Request&lt;/code&gt; is passed along to the registered callback for schema.
&lt;/p&gt;
&lt;p&gt;
However, as found in &lt;code&gt;\WP_REST_Server::get_data_for_route&lt;/code&gt; it is clear that the callback recieves nothing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( isset( $this-&amp;gt;route_options[ $route ] ) ) {
    $options = $this-&amp;gt;route_options[ $route ];
    if ( isset( $options['namespace'] ) ) {
        $data['namespace'] = $options['namespace'];
    }
    if ( isset( $options['schema'] ) &amp;amp;&amp;amp; 'help' === $context ) {
        $data['schema'] = call_user_func( $options['schema'] );
    }
}
&lt;/pre&gt;&lt;p&gt;
It's very clear the documentation is in error, and I realize that the request instance isn't even really exposed where the callback is invoked.  For the purpose of dynamic schema generation when there is a single schema callback used, it would be useful if we exposed the &lt;code&gt;$route&lt;/code&gt; to the callback.
&lt;/p&gt;
&lt;p&gt;
If I did a patch for this is it something that would be considered?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #38561,​39375 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 22 Dec 2016 20:06:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38561%2C39375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38561%2C39375/1482437199734580</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38561" title="#38561: defect (bug): Custom header sections show in the Customizer without any choices (closed: fixed)"&gt;#38561&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Thanks for the report. You are correct 😀
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39371 (Fix DocBlocks for duplicate hooks) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:51:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39371#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39371#comment:2/1482436308860912</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We should add something to the handbook here documenting this:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filters"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#4-hooks-actions-and-filters&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:45:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:18/1482435943042798</guid>
      <description>&lt;p&gt;
Okay, NOW we're making progress!
&lt;/p&gt;
&lt;p&gt;
You have a heavily customized install :) That's important for us to know to debug.
&lt;/p&gt;
&lt;p&gt;
The main site (example.com) is meant to be a publicly viewable site. Obviously there are ways around it, like WordPress.com (not sure how they did it TBH). But by making it so example.com is NOT accessible at all, that's why this happened. If it was, just as a landing page or what have you, it should properly redirect people where they need to go.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
All I am concerned about here are the links on the welcome page. It seems to be an artificial restriction
that I must have have a publicly accessible main site so that magic redirection works, when it is trivially
easy to change the welcome page to avoid this. Honestly, what is the principle behind this? Why does
magic redirection have to be used in this case, when it is so easy to avoid?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're falling to the original intent of WordPress Multisite, which was to manage a network of related, but not fully interconnected sites. That's why knowing the history of a thing helps us debug and why I was digging into the history of what YOU are doing. :) With the right information, we can understand the real problem based on your real intent.
&lt;/p&gt;
&lt;p&gt;
So!
&lt;/p&gt;
&lt;p&gt;
Why is yours breaking?
&lt;/p&gt;
&lt;p&gt;
Because your main site isn't 'not accessible to login' but 'not accessible AT ALL.' Meaning, as I understand it, if I went to your example.com, I would be blocked.
&lt;/p&gt;
&lt;p&gt;
You can use &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/wpmu_signup_user_notification_email/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/hooks/wpmu_signup_user_notification_email/&lt;/a&gt; to rewrite the email so it links to the per-site :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39375 (Custom css error check looks for parenthesis, quotes, and single ...) created</title>
      
        <dc:creator>michelgreenwood</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:38:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39375/1482435486940114</guid>
      <description>&lt;p&gt;
When writing custom css within the customizer's new menu option, WordPress automatically looks for errors. If if finds errors, the user will not be able to "save and publish" the css. However, the error-check is examining use of parenthesis, quotes, and single quotes WITHIN comments - /*This would be flagged. Which s'cks*/
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39374 (Update plugin translations immediately when updating plugin) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 22 Dec 2016 19:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39374#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39374#comment:1/1482435429044605</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365#comment:4/1482431353211399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39374 (Update plugin translations immediately when updating plugin) created</title>
      
        <dc:creator>internationils</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39374/1482430940756899</guid>
      <description>&lt;p&gt;
Often when I run infinitewp to check for updates, I find plugins that haven't auto-updated yet, so I quickly manually update them from iwp. When I rescan my sites, many have translation updates, which are probably for the plugins that just upgraded, as they weren't there before.
&lt;/p&gt;
&lt;p&gt;
Idea: why not immediately check and update translations after a plugin upgrade?
&lt;/p&gt;
&lt;p&gt;
I can see no reason not to, esp. as the translation is a "data" component and nothing executable (until someone uses a translation for a buffer overflow, but then again, with auto-updating plugins there are bigger risks than that...)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>tmoore41</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:17/1482430411401633</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39311#comment:16" title="Comment 16"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;The entire install is a network install with a network admin: WP-admin/network
&lt;/li&gt;&lt;li&gt;Each site has a front: example.com and sub,example.com
&lt;/li&gt;&lt;li&gt;And an admin: example.com/WP-admin
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
But the network does not have a public front facing aspect, hence there is no 'network site' that one is directed to.
&lt;/p&gt;
&lt;p&gt;
Moving on.
&lt;/p&gt;
&lt;p&gt;
By default, the main site doesn't need to be accessible to log in, because WordPress redirects you to YOUR site if you try to log in to it and don't have an account there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is this really true?  What if I use htaccess rules to prevent access to the 'main site', because that is only there for the network admin to log in to.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If that's not happening on your install, there's the problem. But I did just build a brand new install to test that on and the results on a clean install were clear. WP properly redirects. This sounds a lot like your configuration broke default behavior so now... what did you do? :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Access to the main site is denied to everyone except the network admin because a) security and b) this is not a public site... there is nothing here for people to see.  I have only left a couple of exceptions to this (wp-cron, wp-login, etc).
&lt;/p&gt;
&lt;p&gt;
All I am concerned about here are the links on the welcome page.  It seems to be an artificial restriction that I must have have a publicly accessible main site so that magic redirection works, when it is trivially easy to change the welcome page to avoid this.  Honestly, what is the principle behind this?  Why does magic redirection have to be used in this case, when it is so easy to avoid?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Try it on a CLEAN install. Then we can start adding min your features to see where this broke and why.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I believe it broke in the design phase.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because WP does know your primary site already and should be redirecting you.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39373 (url_to_postid() returning post ID for external URL) updated</title>
      
        <dc:creator>troutacular</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:05:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39373#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39373#comment:1/1482429958648503</guid>
      <description>&lt;p&gt;
As jkhongusc described, the iframe being returned was being altered to being the post itself.  Due to this site being a production site, we have applied a filter patch as noted in &lt;a href="https://core.trac.wordpress.org/ticket/37359"&gt;37359&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_filter( 'pre_oembed_result', 'wp_filter_pre_oembed_result' );
&lt;/pre&gt;&lt;p&gt;
The iframe source being returned before this patch was &lt;a class="ext-link" href="https://bedrosian.usc.edu/podcast/drown/embed/#?secret=z5fm4h1xpp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bedrosian.usc.edu/podcast/drown/embed/#?secret=z5fm4h1xpp&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;iframe sandbox="allow-scripts" security="restricted" src="https://bedrosian.usc.edu/podcast/drown/embed/#?secret=z5fm4h1xpp" width="200" height="339" title="“Drown” — Bedrosian Center" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" class="wp-embedded-content" data-secret="z5fm4h1xpp"&amp;gt;&amp;lt;/iframe&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>post_to_id-embed-sample.png attached to Ticket #39373</title>
      
        <dc:creator>troutacular</dc:creator>

      <pubDate>Thu, 22 Dec 2016 18:00:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39373/post_to_id-embed-sample.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39373/post_to_id-embed-sample.png/1482429613823119</guid>
      <description>&lt;p&gt;
Sample iframe returned for Soundcloud oEmbed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31071 (media / post_mime_type related queries are very slow on larger sites) updated</title>
      
        <dc:creator>GunGeekATX</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:54:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31071#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31071#comment:50/1482429275257878</guid>
      <description>&lt;p&gt;
Was looking at this myself today and wonder if this might be part of the solution:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$defaults = array(
	'post' =&amp;gt; null,
	'has_media' =&amp;gt; null,
	'has_video' =&amp;gt; null,
);
$args = wp_parse_args( $args, $defaults );
if ( null === $args['has_audio'] ) {
	// Run get_var() here.
}
&lt;/pre&gt;&lt;p&gt;
If we allow the developer to pass in a true/false value for those (or make the args filterable), the database queries could be skipped altogether.  On the huge site I'm working on, those values are always going to be true, so there's no need to run the database query, indexed or not.  Developers could also handle caching those values themselves if they needed to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) updated</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365#comment:3/1482427599088109</guid>
      <description>&lt;p&gt;
@flixos90 Updated as per your feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39365.2.diff attached to Ticket #39365</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39365/39365.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39365/39365.2.diff/1482427557351941</guid>
      <description>&lt;p&gt;
Patch from &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/263"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/263&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31218 (nav-menu.js menu item added event) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:23:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31218#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31218#comment:26/1482427437878826</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31218/31218.6.diff" title="Attachment '31218.6.diff' in Ticket #31218"&gt;31218.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31218/31218.6.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add some QUnit tests for the expected event triggers
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>31218.6.diff attached to Ticket #31218</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:23:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31218/31218.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31218/31218.6.diff/1482427404730457</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39373 (url_to_postid() returning post ID for external URL) created</title>
      
        <dc:creator>jkhongusc</dc:creator>

      <pubDate>Thu, 22 Dec 2016 17:07:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39373/1482426434609518</guid>
      <description>&lt;p&gt;
One our site has a post that has a SoundCloud embed in it.  The WP embed is embedding the post instead of the SoundCloud content.  See  bug&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37359" title="#37359: defect (bug): wp_filter_pre_oembed_result() breaks SoundCloud embeds (closed: worksforme)"&gt;#37359&lt;/a&gt; as another person reported but flagged the wrong function.
&lt;/p&gt;
&lt;p&gt;
Unfortunately I dont have a fix.  This is what I see, the post (&lt;a class="ext-link" href="https://bedrosian.usc.edu/podcast/drown/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://bedrosian.usc.edu/podcast/drown/&lt;/a&gt;) embed eventually makes this call:
&lt;/p&gt;
&lt;p&gt;
url_to_postid ('&lt;a class="ext-link" href="https://soundcloud.com/uscbedrosian/drown"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://soundcloud.com/uscbedrosian/drown&lt;/a&gt;')
&lt;/p&gt;
&lt;p&gt;
This is obviously (to human eyes) an external url but url_to_postid() returns the postid of the post  itself.  This site uses rewrites, I see url_to_postid() make this database call:
&lt;/p&gt;
&lt;p&gt;
SELECT wp_334_posts.* FROM wp_334_posts WHERE 1=1 AND wp_334_posts.post_name = 'drown' AND wp_334_posts.post_type = 'post' ORDER BY wp_334_posts.post_date DESC " &lt;a class="missing wiki"&gt;posts?&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Due to rewrites, all it has to match is 'drown' to be flagged as an internal url... and returns the original post.  Happens to all SoundCloud embeds on the same site.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30240 (Tell if theme is a child theme in wp-admin/network/themes.php) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:54:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30240#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30240#comment:20/1482425690133796</guid>
      <description>&lt;p&gt;
@karmatosed Hello, this is the same screenshot of the first patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/30240/30420-patched.png"&gt;https://core.trac.wordpress.org/attachment/ticket/30240/30420-patched.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My updated patch is just to respect WordPress coding standards if the patch is accepted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39372 (Allow count for wp_terms query to count other post statuses as well as ...) created</title>
      
        <dc:creator>roperjonathan</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39372</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39372/1482425515366869</guid>
      <description>&lt;p&gt;
While it is great to use the wp_terms query to get the terms, when counting the number of posts assigned to each of these terms, it would be great if there was a way to be able to include the number of posts that have other post statuses and not just count the number of posts that have been published.
&lt;/p&gt;
&lt;p&gt;
At the moment if I want to do this, I have to return all of the terms from a taxonomy and then go through each one and count how many posts are associated with each term for both published posts and draft posts which is a lot more inefficient.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37359 (wp_filter_pre_oembed_result() breaks SoundCloud embeds) updated</title>
      
        <dc:creator>jkhongusc</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37359#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37359#comment:5/1482424117555685</guid>
      <description>&lt;p&gt;
Our Enterprise just hit this exact issue.  We upgraded from 4.4.2 to 4.7.  After the upgrade we noticed SoundCloud embeds was broken on one of our sites exactly as the OP reports:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
resulting in the post embedding itself where the SoundCloud Iframe is expected to be
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Through debugging, yes by modifying WP 4.7 core, on a staging system.  I was able to backtrace to wp_filter_pre_oembed_result().  IMO the bug resides in url_to_postid().  url_to_postid ('&lt;a class="ext-link" href="https://soundcloud.com/path"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://soundcloud.com/path&lt;/a&gt;') is returning the postid of the post that contains the SoundCloud embed.  The configuration of the site has url_to_postid() returning self referencing postids.  If I put the same SoundCloud embed on another site, it works perfectly.  I am going to open a new bug for url_to_postid().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39371 (Fix DocBlocks for duplicate hooks) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39371#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39371#comment:1/1482423795670259</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39371.patch attached to Ticket #39371</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39371/39371.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39371/39371.patch/1482423717029440</guid>
      <description>&lt;p&gt;
Fix DocBlocks for duplicate hooks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39371 (Fix DocBlocks for duplicate hooks) created</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:18:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39371</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39371/1482423538063608</guid>
      <description>&lt;p&gt;
DocBlocks should start with &lt;code&gt;/**&lt;/code&gt; to be recognized as a DocBlock by the &lt;a class="ext-link" href="https://github.com/WordPress/phpdoc-parser"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;phpdoc-parser&lt;/a&gt;. Duplicate undocumented hooks are imported if normal comments (/*  */) are used.
&lt;/p&gt;
&lt;p&gt;
These hooks don't have a correct DocBlock.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;load-widgets.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;widgets.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;sidebar_admin_setup&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;comment_email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;session_token_manager&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_attachment&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_comment&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_{$this-&amp;gt;post_type}&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_{$this-&amp;gt;taxonomy}&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;rest_insert_user&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30240 (Tell if theme is a child theme in wp-admin/network/themes.php) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Thu, 22 Dec 2016 16:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30240#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30240#comment:19/1482422665362542</guid>
      <description>&lt;p&gt;
@Mista-Flo can you upload a screenshot of your patch please? It makes it easier for people to comment and see.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39004 (Alt attributes should be searchable in media library) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39004#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39004#comment:10/1482422307385124</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;strong&gt;Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39358" title="#39358: defect (bug): Media search speed has been dramatically reduced (reopened)"&gt;#39358&lt;/a&gt;.&lt;/strong&gt; We'll need to be aware of query performance concerns introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38625" title="Media: Make media library searchable by filename.
This applies a new ..."&gt;[38625]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22744" title="#22744: enhancement: Media search doesn't include file name (closed: fixed)"&gt;#22744&lt;/a&gt; before finalizing the approach here.
&lt;/p&gt;
&lt;p&gt;
Setting aside performance concerns for the moment, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39004/39004.2.patch" title="Attachment '39004.2.patch' in Ticket #39004"&gt;39004.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39004/39004.2.patch" title="Download"&gt;​&lt;/a&gt; looks like a good initial approach. Thanks @rommelxcastro.  We may need to handle some backwards compatibility for anyone who has decided to do something like: &lt;code&gt;remove_filter( 'posts_clauses', '_filter_query_attachment_filenames' );&lt;/code&gt; or if someone is calling that function directly to apply the filter to other query cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:43:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:12/1482421391260654</guid>
      <description>&lt;p&gt;
@dd32 Thanks for the detailed and thoughtful feedback here. You have rightly (in my view) identified the main challenge presented by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22744" title="#22744: enhancement: Media search doesn't include file name (closed: fixed)"&gt;#22744&lt;/a&gt;, which is how to balance the desire to improve the user experience for searching the media library with the fact that doing so requires non-optimal queries of postmeta.
&lt;/p&gt;
&lt;p&gt;
Before discussing the merits/downsides of each option you've proposed, I think it's helpful to keep in mind a specific use case that the change tries to address. Assume someone uploads a file with a name like "large-monarch.jpg" but then renames the title of the attachment to something like "A Butterfly". Later, someone searches for a photo of a monarch in the media library but doesn't find the file because WordPress only searched the title and content fields. This is a simplified example, but imagine a scenario where an organization uses file name conventions as an organizational scheme, where the file name maps to the date, photographer, job ID, and photo number (i.e. 20161222_jdm_5555_32.jpg). This is a case where you may need to search by parts of file names that have no relationship to the post title assigned within the library.
&lt;/p&gt;
&lt;p&gt;
Now, onto the proposals:
&lt;/p&gt;
&lt;p&gt;
a) If it's agreed that the cost of this change is not worth the performance hit, I have no reservations in reverting. However I would strongly prefer we explore other options first.
&lt;/p&gt;
&lt;p&gt;
b) I think that the current implementation (through a filter) allows large sites to turn this off if they so choose. That said, I'm more than happy to discuss ways the developer UX could be improved (e.g., moving away from the filter approach to some other configuration). In fact, we should pursue improvement here regardless.
&lt;/p&gt;
&lt;p&gt;
c) I don't think exact matches are helpful here for reasons illustrated by the use case above. Often, it's not that someone knows the exact name of a file, but needs to search by partial information included in a file name. In my mind, this is the least applicable option.
&lt;/p&gt;
&lt;p&gt;
d) Storing the information in another way seems like the best option, as your example using GUID demonstrates. I was hesitant in using GUID because we've not relied on the GUID for file names since &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7622" title="#7622: defect (bug): wp_get_attachment_url() uses the GUID as the URL (closed: fixed)"&gt;#7622&lt;/a&gt; and I assume some plugins modify the filename as postmeta while ignoring the GUID altogether. Perhaps it is worth sacrificing those edge cases for the performance benefits? Here it's worth noting that there is a request to also make image &lt;code&gt;alt&lt;/code&gt; attributes searchable from the media library, and alt information is similarly stored as postmeta. This cannot as easily be searched from our current post schema.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:19:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:16/1482419961700986</guid>
      <description>&lt;ul&gt;&lt;li&gt;The entire install is a network install with a network admin: WP-admin/network
&lt;/li&gt;&lt;li&gt;Each site has a front: example.com and sub,example.com
&lt;/li&gt;&lt;li&gt;And an admin: example.com/WP-admin
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
But the network does not have a public front facing aspect, hence there is no 'network site' that one is directed to.
&lt;/p&gt;
&lt;p&gt;
Moving on.
&lt;/p&gt;
&lt;p&gt;
By default, the main site doesn't need to be accessible to log in, because WordPress redirects you to YOUR site if you try to log in to it and don't have an account there.
&lt;/p&gt;
&lt;p&gt;
If that's not happening on your install, there's the problem. But I did just build a brand new install to test that on and the results on a clean install were clear. WP properly redirects. This sounds a lot like your configuration broke default behavior so now... what did you do? :)
&lt;/p&gt;
&lt;p&gt;
Try it on a CLEAN install. Then we can start adding min your features to see where this broke and why. Because WP does know your primary site already and should be redirecting you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39272 (Twenty Seventeen: Incorrect $content_width) updated</title>
      
        <dc:creator>sstoqnov</dc:creator>

      <pubDate>Thu, 22 Dec 2016 15:17:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39272#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39272#comment:14/1482419843808957</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39370.patch attached to Ticket #39370</title>
      
        <dc:creator>alfhen</dc:creator>

      <pubDate>Thu, 22 Dec 2016 14:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39370/39370.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39370/39370.patch/1482416470381611</guid>
      <description>&lt;p&gt;
Patch with the mentioned fix
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39370 (wp_insert_user() appends suffix to nicename when updating already ...) created</title>
      
        <dc:creator>alfhen</dc:creator>

      <pubDate>Thu, 22 Dec 2016 14:11:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39370</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39370/1482415881849528</guid>
      <description>&lt;p&gt;
wp_insert_user() appends suffix to nicename when updating already existing user, even though the user_nicename prop is set to exactly the same value as it currently has.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Asuming you have a user in your wordpress database with the ID 1 and user_nicename set to 'test-nicename'.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt; If you then make an update using wp_insert_user() of that user and in the update set the user_nicename to 'test-nicename', then wordpress will update the user, but append -2 as a suffix to the nicename.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This happens because of a check located on line 1597 - 1609 in wp-includes/user.php
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// user_nicename allows 50 chars. Subtract one for a hyphen, plus the length of the suffix.
&lt;/span&gt;                        &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;mb_strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mb_substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"-&lt;/span&gt;&lt;span class="si"&gt;$suffix&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="nv"&gt;$suffix&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This code is there to make sure that there are no duplicate nicenames in the wp_users table, which is fine. However it does not take into account updating the nicename of a user with the same value as it currently has.
&lt;/p&gt;
&lt;p&gt;
The way to solve it is very easy, only simply changes the if() statement to check the id fethced in $user_nicename_check against the ID of the user currently being updated, like so:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$ID&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="c1"&gt;// user_nicename allows 50 chars. Subtract one for a hyphen, plus the length of the suffix.
&lt;/span&gt;                        &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;mb_strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$suffix&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;mb_substr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$base_length&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"-&lt;/span&gt;&lt;span class="si"&gt;$suffix&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="nv"&gt;$user_nicename_check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"SELECT ID FROM &lt;/span&gt;&lt;span class="si"&gt;$wpdb-&amp;gt;users&lt;/span&gt;&lt;span class="s2"&gt; WHERE user_nicename = %s AND user_login != %s LIMIT 1"&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$user_login&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                        &lt;span class="nv"&gt;$suffix&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$user_nicename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$alt_user_nicename&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This makes prevents the code from appending the suffix when the $user_nicename_check ID matches the ID of the user currently being updated
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18532 (resized image dimensions incorrectly floored instead of rounded) updated</title>
      
        <dc:creator>maniu</dc:creator>

      <pubDate>Thu, 22 Dec 2016 13:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18532#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18532#comment:14/1482414367206568</guid>
      <description>&lt;p&gt;
I just wanted to note that this fix breaks linking to some old images (old enough to use previous method of calculating size) when importing. It replaces the link but dimensions are different by one pixel and post content ends up with broken image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39047 (Installer tries to create nonce before options table exists) updated</title>
      
        <dc:creator>nullvariable</dc:creator>

      <pubDate>Thu, 22 Dec 2016 13:32:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39047#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39047#comment:12/1482413554644582</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39047#comment:11" title="Comment 11"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@nullvariable: I haven't been able to reproduce this error.
&lt;/p&gt;
&lt;p&gt;
Could you please upload a copy of the &lt;code&gt;wp-config.php&lt;/code&gt; you're using that causes this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_HOME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://wordpress.dev'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_SITEURL'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://wordpress.dev'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_NAME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'wordpress'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_USER'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'root'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'root'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_HOST'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'db'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_CHARSET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'utf8'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DB_COLLATE'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'AUTH_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SECURE_AUTH_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'LOGGED_IN_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'NONCE_KEY'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'AUTH_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SECURE_AUTH_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'LOGGED_IN_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'NONCE_SALT'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="s1"&gt;'put your unique phrase here'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$table_prefix&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'wp_'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'WP_DEBUG'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Have the database user and database name defined in your &lt;code&gt;wp-config.php&lt;/code&gt; been created in MySQL?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there any other tables in that database using the same table prefix as defined in your &lt;code&gt;wp-config.php&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
no, brand new database, no tables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24152 (Use JSON as alternative to headers) updated</title>
      
        <dc:creator>wturrell</dc:creator>

      <pubDate>Thu, 22 Dec 2016 12:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24152#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24152#comment:28/1482408431456317</guid>
      <description>&lt;p&gt;
+1 for the person who suggested YAML was worth a look - it's arguably very expressive / human readable and &lt;strong&gt;supports comments&lt;/strong&gt; (no one's brought this up), although maybe it's not as beginner friendly to write (no tabs etc.) and apparently it's slower to parse due to the larger feature set.
&lt;/p&gt;
&lt;p&gt;
YAML is being heavily used for config files these days (Symfony, all of Drupal 8…)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39317 (Trying to get property of non-object wp_terms_checklist) updated</title>
      
        <dc:creator>jevuska</dc:creator>

      <pubDate>Thu, 22 Dec 2016 11:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39317#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39317#comment:2/1482406941465009</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39317#comment:1" title="Comment 1"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @jevuska - Can you share some additional details? What is the code you're using to filter &lt;code&gt;wp_terms_checklist_args&lt;/code&gt;? Are you modifying a default WP taxonomy, or a custom one? What is the full text of the "Trying to get property..." error (including line number and backtrace, if possible)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @boonebgorges, thanks for response, here my code, just for testing,
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'wp_terms_checklist_args', function( $args, $post_id )
{
 if ( is_admin() )
   $args['descendants_and_self'] = true;
 return $args;
}, 1, 2 );
&lt;/pre&gt;&lt;p&gt;
With notice:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Trying to get property of non-object in ...\wp-admin\includes\template.php on line 156
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39369 (The document of wp_list_pages() is not clear.) updated</title>
      
        <dc:creator>Kenshino</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39369#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39369#comment:1/1482403489824988</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39369.patch attached to Ticket #39369</title>
      
        <dc:creator>doublehhh</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39369/39369.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39369/39369.patch/1482401993031955</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39369 (The document of wp_list_pages() is not clear.) created</title>
      
        <dc:creator>doublehhh</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39369</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39369/1482401949309701</guid>
      <description>&lt;p&gt;
The document of wp_list_pages() is not clear. Developers can use non-hierarchical post type. It makes them confused.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16567 (Can't create categories with different names but similar slugs on Edit ...) reopened</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 22 Dec 2016 10:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16567#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16567#comment:25/1482401710927169</guid>
      <description>&lt;p&gt;
It is still broken in WordPress 4.7. I can create both "C" and "C+" categories in &lt;code&gt;wp-admin/edit-tags.php?taxonomy=category&lt;/code&gt;, but second category is not created on Edit Post screen (there is no error message).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 08:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:11/1482394438632032</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39358#comment:10" title="Comment 10"&gt;merts&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32 Maybe I can suggest another option:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A table per field will always be faster, but where do you draw the line? Bluntly, we're not going to take that route.
Metadata stored in postmeta is fine and having a thousand post metas per post isn't an issue - it just needs to be recognised that you can't query globally by postmeta, and it should only be used to narrow an already reduced data set.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;edit: and adding a filename field to the existing &lt;code&gt;posts&lt;/code&gt; table probably isn't needed either, especially if it can be inferred from existing data&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39362.2.patch attached to Ticket #39362</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Thu, 22 Dec 2016 08:12:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39362/39362.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39362/39362.2.patch/1482394364262987</guid>
      <description>&lt;p&gt;
Patch of the customize-nav-menus.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>merts</dc:creator>

      <pubDate>Thu, 22 Dec 2016 07:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:10/1482390267559700</guid>
      <description>&lt;p&gt;
@dd32 Maybe I can suggest another option:
&lt;/p&gt;
&lt;p&gt;
The size of the table "Post_meta" is not just directly related to Wordpress's standard usage. Many plugins such as Advanced Custom Fields (highly used by the community) can increase the size of this table dramatically. An ordinary user may not be aware of this and he/she is probably using a lot of plugins like ACF anyway. As you know, even if you remove a plugin you may still find records in the table.
&lt;/p&gt;
&lt;p&gt;
A non optimized query like the one above can result degradation in performance but it is okay because we all make mistakes. However, I believe isolating this table in the first place could at least improve the performance. Personally, I don't like any plugins to touch post_meta table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39349.diff attached to Ticket #39349</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Thu, 22 Dec 2016 05:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39349/39349.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39349/39349.diff/1482383771184502</guid>
      <description>&lt;p&gt;
Remove global title/widget padding added when edit shortcuts are visible
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39349 (Customizer (mobile preview) site title extra padding) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Thu, 22 Dec 2016 05:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39349#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39349#comment:7/1482383718196766</guid>
      <description>&lt;p&gt;
@westonruter nice find! :-) Looks like I copy-and-pasted those rules from this patch &lt;a href="https://core.trac.wordpress.org/attachment/ticket/38651/38651.5.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/38651/38651.5.diff&lt;/a&gt; into the next one without looking very carefully.
&lt;/p&gt;
&lt;p&gt;
I still think it's not wise for the edit shortcut styles to move anything in the preview if there's any way to prevent it.
&lt;/p&gt;
&lt;p&gt;
I'll drop a patch here to strip those styles out and we can see what it looks like.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38946 (WP_Upgrader: Protection against deleting files in destination directory) updated</title>
      
        <dc:creator>shivapoudel</dc:creator>

      <pubDate>Thu, 22 Dec 2016 05:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38946#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38946#comment:4/1482383151375730</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31405 (upgrade.php fails with mixed HTTPS (SSL) and simple HTTP sites) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 22 Dec 2016 03:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31405#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31405#comment:20/1482376743553491</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-http by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-http/p1482376741000017"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 22 Dec 2016 03:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365#comment:2/1482376578404683</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch @greatislander!
&lt;/p&gt;
&lt;p&gt;
I think we should continue to use &lt;code&gt;esc_url()&lt;/code&gt; to escape the entire URL here instead of using &lt;code&gt;esc_attr()&lt;/code&gt; on the individual parts - other than that this looks like a solid change to make. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39349 (Customizer (mobile preview) site title extra padding) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39349#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39349#comment:6/1482367556375884</guid>
      <description>&lt;p&gt;
@sirbrillig see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38651" title="#38651: defect (bug): Customizer edit icons may be partially off-screen in Device Preview mode (closed: fixed)"&gt;#38651&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:42:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:9/1482367375650910</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
c) Limit it to exact matches only for the postmeta, which with the help of a new DB index would make it much faster.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To follow that up, it'd actually have to be done with the help of a new meta key.. The reason being, is that the meta values are currently stored like so: &lt;code&gt;2015/01/08W0zJv.jpg&lt;/code&gt; OR &lt;code&gt;/home/someuser/public_html/wp-content/uploads/08W0zJv.jpg&lt;/code&gt;. Exact-matching and/or indexing isn't going to help here without a rethink of where the filename is available.
&lt;/p&gt;
&lt;p&gt;
We could use the fact that the &lt;code&gt;post_name&lt;/code&gt; field is going contain the basename of the filename, ie. &lt;code&gt;08w0zjv&lt;/code&gt; in the case of &lt;code&gt;08W0zJv.jpg&lt;/code&gt;, combined with the fact that the Guid field &lt;em&gt;currently&lt;/em&gt; contains the filename. That would at least cause it to hit indexes and not require a table join, for example (note the 4th search OR in both the previous and this example)
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS wp_posts.id
FROM   wp_posts
WHERE  1 = 1
       AND (( ( wp_posts.post_title LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_excerpt LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_content LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_name = '08W0zjv' AND wp_posts.guid LIKE '%08W0zJv.jpg%' )
        ))
       AND wp_posts.post_type = 'attachment'
       AND (( wp_posts.post_status = 'inherit'
               OR wp_posts.post_status = 'private' ))
GROUP  BY wp_posts.id
ORDER  BY wp_posts.post_title LIKE '%08W0zJv.jpg%' DESC,
          wp_posts.post_date DESC
LIMIT  0, 10
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:8/1482365122254612</guid>
      <description>&lt;p&gt;
I should add, that I never really liked this as a standalone filter, it's likely to break at some point.
&lt;/p&gt;
&lt;p&gt;
A fifth option would also be to only add the postmeta searching when the search *looked* like a filename, so &lt;code&gt;ABC.def&lt;/code&gt; but not  &lt;code&gt;ABC DEF GHI&lt;/code&gt; (which isn't entirely accurate, but would help)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 22 Dec 2016 00:03:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:7/1482364987904509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The issue we have here, is quite simple - You cannot search postmeta on large sites, there's no way around that, it's just not possible to do it in a performant way.
&lt;/p&gt;
&lt;p&gt;
The user experience gained by this change is good however, it works as an end-user may intend the search to.
&lt;/p&gt;
&lt;p&gt;
IMHO there's a few options of varying usefulness
a) Drop it entirely
b) Drop it for "large sites" (ie. more than x number of post) - The UX of this is bad
c) Limit it to exact matches only for the postmeta, which with the help of a new DB index would make it much faster.
d) Store the attachment data in another way.
&lt;/p&gt;
&lt;p&gt;
For reference, this is what the SQL ends up looking like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS wp_posts.id
FROM   wp_posts
       LEFT JOIN wp_postmeta AS sq1
              ON ( wp_posts.id = sq1.post_id
                   AND sq1.meta_key = '_wp_attached_file' )
WHERE  1 = 1
       AND (( ( wp_posts.post_title LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_excerpt LIKE '%08W0zJv.jpg%' )
               OR ( wp_posts.post_content LIKE '%08W0zJv.jpg%' )
               OR ( sq1.meta_value LIKE '%08W0zJv.jpg%' ) ))
       AND wp_posts.post_type = 'attachment'
       AND (( wp_posts.post_status = 'inherit'
               OR wp_posts.post_status = 'private' ))
GROUP  BY wp_posts.id
ORDER  BY wp_posts.post_title LIKE '%08W0zJv.jpg%' DESC,
          wp_posts.post_date DESC
LIMIT  0, 10
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31071 (media / post_mime_type related queries are very slow on larger sites) updated</title>
      
        <dc:creator>rickalee</dc:creator>

      <pubDate>Wed, 21 Dec 2016 23:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31071#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31071#comment:49/1482363979374999</guid>
      <description>&lt;p&gt;
Any hope of getting a filter or transient for this? Running up against 2 second query for site with over a million posts.
&lt;/p&gt;
&lt;p&gt;
@sboisvert solution looks like a great start.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34693 (Add browser-based testing and automated acceptance tests (BrowserStack)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Dec 2016 21:54:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34693#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34693#comment:8/1482357278390210</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jorbin. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1482357275002970"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>tmoore41</dc:creator>

      <pubDate>Wed, 21 Dec 2016 21:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:15/1482356592414191</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39311#comment:9" title="Comment 9"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So to reiterate what's going on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to a subsite (ex domain.com/subsite/ or sub.domain.com)
&lt;/li&gt;&lt;li&gt;Create the user with email confirmation.
&lt;/li&gt;&lt;li&gt;User gets the activation link
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The URL at that point is &lt;em&gt;not&lt;/em&gt; the expected subsite URL (ex domain.com/subsite/wp-activate.php or sub.domain.com/wp-activate.php)
&lt;/p&gt;
&lt;p&gt;
Instead it is domain.com/wp-activate.php
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually no.  The message in the email invitation is
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Please click the following link to activate your user account:
&lt;a class="ext-link" href="http://sub.domain.com/wp-activate.php?key=1dd86778b57c5147"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://sub.domain.com/wp-activate.php?key=1dd86778b57c5147&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The invitation link goes to the correct place.  It is the welcome links that go to the wrong place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39368 (.page-template-default body class in editor doesn't appear in initial ...) created</title>
      
        <dc:creator>timph</dc:creator>

      <pubDate>Wed, 21 Dec 2016 21:29:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39368</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39368/1482355742289665</guid>
      <description>&lt;p&gt;
The class .page-template-default isn't in tinymce editor body classes on initial load if default template is used. It was causing some odd behaviors when I was testing some themes out.  This was because the themes were adding specific styles for .page-template-default. This class seems to only get added when you select a template from Page Attributes &amp;gt; Default, and there were some major visual differences from initial page load to what would be seen when selecting that template from page attributes.  I think for consistency it should be present if that's the template in use.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Add a page template to the theme.  Mine was page-home.php
&lt;/li&gt;&lt;li&gt;Add a new page.  This should use the default template.
&lt;/li&gt;&lt;li&gt;Inspect the body classes of the editor, there's no class added to designate this is the page-template-default at this point.
&lt;/li&gt;&lt;li&gt;Under Page Attributes, select Home. Inspect the body classes, you'll see page-template-page-home is applied.
&lt;/li&gt;&lt;li&gt;Select the Default template, you'll see page-template-default is applied and page-template-page-home is removed.
&lt;/li&gt;&lt;li&gt;Select the home page template again.
&lt;/li&gt;&lt;li&gt;Publish the page. Inspect the body class you'll see it's still there.  Refresh the page.  It's still there.
&lt;/li&gt;&lt;li&gt;Select the default template, then update the page and refresh.  You'll see that the class is no longer present.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39364 (Introduce a trigger to handle a custom queue job and run them) updated</title>
      
        <dc:creator>shivapoudel</dc:creator>

      <pubDate>Wed, 21 Dec 2016 21:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39364#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39364#comment:1/1482354517114601</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39363 (New custom css customizer saved as a published post) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Dec 2016 20:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39363#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39363#comment:2/1482353980243758</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39366 (Add additional contextual body classes to editor) closed</title>
      
        <dc:creator>timph</dc:creator>

      <pubDate>Wed, 21 Dec 2016 20:47:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39366#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39366#comment:1/1482353266862894</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 21 Dec 2016 20:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:2/1482352258280375</guid>
      <description>&lt;p&gt;
That was just the bare minimum necessary to get the new tests to pass for changing a user's password.  I see no problem with changing it as needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 21 Dec 2016 20:28:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367#comment:1/1482352084607117</guid>
      <description>&lt;p&gt;
@rmccue @jnylen0 Do you recall the origin of &lt;code&gt;$user_id=null&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>tmoore41</dc:creator>

      <pubDate>Wed, 21 Dec 2016 20:28:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:14/1482352082012068</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39311#comment:11" title="Comment 11"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But the homepage link displayed is always the primary website home_url instead of the subsite one, maybe we should handle this no ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it's not breaking things, and WP is 'smart enough' to redirect you to the right location, I doubt most users will notice.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe I'm missing some detail here.  Perhaps for situations where the main site is accessible to all this might be some kind of work around.  It does not seem like a process that covers all use cases.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plus IIRC that is still filterable so we're back to where we usually are with "What's the intent of YOUR network?"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You mention that something is filterable, so maybe all hope is not lost.  What exactly was the 'that' in your sentence referring to?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I want everyone to know they're on a network. Not everyone does :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What's this network thing?  I thought we had main sites and sub sites? ;)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That is the big question I have no answers for, to be honest. I don't know how we can determine intent without a lot more options in Multisite :(
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Seems easy to me.  A user (new or old, doesn't matter) is subscribed to a sub site.  The activation process carries the meta data and knows what sub-site they are subscribed to.  After they activate the welcome message should direct them to that sub-site.  Directing to the main site in order to redirect seems more complicated than required, and in my use case it is broken.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39367 (Don't no-op $user_id in test suite's wp_set_auth_cookie()) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 21 Dec 2016 20:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39367</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39367/1482352063052225</guid>
      <description>&lt;p&gt;
The implementation of &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt; in the test suite sets &lt;code&gt;$user_id=null&lt;/code&gt;, when it should respect the &lt;code&gt;$user_id&lt;/code&gt; passed to the function.
&lt;/p&gt;
&lt;p&gt;
If I pass a user id to &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt;, I'd expect the user id to be then passed through to &lt;code&gt;wp_set_auth_cookie()&lt;/code&gt;'s actions.
&lt;/p&gt;
&lt;p&gt;
Discovered in &lt;a class="ext-link" href="https://github.com/pantheon-systems/wp-saml-auth/pull/48"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/pantheon-systems/wp-saml-auth/pull/48&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
From &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39219" title="REST API: Improve validation for usernames and passwords.
Also ..."&gt;r39219&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39311 (New user activation welcome page links to the wrong site) updated</title>
      
        <dc:creator>tmoore41</dc:creator>

      <pubDate>Wed, 21 Dec 2016 20:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39311#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39311#comment:13/1482351432604240</guid>
      <description>&lt;p&gt;
Hi @lpstenu
&lt;/p&gt;
&lt;p&gt;
Thanks for the corrections regarding nomenclature.  I'll try to follow your guidelines.
&lt;/p&gt;
&lt;p&gt;
My comments further down....
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39311#comment:9" title="Comment 9"&gt;Ipstenu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I mentioned this in slack as the issue comes up a lot in this ticket - There is no such thing as a "network URL" or "Network Site"
&lt;/p&gt;
&lt;p&gt;
There's a Network &lt;strong&gt;admin&lt;/strong&gt; and a Main/Primary site, but the 'network site' doesn't exist. It makes it harder to debug when you call the Main Site the network site. And this is not anyone's fault: WP for a long time had the main site be the network administration. We don't anymore, and it's very important we're clear on where someone is being redirected to, as those are very different behaviors.
&lt;/p&gt;
&lt;p&gt;
I know I sound pedantic and nit-picky but when reporting bugs, it's really important to use the proper terms once you know them. It helps make sure we're all talking about the same thing.
&lt;/p&gt;
&lt;p&gt;
So to reiterate what's going on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to a subsite (ex domain.com/subsite/ or sub.domain.com)
&lt;/li&gt;&lt;li&gt;Create the user with email confirmation.
&lt;/li&gt;&lt;li&gt;User gets the activation link
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The URL at that point is &lt;em&gt;not&lt;/em&gt; the expected subsite URL (ex domain.com/subsite/wp-activate.php or sub.domain.com/wp-activate.php)
&lt;/p&gt;
&lt;p&gt;
Instead it is domain.com/wp-activate.php
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this is correct.  I am using sub-domains so it looks like your second case of sub.domain.com/wp-activate.php.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I did this:
&lt;/p&gt;
&lt;p&gt;
I went to my subsite (domain.com/test) and added a new user
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi,
You've been invited to join 'test' at
&lt;a class="ext-link" href="http://domain.com/test"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://domain.com/test&lt;/a&gt; with the role of Subscriber.
If you do not want to join this site please ignore
this email. This invitation will expire in a few days.
&lt;/p&gt;
&lt;p&gt;
Please click the following link to activate your user account:
&lt;a class="ext-link" href="http://domain.com/test/wp-activate.php?key=KEYHERE"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://domain.com/test/wp-activate.php?key=KEYHERE&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's exactly what I expect to see in my email.
&lt;/p&gt;
&lt;p&gt;
However it's the rederning of the page that's wrong:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your account is now active!
&lt;/p&gt;
&lt;p&gt;
Username: USER
&lt;/p&gt;
&lt;p&gt;
Password: PASSWORD
&lt;/p&gt;
&lt;p&gt;
Your account is now activated. Log in or go back to the homepage.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The link for login is domain.com/wp-login.php
&lt;/p&gt;
&lt;p&gt;
Now when I'm added to a site, which is what this ticket claims we're doing (go to a subsite to add the user), WordPress &lt;em&gt;properly&lt;/em&gt; redirects me on login to domain.com/test/wp-admin (it's supposed to do that)
&lt;/p&gt;
&lt;p&gt;
So I don't see the problem as indicated. I can see it happening if you just add the user to the network at domain.com/wp-admin/network/user-new.php but that isn't what was reported.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The problem is that access to domain.com is restricted to register users of domain.com.  When you try to access domain.com (or domain.com/wp-login.php etc) you will be presented with a login form requesting a username and a password.  In my case the subscribers of the sub-sites are not subscribers to domain.com, so their username and password will not work.
&lt;/p&gt;
&lt;p&gt;
They get stuck on the login page, and try to do things like reset their password multiple times.
&lt;/p&gt;
&lt;p&gt;
To make it worse, there is very little to indicate that they are at the wrong site.  The only clue is the URL in the browser location bar, and I can't expect new users to figure this out.
&lt;/p&gt;
&lt;p&gt;
This is not a situation that new users can figure out.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am using multisite, and I am adding users from within one of the child sites, not from the network site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
When I add users from the child site, the login link being the main site is not an issue, as WP redirects on login to 'My' site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, if only they could get past the login screen on that site it might work.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Question for @tmoore41: Are these NEW users or existing users?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
New users.  Only having access to the sub-site.  Not having access to the main site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39362 (Checkbox control for 'Automatically add new top-level pages to this ...) updated</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 21 Dec 2016 19:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39362#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39362#comment:2/1482350122371590</guid>
      <description>&lt;p&gt;
From what I see when I inspect it, it's wrapped in a
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;li id="customize-control-nav_menu-123-auto-add" class="customize-control customize-control-nav_menu_auto_add" style="display: list-item;"&amp;gt;&amp;lt;/li&amp;gt;
&lt;/pre&gt;&lt;p&gt;
If there could be added a &lt;code&gt;customize-control-checkbox&lt;/code&gt; class without it disrupting anything, that would also work as well.
&lt;/p&gt;
&lt;p&gt;
In the \wp-admin\js\customize-nav-menus.js there is (I guess) a wrapper for that control on line 995 so my guess that the class should be added there
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Add the control for managing the menu auto_add.
menuAutoAddControlId = section.id + '[auto_add]';
menuAutoAddControl = api.control( menuAutoAddControlId );
if ( ! menuAutoAddControl ) {
	menuAutoAddControl = new api.controlConstructor.nav_menu_auto_add( menuAutoAddControlId, {
		params: {
			type: 'nav_menu_auto_add',
			content: '&amp;lt;li id="customize-control-' + section.id.replace( '[', '-' ).replace( ']', '' ) + '-auto-add" class="customize-control customize-control-nav_menu_auto_add customize-control-checkbox"&amp;gt;&amp;lt;/li&amp;gt;', // @todo core should do this for us
			label: '',
			active: true,
			section: section.id,
			priority: 999,
			settings: {
				'default': section.id
			}
		}
	} );
	api.control.add( menuAutoAddControl.id, menuAutoAddControl );
	menuAutoAddControl.active.set( true );
}
&lt;/pre&gt;&lt;p&gt;
I added it in my local testing enviroment, but haven't tested to see if this will affect the behavior in any way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39366 (Add additional contextual body classes to editor) created</title>
      
        <dc:creator>timph</dc:creator>

      <pubDate>Wed, 21 Dec 2016 19:50:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39366</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39366/1482349810820202</guid>
      <description>&lt;p&gt;
It would be nice if core provided contextual body classes for the editor like it does on the front end of the site.
&lt;/p&gt;
&lt;p&gt;
For instance, I have a style that is used on my home page template, and a different style applies to my default page template. ( Forgive the CSS it's just a hypothetical example ).
&lt;/p&gt;
&lt;p&gt;
On the front end I might have something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/** Default style **/
.my-style {
    margin-top: 40px;
    font-size: 24px;
}
/** Home template style **/
.page-template-home .my-style {
    margin-top: 125px;
    font-size: 60px;
}
/** Default page template style **/
.page-template-default .my-style {
    margin-top: 0px;
    font-size: 14px;
}
&lt;/pre&gt;&lt;p&gt;
In the editor the style would default to .my-style with would have the 40px margin-top on it, or I can style specifically for the editor view of the content across all templates and zero it out for instance:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.mce-content-body .my-style {
    margin-top: 0;
    font-size: 14px;
}
&lt;/pre&gt;&lt;p&gt;
I would like the ability to be able to provide as close of a WYSIWYG experience from the editor to the front end for the various templates or cpts I might have in a theme that carry different styles for my end users.
&lt;/p&gt;
&lt;p&gt;
Being able to do this out of the box would allow a better visual experience when switching between the editor to front end of the site.  I could remove the margin-top :
&lt;/p&gt;
&lt;pre class="wiki"&gt;/** Editor home template **/
.mce-content-body.page-template-home .my-style {
    /** header is not displayed in editor so don't add margin-top here **/
    margin-top: 10px;
    font-size: 80px;
}
/** Editor default page template style **/
.mce-content-body.page-template-default .my-style {
    margin-top: 0;
    font-size: 14px;
}
&lt;/pre&gt;&lt;p&gt;
I can of course add a filter to tinymce for the body class to do this in my theme, but it feels like something that should just be there for me out of the box. This could potentially lead to undesirable results across various themes I think taking the same naming convention.  For example a theme sets .page-template-default's padding to 100px, so the editor would also have those applied unless a theme author specifically overrode the style with .mce-content-body to eliminate the excessive padding in the smaller window.
&lt;/p&gt;
&lt;p&gt;
Perhaps adding something like .mce-{$context} would work and be a nice addition to theme and plugin developers who strive to have their themes look as close to the end result as possible in the editor.
&lt;/p&gt;
&lt;p&gt;
A lot of end users find it strange when they do something like change the Page Attributes &amp;gt; template in the box, see no visual changes, and then viewing the front end gives them a dramatically different effect from what they were initially thinking they were doing.  So it would be nice if changing the template there also updated these classes to tie the visual editing experience together even more.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) updated</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Wed, 21 Dec 2016 19:48:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365#comment:1/1482349686024642</guid>
      <description>&lt;p&gt;
The attached patch normalizes the main site URL display in &lt;code&gt;site-info.php&lt;/code&gt; to include the URL scheme from &lt;code&gt;$parsed_scheme&lt;/code&gt; as is the case for all other sites in a network.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39365.diff attached to Ticket #39365</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Wed, 21 Dec 2016 19:46:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39365/39365.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39365/39365.diff/1482349616998195</guid>
      <description>&lt;p&gt;
Patch from &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/pull/262"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/pull/262&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39365 (Site info always displays main site URL as http even if the URL scheme ...) created</title>
      
        <dc:creator>greatislander</dc:creator>

      <pubDate>Wed, 21 Dec 2016 19:45:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39365</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39365/1482349550915374</guid>
      <description>&lt;p&gt;
Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36682" title="Multisite: Show the main site's domain and path in site-info.php
* ..."&gt;[36682]&lt;/a&gt;, the non-editable main site URL is always displayed as &lt;code&gt;http&lt;/code&gt; in &lt;code&gt;/wp-admin/network/site-info.php&lt;/code&gt;. The URL is &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/network/site-info.php?rev=36682#L176"&gt;constructed&lt;/a&gt; by applying &lt;code&gt;esc_url()&lt;/code&gt; to a concatenated string composed of &lt;code&gt;$details-&amp;gt;domain&lt;/code&gt; and &lt;code&gt;$details-&amp;gt;path&lt;/code&gt;, which always results in an &lt;code&gt;http&lt;/code&gt; URL because no URL scheme is provided. This is counterintuitive, as &lt;code&gt;site-info.php&lt;/code&gt; reflects the actual URL scheme for all the other sites in a network.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39025 (Date on draft post not changing to current time when draft is published) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Wed, 21 Dec 2016 19:21:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39025#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39025#comment:2/1482348061340421</guid>
      <description>&lt;p&gt;
We see this issue in the REST API also.  When you edit a draft in wp-admin without setting the date, the &lt;code&gt;date_gmt&lt;/code&gt; field is set to null/zero to indicate that the draft's date should be updated each time the post is modified.
&lt;/p&gt;
&lt;p&gt;
Probably, in each of these cases, something is setting the &lt;code&gt;date_gmt&lt;/code&gt; field to a non-null value.  See &lt;a href="https://core.trac.wordpress.org/ticket/5698#comment:14"&gt;https://core.trac.wordpress.org/ticket/5698#comment:14&lt;/a&gt; for details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 21 Dec 2016 18:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:6/1482346335827539</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39358#comment:5" title="Comment 5"&gt;merts&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
That's correct. We are in agreement over the cause of the increased query time for media search queries and I shared a workaround you can use to revert your site to pre-4.7 behavior. My mentioning &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38911" title="#38911: enhancement: Prevent Media Library search making an AJAX request for each char typed. (closed: fixed)"&gt;#38911&lt;/a&gt; is intended mainly as an FYI for anyone looking at this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39025 (Date on draft post not changing to current time when draft is published) updated</title>
      
        <dc:creator>samuelsidler</dc:creator>

      <pubDate>Wed, 21 Dec 2016 18:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39025#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39025#comment:1/1482345408560105</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38695 (Customizer requires a relaxed CSP with 'unsafe-eval' specified) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Dec 2016 18:23:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38695#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38695#comment:2/1482344637219039</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1482344635000577"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>merts</dc:creator>

      <pubDate>Wed, 21 Dec 2016 18:20:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:5/1482344406635820</guid>
      <description>&lt;p&gt;
@joemcgill Reducing the amount of queries can be effective but the underlying problem is the resulting sql produced by this function. If you dump the sql into to error_log, you will see that it joins two tables (which can be quite large in our case) with bunch of "or" statements. These new "or" statements come from the filter I wrote above.
&lt;/p&gt;
&lt;p&gt;
Please consider the fact that the previous Wordpress was finishing ajax search pretty fast in our db even though we could keep typing in the search bar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38559 (Current header image gets clipped in the Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 21 Dec 2016 18:11:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38559#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38559#comment:5/1482343872299684</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38559#comment:2" title="Comment 2"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@bradyvercher Should not the header image control be taken further to extend the &lt;code&gt;MediaControl&lt;/code&gt; instead of &lt;code&gt;Control&lt;/code&gt;? It seems that there is some logic in here that is redundant. All that should be needed is the header image attachment ID and the attachment data (and image size URLs) should be fetched when the control is embedded, like in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36521" title="#36521: defect (bug): Setting media control value through JavaScript API does not update ... (closed: fixed)"&gt;#36521&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I don't see why we need both the &lt;code&gt;header_image&lt;/code&gt; and the &lt;code&gt;header_image_data&lt;/code&gt; setting.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The header image control needs to be totally refactored to make use of the media control hierarchy, JS-templated controls, and even the customizer JS API, since it was introduced before any of those existed. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36581" title="#36581: enhancement: Customizer Header Image Control should extend the cropped image control (new)"&gt;#36581&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Realistically, I think it would be best to prioritize that larger refactoring over all of these individual bugs for the header image control, as many would be fixed in the process. All of the media controls will benefit, with things like &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/32861" title="#32861: enhancement: Site Icon: Provide display for all existing site-icon cropped images (reopened)"&gt;#32861&lt;/a&gt; being fixed in the process. If anyone is interested in taking on that project I'd be happy to assist with any questions on the implementation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>JasWSInc</dc:creator>

      <pubDate>Wed, 21 Dec 2016 18:01:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:8/1482343277111233</guid>
      <description>&lt;p&gt;
Regarding &lt;code&gt;opcache.restrict_api&lt;/code&gt;. This INI setting, if not empty, contains a filesystem path that effectively becomes a whitelist, and therefore blacklists anything outside of the filesystem path given.
&lt;/p&gt;
&lt;p&gt;
An example value for &lt;code&gt;opcache.restrict_api&lt;/code&gt; would be something like:
&lt;code&gt;opcache.restrict_api = /var/www/html/wp-content/plugins/xyz/&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Which states that any PHP file that has a filesystem path that begins with &lt;code&gt;/var/www/html/wp-content/plugins/xyz/&lt;/code&gt; is whitelisted. Any that does not, is blacklisted.
&lt;/p&gt;
&lt;p&gt;
So to check this in PHP (against the current &lt;code&gt;__FILE__&lt;/code&gt;), use something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;ini_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'opcache.restrict_api'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;stripos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;ini_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'opcache.restrict_api'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;opcache_reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39363 (New custom css customizer saved as a published post) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Wed, 21 Dec 2016 17:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39363#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39363#comment:1/1482343125168034</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39363" title="#39363: defect (bug): New custom css customizer saved as a published post (closed: invalid)"&gt;gresakg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I could not reproduce the bug and I don't know in what exact circumstances it really occurs. This is what happened:
I open theme customizer and go to "Additional css" tab.
In the preview pane I navigate to a post.
I live edit css.
I save and close the customizer.
I have not found out that the post has gone missing until next morning when colleagues reported, that a post was missing.
I searched for the post and could not find it in the admin section.
I could not find the post by post_name in the database.
I found revisions of the post in the the database and took the ID.
I made the search for that ID in the database and found a post of type custom_css and post_name identical to the slug of the theme, containing the custom css styles.
I could not yet reproduce the bug in a safe environment, because I don't have the exact copy of the system. It didn't work on my local installation.
&lt;/p&gt;
&lt;p&gt;
Recovery: I managed to recover my post by changing the slug and the post type of the corrupted post in the database and then recover the content using the revisions pane in the post editing section.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @gresakg , I tried to replicate this, but can't successful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39362 (Checkbox control for 'Automatically add new top-level pages to this ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 21 Dec 2016 17:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39362#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39362#comment:1/1482342951329786</guid>
      <description>&lt;p&gt;
The customize control class and &lt;code&gt;li&lt;/code&gt; should already be added outside the &lt;code&gt;content_template&lt;/code&gt; to reflect the actual control type, which in this case is specific to the nav menu auto-add control.
&lt;/p&gt;
&lt;p&gt;
I don't remember off the top of my head why this isn't a regular checkbox control, I think it's so that its JS logic can be organized within the control's JS structure. I don't think we could add another &lt;code&gt;li&lt;/code&gt; like &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39362/39362.patch" title="Attachment '39362.patch' in Ticket #39362"&gt;39362.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39362/39362.patch" title="Download"&gt;​&lt;/a&gt; does, but it would probably be okay to add the checkbox class to the existing &lt;code&gt;.customize-control&lt;/code&gt; here if there's a clean way to do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39349 (Customizer (mobile preview) site title extra padding) updated</title>
      
        <dc:creator>sirbrillig</dc:creator>

      <pubDate>Wed, 21 Dec 2016 17:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39349#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39349#comment:5/1482341396206358</guid>
      <description>&lt;p&gt;
@westonruter it's... possible? But I *think* that was added by someone else. There were a lot of contributions to the CSS of that patch. I've never been particularly concerned about the icons being cut off. I think it's a better experience than changing the layout to accommodate them. Regardless of who wrote it originally, I don't think it's a good solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 21 Dec 2016 17:23:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:4/1482341022159186</guid>
      <description>&lt;p&gt;
Related: Addressing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38911" title="#38911: enhancement: Prevent Media Library search making an AJAX request for each char typed. (closed: fixed)"&gt;#38911&lt;/a&gt; could help some of the perceived slowness by reducing the amount of queries that hit the DB whenever someone is doing an AJAX search from the media library.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39364.diff attached to Ticket #39364</title>
      
        <dc:creator>shivapoudel</dc:creator>

      <pubDate>Wed, 21 Dec 2016 17:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39364/39364.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39364/39364.diff/1482339914245386</guid>
      <description>&lt;p&gt;
Introduce trigger to handle a custom queue job :)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39364 (Introduce a trigger to handle a custom queue job and run them) created</title>
      
        <dc:creator>shivapoudel</dc:creator>

      <pubDate>Wed, 21 Dec 2016 17:03:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39364</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39364/1482339808221518</guid>
      <description>&lt;p&gt;
While I was creating a plugin which imports theme demos. I have to utilize the &lt;code&gt;wp.updates&lt;/code&gt; for AJAX way to import and delete the demo packs but unfortunately there are no any trigger which I can utilize to update the queue job for demo by using its action and data in &lt;code&gt;wp.updates.queueChecker&lt;/code&gt;. As a fix I have introduced a trigger in a patch file :)
&lt;/p&gt;
&lt;p&gt;
Any procedure to the extend self-executing anynonmous function &lt;code&gt;wp.updates.queueChecker&lt;/code&gt; below with only trigger &lt;code&gt;$document.trigger( 'wp-updates-queue-job', job );&lt;/code&gt; is much appreciated :)
&lt;/p&gt;
&lt;pre class="wiki"&gt;( function( $, wp ) {
	var $document = $( document );
	wp = wp || {};
	/**
	 * The WP Updates object.
	 *
	 * @type {object}
	 */
	wp.updates = wp.updates || {};
	/**
	 * Sends an Ajax request to the server to delete a demo.
	 *
	 * @param {object}             args
	 * @param {string}             args.slug    Demo Pack.
	 * @param {deleteDemoSuccess=} args.success Optional. Success callback. Default: wp.updates.deleteDemoSuccess
	 * @param {deleteDemoError=}   args.error   Optional. Error callback. Default: wp.updates.deleteDemoError
	 * @return {$.promise} A jQuery promise that represents the request,
	 *                     decorated with an abort() method.
	 */
	wp.updates.deleteDemo = function( args ) {
		var $button = $( '.theme-actions .delete-demo' );
		args = _.extend( {
			success: wp.updates.deleteDemoSuccess,
			error: wp.updates.deleteDemoError
		}, args );
		if ( $button &amp;amp;&amp;amp; $button.html() !== wp.updates.l10n.deleting ) {
			$button
				.data( 'originaltext', $button.html() )
				.text( wp.updates.l10n.deleting );
		}
		wp.a11y.speak( wp.updates.l10n.deleting, 'polite' );
		// Remove previous error messages, if any.
		$( '.theme-info .update-message' ).remove();
		$document.trigger( 'wp-demo-deleting', args );
		return wp.updates.ajax( 'delete-demo', args );
	};
	/**
	 * Updates the UI appropriately after a successful demo deletion.
	 *
	 * @typedef {object} deleteDemoSuccess
	 * @param {object} response      Response from the server.
	 * @param {string} response.slug Slug of the demo that was deleted.
	 */
	wp.updates.deleteDemoSuccess = function( response ) {
		wp.a11y.speak( wp.updates.l10n.deleted, 'polite' );
		$document.trigger( 'wp-demo-delete-success', response );
	};
	/**
	 * Updates the UI appropriately after a failed demo deletion.
	 *
	 * @typedef {object} deleteDemoError
	 * @param {object} response              Response from the server.
	 * @param {string} response.slug         Slug of the demo to be deleted.
	 * @param {string} response.errorCode    Error code for the error that occurred.
	 * @param {string} response.errorMessage The error that occurred.
	 */
	wp.updates.deleteDemoError = function( response ) {
		var $button      = $( '.theme-actions .delete-demo' ),
			errorMessage = wp.updates.l10n.deleteFailed.replace( '%s', response.errorMessage ),
			$message     = wp.updates.adminNotice( {
				className: 'update-message notice-error notice-alt',
				message:   errorMessage
			} );
		if ( wp.updates.maybeHandleCredentialError( response, 'delete-demo' ) ) {
			return;
		}
		$( '.theme-info .theme-description' ).before( $message );
		$button.html( $button.data( 'originaltext' ) );
		wp.a11y.speak( errorMessage, 'assertive' );
		$document.trigger( 'wp-demo-delete-error', response );
	};
	/**
	 * Pulls available jobs from the queue and runs them.
	 */
	wp.updates.queueChecker = function() {
		var job;
		if ( wp.updates.ajaxLocked || ! wp.updates.queue.length ) {
			return;
		}
		job = wp.updates.queue.shift();
		// Handle a queue job.
		switch ( job.action ) {
			case 'install-plugin':
				wp.updates.installPlugin( job.data );
				break;
			case 'update-plugin':
				wp.updates.updatePlugin( job.data );
				break;
			case 'delete-plugin':
				wp.updates.deletePlugin( job.data );
				break;
			case 'install-theme':
				wp.updates.installTheme( job.data );
				break;
			case 'update-theme':
				wp.updates.updateTheme( job.data );
				break;
			case 'delete-theme':
				wp.updates.deleteTheme( job.data );
				break;
			default:
				break;
		}
		$document.trigger( 'wp-updates-queue-job', job );
	};
})( jQuery, window.wp );
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Wed, 21 Dec 2016 16:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:3/1482337577687074</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @merts,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac. As @swissspidy noted, this change was an intentional one in order to allow people to search for media in the media library by file name. I noted performance concerns in comments on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22744" title="#22744: enhancement: Media search doesn't include file name (closed: fixed)"&gt;#22744&lt;/a&gt;, which is partially why this change was applied narrowly to only times when someone is searching attachments. Adding this change as a filter also gives sites the ability to disable this change by removing the filter after it has been added.
&lt;/p&gt;
&lt;p&gt;
Here's one approach to disabling the filter if you so choose:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'pre_get_posts', 'remove_query_attachment_filename_filter' );
function remove_query_attachment_filename_filter() {
	remove_filter( 'posts_clauses', '_filter_query_attachment_filenames' );
}
&lt;/pre&gt;&lt;p&gt;
We also might need to experiment with adding an index for post meta that targets the &lt;code&gt;_wp_attached_file&lt;/code&gt; key as a way of reducing the query performance concerns. I'd appreciate insight from @dd32 or @pento on possibilities there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39313 (Add New button not disappearing in Distraction-free Writing mode) closed</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39313#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39313#comment:6/1482332131895406</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39634" title="Editor: Let the Add New link disappear in DFW mode.
The link was ..."&gt;39634&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Let the Add New link disappear in DFW mode.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The link was moved outside the heading in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38983" title="Accessibility: Remove inappropriate content from the Posts and Edit ..."&gt;[38983]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39619" title="Editor: Let the Add New link disappear in DFW mode.
The link was ..."&gt;[39619]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39313" title="#39313: defect (bug): Add New button not disappearing in Distraction-free Writing mode (closed: fixed)"&gt;#39313&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39634]: Editor: Let the Add New link disappear in DFW mode.  The link was ...</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39634</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39634/1482332131408472</guid>
      <description>&lt;p&gt;
Editor: Let the Add New link disappear in DFW mode.
&lt;/p&gt;
&lt;p&gt;
The link was moved outside the heading in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38983" title="Accessibility: Remove inappropriate content from the Posts and Edit ..."&gt;[38983]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39619" title="Editor: Let the Add New link disappear in DFW mode.
The link was ..."&gt;[39619]&lt;/a&gt; to the 4.7 branch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39313" title="#39313: defect (bug): Add New button not disappearing in Distraction-free Writing mode (closed: fixed)"&gt;#39313&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38138 (Crop media - NaN error at specific &amp;image-editor URL) updated</title>
      
        <dc:creator>NoseGraze</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38138#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38138#comment:7/1482331442693858</guid>
      <description>&lt;p&gt;
That fix works perfectly - thank you!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38138 (Crop media - NaN error at specific &amp;image-editor URL) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38138#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38138#comment:6/1482331078725189</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38138 (Crop media - NaN error at specific &amp;image-editor URL) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:37:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38138#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38138#comment:5/1482331039745502</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@NoseGraze thanks for the details. I tracked this down to a failure to properly initialize the editor JavaScript code, can you try my patch to see if that fixes your issue?
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38138/38138.diff" title="Attachment '38138.diff' in Ticket #38138"&gt;38138.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38138/38138.diff" title="Download"&gt;​&lt;/a&gt;:
Ensure the media edit has run &lt;code&gt;init&lt;/code&gt; when directly loading the media edit screen.
&lt;/p&gt;
&lt;p&gt;
When the media edit screen is loaded directly via a url such as &lt;code&gt;/wp-admin/post.php?post={post_id}&amp;amp;action=edit&amp;amp;image-editor&lt;/code&gt; the JavaScript fails to execute the &lt;code&gt;init&lt;/code&gt; function, breaking certain featured that require setup including cropping. Adds a check in &lt;code&gt;imgLoaded&lt;/code&gt; that explicitly checks for the &lt;code&gt;hold.sizer&lt;/code&gt; required for the cropper. Calls &lt;code&gt;init&lt;/code&gt; explicitly if this is undefined.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38138.diff attached to Ticket #38138</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:31:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38138/38138.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38138/38138.diff/1482330689289846</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38138 (Crop media - NaN error at specific &amp;image-editor URL) updated</title>
      
        <dc:creator>NoseGraze</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38138#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38138#comment:4/1482329317665627</guid>
      <description>&lt;p&gt;
Sorry about that @adamsilverstein. Not sure why the code got removed. But yes, ultimately the code in the Codex helps you create a simple media frame. When opened, the right-hand side has this:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://www.nosegraze.com/wp-content/uploads/2016/12/wp-edit-image.png"&gt;&lt;img src="https://www.nosegraze.com/wp-content/uploads/2016/12/wp-edit-image.png" alt="https://www.nosegraze.com/wp-content/uploads/2016/12/wp-edit-image.png" crossorigin="anonymous" title="https://www.nosegraze.com/wp-content/uploads/2016/12/wp-edit-image.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When clicking "Edit Image", it opens that URL you checked in a new tab ( &lt;code&gt;wp-admin/post.php?post=25460&amp;amp;action=edit&amp;amp;image-editor&lt;/code&gt; ). And that's when it breaks.
&lt;/p&gt;
&lt;p&gt;
Whereas if you click "Edit Image" in the "Set Featured Image" modal, it doesn't open in a new tab. It opens the "Edit Image" pane directly in the modal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39350 (Twenty Seventeen: Customise location of the Social Links Menu) updated</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39350#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39350#comment:1/1482329132189012</guid>
      <description>&lt;p&gt;
My first reaction is that we might need custom widget for this. But I really haven't looked any further.
&lt;/p&gt;
&lt;p&gt;
If we need custom widget would that be ok in default theme?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38138 (Crop media - NaN error at specific &amp;image-editor URL) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38138#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38138#comment:3/1482328896493356</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@NoseGraze Thanks for the bug report.
&lt;/p&gt;
&lt;p&gt;
I had a little trouble reproducing at first (the code/plugin link was broken) - I finally got it by adding the 'image-editor" string to the url of an image edit screen and I assume that url pattern is what following the codex code gets you. I'm going to dig in to see if I can find out why these fields aren't properly initialized.
&lt;/p&gt;
&lt;p&gt;
Here is a screenshot showing the bug.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cl.ly/18442x0D3Y2h/Edit_Media__wpdev__WordPress_2016-12-21_08-58-33.jpg"&gt;&lt;img src="https://cl.ly/18442x0D3Y2h/Edit_Media__wpdev__WordPress_2016-12-21_08-58-33.jpg" alt="https://cl.ly/18442x0D3Y2h/Edit_Media__wpdev__WordPress_2016-12-21_08-58-33.jpg" crossorigin="anonymous" title="https://cl.ly/18442x0D3Y2h/Edit_Media__wpdev__WordPress_2016-12-21_08-58-33.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39363 (New custom css customizer saved as a published post) created</title>
      
        <dc:creator>gresakg</dc:creator>

      <pubDate>Wed, 21 Dec 2016 14:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39363</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39363/1482328808096025</guid>
      <description>&lt;p&gt;
I could not reproduce the bug and I don't know in what exact circumstances it really occurs. This is what happened:
I open theme customizer and go to "Additional css" tab.
In the preview pane I navigate to a post.
I live edit css.
I save and close the customizer.
I have not found out that the post has gone missing until next morning when colleagues reported, that a post was missing.
I searched for the post and could not find it in the admin section.
I could not find the post by post_name in the database.
I found revisions of the post in the the database and took the ID.
I made the search for that ID in the database and found a post of type custom_css and post_name identical to the slug of the theme, containing the custom css styles.
I could not yet reproduce the bug in a safe environment, because I don't have the exact copy of the system. It didn't work on my local installation.
&lt;/p&gt;
&lt;p&gt;
Recovery: I managed to recover my post by changing the slug and the post type of the corrupted post in the database and then recover the content using the revisions pane in the post editing section.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38911 (Prevent Media Library search making an AJAX request for each char typed.) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 21 Dec 2016 13:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38911#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38911#comment:10/1482326851749577</guid>
      <description>&lt;p&gt;
@aidanlane thanks for testing. the 1000 ms delay is in the code that sets up the media grid (media-grid.js:L667 in &lt;code&gt;bindSearchHandler&lt;/code&gt;), I will test to see where that is used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Wed, 21 Dec 2016 12:32:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:7/1482323570969006</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36455#comment:6" title="Comment 6"&gt;JanR&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As long as tools like WP-CLI use native WordPress core functionality, there should be no problem adding such a flush function to the core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
OPcache uses the process' shared memory thus Apache has no common OPcache with php-cli.
&lt;/p&gt;
&lt;p&gt;
Drush uses a special URL to purge opcode cache.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39362.patch attached to Ticket #39362</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 21 Dec 2016 11:51:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39362/39362.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39362/39362.patch/1482321108017966</guid>
      <description>&lt;p&gt;
Proposed patch for the issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39362 (Checkbox control for 'Automatically add new top-level pages to this ...) created</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 21 Dec 2016 11:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39362</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39362/1482320914829552</guid>
      <description>&lt;p&gt;
When you go to set the menu in the customizer you have the option to check the Menu Options for Adding the top-level pages automatically to the current menu. This option isn't wrapped in the
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;li class="customize-control customize-control-checkbox"&amp;gt;&amp;lt;/li&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This isn't a bug, but a hindrance if you want to customize the look of the customizer and would like to have all the checkboxes look the same.
&lt;/p&gt;
&lt;p&gt;
One could say that all one needs to add is the style for
&lt;/p&gt;
&lt;pre class="wiki"&gt;.input[type="checkbox"]
&lt;/pre&gt;&lt;p&gt;
but this is not true if you have a custom control that has a checkbox input, and you want to style it differently. In that case you'd need to overwrite additionally. Plus the current style is styled via &lt;code&gt;.customize-control-checkbox input[type="checkbox"]&lt;/code&gt; as well as with just &lt;code&gt;input[type="checkbox"]&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39130 (Docblock improvements for 4.8) updated</title>
      
        <dc:creator>keesiemeijer</dc:creator>

      <pubDate>Wed, 21 Dec 2016 11:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39130#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39130#comment:3/1482319722840402</guid>
      <description>&lt;p&gt;
Just to clarify some of the patches.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39130/39130.5.patch" title="Attachment '39130.5.patch' in Ticket #39130"&gt;39130.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39130/39130.5.patch" title="Download"&gt;​&lt;/a&gt; the DocBlock is not found by the parser because it's a comment. This has the consequence that it's imported as a duplicate filter (without the parameters).
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/image_size_names_choose-4/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/hooks/image_size_names_choose-4/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39130/39130.7.patch" title="Attachment '39130.7.patch' in Ticket #39130"&gt;39130.7.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39130/39130.7.patch" title="Download"&gt;​&lt;/a&gt; the &lt;code&gt;@since&lt;/code&gt; parameter is only picked up by the parser if there's only one space before it. Now it's displayed in the description section instead of the change log section.
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_update_network_counts/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/wp_update_network_counts/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39361 (Object not properly tested against in wp-includes/post-template.php) created</title>
      
        <dc:creator>fourstringfail</dc:creator>

      <pubDate>Wed, 21 Dec 2016 10:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39361</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39361/1482315819598622</guid>
      <description>&lt;p&gt;
PHP Notice: Trying to get property of non-object in /home/coffeet9/public_html/wp-includes/post-template.php on line 298
&lt;/p&gt;
&lt;p&gt;
line 298:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( false !== strpos( $post-&amp;gt;post_content, '&amp;lt;!--noteaser--&amp;gt;' ) &amp;amp;&amp;amp; ( ! $multipage || $page == 1 ) )
$strip_teaser = true;
&lt;/pre&gt;&lt;p&gt;
Requires if(isset($post-&amp;gt;post_content)) so that null variables aren't tested against
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39352 (Customize: menu widgets have two edit shortcuts) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Wed, 21 Dec 2016 10:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39352#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39352#comment:2/1482314702879405</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since you can click the "Edit Menu" button to get from the widget settings to the menu settings and not the other way around, I suggest we hide the menu shortcut, but I'm open to a dissenting opinion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd wait for Mel's review too, but my opinion is that a better solution would require more design and rework, so this is probably the best approach we have right now for the reason you have outlined.
It's also slightly less incongruent having all the "widget" items to have the same kind of interaction to start with.
&lt;/p&gt;
&lt;p&gt;
tl;dr: hide the menu shortcut.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39360-tests.2.diff attached to Ticket #39360</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Wed, 21 Dec 2016 10:03:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39360/39360-tests.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39360/39360-tests.2.diff/1482314633009018</guid>
      <description>&lt;p&gt;
Simpler test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39360-tests.diff attached to Ticket #39360</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Wed, 21 Dec 2016 09:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39360/39360-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39360/39360-tests.diff/1482314256714117</guid>
      <description>&lt;p&gt;
Unit tests to reproduce this issue.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39360 (wp_mail throws a phpmailerException when the sender address is incorrect) created</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Wed, 21 Dec 2016 09:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39360/1482314118782720</guid>
      <description>&lt;p&gt;
The default implementation of &lt;code&gt;wp_mail&lt;/code&gt; causes a PHP fatal due to an uncaught &lt;code&gt;phpmailerException&lt;/code&gt; exception when the &lt;code&gt;From&lt;/code&gt; address contains an invalid email address.
I noticed this error while trying to install WP on a local ubuntu 16.04 VM with PHP 7.1 and the default nginx config (the WP dir was in &lt;code&gt;/var/www/html/wordpress/&lt;/code&gt;).
&lt;/p&gt;
&lt;pre class="wiki"&gt;server {
	listen 80 default_server;
	root /var/www/html;
	index index.php index.html index.htm index.nginx-debian.html;
	server_name _;
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
		fastcgi_pass unix:/run/php/php7.1-fpm.sock;
	}
}
&lt;/pre&gt;&lt;p&gt;
On the last install step, the VM http server responsed with a 500 error page --- the installation seems to have completed though. Here's the stack trace:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP message: PHP Fatal error:  Uncaught phpmailerException: Invalid address: wordpress@_ in /var/www/html/wordpress/wp-includes/class-phpmailer.php:946
Stack trace:
#0 /var/www/html/wordpress/wp-includes/pluggable.php(352): PHPMailer-&amp;gt;setFrom('wordpress@_', 'WordPress', false)
#1 /var/www/html/wordpress/wp-admin/includes/upgrade.php(395): wp_mail('alex@buayacorp....', 'New WordPress S...', 'Your new WordPr...')
#2 /var/www/html/wordpress/wp-admin/includes/upgrade.php(98): wp_new_blog_notification('test', 'http://128.199....', 1, 'The password yo...')
#3 /var/www/html/wordpress/wp-admin/install.php(375): wp_install('test', 'alex', 'alex@buayacorp....', 1, '', '...', 'en_US')
#4 {main}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>39359.diff attached to Ticket #39359</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 21 Dec 2016 09:26:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39359/39359.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39359/39359.diff/1482312365484841</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39359 (`.jsintrc` is a JSON file, indentation should use tabs, not spaces) created</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 21 Dec 2016 09:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39359</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39359/1482312318655947</guid>
      <description>&lt;p&gt;
Following up from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29884" title="#29884: defect (bug): Include .jshintrc in .editorconfig (closed: fixed)"&gt;#29884&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29858" title=".jshintrc is a json file and .editorconfig should treat it like a json ..."&gt;r29858&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
.jshintrc is a json file and .editorconfig should treat it like a json file
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even though the &lt;code&gt;editorconfig&lt;/code&gt; file was updated to treat &lt;code&gt;jshintrc&lt;/code&gt; as a JSON file and use spaces, not tabs the actual &lt;code&gt;.jshintrc&lt;/code&gt; file was never updated, this ticket address this oversight on my part.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>JanR</dc:creator>

      <pubDate>Wed, 21 Dec 2016 09:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:6/1482311837838772</guid>
      <description>&lt;p&gt;
Currently I'm looking into our opcache configuration settings in PHP 5.6 and 7, as we see more and more issues with WordPress updates lately too.
&lt;/p&gt;
&lt;p&gt;
To ease updates you can use the &lt;code&gt;upgrader_pre_install()&lt;/code&gt; hook, and perform a flush of the cache. I've created a little Must Use Plugin &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; for this (it cannot be done from within a plugin when using &lt;code&gt;upgrader_pre_install()&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
And don't forget OPcache's file path caches: &lt;a class="ext-link" href="http://php.net/manual/en/function.opcache-get-status.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://php.net/manual/en/function.opcache-get-status.php&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As long as tools like WP-CLI use native WordPress core functionality, there should be no problem adding such a flush function to the core.
&lt;/p&gt;
&lt;p&gt;
I'll get back when and if I found some valuable opcache settings administrators may need to set.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; &lt;a class="ext-link" href="https://www.saotn.org/wordpress-plugin-flush-php-opcache/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.saotn.org/wordpress-plugin-flush-php-opcache/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39157 (Feed returns 404 when there are no posts) updated</title>
      
        <dc:creator>alfredo49</dc:creator>

      <pubDate>Wed, 21 Dec 2016 09:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39157#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39157#comment:13/1482311276343380</guid>
      <description>&lt;p&gt;
This issue will be resolved in WP4.7.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39355 (Menu title doesn't get updated if I change the page title) updated</title>
      
        <dc:creator>maaarsl</dc:creator>

      <pubDate>Wed, 21 Dec 2016 09:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39355#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39355#comment:3/1482311119311118</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39355#comment:1" title="Comment 1"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39632" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;39632&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Seventeen: Ensure functions in &lt;code&gt;customize-controls.js&lt;/code&gt; don't count on Customizer sections always being present&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Before, the code assumed the &lt;code&gt;theme_options&lt;/code&gt; section is always present, but it can be removed by plugins. This way, if it is, no JavaScript errors occur.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39623" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;[39623]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39355" title="#39355: defect (bug): Menu title doesn't get updated if I change the page title (reopened)"&gt;#39355&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
This isn't a bug in the 'Twenty Seventeen' theme, it occurs with every theme. I think you got my bug description wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39349 (Customizer (mobile preview) site title extra padding) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Dec 2016 08:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39349#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39349#comment:4/1482309191490385</guid>
      <description>&lt;p&gt;
@sirbrillig didn't you add the padding so that the edit shortcuts wouldn't get cut off at the edge of the screen?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36770 (Enabling FORCE_SSL_ADMIN and FULL SITE breaks wp-cron.php) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Dec 2016 08:28:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36770#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36770#comment:9/1482308893146005</guid>
      <description>worksforme: &lt;p&gt;
@idarek Good to hear. I'm closing this for now. Feel free to reopen or ask in the support forums if the problem reappears.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Dec 2016 08:20:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:5/1482308455448908</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding this to the 4.8 milestone because we've seen many reports of broken sites after updates, all related to the OpCache not being cleared.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/wordpress-4-7-fatal-error-cannot-redeclare-get_paged_template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/wordpress-4-7-fatal-error-cannot-redeclare-get_paged_template/&lt;/a&gt; is just one example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 21 Dec 2016 08:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:2/1482308136365879</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Dec 2016 08:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358#comment:1/1482307949356808</guid>
      <description>&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38625" title="Media: Make media library searchable by filename.
This applies a new ..."&gt;[38625]&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22744" title="#22744: enhancement: Media search doesn't include file name (closed: fixed)"&gt;#22744&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39358 (Media search speed has been dramatically reduced) created</title>
      
        <dc:creator>merts</dc:creator>

      <pubDate>Wed, 21 Dec 2016 08:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39358</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39358/1482307638585328</guid>
      <description>&lt;p&gt;
In the ajax-actions.php file there is function called wp_ajax_query_attachments. This function is responsible for searching images in the media library.
&lt;/p&gt;
&lt;p&gt;
We see that in Wordpress 4.7, someone added a new filter to this function:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	// Filter query clauses to include filenames.
	if ( isset( $query['s'] ) ) {
		add_filter( 'posts_clauses', '_filter_query_attachment_filenames' );
	}
&lt;/pre&gt;&lt;p&gt;
This filter is a performance killer and takes forever to output a result in large databases. We have tested this with db that has over 500000 posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39357 (Add since and access tag in rest-api files) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Dec 2016 07:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39357#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39357#comment:1/1482306782083405</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39356 (grunt precommit doesn't work on full checkouts of develop.svn) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 21 Dec 2016 07:23:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39356#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39356#comment:1/1482305009095979</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've added a search path for the &lt;code&gt;.svn&lt;/code&gt; folder two levels up in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39356/39356.diff" title="Attachment '39356.diff' in Ticket #39356"&gt;39356.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39356/39356.diff" title="Download"&gt;​&lt;/a&gt;, this works fine for both &lt;code&gt;svn co https://develop.svn.wordpress.org/&lt;/code&gt; and &lt;code&gt;svn co https://develop.svn.wordpress.org/trunk&lt;/code&gt; checkouts
&lt;/p&gt;
&lt;p&gt;
Note: A Git equivalent isn't required as Git handles branches differently as the &lt;code&gt;.git&lt;/code&gt; is always present at the root level irrespective of the checked out branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39356.diff attached to Ticket #39356</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 21 Dec 2016 07:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39356/39356.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39356/39356.diff/1482304878497250</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>39357.patch attached to Ticket #39357</title>
      
        <dc:creator>chris_dev</dc:creator>

      <pubDate>Wed, 21 Dec 2016 07:14:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39357/39357.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39357/39357.patch/1482304481023751</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39357 (Add since and access tag in rest-api files) created</title>
      
        <dc:creator>chris_dev</dc:creator>

      <pubDate>Wed, 21 Dec 2016 07:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39357</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39357/1482304460151575</guid>
      <description>&lt;p&gt;
Add since and access tag in rest-api files
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39335 (Twenty Seventeen: customize-controls.js incorrectly assumes ...) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Wed, 21 Dec 2016 07:03:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39335#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39335#comment:7/1482303790109293</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39047 (Installer tries to create nonce before options table exists) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 06:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39047#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39047#comment:11/1482301186529056</guid>
      <description>&lt;p&gt;
@nullvariable: I haven't been able to reproduce this error.
&lt;/p&gt;
&lt;p&gt;
Could you please upload a copy of the &lt;code&gt;wp-config.php&lt;/code&gt; you're using that causes this?
&lt;/p&gt;
&lt;p&gt;
Have the database user and database name defined in your &lt;code&gt;wp-config.php&lt;/code&gt; been created in MySQL?
&lt;/p&gt;
&lt;p&gt;
Are there any other tables in that database using the same table prefix as defined in your &lt;code&gt;wp-config.php&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39355 (Menu title doesn't get updated if I change the page title) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Dec 2016 06:15:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39355#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39355#comment:2/1482300932004578</guid>
      <description>&lt;p&gt;
The revision &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39632" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;[39632]&lt;/a&gt; mentions this ticket when it should have mentioned &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39335" title="#39335: defect (bug): Twenty Seventeen: customize-controls.js incorrectly assumes ... (closed: fixed)"&gt;#39335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39335 (Twenty Seventeen: customize-controls.js incorrectly assumes ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 21 Dec 2016 06:14:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39335#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39335#comment:6/1482300863314308</guid>
      <description>&lt;p&gt;
This commit &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39623" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;[39623]&lt;/a&gt; was merged to the 4.7 branch in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39632" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;[39632]&lt;/a&gt; by @pento, though it had a typo in the ticket reference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #38594,​39231 batch updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:52:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38594%2C39231</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38594%2C39231/1482299575441430</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39633" title="Media: Allow PDF fallbacks filter to process custom sizes.
This fixes ..."&gt;39633&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Allow PDF fallbacks filter to process custom sizes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This fixes an oversight in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39246" title="Media: Make PDF preview sizes filterable.
This adds a new filter, ..."&gt;[39246]&lt;/a&gt;, which added a hook for filtering the array of sizes used for PDF thumbnails, but failed to provide a way for sizes added through &lt;code&gt;add_image_size()&lt;/code&gt; to be processed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39617" title="Media: Allow PDF fallbacks filter to process custom sizes.
This fixes ..."&gt;[39617]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props gitlost.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39231" title="#39231: defect (bug): Allow the pdf fallback_intermediate_image_sizes filter to process ... (closed: fixed)"&gt;#39231&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38594" title="#38594: enhancement: pdf preview sizes not filterable (closed: fixed)"&gt;#38594&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [39633]: Media: Allow PDF fallbacks filter to process custom sizes.  This fixes ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:52:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39633</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39633/1482299574950628</guid>
      <description>&lt;p&gt;
Media: Allow PDF fallbacks filter to process custom sizes.
&lt;/p&gt;
&lt;p&gt;
This fixes an oversight in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39246" title="Media: Make PDF preview sizes filterable.
This adds a new filter, ..."&gt;[39246]&lt;/a&gt;, which added a hook for filtering the array of sizes used for PDF thumbnails, but failed to provide a way for sizes added through &lt;code&gt;add_image_size()&lt;/code&gt; to be processed.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39617" title="Media: Allow PDF fallbacks filter to process custom sizes.
This fixes ..."&gt;[39617]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props gitlost.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39231" title="#39231: defect (bug): Allow the pdf fallback_intermediate_image_sizes filter to process ... (closed: fixed)"&gt;#39231&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38594" title="#38594: enhancement: pdf preview sizes not filterable (closed: fixed)"&gt;#38594&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39355 (Menu title doesn't get updated if I change the page title) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39355#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39355#comment:1/1482299264393567</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39632" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;39632&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Twenty Seventeen: Ensure functions in &lt;code&gt;customize-controls.js&lt;/code&gt; don't count on Customizer sections always being present&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Before, the code assumed the &lt;code&gt;theme_options&lt;/code&gt; section is always present, but it can be removed by plugins. This way, if it is, no JavaScript errors occur.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39623" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;[39623]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props westonruter.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39355" title="#39355: defect (bug): Menu title doesn't get updated if I change the page title (reopened)"&gt;#39355&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39632]: Twenty Seventeen: Ensure functions in `customize-controls.js` don't ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39632</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39632/1482299263904042</guid>
      <description>&lt;p&gt;
Twenty Seventeen: Ensure functions in &lt;code&gt;customize-controls.js&lt;/code&gt; don't count on Customizer sections always being present
&lt;/p&gt;
&lt;p&gt;
Before, the code assumed the &lt;code&gt;theme_options&lt;/code&gt; section is always present, but it can be removed by plugins. This way, if it is, no JavaScript errors occur.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39623" title="Twenty Seventeen: Ensure functions in `customize-controls.js` don't ..."&gt;[39623]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props westonruter.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/39355" title="#39355: defect (bug): Menu title doesn't get updated if I change the page title (reopened)"&gt;#39355&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39356 (grunt precommit doesn't work on full checkouts of develop.svn) created</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39356</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39356/1482299173833190</guid>
      <description>&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ svn co https://develop.svn.wordpress.org/ develop.svn
$ cd develop.svn/branches/4.7
&lt;/pre&gt;&lt;p&gt;
Edit a file in the 4.7 branch, then run &lt;code&gt;grunt precommit&lt;/code&gt;. It fails with this message:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ grunt precommit
Running "precommit" task
Fatal error: This WordPress install is not under version control.
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39300 (REST API Terms Controller Dynamic Filter Bug) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39300#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39300#comment:9/1482298395579641</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39631" title="REST API: Improve the `rest_*_collection_params` filter docs and fix ..."&gt;39631&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Improve the &lt;code&gt;rest_*_collection_params&lt;/code&gt; filter docs and fix the terms filter.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;rest_{$taxonomy}_collection_params&lt;/code&gt; filter in 4.7 is incorrectly using single quotes instead of double quotes, which means it is not working correctly as a dynamic filter. This fixes the quotes around the filter name, and also updates the docblocks for the other 3 similar filters for better conformance to the documentation standards.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39621" title="REST API: Improve the `rest_*_collection_params` filter docs and fix ..."&gt;[39621]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props shazahm1hotmailcom, JPry, jnylen0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39300" title="#39300: defect (bug): REST API Terms Controller Dynamic Filter Bug (closed: fixed)"&gt;#39300&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39631]: REST API: Improve the `rest_*_collection_params` filter docs and fix ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39631</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39631/1482298395085719</guid>
      <description>&lt;p&gt;
REST API: Improve the &lt;code&gt;rest_*_collection_params&lt;/code&gt; filter docs and fix the terms filter.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;rest_{$taxonomy}_collection_params&lt;/code&gt; filter in 4.7 is incorrectly using single quotes instead of double quotes, which means it is not working correctly as a dynamic filter. This fixes the quotes around the filter name, and also updates the docblocks for the other 3 similar filters for better conformance to the documentation standards.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39621" title="REST API: Improve the `rest_*_collection_params` filter docs and fix ..."&gt;[39621]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props shazahm1hotmailcom, JPry, jnylen0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39300" title="#39300: defect (bug): REST API Terms Controller Dynamic Filter Bug (closed: fixed)"&gt;#39300&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39293 (WordPress REST API warnings) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39293#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39293#comment:15/1482298164856132</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39630" title="REST API: Fix PHP warnings when `get_theme_support( 'post-formats' )` ..."&gt;39630&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Fix PHP warnings when &lt;code&gt;get_theme_support( 'post-formats' )&lt;/code&gt; is not an array.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If &lt;code&gt;add_theme_support( 'post-formats' )&lt;/code&gt; is called with no additional arguments, then &lt;code&gt;get_theme_support( 'post-formats' )&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; rather than an array of supported formats. Avoid generating PHP warnings in this situation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39620" title="REST API: Fix PHP warnings when `get_theme_support( 'post-formats' )` ..."&gt;[39620]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dreamon11, ChopinBach.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39293" title="#39293: defect (bug): WordPress REST API warnings (closed: fixed)"&gt;#39293&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39630]: REST API: Fix PHP warnings when `get_theme_support( 'post-formats' )` ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39630</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39630/1482298164344459</guid>
      <description>&lt;p&gt;
REST API: Fix PHP warnings when &lt;code&gt;get_theme_support( 'post-formats' )&lt;/code&gt; is not an array.
&lt;/p&gt;
&lt;p&gt;
If &lt;code&gt;add_theme_support( 'post-formats' )&lt;/code&gt; is called with no additional arguments, then &lt;code&gt;get_theme_support( 'post-formats' )&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; rather than an array of supported formats. Avoid generating PHP warnings in this situation.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39620" title="REST API: Fix PHP warnings when `get_theme_support( 'post-formats' )` ..."&gt;[39620]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props dreamon11, ChopinBach.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39293" title="#39293: defect (bug): WordPress REST API warnings (closed: fixed)"&gt;#39293&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39336 (Document WP_Query orderby=relevance) updated</title>
      
        <dc:creator>dots</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39336#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39336#comment:5/1482297732139033</guid>
      <description>&lt;p&gt;
@boonebgorges Thanks for the correction. Now, I understand.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39092 (REST API: Add support for filename search in media endpoint) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39092#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39092#comment:17/1482297504807628</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39629" title="REST API: Add support for filename search in media endpoint.
In ..."&gt;39629&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Add support for filename search in media endpoint.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38625" title="Media: Make media library searchable by filename.
This applies a new ..."&gt;[38625]&lt;/a&gt;, the functionality to search for attachments by filename was added via the &lt;code&gt;posts_clauses&lt;/code&gt; filter and the &lt;code&gt;_filter_query_attachment_filenames()&lt;/code&gt; function. This moves &lt;code&gt;_filter_query_attachment_filenames()&lt;/code&gt; from &lt;code&gt;wp-admin/includes/post.php&lt;/code&gt; to &lt;code&gt;wp-includes/post.php&lt;/code&gt; so that it can be applied in the same manner in the REST API media endpoint.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39598" title="REST API: Add support for filename search in media endpoint.
In ..."&gt;[39598]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jblz, tyxla.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39092" title="#39092: enhancement: REST API: Add support for filename search in media endpoint (closed: fixed)"&gt;#39092&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39629]: REST API: Add support for filename search in media endpoint.  In ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:18:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39629</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39629/1482297504321031</guid>
      <description>&lt;p&gt;
REST API: Add support for filename search in media endpoint.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38625" title="Media: Make media library searchable by filename.
This applies a new ..."&gt;[38625]&lt;/a&gt;, the functionality to search for attachments by filename was added via the &lt;code&gt;posts_clauses&lt;/code&gt; filter and the &lt;code&gt;_filter_query_attachment_filenames()&lt;/code&gt; function. This moves &lt;code&gt;_filter_query_attachment_filenames()&lt;/code&gt; from &lt;code&gt;wp-admin/includes/post.php&lt;/code&gt; to &lt;code&gt;wp-includes/post.php&lt;/code&gt; so that it can be applied in the same manner in the REST API media endpoint.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39598" title="REST API: Add support for filename search in media endpoint.
In ..."&gt;[39598]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props jblz, tyxla.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39092" title="#39092: enhancement: REST API: Add support for filename search in media endpoint (closed: fixed)"&gt;#39092&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38700 (REST API: Cannot send an empty or no-op comment update) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38700#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38700#comment:24/1482297127056709</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39628" title="REST API: Allow sending an empty or no-op comment update.
In general, ..."&gt;39628&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Allow sending an empty or no-op comment update.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In general, updates that don't actually change anything should succeed. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39371" title="REST API: Add tests for empty or &amp;#34;no-op&amp;#34; updates.
The API should ..."&gt;[39371]&lt;/a&gt; added tests for other object types, and this commit fixes empty updates for comments and adds the missing test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39597" title="REST API: Allow sending an empty or no-op comment update.
In general, ..."&gt;[39597]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38700" title="#38700: defect (bug): REST API: Cannot send an empty or no-op comment update (closed: fixed)"&gt;#38700&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39628]: REST API: Allow sending an empty or no-op comment update.  In general, ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:12:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39628</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39628/1482297126571734</guid>
      <description>&lt;p&gt;
REST API: Allow sending an empty or no-op comment update.
&lt;/p&gt;
&lt;p&gt;
In general, updates that don't actually change anything should succeed. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39371" title="REST API: Add tests for empty or &amp;#34;no-op&amp;#34; updates.
The API should ..."&gt;[39371]&lt;/a&gt; added tests for other object types, and this commit fixes empty updates for comments and adds the missing test.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39597" title="REST API: Allow sending an empty or no-op comment update.
In general, ..."&gt;[39597]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Props jnylen0.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38700" title="#38700: defect (bug): REST API: Cannot send an empty or no-op comment update (closed: fixed)"&gt;#38700&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39327 (Database connection errors in unit tests on 4.7) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39327#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39327#comment:6/1482296826055360</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39627" title="Tests: Restore the database connection earlier when switching test ..."&gt;39627&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Restore the database connection earlier when switching test groups.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When plugins don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; PHPUnit option in their own tests, &lt;code&gt;$wpdb&lt;/code&gt; is backed up and restored between classes of tests. The serialisation process used for this broke the database connection. This previously wasn't a problem, as it was reconnecting before each test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; introduced some changes that required the connection to be available in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;, earlier than in was previously reconnecting. This didn't cause warnings in Core, but it did cause warnings for plugins that don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; option.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The database connection now reconnects in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;. This change also fixes a few Core tests that weren't calling &lt;code&gt;parent::setUpBeforeClass()&lt;/code&gt; or &lt;code&gt;parent::tearDown()&lt;/code&gt; correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39626" title="Tests: Restore the database connection earlier when switching test ..."&gt;[39626]&lt;/a&gt; to the 4.7 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39327" title="#39327: defect (bug): Database connection errors in unit tests on 4.7 (closed: fixed)"&gt;#39327&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39627]: Tests: Restore the database connection earlier when switching test ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 05:07:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39627</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39627/1482296825572390</guid>
      <description>&lt;p&gt;
Tests: Restore the database connection earlier when switching test groups.
&lt;/p&gt;
&lt;p&gt;
When plugins don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; PHPUnit option in their own tests, &lt;code&gt;$wpdb&lt;/code&gt; is backed up and restored between classes of tests. The serialisation process used for this broke the database connection. This previously wasn't a problem, as it was reconnecting before each test.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; introduced some changes that required the connection to be available in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;, earlier than in was previously reconnecting. This didn't cause warnings in Core, but it did cause warnings for plugins that don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; option.
&lt;/p&gt;
&lt;p&gt;
The database connection now reconnects in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;. This change also fixes a few Core tests that weren't calling &lt;code&gt;parent::setUpBeforeClass()&lt;/code&gt; or &lt;code&gt;parent::tearDown()&lt;/code&gt; correctly.
&lt;/p&gt;
&lt;p&gt;
Merges &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39626" title="Tests: Restore the database connection earlier when switching test ..."&gt;[39626]&lt;/a&gt; to the 4.7 branch.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39327" title="#39327: defect (bug): Database connection errors in unit tests on 4.7 (closed: fixed)"&gt;#39327&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39327 (Database connection errors in unit tests on 4.7) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 04:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39327#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39327#comment:5/1482296369942415</guid>
      <description>&lt;p&gt;
Reopen for 4.7 branch.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39327 (Database connection errors in unit tests on 4.7) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 04:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39327#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39327#comment:4/1482296327873157</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39626" title="Tests: Restore the database connection earlier when switching test ..."&gt;39626&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Restore the database connection earlier when switching test groups.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When plugins don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; PHPUnit option in their own tests, &lt;code&gt;$wpdb&lt;/code&gt; is backed up and restored between classes of tests. The serialisation process used for this broke the database connection. This previously wasn't a problem, as it was reconnecting before each test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; introduced some changes that required the connection to be available in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;, earlier than in was previously reconnecting. This didn't cause warnings in Core, but it did cause warnings for plugins that don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; option.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The database connection now reconnects in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;. This change also fixes a few Core tests that weren't calling &lt;code&gt;parent::setUpBeforeClass()&lt;/code&gt; or &lt;code&gt;parent::tearDown()&lt;/code&gt; correctly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39327" title="#39327: defect (bug): Database connection errors in unit tests on 4.7 (closed: fixed)"&gt;#39327&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39626]: Tests: Restore the database connection earlier when switching test ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 04:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39626</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39626/1482296327373229</guid>
      <description>&lt;p&gt;
Tests: Restore the database connection earlier when switching test groups.
&lt;/p&gt;
&lt;p&gt;
When plugins don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; PHPUnit option in their own tests, &lt;code&gt;$wpdb&lt;/code&gt; is backed up and restored between classes of tests. The serialisation process used for this broke the database connection. This previously wasn't a problem, as it was reconnecting before each test.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; introduced some changes that required the connection to be available in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;, earlier than in was previously reconnecting. This didn't cause warnings in Core, but it did cause warnings for plugins that don't disable the &lt;code&gt;backupGlobals&lt;/code&gt; option.
&lt;/p&gt;
&lt;p&gt;
The database connection now reconnects in &lt;code&gt;setUpBeforeClass()&lt;/code&gt;. This change also fixes a few Core tests that weren't calling &lt;code&gt;parent::setUpBeforeClass()&lt;/code&gt; or &lt;code&gt;parent::tearDown()&lt;/code&gt; correctly.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39327" title="#39327: defect (bug): Database connection errors in unit tests on 4.7 (closed: fixed)"&gt;#39327&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39327 (Database connection errors in unit tests on 4.7) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39327#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39327#comment:3/1482290966656194</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed; this fix changes it, and that also explains why core doesn't run into it.
&lt;/p&gt;
&lt;p&gt;
Also confirming this is not a blame-gary situation, but it continues to make sense to assume that in the future.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39327 (Database connection errors in unit tests on 4.7) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:25:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39327#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39327#comment:2/1482290732447429</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In Core tests, &lt;code&gt;phpunit.xml.dist&lt;/code&gt; has &lt;code&gt;backupGlobals="false"&lt;/code&gt; defined, hence why we never see this in Core.
&lt;/p&gt;
&lt;p&gt;
For plugin tests that don't have this option set to &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;$wpdb&lt;/code&gt; was always being serialised/unserialised between tests, but &lt;code&gt;WP_UnitTestCase::setUp()&lt;/code&gt; took care of reconnecting. The changes to &lt;code&gt;WP_UnitTestCase::setUpBeforeClass()&lt;/code&gt; in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;[38398]&lt;/a&gt; introduced DB interactions before the database was reconnected, however, causing this warning to appear during plugin tests, but not Core tests.
&lt;/p&gt;
&lt;p&gt;
For an immediate plugin fix, the best option is to add &lt;code&gt;backupGlobals="false"&lt;/code&gt; to your &lt;code&gt;phpunit.xms.dist&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@rmccue: Could you also confirm that &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39327/39327.diff" title="Attachment '39327.diff' in Ticket #39327"&gt;39327.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39327/39327.diff" title="Download"&gt;​&lt;/a&gt; fixes the warning for you? If so, you'll need to remove the &lt;code&gt;blame-gary&lt;/code&gt; tag on this one. ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39327.diff attached to Ticket #39327</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39327/39327.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39327/39327.diff/1482290607948854</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:5/1482290553386625</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:4/1482290541755209</guid>
      <description>&lt;p&gt;
In 39307.patch: Collapse line breaks inside &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt;, and before and after &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This will effectively remove any &amp;lt;p&amp;gt; inside of &amp;lt;figure&amp;gt;, above or below &amp;lt;figcaption&amp;gt; (which are allowed but very rarely used). These weren't working properly before 4.7, so don't expect it to cause any regressions. The behavior is identical to &amp;lt;object&amp;gt; containing &amp;lt;embed&amp;gt; and/or &amp;lt;param&amp;gt; elements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39307.patch attached to Ticket #39307</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:17:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39307/39307.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39307/39307.patch/1482290277363033</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39317 (Trying to get property of non-object wp_terms_checklist) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:16:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39317#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39317#comment:1/1482290208127889</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jevuska - Can you share some additional details? What is the code you're using to filter &lt;code&gt;wp_terms_checklist_args&lt;/code&gt;? Are you modifying a default WP taxonomy, or a custom one? What is the full text of the "Trying to get property..." error (including line number and backtrace, if possible)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39336 (Document WP_Query orderby=relevance) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:11:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39336#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39336#comment:4/1482289891420570</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch, @dots.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$relevance&lt;/code&gt; should not have its own top-level &lt;code&gt;@param&lt;/code&gt; entry, as it's only a possible value for 'orderby'. Your patch also added an entry for &lt;code&gt;$type&lt;/code&gt;, but as far as I can see, this is not a valid orderby parameter for &lt;code&gt;WP_Query&lt;/code&gt;. Can you have a look at &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39336/39336.4.patch" title="Attachment '39336.4.patch' in Ticket #39336"&gt;39336.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39336/39336.4.patch" title="Download"&gt;​&lt;/a&gt; and see if it matches with your understanding?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39336.4.patch attached to Ticket #39336</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39336/39336.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39336/39336.4.patch/1482289859359943</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39354 (Unable to filter term query args using `pre_get_terms` action) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:01:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39354#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39354#comment:3/1482289292867982</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/39625" title="Taxonomy: Ensure that mods to query vars in `pre_term_query` callbacks ..."&gt;39625&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Ensure that mods to query vars in &lt;code&gt;pre_term_query&lt;/code&gt; callbacks have an effect.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, it was possible to modify the &lt;code&gt;query_vars&lt;/code&gt; array, but&lt;br /&gt;
the changes would be ignored after &lt;code&gt;pre_term_query&lt;/code&gt; had finished&lt;br /&gt;
running.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jfarthing84.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39354" title="#39354: defect (bug): Unable to filter term query args using `pre_get_terms` action (closed: fixed)"&gt;#39354&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [39625]: Taxonomy: Ensure that mods to query vars in `pre_term_query` callbacks ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Dec 2016 03:01:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/39625</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/39625/1482289292401958</guid>
      <description>&lt;p&gt;
Taxonomy: Ensure that mods to query vars in &lt;code&gt;pre_term_query&lt;/code&gt; callbacks have an effect.
&lt;/p&gt;
&lt;p&gt;
Previously, it was possible to modify the &lt;code&gt;query_vars&lt;/code&gt; array, but
the changes would be ignored after &lt;code&gt;pre_term_query&lt;/code&gt; had finished
running.
&lt;/p&gt;
&lt;p&gt;
Props jfarthing84.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39354" title="#39354: defect (bug): Unable to filter term query args using `pre_get_terms` action (closed: fixed)"&gt;#39354&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39354 (Unable to filter term query args using `pre_get_terms` action) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 21 Dec 2016 02:57:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39354#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39354#comment:2/1482289032702186</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good call. Thanks for the patch, @jfarthing84.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39327 (Database connection errors in unit tests on 4.7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 21 Dec 2016 02:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39327#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39327#comment:1/1482288608802695</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1482288605002778"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39331 (unsharpMaskImage in Imagick's thumbnail_image is not compatible with ...) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Wed, 21 Dec 2016 02:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39331#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39331#comment:1/1482288352133844</guid>
      <description>&lt;p&gt;
Looks like it's probably this &lt;a class="ext-link" href="https://github.com/ImageMagick/ImageMagick/issues/299"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;ImageMagick bug 299&lt;/a&gt; - after manually updating ImageMagick on Ubuntu 16.10 to 6.9.6-8 (the standard package is at 6.8.9-9) then &lt;code&gt;convert test_cmyk.jpg -unsharp 0.25x0.25+8+0.065 out.jpg&lt;/code&gt; works correctly, whereas before it didn't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 21 Dec 2016 02:15:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:3/1482286506314726</guid>
      <description>&lt;p&gt;
Yeah, think we need an exception here too.
&lt;/p&gt;
&lt;p&gt;
Perhaps can have another "group" of tags that should not be wrapped in &amp;lt;p&amp;gt; and require specific parent tags. Candidates for there would be &lt;code&gt;figcaption&lt;/code&gt;, &lt;code&gt;track&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;param&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39355 (Menu title doesn't get updated if I change the page title) created</title>
      
        <dc:creator>maaarsl</dc:creator>

      <pubDate>Wed, 21 Dec 2016 01:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39355</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39355/1482284283438644</guid>
      <description>&lt;p&gt;
It seems like WordPress converts the hyphen character to the dash character automatically. I created a new page with the following page title:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Foo - Bar&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
However, when I checked the menu title (Appearance &amp;gt; Menus), I found the title was displayed as:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Foo – Bar&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The page gets stored in the database with a customized menu title (page title with a hyphen and menu title with a dash) and that's why the menu title doesn't get updated if I change the page title.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38911 (Prevent Media Library search making an AJAX request for each char typed.) updated</title>
      
        <dc:creator>aidanlane</dc:creator>

      <pubDate>Wed, 21 Dec 2016 00:55:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38911#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38911#comment:9/1482281700096618</guid>
      <description>&lt;p&gt;
+1 for the patch! I was ready to file the same issue.
This issue really hurts us with our massive media library when typing long keywords.
&lt;/p&gt;
&lt;p&gt;
Question @adamsilverstein: what do you mean by 1000ms on media grid? This issue affects the media grid, right? (apologies for the lame question).
&lt;/p&gt;
&lt;p&gt;
Thanks all!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39354 (Unable to filter term query args using `pre_get_terms` action) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 21 Dec 2016 00:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39354#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39354#comment:1/1482280835138557</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39354.patch attached to Ticket #39354</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 21 Dec 2016 00:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39354/39354.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39354/39354.patch/1482280817609845</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39354 (Unable to filter term query args using `pre_get_terms` action) created</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Wed, 21 Dec 2016 00:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39354</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39354/1482280296463517</guid>
      <description>&lt;p&gt;
Thus making the action practically useless. But fear not, there is a simple remedy. In fact, the same remedy is used in &lt;code&gt;WP_Query::get_posts&lt;/code&gt;! Use a reference within &lt;code&gt;WP_Term_Query::get_terms&lt;/code&gt; to access the query vars locally:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$args = &amp;amp;$this-&amp;gt;query_vars;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39307 (&lt;/p&gt; tag inserted in &lt;figure&gt;) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 21 Dec 2016 00:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39307#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39307#comment:2/1482279977301365</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this needs to be fixed with an exception in &lt;code&gt;wpautop()&lt;/code&gt;, similar to object tags - the assumption is that flow elements inside of block elements (in this case, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; inside &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt;), need to be wrapped in a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, but that's not the normal use case for &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt;, which is usually just an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; (in either order).
&lt;/p&gt;
&lt;p&gt;
Things get a little weird with spacing inside of block elements (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38656" title="#38656: defect (bug): wpautop incorrectly handling paragraphs within block elements (new)"&gt;#38656&lt;/a&gt;), the tests for this should ensure that fun combinations of spacing and ordering don't make it go haywire.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39323 (Twenty Seventeen: wp_resource_hints when enqueue custom fonts in child ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 21 Dec 2016 00:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39323#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39323#comment:4/1482279094109578</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'll echo above thoughts, The child theme should make the call if it's removed the style that the resource hint was on in the parent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39335 (Twenty Seventeen: customize-controls.js incorrectly assumes ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 21 Dec 2016 00:09:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39335#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39335#comment:5/1482278986358261</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not 100% sure if this is the right procedure for bundled themes, but re-opening for committing into 4.7 branch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FTR, yes, Twenty Seventeen fixes will need merging to the 4.7 branch too. @davidakennedy I'm happy to take care of that in one of my merge-storms.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>