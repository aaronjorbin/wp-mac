<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 23:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:6/1520466609046713</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43494 (Can't change/delete menu items in Customizer on mobile) created</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Wed, 07 Mar 2018 23:30:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43494</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43494/1520465418724134</guid>
      <description>&lt;p&gt;
On mobile/tablet browser (only Android, Chrome browser tested), menu items can be added and reorganized, but the drop-down toggle for further options doesn't work. As a result menu items cannot be removed.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Log in to admin in mobile / tablet browser
&lt;/li&gt;&lt;li&gt;Go to Customizer -&amp;gt; Menus
&lt;/li&gt;&lt;li&gt;Add menu item to a menu
&lt;/li&gt;&lt;li&gt;Attempt to edit / delete menu item
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Originally reported by community user Sue Jenkins on Twitter: &lt;a class="ext-link" href="https://twitter.com/LuckychairNews/status/969682449176211456"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://twitter.com/LuckychairNews/status/969682449176211456&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 23:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:8/1520464180435094</guid>
      <description>&lt;p&gt;
@danieltj I can easily argue about 'personal data' in the way of: it's my server, my localhost/pc so yes PHP version is my personal data basically as it's on my personal computer, you have to inform me that you want it.
&lt;/p&gt;
&lt;p&gt;
As for the updates themselves, if these data are actually needed for the update to happen for some reason that is unclear to me at the moment, the idea of the Regulation and the whole Privacy is to inform me first so I can decide on my own to at least just cancel the update process if I like. If you tell me that I can already define that on my wp-config, we have to make it possible for the Dumb &amp;amp; Dubmer pretty much so wp-config is out of the question :D and it should be given by a simple on/off switch within the admin area.
&lt;/p&gt;
&lt;p&gt;
The point &amp;amp; difference here is that all of these are already happening with either hooks or plugins or anything else you can think of. Why not happen within Core itself to be 100% perfect and give the end user the functionality / reassurance needed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:5/1520463512879626</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43438#comment:4" title="Comment 4"&gt;jesperher&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead of returning arrays, would it be a safer approach, to use objects, like in WooCommerce and adding items to cart dynamicly ?
&lt;/p&gt;
&lt;p&gt;
like
$object-&amp;gt;add_callback('plugin_slug','callback');
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Instead of using a filter to register our callback, we could certainly use a global method, like core does today with things like register_post_type.
&lt;/p&gt;
&lt;p&gt;
I do appreciate what you proposed is not entirely dissimilar from the approach your GDPRWP project is using by having plugins call methods on an instance of GdprToolbox, but I don't think calling instance methods will be as familiar to your average plugin developer as using a filter or calling a global method.
&lt;/p&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:50:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:71/1520463047870450</guid>
      <description>&lt;p&gt;
I have to drop PHP 5.2 support in [Caldera Forms](&lt;a class="ext-link" href="https://wordpress.org/plugins/caldera-forms"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/caldera-forms&lt;/a&gt;) in order to remove a function that is deprecated in PHP 5.2 - &lt;a class="ext-link" href="https://github.com/CalderaWP/Caldera-Forms/issues/2335"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/CalderaWP/Caldera-Forms/issues/2335&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Right now I'm stuck between telling users who are on the right version of to downgrade because there are a few thousands or tens of thousands, I don't know, sites on PHP 5.2 that I could break. These are bad choices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:8/1520462563137271</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520462560000141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:7/1520461998856490</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not a GDPR expert here by any means, but the data sent in the request wouldn't class as personal information and as such, doesn't matter if it's sent to WordPress.org, does it? Either way, this is integral in ensuring that the site gets security updates (and other feature updates).
&lt;/p&gt;
&lt;p&gt;
This can be somewhat remedied by disabling updates for your site, in which case the request data doesn't need filtering because it's never sent? Or is it sent first but the update is blocked? I haven't checked how Core fully does updates from start to finish.
&lt;/p&gt;
&lt;p&gt;
The biggest problem I see with this is a big rewrite on how updates are performed because ideally you want to prevent an update site-side before the data is compiled and sent to WordPress.org's API to check the request data to see if the site is eligible for the update. This is a very tricky issue for sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38418 (Add telemetry (aka usage data collection) as opt-in feature in core) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38418#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38418#comment:24/1520461708132092</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520461704000587"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40677 (Widgets page is not accessible for keyboard users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40677#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40677#comment:14/1520461599786769</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42794" title="Accessibility: Widgets: Make the &amp;#34;Available Widgets&amp;#34; section operable ..."&gt;42794&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Widgets: Make the "Available Widgets" section operable with a keyboard.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a number of years, the "Available Widgets" section has been off-limits for&lt;br /&gt;
keyboard users. Now it can be used also with the keyboard. This change introduces&lt;br /&gt;
also some improvements for assistive technologies.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;makes the widget toggles focusable and adds an &lt;code&gt;aria-expanded&lt;/code&gt; attribute to indicate their state
&lt;/li&gt;&lt;li&gt;improves the toggles labelling to clarify context (add/edit)
&lt;/li&gt;&lt;li&gt;changes the controls to choose a sidebar from list items to buttons
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-label&lt;/code&gt; attribute to the buttons to clarify their purpose
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-pressed&lt;/code&gt; attribute to the buttons to indicate which one is selected
&lt;/li&gt;&lt;li&gt;improves color contrast of the selected button
&lt;/li&gt;&lt;li&gt;uses a &lt;code&gt;wp.a11y.speak()&lt;/code&gt; message to announce to screen reader users when a widget has been added to a sidebar
&lt;/li&gt;&lt;li&gt;moves focus back to the toggle button when closing a widget
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/40677" title="#40677: defect (bug): Widgets page is not accessible for keyboard users (assigned)"&gt;#40677&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42794]: Accessibility: Widgets: Make the "Available Widgets" section operable ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42794</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42794/1520461599254785</guid>
      <description>&lt;p&gt;
Accessibility: Widgets: Make the "Available Widgets" section operable with a keyboard.
&lt;/p&gt;
&lt;p&gt;
For a number of years, the "Available Widgets" section has been off-limits for
keyboard users. Now it can be used also with the keyboard. This change introduces
also some improvements for assistive technologies.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;makes the widget toggles focusable and adds an &lt;code&gt;aria-expanded&lt;/code&gt; attribute to indicate their state
&lt;/li&gt;&lt;li&gt;improves the toggles labelling to clarify context (add/edit)
&lt;/li&gt;&lt;li&gt;changes the controls to choose a sidebar from list items to buttons
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-label&lt;/code&gt; attribute to the buttons to clarify their purpose
&lt;/li&gt;&lt;li&gt;adds an &lt;code&gt;aria-pressed&lt;/code&gt; attribute to the buttons to indicate which one is selected
&lt;/li&gt;&lt;li&gt;improves color contrast of the selected button
&lt;/li&gt;&lt;li&gt;uses a &lt;code&gt;wp.a11y.speak()&lt;/code&gt; message to announce to screen reader users when a widget has been added to a sidebar
&lt;/li&gt;&lt;li&gt;moves focus back to the toggle button when closing a widget
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/40677" title="#40677: defect (bug): Widgets page is not accessible for keyboard users (assigned)"&gt;#40677&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:25:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:6/1520461530341121</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520461527000253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:7/1520461256426245</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by voldemortensen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520461253000520"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:4/1520460917258495</guid>
      <description>&lt;p&gt;
Added a reviewed UI proposal.
Added a requests tab with what I think the requests table should look like. Or something similar to that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43481.1.diff attached to Ticket #43481</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:14:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481.1.diff/1520460844210363</guid>
      <description>&lt;p&gt;
Revision of xkon initial pass and adding sample request tables
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40934 (Allow PHP version requirements for plugins &amp; themes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40934#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40934#comment:70/1520460734781122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #meta by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/meta/p1520460732000360"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43493 (with date format 'c', the_time() and get_the_time() print wrong time ...) created</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Wed, 07 Mar 2018 22:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43493</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43493/1520460634428848</guid>
      <description>&lt;p&gt;
With the date format &lt;code&gt;'c'&lt;/code&gt;, &lt;code&gt;the_time()&lt;/code&gt; and &lt;code&gt;get_the_time()&lt;/code&gt; print the wrong time zone offset. They print &lt;code&gt;+00:00&lt;/code&gt;, even though the time shown is in local time, not GMT/UTC.
&lt;/p&gt;
&lt;p&gt;
Example (inside the loop):
&lt;/p&gt;
&lt;pre class="wiki"&gt;var_dump( [
  get_option( 'gmt_offset' ),
  get_option( 'timezone_string' ),
  get_the_time( 'c' ),
  get_post_time( 'c', false ),
  get_post_time( 'c', true )
] );
&lt;/pre&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array (size=5)
  0 =&amp;gt; float -5
  1 =&amp;gt; string 'America/New_York' (length=16)
  2 =&amp;gt; string '2018-01-09T15:02:17+00:00' (length=25) // get_the_time( 'c' ); offset wrong
  3 =&amp;gt; string '2018-01-09T15:02:17+00:00' (length=25) // get_post_time( 'c', false ); offset wrong
  4 =&amp;gt; string '2018-01-09T20:02:17+00:00' (length=25) // correct
&lt;/pre&gt;&lt;p&gt;
Implementation
&lt;code&gt;the_time()&lt;/code&gt; calls &lt;code&gt;get_the_time()&lt;/code&gt;, which calls &lt;code&gt;get_post_time()&lt;/code&gt; with &lt;code&gt;$gmt&lt;/code&gt; set to&lt;code&gt;false&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43480" title="#43480: enhancement: Add $gmt parameter to the_time() function (closed: worksforme)"&gt;#43480&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>kevinwhoffman</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:5/1520459357057029</guid>
      <description>&lt;p&gt;
It would be helpful to clarify what, if any, information that is currently available in the Advanced View of a Plugin page would be affected by requiring an opt in.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/jetpack/advanced/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/jetpack/advanced/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Active installations
Active versions
Downloads per day
Active install growth
Downloads history
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43487 (WordPress admin list of pages section hangs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43487#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43487#comment:3/1520458690873642</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:27/1520458117931466</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@allendav Tested and re-tested here, it seems seamless and superb from what I saw.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:21:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:4/1520457678346419</guid>
      <description>&lt;p&gt;
This is closely related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38418" title="#38418: feature request: Add telemetry (aka usage data collection) as opt-in feature in core (closed: wontfix)"&gt;#38418&lt;/a&gt; which proposes a new robust and transparent opt-in system for telemetry. Lots of history around this ticket:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wptavern.com/wordpress-telemetry-proposal-addresses-long-standing-privacy-concerns-as-gdpr-compliance-deadline-looms"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wptavern.com/wordpress-telemetry-proposal-addresses-long-standing-privacy-concerns-as-gdpr-compliance-deadline-looms&lt;/a&gt;
&lt;a class="ext-link" href="https://mor10.com/the-case-for-wordpress-telemetry/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://mor10.com/the-case-for-wordpress-telemetry/&lt;/a&gt;
&lt;a class="ext-link" href="https://mor10.com/case-telemetry-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://mor10.com/case-telemetry-wordpress/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>mattrad</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:14:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:3/1520457289480453</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16778" title="#16778: enhancement: wordpress is leaking user/blog information during wp_version_check() (closed: fixed)"&gt;#16778&lt;/a&gt; for history and discussion around this issue.
&lt;/p&gt;
&lt;p&gt;
I'd be more than happy if I had to retire my Update Privacy plugin :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43435.4.diff attached to Ticket #43435</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 21:01:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.4.diff/1520456497152404</guid>
      <description>&lt;p&gt;
Localize, remove CSS, replace AJAX with action to create privacy policy page, don't timestamp page slug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:6/1520456308917846</guid>
      <description>&lt;p&gt;
I made a thing.
&lt;a class="ext-link" href="https://github.com/voldemortensen/WordPress-Update-Tests"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/voldemortensen/WordPress-Update-Tests&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Currently, it just runs through every version back to 3.7 and runs &lt;code&gt;wp core update &amp;lt;url to update zip&amp;gt;&lt;/code&gt;, but it would be easy to expand on this. Of course, run.pl will need to be converted to PHP, Perl is just my go to language.
&lt;/p&gt;
&lt;p&gt;
In run.pl, instead of running &lt;code&gt;wp core update &amp;lt;url&amp;gt;&lt;/code&gt;, we could run &lt;code&gt;wp eval '//update code'&lt;/code&gt; or any sort of custom thing really.
&lt;/p&gt;
&lt;p&gt;
The first run takes awhile as it has to build custom images, but once those are cached it moves pretty quickly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:2/1520456148177758</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40677 (Widgets page is not accessible for keyboard users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:54:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40677#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40677#comment:13/1520456093990960</guid>
      <description>&lt;p&gt;
I'm going to commit the first part related to the "Available Widgets" section because it's a good improvement. Screenshot of the visual changes (darker blue for the selected item, underline for the focused item):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/eEgnTEyoGV.png"&gt;&lt;img src="https://cldup.com/eEgnTEyoGV.png" alt="https://cldup.com/eEgnTEyoGV.png" crossorigin="anonymous" title="https://cldup.com/eEgnTEyoGV.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Still to do:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;headings for the available Sidebars
&lt;/li&gt;&lt;li&gt;Add a link "Deactivate" next to the "Delete" one
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:39:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492#comment:1/1520455194244023</guid>
      <description>&lt;p&gt;
Similar to this plugin perhaps, that was shared in the #gdpr-compliance channel on Slack:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://en-gb.wordpress.org/plugins/update-privacy/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en-gb.wordpress.org/plugins/update-privacy/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43492 (Core Telemetry and Updates) created</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:37:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43492</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43492/1520455073482612</guid>
      <description>&lt;p&gt;
It has been discussed on the #gdpr-compliance and the question had made it's cycle around some other rooms with various replies as well occasionally but it's time to take a final decision.
&lt;/p&gt;
&lt;p&gt;
When WordPress requests updates it sends more than enough data needed to actually perform the update.
&lt;/p&gt;
&lt;p&gt;
We did a search a bit at some point to take a glimpse of the past and how all those got added in there and why but couldn't find anything specific.
&lt;/p&gt;
&lt;p&gt;
There's already a way to modify the call through &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/core_version_check_query_args/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/hooks/core_version_check_query_args/&lt;/a&gt; (and may be more as well) but the concept here is to have everything off by default and add a proper UI and opt-in for the Admins to select what exactly they want to send.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:3/1520453337329534</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/43481_first_pass.patch" title="Attachment '43481_first_pass.patch' in Ticket #43481"&gt;43481_first_pass.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/43481_first_pass.patch" title="Download"&gt;​&lt;/a&gt; creates a UI like &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43481/privacy_rows.jpg" title="Attachment 'privacy_rows.jpg' in Ticket #43481"&gt;privacy_rows.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43481/privacy_rows.jpg" title="Download"&gt;​&lt;/a&gt; to be extended by @fclaussen as it was discussed on slack.
&lt;/p&gt;
&lt;p&gt;
Note: reminder that &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; has to be committed first and then we'll rework this to get it in as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) updated</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491#comment:1/1520453244551359</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43491 (Automatically create a Privacy Policy page when installing WordPress) created</title>
      
        <dc:creator>fclaussen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:06:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43491</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43491/1520453195939971</guid>
      <description>&lt;ol&gt;&lt;li&gt;Install WordPress
&lt;/li&gt;&lt;li&gt;Add a Privacy Policy page just like Sample Page. Possibly add a special page status like 'front-page' 'blog posts'
&lt;/li&gt;&lt;li&gt;Add a privacy policy selector to options-reading or customizer like front page and blog posts
&lt;/li&gt;&lt;li&gt;Under tools we have the actual tools for exporting user data, anonymization of data and so on.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
What I'm proposing is that this type of page is important. Specially now. So we need to pay proper attention to it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43481_first_pass.patch attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 20:04:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/43481_first_pass.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/43481_first_pass.patch/1520453073277784</guid>
      <description>&lt;p&gt;
first pass on the UI
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:26/1520451828839242</guid>
      <description>&lt;p&gt;
I'm good with everything you mention ( It was just my cranky early-morning way of doing things ).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:27/1520451659469592</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42793" title="Accessibility: Networks and Sites: mark the New Site required form ..."&gt;42793&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Networks and Sites: mark the New Site required form fields as required.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, adds an &lt;code&gt;aria-describedby&lt;/code&gt; attribute to associate the Admin Email field with its description.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dipesh.kakadiya, jackreichert, rianrietveld.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37331" title="#37331: defect (bug): New site form has non-required fields that have to be filled in (closed: fixed)"&gt;#37331&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42793]: Accessibility: Networks and Sites: mark the New Site required form ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:40:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42793</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42793/1520451658973373</guid>
      <description>&lt;p&gt;
Accessibility: Networks and Sites: mark the New Site required form fields as required.
&lt;/p&gt;
&lt;p&gt;
Also, adds an &lt;code&gt;aria-describedby&lt;/code&gt; attribute to associate the Admin Email field with its description.
&lt;/p&gt;
&lt;p&gt;
Props dipesh.kakadiya, jackreichert, rianrietveld.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37331" title="#37331: defect (bug): New site form has non-required fields that have to be filled in (closed: fixed)"&gt;#37331&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:26/1520451429889067</guid>
      <description>&lt;p&gt;
Note: the patch keeps &lt;code&gt;novalidate="novalidate"&lt;/code&gt; on the form, so the added &lt;code&gt;required&lt;/code&gt; attributes will &lt;em&gt;not&lt;/em&gt; trigger HTML5 browser validation. I'd tend to think using browser validation is a decision that should be made for all the forms in WordPress, and would probably need some discussion and consensus.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:35:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:25/1520451317568602</guid>
      <description>&lt;p&gt;
@xkon : If we don't specify the slug, wp_insert_post will work anyways and manage/version any slug - I recommend removing it
&lt;/p&gt;
&lt;p&gt;
A few other comments on the patch:
&lt;/p&gt;
&lt;p&gt;
1) Lets use &lt;code&gt;__( 'Privacy Policy' )&lt;/code&gt; for the post_title argument to wp_insert_post
&lt;/p&gt;
&lt;p&gt;
2) Do we really need the incremental complexity of AJAX for this part? How about just another form+button that posts a create-privacy-page action in a similar manner to how tools-privacy.php (in this patch) currently handles the set-privacy-page action? We can then have add_settings_error emit something like "Privacy policy page created successfully" similar to how the updated action does. If we get rid of the AJAX, the little bit of CSS can go too.
&lt;/p&gt;
&lt;p&gt;
AJAX will be needed later, certainly, for things like exporting or removing a user's personal data, but let's not bother with it for this, ok?
&lt;/p&gt;
&lt;p&gt;
3) Let's keep the view/edit link (if a page is selected) but it needs to be localized. Let's keep the jQuery in the file but just have it hide the view/edit link if the user changes the selected page in the dropdown (i.e. 1) to avoid confusion by having the link no longer link to the page displayed in the SELECT and 2) to avoid people not saving their changes
&lt;/p&gt;
&lt;p&gt;
Mind if I submit a 43435.4 with those changes?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:25/1520451143265266</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37331/37331.2.diff" title="Attachment '37331.2.diff' in Ticket #37331"&gt;37331.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37331/37331.2.diff" title="Download"&gt;​&lt;/a&gt; adds a translator comment and minor coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37331.2.diff attached to Ticket #37331</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:28:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37331/37331.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37331/37331.2.diff/1520450926106223</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:24/1520450538213529</guid>
      <description>&lt;p&gt;
@allendav
&lt;/p&gt;
&lt;p&gt;
I just added this so we can always have a unique page just in case. Might not be the best option but I don't know another way. They can always go later on and change the slug if they don't like it. We are only doing it for the 'ID' either way, it was an easy trick I thought to avoid conflicts in the case of an existing identical 'slug'. Some sites might already have pages named 'privacy-policy' 'privacy-policy-page' or whatever else we could've thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Wed, 07 Mar 2018 19:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:23/1520450289221964</guid>
      <description>&lt;p&gt;
@xkon wrote:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
A page is simply put in by our code with a slug of like 'privacy-policy-{$timestamp}' so it's always unique.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You had me up to &lt;code&gt;-{$timestamp}&lt;/code&gt; - why do that?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43489 (Strengthen resilience of wp_register_plugin_realpath to support Gutenberg) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Mar 2018 18:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43489#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43489#comment:1/1520447773284729</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43489 (Strengthen resilience of wp_register_plugin_realpath to support Gutenberg) created</title>
      
        <dc:creator>bobbingwide</dc:creator>

      <pubDate>Wed, 07 Mar 2018 18:25:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43489</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43489/1520447125852301</guid>
      <description>&lt;p&gt;
For many years now I've been working in a Windows development environment with multiple subdirectory installs referencing plugins using symlinks.
&lt;/p&gt;
&lt;p&gt;
Every now and then I get problems due to plugin files apparently not being present when they quite clearly are. I have not been able to track it down. I think it's a bug in PHP associated with OpCache.
&lt;/p&gt;
&lt;p&gt;
Anyway, the bottom line is that sometimes this problem, or something similar, results in the &lt;code&gt;$wp_plugin_paths&lt;/code&gt; array containing entries with a null value for &lt;code&gt;$realdir&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This can lead to the following:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Warning: strpos(): Empty needle in C:\apache\htdocs\hm\wp-includes\plugin.php on line 658.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This message has the uncanny knack of happening at the most inappropriate times.
&lt;/p&gt;
&lt;p&gt;
Now, with Gutenberg looming, the problem is further reducing my ability to create content locally; Gutenberg can't handle the unexpected Warnings and Notices from a development server and fails. See &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/5439"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/5439&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
To reduce the likelihood of the problem I'd like to propose a change to &lt;code&gt;wp_register_plugin_path()&lt;/code&gt; to cater for a false value being returned from the &lt;code&gt;realpath()&lt;/code&gt; PHP function.
&lt;/p&gt;
&lt;p&gt;
The proposal being that if &lt;code&gt;$plugin_realpath&lt;/code&gt; does appear to be null, then don't add an entry in &lt;code&gt;$wp_plugin_paths&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This change will prevent the warning message being issued from plugin_basename()'s test
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( strpos( $file, $realdir ) === 0 ) {
&lt;/pre&gt;&lt;p&gt;
and therefore increases the robustness of the system.
&lt;/p&gt;
&lt;p&gt;
Bottom line.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;realpath()&lt;/code&gt; may return false.
&lt;/li&gt;&lt;li&gt;This should be catered for.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:17/1520444864916065</guid>
      <description>&lt;p&gt;
From what I gather this means PUTing to &lt;code&gt;/wp/v2/posts&lt;/code&gt; with &lt;code&gt;{ is_autosave: true }&lt;/code&gt; will not necessarily update the item but could instead actually create a new autosave revision for the user. I think this is a very bad idea, because a PUT update to an object should update the object. Breaking that fundamental assumption is creating inconsistent design. If doing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var post = new wp.api.models.Post();
post.set( 'title', 'autosave test' );
post.save();
post.set( 'status', 'publish' );
post.save();
post.set( 'title', 'updated autosave test' );
post.save( { is_autosave: true } );
&lt;/pre&gt;&lt;p&gt;
actually creates a new post in the DB, and that can be fetched via &lt;code&gt;/revisions&lt;/code&gt; then it doesn't make sense (IMO). We should be creating a new revision (with an autosave flag if needed) at &lt;code&gt;/revisions&lt;/code&gt;. The Core behaviour is kinda weird (updates unpublished posts, but creates auto saves for published) which I think would be best left to client implementation to handle, rather than baking this into the endpoint. It breaks assumptions around PUT to &lt;code&gt;object&lt;/code&gt; causes an update, POST to &lt;code&gt;/posts&lt;/code&gt; creates an object, etc.
&lt;/p&gt;
&lt;p&gt;
I think the idea of using &lt;code&gt;autosave&lt;/code&gt; for the post_type might be been discarded, but if not I'd say similar things about that. No need to use an existing field, I think it's likely to just increase complexity rather than a dedicates field on &lt;code&gt;/revisions&lt;/code&gt; for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:2/1520444350283203</guid>
      <description>&lt;p&gt;
@idea15 's article &lt;a class="ext-link" href="https://www.connected-uk.com/gdpr-for-business-owners-senior-executives/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.connected-uk.com/gdpr-for-business-owners-senior-executives/&lt;/a&gt; makes me understand that users DON'T universally have the right to erasure, so site administrator approval should be given before erasing their data.
&lt;/p&gt;
&lt;p&gt;
Specifically, she said
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The RTBF (Right-to-be-forgotten) is not a get-out-of-jail card, nor is it means of censoring difficult or embarrassing information. The RTBF can only be invoked if: The personal data is no longer necessary;...there is no legitimate processing need which overrides their request...
Even then, the right to erasure is not automatic. A company may continue to hold and processing data about an individual if they still have a legal basis for doing so and can continue processing that data for its original purpose. (In other words, you can’t RTBF your credit card bill.)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:32:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:16/1520443950811437</guid>
      <description>&lt;p&gt;
After talking through this with @joehoyle, my main question is around how this behaves in situations where you are saving an autosave of a post type which does not support revisions? I suspect he has additional feedback to share soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43488 (Debug backtrace doesn’t capture hook name for do_action_ref_array) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43488#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43488#comment:1/1520442409539804</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Added_do_action_ref_array_to_hook_functions_in_trace_capture_.patch attached to Ticket #43488</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:06:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43488/Added_do_action_ref_array_to_hook_functions_in_trace_capture_.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43488/Added_do_action_ref_array_to_hook_functions_in_trace_capture_.patch/1520442384000391</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43488 (Debug backtrace doesn’t capture hook name for do_action_ref_array) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Wed, 07 Mar 2018 17:05:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43488</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43488/1520442359777556</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_debug_backtrace_summary()&lt;/code&gt; is currently hardcoded to treat &lt;code&gt;do_action()&lt;/code&gt; and &lt;code&gt;apply_filters()&lt;/code&gt; as special output case with invoked hook name appended.
&lt;/p&gt;
&lt;p&gt;
It misses to do the same for &lt;code&gt;do_action_ref_array()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42860 (PHP 7.2 warning - Parameter must be an array or an object that ...) updated</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42860#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42860#comment:25/1520441648374310</guid>
      <description>&lt;p&gt;
Is this really fixed? I'm still getting this warning in sites under WP 4.9.4 and PHP 7.2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43432 (Streamline tests with installation skips) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:49:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43432#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43432#comment:4/1520441357461270</guid>
      <description>&lt;p&gt;
I love the idea of speeding up the process. I didn't notice any difference after applying the patch and using &lt;code&gt;WP_TESTS_SKIP_INSTALL=1&lt;/code&gt;, though.
&lt;/p&gt;
&lt;p&gt;
I'll try to find some time to dig into it and see if I'm doing something wrong, or if there are some other conditions needed for it to work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #42713,​43485 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42713%2C43485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42713%2C43485/1520441274166650</guid>
      <description>duplicate: &lt;p&gt;
Hi @jinyu121, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42713" title="#42713: defect (bug): Users list does not display name if Last Name empty (closed: fixed)"&gt;#42713&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:47:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:14/1520441253055897</guid>
      <description>&lt;p&gt;
@wpmarkuk Correct: unticked by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>wpmarkuk</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:45:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:13/1520441154389721</guid>
      <description>&lt;p&gt;
Is the plan that this would be checked by default? I ask only because I am pretty sure that with GPDR consent works the other way and you have to actively consent by clicking checking the checkbox?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42282 (Provide means of executing PHPUnit continuously over watched files in ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42282#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42282#comment:19/1520441119252347</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42282#comment:18" title="Comment 18"&gt;soulseekah&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do you think we should pass on a &lt;code&gt;--filter&lt;/code&gt; as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like that idea, or maybe we could even support arbitrary PHPUnit args instead of a whitelist? I haven't checked if that would have some potential conflicts with Grunt arguments, though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43486 (The Problem with HTML and wpautop) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:29:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43486#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43486#comment:1/1520440161197699</guid>
      <description>&lt;p&gt;
Hi @jim5471, welcome to WordPress Trac! Thanks for the ticket.
&lt;/p&gt;
&lt;p&gt;
There are plugins like &lt;a class="ext-link" href="https://wordpress.org/plugins/raw-html/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Raw HTML&lt;/a&gt; that might be helpful.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43448 (Document $wp_registered_sidebars global in wp_map_sidebars_widgets()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:27:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43448#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43448#comment:3/1520440035410076</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>jesperher</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:4/1520439771325912</guid>
      <description>&lt;p&gt;
Instead of returning arrays, would it be a safer approach, to use objects, like in WooCommerce and adding items to cart dynamicly ?
&lt;/p&gt;
&lt;p&gt;
like
$object-&amp;gt;add_callback('plugin_slug','callback');
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43056 (Notice in redirect_guess_404_permalink() when post type is an array) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43056#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43056#comment:3/1520438879828166</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42942 (Provide a post_date_column_time hook for media files) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 07 Mar 2018 16:07:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42942#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42942#comment:3/1520438832120289</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:4/1520438207583230</guid>
      <description>&lt;p&gt;
Thanks for the feedback feedback so far!
&lt;/p&gt;
&lt;p&gt;
For this PoC, I looked at the wordpress.com notification center, Facebook, Google, Meistertask, Instagram and in general my mental modal of expectations for a notification center. Speaking for myself, I generally prefer simplicity, so the filtering and second expanding sidebar on .com are a bit much, and I appreciate being able to clear the badge asap on facebook, which is why I added the Mark As Read. But hopefully for WP the notifications will be a lot more useful and relevant, so I can see that we move that somewhere else, or just remove it for MVP and make it depend on whether you take action on a notification or maybe look at it for 3-5 seconds. A settings icon would be useful too I'm sure, left it out in the PoC as I didn't have any settings in mind yet.
&lt;/p&gt;
&lt;p&gt;
I'll make a more detailed breakdown of pros and cons of other notification centers, so we can have informed discussions about the separate features.
&lt;/p&gt;
&lt;p&gt;
It may indeed be a good call to start off giving just WP itself access to this. This gives plugin authors time to think about how they can integrate without having to scramble right away because their admin notices now look crappy when frankensteined into that sidebar. That's what I mean with backwards compatibility: introducing the notification center once it has been fully thought out also requires an exit strategy for admin notices, since those can be huge and filled with custom styling and whatnot, which wouldn't translate 1-to-1 to the new notification properties per se.
&lt;/p&gt;
&lt;p&gt;
Regarding the more technical side of notifications, Riad said (in relation to his PoC plugin):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As a V1, I built as a client-side API trying to provide a compatibility layer with existing notices. So client-side code could trigger notifications but without any persistence. I think we should make this step work well to catch all the plugins notifications etc. I was thinking of checking the way these notifications are generated right now in PHP and if there’s APIs and common ways to do it, and try to provide some kind of backwards compatibility with this plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once this work well, I think we can start thinking about a backend API and a persistence layer. Something like “keep the last 100 notifications persisted”, “Provide a way to trigger notification from the backend”,  “Client-side code could also create and persist notifications” (REST API?). =&amp;gt; this could be the V2.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I know Alain Schlesser and John Billion have ideas about this too. I'd say we first focus on the higher level concepts and architecture here, maybe defer some experimentation and prototyping to the plugin's repository.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #9864,​43487 batch updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=9864%2C43487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=9864%2C43487/1520436502922930</guid>
      <description>duplicate: &lt;p&gt;
Welcome to WordPress core trac.
&lt;/p&gt;
&lt;p&gt;
This seems to have been reported here &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/9864" title="#9864: defect (bug): Performance issues with large number of pages (assigned)"&gt;#9864&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
So I'm closing this one for now. You're welcome to join that ticket or reopen this one, if this is a different issue.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:3/1520436424879487</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've wanted something like this for ages to unify the notifications within WordPress and to once and for all do away with admin notices if it's possible at all. Something like the WordPress.com notifications centre would be good as it condenses everything down into one side panel and is easy to see.
&lt;/p&gt;
&lt;p&gt;
I can see the following setup for notifications in an API sense:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A notification ID (completely unique)
&lt;/li&gt;&lt;li&gt;Sender (either via Core, Plugin, Theme or User)
&lt;/li&gt;&lt;li&gt;Sent (YYYY-MM-DD HH-MM-SS)
&lt;/li&gt;&lt;li&gt;To (Array of User IDs)
&lt;/li&gt;&lt;li&gt;Read Status (read/unread)
&lt;/li&gt;&lt;li&gt;Message
&lt;/li&gt;&lt;li&gt;Expiries (a timestamp but if blank, until read)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A key concept here that I really like is a group notification function where a collection of users can receive the same notification such as a new comment or user signup etc.
&lt;/p&gt;
&lt;p&gt;
I think for backwards compatibility, an option to merge admin notices into the notifications section but split into notifications and notices so you still keep the list of notices as is, but split them out to remain less cluttered.
&lt;/p&gt;
&lt;p&gt;
A feature plugin is 100% the best way for this and I think I might be getting carried away with it, but this idea seems to be something that most people want. But as @karmatosed has rightly said, lets make sure that this is simple and too the point with the ability to extend functionality through hooks and plugins.
&lt;/p&gt;
&lt;p&gt;
From what I've seen on other sites, notifications are fairly linear and not usually complex in nature like categorises and priority. I think an approach like that is the best way because we have this problem with admin notices at the moment where you can end up in some instances having 5 that don't dismiss.
&lt;/p&gt;
&lt;p&gt;
Also changing to Users component as this is technically a user facing thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:22:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:2/1520436136030605</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Cool feature and I am a huge fan of notification systems when useful but not shouty. This seems to be on the useful side :) Thanks for taking the time to work out a mock for this. The current state of messages across most areas of the interface is not optimal and this provides an opportunity to restructure that. I do note, with this we should maybe lock down areas, making this the place to use and encouraging better practices.
&lt;/p&gt;
&lt;p&gt;
What notification systems did you look at when considering the design? What can we learn from what others are doing inside/outside the WordPress space?
&lt;/p&gt;
&lt;p&gt;
There feels like a few things that are super useful to those managing a lot of things missing we could consider:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Filtering the notifications by that day, week and so on
&lt;/li&gt;&lt;li&gt;A link to adjust settings in header
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I wander how useful 'mark all as read' is. My concern is that's quite prominent placing for it. This could easily have a mistaken click and boom all go, not great user experience.
&lt;/p&gt;
&lt;p&gt;
I would also look to the notifications themselves. For example what is the visual hierarchy there:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Do we need to have bold and what are bold?
&lt;/li&gt;&lt;li&gt;Do we need time and is that too small or right placing?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
From a plugin perspective how do they add notifications? I assume this is code?
&lt;/p&gt;
&lt;p&gt;
To answer your direct questions:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we agree on a set of notification properties that provide a consistent experience and that plugin authors can be happy with?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We need to really distill down and build up. Maybe we firstly do not have open to plugins. Get it in and have it just for system, then add for plugins. I would advise this route.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Which notification categories can we define, and should it only ever be possible to assign a category, or are plugin authors allowed to supply icons for their own notifications too?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we need to limit this.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How best to approach the backwards compatibility so we don’t break (all) existing admin notices? Can some type of conversion be made?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What would break? Could we eventually just move all to this?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it enough to only show the notifications in the sidebar, or should there be a separate notifications page, maybe with filtering? (Probably not for MVP at least)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think we need to test this, it's an assumption I'm not comfortable making. We need a settings page for this and need to link wherever the notifications show.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43487 (WordPress admin list of pages section hangs) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:19:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43487#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43487#comment:1/1520435945102695</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43144 (Add a language icon next to language selectors) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:10:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43144#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43144#comment:6/1520435412240799</guid>
      <description>&lt;p&gt;
Adding this icon looks like a good visual aid.
&lt;/p&gt;
&lt;p&gt;
With the &lt;code&gt;aria-hidden="true"&lt;/code&gt; added to the span tag, I'm wondering about this approach:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label for="WPLANG"&amp;gt;&amp;lt;?php _e( 'Site Language' ); ?&amp;gt; &amp;lt;span aria-hidden="true" class="dashicons dashicons-translation"&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/label&amp;gt;
&lt;/pre&gt;&lt;p&gt;
where we add a space between the &lt;em&gt;Site Language&lt;/em&gt; text and the span tag, similar to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40643" title="Accessibility: Add &amp;#34;(opens in a new window)&amp;#34; screen reader text to the ..."&gt;[40643]&lt;/a&gt;.
If we don't want the space, then it could be added via CSS as in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43144/43144.patch" title="Attachment '43144.patch' in Ticket #43144"&gt;43144.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43144/43144.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:24/1520435391409958</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43487 (WordPress admin list of pages section hangs) created</title>
      
        <dc:creator>heroic</dc:creator>

      <pubDate>Wed, 07 Mar 2018 15:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43487</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43487/1520435207094980</guid>
      <description>&lt;p&gt;
We recently imported 0.2 millions pages into our wordpress site, and the admin section for pages became unusable. I retraced the issue to the fact that wordpress happily makes queries at certain places which are not "limit"ed.
&lt;/p&gt;
&lt;p&gt;
Here's one example in wp-admin/includes/post.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;        if ( is_post_type_hierarchical( $post_type ) &amp;amp;&amp;amp; !isset($orderby) ) {
                $query['orderby'] = 'menu_order title';
                $query['order'] = 'asc';
                $query['posts_per_page'] = -1;
                $query['posts_per_archive_page'] = -1;
                $query['fields'] = 'id=&amp;gt;parent';
        }
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:2/1520434780909126</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thoughts in general and 'what went wrong':
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Accordiong (gif preview)&lt;/strong&gt;: this was the first thinking of how we should go with this that seemd playful, a good workflow and by adding the accordion it meant 1 extra click for the 'deletion' tool that might have saved some trouble to well not-so-bright users.
&lt;/p&gt;
&lt;p&gt;
After some chats though this was leading in a way that we had to put in extra time to make it a11y ready etc and I don't think it's worth the time for now that we're trying to get as much as possible done. In a future update we can always come back and re-design everything or add whatever we like, we're trying to 'save' time now though so we can deal with other tickets and have time for Docs etc etc.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Rows&lt;/strong&gt;: this is a plain UI but as you can see the Informational big box is nowhere to be found. That box is supposed to have some basic information of what this new screen is helpful links and other stuff that users HAVE to get aquainted with to understand the whole Privacy/GDPR implementation. So personally I don't like it.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Boxes&lt;/strong&gt;: this is by far the simplest way to go, a11y ready, everything visible on 'common' screens all content &amp;amp; tools is accesible straight away and in general it follows with the idea of the Admin either way. -I'm personally voting this at the moment.-
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Page-Tabs&lt;/strong&gt;: these are either staying as tabs or we are going to pull everything in 1 page. The 2nd tab is supposed to host ( as you can see in the 1st gif ) all of the information that is incoming from the plugins + core that concern Privacy. Think that at some sites this information might be a loooong list, that's why the thinking of having it on an extra tab.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Notes&lt;/strong&gt;: There are patches already for all versions but I'm waiting for the final desision as they will be put over &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; so we can make a starting-clean commit and continue from there as with that ticket 2-3 will close together as well.
&lt;/p&gt;
&lt;p&gt;
The contnet that you see now is subject to change, according to what is decided as final Tools and what we are actually going to show as information etc. But that doesn't matter as they are easy changes, so pay no attention to the content, just the general idea of how the page should / would look.
&lt;/p&gt;
&lt;p&gt;
--
&lt;/p&gt;
&lt;p&gt;
Waiting for further input either here or in #gdpr-compliance so I can refine and polish the UI and make it responsive as well before I implement it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5430 (Change is_page() to accept array as argument) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:11:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5430#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5430#comment:6/1520431893565832</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by alexander-botteram. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1520431865000041"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>privacy-boxes.jpg attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:08:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/privacy-boxes.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/privacy-boxes.jpg/1520431689368393</guid>
      <description>&lt;p&gt;
privacy-boxes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>privacy_rows.jpg attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 14:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/privacy_rows.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/privacy_rows.jpg/1520431631715291</guid>
      <description>&lt;p&gt;
privacy-rows
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37331 (New site form has non-required fields that have to be filled in) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Wed, 07 Mar 2018 13:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37331#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37331#comment:23/1520430711965221</guid>
      <description>&lt;p&gt;
37331-3.diff​
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;adds the message Required fields are marked * just above the form
&lt;/li&gt;&lt;li&gt;adds the attribute required="required" to the input field. I did not add the aria-required attribute, as this is already handled and announced by adding the HTML5 required attribute.
&lt;/li&gt;&lt;li&gt;adds a aria-describedby="site-admin-email" to announce the message below the admin email with the input field.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37331-3.diff attached to Ticket #37331</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Wed, 07 Mar 2018 13:45:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37331/37331-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37331/37331-3.diff/1520430345040641</guid>
      <description>&lt;p&gt;
adds required asterisk and required attribute
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43486 (The Problem with HTML and wpautop) created</title>
      
        <dc:creator>jim5471</dc:creator>

      <pubDate>Wed, 07 Mar 2018 13:24:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43486</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43486/1520429065184638</guid>
      <description>&lt;p&gt;
Most editors use the VISUAL mode in The TinyMCE editor but there are a minority of editors who use the TEXT mode.
&lt;/p&gt;
&lt;p&gt;
The TEXT mode allows editors to input raw HTML code.
&lt;/p&gt;
&lt;p&gt;
If they program in HTML4 then wpautop reformats the code and sometimes introduces paragraph errors.
&lt;/p&gt;
&lt;p&gt;
HTML5 is a greater problem and should be avoided.
&lt;/p&gt;
&lt;p&gt;
wpautop can be turned off but this is not a realistic solution in a multi-user situation.
&lt;/p&gt;
&lt;p&gt;
I would like to propose this easy modification as a possible solution.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Editors who want to turn off wpautop should insert "[WPAUTOP-OFF]" at the top of their script.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;wp-includes/formatting.php should be changed with this additional code
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;LINE  439   function wpautop( $pee, $br = true ) {
	/*
	 * If "[WPAUTOP-OFF]" is present in $pee then
	 * return $pee with "[WPAUTOP-OFF]" removed and no other changes
	 */
	if ( false !== strpos( $pee, "[WPAUTOP-OFF]" ) ) {
		$pee = str_replace("[WPAUTOP-OFF]", "", $pee);
		return $pee; }
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:53:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:44/1520427212228145</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20746#comment:43" title="Comment 43"&gt;dchenko&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But this does not simply remove the question mark—you're removing the capturing parentheses and changing the $2 to a $1, which makes the string "+/" required as part of the URL in front of wp-* even though it was optional before.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The leading path being optional is the problem the patch is fixing. Apache loops through the rewrite rules until there are no more matches. If the leading path is optional then when the rule matches on the first pass &amp;amp; the leading path is removed, the rule continues to match on subsequent rewrite passes resulting in a rewrite loop.
&lt;/p&gt;
&lt;p&gt;
@jeremyfelt My patch restores the rules to what was merged from WordPress MU about 8 years ago.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43448 (Document $wp_registered_sidebars global in wp_map_sidebars_widgets()) updated</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43448#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43448#comment:2/1520426929647441</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:45:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484#comment:1/1520426740931782</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #buddypress by espellcaste. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/buddypress/p1520426739000073"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43448 (Document $wp_registered_sidebars global in wp_map_sidebars_widgets()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43448#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43448#comment:1/1520426269468320</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mukeshpanchal27. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520426267000076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43485 (Name is blank in Network-AllUsers) created</title>
      
        <dc:creator>jinyu121</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43485</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43485/1520425449588950</guid>
      <description>&lt;p&gt;
I use &lt;strong&gt;Multi site&lt;/strong&gt; in my wordpress. In Network-All Users, &lt;code&gt;name&lt;/code&gt; is blank even if we set the right user_nicename and display_name in &lt;code&gt;wp_users&lt;/code&gt; table.
&lt;/p&gt;
&lt;p&gt;
For example, My &lt;code&gt;wp_users&lt;/code&gt; table is like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://d.pr/lELM7P+"&gt;&lt;img src="https://d.pr/lELM7P+" alt="https://d.pr/lELM7P+" crossorigin="anonymous" title="https://d.pr/lELM7P+" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But when i switch to Network - All User, It shows like this
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://d.pr/wNrEVx+"&gt;&lt;img src="https://d.pr/wNrEVx+" alt="https://d.pr/wNrEVx+" crossorigin="anonymous" title="https://d.pr/wNrEVx+" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notice, the second column just shows &lt;code&gt;----&lt;/code&gt;, and I do not masaiked this column.
&lt;/p&gt;
&lt;p&gt;
The second column should show the display_name -&amp;gt; user_nicename -&amp;gt; user_login
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 12:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:3/1520425408099514</guid>
      <description>&lt;p&gt;
thanks for clarifying that ;-)
&lt;/p&gt;
&lt;p&gt;
Wonder if there's a reason it was kept in there?
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;@import url(forms.css);&lt;/code&gt; and the &lt;code&gt;$styles-&amp;gt;add( 'login', ... &lt;/code&gt; was added in changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27199" title="Make login styles standalone. see #12506.
"&gt;[27199]&lt;/a&gt; for ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12506" title="#12506: task (blessed): Standalone login styles (closed: fixed)"&gt;#12506&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;@import url(l10n.css);&lt;/code&gt; was added in changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/28096" title="RTL for login screen.
props yoavf.
fixes #27784.
"&gt;[28096]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Tickets &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26669" title="#26669: enhancement: wp-admin.css should be broken up into modules (closed: fixed)"&gt;#26669&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35229" title="#35229: enhancement: Stop generating `wp-admin.min.css` (closed: fixed)"&gt;#35229&lt;/a&gt; might also be of interest to understand the setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:7/1520423920264882</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:6" title="Comment 6"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
This is just the "first run" patch committed for easier testing/enhancements. Fixes welcome! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43484 (WordPress Notification Center proposal) created</title>
      
        <dc:creator>hedgefield</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:48:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43484</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43484/1520423290008882</guid>
      <description>&lt;p&gt;
For a long time people have been suggesting / daydreaming / &lt;a class="ext-link" href="https://twitter.com/Ipstenu/status/966411791134699520"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wishing for&lt;/a&gt; a unified notification center in WordPress. People expect it, the notification center has become a staple of almost all apps/sites that have a lot to keep track of - and WordPress definitely fits in that lineup. So there’s no reason not to add one to WordPress core too.
&lt;/p&gt;
&lt;p&gt;
This ticket aims to explore the details of such an implementation. I think clear limitations, a good backwards compatibility strategy and a strong UX are key to make this work for everyone.
&lt;/p&gt;
&lt;p&gt;
Key features:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;One location for all notifications.
&lt;/li&gt;&lt;li&gt;Easy to hook into, should work out of the box.
&lt;/li&gt;&lt;li&gt;Flexible enough to be useful, limited enough to not get a circus.
&lt;/li&gt;&lt;li&gt;Accessible from anywhere.
&lt;/li&gt;&lt;li&gt;Accessible in the a11y sense.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here’s my first basic idea for notification properties, feel free to chime in:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A text field, limited to 280 characters, the length of a tweet. Probably wouldn’t want one notification to get so long that it fills up the whole visible sidebar. Links can be added to the text to trigger actions or visit pages, same as now basically.
&lt;/li&gt;&lt;li&gt;A timestamp.
&lt;/li&gt;&lt;li&gt;An icon. Could be the plugin icon, author avatar, or something like a category/message type, like info, warning, question, error, update, stuff like that, to visually distinguish notifications quickly.
&lt;/li&gt;&lt;li&gt;A status, meaning read or unread basically.
&lt;/li&gt;&lt;li&gt;Persist/show as toast. A suggestion by Joen Asmussen. Shows the notification outside the notification center for a set amount of time in a floating div. Similar to what Android/MacOS/Windows does when a notification comes in. Maybe only WordPress itself can throw notices like that. Probably not for MVP anyway.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I created a quick interactive proof-of-concept in Sketch that you can view here.
&lt;/p&gt;
&lt;p&gt;
Desktop: &lt;a class="ext-link" href="https://sketch.cloud/s/AZz0M/all/notification-center/desktop/play"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sketch.cloud/s/AZz0M/all/notification-center/desktop/play&lt;/a&gt;
Mobile: &lt;a class="ext-link" href="https://sketch.cloud/s/AZz0M/all/notification-center/iphone-8-plus/play"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://sketch.cloud/s/AZz0M/all/notification-center/iphone-8-plus/play&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Riad Benguella got excited by this idea and built a basic plugin to test it in your own WordPress install. &lt;a class="ext-link" href="https://github.com/youknowriad/newtify"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/youknowriad/newtify&lt;/a&gt;, and also a previous exploration at &lt;a class="ext-link" href="https://wordpress.org/plugins/wp-notification-center/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-notification-center/&lt;/a&gt;. Developing this as a plugin is a great way to explore the best implementation, and any help is more than welcome.
&lt;/p&gt;
&lt;p&gt;
Some discussion points to get this started:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Can we agree on a set of notification properties that provide a consistent experience and that plugin authors can be happy with?
&lt;/li&gt;&lt;li&gt;Which notification categories can we define, and should it only ever be possible to assign a category, or are plugin authors allowed to supply icons for their own notifications too?
&lt;/li&gt;&lt;li&gt;How best to approach the backwards compatibility so we don’t break (all) existing admin notices? Can some type of conversion be made?
&lt;/li&gt;&lt;li&gt;Is it enough to only show the notifications in the sidebar, or should there be a separate notifications page, maybe with filtering? (Probably not for MVP at least)
&lt;/li&gt;&lt;li&gt;Are there any essential features missing from the list?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:6/1520422556717454</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43443#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42791" title="Add a method to confirm user requests by email. First run.
Props ..."&gt;42791&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add a method to confirm user requests by email. First run.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;#43443&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;hash()&lt;/code&gt; may not be available, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29518" title="#29518: defect (bug): Fatal error in WP_Session_Tokens::hash_token() (closed: fixed)"&gt;#29518&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;@return WP_ERROR|bool&lt;/code&gt; should be &lt;code&gt;@return WP_Error|bool&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;There should be no empty line between &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@return&lt;/code&gt; tags.
&lt;/li&gt;&lt;li&gt;All the &lt;code&gt;WP_Error&lt;/code&gt; messages should end with a full stop.
&lt;/li&gt;&lt;li&gt;In &lt;code&gt;check_confirm_account_action_key&lt;/code&gt; the function should bail directly if one of the parameters is empty. So move that &lt;code&gt;return new WP_Error( 'invalid_key', __( 'Invalid key' ) );&lt;/code&gt; line up to avoid one huge if condition.
&lt;/li&gt;&lt;li&gt;All the new actions have no &lt;code&gt;@since&lt;/code&gt; tag.
&lt;/li&gt;&lt;li&gt;Why are none of the functions prefixed with &lt;code&gt;wp_&lt;/code&gt;?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:28:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:9/1520422113753223</guid>
      <description>&lt;p&gt;
Yeah, I just noticed that in my project I have phpunit 6.4 but I also had globally installed phpunit 7. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 11:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:5/1520421151727646</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Log confirmed requests and perhaps show them on the dashboard
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Was thinking about this a bit more: instead of deleting the confirmation token from the DB perhaps we can set a "confirmed" status on it and keep it until the action is performed?
&lt;/p&gt;
&lt;p&gt;
Also, may be better to have a permanent log. Perhaps we can make a new private CPT (without editor, terms, revisions, etc. support) that will hold the log. Then can use postmeta to store the tokens on it. After the action is performed can add a row with the date and type of action but not the user email so it is anonymous.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 10:49:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:22/1520419790952817</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43435#comment:21" title="Comment 21"&gt;danieltj&lt;/a&gt;:
Welcome aboard!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are we currently focusing on just creating the privacy page for now then?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, focusing on all tickets, as much as possible :)
&lt;a href="https://core.trac.wordpress.org/query?status=!closed&amp;amp;keywords=~gdpr"&gt;https://core.trac.wordpress.org/query?status=!closed&amp;amp;keywords=~gdpr&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 10:42:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:21/1520419326723441</guid>
      <description>&lt;p&gt;
@azaozz &amp;amp; @xkon
&lt;/p&gt;
&lt;p&gt;
That makes sense to me now; I was curious as to why one option was in a newly created page but if more privacy options and settings are coming then that seems appropriate for a new page.
&lt;/p&gt;
&lt;p&gt;
To follow on from what @azaozz said about comments, I was thinking about creating a plugin to 'forget' users who leave comments to remove the personal information. I'll direct my efforts here in that case.
&lt;/p&gt;
&lt;p&gt;
Are we currently focusing on just creating the privacy page for now then? Sorry I'm a bit out of the loop with this ticket and Slack channel discussion so I'm trying to keep up as best I can!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>markcallen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 10:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:53/1520417490325702</guid>
      <description>&lt;p&gt;
I just wanted to add a comment about filters on output. It is perhaps the subject of a new discussion or ticket.
&lt;/p&gt;
&lt;p&gt;
If any output is a html tag, then I believe it should be an array of attribute =&amp;gt; value pairs that is filtered.
&lt;/p&gt;
&lt;p&gt;
This gives full control to developers to add, view, edit or remove attributes based on their specific needs. It is more resilient to successive filters being used and more importantly it works for any attributes - current or future.
&lt;/p&gt;
&lt;p&gt;
String manipulation which is relied on too much for a lot of filters is just ugly and messy and often gets  implemented assuming that no previous filter has been called.
&lt;/p&gt;
&lt;p&gt;
In the case of this ticket, this approach would allow developers to add async/defer attributes based on their specific implementations. It wouldn't need other updates to core and is future proof to any other cool attributes that are created in the future.
&lt;/p&gt;
&lt;p&gt;
Whether developers use that to enhance or degrade performance is a matter for the developer, in my opinion. I agree with @azaozz, better to refactor script-loader for 2018 - with my point above included on eventual output :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:20/1520416646597705</guid>
      <description>&lt;p&gt;
@danieltj to comment further on @azaozz reply see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt; so you can understand how this 'empty' for now page will end up being pretty much :). We're still on a chaotic-ticket system as there was a need to open everything as a ticket to see what we can do and start but it will make sense in the end especially after some parent-commits are made. It looks confusing if you're missing the chats &amp;amp; meetings on the #gdpr-compliance that's certain :D .
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:57:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:2/1520416631308150</guid>
      <description>&lt;p&gt;
No, that's not what I am saying (it's actually the opposite). If you look at the source of &lt;code&gt;wp-admin/css/login.css&lt;/code&gt; it imports &lt;code&gt;forms.css&lt;/code&gt; and &lt;code&gt;i10n.css&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;forms&lt;/span&gt;&lt;span class="nc"&gt;.css&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;l10n&lt;/span&gt;&lt;span class="nc"&gt;.css&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/script-loader.php#L1075"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/script-loader.php#L1075&lt;/a&gt; these two scripts are also added as dependencies to &lt;code&gt;login.css&lt;/code&gt;, which is redundant:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$styles-&amp;gt;add( 'login', "/wp-admin/css/login$suffix.css", array( 'dashicons', 'buttons', 'forms', 'l10n' ) );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I think we should get rid of the one of the two and I propose removing the &lt;code&gt;@import&lt;/code&gt; statements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:19/1520416420556401</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43435#comment:18" title="Comment 18"&gt;danieltj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should this new interface be integrated into the &lt;code&gt;Settings &amp;gt; Reading&lt;/code&gt; screen...
A whole new page for this seems a bit much
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We've discussed that in #gdpr-compliance in Slack and the consensus was to add all privacy tools on one screen under Tools menu. It's not going to be just the policy page, there will be UI for anonymizing and/or deleting comments and posts, link to anonymizing/deleting a user, help/text explaining how each works and how that will impact the site, warning about change to the suggested policy text, perhaps a list of pending requests, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:18/1520415745717606</guid>
      <description>&lt;p&gt;
Should this new interface be integrated into the &lt;code&gt;Settings &amp;gt; Reading&lt;/code&gt; screen where the select a homepage and blog page? Putting it into the tools section doesn't seem to be the right flow here. I'm inclined to suggest it's move as an option that is always selectable (as opposed to the home/blog page options that require it being switched on).
&lt;/p&gt;
&lt;p&gt;
A whole new page for this seems a bit much to me because once you have a page created, the only useful option here is the select box which doesn't need it's own page.
&lt;/p&gt;
&lt;p&gt;
I've also not tested the patch yet, but if it doesn't already, it should have a 'Privacy Policy' suffix in the page list just like it does with 'Front Page' and 'Blog' pages do to identify they're special pages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483#comment:1/1520415077374255</guid>
      <description>&lt;p&gt;
So I guess you mean to introduce &lt;code&gt;login.scss&lt;/code&gt; that imports &lt;code&gt;forms.scss&lt;/code&gt; and &lt;code&gt;i10n.scss&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The only other &lt;code&gt;scss&lt;/code&gt; files I'm aware of is for the admin color schemes in &lt;code&gt;/wp-admin/css/colors/&lt;/code&gt; (e.g. &lt;code&gt;/wp-admin/css/colors/light/colors.scss&lt;/code&gt;), with this sass entry in  &lt;code&gt;Gruntfile.js&lt;/code&gt; :
&lt;/p&gt;
&lt;pre class="wiki"&gt;sass: {
    colors: {
        expand: true,
        cwd: SOURCE_DIR,
        dest: BUILD_DIR,
        ext: '.css',
        src: ['wp-admin/css/colors/*/colors.scss'],
        options: {
            outputStyle: 'expanded'
        }
    }
},
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:8/1520414895518491</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43218#comment:7" title="Comment 7"&gt;dingo_bastard&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just to clarify, for unit tests to pass, we need to use PHPUnit 6? I tried running tests and I got
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP Fatal error: Class PHPUnit_Util_Test may not inherit from final class (PHPUnit\Util\Test) in /vagrant-local/www/wordpress-develop/tests/phpunit/includes/phpunit6-compat.php on line 18
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
error. Will downgrading the PHPUnit to v6 get rid of this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that's the point. PHPUnit 7 and up will probably not be supported for years to come. The PHP 7.x return hinting is just too much for our 5.x files.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;composer require --dev phpunit/phpunit:^6&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43218 (PHPUnit 7.x support) updated</title>
      
        <dc:creator>dingo_bastard</dc:creator>

      <pubDate>Wed, 07 Mar 2018 09:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43218#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43218#comment:7/1520414502668500</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just to clarify, for unit tests to pass, we need to use PHPUnit 6? I tried running tests and I got
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP Fatal error: Class PHPUnit_Util_Test may not inherit from final class (PHPUnit\Util\Test) in /vagrant-local/www/wordpress-develop/tests/phpunit/includes/phpunit6-compat.php on line 18
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
error. Will downgrading the PHPUnit to v6 get rid of this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:59:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:17/1520413179190305</guid>
      <description>&lt;p&gt;
After my last comment I just went ahead and actually created &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.diff" title="Attachment '43435.3.diff' in Ticket #43435"&gt;43435.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43435/43435.3.diff" title="Download"&gt;​&lt;/a&gt; since we're 12h apart so 1 wakes up 1 sleeps haha just in case we can save some time. This is based on @allendav 's patch but with the idea of not using redirects straight away.
&lt;/p&gt;
&lt;p&gt;
I'm sure this patch can get a lot prettier + more secure or fail-safe but at least it works as expected for the means of previewing.
&lt;/p&gt;
&lt;p&gt;
@allendav if you are OK with this ( I think it will really play along nicely with the idea of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt; and accordions etc. It will be a seamless experience imho ) please make a pass on this to shape it up so we can commit it maybe asap so I can pass over all the other UI items as well after, this way we can start clearing tickets as well and focus on new ones easier :).
&lt;/p&gt;
&lt;p&gt;
( note: I wasn't sure where to add all the jQuery + minor css stuff for this page so I just bumped them insite tools-privacy.php to at least have them handy for the time being )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43435.3.gif attached to Ticket #43435</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:52:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.gif/1520412724974176</guid>
      <description>&lt;p&gt;
no redirect preview
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>43435.3.diff attached to Ticket #43435</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:51:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.3.diff/1520412693174026</guid>
      <description>&lt;p&gt;
different UX idea without redirect
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43407 (Make site_url filter aware of wp-login.php actions) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 07 Mar 2018 08:51:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43407#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43407#comment:1/1520412662340172</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43483 (login css imports styles it has as dependencies) created</title>
      
        <dc:creator>alpipego</dc:creator>

      <pubDate>Wed, 07 Mar 2018 06:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43483</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43483/1520405951133689</guid>
      <description>&lt;p&gt;
The &lt;code&gt;login.css&lt;/code&gt; (&lt;code&gt;login-rtl.css&lt;/code&gt;) imports &lt;code&gt;forms.css&lt;/code&gt; and &lt;code&gt;i10n.css&lt;/code&gt; (&lt;code&gt;forms-rtl.css&lt;/code&gt; and &lt;code&gt;i10n-rtl.css&lt;/code&gt;) and also has them as dependencies.
&lt;/p&gt;
&lt;p&gt;
I think this should be unified and propose removing the import statements.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 07 Mar 2018 06:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:17/1520405503725775</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-committers by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-committers/p1520405502000010"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43228 (register_theme_directory() needs to delete the `theme_roots` transient) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 07 Mar 2018 06:17:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43228#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43228#comment:8/1520403441202654</guid>
      <description>&lt;p&gt;
&lt;code&gt;register_theme_directory()&lt;/code&gt; is intended to run on every page load AFAICT, so ultimately deleting the &lt;code&gt;theme_roots&lt;/code&gt; transient or &lt;code&gt;update_themes&lt;/code&gt; option isn't a viable option for calling within &lt;code&gt;register_theme_directory()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I suspect that calling &lt;code&gt;search_theme_directories( true )&lt;/code&gt; within the branch that actually appends within &lt;code&gt;register_theme_directory()&lt;/code&gt; will be a bit better, but it'll still cause unexpected IO to happen when the theme roots hasn't actually changed from what's in the transient (ie. this directory was registered on the last page load too).
&lt;/p&gt;
&lt;p&gt;
I think that &lt;code&gt;search_theme_directories()&lt;/code&gt; and &lt;code&gt;get_theme_roots()&lt;/code&gt; needs to hash &lt;code&gt;$wp_theme_directories&lt;/code&gt; and include that as part of it's transient name, which should solve both the reported issue and the issue of extra IO.
&lt;/p&gt;
&lt;p&gt;
Either way, The patch as committed needs reverting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43228 (register_theme_directory() needs to delete the `theme_roots` transient) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Wed, 07 Mar 2018 05:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43228#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43228#comment:7/1520399063641712</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Wed, 07 Mar 2018 04:43:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:16/1520397828731560</guid>
      <description>&lt;p&gt;
I have some 'flow' notes that maybe it could be done easier, if not it is more than fine for a start!
&lt;/p&gt;
&lt;p&gt;
The current flow:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You're on Privacy Page you don't have anything selected so you get a message to 'Create' a page.
&lt;/li&gt;&lt;li&gt;You click -&amp;gt; you get redirected -&amp;gt; you publish the page.
&lt;/li&gt;&lt;li&gt;Back to the Privacy Page -&amp;gt; no option set yet -&amp;gt; Message to create yet another new page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
That might seem somewhat confusing to some people since they already created a page and might think oh nice it was so easy! yay! ... wait... where are my extra goodies? - oh snap - I have to go back and Select it as well.
&lt;/p&gt;
&lt;p&gt;
So I would suggest to convert this little piece of flow into this if possible:
&lt;/p&gt;
&lt;p&gt;
You get to Policy Page -&amp;gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Your select doesn't have anything.
&lt;/li&gt;&lt;li&gt;You have a message to create a page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Action time:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You click create a page
&lt;/li&gt;&lt;li&gt;You get a notification-success. ( ajax magic ! )
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What Happened in the background? :
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;A page is simply put in by our code with a slug of like 'privacy-policy-{$timestamp}' so it's always unique.
&lt;/li&gt;&lt;li&gt;Without redirects we are updating instantly the &amp;lt;select&amp;gt; + the &lt;code&gt;option&lt;/code&gt; followed by a message 'Your page is ready! You can view it &amp;lt;here&amp;gt;' or something in that context.
&lt;/li&gt;&lt;li&gt;The user doesn't have to do anything else. User can even continue scrolling through the Privacy Tools page or check the already incoming plugin hooks on the next tab if he wants.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The idea of this is to avoid all of this back and forth and just give them a straight up page that with this idea will show their metabox and everything already as it is properly registered from scratch.
&lt;/p&gt;
&lt;p&gt;
Either way you're keeping the ID for the select so we don't care about slugs / post names they can do whatever they want with them :] as long as there's something bound to that select box.
&lt;/p&gt;
&lt;p&gt;
What do you think about that? I would personally find it perfect to not interrupt with redirects etc my &lt;code&gt;1st click on this new page&lt;/code&gt; :D
&lt;/p&gt;
&lt;p&gt;
The trash notice is super clever btw &lt;sup&gt;_&lt;/sup&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20746 (Accessing non-existing theme folder in Network install gives 500 error) updated</title>
      
        <dc:creator>dchenko</dc:creator>

      <pubDate>Wed, 07 Mar 2018 03:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20746#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20746#comment:43/1520394188474838</guid>
      <description>&lt;p&gt;
But this does not simply remove the question mark—you're removing the capturing parentheses and changing the $2 to a $1, which makes the string "+/" required as part of the URL in front of wp-* even though it was optional before.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20746#comment:16" title="Comment 16"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20746#comment:15" title="Comment 15"&gt;jrfoell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks Ron... I amended my comment to show the full .htaccess I'm using.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In the full htaccess above the rewrite condition
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteCond %{REQUEST_URI} ^/wp-(content|admin|includes).*$`
&lt;/pre&gt;&lt;p&gt;
will only be met if the requested path begins with &lt;code&gt;//&lt;/code&gt;. The RewriteBase directive tells the rewrite engine to start rewriting after the base value.
&lt;/p&gt;
&lt;p&gt;
Secondly, that .htaccess isn't what I suggested to Pippin. What I suggested was
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteCond %{REQUEST_URI} !^wp-(content|admin|includes).*$
RewriteRule ^([_0-9a-zA-Z-]+/)?(wp-(content|admin|includes).*) $2 [L]
&lt;/pre&gt;&lt;p&gt;
Looking at the original rule it would probably be easier to remove the ? from the original rule
&lt;/p&gt;
&lt;pre class="wiki"&gt;RewriteRule ^[_0-9a-zA-Z-]+/(wp-(content|admin|includes).*) $1 [L]
&lt;/pre&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) reopened</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:19:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:16/1520385571404931</guid>
      <description>&lt;p&gt;
Reopening for 4.9.5 consideration
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) closed</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:15/1520385489332337</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42792" title="Media: Correctly allow changing PDF thumbnail crop value.
Corrects ..."&gt;42792&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Correctly allow changing PDF thumbnail crop value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Corrects logic that keeping plugins from setting crop value of intermediate image sizes for rendered PDFs.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props leemon, SergeyBiryukov, chetan200891, birgire.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43226" title="#43226: defect (bug): Crop setting in thumbnails never set when uploading PDF files (closed: fixed)"&gt;#43226&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42792]: Media: Correctly allow changing PDF thumbnail crop value.  Corrects ...</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42792</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42792/1520385488857352</guid>
      <description>&lt;p&gt;
Media: Correctly allow changing PDF thumbnail crop value.
&lt;/p&gt;
&lt;p&gt;
Corrects logic that keeping plugins from setting crop value of intermediate image sizes for rendered PDFs.
&lt;/p&gt;
&lt;p&gt;
Adds test.
&lt;/p&gt;
&lt;p&gt;
Props leemon, SergeyBiryukov, chetan200891, birgire.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43226" title="#43226: defect (bug): Crop setting in thumbnails never set when uploading PDF files (closed: fixed)"&gt;#43226&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43482 (Draft Posts Throw 404 on Preview when Supporting post_format) created</title>
      
        <dc:creator>marklavin</dc:creator>

      <pubDate>Wed, 07 Mar 2018 01:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43482</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43482/1520384823278832</guid>
      <description>&lt;p&gt;
A client is reporting that they're not able to preview drafts of some of the custom post types we have running on their site. The issue is not occurring for all post types on their site. I believe I've traced the issue to the fact that the errant post types support "post_format."
&lt;/p&gt;
&lt;p&gt;
The preview URL that gets generated when I preview the "ask-the-expert" post is:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;post_format=standard&amp;amp;_thumbnail_id=-1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;post_format=standard&amp;amp;_thumbnail_id=-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That above URL throws a 404 page.
&lt;/p&gt;
&lt;p&gt;
When I pull out the 'post_format=standard' part of the query, so that the URL looks like:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_thumbnail_id=-1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_thumbnail_id=-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
then the preview loads correctly.
&lt;/p&gt;
&lt;p&gt;
Interestingly, just for giggles I also tried:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_post_format=standard&amp;amp;_thumbnail_id=-1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.sitename.com/?post_type=ask-the-expert&amp;amp;p=4063&amp;amp;preview_id=4063&amp;amp;preview_nonce=ebffa07dd9&amp;amp;_post_format=standard&amp;amp;_thumbnail_id=-1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and that also worked as it should. (notice the added underscore before 'post_format.'
&lt;/p&gt;
&lt;p&gt;
For now I think I'm just going to disable post formats for the offending post types, but methinks I found a bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:15/1520382424442089</guid>
      <description>&lt;p&gt;
This is starting to look good :)
&lt;/p&gt;
&lt;p&gt;
Thinking we can have a "Create Privacy Policy page" button that will act like a submit button and we can insert a new page titled "Privacy Policy" directly, no need to send the user to the New Page screen. After inserting it, or after the user selects a page from the drop-down and saves, we should show a link to edit the policy.
&lt;/p&gt;
&lt;p&gt;
Now comes the fun part: when editing the policy there will be a "postbox" that contains all the text suggested by core and plugins. In addition to showing the text, it will have to store the old text and highlight parts when they are updated. Perhaps not quite a diff, but draw the attention to any changed block of text.
&lt;/p&gt;
&lt;p&gt;
In addition after core or plugin update we should show an admin-wide notice when some privacy text(s) were updated, perhaps until the user dismisses it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:14/1520381748430947</guid>
      <description>&lt;p&gt;
I tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43226/43226.diff" title="Attachment '43226.diff' in Ticket #43226"&gt;43226.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43226/43226.diff" title="Download"&gt;​&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43226/43226-unit-test.diff" title="Attachment '43226-unit-test.diff' in Ticket #43226"&gt;43226-unit-test.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43226/43226-unit-test.diff" title="Download"&gt;​&lt;/a&gt; but the unit-test failed.
&lt;/p&gt;
&lt;p&gt;
It ran successfully when I changed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'medium'    =&amp;gt; array(
	'file'      =&amp;gt; 'wordpress-gsoc-flyer-pdf-232x300.jpg',
	'width'     =&amp;gt; 300,
	'height'    =&amp;gt; 300,
	'mime-type' =&amp;gt; 'image/jpeg',
),
&lt;/pre&gt;&lt;p&gt;
to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'medium'    =&amp;gt; array(
	'file'      =&amp;gt; 'wordpress-gsoc-flyer-pdf-300x300.jpg',
	'width'     =&amp;gt; 300,
	'height'    =&amp;gt; 300,
	'mime-type' =&amp;gt; 'image/jpeg',
),
&lt;/pre&gt;&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39975" title="#39975: task (blessed): Remove direct calls to '/tmp/' in Unit Tests (new)"&gt;#39975&lt;/a&gt; aims to &lt;em&gt;Remove direct calls to &lt;code&gt;'/tmp/'&lt;/code&gt; in Unit Tests&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
So &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43226/43226.2.diff" title="Attachment '43226.2.diff' in Ticket #43226"&gt;43226.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43226/43226.2.diff" title="Download"&gt;​&lt;/a&gt; uses &lt;code&gt;get_temp_dir()&lt;/code&gt; instead of &lt;code&gt;'/tmp/'&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
If we want to use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$test_file = wp_tempnam( 'wordpress-gsoc-flyer.pdf' );
&lt;/pre&gt;&lt;p&gt;
then we have to deal with files like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/tmp/wordpress-gsoc-flyer-Y5yoVa.tmp
&lt;/pre&gt;&lt;p&gt;
making it a little more involved to create the &lt;code&gt;$expected&lt;/code&gt; array and then to unlink the corresponding files.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43226.2.diff attached to Ticket #43226</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:06:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43226/43226.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43226/43226.2.diff/1520381181028684</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 07 Mar 2018 00:02:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:4/1520380954772364</guid>
      <description>&lt;p&gt;
feature.43443.diff works quite well. Only changed it so we always delete the stored token when the hash matches, and fixed a typo in var order. Left the ticket open so we can iterate/enhance it further.
&lt;/p&gt;
&lt;p&gt;
Things to consider:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Prevent "flood" of requests. If a request is made and it hasn't expired, perhaps limit how many new requests can be made for the same email. Something like 10 should be plenty to cover legitimate user cases.
&lt;/li&gt;&lt;li&gt;Perhaps add garbage collection function to delete expired requests.
&lt;/li&gt;&lt;li&gt;Consider how this can be used through the REST API and add an endpoint.
&lt;/li&gt;&lt;li&gt;Log confirmed requests and perhaps show them on the dashboard? Typically an admin will have to perform the requested action. When a site has more than one admin, would be good if all can see pending requests.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 06 Mar 2018 23:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443#comment:3/1520380004780232</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42791" title="Add a method to confirm user requests by email. First run.
Props ..."&gt;42791&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add a method to confirm user requests by email. First run.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;#43443&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42791]: Add a method to confirm user requests by email. First run.  Props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 06 Mar 2018 23:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42791</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42791/1520380004313109</guid>
      <description>&lt;p&gt;
Add a method to confirm user requests by email. First run.
&lt;/p&gt;
&lt;p&gt;
Props mikejolley.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43443" title="#43443: enhancement: Add a method for confirmation of requests for deleting or anonymizing ... (closed: fixed)"&gt;#43443&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>43443.patch attached to Ticket #43443</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 06 Mar 2018 23:29:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43443/43443.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43443/43443.patch/1520378975535682</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42737 (Add method wp.api.getModelByType for retrieving api models) updated</title>
      
        <dc:creator>mkaz</dc:creator>

      <pubDate>Tue, 06 Mar 2018 23:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42737#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42737#comment:6/1520378869815803</guid>
      <description>&lt;p&gt;
This is no longer needed to support Gutenberg, the calls were changed to no longer map into Backbone models but to go straight to the API for data.
&lt;/p&gt;
&lt;p&gt;
Change made in &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/5253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/5253&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I still think this change is better way to map models instead of the routes which can lead to error, but probably doesn't make sense to include if there isn't going to be any code to use the new functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43389 (Add a privacy policy page setting to options-reading.php) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Tue, 06 Mar 2018 21:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43389#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43389#comment:11/1520372464744178</guid>
      <description>&lt;p&gt;
Please see &lt;a href="https://core.trac.wordpress.org/ticket/43435#comment:14"&gt;https://core.trac.wordpress.org/ticket/43435#comment:14&lt;/a&gt; for this setting now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Tue, 06 Mar 2018 21:40:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:14/1520372423888027</guid>
      <description>&lt;p&gt;
@xkon @azaozz - i just posted an updated patch that adds the privacy policy page setting to @xkon 's original patch. It also provides a link to create a new page in the event no page is selected. Please let me know what you think.
&lt;/p&gt;
&lt;p&gt;
I'll add a comment on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43389" title="#43389: feature request: Add a privacy policy page setting to options-reading.php (closed: wontfix)"&gt;#43389&lt;/a&gt; that this is over here now
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43435.2.diff attached to Ticket #43435</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Tue, 06 Mar 2018 21:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/43435.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/43435.2.diff/1520372309087526</guid>
      <description>&lt;p&gt;
Updated patch that includes UX for setting privacy policy page
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Tue, 06 Mar 2018 21:35:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:82/1520372124448132</guid>
      <description>&lt;p&gt;
FYI I took this latest patch for a spin on a local multisite installation. The network update went fine, the new blogmeta table was added fine too, and my local network works fine after-the-fact too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 21:33:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:13/1520372022400174</guid>
      <description>&lt;p&gt;
Design and UI/UX in general was split from this ticket so we can keep this to update general functions needed and base back-end structure to have cleaner and easier tickets to maintain + commit. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43481" title="#43481: enhancement: Add tabs and placeholders to privacy tools page in wp-admin (closed: fixed)"&gt;#43481&lt;/a&gt; for further UI/UX details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 21:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:3/1520371296466596</guid>
      <description>&lt;p&gt;
Hi @adamsilverstein, hopefully I'm not raising a false issue here ;-)
&lt;/p&gt;
&lt;p&gt;
I tested this on an 4.9.4 install without plugins activated and default theme.
&lt;/p&gt;
&lt;p&gt;
Also tested this on another 4.9.4 install, on different hosting.
&lt;/p&gt;
&lt;p&gt;
The issues shows up in my Chrome for e.g. &lt;code&gt;ar&lt;/code&gt;, &lt;code&gt;ary&lt;/code&gt; and &lt;code&gt;he_IL&lt;/code&gt; option values for the WPLANG dropdown.
&lt;/p&gt;
&lt;p&gt;
I don't see this issue on Microsoft Edge 41.16299.248.0.
&lt;/p&gt;
&lt;p&gt;
I wonder if somethings wrong with my Chrome (I disabled all extensions) and I don't see any console errors. I will have to look better into that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42008 (Show warning that usernames can't be changed) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42008#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42008#comment:7/1520369886415043</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
you can change some of these settings later
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How about "most of these settings"? Site Title, Password, Email, Site Visibility can all be changed, only username cannot.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43229 (Documentation for add_meta_boxes hook is incorrect) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:56:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43229#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43229#comment:6/1520369794924032</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by danieltj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520369792000327"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42008 (Show warning that usernames can't be changed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:53:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42008#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42008#comment:6/1520369608832557</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by danieltj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520369605000235"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42695 (Text Widget: hard-coded width/height attributes are stripped from iframes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:41:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42695#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42695#comment:13/1520368903905079</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520368901000322"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42612 (Single post navigation bugs when adding posts in Starter Content) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42612#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42612#comment:13/1520368546843755</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520368542000222"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:33:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:13/1520368387973952</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:29:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:12/1520368183135108</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:28:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:11/1520368087933586</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520368084000749"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43331 (Color picker breaks admin panel in many templates) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43331#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43331#comment:5/1520368008972263</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thinking this needs a second opinion from a led dev.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:2/1520367957216275</guid>
      <description>&lt;p&gt;
Hi @birgire, thanks for the bug report. Can you confirm you still see this issue with all plugins disabled? Also, can you tell me what language you are using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43331 (Color picker breaks admin panel in many templates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:19:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43331#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43331#comment:4/1520367598257880</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520367595000210"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42486 (The Tools screen is blank for users who cannot manage categories or tags) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:19:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42486#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42486#comment:17/1520367585670491</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42486 (The Tools screen is blank for users who cannot manage categories or tags) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:15:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42486#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42486#comment:16/1520367325093348</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520367322000271"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36884 (Customizer child menus incorrectly resize the site to an incorrect ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:13:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36884#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36884#comment:10/1520367187643203</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520367185000007"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:5/1520367086295363</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520367083000627"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42785 (Change default of `show_in_rest` in register_post_type and ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 20:05:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42785#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42785#comment:11/1520366710661378</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by audrasjb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1520366706000528"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 19:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481#comment:1/1520366323835073</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>privacy_tools_page.gif attached to Ticket #43481</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 19:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43481/privacy_tools_page.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43481/privacy_tools_page.gif/1520365617422452</guid>
      <description>&lt;p&gt;
privacy tools preview first
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43481 (Add tabs and placeholders to privacy tools page in wp-admin) created</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 19:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43481</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43481/1520365579216918</guid>
      <description>&lt;p&gt;
I wanted to make this ticket separate from the others, as this will only be focusing on the ui/ux aspect of the new pages only so we can have a clean conversation without actual 'tools' + actions distractions.
&lt;/p&gt;
&lt;p&gt;
I took the liberty of creating a first pass using elements that already exist in the Admin area trying to have  a simple process of using Steps like menus etc.
&lt;/p&gt;
&lt;p&gt;
I will wait for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt; , @allendav 's patch specifically as he's creating a new one to get in first and then I'll jump over that code to implement this so we can continue from there.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 18:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280#comment:11/1520362228747166</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1520362226000464"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43478 (Add ability to disable the password protected posts feature) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Tue, 06 Mar 2018 18:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43478#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43478#comment:4/1520360657791450</guid>
      <description>&lt;p&gt;
Perhaps also worth mentioning &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9559" title="#9559: defect (bug): Site search results can include passworded posts (closed: fixed)"&gt;#9559&lt;/a&gt; here, which was only fixed for non-logged in users.
&lt;/p&gt;
&lt;p&gt;
This feature may provide sufficient protection for many users' needs, but it is anything but secure. Maybe it could be moved into a plugin, like Press This was, or at least disabled by default on new installs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19755 (Redundant blog_versions table) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19755#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19755#comment:16/1520359154146992</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1520359152000118"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5420 (Better exit for wp-mail.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5420#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5420#comment:7/1520358414960025</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by nic.bertino. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1520358413000114"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41685 (Save database version in site meta (Multisite)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41685#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41685#comment:3/1520358346106584</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1520358344000308"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37923 (Introduce shared wp_blogmeta database table for multisite installation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37923#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37923#comment:81/1520357829816066</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1520357827000794"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37392 (Multisite "Sites" screen: Add links to filter websites by status) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:34:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37392#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37392#comment:15/1520357665972664</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by mnelson4. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1520357664000048"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40245 (Youtube embeds lack title attribute) updated</title>
      
        <dc:creator>bamadesigner</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40245#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40245#comment:25/1520356967504176</guid>
      <description>&lt;p&gt;
It's being replaced because this patch also introduces a "oembed_title" filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42778 (Widgets page: consider to make the Enable accessibility mode link more ...) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:20:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42778#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42778#comment:17/1520356808062974</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42790" title="Accessibility: Make the Widgets screen &amp;#34;Enable accessibility mode&amp;#34; ..."&gt;42790&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Make the Widgets screen "Enable accessibility mode" link more discoverable.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a number of years, the link to the Widgets screen "Accessibility mode" lived&lt;br /&gt;
in the Screen Options panel, hidden by default. Many users, including assistive&lt;br /&gt;
technologies users, weren't able to find it or even aware it existed. By bringing&lt;br /&gt;
the link in the main screen, visible by default, this change makes the&lt;br /&gt;
"Accessibility mode" easily discoverable for everyone.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props chetan200891, antonioeatgoat.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42778" title="#42778: defect (bug): Widgets page: consider to make the Enable accessibility mode link more ... (closed: fixed)"&gt;#42778&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42790]: Accessibility: Make the Widgets screen "Enable accessibility mode" ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:20:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42790</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42790/1520356807586473</guid>
      <description>&lt;p&gt;
Accessibility: Make the Widgets screen "Enable accessibility mode" link more discoverable.
&lt;/p&gt;
&lt;p&gt;
For a number of years, the link to the Widgets screen "Accessibility mode" lived
in the Screen Options panel, hidden by default. Many users, including assistive
technologies users, weren't able to find it or even aware it existed. By bringing
the link in the main screen, visible by default, this change makes the
"Accessibility mode" easily discoverable for everyone.
&lt;/p&gt;
&lt;p&gt;
Props chetan200891, antonioeatgoat.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42778" title="#42778: defect (bug): Widgets page: consider to make the Enable accessibility mode link more ... (closed: fixed)"&gt;#42778&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42778 (Widgets page: consider to make the Enable accessibility mode link more ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42778#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42778#comment:16/1520355993154278</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/42778/42778.4.diff" title="Attachment '42778.4.diff' in Ticket #42778"&gt;42778.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/42778/42778.4.diff" title="Download"&gt;​&lt;/a&gt; restores the &lt;code&gt;screen_settings&lt;/code&gt; filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42778.4.diff attached to Ticket #42778</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:04:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42778/42778.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42778/42778.4.diff/1520355893485140</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43480 (Add $gmt parameter to the_time() function) updated</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:03:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43480#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43480#comment:1/1520355806190621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>43480.patch attached to Ticket #43480</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Tue, 06 Mar 2018 17:02:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43480/43480.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43480/43480.patch/1520355769977356</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43480 (Add $gmt parameter to the_time() function) created</title>
      
        <dc:creator>paulschreiber</dc:creator>

      <pubDate>Tue, 06 Mar 2018 16:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43480</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43480/1520354818199037</guid>
      <description>&lt;p&gt;
It would be helpful to add a $gmt parameter to the_time().
&lt;/p&gt;
&lt;p&gt;
calling:
&lt;/p&gt;
&lt;pre class="wiki"&gt;the_time( 'c', true );
&lt;/pre&gt;&lt;p&gt;
is cleaner/easier than:
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo esc_attr( get_post_time( 'c', true ) );
&lt;/pre&gt;&lt;p&gt;
Use case:
This format of timestamp is required for microformats metadata.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>allendav</dc:creator>

      <pubDate>Tue, 06 Mar 2018 16:45:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:3/1520354715192335</guid>
      <description>&lt;p&gt;
A few us of at Automattic chatted about a personal data exporter design that could support WooCommerce and its extensions needs (and be applicable to core itself or any plugin)
&lt;/p&gt;
&lt;p&gt;
In a nutshell, we eventually thought it would be best to try having plugins (and extensions) register a callback function(s) for the export of personal data, e.g. have a plugin do something like this):
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( "wp_privacy_register_export_data_callback", array( $this, 'register_export_data_callback' ) );
function register_export_data_callback( $export_callbacks ) {
    $export_callbacks[] = array(
        'slug' =&amp;gt; 'stripe',
        'plugin_friendly_name' =&amp;gt; __( 'Stripe Payments for WooCommerce' ),
        'callback' =&amp;gt; array( $this, 'export_data' )
    );
    return $export_callbacks;
}
&lt;/pre&gt;&lt;p&gt;
The plugin’s actual data-exporting callback would then look something like this, accepting the search parameter (e.g. the email address to export for) and a page parameter (more about that below).
&lt;/p&gt;
&lt;pre class="wiki"&gt;function export_data( $email_address, $page ) {
    // do something here to get the next page of data for the email address given
    return array(
        'data' =&amp;gt; array(
            // data goes here
        ),
    'done' =&amp;gt; true // or return false if we want to be called again for another page of data
    );
}
&lt;/pre&gt;&lt;p&gt;
For now, we are thinking the data should be super simple, an array of name/value pairs, to keep the barrier to entry low – we could always add more things to the pairs later, e.g:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
    {
        name: “billing address order #1000”,
        value:  “1444 Seattle Hill Rd”
    },
    {
        name: “billing address order #998”,
        value:  “17725 108th St SE”
    },
]
&lt;/pre&gt;&lt;p&gt;
Then, ajax on a core provided wp-admin page (or the REST API) could be used to fetch a list of all the registered callbacks (and their plugins), e.g. ala:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$registered_callbacks_array = apply_filter( “wp_privacy_register_plugin_export_data_callback”, array() );
&lt;/pre&gt;&lt;p&gt;
and work with each plugin in the $registered_callbacks_array in turn calling its callback(s) to fetch how ever many pages of data that plugin decides to return for the email address of interest.
&lt;/p&gt;
&lt;p&gt;
The web CLIENT would assemble the responses in memory (not the server) and then the user could do whatever they want with the data.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Tue, 06 Mar 2018 16:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:52/1520353968615440</guid>
      <description>&lt;p&gt;
Relevant: Introducing HTTP/2 Server Push with NGINX 1.13.9 &lt;a class="ext-link" href="https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.nginx.com/blog/nginx-1-13-9-http2-server-push/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43478 (Add ability to disable the password protected posts feature) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Tue, 06 Mar 2018 15:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43478#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43478#comment:3/1520349697036658</guid>
      <description>&lt;p&gt;
+1
I never use this feature, and I don't want clients to try using it. Common/shared, post based "passwords" are not a thing to use. Would be fine to be able to disable it cleanly by a hook.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 14:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:51/1520348344600280</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1520348342000371"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 14:18:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479#comment:1/1520345882583646</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>theme-detail-ltr.jpg attached to Ticket #43479</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 14:16:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43479/theme-detail-ltr.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43479/theme-detail-ltr.jpg/1520345797190356</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>theme-detail-rtl.jpg attached to Ticket #43479</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 14:15:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43479/theme-detail-rtl.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43479/theme-detail-rtl.jpg/1520345745052998</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43479 (Theme detail text cutoff in RTL) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 14:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43479</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43479/1520345707726765</guid>
      <description>&lt;p&gt;
When viewing the theme detail in &lt;code&gt;/wp-admin/themes.php&lt;/code&gt;, part of the text is cut off because of CSS. This happens when a RTL language is selected. Tested in Chrome Version 64.0.3282.186 on Win 10 desktop.
&lt;/p&gt;
&lt;p&gt;
ps: I'm surprised I couldn't find tickets on this, but maybe my search foo failed me here ;-)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43316 (REST API: Support autosaves) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 06 Mar 2018 14:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43316#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43316#comment:15/1520345230132993</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1520345228000158"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 06 Mar 2018 14:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:6/1520345070616634</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43440#comment:5" title="Comment 5"&gt;xkon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
First of all I was going to merge this idea with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt; as well by creating a single function that handles an $arg as an action. So 1 function could tackle deletion/anonymization/export/display of comments depending on what we want for the Tools page: for example &lt;code&gt;handle_comments( some@where.com, 'delete' );&lt;/code&gt; etc. This would've been easy BUT!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd rather we have separate functions for each action. Even if we handle all cases in one "low level" function we should have separate "helpers" for each action that will fire a filter or an action for plugins to hook in, etc.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@netweb brought to my attention on this ticket that there might me 10.000 comments and because of that we should consider using the Export API that already works with batches so it should be perfect for websites with massive ammounts of comments etc instead of re-creating something that exists.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not so sure we need that. Even with an extreme amount of comments we do a similar DB query every time when displaying comments on each post on the front-end. The important part is that we have an index on &lt;code&gt;comment_author_email&lt;/code&gt; that speeds things up considerably.
&lt;/p&gt;
&lt;p&gt;
Of course writing to the DB when deleting or anonymizing will be slower, but still think we can pull that off without batching. Lets do it "directly" for now and optimize for writing later if needed. Possible optimization can be to select the &lt;code&gt;comment_ID&lt;/code&gt; in batches of lets say 500 and use that to limit the writing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43478 (Add ability to disable the password protected posts feature) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43478#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43478#comment:2/1520344561847654</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43478 (Add ability to disable the password protected posts feature) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43478#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43478#comment:1/1520344526992947</guid>
      <description>&lt;p&gt;
I somewhat agree with one of the suggestions here. Due to how authentication works within Core, I agree that a flag to disable this on a per site basis seems like a sensible way to go. I will note though that the password in plain text part of this doesn't seem like too much of an issue to me personally because if you're writing a post, it is somewhat public anyway.
&lt;/p&gt;
&lt;p&gt;
Long story, short; yeah let's get this behind a flag so it can be turned off if you wish but not through a theme support function as themes shouldn't be removing functionality at all. &lt;code&gt;wp-config&lt;/code&gt; or via a plugin is the best way for backwards compatibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43478 (Add ability to disable the password protected posts feature) created</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43478</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43478/1520343637026849</guid>
      <description>&lt;p&gt;
This functionality is not secure in the slightest. The password is stored as plain text. The fact that the password is meant to be shared among multiple people means that it's hard to change, it's liable to stop being a secret, it'll probably be very easy to guess if people are expected to remember it or write it down. The password entry also doesn't support any of the hooks from wp-login.php so a plugin which blocks brute force login attempts will allow post passwords to be brute forced.
&lt;/p&gt;
&lt;p&gt;
It doesn't really belong in core - if somebody proposed it today they'd be told to write a plugin instead.
&lt;/p&gt;
&lt;p&gt;
But if it can't be removed entirely, it should at least be possible to disable the functionality either with a constant or with &lt;code&gt;remove_theme_support(...)&lt;/code&gt;. This would allow hosts/maintainers of sites to protect their clients by forcing them to use more secure alternatives.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40925 (Review the usage of the change event on select elements) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40925#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40925#comment:11/1520343098561669</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19707 (admin-ajax.php requests via http regardless of force_ssl_admin() state) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19707#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19707#comment:8/1520343062644113</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #42178,​43475 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:30:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=42178%2C43475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=42178%2C43475/1520343018393075</guid>
      <description>duplicate: &lt;p&gt;
Hi @julienlusson, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42178" title="#42178: enhancement: Outdate-notice for Firefox ESR on dashboard (closed: invalid)"&gt;#42178&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43476 (Fix parentheses in post status links for RTL) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43476#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43476#comment:3/1520342731063461</guid>
      <description>&lt;p&gt;
Here are examples of other parts using the &lt;code&gt;.subsubsub a .count&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the comment status links in &lt;code&gt;wp-admin/edit-comments.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;the plugin status links &lt;code&gt;wp-admin/plugins.php&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This can also happen in dropdowns.
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov yes, that might be the way to go, but I think we should at least take care of the parts that can contain user added options, like in &lt;code&gt;/wp-admin/nav-menus.php&lt;/code&gt;. Maybe adjust this ticket or create a new one?
&lt;/p&gt;
&lt;p&gt;
The screenshot in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43476/nav-menus-dropdown-with-user-input-including-parentheses.jpg" title="Attachment 'nav-menus-dropdown-with-user-input-including-parentheses.jpg' in Ticket #43476"&gt;nav-menus-dropdown-with-user-input-including-parentheses.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43476/nav-menus-dropdown-with-user-input-including-parentheses.jpg" title="Download"&gt;​&lt;/a&gt; shows what can happen when the user adds a menu containing parentheses.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>nav-menus-dropdown-with-user-input-including-parentheses.jpg attached to Ticket #43476</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:19:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43476/nav-menus-dropdown-with-user-input-including-parentheses.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43476/nav-menus-dropdown-with-user-input-including-parentheses.jpg/1520342377747519</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43477 (XyzTwapToggleRadio - switch to html view of new post is dead) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:16:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43477#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43477#comment:3/1520342198459482</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43477 (XyzTwapToggleRadio - switch to html view of new post is dead) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:16:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43477#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43477#comment:2/1520342180643803</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @BenjaminVM, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
There's no &lt;code&gt;XyzTwapToggleRadio&lt;/code&gt; script anywhere in WordPress core. Does the issue still happen with all plugins disabled and a default theme (Twenty Seventeen) activated?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43477 (XyzTwapToggleRadio - switch to html view of new post is dead) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43477#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43477#comment:1/1520342142205323</guid>
      <description>invalid: &lt;p&gt;
Hey there
&lt;/p&gt;
&lt;p&gt;
Thanks for your report and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This place is for tracking bugs and enhancements in WordPress core. &lt;code&gt;XyzTwapToggleRadio&lt;/code&gt; is certainly not something coming from WordPress. Please try disabling all plugins and switching to a default theme like Twenty Seventeen to check if the bug goes away.
&lt;/p&gt;
&lt;p&gt;
If not, please head over to &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt; to get additional support.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>idea15</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:15:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:12/1520342130683482</guid>
      <description>&lt;p&gt;
We'll need to make this as dead simple as possible both visually and in terms of language. If we have to hold everyone's hand through everything I'm fine with that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:50/1520341775728137</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12009#comment:47" title="Comment 47"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Retiring &lt;code&gt;load-scripts.php&lt;/code&gt; I think can also/rather be accomplished via service workers: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/36995" title="#36995: feature request: Support for Service Workers (accepted)"&gt;#36995&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right. This can be done in couple of different ways. The point is that it makes sense as part of refactoring how we load scripts in general.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It would make sense to me that if you register a script with an &lt;code&gt;async&lt;/code&gt; flag &lt;em&gt;and&lt;/em&gt; a non-empty &lt;code&gt;deps&lt;/code&gt; that this should result in a &lt;code&gt;_doing_it_wrong()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree we can add &lt;code&gt;async&lt;/code&gt; when registering scripts that don't have any dependencies and can never be used as a dependency. This makes most sense for default core scripts that plugins can use.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just to be clear, I'm talking about WP script dependencies generally not &lt;code&gt;load-scripts.php&lt;/code&gt; specifically. I think there is good value in adding &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;defer&lt;/code&gt; support to the existing &lt;code&gt;WP_Scripts&lt;/code&gt; system so that we can take advantage of them now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes but &lt;code&gt;load-scripts.php&lt;/code&gt; is an integral part of how we load scripts. Using &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;defer&lt;/code&gt; will have to pull a script out of there (prevent concatenation) and break the execution order. We can't do that for any of the default scripts, see the previous comment.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since you noted that less than 25% of the Web is on HTTP/2, I don't think we should let it be the blocker for us to encourage best practices now for script loading for themes and plugins via &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;defer&lt;/code&gt;. HTTP/2 definitely won't be available before Gutenberg.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yep, I realise that. Refactoring how we load scripts will slow down 3/4 of the sites currently. However looking at the speed HTTP/2 is being implemented, that number will be quite lower in six months, and possibly be less than 50% by the end of the year.
&lt;/p&gt;
&lt;p&gt;
I also agree with @mor10 that implementing it will give another push to faster switching to HTTP/2 everywhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43476 (Fix parentheses in post status links for RTL) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43476#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43476#comment:2/1520341760317489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It can happen in any other place where parentheses are used with English words in an RTL locale.
&lt;/p&gt;
&lt;p&gt;
Instead of patching these instances separately, I think it's better to encourage translation editors to finish the translation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:11/1520341741624098</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43435/privacytoolsmaybe.png" title="Attachment 'privacytoolsmaybe.png' in Ticket #43435"&gt;privacytoolsmaybe.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43435/privacytoolsmaybe.png" title="Download"&gt;​&lt;/a&gt; is just a quicky mockup of the simplest way I personally found to show everything on this screen. It is missing it's 2nd major tab that will host the incoming data from core + plugins, which will esentially be again a vertical tab list like the one shown.
&lt;/p&gt;
&lt;p&gt;
I've tried to use elements that already exist in the Admin's UI of course so people are familiar with them. They will already be confused with all the new incoming stuff so let's at lest try and keep the UI as 'baby-driven' as possible :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43477 (XyzTwapToggleRadio - switch to html view of new post is dead) created</title>
      
        <dc:creator>BenjaminVM</dc:creator>

      <pubDate>Tue, 06 Mar 2018 13:05:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43477</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43477/1520341511644535</guid>
      <description>&lt;p&gt;
While creating a new post - or editing an excisting one -, it's impossible to switch from the YSIWYG view to the HTML view.
&lt;/p&gt;
&lt;p&gt;
error rapport:
post-new.php:1362 Uncaught ReferenceError: XyzTwapToggleRadio is not defined
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
at HTMLDocument.&amp;lt;anonymous&amp;gt; (post-new.php:1362)
at i (load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2)
at Object.fireWith [as resolveWith] (load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2)
at Function.ready (load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2)
at HTMLDocument.K (load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(anonymous) @ post-new.php:1362
i @ load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2
fireWith @ load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2
ready @ load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2
K @ load-scripts.php?c=1&amp;amp;load[]=jquery-core,jquery-migrate,utils,jquery-ui-core&amp;amp;ver=4.9.4:2
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #8592,​43474 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 06 Mar 2018 12:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=8592%2C43474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=8592%2C43474/1520341156417622</guid>
      <description>duplicate: &lt;p&gt;
Hi @w888bar, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8592" title="#8592: defect (bug): Private Pages not listed in the Parent dropdown (assigned)"&gt;#8592&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>privacytoolsmaybe.png attached to Ticket #43435</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 12:29:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43435/privacytoolsmaybe.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43435/privacytoolsmaybe.png/1520339380408544</guid>
      <description>&lt;p&gt;
simple starter design maybe
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 06 Mar 2018 12:10:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:49/1520338214932102</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12009#comment:48" title="Comment 48"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For clarity: We should not blanket &lt;code&gt;defer&lt;/code&gt; all scripts. A decision as to what approach is best (default, &lt;code&gt;async&lt;/code&gt;, or &lt;code&gt;defer&lt;/code&gt;) needs to be done on a script-by-script basis to optimize performance.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think so. Mixing the "old" and "new" way of adding scripts will result in a big mess. A typical user case:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I enqueue myscript.js to load the old fashioned way in the footer.
&lt;/li&gt;&lt;li&gt;It depends on &lt;code&gt;jquery-ui-dialog&lt;/code&gt; which depends on most of jQuery UI.
&lt;/li&gt;&lt;li&gt;However another plugin decides it wants to load &lt;code&gt;jquery-ui-position&lt;/code&gt; with &lt;code&gt;defer&lt;/code&gt;. Deferred scripts will be executed after the footer scripts which breaks the execution order for myscript.js and possibly some of the other dependencies.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
To prevent this from happening we will have to actively &lt;strong&gt;ban&lt;/strong&gt; use of &lt;code&gt;defer&lt;/code&gt; for all default scripts in core (not even sure we can do that easily).
&lt;/p&gt;
&lt;p&gt;
In that case, what would be the benefits of a plugin adding its own script with &lt;code&gt;defer&lt;/code&gt;?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;All core dependencies will still have to be loaded in the footer.
&lt;/li&gt;&lt;li&gt;HTTP2 won't work on 75% of the sites, it will end up slowing them down.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Where is the optimization here? Isn't that rather saying: "We added support for &lt;code&gt;defer&lt;/code&gt; but it will not work the way it should".
&lt;/p&gt;
&lt;p&gt;
I'm going to repeat myself: if we want to make this better we should "go for broke", refactor script-loader and fully implement loading of scripts as it should be in 2018. No point of doing little things that don't make much of a difference :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43476 (Fix parentheses in post status links for RTL) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 11:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43476#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43476#comment:1/1520335068384027</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The screenshot in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43476/su.JPG" title="Attachment 'su.JPG' in Ticket #43476"&gt;su.JPG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43476/su.JPG" title="Download"&gt;​&lt;/a&gt; shows the issue.
&lt;/p&gt;
&lt;p&gt;
The screenshot in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43476/su-fix.jpg" title="Attachment 'su-fix.jpg' in Ticket #43476"&gt;su-fix.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43476/su-fix.jpg" title="Download"&gt;​&lt;/a&gt; shows a possible fix, if the parentheses should be placed on the left side. Here I tested the &lt;code&gt;unicode-bidi&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.subsubsub a .count {
    unicode-bidi: embed;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>su-fix.jpg attached to Ticket #43476</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 11:13:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43476/su-fix.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43476/su-fix.jpg/1520334813119278</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>su.JPG attached to Ticket #43476</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 11:11:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43476/su.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43476/su.JPG/1520334676842276</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43476 (Fix parentheses in post status links for RTL) created</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 06 Mar 2018 11:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43476</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43476/1520334438262728</guid>
      <description>&lt;p&gt;
When switching to a RTL language, the parentheses in the post status links can become mixed up, when the status is not translated.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;How to replicate the issue?&lt;/strong&gt; Switch to e.g. the &lt;em&gt;Azərbaycan dili&lt;/em&gt; language that is missing the &lt;em&gt;Draft&lt;/em&gt; post status translation.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Where to see the issue?:&lt;/strong&gt; Visit the &lt;code&gt;wp-admin/edit.php&lt;/code&gt; and check out the parentheses in the &lt;em&gt;Draft&lt;/em&gt; post status link.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43475 (Outdated browser when using Firefox enhanced privacy) created</title>
      
        <dc:creator>julienlusson</dc:creator>

      <pubDate>Tue, 06 Mar 2018 10:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43475/1520333951444090</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
When using latest Firefox version with the privacy.resistFingerprinting (&lt;a class="ext-link" href="https://wiki.mozilla.org/Security/Fingerprinting"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wiki.mozilla.org/Security/Fingerprinting&lt;/a&gt;) to true, the user agent is changed to the latest ESR version of Firefox so we have a warning about obsolete browser in the WP admin dashboard.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) updated</title>
      
        <dc:creator>mikejolley</dc:creator>

      <pubDate>Tue, 06 Mar 2018 10:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437#comment:1/1520332478750707</guid>
      <description>&lt;p&gt;
The 'confirm' action part of this is being worked on in &lt;a href="https://core.trac.wordpress.org/ticket/43443"&gt;https://core.trac.wordpress.org/ticket/43443&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This issue is for using that, then taking action based on the confirmed link.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42707 (Show taxonomy visibility information in the REST API) reopened</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Tue, 06 Mar 2018 10:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42707#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42707#comment:10/1520331084691943</guid>
      <description>&lt;p&gt;
There's a typo in the first description string:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'The visibility settings for the taxomonmy.'
&lt;/pre&gt;&lt;p&gt;
Should be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'The visibility settings for the taxonomy.'
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #40245 (Youtube embeds lack title attribute) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 06 Mar 2018 09:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40245#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40245#comment:24/1520329669685701</guid>
      <description>&lt;p&gt;
Why is an existing title attribute being replaced in that patch? Shouldn't this only add missing attributes instead of overriding the provided ones?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43442_delete.diff attached to Ticket #43442</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 09:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43442/43442_delete.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43442/43442_delete.diff/1520329118554325</guid>
      <description>&lt;p&gt;
simple function for deleting comments by email
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 09:34:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:5/1520328883017781</guid>
      <description>&lt;p&gt;
First of all I was going to merge this idea with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43442" title="#43442: enhancement: Add tools for anonymizing of commenters (closed: fixed)"&gt;#43442&lt;/a&gt; as well by creating a single function that handles an $arg as an action. So 1 function could tackle deletion/anonymization/export/display of comments depending on what we want for the Tools page: for example &lt;code&gt;handle_comments( some@where.com, 'delete' );&lt;/code&gt; etc. This would've been easy BUT!
&lt;/p&gt;
&lt;p&gt;
@netweb brought to my attention on this ticket that there might me 10.000 comments and because of that we should consider using the Export API that already works with batches so it should be perfect for websites with massive ammounts of comments etc instead of re-creating something that exists.
&lt;/p&gt;
&lt;p&gt;
The thing is that the current Export API is only handling WXR but there's already a ticket around for -oh well long-enough- to enable more support for extra files / outputs &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22435" title="#22435: enhancement: Export API (new)"&gt;#22435&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'd like @azaozz and @allendav inputs if possible on this ( and everybody else that likes to follow along it be great of course! ), since we had the chat last night to see what is best fitting for now as we're working under a deadline etc. I'm not very well versed in all matters of core still so your inputs will definitely give a better opinion and shed a light somehow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43228 (register_theme_directory() needs to delete the `theme_roots` transient) reopened</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Tue, 06 Mar 2018 08:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43228#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43228#comment:6/1520326368441624</guid>
      <description>&lt;p&gt;
Calling &lt;code&gt;wp_clean_themes_cache()&lt;/code&gt; this early in the load process renders the filter &lt;code&gt;'extra_themes_headers'&lt;/code&gt; in &lt;code&gt;get_file_data()&lt;/code&gt; of wp-includes/functions.php useless as a call from any other source.
&lt;/p&gt;
&lt;p&gt;
@johnbillion this breaks stuff. Try adding any additional theme headers using the above filter hook and you will see.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #40807 (Starter content: Allow for setting a "parent" for pages (and other ...) updated</title>
      
        <dc:creator>benoitchantre</dc:creator>

      <pubDate>Tue, 06 Mar 2018 08:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40807#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40807#comment:11/1520325856694841</guid>
      <description>&lt;p&gt;
I haven't tested the patch, but I would like to mention that it would be great to support sub menu items.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 07:46:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:4/1520322360079536</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 07:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:3/1520321909058871</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43440/43440.1.diff" title="Attachment '43440.1.diff' in Ticket #43440"&gt;43440.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43440/43440.1.diff" title="Download"&gt;​&lt;/a&gt; just cleans up the process a bit and returns a JSON with the:
&lt;/p&gt;
&lt;p&gt;
date
author_email
author_name
author_url
comment
&lt;/p&gt;
&lt;p&gt;
I added the date as a means of reference, I'm sure it will somehow be needed eventually if somebody comes to the use of the export function.
&lt;/p&gt;
&lt;p&gt;
As an example if we do :
&lt;/p&gt;
&lt;pre class="wiki"&gt;$exports = export_comments( 'wapuu@wordpress.example' );
error_log( print_r( $exports, true ) );
&lt;/pre&gt;&lt;p&gt;
We can get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[
   {
      "date":"2018-03-06 06:58:01",
      "author_email":"wapuu@wordpress.example",
      "author_name":"A WordPress Commenter",
      "author_url":"https:\/\/wordpress.org\/",
      "comment":"Hi, this is a comment.\r\nTo get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.\r\nCommenter avatars come from Gravatar&amp;lt;\/a&amp;gt;."
   },
   {
      "date":"2018-03-06 06:58:01",
      "author_email":"wapuu@wordpress.example",
      "author_name":"A WordPress Commenter",
      "author_url":"https:\/\/wordpress.org\/",
      "comment":"Hi, this is a comment.\r\nTo get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.\r\nCommenter avatars come from Gravatar&amp;lt;\/a&amp;gt;."
   }
]
&lt;/pre&gt;&lt;p&gt;
We can either show this JSON for copy/paste in a placeholder or make it a file etc on the actual Tools page.
&lt;/p&gt;
&lt;p&gt;
IMHO as this pretty much extends the current comments functions either way, it might be useful in the future in different areas as well if we want to add more things or make it create a wider range of options / exports.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43440.1.diff attached to Ticket #43440</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 07:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43440/43440.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43440/43440.1.diff/1520321465664932</guid>
      <description>&lt;p&gt;
minor fixes and correct json output
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43228 (register_theme_directory() needs to delete the `theme_roots` transient) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Tue, 06 Mar 2018 07:06:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43228#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43228#comment:5/1520319981387785</guid>
      <description>&lt;p&gt;
The call to &lt;code&gt;wp_clean_themes_cache()&lt;/code&gt; shouldn't be done on installing I think, so need somthing like
&lt;/p&gt;
&lt;pre class="wiki"&gt;	if ( ! wp_installing() ) {
		wp_clean_themes_cache();
	}
&lt;/pre&gt;&lt;p&gt;
otherwise get WordPress database error notices from &lt;code&gt;wpdb&lt;/code&gt;, see &lt;a class="ext-link" href="https://travis-ci.org/wp-cli/wp-cli/jobs/349573438"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/wp-cli/wp-cli/jobs/349573438&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40245 (Youtube embeds lack title attribute) updated</title>
      
        <dc:creator>bamadesigner</dc:creator>

      <pubDate>Tue, 06 Mar 2018 05:47:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40245#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40245#comment:23/1520315268699837</guid>
      <description>&lt;p&gt;
Ah! Great catch. I've uploaded the new patch. Thanks!
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40245/for40245updated.diff" title="Attachment 'for40245updated.diff' in Ticket #40245"&gt;for40245updated.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40245/for40245updated.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>for40245updated.diff attached to Ticket #40245</title>
      
        <dc:creator>bamadesigner</dc:creator>

      <pubDate>Tue, 06 Mar 2018 05:47:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40245/for40245updated.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40245/for40245updated.diff/1520315225411563</guid>
      <description>&lt;p&gt;
Updated patch for 40245
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43432 (Streamline tests with installation skips) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Tue, 06 Mar 2018 05:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43432#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43432#comment:3/1520314695427105</guid>
      <description>&lt;p&gt;
Indeed, some of the tests are non-repeatable on a dirty install as they either rely on clean state, or get messed up due to state left by following tests. This can be partially checked by adding &lt;code&gt;--repeat 2&lt;/code&gt; when running &lt;code&gt;phpunit&lt;/code&gt;, which runs every test twice in a row.
&lt;/p&gt;
&lt;p&gt;
However, the purpose of this skip install is to save time while developing a patch for a test case (or suite maybe, group). At least that's what I do, I don't run the whole test suite every while developing a patch, I just run a specific test. After I'm satisfied with the test, I run the whole suite.
&lt;/p&gt;
&lt;p&gt;
So while developing I'd be doing &lt;code&gt;WP_TESTS_SKIP_INSTALL=1 phpunit --filter test_ticket_43432&lt;/code&gt;, which takes a second or two, and then when I'm ready I run a final regular &lt;code&gt;phpunit&lt;/code&gt; that takes 5-6 minutes making sure my patch doesn't break anything.
&lt;/p&gt;
&lt;p&gt;
Over the years I've found myself adding variations of the skip install flag time and time again  to help streamline development for core tests and plugin tests. In fact I wrote patches for GravityView and Gravity Forms fixing non-repeatable tests, and I've been running both suites without reinstalling core for months at a time without any issues whatsoever.
&lt;/p&gt;
&lt;p&gt;
Coincidentally, using a dirty install while writing tests will ensure that a new test a developer is writing is repeatable and doesn't depend on a clean database or some quirky global state.
&lt;/p&gt;
&lt;p&gt;
In short, full tests: long run, full reinstall, not much gain. Single test: short run, no reinstall, potentially around 50-80% time saved per run. Hope this makes sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 05:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:2/1520313723779969</guid>
      <description>&lt;p&gt;
Good morning!
&lt;/p&gt;
&lt;p&gt;
As we're waiting for the Tools page to get created I thought of going forward a bit with this to at least have a snippet, broad idea of what we could easily do. Then we can easily implement it inside the page and adjust it to our needs of export.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43440/43440.diff" title="Attachment '43440.diff' in Ticket #43440"&gt;43440.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43440/43440.diff" title="Download"&gt;​&lt;/a&gt; adds a simple function that utilizes the already-existing &lt;code&gt;get_comments()&lt;/code&gt; and returns either the json or just a notification string for now. So basically it will return anything that &lt;code&gt;get_comments()&lt;/code&gt; returns as well.
&lt;/p&gt;
&lt;p&gt;
The idea of this is to be able to do something like :
&lt;/p&gt;
&lt;pre class="wiki"&gt;$export = export_comments('wapuu@wordpress.example');
var_dump( $export );
&lt;/pre&gt;&lt;p&gt;
I will clean this up a bit and proceed to return the array/json we want for this asap.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43440.diff attached to Ticket #43440</title>
      
        <dc:creator>xkon</dc:creator>

      <pubDate>Tue, 06 Mar 2018 05:17:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43440/43440.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43440/43440.diff/1520313468258680</guid>
      <description>&lt;p&gt;
export comments
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Tue, 06 Mar 2018 04:20:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:48/1520310057688548</guid>
      <description>&lt;p&gt;
For clarity: We should not blanket &lt;code&gt;defer&lt;/code&gt; all scripts. A decision as to what approach is best (default, &lt;code&gt;async&lt;/code&gt;, or &lt;code&gt;defer&lt;/code&gt;) needs to be done on a script-by-script basis to optimize performance. The behavior of the two options is significantly different and can be taken advantage of in different circumstances.
&lt;/p&gt;
&lt;p&gt;
Separately, just to add more numbers to the convo,  the Can I Use stats on support are relevant: &lt;a class="ext-link" href="https://caniuse.com/#search=http2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://caniuse.com/#search=http2&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43474 (Labelling a Parent for a page) created</title>
      
        <dc:creator>w888bar</dc:creator>

      <pubDate>Tue, 06 Mar 2018 01:07:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43474/1520298454538044</guid>
      <description>&lt;p&gt;
I wonder why i can only see pages that are made public when wanting to apply a parent value to a new page.  I have several pages under construction but can only apply a parent value if the parent page is visible to public.  If it is private, it is not available as a parent.
This surely should be visible while editing despite being private to the public?
Currently you have to make the parent page public for a minute or so in order to select it as parent to a new page and then make it private again if you are not ready to publish
This is a big problem i think and i have yet to find a solution
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 06 Mar 2018 01:06:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:47/1520298371020546</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12009#comment:46" title="Comment 46"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Currently there are few tickets that touch on some parts of updating/refactoring script-loader. IMHO best would be to combine them and really refactor it. Implement HTTP/2 + &lt;code&gt;defer&lt;/code&gt;, output all in the head, retire load-scripts.php, etc. etc. Ideally this should be done before Gutenberg lands in core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Retiring &lt;code&gt;load-scripts.php&lt;/code&gt; I think can also/rather be accomplished via service workers: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/36995" title="#36995: feature request: Support for Service Workers (accepted)"&gt;#36995&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;code&gt;async&lt;/code&gt; attribute cannot be used in script-loader because the script doesn't follow execution order. If you are adding a stand-alone script that has no dependencies and other scripts don't depend on it, there is no point adding it to script loader at all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would make sense to me that if you register a script with an &lt;code&gt;async&lt;/code&gt; flag &lt;em&gt;and&lt;/em&gt; a non-empty &lt;code&gt;deps&lt;/code&gt; that this should result in a &lt;code&gt;_doing_it_wrong()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
It makes sense to me to use the WP dependency system even if there are no dependencies because it provides a standard programatic interface for registering and outputting scripts. Core or a plugin could register an &lt;code&gt;async&lt;/code&gt; script and then it or other plugins could just simply enqueue it and be done with it, as is standard in WP. A plugin could check to see if a script is already registered and prevent registering and enqueueing their own if it already exists. Also no worrying about adding an action to print a manually-crafted &lt;code&gt;script&lt;/code&gt; tag. No (less) worrying about duplicated scripts being output.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Currently there are few tickets that touch on some parts of updating/refactoring script-loader. IMHO best would be to combine them and really refactor it. Implement HTTP/2 + &lt;code&gt;defer&lt;/code&gt;, output all in the head, retire load-scripts.php, etc. etc. Ideally this should be done before Gutenberg lands in core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to be clear, I'm talking about WP script dependencies generally not &lt;code&gt;load-scripts.php&lt;/code&gt; specifically. I think there is good value in adding &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;defer&lt;/code&gt; support to the existing &lt;code&gt;WP_Scripts&lt;/code&gt; system so that we can take advantage of them now. Since you noted that less than 25% of the Web is on HTTP/2, I don't think we should let it be the blocker for us to encourage best practices now for script loading for themes and plugins via &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;defer&lt;/code&gt;. HTTP/2 definitely won't be available before Gutenberg.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>bridgetwillard</dc:creator>

      <pubDate>Tue, 06 Mar 2018 00:02:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:52/1520294556434596</guid>
      <description>&lt;p&gt;
Hi Core,
&lt;/p&gt;
&lt;p&gt;
Felix reached out to the Marketing Team.
&lt;/p&gt;
&lt;p&gt;
I agree with @mcdwayne that the phrase "to the letter" has "a tone" as he puts it.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0GKJ7TFA/p1520289924000169?thread_ts=1520289539.000184&amp;amp;cid=C0GKJ7TFA"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C0GKJ7TFA/p1520289924000169?thread_ts=1520289539.000184&amp;amp;cid=C0GKJ7TFA&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'll be more bold and say it's condescending at best frustrating at worst. As a blogger first, not a Marketing Team Rep, I would have no idea what to do and even if I saw this, I would be frustrated.
&lt;/p&gt;
&lt;p&gt;
I prefer the text in WHIP core2.png since PHP versioning is part server-side.
&lt;/p&gt;
&lt;p&gt;
The admin notice is a good way for basic awareness. The user should ask their host. That communication from host customer to host should help with voluntary migration.
&lt;/p&gt;
&lt;p&gt;
I love the landing page that it takes the user to and that text is informative and friendly.
&lt;/p&gt;
&lt;p&gt;
Thanks for letting us take a look.
&lt;/p&gt;
&lt;p&gt;
Kindly,
&lt;/p&gt;
&lt;p&gt;
Bridget
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>