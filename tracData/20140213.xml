<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #27122 (Optimization for PHP FPM) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:59:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122#comment:1/1392335963690915</guid>
      <description>&lt;p&gt;
I don't think this is a safe optimization to make unfortunately.
&lt;/p&gt;
&lt;p&gt;
Consider the scenario where &lt;code&gt;wp_ob_end_flush_all()&lt;/code&gt; is called mid-pageload by plugins for example, which we also do in core:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/misc.php#L290"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/misc.php#L290&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-upgrader-skins.php#L251"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-upgrader-skins.php#L251&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Perhaps a safer option, would be to conditionally add &lt;code&gt;fastcgi_finish_request&lt;/code&gt; to the &lt;code&gt;shutdown&lt;/code&gt; action at priority 2? as you can see &lt;code&gt;wp_ob_end_flush_all ()&lt;/code&gt; being used here:
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/default-filters.php#L250"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/default-filters.php#L250&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
What do you think @dunglas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:06:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:12/1392332773332408</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27178" title="Multisite: Add get_network_by_path() and wp_get_network() to begin ..."&gt;27178&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Add get_network_by_path() and wp_get_network() to begin cleanup of multisite load.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Tries to get network detection under control by simplifying wpmu_current_site(). It now also pops off each subdomain to find a more general match. Adds unit tests for get_network_by_path() and a new network factory for unit tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Much of this is likely to change in 3.9 as more of ms-load.php and ms-settings.php gets hacked to bits.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props jeremyfelt.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27003" title="#27003: task (blessed): Introduce wp_get_network() and begin cleanup of multisite load (closed: fixed)"&gt;#27003&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27178]: Multisite: Add get_network_by_path() and wp_get_network() to begin ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:06:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27178</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27178/1392332772202133</guid>
      <description>&lt;p&gt;
Multisite: Add get_network_by_path() and wp_get_network() to begin cleanup of multisite load.
&lt;/p&gt;
&lt;p&gt;
Tries to get network detection under control by simplifying wpmu_current_site(). It now also pops off each subdomain to find a more general match. Adds unit tests for get_network_by_path() and a new network factory for unit tests.
&lt;/p&gt;
&lt;p&gt;
Much of this is likely to change in 3.9 as more of ms-load.php and ms-settings.php gets hacked to bits.
&lt;/p&gt;
&lt;p&gt;
props jeremyfelt.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27003" title="#27003: task (blessed): Introduce wp_get_network() and begin cleanup of multisite load (closed: fixed)"&gt;#27003&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>functions.diff attached to Ticket #27122</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Thu, 13 Feb 2014 23:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27122/functions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27122/functions.diff/1392332406881562</guid>
      <description>&lt;p&gt;
wp-includes/functions.php patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27122 (Optimization for PHP FPM) created</title>
      
        <dc:creator>dunglas</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:59:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27122/1392332361701176</guid>
      <description>&lt;p&gt;
This patch make &lt;code&gt; wp_ob_end_flush_all &lt;/code&gt; calling &lt;code&gt; fastcgi_finish_request &lt;/code&gt; instead of &lt;code&gt; ob_end_flush &lt;/code&gt; when php-fpm is used.
&lt;code&gt; fastcgi_finish_request &lt;/code&gt; flush the buffers &lt;strong&gt;and&lt;/strong&gt; close the connection. This tweak increases page speed.
It also allows to run heavy tasks such as sending mail, writing logs or making complex calculations after the end of the request without slowing down the whole page load.
&lt;/p&gt;
&lt;p&gt;
Symfony uses this tweak too, see this PR FOR further details: &lt;a class="ext-link" href="https://github.com/symfony/symfony/issues/1180"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/symfony/symfony/issues/1180&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:7/1392330443633701</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27116#comment:6" title="Comment 6"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, this is a regression, as the tabs look like in your "after patch" screenshot in WP 3.8, so we should restore that look.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not seeing that - attached a screenshot from 3.8.1. There are two changes from your patch - there's the bottom border to the wrapper, yes, but then the other tabs above look like buttons, so that seems wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2014-02-13 at 5.24.06 PM.png attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%205.24.06%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%205.24.06%20PM.png/1392330306954703</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:6/1392329330384037</guid>
      <description>&lt;p&gt;
It will look worse if the text in the tabs has different lengths, as the tabs then overlap in a different way.
Also, this is a regression, as the tabs look like in your "after patch" screenshot in WP 3.8, so we should restore that look.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 22:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:5/1392328861585092</guid>
      <description>&lt;p&gt;
I'm not convinced that it looks any better to leave the border there. I uploaded some screenshots - I don't know how you're getting the image you attached. Horizontal tabs have responsive issues, yes, but I don't think the merge broke anything there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screen Shot 2014-02-13 at 4.55.59 PM.png attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 21:59:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.55.59%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.55.59%20PM.png/1392328748576531</guid>
      <description>&lt;p&gt;
Wrapped tabs, after patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2014-02-13 at 4.57.30 PM.png attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 21:58:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.57.30%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/Screen%20Shot%202014-02-13%20at%204.57.30%20PM.png/1392328731886962</guid>
      <description>&lt;p&gt;
Wrapped tabs, before patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27003.10.diff attached to Ticket #27003</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 21:22:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27003/27003.10.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27003/27003.10.diff/1392326551306244</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>sccr410</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:58:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:75/1392325089693063</guid>
      <description>&lt;p&gt;
The point of this is for a specific custom image size, set a crop location. So I see absolutely no need for an editor to be involved with what is being asked here. I want to be able to create an image size that shrinks the image and crop is to the top - so people can start getting their foreheads back. This request is not asking to be able to upload an image and then manipulate all the various image sizes like the comp that @chriswallace posted. It is to have an option in the add_image_size function to set the crop position of the image which automatically is generated. Seems like people are over thinking this request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:57:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:74</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:74/1392325077397414</guid>
      <description>&lt;p&gt;
And I think we are hijacking both tickets. There have been a few explorations around individual image size cropping here and there, and I love seeing them and would like to find the right solution, but I feel so bad that what should have been a straightforward change to allow &lt;strong&gt;programmatic&lt;/strong&gt; crop position definitions has thrown us down such a giant rabbithole.
&lt;/p&gt;
&lt;p&gt;
Being willing to iterate and get smaller, more achievable pieces done sooner is not antithetical to eventual larger changes. Can we please stop acting like it is?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19721 (WordPress should support multiple or nested plugin directories) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19721#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19721#comment:5/1392324621613705</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:34:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:73</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:73/1392323680119440</guid>
      <description>&lt;p&gt;
I believe it's best for core to drop editing the image sizes. For me that is better for plugins to take care of. Also how it should be done in UI is something that should be addressed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21811" title="#21811: task (blessed): Add image editing UI to the media modal (closed: fixed)"&gt;#21811&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>helgatheviking</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:72</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:72/1392323441092508</guid>
      <description>&lt;p&gt;
+1 for Chris' mockup. I have need to be able to crop the different image sizes differently. I think I have used the Post Thumbnail Editor, but it didn't feel "native". The thing I might add would be a focal point... maybe the automatic cropping could be based on that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6331 (TinyMCE should have a code button) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:28:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6331#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6331#comment:16/1392323281421675</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by cs_shadow. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791659"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:10/1392322367071252</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27177" title="TinyMCE: add support for audio and video shortcodes without closing, ..."&gt;27177&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: add support for audio and video shortcodes without closing, fix jshint warning, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27177]: TinyMCE: add support for audio and video shortcodes without closing, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 20:12:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27177</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27177/1392322366394750</guid>
      <description>&lt;p&gt;
TinyMCE: add support for audio and video shortcodes without closing, fix jshint warning, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>27116.2.patch attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.2.patch/1392320916252834</guid>
      <description>&lt;p&gt;
Corrected patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:4/1392320832102405</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, the removed bottom border is for the individual tabs. This becomes necessary once the tabs wrap to two lines (due to their number). In that case, there's no &lt;code&gt;.nav-tab-active&lt;/code&gt; tab (which explicitely has a bottom border) that then basically pushes all the other ones up one pixel.
I'm using HTML like the following in a plugin (coming from the themes.php HTML for this from previous releases). You can try it with this &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; title on any admin screen (i.e. replace the first &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; in the &lt;code&gt;div.wrap&lt;/code&gt; in the Chrome Dev Tools, then reduce the browser width to make the tabs wrap):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h2 class="nav-tab-wrapper"&amp;gt;
&amp;lt;a class="nav-tab nav-tab-active" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;
&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;&amp;lt;a class="nav-tab" href="http://..."&amp;gt;Foobar&amp;lt;/a&amp;gt;
&amp;lt;/h2&amp;gt;
&lt;/pre&gt;&lt;p&gt;
For the Thickbox tabs:
You are right,&lt;code&gt;border-bottom&lt;/code&gt; is correct here. I had accidentally remove &lt;code&gt;-bottom&lt;/code&gt; as well and didn't notice that it adds the border around the entire &lt;code&gt;#media-upload-header&lt;/code&gt; as the colors are pretty similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:90/1392319966020656</guid>
      <description>&lt;p&gt;
I can get test_get_terms_grandparent_zero to fail in isolation, and consistently. It passes for me when the get_terms() there receives hide_empty =&amp;gt; false.
&lt;/p&gt;
&lt;p&gt;
Let's take the time to get this right (with patches for review) before another commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>rickalee</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:71/1392319488243232</guid>
      <description>&lt;p&gt;
Chris' illustration looks quite similar to workflow for Post Thumbnail Editor plugin.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wordpress.org/plugins/post-thumbnail-editor/screenshots/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/plugins/post-thumbnail-editor/screenshots/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>chriswallace</dc:creator>

      <pubDate>Thu, 13 Feb 2014 19:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:70/1392319181389903</guid>
      <description>&lt;p&gt;
So what if instead of adding a way to define the crop with a filter we instead give the user the ability to crop the various image sizes themselves?
&lt;/p&gt;
&lt;p&gt;
This is just a rough wireframe of the idea, but imagine uploading an image and being presented with this screen:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg"&gt;&lt;img src="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg" alt="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg" crossorigin="anonymous" title="http://f.cl.ly/items/0S3Q030o462E3X0R2r2v/crop-tool-single-image-upload.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The user would be able to preview the crop for all image sizes and decide if anything needs to be done, then if they decide to edit the crop, they would easily be able to do so for any image sizes added by themes, plugins or Core, all in one screen.
&lt;/p&gt;
&lt;p&gt;
I know there are workflow issues here for multiple images, but it could be an accordion drop-down type list for multiple images and perhaps allow users to bypass this entire screen by having a checkbox for "Crop my images automatically" that is enabled by default.
&lt;/p&gt;
&lt;p&gt;
The other issue is if users have Regenerate Thumbnails installed and are changing the dimensions of their images which could potentially screw up their manual cropping. There would need to be a way to edit the crops or set new ones if a user changes their theme and wants to continue using the images they already have loaded in.
&lt;/p&gt;
&lt;p&gt;
Anyway, just a thought. Take it or leave it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:89</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:89/1392316942827393</guid>
      <description>&lt;p&gt;
Just for good measure, here's a number of Travis CI PHP 5.2 builds since this commit landed that show the same sort of random test failures throughout term-specific unit tests:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18787522#L888"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18787522#L888&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18788560#L1141"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18788560#L1141&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18789439#L1186"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18789439#L1186&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18790784#L1190"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18790784#L1190&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:88</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:88/1392315948332859</guid>
      <description>&lt;p&gt;
You might need to run it a few times (it's not a consistent failure), Travis CI occasionally fails on other taxonomy tests related to caching too, and I can occasionally reproduce those locally as well:
&lt;/p&gt;
&lt;p&gt;
For example, running &lt;code&gt;phpunit --group taxonomy&lt;/code&gt; four times in a row on the same trunk revision:
&lt;a class="ext-link" href="https://gist.github.com/tierra/8980745"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://gist.github.com/tierra/8980745&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notably:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Term_getTerms::test_get_terms_seven_levels_deep
Failed asserting that an array is not empty.
/vagrant/wordpress/tests/phpunit/tests/term/getTerms.php:311
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Term_getTerms::test_get_terms_grandparent_zero
Failed asserting that an array is not empty.
/vagrant/wordpress/tests/phpunit/tests/term/getTerms.php:290
&lt;/pre&gt;&lt;p&gt;
FWIW, this is PHP 5.2.17
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:3/1392314960034298</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Also, I would go with just border-bottom as per before with div#media-upload-header - uploaded an amended patch for you to go from if we need to do more for the nav tab issue you described.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27116.diff attached to Ticket #27116</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:08:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.diff/1392314902393616</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:2/1392314865533685</guid>
      <description>&lt;p&gt;
I'm not having the issue with the nav tabs bottom border elsewhere - the border-bottom you removed is for an individual tab, not the entire wrapper. Where are you seeing this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26936 (Create new dashicons) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26936#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26936#comment:25/1392314437931031</guid>
      <description>&lt;p&gt;
Updated dashicons files: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26936/" title="Attachments of Ticket #26936"&gt;dashicons-update_2-13.zip&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26936/" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Courtesy of empireoflight.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>dashicons-update_2-13.zip attached to Ticket #26936</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 18:00:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26936/dashicons-update_2-13.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26936/dashicons-update_2-13.zip/1392314406484399</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #25169,â€‹27078,â€‹27121 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:56:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25169%2C27078%2C27121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25169%2C27078%2C27121/1392314190527508</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27176" title="Add `grunt precommit` for running front-end dev and test tasks before ..."&gt;27176&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add &lt;code&gt;grunt precommit&lt;/code&gt; for running front-end dev and test tasks before commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This includes autoprefixer, imagemin, jshint, and qunit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props jorbin.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27121" title="#27121: enhancement: Add a grunt task that encompasses all pre-commit activities (closed: fixed)"&gt;#27121&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [27176]: Add `grunt precommit` for running front-end dev and test tasks before ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:56:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27176</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27176/1392314189088571</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;grunt precommit&lt;/code&gt; for running front-end dev and test tasks before commit.
&lt;/p&gt;
&lt;p&gt;
This includes autoprefixer, imagemin, jshint, and qunit.
&lt;/p&gt;
&lt;p&gt;
props jorbin.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27121" title="#27121: enhancement: Add a grunt task that encompasses all pre-commit activities (closed: fixed)"&gt;#27121&lt;/a&gt;. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:49:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:4/1392313745018040</guid>
      <description>&lt;p&gt;
Patch updated based on irc conversation.  It is only focussing on front end tasks and phpunit takes a while, so we are leaving that off.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26936 (Create new dashicons) updated</title>
      
        <dc:creator>scamartist26</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26936#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26936#comment:24/1392313699152894</guid>
      <description>&lt;p&gt;
Octocat would be a great addition to the core set of social networks. &lt;a class="ext-link" href="https://github.com/logos"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/logos&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27121.2.diff attached to Ticket #27121</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:41:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27121/27121.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27121/27121.2.diff/1392313299123892</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:87</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:87/1392313236853798</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14485#comment:86" title="Comment 86"&gt;bpetty&lt;/a&gt;: that's strange. Any more info would be helpful, I get the green light on 5.2.14:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$ /opt/php/5.2.14/bin/php /usr/bin/phpunit tests/phpunit/tests/term/cache.php
OK (3 tests, 300 assertions)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:3/1392312602478408</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791485"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:30:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:18/1392312602195979</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791484"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:14/1392312601796466</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791483"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:27:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:2/1392312471222162</guid>
      <description>&lt;p&gt;
I had this locally already. Nice. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121#comment:1/1392312429791549</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The above patch sets four tasks (one of which contains multiple tasks) that are to be run.
&lt;/p&gt;
&lt;p&gt;
AutoPrefixer:core ( see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt; )
imagemin:core ( see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; )
jshnit
test (which runs both the phpunit tests and the qunit tests )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27121.diff attached to Ticket #27121</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27121/27121.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27121/27121.diff/1392312249637785</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27121 (Add a grunt task that encompasses all pre-commit activities) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 17:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27121/1392312228404746</guid>
      <description>&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt; , it is mentioned that autoprefixer and imagemin are designed to be run before commit. We should consolidate all the tasks that we expect to be run before a commit into one task so none of them are forgotten.
&lt;/p&gt;
&lt;p&gt;
This also makes it so patch creators can run the same steps as committers which will hopefully lead to to better patches that are easier to review and commit.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27119 (disabling wp_auth_check_load does not actually disable the auth check) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 13 Feb 2014 16:13:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27119#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27119#comment:2/1392308006766353</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/26050" title="#26050: defect (bug): Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues (new)"&gt;#26050&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screen-shot-2014-02-13-at-9-58-30-am.png attached to Ticket #26952</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26952/screen-shot-2014-02-13-at-9-58-30-am.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26952/screen-shot-2014-02-13-at-9-58-30-am.png/1392306621887474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20446 (Add comment form submit button class attribute) reopened</title>
      
        <dc:creator>ktabori</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20446#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20446#comment:6/1392305935949473</guid>
      <description>&lt;p&gt;
Id is not a class and this ticket isn't duplicate.
&lt;/p&gt;
&lt;p&gt;
It's a missed feature for templating, if you use bootstrap or other templating/css frameworks.
&lt;/p&gt;
&lt;p&gt;
I have tested the patch and it works fine.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27119 (disabling wp_auth_check_load does not actually disable the auth check) updated</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27119#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27119#comment:1/1392305144653545</guid>
      <description>&lt;p&gt;
You could do this, which disables the check entirely, but there will still be a heartbeat connection.
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_action( 'admin_enqueue_scripts', 'wp_auth_check_load' );
remove_filter( 'heartbeat_send',        'wp_auth_check' );
remove_filter( 'heartbeat_nopriv_send', 'wp_auth_check' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21352 (wp_lostpassword_url() on multisite) updated</title>
      
        <dc:creator>amandafrench</dc:creator>

      <pubDate>Thu, 13 Feb 2014 15:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21352#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21352#comment:16/1392304286735436</guid>
      <description>&lt;p&gt;
Thanks for these patches -- they've solved this annoying issue on my network.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21352#comment:10" title="Comment 10"&gt;jamescollins&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21352#comment:9" title="Comment 9"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21352#comment:3" title="Comment 3"&gt;wpmuguru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would prefer to see this send the link for the user's primary blog if they have one and the current site when they don't.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 for this approach.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;21352.diff&lt;/code&gt; implements this suggestion.
&lt;/p&gt;
&lt;p&gt;
If using WordPress multisite, use the user's primary blog (falling back to the current site when they don't have a primary blog).
If no-one is logged in, then the current site is used.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23292 (Media uploader loads full size image and slows down, please change to ...) updated</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Thu, 13 Feb 2014 14:48:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23292#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23292#comment:18/1392302913939119</guid>
      <description>&lt;p&gt;
It might be a good idea to default to the "Uploaded to this post" view instead of the "All Media Items" like it is now, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26821.2.diff attached to Ticket #26821</title>
      
        <dc:creator>enej</dc:creator>

      <pubDate>Thu, 13 Feb 2014 13:49:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26821/26821.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26821/26821.2.diff/1392299364017426</guid>
      <description>&lt;p&gt;
Second pass at screen.php file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 13 Feb 2014 10:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:4/1392287599901832</guid>
      <description>&lt;p&gt;
There's a good deal more than this. There's &lt;code&gt;codex.wordpress.org&lt;/code&gt;, &lt;code&gt;make.wordpress.org&lt;/code&gt;, and &lt;code&gt;planet.wordpress.org&lt;/code&gt; links too.
&lt;/p&gt;
&lt;p&gt;
Additionally, the feed URLs in &lt;code&gt;wp-admin/includes/dashboard.php&lt;/code&gt; shouldn't change in case the site can't perform outgoing SSL requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26944 (Dashboard "At a glance" widget ignores get_avatar_comment_types filter) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Thu, 13 Feb 2014 10:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26944#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26944#comment:4/1392286671224291</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26944#comment:3" title="Comment 3"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks good. But it's more an enhancement.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it is a bug, because if you add gravatar comment_types per filter you should get avatars for this comment_type in all places. But the widget does not show them.
&lt;/p&gt;
&lt;p&gt;
As an alternative the widget could use the same way as the get_avatar function in pluggable.php to check how to handle the comment (e.g. use the same filter to add comment_types, check for ID/email instead of just checking comment_type).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27120 (Add object cache to wp_nav_menu() items) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 09:46:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27120#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27120#comment:2/1392284762683119</guid>
      <description>&lt;p&gt;
There seems to be an object cache for the default fallback, so if your &lt;code&gt;theme_location&lt;/code&gt; isn't found, when nobody picked a menu location in the admin-ui, caching occurs as it should.
&lt;/p&gt;
&lt;p&gt;
If someone has defined the menu location and it matches &lt;code&gt;theme_location&lt;/code&gt;, there is no caching done pre-patch.
&lt;/p&gt;
&lt;p&gt;
The two queries being ran with each iteration of wp_nav_menu() as mentioned;
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT
	tr.object_id
FROM
	wp_term_relationships AS tr
INNER JOIN
	wp_term_taxonomy AS tt
		ON tr.term_taxonomy_id = tt.term_taxonomy_id
WHERE
	tt.taxonomy IN ('nav_menu')
AND
	tt.term_id IN ('2')
ORDER BY
	tr.object_id ASC
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT
	wp_posts.*
FROM
	wp_posts
WHERE
	1=1
AND
	wp_posts.ID IN (35,36,38,39,50,51,118,130,131,132,133,134)
AND
	wp_posts.post_type = 'nav_menu_item'
AND
	((wp_posts.post_status = 'publish'))
ORDER BY
	wp_posts.menu_order ASC
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 09:24:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:9/1392283444657848</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
...when written by hand, I always exclude them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then the regex will be quite a bit more interesting. Will need a recursion or a loop to catch edge cases like &lt;code&gt;[audio src="1.mp3"][audio src="2.mp3"][audio src="3.mp3"][/audio]&lt;/code&gt;. Will fix it tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27175]: Dev/build tools: Skip new backbone.js and underscore.js files during ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27175/1392281897752257</guid>
      <description>&lt;p&gt;
Dev/build tools: Skip new backbone.js and underscore.js files during jshint.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #24705 (wp_link_pages() does not showing active current element) updated</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:36:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24705#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24705#comment:9/1392280606665390</guid>
      <description>&lt;p&gt;
Hi All,
&lt;/p&gt;
&lt;p&gt;
I've uploaded an alternate patch, I was wondering if it may be better to name the class differently. I think &lt;code&gt;current-page-link&lt;/code&gt; is a better class name, however &lt;code&gt;paginate_links()&lt;/code&gt; creates links which have the &lt;code&gt;current&lt;/code&gt; class. In addition, I've added the class &lt;code&gt;page-numbers&lt;/code&gt; to the individual links and the current span as well.
&lt;/p&gt;
&lt;p&gt;
This way the output of this function will be compatible with the &lt;code&gt;paginate_links()&lt;/code&gt; function which allows for standardized CSS when developing themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post-template.diff attached to Ticket #24705</title>
      
        <dc:creator>danielpataki</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24705/post-template.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24705/post-template.diff/1392280447189480</guid>
      <description>&lt;p&gt;
Alternate Patch For Issue - different class name
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:17/1392280157504740</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27174" title="Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.
 ..."&gt;27174&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We'll be using it for two distinct tasks:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Core CSS files will keep prefixes. &lt;code&gt;grunt autoprefixer:core&lt;/code&gt; will update files directly in src/ as a pre-commit step, rather than doing it on build.
&lt;/li&gt;&lt;li&gt;Color CSS files will receive prefixes when they are built.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This commit:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds prefixes we were missing to core CSS.
&lt;/li&gt;&lt;li&gt;Removes prefixes that we no longer need from core CSS.
&lt;/li&gt;&lt;li&gt;Removes all prefixes from colors CSS.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
props ocean90.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27174]: Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.  ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:29:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27174/1392280156881806</guid>
      <description>&lt;p&gt;
Dev/build tools: Use grunt-autoprefixer for CSS vendor prefixes.
&lt;/p&gt;
&lt;p&gt;
We'll be using it for two distinct tasks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Core CSS files will keep prefixes. &lt;code&gt;grunt autoprefixer:core&lt;/code&gt; will update files directly in src/ as a pre-commit step, rather than doing it on build.
&lt;/li&gt;&lt;li&gt;Color CSS files will receive prefixes when they are built.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This commit:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds prefixes we were missing to core CSS.
&lt;/li&gt;&lt;li&gt;Removes prefixes that we no longer need from core CSS.
&lt;/li&gt;&lt;li&gt;Removes all prefixes from colors CSS.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
props ocean90.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #26916,â€‹27078 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=26916%2C27078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=26916%2C27078/1392280027357032</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26916" title="#26916: enhancement: Remove -webkit-box-shadow (closed: duplicate)"&gt;#26916&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:8/1392279528209767</guid>
      <description>&lt;p&gt;
That said, as long as we tracked and deleted add_option() calls, we could delete them after. That would solve our future defaults issue and would allow for a rollback for the conditional initialization issue. It would be muuch simpler than the older transaction methods, at least.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:17:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:7/1392279459981929</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27112#comment:6" title="Comment 6"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that it does not currently support &lt;code&gt;add_option&lt;/code&gt;, for which there may be instances of a single widget declaring the option it saves into up front.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On the other hand: since these are single-instance widgets, if the widget is already in use, then capturing update_option() is enough. If the widget is not in use, we don't care strongly if add_option() gets used. I see two potential side effects: if an option is conditionally (and oddly) initialized (low severity), and that it has the potential to mess with future defaults (low severity but probably pretty weird if you encountered it).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24067 (TinyMCE 4.0) updated</title>
      
        <dc:creator>programmin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24067#comment:126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24067#comment:126/1392279448979732</guid>
      <description>&lt;p&gt;
Anyone else noticing that _WP_Editors::editor_settings doesn't output the plugin, when using
&lt;/p&gt;
&lt;p&gt;
add_filter( 'mce_external_plugins', 'myfunction' ,12,1);
&lt;/p&gt;
&lt;p&gt;
Myfunction being a function something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;function myfunction($plugin_array) {
   $plugin_array['pluginid'] = url to js
   return $plugin_array
 }
&lt;/pre&gt;&lt;p&gt;
As documented here: &lt;a class="ext-link" href="http://codex.wordpress.org/Plugin_API/Filter_Reference/mce_external_plugins"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://codex.wordpress.org/Plugin_API/Filter_Reference/mce_external_plugins&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Although I see the pluginid in the mceInit, I don't see the url referenced anywhere in the source of the page. On a frontend page, if that matters.
&lt;/p&gt;
&lt;p&gt;
Is this a bug, or does MCE4 require different behavior? Update: This seems to be caused by this, around line 250 of class-wp-editor.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $mce_external_plugins ) ) {
						/**
						 * This filter loads translations for external TinyMCE 3.x plugins.
						 *
						 * Takes an associative array 'plugin_name' =&amp;gt; 'path', where path is the
						 * include path to the file. The language file should follow the same format as
						 * wp_mce_translation() and should define a variable $strings that
						 * holds all translated strings.
						 */
&lt;/pre&gt;&lt;p&gt;
(It continues to load the plugin, IF a translation is specified. Custom mce_external_language wasn't required before, to load mce_external_plugins.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:13/1392278796812782</guid>
      <description>&lt;p&gt;
I'm with wonderboymusic on this being a pre-commit tool rather than a build tool. It can essentially be in the same boat as autoprefixer (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27078" title="#27078: task (blessed): Use Autoprefixer for CSS vendor prefixes (closed: fixed)"&gt;#27078&lt;/a&gt;). Maybe we'll hook it up to build later, but I think just having the task there is a good first step.
&lt;/p&gt;
&lt;p&gt;
Since it'll be applying these changes directly to files in &lt;code&gt;src&lt;/code&gt;, we need to be really restrictive of which images we apply them to. I made it imagemin:core as imagemin:themes makes sense in the future. That said, all of our theme screenshots are currently perfect, and the optimization of jpeg header images and such is something that is done by hand â€” balancing quality for file size. So rather than coming up with a rule that would essentially be just screenshots, I left it out for the moment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:6/1392278697541786</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm curious whether the options transaction component is necessary. We built the customizer originally by simply storing values and passing them through option_* filters on the fly. I've looked at this a few times now, and I'm not sure what I'm missing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As per our wordpress-dev chat today, I've reworked the Options Transactions into an Option Capture functionality. With the patch above applied to core, the following change to the plugin can be applied: &lt;a class="ext-link" href="https://github.com/x-team/wp-widget-customizer/compare/eliminate-options-transactions"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/x-team/wp-widget-customizer/compare/eliminate-options-transactions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that it does not currently support &lt;code&gt;add_option&lt;/code&gt;, for which there may be instances of a single widget declaring the option it saves into up front.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:02:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:12/1392278569739362</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27173" title="Optimize 69 images (of 127) using the new Grunt task. (See [27172].)
 ..."&gt;27173&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Optimize 69 images (of 127) using the new Grunt task. (See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27172" title="Dev tools: Add `grunt imagemin:core` task for optimizing images ..."&gt;[27172]&lt;/a&gt;.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27173]: Optimize 69 images (of 127) using the new Grunt task. (See [27172].)  ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:02:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27173</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27173/1392278568749452</guid>
      <description>&lt;p&gt;
Optimize 69 images (of 127) using the new Grunt task. (See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27172" title="Dev tools: Add `grunt imagemin:core` task for optimizing images ..."&gt;[27172]&lt;/a&gt;.)
&lt;/p&gt;
&lt;p&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:00:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:11/1392278448388449</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27172" title="Dev tools: Add `grunt imagemin:core` task for optimizing images ..."&gt;27172&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Dev tools: Add &lt;code&gt;grunt imagemin:core&lt;/code&gt; task for optimizing images pre-commit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adds grunt-contrib-imagemin, so an &lt;code&gt;npm install&lt;/code&gt; will be required.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props jorbin, wonderboymusic for initial patches.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27172]: Dev tools: Add `grunt imagemin:core` task for optimizing images ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27172</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27172/1392278447402537</guid>
      <description>&lt;p&gt;
Dev tools: Add &lt;code&gt;grunt imagemin:core&lt;/code&gt; task for optimizing images pre-commit.
&lt;/p&gt;
&lt;p&gt;
Adds grunt-contrib-imagemin, so an &lt;code&gt;npm install&lt;/code&gt; will be required.
&lt;/p&gt;
&lt;p&gt;
props jorbin, wonderboymusic for initial patches.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25169" title="#25169: enhancement: Optimize all images / pngs in core (closed: fixed)"&gt;#25169&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>option.php.diff attached to Ticket #27112</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 08:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27112/option.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27112/option.php.diff/1392278410330899</guid>
      <description>&lt;p&gt;
Add pre_update_option filter to update_option()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27120 (Add object cache to wp_nav_menu() items) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27120#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27120#comment:1/1392278342403223</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by Clorith. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m791213"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27120.patch attached to Ticket #27120</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:56:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27120/27120.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27120/27120.patch/1392278213436617</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27120 (Add object cache to wp_nav_menu() items) created</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27120/1392277678865151</guid>
      <description>&lt;p&gt;
Leveraging &lt;code&gt;$menu_items&lt;/code&gt; in the wp_nav_menu() function call with the Object Cache shows a drop in queries by 2 for each consecutive call for a specific &lt;code&gt;theme_location&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Might need a bit more intense testing to ensure it doesn't negatively impact anything else using the function, but from a front facing side of things it has s ofar not showed any negative effect in my tests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:16/1392276962055242</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27171" title="Update media-views and wp.Backbone.View for Backbone 1.1.
 * ..."&gt;27171&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update media-views and wp.Backbone.View for Backbone 1.1.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Collection set/add/remove/reset methods now return models, not &lt;code&gt;this&lt;/code&gt;, so they can no longer be chained.
&lt;/li&gt;&lt;li&gt;Options passed to Backbone.View's constructor are no longer attached automatically. wp.Backbone.View now does this automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27170" title="Update Backbone from 1.0 to 1.1.
Also update Underscore to 1.6. ..."&gt;[27170]&lt;/a&gt; for Backbone 1.1 itself.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props gcorne.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27171]: Update media-views and wp.Backbone.View for Backbone 1.1.   * ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27171</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27171/1392276961127278</guid>
      <description>&lt;p&gt;
Update media-views and wp.Backbone.View for Backbone 1.1.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Collection set/add/remove/reset methods now return models, not &lt;code&gt;this&lt;/code&gt;, so they can no longer be chained.
&lt;/li&gt;&lt;li&gt;Options passed to Backbone.View's constructor are no longer attached automatically. wp.Backbone.View now does this automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27170" title="Update Backbone from 1.0 to 1.1.
Also update Underscore to 1.6. ..."&gt;[27170]&lt;/a&gt; for Backbone 1.1 itself.
&lt;/p&gt;
&lt;p&gt;
props gcorne.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:15/1392276810060786</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27170" title="Update Backbone from 1.0 to 1.1.
Also update Underscore to 1.6. ..."&gt;27170&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Update Backbone from 1.0 to 1.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also update Underscore to 1.6. Includes the development versions of both, which are not included in the build.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here is Backbone's changelog:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Made the return values of Collectionâ€™s &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;reset&lt;/code&gt; more useful. Instead of returning &lt;code&gt;this&lt;/code&gt;, they now return the changed (added, removed or updated) model or list of
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
models. (This means they can no longer be chained.)&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Backbone Views no longer automatically attach options passed to the constructor as &lt;code&gt;this.options&lt;/code&gt; and Backbone Models no longer attach &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;urlRoot&lt;/code&gt; options, but you can do it yourself if you prefer. (But if you extend &lt;code&gt;wp.Backbone.View&lt;/code&gt;, options will be attached for you.)
&lt;/li&gt;&lt;li&gt;All &lt;code&gt;"invalid"&lt;/code&gt; events now pass consistent arguments. First the model in question, then the error object, then options.
&lt;/li&gt;&lt;li&gt;You are no longer permitted to change the id of your model during &lt;code&gt;parse&lt;/code&gt;. Use &lt;code&gt;idAttribute&lt;/code&gt; instead.
&lt;/li&gt;&lt;li&gt;On the other hand, &lt;code&gt;parse&lt;/code&gt; is now an excellent place to extract and vivify incoming nested JSON into associated submodels.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27171" title="Update media-views and wp.Backbone.View for Backbone 1.1.
 * ..."&gt;[27171]&lt;/a&gt; (next commit) for changes made to WordPress to be compatible with Backbone 1.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props gcorne, georgestephanis.&lt;br /&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27170]: Update Backbone from 1.0 to 1.1.  Also update Underscore to 1.6. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27170</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27170/1392276809146738</guid>
      <description>&lt;p&gt;
Update Backbone from 1.0 to 1.1.
&lt;/p&gt;
&lt;p&gt;
Also update Underscore to 1.6. Includes the development versions of both, which are not included in the build.
&lt;/p&gt;
&lt;p&gt;
Here is Backbone's changelog:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Made the return values of Collectionâ€™s &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;reset&lt;/code&gt; more useful. Instead of returning &lt;code&gt;this&lt;/code&gt;, they now return the changed (added, removed or updated) model or list of
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
models. (This means they can no longer be chained.)
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Backbone Views no longer automatically attach options passed to the constructor as &lt;code&gt;this.options&lt;/code&gt; and Backbone Models no longer attach &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;urlRoot&lt;/code&gt; options, but you can do it yourself if you prefer. (But if you extend &lt;code&gt;wp.Backbone.View&lt;/code&gt;, options will be attached for you.)
&lt;/li&gt;&lt;li&gt;All &lt;code&gt;"invalid"&lt;/code&gt; events now pass consistent arguments. First the model in question, then the error object, then options.
&lt;/li&gt;&lt;li&gt;You are no longer permitted to change the id of your model during &lt;code&gt;parse&lt;/code&gt;. Use &lt;code&gt;idAttribute&lt;/code&gt; instead.
&lt;/li&gt;&lt;li&gt;On the other hand, &lt;code&gt;parse&lt;/code&gt; is now an excellent place to extract and vivify incoming nested JSON into associated submodels.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27171" title="Update media-views and wp.Backbone.View for Backbone 1.1.
 * ..."&gt;[27171]&lt;/a&gt; (next commit) for changes made to WordPress to be compatible with Backbone 1.1.
&lt;/p&gt;
&lt;p&gt;
props gcorne, georgestephanis.
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26799" title="#26799: enhancement: Update to Backbone.js 1.1.0 (closed: fixed)"&gt;#26799&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:14/1392275779790689</guid>
      <description>&lt;p&gt;
Per IRC: We're doing this.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26799#comment:13" title="Comment 13"&gt;gcorne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My thought was that we would rely on the build process &lt;code&gt;grunt build&lt;/code&gt; to create the minified versions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We usually prefer to use a library's official minified version, rather than our own. But I have an idea here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:5/1392275595447655</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does widget-customizer-preview.js share a lot of code with widget-customizer.js?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. There are a couple little functions like &lt;code&gt;widget_id_to_setting_id&lt;/code&gt; which are duplicated, but otherwise they are unique. But I was thinking of creating a &lt;code&gt;widget-customizer-base.js&lt;/code&gt; that had these few common functions, and then make it a dependency for &lt;code&gt;widget-customizer-panel.js&lt;/code&gt; and &lt;code&gt;widget-customizer-preview.js&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 13 Feb 2014 07:02:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:4/1392274957221685</guid>
      <description>&lt;p&gt;
Version 0.15 has been released: &lt;a class="ext-link" href="https://github.com/x-team/wp-widget-customizer/compare/0.14...0.15"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/x-team/wp-widget-customizer/compare/0.14...0.15&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add support for wide widget controls by sliding them out horizontally over the preview. Props westonruter.
&lt;/li&gt;&lt;li&gt;Eliminate Update button and so preview updates with each input change for widgets that support live previews. Props westonruter.
&lt;/li&gt;&lt;li&gt;Make widget form controls more compact on smaller screen resolutions. Props michael-arestad.
&lt;/li&gt;&lt;li&gt;Improve styling of widget search field. Props shaunandrews.
&lt;/li&gt;&lt;li&gt;Rename "Update" button to "Apply". Props arnoesterhuizen.
&lt;/li&gt;&lt;li&gt;Prevent error when initializing sidebar containing unregistered widget. Props westonruter.
&lt;/li&gt;&lt;li&gt;Only show one widget form control expanded at a time. Props westonruter.
&lt;/li&gt;&lt;li&gt;Eliminate use of filter_input(). Props westonruter.
&lt;/li&gt;&lt;li&gt;Add live preview support for Twenty Fourteen Ephemera Widget.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26987 (Bug in wp_list_pages(), caused by start_lvl()) updated</title>
      
        <dc:creator>awelzel</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26987#comment:1/1392271107285730</guid>
      <description>&lt;p&gt;
Since I need a working sitemap without empty lines I applied the suggested fix to my WordPress installation - so the example will show the result with the fix applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:8/1392270091613172</guid>
      <description>&lt;p&gt;
Good question - any shortcode inserted by editor would have closing, but when written by hand, I always exclude them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:7/1392268999192133</guid>
      <description>&lt;p&gt;
The idea is to eventually remove/refactor the 'wpgallery' TinyMCE plugin and (perhaps) make a 'wpmedia' plugin instead that will use wpViews.
&lt;/p&gt;
&lt;p&gt;
We will also need another "single" mode in the media modal to handle editing of audio/video. Currently title, caption, description and embedding preference (link to or embed) can be set for media files that are in the library. Not sure what could be edited if the media file was added from external site.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One caveat: the closing of the shortcode is optional.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Do we want to support that or convert all shortcodes without a closing tag on editing? Looks like converting would be better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:19:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:6/1392268799283779</guid>
      <description>&lt;p&gt;
This is killer. Thank you. One caveat: the closing of the shortcode is optional. My test post that had the chromeless YouTube videos used shortcodes with no closer, so the placeholders didn't appear until I added closing tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27016 (Make placeholders/MCE views for Audio/Video shortcodes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27016#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27016#comment:5/1392268267622218</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27169" title="TinyMCE: add image based placeholders for audio and video shortcodes. ..."&gt;[27169]&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
TinyMCE: add image based placeholders for audio and video shortcodes. Props wonderboymusic, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [27169]: TinyMCE: add image based placeholders for audio and video shortcodes. ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 13 Feb 2014 05:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27169</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27169/1392268144605387</guid>
      <description>&lt;p&gt;
TinyMCE: add image based placeholders for audio and video shortcodes. Props wonderboymusic, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27016" title="#27016: task (blessed): Make placeholders/MCE views for Audio/Video shortcodes (closed: fixed)"&gt;#27016&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:57:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:43/1392267442059890</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21811#comment:40" title="Comment 40"&gt;tomauger&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Added &lt;a href="https://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch"&gt;trac-21811-image-edit-view-01.patch&lt;/a&gt; which attempts to do the minimum to integrate image-edit.js into the EditImage view by passing the view itself to imageEdit.open() so we can set the previous state on the controller upon imageEdit.close().
&lt;/p&gt;
&lt;p&gt;
What has me completely stumped is why setting the state to 'image-edit' in an ImageDetails View (ie: editing an embedded attachment in tinyMCE) works so well, but attempting to set the same state in the same way within an Attachment.Details view (for example, when choosing a Featured Image) fails silently.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21811/21811-modal-03.patch" title="Attachment '21811-modal-03.patch' in Ticket #21811"&gt;21811-modal-03.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21811/21811-modal-03.patch" title="Download"&gt;â€‹&lt;/a&gt;, I took your initial idea for passing a reference to the view, into &lt;code&gt;imageEdit.open()&lt;/code&gt; and also attached &lt;code&gt;_view&lt;/code&gt; to the object so that it could be accessed from &lt;code&gt;close()&lt;/code&gt;. Then, I wired this up to the modal so that when clicking cancel, the user is taken to the previous state, which works pretty well. I also added crude support for the Featured Image workflow, which lives in &lt;code&gt;media-editor.js&lt;/code&gt; and is coded a little differently. The image editing functionality was already working in the "Add Media" workflow.
&lt;/p&gt;
&lt;p&gt;
While working on this, I discovered that the modals are not removed from the DOM when closed, which causes problems with the image editor because of how it uses &lt;code&gt;id&lt;/code&gt; attributes. I will probably open a separate ticket to clean that up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:5/1392266922228837</guid>
      <description>&lt;p&gt;
Back-compat is a very good point, but it still seems strange to enforce a percentage based size on them, as well as adding paddings and borders, without box-sizing it in core in my opinion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26491 (Bundled themes: update to latest version of HTML5 Shiv) updated</title>
      
        <dc:creator>rickalee</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26491#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26491#comment:3/1392266010763956</guid>
      <description>&lt;p&gt;
+1 for adding to core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27115.all.2.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.2.diff/1392265172792171</guid>
      <description>&lt;p&gt;
Missed some.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:01:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:3/1392264119678748</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I did three on their own and then I THINK I got it with the all, but given the rapid movement of WP, it may not be a great idea to use that. I omitted wp-content from my search/replace, since I didn't want to accidentally touch themes and plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26491 (Bundled themes: update to latest version of HTML5 Shiv) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:01:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26491#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26491#comment:2/1392264075952107</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
anything stopping us from doing this? also, why don't we bundle this in core and have all themes point at it (just curious)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27115.all.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 04:00:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.all.diff/1392264049507532</guid>
      <description>&lt;p&gt;
Everything (except wp-content files for obv reasons)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #25169 (Optimize all images / pngs in core) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:58:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25169#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25169#comment:10/1392263928910132</guid>
      <description>&lt;p&gt;
Just ran this a bunch of times, it is only sorta slow the very first time it runs. After that, it's way faster than uglify. &lt;code&gt;.2.diff&lt;/code&gt; unJorbins the whitespace.
&lt;/p&gt;
&lt;p&gt;
Something to think about - could this just be a dev tool that generates smushed images that we then check in?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27115.wp-login.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.wp-login.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.wp-login.diff/1392263749009595</guid>
      <description>&lt;p&gt;
wp login
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>25169.2.diff attached to Ticket #25169</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/25169/25169.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/25169/25169.2.diff/1392263744952747</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>27115.readme.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.readme.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.readme.diff/1392263734235050</guid>
      <description>&lt;p&gt;
Readme
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>27115.xmlrpc.diff attached to Ticket #27115</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:55:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27115/27115.xmlrpc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27115/27115.xmlrpc.diff/1392263721289350</guid>
      <description>&lt;p&gt;
XMLRPC diff'd
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>21811-modal-03.patch attached to Ticket #21811</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21811/21811-modal-03.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21811/21811-modal-03.patch/1392263525728096</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>lisota</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:7/1392263468780449</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:6" title="Comment 6"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
This is very helpful. I was struggling to increase the heartbeat interval. There is a fair amount of incorrect guidance on the web about this setting.
&lt;/p&gt;
&lt;p&gt;
We are willing to sacrifice post locking by eliminating the wp-refresh-post-lock altogether. The CPU performance hit in our high traffic, multi-editor environment is huge and this has been affecting site performance for awhile now. It took us awhile to narrow down the exact cause, but it is definitely the large number of post lock refreshes via admin-ajax.
&lt;/p&gt;
&lt;p&gt;
I tried to deregister heartbeat.js on all pages, but as you noted, found other problems with post.js dependencies. (Namely that the tag box autocomplete doesn't function.)
&lt;/p&gt;
&lt;p&gt;
Can you provide any guidance on eliminating the wp-refresh-post-lock? I am thinking something like disabling the heartbeat event handlers like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery(window).load( function() {
  jQuery(document).off('.refresh-lock');
  }
});
&lt;/pre&gt;&lt;p&gt;
I have managed to allow suspension of the heartbeat when post edit windows are left open for a long time via the following. Looks like this was added in 3.8.
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_filter( 'heartbeat_settings', 'wp_heartbeat_set_suspension' );
&lt;/pre&gt;&lt;p&gt;
I hope that as the Heartbeat API makes it into more features (i.e. autosave), that there can be some testing on high-traffic sites that intensively use the post editor. I'm sure none of this is even noticeable on smaller, infrequently-edited blogs. But on high traffic sites, it's been a CPU crusher.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20601 (Author archives queries should return a 404 when the user isn't a ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20601#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20601#comment:22/1392262825249299</guid>
      <description>&lt;p&gt;
In &lt;code&gt;.7.diff&lt;/code&gt;, I added a unit test that blows up at the end. Someone should take a look. My test is not a real world scenario, but it exposes some weirdness.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20601.7.diff attached to Ticket #20601</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20601/20601.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20601/20601.7.diff/1392262705379677</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27119 (disabling wp_auth_check_load does not actually disable the auth check) created</title>
      
        <dc:creator>lisota</dc:creator>

      <pubDate>Thu, 13 Feb 2014 03:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27119/1392262177311895</guid>
      <description>&lt;p&gt;
Line 4021 of wp-includes\functions.php mentions that the wp_auth_check can be disabled by the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;remove_action( 'admin_enqueue_scripts', 'wp_auth_check_load' )
&lt;/pre&gt;&lt;p&gt;
I expected that this would remove the auth check hearbeat actions, but the auth-check keeps firing even with this action removed.
&lt;/p&gt;
&lt;p&gt;
We are experiencing sever CPU utilization issues due to heartbeat actions in post editing screens and are looking to disable these where we can. We've isolated the problem to the heartbeat API. Our site is high traffic with many editors who spend at least 8 hrs per day in one or more post edit screens at all times.
&lt;/p&gt;
&lt;p&gt;
It appears that the auth-check is still firing from a combo of post.js and heartbeat.js on post edit screens, likely driven by the refresh-post-lock.
&lt;/p&gt;
&lt;p&gt;
To reproduce, add the remove_action mentioned above to functions.php. Open fiddler (or equivalent), then open a new post for editing. Watch the admin-ajax actions every 15 seconds, and you'll see that the auth-check is still firing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26936 (Create new dashicons) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26936#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26936#comment:23/1392252424243030</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26936/" title="Attachments of Ticket #26936"&gt;widgeticons.ai&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26936/" title="Download"&gt;â€‹&lt;/a&gt; are some new icons that need to be added for the upcoming widget customizer merge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>widgeticons.ai attached to Ticket #26936</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26936/widgeticons.ai</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26936/widgeticons.ai/1392252384842314</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21653 (Introduce current_date()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21653#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21653#comment:7/1392252083295003</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like danielbachhuber's approach.
&lt;/p&gt;
&lt;p&gt;
Without current_date(), current_date_i18n() seems out of place. And, date_i18n() with only one argument already operates on the current, local timestamp (it has an optional gmt flag as well), so it's not needed.
&lt;/p&gt;
&lt;p&gt;
I doubt current_time() has unit tests, but it'd be nice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21653 (Introduce current_date()) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21653#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21653#comment:6/1392251821923162</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by danielbachhuber. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m790901"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18471 (Add action hook after cron processed it's jobs) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18471#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18471#comment:6/1392251341870155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by danielbachhuber. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-13&amp;amp;sort=asc#m790885"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14485 (Taxonomy hierarchy cache isn't properly refreshed) reopened</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:26:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14485#comment:86</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14485#comment:86/1392251216084008</guid>
      <description>&lt;p&gt;
Not all unit tests pass with the last commit:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Tests_Term_Cache::test_hierachy_invalidation
Failed asserting that an array is not empty.
/vagrant/wordpress/tests/phpunit/tests/term/cache.php:83
&lt;/pre&gt;&lt;p&gt;
This fails on PHP 5.2 (but I can confirm it appears to pass fine on PHP 5.3+).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #25711 (The "{$taxonomy}_children" cache can become stale) reopened</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:17:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25711#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25711#comment:4/1392250622068154</guid>
      <description>&lt;p&gt;
I'm not sure exactly what values should be tested for here, so I'm not going to attempt a patch, but this does need some eyes on the unit tests again at least.
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Term_Cache::test_category_children_cache
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    75 =&amp;gt; Array (...)
 )
/vagrant/wordpress/tests/phpunit/tests/term/cache.php:22
&lt;/pre&gt;&lt;p&gt;
Here's the assertion:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;assertEquals( array( $term_id1 =&amp;gt; array( $term_id1_child ) ), $hierarchy );
&lt;/pre&gt;&lt;p&gt;
I've only see this fail on PHP 5.2, however, what I'd like to specifically point out is that this is comparing the result fetched from the factory, which should contain row IDs, and likely a bunch more data that is both irrelevant to this test, and is also volatile (can easily change between runs just like the ID does depending on previous tests run - try running full tests compared to just --group taxonomy).
&lt;/p&gt;
&lt;p&gt;
This really needs to be rewritten with more more specific values used for assertion checks. Try to avoid using arrays, they can frequently fail when just out of order (but still remain functional and correct). In fact, don't even use the variable returned from the factory. Use an entirely explicit static array. We still need to know *exactly* what the test should be returning in case the test is failing (like it is here).
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Thu, 13 Feb 2014 00:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:13/1392249797001618</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26799#comment:11" title="Comment 11"&gt;georgestephanis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@gcorne -- it looked like you had added the uncompressed backbone and removed the min version in your previous patch, so I duplicated that for underscore.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My thought was that we would rely on the build process &lt;code&gt;grunt build&lt;/code&gt; to create the minified versions. Whether or not we actually ship with both compressed and uncompressed versions is up for discussion, but personally I find having the uncompressed versions super helpful during development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18623 (Allow themes to pre-register multiple custom backgrounds) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:56:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18623#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18623#comment:30/1392249362280576</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by obenland. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790859"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27118 (WP_Customize_Image_Control should return attachment ID instead of image URL) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:50:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27118#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27118#comment:1/1392249008016414</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes yes yes yes yes! This has caused me no end up trouble over the last few weeks. Unfortunately what we will need to do is create a new customizer control so we maintain backward compatibility in the &lt;code&gt;WP_Customize_Image_Control&lt;/code&gt; class. Either that or introduce a parameter to that class which indicates it should store and return an attachment ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:18/1392248835353757</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21785#comment:17" title="Comment 17"&gt;mcsf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What Konstantin said. It currently works as a core plugin, although @ehg and I need to sort out the odd bug or two, as well as decouple it from our cropping extension of the Media Manager.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If it can be done in the next week or so, I think this would be fantastic to add to 3.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:46:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117#comment:3/1392248785710511</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27117#comment:2" title="Comment 2"&gt;chrishoward&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Makes sense - but dang! Was hoping I'd found a real bug. :/
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not to worry, eventually you'll get to the point where you'll see them all the time! Follow &lt;a class="ext-link" href="http://make.wordpress.org/core/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://make.wordpress.org/core/&lt;/a&gt; and you'll find a lot of ongoing things to test and find bugs in.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) updated</title>
      
        <dc:creator>chrishoward</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117#comment:2/1392247281493282</guid>
      <description>&lt;p&gt;
Thanks, Andrew, for the quick reply.
&lt;/p&gt;
&lt;p&gt;
Makes sense - but dang! Was hoping I'd found a real bug. :/
&lt;/p&gt;
&lt;p&gt;
I'll contact the plugin dev then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>mcsf</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:17/1392246920204109</guid>
      <description>&lt;p&gt;
What Konstantin said. It currently works as a core plugin, although @ehg and I need to sort out the odd bug or two, as well as decouple it from our cropping extension of the Media Manager.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:4/1392246357757007</guid>
      <description>&lt;p&gt;
The current approach to the gallery styles seems generally wrong, and &lt;code&gt;border-box&lt;/code&gt; might sidestep the problem. As obenland said, custom styles should account for these issues themselves, and this change would probably break back-compatibility.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/17142" title="#17142: feature request: Prettier gallery display and navigation through core (reopened)"&gt;#17142&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 12 Feb 2014 23:00:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:16/1392246040264245</guid>
      <description>&lt;p&gt;
@ehg and @miguelcsf are working on it in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26505" title="#26505: enhancement: Custom Header cropping code extraction (closed: duplicate)"&gt;#26505&lt;/a&gt;. We just talked about the current status two weeks ago, as a matter of fact, and they will spend the coming week on getting the .com implementation ready for core (I've been told).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27118 (WP_Customize_Image_Control should return attachment ID instead of image URL) created</title>
      
        <dc:creator>silb3r</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27118/1392245862227321</guid>
      <description>&lt;p&gt;
WP_Customize_Image_Control should, by default, return an attachment ID instead of an image URL.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:57:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:3/1392245837079734</guid>
      <description>&lt;p&gt;
Interesting, is there an example of a theme in the repository where the current way presents a problem? Wouldn't theme authors account for borders and paddings with additional styles?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14653 (Log IP address un UserMeta when account is created) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14653#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14653#comment:11/1392245343867609</guid>
      <description>wontfix: &lt;p&gt;
I think this should remain plugin territory. The 'IP Address' column can be misleading as would only show the IP address of the user when they first registered, not their current IP. And if it did, do that then things become complicated.
&lt;/p&gt;
&lt;p&gt;
Ipstenu's plugin addresses the issue well for those who need it. If there's a &lt;em&gt;strong&lt;/em&gt; argument for this in core, please re-open.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:15/1392245327042203</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27078/27078.2.patch" title="Attachment '27078.2.patch' in Ticket #27078"&gt;27078.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27078/27078.2.patch" title="Download"&gt;â€‹&lt;/a&gt; includes the two tasks. &lt;code&gt;autoprefixer:colors&lt;/code&gt; runs after &lt;code&gt;colors&lt;/code&gt; (while writing this I noticed that we can include it in the &lt;code&gt;colors&lt;/code&gt; task too).
&lt;code&gt;autoprefixer:core&lt;/code&gt; adds the prefixes into src and can be run by a committer.
&lt;/p&gt;
&lt;p&gt;
Patch updates also browser support:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Firefox &amp;gt;= 17
&lt;/li&gt;&lt;li&gt;Explorer &amp;gt;= 7
&lt;/li&gt;&lt;li&gt;Chrome &amp;gt;= 21
&lt;/li&gt;&lt;li&gt;Android &amp;gt;= 2.1
&lt;/li&gt;&lt;li&gt;Opera &amp;gt;= 12.1
&lt;/li&gt;&lt;li&gt;Safari &amp;gt;= 6.0
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27078/27078.2-prefixed.patch" title="Attachment '27078.2-prefixed.patch' in Ticket #27078"&gt;27078.2-prefixed.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27078/27078.2-prefixed.patch" title="Download"&gt;â€‹&lt;/a&gt; includes 27078.2.patch + &lt;code&gt;autoprefixer:core&lt;/code&gt;, so that you can see the difference.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27045 (Gallery css should use box-sizing) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27045#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27045#comment:2/1392245281382191</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by nacin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790821"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20421 (Remove support for Netscape 4 from kses.php (because it's 2012)) closed</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:47:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20421#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20421#comment:5/1392245248652722</guid>
      <description>invalid: &lt;p&gt;
Well if it breaks that then yeah :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17142 (Prettier gallery display and navigation through core) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:47:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17142#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17142#comment:6/1392245236691030</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is definitely pretty heavily theme-influenced, but we could improve the default gallery styling as well as maybe implementing a better JS-based experience for navigating through the single views, which themes could reskin or opt out of.
&lt;/p&gt;
&lt;p&gt;
Both Twenty Thirteen and Twenty Fourteen use the same (grid-view) gallery styling, so perhaps we could polish it (might need to improve the handling of captions, especially with touch, but that's the primary issue it addresses with the default styles) and make that the new default. For the single/flip-through view, I'm thinking improvements might still be plugin territory, but we could also build something cool there that themes could extend or opt-out of.
&lt;/p&gt;
&lt;p&gt;
Don't know any of the history here, though, so it might make just as much sense to wontfix this again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21785 (Add header image uploads with cropping to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21785#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21785#comment:15/1392245112388169</guid>
      <description>&lt;p&gt;
I seem to recall someone doing work on this, perhaps a plugin somewhere?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:7/1392245100056432</guid>
      <description>&lt;p&gt;
Even beyond the reset to the initial defaults, it would be very handy to have a reset for all changes to settings since the user started editing after the customizer loaded, and also to be able to reset the changes to an individual control. As it is right now, you have to reload the entire customizer if you want to get back to a non-dirty state.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27078.2-prefixed.patch attached to Ticket #27078</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:42:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27078/27078.2-prefixed.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27078/27078.2-prefixed.patch/1392244943135349</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>27078.2.patch attached to Ticket #27078</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27078/27078.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27078/27078.2.patch/1392244935185963</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117#comment:1/1392244900255376</guid>
      <description>&lt;p&gt;
Hi chrishoward, thanks for the report.
&lt;/p&gt;
&lt;p&gt;
url_to_postid() requires WP_Rewrite, which means it can't be called before the 'init' hook.
&lt;/p&gt;
&lt;p&gt;
Since this error has always been there, we prefer to keep errors in this case. It tells developers that they are doing something wrong. If we attempt to suppress this, it will be much harder to debug and doesn't do anyone good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #20002,â€‹21763 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:37:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20002%2C21763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20002%2C21763/1392244671900420</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20002" title="#20002: feature request: Update plugins_api to accept multiple slugs when querying ... (closed: duplicate)"&gt;#20002&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #20421 (Remove support for Netscape 4 from kses.php (because it's 2012)) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20421#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20421#comment:4/1392244652471316</guid>
      <description>&lt;p&gt;
As this is there for security reasons, its age may not be enough to remove these. What do these HTML entities look like? Do any other browsers also recognize them? Is this still a concern in the security community?
&lt;/p&gt;
&lt;p&gt;
Applying this patch specifically breaks one of our unit tests based on &lt;a class="ext-link" href="http://ha.ckers.org/xssAttacks.xml"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://ha.ckers.org/xssAttacks.xml&lt;/a&gt;. (The first one, in fact.) Sounds like "invalid" to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17164 (More elegant handling of site 'archive' options for MultiSite) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17164#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17164#comment:14/1392244421709622</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27117 (Fatal error in  url_to_postid() when $wp_rewrite is null) created</title>
      
        <dc:creator>chrishoward</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27117/1392244421203889</guid>
      <description>&lt;p&gt;
Encountered a fatal error today:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Fatal error: Call to a member function wp_rewrite_rules() on a non-object in /Users/chrishoward/Dropbox/wp-mba.dev/wp-includes/rewrite.php on line 301&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Did some testing, and $wp_rewrite was null.
&lt;/p&gt;
&lt;p&gt;
Line 301 is:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$rewrite = $wp_rewrite-&amp;gt;wp_rewrite_rules();
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Changed it to:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
$rewrite = !empty($wp_rewrite)?$wp_rewrite-&amp;gt;wp_rewrite_rules():false;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and things seem to work.
&lt;/p&gt;
&lt;p&gt;
Not sure if the true problem is the 3rd party plugin that called this function, or WP, but I do think there should be some sort of protection in WP from getting a fatal error in this rare circumstance.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19721 (WordPress should support multiple or nested plugin directories) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19721#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19721#comment:4/1392244374351023</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we should wontfix this. Reasoning:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This is very much an edge case, and it can be solved by using build tools or dependency management tools such as Composer.
&lt;/li&gt;&lt;li&gt;Quite a few existing plugins bundle dropins inside subdirectories. If plugins in subdirectories were listed it would cause those dropins to become visible in the Plugins list. Definitely not desirable.
&lt;/li&gt;&lt;li&gt;Ticket has had no traction in two years
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20421 (Remove support for Netscape 4 from kses.php (because it's 2012)) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20421#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20421#comment:3/1392244046807508</guid>
      <description>&lt;p&gt;
Refreshing patch because it's now 2014.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>20421.2.diff attached to Ticket #20421</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:27:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20421/20421.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20421/20421.2.diff/1392244021165517</guid>
      <description>&lt;p&gt;
Refreshing patch because it's now 2014.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:17/1392243662410424</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by netweb. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790790"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:20:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:6/1392243615218919</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9057" title="#9057: feature request: Need &amp;#34;restore defaults&amp;#34; buttons on all admin screens (closed: wontfix)"&gt;#9057&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:16/1392243601805793</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by netweb. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790790"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18079 (WP has dropped support of the path field in the site table) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18079#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18079#comment:8/1392242761421915</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by nacin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790704"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27031 (Twenty Fourteen theme assumes all archive pages are list views) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 12 Feb 2014 22:01:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27031#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27031#comment:6/1392242477253277</guid>
      <description>&lt;p&gt;
TwentyFourteen assumes every archive is a list-view, then hides the entire content body of each single post with CSS when viewing on a mobile device.
&lt;/p&gt;
&lt;p&gt;
In my opinion, no plugin (or child theme for that matter) should need to perform additional, proprietary steps to make custom post-type archives function and display normally.
&lt;/p&gt;
&lt;p&gt;
To duplicate outside of bbPress:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add this to an &lt;code&gt;mu-plugin&lt;/code&gt; of your choosing:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;add_action( 'init', function() {
	register_post_type( 'jjj', array(
		'labels'               =&amp;gt; array(),
		'public'               =&amp;gt; true,
		'publicly_queryable'   =&amp;gt; true,
		'show_ui'              =&amp;gt; true,
		'show_in_menu'         =&amp;gt; true,
		'show_in_nav_menus'    =&amp;gt; true,
		'show_in_admin_bar'    =&amp;gt; true,
		'menu_position'        =&amp;gt; 50,
		'menu_icon'            =&amp;gt; 'dashicons-calendar',
		'capability_type'      =&amp;gt; 'post',
		'has_archive'          =&amp;gt; true,
	) );
} );
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Create some new posts with this new type.
&lt;/li&gt;&lt;li&gt;Visit your: &lt;code&gt;domain.com/jjj/&lt;/code&gt; where 'jjj' is the assumed archive slug
&lt;/li&gt;&lt;li&gt;Shrink your browser width to trigger the mobile responsiveness
&lt;/li&gt;&lt;li&gt;Watch the faux-calendar content disappear
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In this imaginary scenario, an events plugin with an archive of events just lost all of its content because of an overly aggressive CSS rule. If the intent is to simplify the blog view by hiding the content of each post, we should target the blog view explicitly and keep other plugins out of harms way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27097 (Twenty Fourteen: Scroll lag in Windows) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27097#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27097#comment:2/1392241873321359</guid>
      <description>&lt;p&gt;
Certainly, there is one here: &lt;a class="ext-link" href="https://i.cloudup.com/EGXr0kDFHb.mov"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://i.cloudup.com/EGXr0kDFHb.mov&lt;/a&gt;. This was with browserstack with increases the lag. I've also got someone to test this and they got it on a local machine - this ruled out just being browserstack lag.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:42:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116#comment:1/1392241369224701</guid>
      <description>&lt;p&gt;
Reason for the media uploader issue is that &lt;a href="https://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/css/colors.css#L717"&gt;colors.css#L717&lt;/a&gt; was only merged for &lt;code&gt;#plugin-information-header&lt;/code&gt; but not for &lt;code&gt;#media-upload-header&lt;/code&gt;, to &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/css/wp-admin.css#L10979"&gt;wp-admin.css#L10979&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For the nav tabs, it's a mixture of changed &lt;code&gt;border-(bottom-)color&lt;/code&gt; and &lt;code&gt;border-(bottom-)width&lt;/code&gt; properties during the merge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24409 (Edit Image in TinyMCE editor revamp) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24409#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24409#comment:29/1392241322227051</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by melchoyce. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790591"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27106 (Default styles inside the Visual editor) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27106#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27106#comment:2/1392241321905109</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by melchoyce. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790586"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:58/1392241109321955</guid>
      <description>&lt;p&gt;
I think the setup section makes sense unless we're going to call in 'General' settings tab in the General settings page.
&lt;/p&gt;
&lt;p&gt;
On Network we call it "Info" (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/26953" title="#26953: enhancement: Network Admin &amp;#34;Site Edit&amp;#34; page needs Settings trimmed down (new)"&gt;#26953&lt;/a&gt; for THAT nightmare). Should we strive for parity there and matchy-matchy? (I don't care which one, and maybe if it was 'setup' people would think 'Oh so I don't change this randomly...')
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26953 (Network Admin "Site Edit" page needs Settings trimmed down) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:37:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26953#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26953#comment:3/1392241054902613</guid>
      <description>&lt;p&gt;
Related &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/16413" title="#16413: enhancement: Settings page needs HTML refactoring and UI improvements (assigned)"&gt;#16413&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:3/1392240866783909</guid>
      <description>&lt;p&gt;
Important quick note: we have the 0.15 release for the plugin queued for releasing today. This has a bunch of fixes and features, including support for wide widget controls and live previews for widget changes as you type them (no need to click Update). Here's the current changelog: &lt;a class="ext-link" href="https://github.com/x-team/wp-widget-customizer/compare/0.14...master"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/x-team/wp-widget-customizer/compare/0.14...master&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27116.patch attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/27116.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/27116.patch/1392240866198488</guid>
      <description>&lt;p&gt;
Re-add background-color and border-bottom
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #24859 (Media Library does not have a loading indicator) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24859#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24859#comment:16/1392240778683333</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>media-uploader-tabs.png attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/media-uploader-tabs.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/media-uploader-tabs.png/1392240704024878</guid>
      <description>&lt;p&gt;
Media upload tabs miss background color and border
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>nav-tabs-border-bottom.png attached to Ticket #27116</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27116/nav-tabs-border-bottom.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27116/nav-tabs-border-bottom.png/1392240672459162</guid>
      <description>&lt;p&gt;
Nav tabs are missing bottom border
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23233 (Radio Button instead of Checkboxes on Comment Moderation option?) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23233#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23233#comment:24/1392240663039271</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jenmylo. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790506"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27116 (Some nav tab and media upload CSS broken in colors.css/wp-admin.css merge) created</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:30:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27116/1392240647230557</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18380" title="#18380: enhancement: Merge the default colors css into wp-admin.css (closed: fixed)"&gt;#18380&lt;/a&gt; broke some CSS (bottom border, background color) in the nav tabs (from the old themes.php) and in the tabs in the old media uploader, see screenshots.
&lt;/p&gt;
&lt;p&gt;
The attached patch fixes this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27003 (Introduce wp_get_network() and begin cleanup of multisite load) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27003#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27003#comment:11/1392240601766100</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jeremyfelt. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790498"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:30:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:42/1392240601519153</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by TomAuger. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790495"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:2/1392240429675802</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115#comment:1/1392240288131059</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
None. It'll be enforced soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23285 (Implement an AMD JavaScript loader in WordPress) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:23:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23285#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23285#comment:16/1392240182227037</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by tierra. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790468"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27115 (HTTPS links to wordpress.org) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27115/1392239995123042</guid>
      <description>&lt;p&gt;
It appears that wordpress.org now favours an SSL connection, although it is not currently enforced. &lt;a class="ext-link" href="https://www.google.com/search?q=wordpress"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Googling for WordPress returns a link to https://wordpress.org&lt;/a&gt; and once you're on the site, the HTTPS links persist.
&lt;/p&gt;
&lt;p&gt;
We should convert all wordpress.org links in the dashboard to HTTPS links.
&lt;/p&gt;
&lt;p&gt;
Any objections?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26799 (Update to Backbone.js 1.1.0) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:17:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26799#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26799#comment:12/1392239825666390</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DH-Shredder. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790439"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:16:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:14/1392239762895518</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:13" title="Comment 13"&gt;ircbot&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DH-Shredder. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790384"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In todays dev chat we have decided to use one Autoprefixer task as a development tool (putting prefixes into src to then be committed) and one as a build tool for colors.
&lt;/p&gt;
&lt;p&gt;
Working on a new patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 21:04:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:13/1392239042716592</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by DH-Shredder. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790384"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27023 (As a developer, I should be able to easily get and apply patches from trac) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:56:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27023#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27023#comment:10/1392238561517009</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jorbin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790346"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:54:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:4/1392238466554070</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I believe you, but it's not obvious why this is the case. Could you explain?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good thing you asked :) I misread the conditional. It supported updating before if the previous item was an orphan. I've updated the patch, and added a test case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27113.2.diff attached to Ticket #27113</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27113/27113.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27113/27113.2.diff/1392238443427577</guid>
      <description>&lt;p&gt;
Update 27113.1.diff to support setting menu id when the menu item is an orphan
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:57/1392238188386206</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16413/" title="Attachments of Ticket #16413"&gt;settings-1.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16413/" title="Download"&gt;â€‹&lt;/a&gt; explores combining the Setting pages into one long, continuously scrolling page. Sections are linked from a persistent navigation bar at the top, which changes to reflect the "current" section as you scroll.
&lt;/p&gt;
&lt;p&gt;
You might also notice that we've created a new "setup" section that contains some of the most commonly changed settings. This is to allow new or casual users to quickly change the settings that matter to them, without overwhelming them with tons of different sections to search through to change basic settings up-front. We'd also like to look at reorganizing a lot of the sections to make a little more sense. Would swapping out which section a setting appears in have any effect on plugin or theme authors using the settings pages?
&lt;/p&gt;
&lt;p&gt;
For now, these wireframes are just for discussion. We'll post a final with the specific groupings when we are ready for a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>pauldewouters</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:61/1392237929418558</guid>
      <description>&lt;p&gt;
It's useful for scripts too. For example, some libraries don't support old browsers so it would be better to not load the script in this case. In this particular case, I'm using select2 for dropdowns, which doesn't work with IE7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>settings-1.png attached to Ticket #16413</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:41:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16413/settings-1.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16413/settings-1.png/1392237714620272</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22476 (Standardize single and double quotes in CSS url()s) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22476#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22476#comment:16/1392237664488880</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22476 (Standardize single and double quotes in CSS url()s) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:40:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22476#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22476#comment:15/1392237636272029</guid>
      <description>&lt;p&gt;
As the CSS coding standards don't use quotes, and as &lt;code&gt;grunt-js-cssmin&lt;/code&gt; also removes them during the minification, I updated the patch to remove all quotes (as of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27167" title="Merge two similar strings. props pavelevap. fixes #27096."&gt;r27167&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27114 (Don't use HTTPS in unit tests if OpenSSL isn't loaded.) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27114#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27114#comment:1/1392237562170435</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27168" title="Don't use HTTPS in unit tests if OpenSSL isn't loaded.
props bpetty. ..."&gt;27168&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't use HTTPS in unit tests if OpenSSL isn't loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
props bpetty.&lt;br /&gt;
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27114" title="#27114: defect (bug): Don't use HTTPS in unit tests if OpenSSL isn't loaded. (closed: fixed)"&gt;#27114&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27168]: Don't use HTTPS in unit tests if OpenSSL isn't loaded.  props bpetty. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:39:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27168/1392237561411352</guid>
      <description>&lt;p&gt;
Don't use HTTPS in unit tests if OpenSSL isn't loaded.
&lt;/p&gt;
&lt;p&gt;
props bpetty.
fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27114" title="#27114: defect (bug): Don't use HTTPS in unit tests if OpenSSL isn't loaded. (closed: fixed)"&gt;#27114&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>22476.none.3.diff attached to Ticket #22476</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22476/22476.none.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22476/22476.none.3.diff/1392237526425353</guid>
      <description>&lt;p&gt;
Refresh after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27167" title="Merge two similar strings. props pavelevap. fixes #27096."&gt;[27167]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>ticket-27114-tests-openssl.patch attached to Ticket #27114</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:34:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27114/ticket-27114-tests-openssl.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27114/ticket-27114-tests-openssl.patch/1392237290526277</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27114 (Don't use HTTPS in unit tests if OpenSSL isn't loaded.) created</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27114/1392237262917746</guid>
      <description>&lt;p&gt;
Among our tools that don't support the SSL transport is PHP 5.2 Travis CI hosts, which can't properly detect which unit tests shouldn't be run, resulting in test failures for known bugs.
&lt;/p&gt;
&lt;p&gt;
This falls back on non-SSL to fetch open tickets if OpenSSL isn't available.
&lt;/p&gt;
&lt;p&gt;
A test run has successfully passed here:
&lt;a class="ext-link" href="https://travis-ci.org/tierra/wordpress/jobs/18756798"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://travis-ci.org/tierra/wordpress/jobs/18756798&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19826 (Error behavior for deleting trashed posts is different for Bulk Delete ...) updated</title>
      
        <dc:creator>aaronholbrook</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19826#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19826#comment:6/1392236957776608</guid>
      <description>&lt;p&gt;
Attempted to reproduce this with both regular posts and a custom post type - I found that the author did in fact &lt;em&gt;not&lt;/em&gt; have the option to 'Empty Trash' and therefore I was unable to reproduce this bug.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:28:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:3/1392236900824135</guid>
      <description>&lt;p&gt;
You removed a comment there, "Only set the menu term if it isn't set to avoid unnecessary wp_get_object_terms()".
&lt;/p&gt;
&lt;p&gt;
Basically, that is_object_in_term() call was added for the purposes of reducing queries (which nav menus use a ton of). is_object_in_term() uses the term cache, while wp_set_object_terms() does not, by way of wp_get_object_terms().
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the code didn't and doesn't support updating the associated menu_id of a menu item.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I believe you, but it's not obvious why this is the case. Could you explain?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:56/1392236877682320</guid>
      <description>&lt;p&gt;
Working with @melchoyce on settings ui redux. We're talking about multiple columns, breaking out of the standard a little. Will use this ticket for wireframes/patches etc. Note that this ticket's stated issue was css vs tables and UI, not a new API. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24106 (Simplify wp_slash()) updated</title>
      
        <dc:creator>devesine</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24106#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24106#comment:10/1392236845572067</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24106#comment:9" title="Comment 9"&gt;TobiasBg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
devesine, I'm not sure what you mean with datatype loss here. &lt;code&gt;wp_slash()&lt;/code&gt;/&lt;code&gt;wp_unslash()&lt;/code&gt; (both the patched and the unpatched versions) will only work with strings and (nested) arrays of strings, which basically is a result of PHP's &lt;code&gt;stripslashes()&lt;/code&gt; only accepting and returning a string.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_unslash()&lt;/code&gt; uses &lt;code&gt;stripslashes_deep()&lt;/code&gt; (&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-includes/formatting.php#L1529"&gt;source&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/3.8.1/src/wp-includes/formatting.php#L1529" title="Download"&gt;â€‹&lt;/a&gt;) , which handles strings, arrays, and objects (via &lt;code&gt;get_object_vars()&lt;/code&gt;), and the tests for &lt;code&gt;stripslashes_deep()&lt;/code&gt; (and by extension &lt;code&gt;wp_unslash()&lt;/code&gt;) test for its ability to touch objects without turning them into arrays.
&lt;/p&gt;
&lt;p&gt;
Unpatched &lt;code&gt;wp_slash()&lt;/code&gt; only handles strings and arrays.  The test I attached uses the same logic as the existing test for &lt;code&gt;stripslashes_deep()&lt;/code&gt;, but on the slashing rather than the unslashing side of things.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_unslash()&lt;/code&gt; has a docblock that indicates it only works on strings or arrays of strings, but it is currently inaccurate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17703 (Decrement update count bubbles when you update things) updated</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:26:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17703#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17703#comment:4/1392236769779648</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This seems like a good idea, so I went ahead and created a fresh patch (see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17703/17703-04.patch" title="Attachment '17703-04.patch' in Ticket #17703"&gt;17703-04.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17703/17703-04.patch" title="Download"&gt;â€‹&lt;/a&gt;). The approach is a little different from Mitchoâ€™s. Instead of offsetting the existing counts, an ajax call is triggered that pulls updated counts. For situations where the requests where the upgrades run is in an iframe, &lt;code&gt;window.postMessage&lt;/code&gt; is used to send a message to the parent window that triggers the count updating.
&lt;/p&gt;
&lt;p&gt;
One benefit of using an ajax handler is that it opens the door to refreshing the counts asynchronously at other times so that the status is more current without impacting the response time of admin page loads.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:55/1392236701660591</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by nacin. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790292"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:23:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:2/1392236590405428</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
27113.1.diff does the trick. The change is covered by existing unit tests.
&lt;/p&gt;
&lt;p&gt;
For the record, the code didn't and doesn't support updating the associated &lt;code&gt;menu_id&lt;/code&gt; of a menu item.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22135 (Special characters in caption lead to failure of inserting images) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22135#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22135#comment:4/1392236538628077</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I investigated this some more, and the problem is the argument that is passed to the JS &lt;code&gt;send_to_editor&lt;/code&gt; function via PHP, in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/media.php#L227"&gt;this line&lt;/a&gt; of &lt;code&gt;wp-admin/includes/media.php&lt;/code&gt;.
Basically, &lt;code&gt;addslashes()&lt;/code&gt; is not enough to protect against an input of
&lt;/p&gt;
&lt;pre class="wiki"&gt;foo&amp;lt;/script&amp;gt;bar
&lt;/pre&gt;&lt;p&gt;
(in the Caption field in the old media uploader) prematurely ending the JS. This results in a script error, so that the remaining output is printed in the frame (as in the screenshot above).
Compare this generated HTML/JS (some attributes from the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; and &lt;code&gt;[caption]&lt;/code&gt; stripped):
&lt;/p&gt;
&lt;pre class="wiki"&gt;/* &amp;lt;![CDATA[ */
var win = window.dialogArguments || opener || parent || top;
win.send_to_editor('[caption]&amp;lt;img src=\"http://example.com/img.jpg\" /&amp;gt; foo&amp;lt;/script&amp;gt;bar[/caption]');
/* ]]&amp;gt; */
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;addslashes()&lt;/code&gt; only escaped the &lt;code&gt;'&lt;/code&gt; and &lt;code&gt;"&lt;/code&gt; but leaves &lt;code&gt;/&lt;/code&gt; untouched. This is then a problem for any input that contains &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt;, as that ends the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; block early. For other closing HTML tags (like &lt;code&gt;&amp;lt;/em&amp;gt;&lt;/code&gt;) this is no problem however.
&lt;/p&gt;
&lt;p&gt;
Now, the old media uploader is no longer used by Core, but it's still being used in several plugins. And although this an edge case that can only be triggered with &lt;code&gt;&amp;lt;/script&amp;gt;&lt;/code&gt;, the fix is very easy: Let's use &lt;code&gt;json_encode()&lt;/code&gt; instead of &lt;code&gt;addslashes()&lt;/code&gt;, as that also escapes all &lt;code&gt;/&lt;/code&gt;.
The attached patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22135/22135.patch" title="Attachment '22135.patch' in Ticket #22135"&gt;22135.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22135/22135.patch" title="Download"&gt;â€‹&lt;/a&gt; does that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26050 (Continual Admin Page POST (HeartBeats?) Can Cause SQL Connection Issues) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26050#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26050#comment:6/1392236538196195</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26050#comment:5" title="Comment 5"&gt;lisota&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The heartbeat API, specifically the wp-refresh-auto-lock, is a major CPU hog. I can easily max out our 8-core server by opening 15-20 edit post windows and having them all hitting the server with refresh post lock requests every 15 seconds. Logging out of those screens quickly reduces CPU to under 10%.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Before Heartbeat, (WordPress 3.5) the Edit Post page was connecting every minute for autosave. In 3.8 Heartbeat connects every 15 sec. for the "focused" page and every 2 min. for the "non-focused" pages. So if you have 5 people that have 4 Edit Post pages opened at the same time in 3.5 you'll always see 20 connections per minute.
&lt;/p&gt;
&lt;p&gt;
In 3.8 there will be 20 connections for the focused pages (5 pages x 4 connections) plus 8 (average) for the non-focused pages (15 pages x 0.5 connections). In addition there may be up to 5 connections per minute if the posts in the focused pages are being edited as autosave would connect when there are changes.
&lt;/p&gt;
&lt;p&gt;
On average there will be about 50% - 60% (20 vs. 30-33) more connections in 3.8 compared to 3.5. Also in 3.9 autosave uses heartbeat for transport reducing the number of connections to 28. This number is higher but is not even two-fold.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I tried deregistering heartbeat everywhere, including post.php and post-new.php. However, that seems to affect another AJAX function, the ajax tag search no longer works.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Deregistering heartbeat.js on the Edit Post screens is not a good idea. It would also stop post.js from loading (as heartbeat.js is a dependency for post.js).
&lt;/p&gt;
&lt;p&gt;
You can increase the interval to 60 sec. in couple of ways. From JS:
&lt;/p&gt;
&lt;pre class="wiki"&gt;jQuery(window).load( function() {
  if ( window.wp &amp;amp;&amp;amp; wp.heartbeat ) {
    wp.heartbeat.interval( 60 );
  }
});
&lt;/pre&gt;&lt;p&gt;
This has to run after &lt;code&gt;jQuery(document).ready()&lt;/code&gt;, hence the &lt;code&gt;jQuery(window).load()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
From PHP:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'heartbeat_send', 'my_heartbeat_settings' );
function my_heartbeat_settings( $response ) {
	if ( $_POST['interval'] != 60 ) {
		$response['heartbeat_interval'] = 60;
	}
	return $response;
}
&lt;/pre&gt;&lt;p&gt;
This will reset the interval to 60 sec. on every "beat" regardless of the current page and the initial settings.
&lt;/p&gt;
&lt;p&gt;
Of course changing the interval will impact the Post locking functionality. It can also be set to 30 sec.
&lt;/p&gt;
&lt;p&gt;
With the above example and the interval set to 60 sec. there will be 12-13 connections per minute in 3.9 plus up to 5 for autosave in 3.8, i.e. less than before Heartbeat was introduced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27113.1.diff attached to Ticket #27113</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:19:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27113/27113.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27113/27113.1.diff/1392236390533773</guid>
      <description>&lt;p&gt;
Explicitly set the menu term when creating a menu item, rather than depending on &lt;code&gt;tax_input&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>22135.patch attached to Ticket #22135</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22135/22135.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22135/22135.patch/1392236332013126</guid>
      <description>&lt;p&gt;
Use &lt;code&gt;json_encode&lt;/code&gt; instead of &lt;code&gt;addslashes&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>17703-04.patch attached to Ticket #17703</title>
      
        <dc:creator>gcorne</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17703/17703-04.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17703/17703-04.patch/1392236295816877</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113#comment:1/1392235760323147</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yeah, I agree. tax_input is shaky stuff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>iskin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:12/1392235616075549</guid>
      <description>&lt;p&gt;
BTW, why you speaking only about Sass and LESS? Why not Stylus? It use JS compiler, can be run inside browser as LESS. But it is powerful as Sass and even more (for example, has block mixins to clean media queries).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26944 (Dashboard "At a glance" widget ignores get_avatar_comment_types filter) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26944#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26944#comment:3/1392235561863168</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good. But it's more an enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:04:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:11/1392235464144847</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I still have yet to come to believe that a pre-processor is the right choice for the WordPress project.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
... This is tricky, because depending on who you ask, the answer would range from "YES" to "ABSOLUTELY NOT."
&lt;/p&gt;
&lt;p&gt;
In the end, what any project wants is minified CSS file that will load fast when gzip gets involved. Also, what any project wants is modular code.
&lt;/p&gt;
&lt;p&gt;
*I* (me, my opinion) would be yes, let's go full-bore - I don't feel like 1) we get a huge wave of CSS patches and 2) when we do, it wouldn't be horrendous if the noob provided 17 lines of CSS that one had to convert into Saaaaassssy CSS code. 90% of the PHP patches are stale in Trac right now, and will require being rewritten. 99.9% probably have weird white space that needs fixing.
&lt;/p&gt;
&lt;p&gt;
It's funny that everyone is hating on Compass, because that was one of the selling points of SASS over LESS. (I continue to prefer LESS.) Even if Compass or "unnamed tool" is overkill, it's not used in prod, so shouldn't matter. Any random node module will require dozens of dependencies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>shaunandrews</dc:creator>

      <pubDate>Wed, 12 Feb 2014 20:00:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:2/1392235212001949</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27112#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What's liveFilter for? Is it needed? Can we do our own thing? The Themes page already has live searching.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Its what powers the widget search filter. If it can be replaced with something simpler, or similar to THX, then by all means...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24106 (Simplify wp_slash()) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24106#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24106#comment:9/1392235142184155</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
devesine, I'm not sure what you mean with datatype loss here. &lt;code&gt;wp_slash()&lt;/code&gt;/&lt;code&gt;wp_unslash()&lt;/code&gt; (both the patched and the unpatched versions) will only work with strings and (nested) arrays of strings, which basically is a result of PHP's &lt;code&gt;stripslashes()&lt;/code&gt; only accepting and returning a string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112#comment:1/1392234843867862</guid>
      <description>&lt;p&gt;
Some particular things we've noticed so far:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Need to merge the widget icons into Dashicons (melchoyce, michael arestad)
&lt;/li&gt;&lt;li&gt;filter_*(), exceptions, and other things we don't use in core should be replaced
&lt;/li&gt;&lt;li&gt;Twenty Thirteen and Fourteen need the JS added that the plugin bundles.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Where things should be merged:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;widget-customizer.css should be merged into customize-controls.css.
&lt;/li&gt;&lt;li&gt;widget-customizer.php should become class-wp-customize-widgets.php.
&lt;/li&gt;&lt;li&gt;The two controls should be added into class-wp-customize-control.php.
&lt;/li&gt;&lt;li&gt;widget-customizer.js is a ton of code, so let's maybe keep it separate from customize-control.js for now.
&lt;/li&gt;&lt;li&gt;Does widget-customizer-preview.js share a lot of code with widget-customizer.js?
&lt;/li&gt;&lt;li&gt;widget-customizer-preview.css should just be some CSS injected into wp_head. (It also needs better styling.)
&lt;/li&gt;&lt;li&gt;What's liveFilter for? Is it needed? Can we do our own thing? The Themes page already has live searching.
&lt;/li&gt;&lt;li&gt;I'm curious whether the options transaction component is necessary. We built the customizer originally by simply storing values and passing them through option_* filters on the fly. I've looked at this a few times now, and I'm not sure what I'm missing?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19373 (wp_insert_post() should not contain current_user_can() checks) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19373#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19373#comment:39/1392234682403638</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I dig 19373.2.diff, but it doesn't really solve my problem when coming at this from a slightly different angle: creating new nav menu items without a user context.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; uses the &lt;code&gt;tax_input&lt;/code&gt; argument to associate a new menu item with the menu term id. Without a user context, the capability check fails and the new menu item isn't associated with the menu.
&lt;/p&gt;
&lt;p&gt;
If the proposed patch were to go in, I don't think calling &lt;code&gt;wp_insert_post()&lt;/code&gt; inside of &lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; with &lt;code&gt;$sanitize = false&lt;/code&gt; is the right way to go. It'd solve my immediate problem, but isn't a global solution.
&lt;/p&gt;
&lt;p&gt;
I don't have a good suggestion otherwise at this point, other than:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Sanitization should probably be treated separately from capability checks.
&lt;/li&gt;&lt;li&gt;Capability checks should always be implemented higher up the stack, and probably are for the needs of &lt;code&gt;wp_insert_post()&lt;/code&gt;. I don't think there are many people depending on the capability check around &lt;code&gt;tax_input&lt;/code&gt;. However, intentionally removing the capability check could unintentionally open permissions holes in third-party code
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I created &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27113" title="#27113: defect (bug): Explicitly assign menu term relationship in wp_update_nav_menu_item() ... (closed: fixed)"&gt;#27113&lt;/a&gt; for my use case though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27113 (Explicitly assign menu term relationship in wp_update_nav_menu_item() ...) created</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27113/1392234639169581</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; depends on the &lt;code&gt;tax_input&lt;/code&gt; to assign a menu item to a menu term. However, when &lt;code&gt;wp_update_nav_menu_item()&lt;/code&gt; is called from a user-less context, this association isn't created and the menu item is orphaned.
&lt;/p&gt;
&lt;p&gt;
For me, this user-less context is a WP-CLI command where I haven't explicitly set a user.
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/19373" title="#19373: enhancement: wp_insert_post() should not contain current_user_can() checks (new)"&gt;#19373&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12682 (Multiple password reset emails can be annoying) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12682#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12682#comment:14/1392234602675062</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by VarunAgw. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790260"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23367 (Remove message parameters from admin URl's in the browser address bar) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23367#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23367#comment:5/1392234602281663</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by VarunAgw. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790258"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) reopened</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:49:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:12/1392234598378905</guid>
      <description>&lt;p&gt;
This unit test assertion consistently fails:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;assertFalse( $GLOBALS['wp_query']-&amp;gt;thumbnails_cached );
&lt;/pre&gt;&lt;p&gt;
See unit test results:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1) Tests_Post_Thumbnails::test_update_post_thumbnail_cache
Failed asserting that true is false.
/home/bryan/Projects/wp-vagrant/wordpress/tests/phpunit/tests/post/thumbnails.php:13
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27111 (Turning off global comments should include existing content) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27111#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27111#comment:2/1392234253305621</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4222" title="#4222: feature request: Add global comment/pings override switch (closed: wontfix)"&gt;#4222&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23855 (Leave Shortcode functions early, if there's no Shortcode delimiter) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:43:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23855#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23855#comment:5/1392234180194341</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I finally had some time to refresh the patch (for develop.svn., and with &lt;code&gt;if-{}&lt;/code&gt;) and also to write a quick script to measure the execution time of the suggested change: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php" title="Attachment '23855.test.php' in Ticket #23855"&gt;23855.test.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.test.php" title="Download"&gt;â€‹&lt;/a&gt;. Just run this on the patched and unpatched versions of &lt;code&gt;shortcodes.php&lt;/code&gt; (by simply putting &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php" title="Attachment '23855.test.php' in Ticket #23855"&gt;23855.test.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.test.php" title="Download"&gt;â€‹&lt;/a&gt; in &lt;code&gt;src/&lt;/code&gt;).
It runs the three functions in question on a dummy text with two Shortcodes that appear twice, and on a dummy text that does not have Shortcodes.
&lt;/p&gt;
&lt;table class="wiki"&gt;
&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;Text with Shortcodes&lt;/td&gt;&lt;td&gt;Text without Shortcodes
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;has_shortcode()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;0.298s â€” unpatched&lt;/td&gt;&lt;td&gt;0.297s â€” unpatched
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;0.409s â€” &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;â€‹&lt;/a&gt;&lt;/td&gt;&lt;td&gt;0.259s â€” &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;do_shortcode()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;13.379s â€” unpatched&lt;/td&gt;&lt;td&gt;4.497s â€” unpatched
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;13.309s â€” &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;â€‹&lt;/a&gt;&lt;/td&gt;&lt;td&gt;0.253s â€” &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;code&gt;strip_shortcode()&lt;/code&gt;&lt;/td&gt;&lt;td&gt;7.524s â€” unpatched&lt;/td&gt;&lt;td&gt;4.431s â€” unpatched
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;  &lt;/td&gt;&lt;td&gt;7.521s â€” &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;â€‹&lt;/a&gt;&lt;/td&gt;&lt;td&gt;0.244s â€” &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch" title="Attachment '23855.2.patch' in Ticket #23855"&gt;23855.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23855/23855.2.patch" title="Download"&gt;â€‹&lt;/a&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;
The patched version appears to be much faster for &lt;code&gt;do_shortcode()&lt;/code&gt; and &lt;code&gt;strip_shortcode()&lt;/code&gt; (factor 15 to 20) and not so much with &lt;code&gt;has_shortcode()&lt;/code&gt;, in texts without Shortcodes. For texts with Shortcodes, the execution time remains pretty much constant.
So, adding this check to &lt;code&gt;has_shortcode()&lt;/code&gt; might not be necessary.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27112 (Add widget management to the customizer) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:32:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27112/1392233574761533</guid>
      <description>&lt;p&gt;
As decided &lt;a class="ext-link" href="http://make.wordpress.org/core/2014/02/06/heres-a-quick-summary-of-yesterdays-meeting-as/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;last week&lt;/a&gt;, we're going to give the &lt;a class="ext-link" href="https://wordpress.org/plugins/widget-customizer/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Widget Customizer&lt;/a&gt; plugin a go in core. This ticket is to track its initial merge, which ocean90 and I are heading up.
&lt;/p&gt;
&lt;p&gt;
We're going to use the "Widgets" component for this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>23855.2.patch attached to Ticket #23855</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:27:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23855/23855.2.patch/1392233239968703</guid>
      <description>&lt;p&gt;
Refreshed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>23855.test.php attached to Ticket #23855</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:27:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23855/23855.test.php/1392233222980914</guid>
      <description>&lt;p&gt;
Measure execution time of shortcode functions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:10/1392232018317119</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:9" title="Comment 9"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, ocean90 - I'm not sure I totally understand why it has to run after minification - why not just before?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It must only work on .min.css files, otherwise core.svn will have prefixes and develop.svn won't, making CSS patches difficult if not impossible to create, apply, and test. The alternative I proposed is using this as only a development tool for now, versus on build â€” it puts prefixes directly into src that can then be committed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But it also means that we have to ignore colors for now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nope â€” while we could use it as a development tool (putting prefixes into src to then be committed), we could also use it as a build tool for colors. It's just two different tasks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4222 (Add global comment/pings override switch) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4222#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4222#comment:4/1392231961485759</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by ocean90. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790225"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 19:02:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:44/1392231776470760</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/6481#comment:43" title="Comment 43"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's certainly not everyone, and I definitely think we need to code really defensively to make sure that we fall back to standard permalinks if we're not 100% sure pretty permalinks are working, but it seems doable.  It also seems like a nice step forward for the web in general.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed on having a fallback if an install doesn't pass the test to allow pretty permalinks. But that would still mean some percentage of users that is much lower than 100% would have ugly permalinks as the default, and a percentage of users much higher than 0% would default to pretty, a definite win.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27111 (Turning off global comments should include existing content) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27111#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27111#comment:1/1392231481666722</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by jenmylo. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790216"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:9/1392231456017393</guid>
      <description>&lt;p&gt;
As far as running out of src (which I do for the vast majority of core dev, FWIW) and back-compat and all this Compass talk:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If a property is still required to be prefixed for use in any browser, we should be judicious about it, as it should be considered experimental and subject to change. I'd actually question if we should really be using it at all, given that being newest-and-shiniest is not our top priority (saying this knowing that 3.8 introduced a good amount of these). So, in those cases, we should be maintaining them by hand, and they should gracefully degrade, anyway. A pre- or post-processor should not play a part in their usage. This means that using a modern browser should give you the final experience when running out of src.
&lt;/li&gt;&lt;li&gt;In cases like opacity, we should not be attempting to make the particular browser(s) that need that "back compat" match. If something doesn't degrade gracefully, we need to fix the issue, not the tooling.
&lt;/li&gt;&lt;li&gt;Compass is beyond overkill, I am not a fan for the reasons listed above, I am not yet convinced of its longevity, and I still have yet to come to believe that a pre-processor is the right choice for the WordPress project.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, ocean90 - I'm not sure I totally understand why it has to run after minification - why not just before?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27111 (Turning off global comments should include existing content) created</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:57:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27111/1392231420989201</guid>
      <description>&lt;p&gt;
People get confused when they turn off comments on a site, but continue receiving comment notifications. When a user sets the discussion setting to no longer allow comments to be posted to articles, it should turn off new comments on existing posts as well, not just new ones.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790178"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m790178&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 12 Feb 2014 18:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:43/1392229458692360</guid>
      <description>&lt;p&gt;
So basically what we need is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Update permalink structure using &lt;code&gt;$wp_rewrite-&amp;gt;set_permalink_structure();&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Update &lt;code&gt;.htaccess&lt;/code&gt; or &lt;code&gt;web.config&lt;/code&gt; by hard flushing the rewrite rules &lt;code&gt;flush_rewrite_rules()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Check for 404s or 500s using a head request
&lt;ul&gt;&lt;li&gt;This means we need some sort of content to test.  If no posts or terms exist, maybe the author page for the first user
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This should give us pretty permalinks for sites on Apache and IIS that have a writable config file that allows for rewrites, but only if that file is processed immediately and not on a delay.
&lt;/p&gt;
&lt;p&gt;
It's certainly not everyone, and I definitely think we need to code really defensively to make sure that we fall back to standard permalinks if we're not 100% sure pretty permalinks are working, but it seems doable.  It also seems like a nice step forward for the web in general.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6481 (Fancy permalinks should be enabled on new sites) updated</title>
      
        <dc:creator>jenmylo</dc:creator>

      <pubDate>Wed, 12 Feb 2014 17:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6481#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6481#comment:42/1392227404375912</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would really really like us to switch over to pretty permalinks as the default for the sake of a better user experience. If there are current reasons *not* to do this, can folks list them? I'm bumping this up to "normal" from "low," because while it is probably a low priority in terms of the code base, it's been a n ongoing annoyance on the ux side for years. Would be great to get this addressed in 3.9 if possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 16:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:11/1392221298908394</guid>
      <description>&lt;p&gt;
@nacin was weirded out that this could happen - @klihelp, could you explain a little more about how this code ran outside of the loop?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 12 Feb 2014 15:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:8/1392217410492918</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We haven't really gotten to the point where he develop repo is "runnable" in production.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which I think isn't a real problem. Why should a develop branch be used in a production environment. Therefore we have our builds.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think a good first step (as in, we can do it *today*) would be to use autoprefixer as a development tool, not a build tool.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That would be a minimum. But it also means that we have to ignore colors for now.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Versions to consider: whether we support a few more versions back in FF and whether we support the old branch of a Opera. Also, do we care about old mobile Safari? Autoprefixer has a &amp;gt; 1% option, we should at least include whatever's in that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm fine with supporting FF &amp;gt;= 17 and Opera = 12.1. Opera 15 is the first with Blink, so more or less the same as Chrome. Mobile Safari would be iOS. What is old here? For the percentages take a look at &lt;a class="ext-link" href="http://caniuse.com/usage_table.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://caniuse.com/usage_table.php&lt;/a&gt; or &lt;a class="ext-link" href="https://github.com/ai/autoprefixer/blob/master/data/browsers.coffee"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/ai/autoprefixer/blob/master/data/browsers.coffee&lt;/a&gt;. The &lt;code&gt;&amp;gt; 1%&lt;/code&gt; option wouldn't make a difference with our values.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:4" title="Comment 4"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One possible solution to the problem of keeping src running pretty would be to use &lt;a class="ext-link" href="http://leaverou.github.io/prefixfree/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://leaverou.github.io/prefixfree/&lt;/a&gt; only in the src directory.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would be an idea, but I think we should try to avoid to bundle another JS lib. Haven't tested the performance yet, but does it work with many (and huge) stylesheets?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wouldn't mind eventually abandoning core.svn as a place to patch from, but I don't think holding out for a little while longer is a bad thing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would be nice to know how many patches are still coming through core.svn. Abandoning core.svn will make things easier - now and in future.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27078#comment:6" title="Comment 6"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would much rather we go all-in and use Compass.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As much I liked Compass in the past I don't want it back. It adds to many mixins and functions which we will not use in cure. And as iskin mentions, Compass adds a lot of unnecessary prefixes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
back-compat-needing properties like &lt;code&gt;opacity&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These properties are just hacks in my eyes. Autoprefixer doesn't care about this - which is great, since it's not a prefix, it's a proprietary property.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>dave1010</dc:creator>

      <pubDate>Wed, 12 Feb 2014 14:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:16/1392215975178692</guid>
      <description>&lt;p&gt;
I understand a Composer-esque vendor system isn't the WordPress way. Perhaps I shouldn't have introduced that in this ticket :-).
&lt;/p&gt;
&lt;p&gt;
Replying to MikeSchinkel:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP best practices for configuration management typically target those who are setting up development, testing, staging and production environments where PHP will be deployed and used and where code is deployed by either developers or system administrator. All of those features work very well for that use-case, but WordPress has a different primary use-case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Though I think there's certain things that WordPress can do for developers who want to follow PHP best practices without hindering site builders who cannot write PHP code.
&lt;/p&gt;
&lt;p&gt;
Getting back to providing an autoloader to plugins and themes:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Across plugins and themes there is potentially a large number of classes to autoload, but those classes do not follow the PSR-0/4 autoloader standard because there is no single top-level directory to load from, nor are there really vendor names.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's up to plugin and theme authors to structure their code how they want (inside their own wp-content/plugins/foo directory). Some plugins don't use classes at all; some &lt;code&gt;require_once&lt;/code&gt; one or 2 files in their root directory; others follow PHP best practices by using a PSR-0/PSR-4 class loader, with vendor names and namespaces. This file structure isn't defined or influenced by WordPress.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another solution would be for WordPress to implement an autoloader and then every plugin and theme could opt-in to the autoloader, thus creating many top-level autoloader roots. But that seems silly because it might follow the letter of the PSR autoloaders but not the spirit, and we could end up with deeper subdirectory structures this way too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the solution I was proposing. WordPress can't force plugins to use an autoloader, the same way WordPress can't force plugins to use &lt;code&gt;$wpdb&lt;/code&gt;. As a developer if all my code (WordPress and other PHP) can follow the letter of the PSR autoloaders then it makes life much easier.
&lt;/p&gt;
&lt;p&gt;
Composer has multiple autoloaded roots in &lt;code&gt;vendor&lt;/code&gt;. WordPress would have them in &lt;code&gt;wp-content/plugins&lt;/code&gt;. I don't see how that's particularly different. Is plugin authors using deeper subdirectory structures an issue?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What I would propose instead of a PSR-0/4 auto-loader is a WordPress autoloader that is much simpler, one that has only the following method:
&lt;code&gt;register_autoload_path( $path_from_wp_content, $class_prefix )&lt;/code&gt;
It might look like this in use:
&lt;code&gt;register_autoload_path( 'plugins/my-plugin', 'My_Plugin_' )&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is virtually identical to registering with a PSR-0/4 auto-loader. Requiring the plugin to know it's path from wp-content seems like a small overhead over just using &lt;code&gt;dirname(__FILE__)&lt;/code&gt; or &lt;code&gt;__DIR__&lt;/code&gt; though. I'm all for WordPress providing a simpler API to an autoloader, but it would be great if the actual autoloader was exposed too.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then any plugin can register it's class paths in a 'register_autoload_paths' hook that I'd proposed to be called by WordPress just before 'init` and WordPress can collect all those files into an array and run a very simple autoloader when needed
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is there any reason plugins couldn't register and get access to autoloaded classes immediately if they wanted? Authors could always wrap the call to &lt;code&gt;register_autoload_path()&lt;/code&gt; in an &lt;code&gt;add_action()&lt;/code&gt; if they wanted.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
HOWEVER, the idea of an autoloader is mostly moot anyways, at least until we make some significant changes in WordPress and/or best practices for plugin and theme development all because of how WordPress plugins and themes bootstrap themselves.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PSR autoloading is already best practices for PHP in general, which I don't see any harm in WordPress at least providing minimal support for. No BC breaks are required and it's purely opt-in.
&lt;/p&gt;
&lt;p&gt;
Plugins can already bootstrap themselves with their own PSR autoloader, or they could use one provided by WordPress. WordPress provides useful tools to plugins (like &lt;code&gt;$wpdb&lt;/code&gt;) so they don't have to reinvent the wheel every time. An autoloader would be a good addition IMO.
&lt;/p&gt;
&lt;p&gt;
Grepping a recent site build, there are 9 plugins (out of 22) that have calls to &lt;code&gt;spl_autoload_register&lt;/code&gt;! How many plugins would use their own DB abstraction layer if WordPress didn't provide &lt;code&gt;$wpdb&lt;/code&gt;?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are few non-trivial plugins or themes do not add actions or filters on the 'init' hook, and most developers I've seen using classes place these hooks in the a method of the class file. And placing hook initialization code outside of classes means separating the hook from the code it invokes making maintenance more difficult. And most of my systems I've worked on have over 50 classes and even with all those classes very few of them are without actions or filters that need to be hooked on page load. So if you autoload those classes you don't end up setting the actions and filters the code requires.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think I follow this. Autoloading is just a more consistent and maintainable way of requiring classes. Instantiating them shouldn't be affected.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So yes we can get an autoloader, even a PSR-0/4 autoloader, but it would be a Pyrrhic victory. At least until WordPress adds an alternate approach to registering post types, taxonomies, and hooks I can't see an autoloader providing any real, practical benefit for WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As a plugin developer, having a standard autoloader would be a big victory. I really don't think the ability to to improve things like post type registration would be harmed by making this first step.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>iskin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 14:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:7/1392215238944456</guid>
      <description>&lt;p&gt;
Note, that Compass had no stable releases for a more that year: &lt;a class="ext-link" href="http://rubygems.org/gems/compass/versions"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://rubygems.org/gems/compass/versions&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It generate a lot of unnecessary prefixes. For example, border-radius doeanâ€™t need prefixes: &lt;a class="ext-link" href="http://caniuse.com/border-radius"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://caniuse.com/border-radius&lt;/a&gt;
When Fotorama was moved from Compass it save 10 % of their CSS: &lt;a class="ext-link" href="https://twitter.com/fotoramajs/status/362686759944982528"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://twitter.com/fotoramajs/status/362686759944982528&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, it doesnâ€™t support a lot of prefixes. No @keyframes prefixes in stable release. No prefixes for selectors. No prefixes for calc() function.
&lt;/p&gt;
&lt;p&gt;
But @wonderboymusic is right, Autoprefixer is only about prefixes and backward compatible is very different task (BTW, opacity never need prefixes). But you can use Compass for compatible tasks and Autoprefixer will clean it outdated prefixes and add prefixes, that it doesnâ€™t support.
&lt;/p&gt;
&lt;p&gt;
But I think, best solution is to add own mixins for backward compatible, because most of IE hacks is very slow (and old IEs are used on very old PC) and in every case we need to think, does this feature is required or we can use graceful degradation (like in border radius, gradients).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12502 (wordpress portability) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12502#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12502#comment:6/1392213590715499</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17048" title="#17048: feature request: URLs delivered to the browser should be root-relative (closed: maybelater)"&gt;#17048&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>27110.diff attached to Ticket #27110</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:57:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27110/27110.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27110/27110.diff/1392213439222136</guid>
      <description>&lt;p&gt;
Add filter to WP_Plugins_List_Table
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27110 (Allow filtering the plugin list in the admin) created</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27110/1392213407110572</guid>
      <description>&lt;p&gt;
At the moment, as decided in many tickets (such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23403" title="#23403: defect (bug): Add folder support for the mu-plugins directory (similar to how ... (closed: duplicate)"&gt;#23403&lt;/a&gt;), mu-plugins can't be loaded from subdirectories. This isn't a big issue, but it means that the must-use plugins screen can seem a little bare.
&lt;/p&gt;
&lt;p&gt;
I'd like to add a filter to allow adding extra plugins to the screen. Patch attached.
&lt;/p&gt;
&lt;p&gt;
It's &lt;strong&gt;almost&lt;/strong&gt; possible to get this working as-is, but pagination will always be broken, as &lt;code&gt;WP_Plugins_List_Table&lt;/code&gt; calls &lt;code&gt;wp_redirect&lt;/code&gt; if the pagination doesn't seem right.
&lt;/p&gt;
&lt;p&gt;
(This could also be a filter in &lt;code&gt;get_mu_plugins&lt;/code&gt;, but it has limited use for other purposes.)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26986 (Editor Deletes Empty Spans) updated</title>
      
        <dc:creator>markcallen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:12:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26986#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26986#comment:10/1392210731982401</guid>
      <description>&lt;p&gt;
Where appropriate use a screen reader class to populate the span.
&lt;/p&gt;
&lt;p&gt;
TwentyFourteen has one ready, as does Bootstrap and others. You can just copy the styles to create your own if necessary.
&lt;/p&gt;
&lt;p&gt;
It would then look something like this
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;span class="genericon genericon-wordpress"&amp;gt;&amp;lt;span class="screen-reader-text"&amp;gt;WordPress&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
This wins on all fronts
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Content is kept on save
&lt;/li&gt;&lt;li&gt;It stays in place when changing between Visual/Text views
&lt;/li&gt;&lt;li&gt;Content is not displayed
&lt;/li&gt;&lt;li&gt;Screen readers get something meaningful
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21970 (404 error when a post has the same slug as with a deleted (trash) page.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 13:04:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21970#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21970#comment:16/1392210247614728</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6331 (TinyMCE should have a code button) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 12:58:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6331#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6331#comment:15/1392209882069429</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by cs_shadow. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m789946"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23268 (NOT EXISTS meta query with OR relation) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 12:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23268#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23268#comment:18/1392207885575402</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23268 (NOT EXISTS meta query with OR relation) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:57:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23268#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23268#comment:17/1392206258852579</guid>
      <description>&lt;p&gt;
No, I did not change keywords. Trac bug?
&lt;/p&gt;
&lt;p&gt;
The from keywords are comma separated, the to keywords are not. Inconsistent. Well, this belongs in another trac.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23268 (NOT EXISTS meta query with OR relation) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23268#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23268#comment:16/1392206037275776</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ran into this bug today. Please fix for 3.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21864.patch attached to Ticket #21864</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21864/21864.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21864/21864.patch/1392205457704333</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21864 (PHPDoc incorrect with the return value of add_*_meta functions) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 11:42:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21864#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21864#comment:8/1392205321123004</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21864/21864.patch" title="Attachment '21864.patch' in Ticket #21864"&gt;21864.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21864/21864.patch" title="Download"&gt;â€‹&lt;/a&gt; is a follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/24490" title="PHPDoc fixes and additions. fixes #24616."&gt;[24490]&lt;/a&gt;. Reflects that &lt;code&gt;update_*_meta()&lt;/code&gt; functions can return a meta ID.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #27094 (get_boundary_post() doesn't work for custom post types) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27094#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27094#comment:2/1392202108760462</guid>
      <description>&lt;p&gt;
A workaround:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function set_post_type_for_get_boundary_post_27094( $query ) {
	$query-&amp;gt;set( 'post_type', 'page' );
}
...
add_action( 'pre_get_posts', 'set_post_type_for_get_boundary_post_27094' );
$post = get_boundary_post();
remove_action( 'pre_get_posts', 'set_post_type_for_get_boundary_post_27094' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27094 (get_boundary_post() doesn't work for custom post types) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:37:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27094#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27094#comment:1/1392201447766704</guid>
      <description>&lt;p&gt;
Perhaps we should add a filter on &lt;code&gt;$query_args&lt;/code&gt;, or make the function accept an associative array of arguments by checking &lt;code&gt;func_num_args()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27096 (Similar strings for keeping site updated) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:14:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27096#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27096#comment:4/1392200088343302</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27096 (Similar strings for keeping site updated) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27096#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27096#comment:3/1392200053348055</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27167" title="Merge two similar strings. props pavelevap. fixes #27096."&gt;27167&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Merge two similar strings. props pavelevap. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27096" title="#27096: defect (bug): Similar strings for keeping site updated (closed: fixed)"&gt;#27096&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27167]: Merge two similar strings. props pavelevap. fixes #27096.</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27167/1392200052342317</guid>
      <description>&lt;p&gt;
Merge two similar strings. props pavelevap. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27096" title="#27096: defect (bug): Similar strings for keeping site updated (closed: fixed)"&gt;#27096&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27109 (Wrong $parent_file value in wp-admin/update-core.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27109#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27109#comment:1/1392199470188673</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27109 (Wrong $parent_file value in wp-admin/update-core.php) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 10:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27109/1392199428790984</guid>
      <description>&lt;p&gt;
When Updates menu item was moved from Tools to Dashboard in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13588" title="Move Tools -&amp;gt; Upgrade to Dashboard -&amp;gt; Updates. As per dev meetup ..."&gt;[13588]&lt;/a&gt;, &lt;code&gt;$parent_file&lt;/code&gt; was not updated: &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/3.8.1/src/wp-admin/update-core.php#L459"&gt;tags/3.8.1/src/wp-admin/update-core.php#L459&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/3.8.1/src/wp-admin/update-core.php#L459" title="Download"&gt;â€‹&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_admin_page_parent()&lt;/code&gt; correctly overrides it with &lt;code&gt;index.php&lt;/code&gt;. This leaves me wondering if the explicit declaration is actually necessary, but we have it on other admin screens as well, so let's just update it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27108 (Add Shortcodes Support In Widgets) updated</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:49:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27108#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27108#comment:2/1392198598935461</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27108#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10457" title="#10457: enhancement: Parse shortcodes in text widgets by default (closed: fixed)"&gt;#10457&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I tried to search before posting but never found that ticket, yikes! Thanks for the quick reply &amp;amp; I'll try to track that ticket :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10457,â€‹27108 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10457%2C27108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10457%2C27108/1392198264953103</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10457" title="#10457: enhancement: Parse shortcodes in text widgets by default (closed: fixed)"&gt;#10457&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>default-filters.php.patch attached to Ticket #27108</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:41:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27108/default-filters.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27108/default-filters.php.patch/1392198091872620</guid>
      <description>&lt;p&gt;
Shortcodes support to text widgets...
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27108 (Add Shortcodes Support In Widgets) created</title>
      
        <dc:creator>hardeepasrani</dc:creator>

      <pubDate>Wed, 12 Feb 2014 09:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27108/1392198064429542</guid>
      <description>&lt;p&gt;
Use all use [shortcodes] on our WordPress sites for various talks. It's a great way to do thinks is short, that's why they're "shortcodes."
&lt;/p&gt;
&lt;p&gt;
So, I was wondering if you'd like to add shortcodes support in WordPress' text widget, or adding a new shortcode widget to WordPress code?
&lt;/p&gt;
&lt;p&gt;
I have added the patch for the shortcodes support in text widget... :)
&lt;/p&gt;
&lt;p&gt;
Your two cents?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27099 (Input validation on wp-includes/ms-blogs.php in line 52) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 12 Feb 2014 07:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27099#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27099#comment:3/1392190395335838</guid>
      <description>&lt;p&gt;
&lt;code&gt;$blogname&lt;/code&gt; is, but it's still trusted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24859 (Media Library does not have a loading indicator) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 07:00:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24859#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24859#comment:15/1392188428462418</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
kadamwhite, still happy with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24859/24859.2.diff" title="Attachment '24859.2.diff' in Ticket #24859"&gt;24859.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24859/24859.2.diff" title="Download"&gt;â€‹&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27093 (Cannot install WordPress when a custom user table is defined) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 07:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27093#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27093#comment:4/1392188420766924</guid>
      <description>&lt;p&gt;
Before &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25115" title="Remove 'admin' as a fallback for username in install. props tivnet, ..."&gt;[25115]&lt;/a&gt;, when installing with a custom user table, we were still forcing the 'admin' username (see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/13134" title="First pass at allowing username/password selection upon install. ..."&gt;[13134]&lt;/a&gt;). However, the original intention, per &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10396#comment:5" title="Comment 5 for #10396: task (blessed): Pick an username during the install (closed: fixed)"&gt;ticket:10396:5&lt;/a&gt;, was to only create the user if there are no other administrators in the database.
&lt;/p&gt;
&lt;p&gt;
I guess we should either allow to select a username even with a custom user table, or detect the current administrator's username and use that.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27093/27093.patch" title="Attachment '27093.patch' in Ticket #27093"&gt;27093.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27093/27093.patch" title="Download"&gt;â€‹&lt;/a&gt; is an attempt at always allowing to select a username. It throws errors if you enter an email of an existing user, but with a different username, so it needs more work if we want to go in that direction.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/27093/27093.2.patch" title="Attachment '27093.2.patch' in Ticket #27093"&gt;27093.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/27093/27093.2.patch" title="Download"&gt;â€‹&lt;/a&gt; implements autodetection of the current administrator's username instead of a hard-coded fallback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25987 (CSS text-rendering property causing issues with headlines in Chrome) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 12 Feb 2014 06:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25987#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25987#comment:2/1392186462790489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27048 (Export: Allow multiple post types to be selected) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 12 Feb 2014 05:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27048#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27048#comment:15/1392181609075918</guid>
      <description>&lt;p&gt;
It looks like the tests in &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/phpunit/tests/export/class-wp-export-query.php"&gt;/tests/phpunit/tests/export/class-wp-export-query.php&lt;/a&gt; need to be expanded.
&lt;/p&gt;
&lt;p&gt;
Easier said than done...
&lt;/p&gt;
&lt;p&gt;
If you run &lt;code&gt;phpunit --group export&lt;/code&gt; results in &lt;code&gt;Tests: 33, Assertions: 0, Skipped: 33.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;To forcibly run the skipped tests for an open ticket, you may specify that ticket as a group:&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
If you run &lt;code&gt;phpunit --group 22435&lt;/code&gt; results in &lt;code&gt;Tests: 39, Assertions: 0, Skipped: 39.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
If I run phpunit with the &lt;code&gt;--verbose&lt;/code&gt; switch various errors occur:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Export_Query class doesn't exist&lt;/code&gt;
&lt;code&gt;wp_export function doesn't exist&lt;/code&gt;
&lt;code&gt;WP_Export_Returner class doesn't exist&lt;/code&gt;
&lt;code&gt;WP_Post_IDs_Iterator class doesn't exist&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
All the tests &lt;code&gt;class-wp-export-query.php&lt;/code&gt; are attached to &lt;code&gt;@group export&lt;/code&gt; &amp;amp; &lt;code&gt;@ticket 22435&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22435" title="#22435: enhancement: Export API (new)"&gt;#22435&lt;/a&gt; Export API.
&lt;/p&gt;
&lt;p&gt;
Looking at &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/26370" title="When setting `WP_TESTS_FORCE_KNOWN_BUGS` to `true`, it is preferable ..."&gt;r26370&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"When setting WP_TESTS_FORCE_KNOWN_BUGS to true, it is preferable that some forced tests are still skipped when they call classes or functions that do not exist, producing fatal errors."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is all pretty much getting beyond me now and it hurts ;)
&lt;/p&gt;
&lt;p&gt;
Some extra feedback and guidance would be extremely helpful please :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:59:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:10/1392181159740474</guid>
      <description>&lt;p&gt;
This would not set thumbnails_cached to true. It's possible someone is checking that de facto public property, no?
&lt;/p&gt;
&lt;p&gt;
I was not aware of a situation where $wp_query-&amp;gt;posts is empty but $wp_query-&amp;gt;post is not. Though perhaps if that is actually something that occurs, we should return false after all? (Ideally, posts&lt;a class="missing changeset" title="No changeset 0 in the repository"&gt;[0]&lt;/a&gt; actually gets populated with post, but that's a separate thing.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26321 (Warning message for update_post_thumbnail_cache()) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26321#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26321#comment:9/1392180495043641</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27166" title="Don't iterate over `$wp_query-&amp;gt;posts` in ..."&gt;27166&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Don't iterate over &lt;code&gt;$wp_query-&amp;gt;posts&lt;/code&gt; in &lt;code&gt;update_post_thumbnail_cache()&lt;/code&gt; if it is empty. Adds unit tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props SergeyBiryukov, for the original patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26321" title="#26321: defect (bug): Warning message for update_post_thumbnail_cache() (closed: invalid)"&gt;#26321&lt;/a&gt;.&lt;br /&gt;
 &lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [27166]: Don't iterate over `$wp_query-&gt;posts` in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/27166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/27166/1392180494445040</guid>
      <description>&lt;p&gt;
Don't iterate over &lt;code&gt;$wp_query-&amp;gt;posts&lt;/code&gt; in &lt;code&gt;update_post_thumbnail_cache()&lt;/code&gt; if it is empty. Adds unit tests.
&lt;/p&gt;
&lt;p&gt;
Props SergeyBiryukov, for the original patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26321" title="#26321: defect (bug): Warning message for update_post_thumbnail_cache() (closed: invalid)"&gt;#26321&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:41/1392180249682520</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:40/1392180230498066</guid>
      <description>&lt;p&gt;
Added &lt;a href="https://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch"&gt;trac-21811-image-edit-view-01.patch&lt;/a&gt; which attempts to do the minimum to integrate image-edit.js into the EditImage view by passing the view itself to imageEdit.open() so we can set the previous state on the controller upon imageEdit.close().
&lt;/p&gt;
&lt;p&gt;
What has me completely stumped is why setting the state to 'image-edit' in an ImageDetails View (ie: editing an embedded attachment in tinyMCE) works so well, but attempting to set the same state in the same way within an Attachment.Details view (for example, when choosing a Featured Image) fails silently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:66/1392180017313453</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:65" title="Comment 65"&gt;georgestephanis&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If that's something that we don't wanna support, that's fine, just wanted to drop in an explanation of why it had been there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I only removed those in the patch I uploaded because others suggested they were not needed. I personally have not strong opinion on that topic either way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>trac-21811-image-edit-view-01.patch attached to Ticket #21811</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21811/trac-21811-image-edit-view-01.patch/1392179942231985</guid>
      <description>&lt;p&gt;
Builds on gcorne's patch by passing in the view to imageEdit, so that we can properly close the editor and revert to the previous view.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:39/1392179861532179</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21811#comment:37" title="Comment 37"&gt;paaljoachim&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about max image size like this plugin?:
&lt;a class="ext-link" href="http://wordpress.org/plugins/imsanity/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/plugins/imsanity/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like this idea a lot, but I don't feel that it's really in the scope of what this ticket is trying to accomplish. Perhaps you may wish to submit a new ticket for an enhancement, see if it gains any traction?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21811 (Add image editing UI to the media modal) updated</title>
      
        <dc:creator>tomauger</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:35:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21811#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21811#comment:38/1392179722673391</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21811#comment:36" title="Comment 36"&gt;dnavarrojr&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd love to see the ability to set minimum image dimensions for uploads.  And the possibility of extending the canvas to meet those dimensions... ie, minimum dimensions are 400x300 and a 200x225 image is uploaded, so it's placed in the middle of a white 400x300 canvas.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure that this is a good thing to enable globally - I mean, that behaviour may not &lt;em&gt;always&lt;/em&gt; be the desired behaviour. My feeling is that this would be plugin territory, but others may have different opinions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25623 (The design of update_option etc makes race conditions likely to happen) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:28:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25623#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25623#comment:3/1392179334786390</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23330 (Allow autoloading all options, not just autoload = yes options) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23330#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23330#comment:13/1392179310133060</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:19:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:65/1392178794250076</guid>
      <description>&lt;p&gt;
Just a bit of clarification, the reason I had included the option to fully duck-punch the functionality -- and pass in the $load and $require_once was so that it could -- for example -- clock analytics on how long each template include takes to run on average, and cache ones as determined by the back-end.
&lt;/p&gt;
&lt;p&gt;
The ability to add an absolute path and have it included is spiffy for the latter part, but there's no good way to clock the time it takes for the include to evaluate, short of faking a duck-punch with the existing filter and snagging the arguments passed in via a &lt;code&gt;debug_backtrace()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
If that's something that we don't wanna support, that's fine, just wanted to drop in an explanation of why it had been there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27078 (Use Autoprefixer for CSS vendor prefixes) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27078#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27078#comment:6/1392178634070269</guid>
      <description>&lt;p&gt;
Seems like this is just an intermediate step.
&lt;/p&gt;
&lt;p&gt;
I would much rather we go all-in and use Compass. I just messed around with grunt-autoprefixer + LESS for an hour, I don't think it is mind-blowingly great. Any tool should take care of all weird back-compat-needing properties like &lt;code&gt;opacity&lt;/code&gt;. autoprefixer doesn't touch it, so a mixin is required. Compass does: &lt;a class="ext-link" href="http://compass-style.org/examples/compass/css3/opacity/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://compass-style.org/examples/compass/css3/opacity/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Prefixes: &lt;a class="ext-link" href="http://compass-style.org/examples/compass/css3/border_radius/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://compass-style.org/examples/compass/css3/border_radius/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13239.8a.diff attached to Ticket #13239</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:07:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/13239.8a.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/13239.8a.diff/1392178075437178</guid>
      <description>&lt;p&gt;
Fixed typo in 13239.8.diff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:07:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:64</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:64/1392178049199579</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:63" title="Comment 63"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I thought you meant something more like: ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why would you want to evaluate the expression &lt;code&gt;$stylesheet . '/' . $template_name&lt;/code&gt; twice?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The code currently calls &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; once per iteration.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not for the one the matches, it's called twice.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(The &lt;code&gt;else if ( $filepath = file_exists( $filepath = get_template_directory() . '/' . $template_name ) )&lt;/code&gt; line also means &lt;code&gt;$filepath&lt;/code&gt; ends up being &lt;code&gt;true&lt;/code&gt; rather than the path. :) )
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doh!  Stupid typo &lt;em&gt;(so hard (for me) to get these right the first time. It's not for lack of trying.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
13239.8a.diff will come next.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 04:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:63/1392177608311425</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:62" title="Comment 62"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="5"&gt;&lt;li&gt;Captured value of expressions that called &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; into variable &lt;code&gt;$filepath&lt;/code&gt; so those functions need not be called twice &lt;em&gt;(and so that value is easier to debug within &lt;code&gt;locate_template()&lt;/code&gt;).&lt;/em&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I thought you meant something more like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$stylesheet = get_stylesheet_directory();
// ...
} else if ( file_exists( $stylesheet . '/' . $template_name ) ) {
         $located = $stylesheet . '/' . $template_name;
         break;
&lt;/pre&gt;&lt;p&gt;
(Ditto for template directory.)
&lt;/p&gt;
&lt;p&gt;
The code currently calls &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; once per iteration.
&lt;/p&gt;
&lt;p&gt;
(The &lt;code&gt;else if ( $filepath = file_exists( $filepath = get_template_directory() . '/' . $template_name ) )&lt;/code&gt; line also means &lt;code&gt;$filepath&lt;/code&gt; ends up being &lt;code&gt;true&lt;/code&gt; rather than the path. :) )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13239 (Filter locate_template template_names variable) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 03:39:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13239#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13239#comment:62/1392176373748378</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13239#comment:61" title="Comment 61"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I agree if if we end up going with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/13239/13239.2.diff" title="Attachment '13239.2.diff' in Ticket #13239"&gt;13239.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/13239/13239.2.diff" title="Download"&gt;â€‹&lt;/a&gt; (plus hook docs).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just added &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/13239/13239.8.diff" title="Attachment '13239.8.diff' in Ticket #13239"&gt;13239.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/13239/13239.8.diff" title="Download"&gt;â€‹&lt;/a&gt; based on 13239.2.diff with the following changes:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Adds hook docs.
&lt;/li&gt;&lt;li&gt;Follows new bracing coding standard &lt;em&gt;(i.e. don't use single line &lt;code&gt;if()&lt;/code&gt; without braces.)&lt;/em&gt;
&lt;/li&gt;&lt;li&gt;Added spaces in expressions to be consistent with WordPress coding standard
&lt;/li&gt;&lt;li&gt;Added ability to short-circuit loading a template file by having the filter return &lt;code&gt;false&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Captured value of expressions that called &lt;code&gt;get_stylesheet_directory()&lt;/code&gt; and &lt;code&gt;get_template_directory()&lt;/code&gt; into variable &lt;code&gt;$filepath&lt;/code&gt; so those functions need not be called twice &lt;em&gt;(and so that value is easier to debug within &lt;code&gt;locate_template()&lt;/code&gt;).&lt;/em&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>13239.8.diff attached to Ticket #13239</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 03:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13239/13239.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13239/13239.8.diff/1392175929309343</guid>
      <description>&lt;p&gt;
Based on 13239.2, adds hook docs, follows new brace standard, captures/uses $filepath and adds short-circuit.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Wed, 12 Feb 2014 03:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:15/1392174035340738</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:12" title="Comment 12"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
-1 on a PSR-0 or PSR-4 compatible auto-loader and on the use of Composer for plugins and themes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also agreed with Mike on this one. There's plenty of ways to implement it (and I do it differently myself at times), and none of them fit the WP paradigm. On the other hand, it's trivial to implement it yourself (mine's 46 lines of code).
&lt;/p&gt;
&lt;p&gt;
Also -1 on Composer for plugins/themes, but there's some interesting code in there that can be extracted for dependencies (their port of the libzypp dependency resolver).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:57:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:14/1392173861031094</guid>
      <description>maybelater: &lt;p&gt;
I'm not sure there's a single line in MikeSchinkel's two comments that I disagree with.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:13/1392173617255310</guid>
      <description>&lt;p&gt;
Oh, and my issue with Composer for plugins and themes is that Composer does not map to the problem space that is user-added plugins and themes.  Composer is about managing shared libraries but WordPress doesn't support shared libraries.
&lt;/p&gt;
&lt;p&gt;
Plus Composer is very strict in its directory layout; it puts everything under a &lt;em&gt;"vendor"&lt;/em&gt; directory and that is not how plugins and themes store their file, unless we were to &lt;em&gt;(optionally)&lt;/em&gt; have vendor directories in each and every plugin and theme.
&lt;/p&gt;
&lt;p&gt;
OTOH having multiple vendor directories gets around one of the main benefits of Composer IMO and that's for Composer to be able to bring in &lt;strong&gt;only one&lt;/strong&gt; copy of a latest compatible version of a given library even though multiple other libraries may reference it. Basically it's the &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Highlander_(film)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Highlander mantra&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
And that's a problem because as stated above WordPress has no built-in way to manage libraries used by multiple plugins/themes, especially when the versions used are different but all the function/class name are the same. So WordPress plugins/themes really can't use reusable libraries, and reusable libraries is what Composer is about. &lt;em&gt;(WordPress websites could use Composer if you ignore its opinionated directory structure, but that's not the use-case being discussed here.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
So I don't think we can apply Composer to work with plugin and theme dependencies unless and until at least WordPress provides mechanisms to share libraries across plugins/themes. I would instead like to see WordPress use some of the concepts in Composer to solve the problem in it's own WordPress-ish way, including adding a way to share libraries across plugins/themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25987 (CSS text-rendering property causing issues with headlines in Chrome) closed</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25987#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25987#comment:1/1392172721304551</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21300 (Implement autoloader compatible with PSR-0 / PSR-4 for plugins and themes) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 12 Feb 2014 02:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21300#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21300#comment:12/1392172559745324</guid>
      <description>&lt;p&gt;
-1 on a PSR-0 or PSR-4 compatible auto-loader and on the use of Composer for plugins and themes.
&lt;/p&gt;
&lt;p&gt;
Those three are all PHP &lt;em&gt;"best practices,"&lt;/em&gt; but I think most of us know that WordPress has it's own best practices that are at times conflicting with PHP best practices, and for good reason.
&lt;/p&gt;
&lt;p&gt;
PHP best practices for configuration management typically target those who are setting up development, testing, staging and production environments where PHP will be deployed and used and where code is deployed by either developers or system administrator.  All of those features work very well for that use-case, but WordPress has a different primary use-case.
&lt;/p&gt;
&lt;p&gt;
The WordPress use-case is to have the core code deployed by site builders, many of whom cannot write PHP code, or even by automated app installers like Fantasico. And then plugin and theme code is often deployed by end-users. The WordPress use-case uses well-known directory structures, i.e. &lt;code&gt;/wp-content/themes&lt;/code&gt;, &lt;code&gt;/wp-content/plugins&lt;/code&gt; where self-contained and all-inclusive &lt;em&gt;"packages"&lt;/em&gt; are installed; this minimizes users needing to be involved on a technical level.
&lt;/p&gt;
&lt;p&gt;
Across plugins and themes there is potentially a large number of classes to autoload, but those classes do not follow the PSR-0/4 autoloader standard because there is no single top-level directory to load from, nor are there really vendor names. You can ignore the lack of common root and simulate vendor name with plugin name but then the class files either need to be in the root of the theme/plugin or they need to be stored in subdirectories that would be considered namespaces themselves. All-in-all this feels like a round peg in a square hole.
&lt;/p&gt;
&lt;p&gt;
Another solution would be for WordPress to implement an autoloader and then every plugin and theme  could opt-in to the autoloader, thus creating many top-level autoloader roots. But that seems silly because it might follow the letter of the PSR autoloaders but not the spirit, and we could end up with deeper subdirectory structures this way too.
&lt;/p&gt;
&lt;p&gt;
What I would propose instead of a PSR-0/4 auto-loader is a WordPress autoloader that is much simpler, one that has only the following method:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_autoload_path( $path_from_wp_content, $class_prefix )
&lt;/pre&gt;&lt;p&gt;
It might look like this in use:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_autoload_path( 'plugins/my-plugin', 'My_Plugin_' )
&lt;/pre&gt;&lt;p&gt;
Then any plugin can register it's class paths in a &lt;code&gt;'register_autoload_paths'&lt;/code&gt; hook that I'd proposed to be called by WordPress just before &lt;code&gt;'init&lt;/code&gt;` and WordPress can collect all those files into an array and run a very simple autoloader when needed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function _autoload( $class_name ) {
	if ( isset( $this-&amp;gt;_autoload_classes[$class_name] ) ) {
		require( $this-&amp;gt;_autoload_classes[$class_name] );
	}
}
&lt;/pre&gt;&lt;p&gt;
And for those concerned the overhead of directory scans we could allow optional hardcoded autoloader registration like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_autoload_path( 'plugins/my-plugin', array(
	'My_Plugin_Foo_Class' =&amp;gt; 'class-foo.php',
	'My_Plugin_Bar_Class' =&amp;gt; 'class-bar.php',
	'My_Plugin_Baz_Class' =&amp;gt; 'class-baz.php',
));
&lt;/pre&gt;&lt;p&gt;
FWIW I've implemented a library where you can see the autoloader &lt;a class="ext-link" href="https://github.com/newclarity/ExoWP/blob/master/core/class-autoloader.php#L62"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;here&lt;/a&gt; although it doesn't support the hardcoding I mention above.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;HOWEVER, the idea of an autoloader is mostly moot anyways&lt;/strong&gt;, at least until we make some significant changes in WordPress and/or best practices for plugin and theme development all because of how WordPress plugins and themes bootstrap themselves.
&lt;/p&gt;
&lt;p&gt;
There are few non-trivial plugins or themes do not add actions or filters on the 'init' hook, and most developers I've seen using classes place these hooks in the a method of the class file. And placing hook initialization code outside of classes means separating the hook from the code it invokes making maintenance more difficult. And most of my systems I've worked on have over 50 classes and even with all those classes very few of them are without actions or filters that need to be hooked on page load. So if you autoload those classes you don't end up setting the actions and filters the code requires.
&lt;/p&gt;
&lt;p&gt;
So yes we can get an autoloader, even a PSR-0/4 autoloader, but it would be a Pyrrhic victory. At least until WordPress adds an alternate approach to registering post types, taxonomies, and hooks I can't see an autoloader providing any real, practical benefit for WordPress.
&lt;/p&gt;
&lt;p&gt;
BTW, for the library I mention above the approach I'm using is a different run-mode for development vs. deployment; in the former all classes are loaded and then the array of classes and class paths is serialized to a file that gets loaded when deployed for production. This works well for building sites where version control is used between development source and production deployment but would not really work well for the normative WordPress use-case of end-users adding plugins and themes on live sites.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21300#comment:5" title="Comment 5"&gt;griffinjt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've implemented a PSR-0 compliant autoloader in &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/soliloquy-lite/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Soliloquy&lt;/a&gt; and so far there have been no issues (over 10k+ downloads total for free and paid) that have been reported.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm. Didn't want to pick on your work here, but since you presented it as an example of an autoloader done right I figured you'd be okay to open it for discussion.
&lt;/p&gt;
&lt;p&gt;
I just downloaded Soliliquy Lite and compared to &lt;a class="ext-link" href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;PSR-0&lt;/a&gt; and unless I'm missing something Soliliquy Lite is not PSR-0 compatible because it doesn't use &lt;a class="ext-link" href="http://www.php.net/manual/en/language.namespaces.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;PHP namespaces&lt;/a&gt;, and that's appears to be a requirement in PSR-0 &lt;em&gt;(as well as in PSR-4):&lt;/em&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;em&gt;- A fully-qualified namespace and class must have the following structure:
&lt;/em&gt;&lt;code&gt;\&amp;lt;Vendor Name&amp;gt;\(&amp;lt;Namespace&amp;gt;\)*&amp;lt;Class Name&amp;gt;&lt;/code&gt;
&lt;em&gt;- Each namespace must have a top-level namespace ("Vendor Name").
&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;As an aside, you could add Namespaces but until core adds Namespaces and sets a precent for usage in WordPress I'm going to stick with "poor-man's namespacing" (i.e. prefixes.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
More importantly, it appears  you are loading hooks in the constructor of most of your classes, and then in the main &lt;code&gt;'init'&lt;/code&gt; hook you are creating instances of all those classes &lt;em&gt;(in the admin)&lt;/em&gt; or just 3 of the 9 outside the admin. And outside the admin don't appear to be creating new instances of the others. So of the two main code paths admin and front end you are always instantiating the same classes, per code path.
&lt;/p&gt;
&lt;p&gt;
And in your autoloader you are using a &lt;code&gt;file_exists()&lt;/code&gt; call before your &lt;code&gt;require()&lt;/code&gt; call so your plugin is doing double work for each file you are loading. If you only needed to load a small subset of classes autoloading is definitely better, but if you are going to autoload every class every time anyway I'd argue you'd be better off getting rid of the autoloader and just doing direct &lt;code&gt;require()&lt;/code&gt;s for the classes you plan to instantiate within &lt;code&gt;init&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
So I recommend we close this ticket as &lt;strong&gt;&lt;em&gt;maybelater.&lt;/em&gt;&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:6/1392166299365812</guid>
      <description>&lt;p&gt;
I don't know if it's worth patching older themes for it, but in general I'd follow core.
&lt;/p&gt;
&lt;p&gt;
The basic argument for omitting @return void, for what it's worth, is rooted in the fact that we're always backwards compatible. For us, changing the return value of a function is pretty much a no-no. However, I have no qualms with adding a return value to a function that didn't have one previously, and we've done that a number of times. To me, @return void "bakes in" that the function returns no value, making it explicit. It's also possible to have the opposite feeling: that @return void specifically tells developers to not rely on a return value, at least until further notice. You could see it both ways.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27098 (Bundled Themes: ditch all uses of `@return void`) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27098#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27098#comment:5/1392165313891136</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27098#comment:4" title="Comment 4"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When we developed the standard last fall, the decision was made to ignore the use of &lt;code&gt;@return void&lt;/code&gt; in the bundled themes, as they had been utilizing that style since Twenty Ten.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The decision reference: &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-sfd&amp;amp;day=2013-09-25&amp;amp;sort=asc#m48668"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://irclogs.wordpress.org/chanlog.php?channel=wordpress-sfd&amp;amp;day=2013-09-25&amp;amp;sort=asc#m48668&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think there's a good argument in favor of removing them altogether from the bundled themes -- this would bring that code in-line with the core standard.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Side note: It's important to remember that while the core inline documentation standard is largely based on and inspired by the phpDocumenter spec, it doesn't adhere to it 100 percent.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also to add, that some of the recent changes are based on the draft PSR-5, of which many code editors and phpDocumentor itself doesn't follow fully yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:08:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:14/1392163721090036</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26669/26669.3.diff" title="Attachment '26669.3.diff' in Ticket #26669"&gt;26669.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26669/26669.3.diff" title="Download"&gt;â€‹&lt;/a&gt; is a quick split proposal using comments in wp-admin.css, a lot of it based on jorbin's work. Some thoughts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The number of times you will see some markers repeated (common, forms, etc.) is a pretty clear indicator of the mess we're in.
&lt;/li&gt;&lt;li&gt;I'm leaving plugins-related CSS as part of list tables as well as common (the plugin details view).
&lt;/li&gt;&lt;li&gt;Themes is separate from appearance, due to the amount of CSS and assuming further changes due to continued work to align the manage and install screens.
&lt;/li&gt;&lt;li&gt;Not sure if users-tools-settings should be separate, or just put into common for now. it's a fairly small amount of CSS.
&lt;/li&gt;&lt;li&gt;Press This has two blobs, one currently indicated as part of settings (see above), the other as part of common. Not sure what to do with it.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26669 (wp-admin.css should be broken up into modules) updated</title>
      
        <dc:creator>ircbot</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:03:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26669#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26669#comment:13/1392163381886112</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in IRC in #wordpress-dev by helen. &lt;a class="ext-link" href="http://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2014-02-12&amp;amp;sort=asc#m789680"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26669.3.diff attached to Ticket #26669</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Wed, 12 Feb 2014 00:01:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26669/26669.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26669/26669.3.diff/1392163305481094</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>