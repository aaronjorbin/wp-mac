<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 03 Dec 2007 23:53:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:15/1196725998000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3614#comment:14" title="Comment 14"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We currently have 9 rewrite rules per page.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The other thing i noticed about that, Is that they're all before the more commonly used pages(eg. blog posts, comments, categories/tags)
&lt;/p&gt;
&lt;p&gt;
Maybe its possible to have them ordered somehow so that less commonly accessed URLs(such as trackback/attachment) are after the rest of the rules?
&lt;/p&gt;
&lt;p&gt;
Some people of course, Will want pages first before the blog post rules if they're using it for CMS reasons, but the majority of page requests are going to be post related, not page related.
&lt;/p&gt;
&lt;p&gt;
(I'm not too sure if this can be solved by changing priorities on some hooks, i've not looked into the rewrite details)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5414.patch attached to Ticket #5414</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Mon, 03 Dec 2007 23:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5414/5414.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5414/5414.patch/1196725629000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5414 (Avoid unnecesary call to get_userdata in get_permalink function) created</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Mon, 03 Dec 2007 23:46:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5414</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5414/1196725598000000</guid>
      <description>&lt;p&gt;
If permalink structure does not contain %author%, there is no need to call get_userdata.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 03 Dec 2007 23:40:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:14/1196725223000000</guid>
      <description>&lt;p&gt;
I would like to make some improvements in 2.4, but there are no guarantees it will happen given everything else that is scheduled for 2.4.  Here are my thoughts on how to address the page rewrite rules.
&lt;/p&gt;
&lt;p&gt;
We currently have 9 rewrite rules per page.  This, obviously, sucks.
The rules are there to avoid collisions for those who use category or tag
bases of "/" or those using %category%, %tag%, or %postname% at the
beginning of their permalink structure.  Most people don't do this,
making all of those page rules a huge waste.  For those who don't use
any of the above, let's add a catch-all set of page rules at the end
of the rewrite rule list.  Those who do use the above will get the old
behavior.  Losing hundreds of rewrite rules (thousands for some
people) and the need to update the rewrite rules every time a page is
changed would greatly improve performance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [102]: prevent a warning on filterall</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 03 Dec 2007 23:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/102/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/102/tests/1196723921975749</guid>
      <description>&lt;p&gt;
prevent a warning on filterall
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset in tests [101]: make sure errors are handled the same way in different environments</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 03 Dec 2007 22:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/101/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/101/tests/1196722337068038</guid>
      <description>&lt;p&gt;
make sure errors are handled the same way in different environments
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5413 (Unable to create &amp; delete categories in firefox) created</title>
      
        <dc:creator>norrs</dc:creator>

      <pubDate>Mon, 03 Dec 2007 22:06:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5413</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5413/1196719570000000</guid>
      <description>&lt;p&gt;
If I have javascript enabled in firefox, it doesn't let me create or delete categories.
If I try to delete a category, it popups an confirmation dialog if I want to, and I click yes and it's disappears. If I "refresh" the page / visit the same &lt;a class="ext-link" href="https://xxx/wp/wp-admin/categories.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://xxx/wp/wp-admin/categories.php&lt;/a&gt; - the category reappears.
&lt;/p&gt;
&lt;p&gt;
It works as it should if I disable javascript in firefox. This both effects firefox (latest) on ubuntu 7.10 and on windows.
&lt;/p&gt;
&lt;p&gt;
If I goto &lt;a class="ext-link" href="https://xxxx/wp/wp-admin/post-new.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://xxxx/wp/wp-admin/post-new.php&lt;/a&gt; and have javascript enabled, I'm supposed to be able to add categories from there too, but the same stuff happends here. After I try to submit , all fields just go blank as nothing happends.
&lt;/p&gt;
&lt;p&gt;
Is this releated to -&amp;gt; &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/5342#comment:2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.wordpress.org/ticket/5342#comment:2&lt;/a&gt; ?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5411 (Refactor next_post_link, previous_post_link) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 03 Dec 2007 20:02:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5411#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5411#comment:1/1196712177000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5410 (code correction shouldn't apply to anything within a &lt;pre/&gt; block) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 03 Dec 2007 20:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5410#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5410#comment:2/1196712139000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5408 (No need for unix execute permissions in wp-includes/js/tinymce/plugins/) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 03 Dec 2007 19:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5408#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5408#comment:2/1196711857000000</guid>
      <description>&lt;p&gt;
To correct this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;svn propdel svn:executeable [filename]
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5408 (No need for unix execute permissions in wp-includes/js/tinymce/plugins/) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Mon, 03 Dec 2007 19:48:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5408#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5408#comment:1/1196711337000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5087 (WYSIWYG Insert/Edit Image button issues) updated</title>
      
        <dc:creator>betacire</dc:creator>

      <pubDate>Mon, 03 Dec 2007 19:33:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5087#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5087#comment:23/1196710416000000</guid>
      <description>&lt;p&gt;
I have the same problem with mu-wordpress 1.3.
I installed two instances of mu-wordpress on the same hosting. No problem with 1.2.5a, problem occurs only with 1.3.
&lt;/p&gt;
&lt;p&gt;
Have you an idea ? Where to search to correct this problem ?
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5277 (Posts are de-categorized when upgrading to 2.3.x) updated</title>
      
        <dc:creator>snakefoot</dc:creator>

      <pubDate>Mon, 03 Dec 2007 18:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5277#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5277#comment:4/1196705334000000</guid>
      <description>&lt;p&gt;
I experience the same error when upgrading from WP 2.0 to WP 2.3, though I thought it was because I had multiple categories with the same slug (though with different parents).
&lt;/p&gt;
&lt;p&gt;
All categories are converted (with renamed slugs), but most of the posts become uncategorized.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2394 (Passwords are stored in an insecure un-salted form) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 03 Dec 2007 17:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2394#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2394#comment:25/1196703547000000</guid>
      <description>&lt;p&gt;
BTW, it looks like Drupal will be using phpass in a future release.  Check out the discussion here in which the author of phpass explains the benefits of phpass.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://drupal.org/node/29706"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://drupal.org/node/29706&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4779 (Proposal for HTTP POST and REQUEST API) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Mon, 03 Dec 2007 13:21:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4779#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4779#comment:8/1196688073000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unit Tests cover 99.9% over the HTTP API, the API is finished and works. The patch that changes the core of WordPress needs testing, but I'm planning on writing Unit Tests for that. Also need to go over performance tuning, but I'm not sure how much that will do.
&lt;/p&gt;
&lt;p&gt;
Parts that need consideration:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using the Plugin API instead of custom array
&lt;/li&gt;&lt;li&gt;Performance Fine-tuning
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5263 (Improved handling of profile-update errors) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 03 Dec 2007 12:53:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5263#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5263#comment:7/1196686404000000</guid>
      <description>&lt;p&gt;
It's also possible to do this in profile-update.php
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( is_wp_error( $errors ) ) {
        include_once('profile.php');
        exit;
}
&lt;/pre&gt;&lt;p&gt;
Then the $error object becomes available to profile.php. The other admin pages don't use a seperate -update.php file so perhaps DD32 has shown the right way to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5263-combine.diff attached to Ticket #5263</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 03 Dec 2007 12:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5263/5263-combine.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5263/5263-combine.diff/1196685896000000</guid>
      <description>&lt;p&gt;
combine logic from profile-update.php into profile.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5263 (Improved handling of profile-update errors) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Mon, 03 Dec 2007 12:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5263#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5263#comment:6/1196685608000000</guid>
      <description>&lt;p&gt;
I'll agree that saving in the options table isnt exactly nice..
&lt;/p&gt;
&lt;p&gt;
But i'm also agree that simply dieing on the error doesnt seem nice either.
&lt;/p&gt;
&lt;p&gt;
In keeping with WP's usual method of displaying the error at the top of the page, I'm including a patch to remove &lt;code&gt;profile-update.php&lt;/code&gt; all together and combining it into a single file. Nothing else seems to use the file (allthough some 3rd party app's might choose to use it? dunno?)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5263 (Improved handling of profile-update errors) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Mon, 03 Dec 2007 12:05:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5263#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5263#comment:5/1196683523000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5263#comment:4" title="Comment 4"&gt;pishmishy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's no reason to use wp_die(). This should be reserved for unrecoverable errors. User-friendly ways of handling errors should be used when possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hello pishmishy,
&lt;/p&gt;
&lt;p&gt;
Thanks for your contribution.  You are probably right that there are better ways of handling errors in WP.  However, my patch simply fixes a bug and brings the code into line with standard WP practice in handling errors.
&lt;/p&gt;
&lt;p&gt;
Your enhancement of temporarily saving error messages in the options table doesn't have much chance of being accepted by the commit devs, because it's such a radical change on a trivial patch and because of obvious problems (e.g. two users generating errors at approximately the same time will overwrite each other's messages).
&lt;/p&gt;
&lt;p&gt;
A new error-handing system sounds like a great idea for a new ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5263 (Improved handling of profile-update errors) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 03 Dec 2007 11:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5263#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5263#comment:4/1196680340000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There's no reason to use wp_die(). This should be reserved for unrecoverable errors. User-friendly ways of handling errors should be used when possible.
&lt;/p&gt;
&lt;p&gt;
My attached patch passes the error back to profile.php to be displayed in a fading box. This should help other proposed changes such as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5404" title="#5404: enhancement: Add pluggable function to enforce password strength (closed: duplicate)"&gt;#5404&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
(Note: I'm not entirely happy with passing the error back through the options table. I'm open to suggestions if a better way can be shown.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5263.patch attached to Ticket #5263</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 03 Dec 2007 11:06:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5263/5263.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5263/5263.patch/1196679969000000</guid>
      <description>&lt;p&gt;
Patch handles errors gracefully
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5263 (Improved handling of profile-update errors) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Mon, 03 Dec 2007 11:03:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5263#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5263#comment:3/1196679785000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [100]: add test_has_filter</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 03 Dec 2007 10:52:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/100/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/100/tests/1196679171434529</guid>
      <description>&lt;p&gt;
add test_has_filter
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Mon, 03 Dec 2007 10:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:30/1196679112000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:29" title="Comment 29"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(data)k requires two-way encryption.  We have that only if the mcrypt module is available.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would be possible to build two-way encryption out of MD5, if needed. It won't be as efficient as AES but should not be an issue in practice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [99]: MockAction: fix get_call_count()</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 03 Dec 2007 10:03:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/99/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/99/tests/1196676238880157</guid>
      <description>&lt;p&gt;
MockAction: fix get_call_count()
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>secret_key.diff attached to Ticket #5367</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 03 Dec 2007 06:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5367/secret_key.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5367/secret_key.diff/1196663901000000</guid>
      <description>&lt;p&gt;
Add SECRET_KEY to salt
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 03 Dec 2007 06:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:29/1196663785000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://www.cse.msu.edu/~alexliu/publications/Cookie/cookie.pdf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.cse.msu.edu/~alexliu/publications/Cookie/cookie.pdf&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That defines the following cookie structure.
&lt;/p&gt;
&lt;pre class="wiki"&gt;user name|expiration time|(data)k|HMAC( user name|expiration time|data|session key, k)
where k=HMAC(user name|expiration time, sk)
and where sk is a secret key
&lt;/pre&gt;&lt;p&gt;
To fulfill HMAC, we need the hash_hmac() function.  We can fall back to the Crypt_HMAC code from PEAR if that is not available.
&lt;/p&gt;
&lt;p&gt;
(data)k requires two-way encryption.  We have that only if the mcrypt module is available.  I don't know how widespread that is among hosts.  I think that the data field is optional, however. We don't have any additional data we need to put in the cookie.  Losing the data field loses the mcrypt requirement.
&lt;/p&gt;
&lt;p&gt;
Since most WP installs don't run over SSL, we have to drop session key.  The cookie now looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;user name|expiration time|HMAC( user name|expiration time, k)
where k=HMAC(user name|expiration time, sk)
and where sk is a secret key
&lt;/pre&gt;&lt;p&gt;
That looks pretty good, but leaves us with an attacker being able to create a cookie if he has access to the secret key in the DB. I think we can get around this by having part of the key defined in wp-config.php.  We currently save a randomly generated secret in the 'secret' field in the options table.  wp_salt() uses this for creating nonces.  We can supplement this secret by concatenating it with a SECRET_KEY defined in wp-config.php. We can provide a default SECRET_KEY, but users will have to change this to something unique for it to be effective in preventing an intruder who knows the DB secret from creating a cookie.  We don't allow viewing wp-config.php   from anywhere in WP, so SECRET_KEY should be safe from intruders who can see the DB or who have gained user permissions.  We could drop the secret from the DB and use just SECRET_KEY, but this would rely on users changing SECRET_KEY.  We can't rely on that, so augmenting SECRET_KEY with a randomly generated DB secret is necessary.  Not everyone will change the SECRET_KEY, but the option is there for those wanting extra protection.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [98]: prevent WP_IMPORTING redefinition warning</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 03 Dec 2007 03:39:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/98/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/98/tests/1196653165121451</guid>
      <description>&lt;p&gt;
prevent WP_IMPORTING redefinition warning
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset in tests [97]: fix theme switch test</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 03 Dec 2007 03:30:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/97/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/97/tests/1196652650415756</guid>
      <description>&lt;p&gt;
fix theme switch test
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset in tests [96]: add feed query test</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Mon, 03 Dec 2007 03:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/96/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/96/tests/1196652402952435</guid>
      <description>&lt;p&gt;
add feed query test
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>http.r6350.patch attached to Ticket #4779</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 02 Dec 2007 23:09:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4779/http.r6350.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4779/http.r6350.patch/1196636984000000</guid>
      <description>&lt;p&gt;
Changes WordPress core functions and Admin over to new HTTP API, based off of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6350" title="Hash passwords with phpass.  Add wp_check_pasword() and ..."&gt;r6350&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 02 Dec 2007 22:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:28/1196633906000000</guid>
      <description>&lt;p&gt;
Well, there is such a thing as Session Hijacking. Any thing that features Sessions will need to reset the Session Key after a jump in permissions. Such as accessing the administration panel and writing posts.
&lt;/p&gt;
&lt;p&gt;
So even if an attacker gains access to the session key by XSS, cookie hijacking, or whatever, it won't matter since the token will be brief enough.
&lt;/p&gt;
&lt;p&gt;
You can take it further and implement something that SMF has, which asks for authentication every 15 minutes to 2 hours. While this could be annoying (and it is really annoying in my humble opinion) it would negate most attacks such as this one and session hijacking.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Sun, 02 Dec 2007 20:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:27/1196628664000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:26" title="Comment 26"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The recipes using HMAC look good, however hash_hmac() is available only in recent PHP versions. We'll have to fall back to something else when it isn't available.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It is quite straightforward to build HMAC out of a hash function, and even using MD5 is OK for this because HMAC is not vulnerable to collision attacks. The Wikipedia article &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/HMAC"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;on HMAC&lt;/a&gt; shows how it is constructed. So I wouldn't let this be an impediment.
&lt;/p&gt;
&lt;p&gt;
This is still more complicated than building sessions, and importantly if the attacker gets access to the database and key, he can still log in as any user. So while it fixes the expiry issues it will not completely stop the problem that this ticket is about.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Dec 2007 20:35:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:26/1196627739000000</guid>
      <description>&lt;p&gt;
The recipes using HMAC look good, however hash_hmac() is available only in recent PHP versions. We'll have to fall back to something else when it isn't available.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3614 (Scaling issue with hundreds of pages) updated</title>
      
        <dc:creator>kicksonfire</dc:creator>

      <pubDate>Sun, 02 Dec 2007 19:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3614#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3614#comment:13/1196622479000000</guid>
      <description>&lt;p&gt;
I have been dealing with this issue for months and have found no solution either.. I indeed emailed the developers. What I want to know it ... What are the guarentees that this issue will be addressed in the next Wordpress version (2.4) ? Because it has been 11 months since the initial start of this ticket... and many releases have been released since.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5412 (Trailing comma creates blank tag) updated</title>
      
        <dc:creator>ionfish</dc:creator>

      <pubDate>Sun, 02 Dec 2007 17:55:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5412#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5412#comment:1/1196618129000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>dont_add_blank_tags.patch attached to Ticket #5412</title>
      
        <dc:creator>ionfish</dc:creator>

      <pubDate>Sun, 02 Dec 2007 17:54:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5412/dont_add_blank_tags.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5412/dont_add_blank_tags.patch/1196618073000000</guid>
      <description>&lt;p&gt;
Trims whitespace and trailing commas.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5412 (Trailing comma creates blank tag) created</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Sun, 02 Dec 2007 16:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5412</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5412/1196614666000000</guid>
      <description>&lt;p&gt;
In the tag box, put a trailing comma, like this:
&lt;/p&gt;
&lt;p&gt;
myfirsttag,
&lt;/p&gt;
&lt;p&gt;
It will create a blank tag and attach it to the post.
&lt;/p&gt;
&lt;p&gt;
Expected: tags with nothing but whitespace aren't created.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>5411.diff attached to Ticket #5411</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Sun, 02 Dec 2007 13:38:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5411/5411.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5411/5411.diff/1196602736000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5411 (Refactor next_post_link, previous_post_link) created</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Sun, 02 Dec 2007 13:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5411</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5411/1196602668000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;next_post_link&lt;/code&gt; and &lt;code&gt;previous_post_link&lt;/code&gt; use similar code and make unnecessary database queries to retrieve the previous/next post permalink.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5410 (code correction shouldn't apply to anything within a &lt;pre/&gt; block) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sun, 02 Dec 2007 05:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5410#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5410#comment:1/1196572634000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not to toot my own horn, but try &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/syntaxhighlighter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;SyntaxHighlighter&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6350]: Hash passwords with phpass.  Add wp_check_pasword() and ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Dec 2007 05:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6350</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6350/1196572451353219</guid>
      <description>&lt;p&gt;
Hash passwords with phpass.  Add wp_check_pasword() and wp_hash_password() functions. Props pishmishy.  see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2394" title="#2394: defect (bug): Passwords are stored in an insecure un-salted form (closed: fixed)"&gt;#2394&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2394 (Passwords are stored in an insecure un-salted form) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Dec 2007 05:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2394#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2394#comment:24/1196572451000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6350" title="Hash passwords with phpass.  Add wp_check_pasword() and ..."&gt;[6350]&lt;/a&gt;) Hash passwords with phpass.  Add wp_check_pasword() and wp_hash_password() functions. Props pishmishy.  see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2394" title="#2394: defect (bug): Passwords are stored in an insecure un-salted form (closed: fixed)"&gt;#2394&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5400 (Add action to wp-login) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Dec 2007 05:09:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5400#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5400#comment:1/1196572197000000</guid>
      <description>&lt;p&gt;
We're redoing user auth and cookies quite a bit for 2.4. It should make secure admin a bit simpler. We'll keep this in mind while we're overhauling things.  See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2394" title="#2394: defect (bug): Passwords are stored in an insecure un-salted form (closed: fixed)"&gt;#2394&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5367" title="#5367: defect (bug): Wordpress cookie authentication vulnerability (closed: fixed)"&gt;#5367&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5267 (Filter bloginfo_rss only passes one argument) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 02 Dec 2007 05:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5267#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5267#comment:10/1196571921000000</guid>
      <description>&lt;p&gt;
Oops, sorry, misread the thread.  Patch looks fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5410 (code correction shouldn't apply to anything within a &lt;pre/&gt; block) created</title>
      
        <dc:creator>robertaccettura</dc:creator>

      <pubDate>Sun, 02 Dec 2007 04:17:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5410</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5410/1196569057000000</guid>
      <description>&lt;p&gt;
In 2.3.1, the correction is a little too aggressive.  Take the following example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;pre lang="javascript"&amp;gt;
function bug(){
  do{
    monkeysRule();
  } while(3&amp;lt;a);
}
&amp;lt;/pre&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Will be corrected to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;pre lang="javascript"&amp;gt;
function bug(){
  a=5;
  do{
    monkeysRule();
    a--
  } while(3&amp;lt;a);
}
&amp;lt;/pre&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Clearly incorrect.  Any logic that involves &amp;lt;TAG would exhibit this bug.  For example &amp;lt;b, &amp;lt;i, would be easy mistakes to make.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2994 (Theme files cannot be edited when theme's directory has certain ...) closed</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 02 Dec 2007 03:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2994#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2994#comment:17/1196567221000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #2994 (Theme files cannot be edited when theme's directory has certain ...) reopened</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sun, 02 Dec 2007 03:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2994#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2994#comment:16/1196567217000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #4026 (Use Facebook Notes styled image managment instead of iframe) updated</title>
      
        <dc:creator>J2000_ca</dc:creator>

      <pubDate>Sun, 02 Dec 2007 01:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4026#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4026#comment:3/1196558676000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It is ajax he is looking at the Facebook note uploader &lt;a class="ext-link" href="http://www.facebook.com/notes.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.facebook.com/notes.php&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2994 (Theme files cannot be edited when theme's directory has certain ...) closed</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Sun, 02 Dec 2007 01:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2994#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2994#comment:15/1196557237000000</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5409 (Sorry, that file cannot be edited. PLEASE HELP!) closed</title>
      
        <dc:creator>xknown</dc:creator>

      <pubDate>Sun, 02 Dec 2007 00:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5409#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5409#comment:1/1196557056000000</guid>
      <description>invalid: &lt;p&gt;
Please post your request at &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Support Forums&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5409 (Sorry, that file cannot be edited. PLEASE HELP!) created</title>
      
        <dc:creator>leonessa</dc:creator>

      <pubDate>Sun, 02 Dec 2007 00:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5409</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5409/1196555088000000</guid>
      <description>&lt;p&gt;
Please, please help! I am VERY new to Word Press or php. I keep getting the "THAT FILE CAN NOT BE EDITED" every time I try to access the theme editor. I am trying to build this site for a non-profit that NEED to have this going as soon as possible, we're trying to pay off a building and are under pressure to make this happen. PLEASE help! I read some help files, and this seems to be a common problem, but I can not for the life of me understand what to do about fixing it. PLEASE HELP!
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2994 (Theme files cannot be edited when theme's directory has certain ...) reopened</title>
      
        <dc:creator>leonessa</dc:creator>

      <pubDate>Sun, 02 Dec 2007 00:21:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2994#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2994#comment:14/1196554895000000</guid>
      <description>&lt;p&gt;
Please, please help! I am VERY new to Word Press or php. I keep getting the "THAT FILE CAN NOT BE EDITED" every time I try to access the theme editor. I am trying to build this site for a non-profit that NEED to have this going as soon as possible, we're trying to pay off a building and are under pressure to make this happen. PLEASE help! I read some help files, and this seems to be a common problem, but I can not for the life of me understand what to do about fixing it. PLEASE HELP!
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item>
   </channel>
</rss>