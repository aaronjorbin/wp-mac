<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #49635 (Build tools: Remove generated and package sourced files from committed ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Mar 2020 22:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49635#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49635#comment:1/1584138475935657</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm sure there are other complexities too.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, been thinking about this for a while. One problem is that once a file is added to SVN and committed, it never goes away completely. If it is deleted, it will not be present in the new(er) revisions, but it still exists in the older revisions from before it was deleted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This causes a problem when a file is deleted from the repository and ignored, and then recreated when building. If a previous revision is restored, and there is already an ignored file with the same name at the same location, it will cause a conflict in SVN.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A way to work around this would be to rename the newly ignored files. But renaming files in /build (in production) may trigger fatal errors in some plugins... The other option is to just ignore these problems as they would happen relatively rarely and are usually pretty easy to fix.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Any other ideas/suggestions/thoughts? :) &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:8/1584133922482044</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47454" title="General: Trim the input data in `maybe_unserialize()`, for consistency ..."&gt;47454&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Trim the input data in &lt;code&gt;maybe_unserialize()&lt;/code&gt;, for consistency with &lt;code&gt;is_serialized()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47454]: General: Trim the input data in `maybe_unserialize()`, for consistency ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47454</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47454/1584133921232389</guid>
      <description>&lt;p&gt;
General: Trim the input data in &lt;code&gt;maybe_unserialize()&lt;/code&gt;, for consistency with &lt;code&gt;is_serialized()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:7/1584133503631735</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47453" title="General: Move `maybe_serialize()` to a more appropriate place in the ..."&gt;47453&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Move &lt;code&gt;maybe_serialize()&lt;/code&gt; to a more appropriate place in the file, before &lt;code&gt;maybe_unserialize()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Rename the &lt;code&gt;$original&lt;/code&gt; parameter of &lt;code&gt;maybe_unserialize()&lt;/code&gt; to &lt;code&gt;$data&lt;/code&gt;, for consistency with other serialization functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47453]: General: Move `maybe_serialize()` to a more appropriate place in the ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 21:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47453</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47453/1584133502425777</guid>
      <description>&lt;p&gt;
General: Move &lt;code&gt;maybe_serialize()&lt;/code&gt; to a more appropriate place in the file, before &lt;code&gt;maybe_unserialize()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Rename the &lt;code&gt;$original&lt;/code&gt; parameter of &lt;code&gt;maybe_unserialize()&lt;/code&gt; to &lt;code&gt;$data&lt;/code&gt;, for consistency with other serialization functions.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:39:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:6/1584131943546178</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47452" title="Tests: Extract `is_serialized()` test cases into data providers; reuse ..."&gt;47452&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Extract &lt;code&gt;is_serialized()&lt;/code&gt; test cases into data providers; reuse them for &lt;code&gt;maybe_serialize()&lt;/code&gt; and &lt;code&gt;maybe_unserialize()&lt;/code&gt; tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder, SergeyBiryukov.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47452]: Tests: Extract `is_serialized()` test cases into data providers; reuse ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47452/1584131942195531</guid>
      <description>&lt;p&gt;
Tests: Extract &lt;code&gt;is_serialized()&lt;/code&gt; test cases into data providers; reuse them for &lt;code&gt;maybe_serialize()&lt;/code&gt; and &lt;code&gt;maybe_unserialize()&lt;/code&gt; tests.
&lt;/p&gt;
&lt;p&gt;
Props pbearne, mikeschroder, SergeyBiryukov.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36416" title="#36416: enhancement: maybe_unserialize returns false if non trimmed string is passed but ... (closed: fixed)"&gt;#36416&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49634 (Performance Benchmarks for REST API) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:32:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49634#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49634#comment:1/1584131520848966</guid>
      <description>&lt;p&gt;
I asked @youknowriad in Slack about how they're computing Gutenberg's performance, and he pointed me to &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/master/packages/e2e-tests/specs/performance/performance.test.js"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/master/packages/e2e-tests/specs/performance/performance.test.js&lt;/a&gt;.&lt;br /&gt;
The gist of it is this: they use Puppeteer and just track how long things take themselves. No magic build tool or anything.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I also asked a wider web developer community on Reddit and have gotten crickets so far: &lt;a class="ext-link" href="https://www.reddit.com/r/webdev/comments/fhs392/how_to_add_performance_benchmarks_like_automated/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://www.reddit.com/r/webdev/comments/fhs392/how_to_add_performance_benchmarks_like_automated/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I had hoped to find a tool that would do something like:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;set a universal unit that indicates performance regardless of the current system; Eg "1 foobar = time it takes for &lt;code&gt;for($i=0;$i&amp;lt;1000;$i++){}&lt;/code&gt; to execute on your current system
&lt;/li&gt;&lt;li&gt;let you define tests to benchmark, their times would be listed in "foobars"
&lt;/li&gt;&lt;li&gt;the results wouldn't be so much "pass" or "fail" but more a range between "crazy fast" and "very poor"
&lt;/li&gt;&lt;li&gt;could maybe be combined with a CI service like Travis or even more standardized results
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
But so far, no luck.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Right now, I'm leaning towards creating some PHPUnit tests take to execute. If anyone else thinks the idea of setting a universal unit ("foobar"), I'd like to try it.&lt;br /&gt;
We'd probably print the results to the console.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'd appreciate feedback on these thoughts.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 20:11:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:5/1584130266674618</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:3/1584128127593273</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Chatting with @kadamwhite it looks like that check is meant to be on line 391. In other words, right before checking if the user has permission to delete a revision, make sure they have permission to delete the parent item as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Would you be interested in working on a patch?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:27:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:2/1584127671517318</guid>
      <description>&lt;p&gt;
Ah sorry, was rushing and misread, that does look like this check's in the incorrect spot.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:26:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645#comment:1/1584127567301977</guid>
      <description>&lt;p&gt;
@yohannp Can you give an example of a plugin and action that is broken by this? The commit you link to appears to correctly apply the security check we would want to use for revision deletion, we'd need to know more about the behavior you would expect that now breaks in order to determine whether this was inaccurate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49617 (Image upload failing for the non - admin users of WordPress) closed</title>
      
        <dc:creator>amitagrawalindia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 19:04:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49617#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49617#comment:2/1584126246316330</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49639 (Add a filter on wp_insert_user function regarding $user_pass) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49639#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49639#comment:1/1584120054307537</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49640 (image_get_intermediate_size returns wrong) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:20:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49640#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49640#comment:1/1584120032033611</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome back to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just adding links to some tickets that might be related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/21714" title="#21714: enhancement: Enable Intermediate choice in UI if Full Size Image is exact match to ... (new)"&gt;#21714&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34384" title="#34384: defect (bug): No way of preventing image_get_intermediate_size from returning ... (closed: fixed)"&gt;#34384&lt;/a&gt;, &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/47713" title="#47713: defect (bug): image_get_intermediate_size does not return size if it equals original size (reviewing)"&gt;#47713&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:16:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644#comment:3/1584119794664374</guid>
      <description>&lt;p&gt;
So I proactively updated the patch to save the &lt;code&gt;WP_Error&lt;/code&gt; to &lt;code&gt;$post_type-&amp;gt;last_error&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also added a 2nd parameter to the &lt;code&gt;'unregistered_post_type'&lt;/code&gt; hook and moved the &lt;code&gt;$removed&lt;/code&gt; parameter I added in the first patch to the 3rd parameter position.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Finally, I added PHPDoc headers that I missed in the first patch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49644-1.patch attached to Ticket #49644</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49644/49644-1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49644/49644-1.patch/1584119660142793</guid>
      <description>&lt;p&gt;
Updates the patch to include a last_error.  Also adds another $this as a 2nd parameter to &lt;code&gt;unregistered_post_type&lt;/code&gt; hook
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49641 (Clarify what happens when meta_value is `''` in get_users like functions.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49641#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49641#comment:1/1584119621664012</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49374 (Use get_post_states to denote special pages on the added menu item ...) reopened</title>
      
        <dc:creator>stiofansisland</dc:creator>

      <pubDate>Fri, 13 Mar 2020 17:00:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49374#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49374#comment:9/1584118838877075</guid>
      <description>&lt;p&gt;
In the original use case for the get_post_states() function to add statuses to the pages backend  is not escaped, this allowed several plugins to add hints to the output:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/IvlbXQA.png"&gt;&lt;img src="https://i.imgur.com/IvlbXQA.png" alt="https://i.imgur.com/IvlbXQA.png" crossorigin="anonymous" title="https://i.imgur.com/IvlbXQA.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Now in the edit menu screen it is escaped which causes issues:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/cYbF6sz.png"&gt;&lt;img src="https://i.imgur.com/cYbF6sz.png" alt="https://i.imgur.com/cYbF6sz.png" crossorigin="anonymous" title="https://i.imgur.com/cYbF6sz.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I would be nice to keep the hints but if not an option then esc_html() should be replaced with wp_strip_all_tags()&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #49643 (Featured Image haven't got acces to new mediafile system.  (5.4-RC2-47447)) updated</title>
      
        <dc:creator>perborch</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49643#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49643#comment:2/1584118341228640</guid>
      <description>&lt;p&gt;
Found the issue in a plugin Im taking it to them instead &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49643#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you provide the steps to reproduce the issue on a clean install?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49374 (Use get_post_states to denote special pages on the added menu item ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49374#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49374#comment:8/1584118125499908</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1584118123351100"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:47:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644#comment:2/1584118067260937</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49644#comment:1" title="Comment 1"&gt;ocean90&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just noting that class constructors cannot return a custom value thus the &lt;code&gt;WP_Error&lt;/code&gt; object for a failed validation won't be returned.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point. I shouldn't have rushed to get this pushed up before a conference call. :-)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Hopefully you agree the constructor should validate the post type length, right?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do you think assigning to an &lt;code&gt;last_error&lt;/code&gt; property be a workable solution?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49645 (get_item function broken in rest-api) created</title>
      
        <dc:creator>yohannp</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49645</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49645/1584117955614702</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Due to this commit, a delete permission check has been added to get_item function in class-wp-rest-revisions-controller.php.&lt;br /&gt;
It seems this permission check was added by this commit : &lt;a class="ext-link" href="https://github.com/WordPress/WordPress/commit/00cb4c7dbdd3a0bbf1f7da0898a72e12198a61d5#diff-df4c11238da6b9e0e261b38f895720f1R352"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/WordPress/commit/00cb4c7dbdd3a0bbf1f7da0898a72e12198a61d5#diff-df4c11238da6b9e0e261b38f895720f1R352&lt;/a&gt;. This breaks some preview plugins using WordPress REST API.&lt;br /&gt;
Obviously, this seems to be kind of a copy/paste mistake as there is no reason to have a delete_post permission check on a get item...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644#comment:1/1584116886419740</guid>
      <description>&lt;p&gt;
Just noting that class constructors cannot return a custom value thus the &lt;code&gt;WP_Error&lt;/code&gt; object for a failed validation won't be returned.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49643 (Featured Image haven't got acces to new mediafile system.  (5.4-RC2-47447)) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49643#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49643#comment:1/1584116623924750</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you provide the steps to reproduce the issue on a clean install?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49644.patch attached to Ticket #49644</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49644/49644.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49644/49644.patch/1584116058593000</guid>
      <description>&lt;p&gt;
Moves code from register_post_type() to WP_Post_Type-&amp;gt;register() and from unregister_post_type() to WP_Post_Type-&amp;gt;unregister().
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49644 (Move logic from register_post_type() into WP_Post_Type-&gt;register()) created</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49644</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49644/1584115965954998</guid>
      <description>&lt;p&gt;
I have not looked at &lt;code&gt;register_post_type()&lt;/code&gt; in several years, but was pleasantly surprised to find major improvements where most of the logic was refactored and moved to &lt;code&gt;WP_Post_Type&lt;/code&gt;.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Still though, it appears there are a few missing capabilities that a bit more refactoring would resolve. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I propose we move most of the logic found in &lt;code&gt;register_post_type()&lt;/code&gt; into &lt;code&gt;WP_Post_Type-&amp;gt;register()&lt;/code&gt; and a bit of the validation logic into &lt;code&gt;WP_Post_Type-&amp;gt;__construct()&lt;/code&gt; &lt;em&gt;(see attached patch.)&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Similarly, it would make sense to also move the logic in &lt;code&gt;unregister_post_type()&lt;/code&gt; to a &lt;code&gt;WP_Post_Type-&amp;gt;unregister()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One of the benefits of this change is that currently &lt;code&gt;register_post_type()&lt;/code&gt; has validation logic but &lt;code&gt;WP_Post_Type-&amp;gt;__construct()&lt;/code&gt; does not so someone can call &lt;code&gt;new WP_Post_Type('this-is-a-far-too-long-post-type-name')&lt;/code&gt; and not get an error and allow a too-long post type name to be registered whereas &lt;code&gt;register_post_type('this-is-a-far-too-long-post-type-name')&lt;/code&gt; currently throw an error and not let the name through.  With this change, but approaches would validate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The benefit of adding &lt;code&gt;WP_Post_Type-&amp;gt;register()&lt;/code&gt; and &lt;code&gt;WP_Post_Type-&amp;gt;unregister()&lt;/code&gt; is simply that those wanting to use the object to create their post types do not need to duplicate the logic in &lt;code&gt;register_post_type()&lt;/code&gt;.  The benefit of this is being able to write code like this and leverage PHP's validation of object property names:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Post_Type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'my_widget'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Widgets'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'my_app'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;public&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;menu_icon&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'dashicons-admin-generic'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$post_type&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;register&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Notice I added a backward-compatible additional parameter to the &lt;code&gt;unregistered_post_type&lt;/code&gt; hook to indicate if the post type existed in &lt;code&gt;$wp_post_types&lt;/code&gt; before the attempt to unregister it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
AFAICT there will be no backward compatibility or documentation issues with this change, so this should be a slam-dunk, right?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48710 (PDF uploads are treated like images: empty alt attribute and PHP notices) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:05:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48710#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48710#comment:11/1584115519159320</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed during today's accessibility bug-scrub: agreed this would be a nice fix for WordPress 5.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reported also on the Gutenberg repo &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/18593"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/gutenberg/issues/18593&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49643 (Featured Image haven't got acces to new mediafile system.  (5.4-RC2-47447)) created</title>
      
        <dc:creator>perborch</dc:creator>

      <pubDate>Fri, 13 Mar 2020 16:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49643</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49643/1584115316401999</guid>
      <description>&lt;p&gt;
Featured Image haven't got acces to new mediafile system / but only the root folder and you can't chose what's in the other folders. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48045 (Save continually blinks, breaks if on bad wifi.) updated</title>
      
        <dc:creator>youknowriad</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48045#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48045#comment:4/1584114789000599</guid>
      <description>&lt;p&gt;
I've never seen this issue personally but worth moving this ticket to a Gutenberg issue for better investigations.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48045 (Save continually blinks, breaks if on bad wifi.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:45:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48045#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48045#comment:3/1584114300130616</guid>
      <description>&lt;p&gt;
@youknowriad when you have a chance :) Does this still happen after the introduction of the "sessionStorage autosave mechanism" in the block editor?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48710 (PDF uploads are treated like images: empty alt attribute and PHP notices) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48710#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48710#comment:10/1584113734482735</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48486 (Add compliance tab to plugin repository pages on WordPress.org) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48486#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48486#comment:33/1584113734419221</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48045 (Save continually blinks, breaks if on bad wifi.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48045#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48045#comment:2/1584113734359412</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47012 (Proposal: Simplify WordPress Admin Navigation) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47012#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47012#comment:47/1584113734275573</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584113732405400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49608 (Implementing HTML 5.2 into the user create and edit forms.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:12:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49608#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49608#comment:3/1584112351478579</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584112350387000"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49583 (Media Library in SubFolder, when Organize by Mo/Yr is deactivated) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:12:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49583#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49583#comment:4/1584112321780862</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed during today's accessibility bug-scrub: agreed to remove the accessibility focus as this issue doesn't appear to be strictly related to web accessibility.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49583 (Media Library in SubFolder, when Organize by Mo/Yr is deactivated) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49583#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49583#comment:3/1584112130474970</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584112128384400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49524 (Selecting then formatting often does not work.) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49524#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49524#comment:3/1584112108790046</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This ticket was discussed during today's accessibility bug-scrub: agreed to remove the accessibility focus, as this issue doesn't appear strictly related to web accessibility.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To help the editor team, it would be great to provide clearer steps to reproduce. I wasn't able to reproduce on a clean trunk installation.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49524 (Selecting then formatting often does not work.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 15:02:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49524#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49524#comment:2/1584111727047815</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1584111725379400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49642 (Introduce Setting up Off-Site Backup and SMTP while Installation and ...) created</title>
      
        <dc:creator>thegulshankumar</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49642</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49642/1584109763539433</guid>
      <description>&lt;p&gt;
Hi,&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I think WordPress should have inbuilt feature for off-site backup. As it is a critical part of security. Many beginners do not understand the importance until something wrong happens such as getting hacked or losing data for any reasons.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;WordPress by default uses PHP (mail) function that generally comes in Spam folder or sometime never due to hosting issue. It's much better to have professional solution such as allowing user to integrate 3rd-party SMTP services.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49268 (Broken themes should always be listed) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:22:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49268#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49268#comment:7/1584109340545509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patches!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It looks like I was mistaken in my original report, and the visibility of the buttons is already handled. I think the first patch&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49268/49268.diff" title="Attachment '49268.diff' in Ticket #49268"&gt;49268.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49268/49268.diff" title="Download"&gt;â€‹&lt;/a&gt; is the only change that's needed.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40351 (Term post re-counts scale poorly, are common and difficult to avoid) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40351#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40351#comment:4/1584108943278820</guid>
      <description>&lt;p&gt;
I've also seen the Lightweight Term Count Update plugin reduce processing time from literally minutes when there's a large number of terms, to fractions of a second.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49182 (Unmask password button) updated</title>
      
        <dc:creator>carriganvb</dc:creator>

      <pubDate>Fri, 13 Mar 2020 14:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49182#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49182#comment:7/1584108360587286</guid>
      <description>&lt;p&gt;
@bernardroux OK I found what you mean. The password on the published pages that are password protected. I think I understand the problem... Now to fix it!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>poc.php attached to Ticket #49641</title>
      
        <dc:creator>growthwp</dc:creator>

      <pubDate>Fri, 13 Mar 2020 13:59:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49641/poc.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49641/poc.php/1584107996079358</guid>
      <description>&lt;p&gt;
PoC
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49641 (Clarify what happens when meta_value is `''` in get_users like functions.) created</title>
      
        <dc:creator>growthwp</dc:creator>

      <pubDate>Fri, 13 Mar 2020 13:59:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49641</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49641/1584107976828121</guid>
      <description>&lt;p&gt;
Because I didn't realize that doing this query:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;        $all_user_ids = get_users([
            'fields' =&amp;gt; 'id',
            'meta_key' =&amp;gt; 'secret_access_key',
            'meta_compare' =&amp;gt; '=',
            'meta_value' =&amp;gt; $dynamic_value_from_frontend
        ]);
&lt;/pre&gt;&lt;p&gt;
Given the credibility, history &amp;amp; robustness of &lt;code&gt;get_users&lt;/code&gt;, which entered under the hood of "that thing just works, don't doubt it", if &lt;code&gt;$dynamic_value_from_frontned&lt;/code&gt; were to be just a mere&lt;code&gt;''&lt;/code&gt;, instead of giving me an empty list of no users, &lt;strong&gt;the query would return a list of all users.&lt;/strong&gt; What happens when you rely on this list for mission-critical things? The worst.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my case, this list was very crucial for allowing access to customer websites, based on a secret string only the developers, us, know, we are able to access these sites and inherit the identity of our customer (mostly admin accounts). The way we achieve this is we attach that secret phrase to their &lt;code&gt;user_meta&lt;/code&gt; and as you can see, we attempt to hit an endpoint that looks at all the users and returns us with the one that matches the string we provided.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Unfortunately, as I've said before, because our assumption, as well as our partners' and personal friends, some of whom are veterans in the industry, was that &lt;code&gt;get_users&lt;/code&gt; would forfeit completely if not given a key at all, instead, it just simply decides to ignore the field completely and retrieve based on the key alone.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The more interesting fact is that if we set the &lt;code&gt;meta_value&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;, it actually does the check and doesn't return any users.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Here's a PoC: &lt;a class="ext-link" href="https://pastebin.com/vfaVuRp0"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://pastebin.com/vfaVuRp0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please make it clear that a &lt;code&gt;meta_value&lt;/code&gt; that equals to &lt;code&gt;''&lt;/code&gt; is not the same as it being &lt;code&gt;False&lt;/code&gt; and that the system defaults to just using the key, skipping all checks. The desired behavior should be:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;When the &lt;code&gt;meta_value&lt;/code&gt; is missing altogether, it means we're searching just for key.
&lt;/li&gt;&lt;li&gt;When the &lt;code&gt;meta_value&lt;/code&gt; is &lt;code&gt;''&lt;/code&gt;, it should be treated as a value and searched against.
&lt;/li&gt;&lt;li&gt;When the &lt;code&gt;meta_value&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, it should be treated as a value and searched against.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I do recognize that it's probably impossible to go back and change this and so, for me at least, it's even more reason to push this very important note to the front.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please mention this in either the comments for &lt;code&gt;get_users&lt;/code&gt;, in the codebase itself or make a phpcs rule for this. In other words, please specify that you must ensure the input for the &lt;code&gt;meta_value&lt;/code&gt; is properly checked for before actually being used due to this exact case.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
In our case, it would've been a disaster if we didn't fuzz around. While I completely understand it's us that should make sure whatever is passed is proper, I believe the community is not aware of this edge case not due to bad coding practices but simply due to the need to implement dynamic queries like this being very rare and as such, overlooked.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We've also notified 4 vendors, one of which is perhaps the biggest in terms of reach about a potential issue with dynamic query building like we had. In the case of a membership plugin that seemed to have all security checks in place, as we did, it resulted in certain users being given access to another user's property.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49640 (image_get_intermediate_size returns wrong) created</title>
      
        <dc:creator>CHEWX</dc:creator>

      <pubDate>Fri, 13 Mar 2020 10:25:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49640</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49640/1584095135478192</guid>
      <description>&lt;p&gt;
The function &lt;code&gt;image_get_intermediate_size&lt;/code&gt; isn't working as expected.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If I upload a &lt;code&gt;1200px x 900px&lt;/code&gt; image as the original. In WordPress theme I use &lt;code&gt;wp_get_attachment_image( $post_id, array( '1x1-large', '1x1-medium' ) );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;1x1-large&lt;/code&gt; is setup using &lt;code&gt;add_image_size( '1x1-large', 1024, 1024, true );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It will fail as, it cannot create this image size as the the original is smaller. However, the function in question is clever enough to look for other aspect ratios that match. This is good.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So if I had another name images called &lt;code&gt;1x1-medium&lt;/code&gt; (setup using &lt;code&gt;add_image_size( '1x1-medium', 768, 768, true );&lt;/code&gt; )&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This will exist as the original image is large enough to be sized down to this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The function however uses this this code-block to short-circuit it:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/46674e2367b8ca0c15b859bd578bc2119bfa0150/wp-includes/media.php#L780"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/WordPress/blob/46674e2367b8ca0c15b859bd578bc2119bfa0150/wp-includes/media.php#L780&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// If there's an exact match to an existing image size, short circuit.
if ( intval( $data['width'] ) === intval( $size[0] ) &amp;amp;&amp;amp; intval( $data['height'] ) === intval( $size[1] ) ) {
    $candidates[ $data['width'] * $data['height'] ] = $data;
    break;
}
&lt;/pre&gt;&lt;p&gt;
So &lt;code&gt;$data['width'] =&lt;/code&gt; each image sizes width and &lt;code&gt;$size[0] = '1x1-large'&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This will never match!!! $size should in theory be a string, not an integer.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49185 (Option to use text link instead of auto embed.) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Fri, 13 Mar 2020 09:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49185#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49185#comment:7/1584093067262694</guid>
      <description>&lt;p&gt;
I just published a Core Editor Meeting Summary. It uses a mix of text links and one WordPress embed link.&lt;br /&gt;
&lt;a class="ext-link" href="https://make.wordpress.org/core/2020/03/13/editor-chat-summary-11-march-2020/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://make.wordpress.org/core/2020/03/13/editor-chat-summary-11-march-2020/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Why the difference between them I do not know.&lt;br /&gt;
It would be nice to have the option to add a WordPress embed or a text link.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42324 (Extending the use of the Text widget by adding heading drop down and ...) closed</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Fri, 13 Mar 2020 09:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42324#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42324#comment:11/1584092576484374</guid>
      <description>wontfix: &lt;p&gt;
I am changing this to a wontfix and closing it as Gutenberg blocks are gradually taking over the widgets screen.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49231 (Plugins admin screens: form fields issue on small screens) updated</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Fri, 13 Mar 2020 08:21:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49231#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49231#comment:18/1584087697088512</guid>
      <description>&lt;p&gt;
I suggest a second path 49231.2.diff following comments from @afercia. I adjusted the behavior of the search field on responsive view and I also adjusted the behavior of the form (see screenshot).&lt;br /&gt;
I also modify my css for table list checkbox.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>unaligned form.png attached to Ticket #49231</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Fri, 13 Mar 2020 08:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49231/unaligned%20form.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49231/unaligned%20form.png/1584087670311426</guid>
      <description>&lt;p&gt;
unaligned form
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>49231.2.diff attached to Ticket #49231</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Fri, 13 Mar 2020 08:14:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49231/49231.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49231/49231.2.diff/1584087241607232</guid>
      <description>&lt;p&gt;
CSS Fix for plugins search form and table list with media queries
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49639 (Add a filter on wp_insert_user function regarding $user_pass) created</title>
      
        <dc:creator>stokim</dc:creator>

      <pubDate>Fri, 13 Mar 2020 06:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49639</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49639/1584081612329117</guid>
      <description>&lt;p&gt;
/5.3/src/wp-includes/user.php&lt;br /&gt;
function wp_insert_user ( $userdata ) 1542 line&lt;br /&gt;
Please apply the below filter so that I can add a rule on user typed password before hashing the password.&lt;br /&gt;
$pre_user_password = apply_filters(  'pre_user_password', $user_pass );&lt;br /&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Best regards,&lt;br /&gt;
Jen&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49268 (Broken themes should always be listed) updated</title>
      
        <dc:creator>sorenbronsted</dc:creator>

      <pubDate>Fri, 13 Mar 2020 05:43:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49268#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49268#comment:6/1584078226685877</guid>
      <description>&lt;p&gt;
Thanks @rebasaurus and it works, but for me there is a catch-22 to this bug report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I presume that I can use &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; constant to prevent users makes changes to a site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If the constant &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; is true then the first patch by @rebasaurus actually solves this, by showing to the user that there are themes which are broken, but the user can't do anything about it, because the user is not allowed to modify files. For me this is by design.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By allowing to modify files/themes even if &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; is true defeats the purpose of this constant. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49638 (Determine methodology recommendations for CSS audit) updated</title>
      
        <dc:creator>isabel_brison</dc:creator>

      <pubDate>Fri, 13 Mar 2020 05:26:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49638#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49638#comment:2/1584077218769916</guid>
      <description>&lt;p&gt;
I had a play with stylelint: installed it in a local branch, and added a very basic config to test the rules that seemed useful for audit purposes. Here are my takeaways:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;no-descending-specificity&lt;/code&gt; doesn't help much because it compares different selectors, e.g. &lt;code&gt;Expected selector ".about__container p" to come before selector ".about__section .column p:last-of-type"&lt;/code&gt;, which doesn't tell us a lot because we have huge files with sections related to different components of a page, so specificity levels naturally go up and down.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;no-duplicate-selectors&lt;/code&gt; returned quite a few results. This is worth looking into to check whether duplicates are accidental or if they are leveraging the cascade to override previous rules.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;selector-max-specificity&lt;/code&gt; is the most useful of the lot. I ran it with a limit of "1,3,2" (that's one id, three classes and two element selectors) and got a scary big amount of results. Here is where we probably want to go file by file and break down how much of that selector bloat we can get rid of. Ideally, we should be aiming for something like "0,2,0", but if that's too much to ask for, then let's see how low we can bring it without having to rewrite everything ðŸ˜…
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, for a neat visual overview of specificity in files, this tool is quite nice: &lt;a class="ext-link" href="https://isellsoap.github.io/specificity-visualizer/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://isellsoap.github.io/specificity-visualizer/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regarding dead code removal, we can try running something like &lt;a class="ext-link" href="https://github.com/purifycss/purifycss"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/purifycss/purifycss&lt;/a&gt;, to get some idea of where to look at least.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For removal of old IE-specific code, I think there's no option but going through everything manually ðŸ˜Ÿ&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I'm thinking is, if we're going to come up with actionable recommendations, we'll have to do quite a bit of manual testing, changing stuff and checking what breaks. The visual regression testing would be a good helper for that, so perhaps we should set it up sooner rather than later. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I have a question: should we take plugins into account at all at this stage? If we're not changing any of the actual styling in wp-admin, is it even possible for there to be side-effects for plugins?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 13 Mar 2020 04:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:83/1584074146742598</guid>
      <description>&lt;p&gt;
To ignore &lt;code&gt;/src/wp-includes/assets&lt;/code&gt; again it will have to be SVN deleted, and added to the ignored props on the parent dir, &lt;code&gt;/src/wp-includes&lt;/code&gt;. Then, when building, it will be created again but will not be committed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
One problem with version control is that once a file is added and committed, it never really goes away. It may be deleted in the current revision, but as soon as you restore a previous revision it is created again...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When that happens, if an unversioned file already exists at the same location, it will cause conflict.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The only way to prevent that is to start "fresh". Thinking won't need to rename the directory but would need to rename the file.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We need to ensure that PHPUnit tests pass without JS build files.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As far as I see the only way to do that is to add a &lt;code&gt;file_exists()&lt;/code&gt; in script-loader.php. With 48154-update-file-check.diff it could be a "silent check" as it will never be reached when running WP, only when testing. On the other hand, can still throw "doing it wrong" user-notice perhaps?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38702 (REST API: Add accessor functions for post_status and post_parent) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 13 Mar 2020 04:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38702#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38702#comment:5/1584073548099730</guid>
      <description>&lt;p&gt;
This was needed for the Customize Posts plugin to be able to add filters to override a post field based on what has been modified in the Customizer changeset, but this plugin is not being maintained currently so it is not an active need.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Fri, 13 Mar 2020 04:16:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009#comment:15/1584073005533492</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/167#issuecomment-598539956"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;PR #167&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've been working on a couple of approaches to avoid the new element in the comment template, either:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;document.getElementById( 'reply-title' ).firstNode&lt;/code&gt; to get the textNode (which can then be replaced. This may need some extra work to get the first textNode to account for sites that have modified the form.
&lt;/li&gt;&lt;li&gt;Cloning the reply title and removing anything that isn't a text nodes &lt;code&gt;document.getElementById( 'reply-title' ).querySelectorAll( '*' )&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There are options available.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45141 (Keyboard use bug in audio media player shortcode.) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Fri, 13 Mar 2020 02:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45141#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45141#comment:5/1584067413824844</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some quick testing in Firefox shows that using Up and Down arrow keys raises/lowers volume now, without the errors, whether focus is on the volume icon or the bar.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The MediaElement.js GitHub issue reports that this was fixed in version 4.2.12. WordPress updated Media Element to 4.2.13 last October (for the November release).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
More testing would be appreciated :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36524 (Problem with accessing last saved work) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 13 Mar 2020 02:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36524#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36524#comment:5/1584066460546873</guid>
      <description>worksforme: &lt;p&gt;
Thanks for the follow-up!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49533 (Add user ID to wp_logout action) updated</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49533#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49533#comment:3/1584060660454544</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49533.patch attached to Ticket #49533</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49533/49533.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49533/49533.patch/1584060637479046</guid>
      <description>&lt;p&gt;
Added &lt;code&gt;pre_wp_logout&lt;/code&gt; action before used is logged out.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40351 (Term post re-counts scale poorly, are common and difficult to avoid) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40351#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40351#comment:3/1584059514768282</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40351/cpu-usage.png" title="Attachment 'cpu-usage.png' in Ticket #40351"&gt;cpu-usage.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40351/cpu-usage.png" title="Download"&gt;â€‹&lt;/a&gt; shows the room for improvement on large sites. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Work (a large news organisation) enabled light-weight term counting on March 7 due to CPU alerts firing daily during the &lt;code&gt;wp_scheduled_auto_draft_delete&lt;/code&gt; and &lt;code&gt;wp_scheduled_delete&lt;/code&gt; cron jobs. CPU use immediately dropped 30%+ during those tasks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note: for various reasons such as the number of users, we generate &lt;em&gt;a lot&lt;/em&gt; of auto-drafts so these results aren't typical on a standard WordPress site, this is very specific to a high usage site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At the very least, I think we can introduce some pre-flight hooks to the term counting functions to allow customisation of the database query. I'd suggest preflight filters for &lt;code&gt;wp_update_term_count_now()&lt;/code&gt;, &lt;code&gt;_update_post_term_count()&lt;/code&gt; and &lt;code&gt;_update_generic_term_count()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>cpu-usage.png attached to Ticket #40351</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Fri, 13 Mar 2020 00:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40351/cpu-usage.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40351/cpu-usage.png/1584058787979051</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49614 (Add an action for wp_media_attach_action events) updated</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Thu, 12 Mar 2020 23:51:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49614#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49614#comment:5/1584057113765714</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49614.patch attached to Ticket #49614</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Thu, 12 Mar 2020 23:51:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49614/49614.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49614/49614.patch/1584057103589876</guid>
      <description>&lt;p&gt;
I've moved the &lt;code&gt;clean_attachment_cache()&lt;/code&gt; after the &lt;code&gt;$result&lt;/code&gt; check as well.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49268 (Broken themes should always be listed) updated</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Thu, 12 Mar 2020 22:40:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49268#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49268#comment:5/1584052814127532</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49268.patch attached to Ticket #49268</title>
      
        <dc:creator>rebasaurus</dc:creator>

      <pubDate>Thu, 12 Mar 2020 22:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49268/49268.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49268/49268.patch/1584052786676355</guid>
      <description>&lt;p&gt;
Since edit_themes cap is changed by the constant &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt;, we'll use &lt;code&gt;edit_theme_options&lt;/code&gt; to remove the dependency as mentioned by @sorenbronsted
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009#comment:14/1584049694340001</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/167#issuecomment-598432731"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;PR #167&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note re PHP linting test failure: checking locally &lt;code&gt;comment-template.php&lt;/code&gt; contains only warnings so I am pretty sure the tests will only fail on PRs but pass on master. Probably.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47569 (Remove unnecessary !important from wp-admin/css/common.css) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:16:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47569#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47569#comment:13/1584047766706075</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-css by isabelbrison. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1584047765162400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49636 (Update conflict WP 5.4 / CV 19.0) closed</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49636#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49636#comment:1/1584047635345897</guid>
      <description>wontfix: &lt;p&gt;
Major updates to WordPress such as for version 5.4 are not auto-updated by default.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Site owners wishing to delay updating to WordPress 5.4 to focus on their coverage may do so. As site owners have this option, I've closed this &lt;em&gt;wontfix&lt;/em&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49638 (Determine methodology recommendations for CSS audit) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49638#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49638#comment:1/1584047609707507</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1584047608160400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49637 (Create a report outline for CSS audit) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49637#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49637#comment:1/1584047524436020</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-css by notlaura. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1584047523159000"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49638 (Determine methodology recommendations for CSS audit) created</title>
      
        <dc:creator>notlaura</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:09:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49638</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49638/1584047357722936</guid>
      <description>&lt;p&gt;
This ticket is under the umbrella CSS audit ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49582" title="#49582: enhancement: wp-admin CSS audit (new)"&gt;#49582&lt;/a&gt;. Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49637" title="#49637: enhancement: Create a report outline for CSS audit (new)"&gt;#49637&lt;/a&gt; is intended to collect a wish list of *what we want to know* as a result of the audit. This ticket is for determining some recommended approaches and tools for finding that information.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Using PostCSS to find and compare selectors
&lt;/li&gt;&lt;li&gt;Creating a specific set of Stylelint rules to flag areas with high specificity
&lt;/li&gt;&lt;li&gt;A recommended approach for any manual inspection of files
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49606 (Add visual regression testing to core) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:09:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49606#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49606#comment:6/1584047347991658</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-css by isabelbrison. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-css/p1584047346156500"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49637 (Create a report outline for CSS audit) created</title>
      
        <dc:creator>notlaura</dc:creator>

      <pubDate>Thu, 12 Mar 2020 21:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49637</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49637/1584046835216796</guid>
      <description>&lt;p&gt;
This ticket is under the umbrella CSS audit ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49582" title="#49582: enhancement: wp-admin CSS audit (new)"&gt;#49582&lt;/a&gt;, and is for creating a report outline for the audit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The work to create a report outline consists of:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Decision making regarding what the report should contain,
&lt;/li&gt;&lt;li&gt;Creating follow-up tickets for collecting data to populate the report,
&lt;/li&gt;&lt;li&gt;Creation of a "Report Outline Document" or similar, that can be updated with results or changes in requirements as the audit is performed.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The report outline document is essentially a list of what we want to know as a result of the audit. For example:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Determine method of categorization of existing CSS (e.g. by files, area in admin)
&lt;/li&gt;&lt;li&gt;Category (from above) that contains highest specificity
&lt;/li&gt;&lt;li&gt;List of unique values for each of a list of properties, and number of occurrences
&lt;/li&gt;&lt;li&gt;Locations and total count of &lt;code&gt;!important&lt;/code&gt;s
&lt;/li&gt;&lt;li&gt;State of CSS comments in each of the categories
&lt;/li&gt;&lt;li&gt;Location of outdated or brute-force layout practices (e.g. floats, positioning and pixel nudging)
&lt;/li&gt;&lt;li&gt;Longest selector
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 20:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009#comment:13/1584045520319701</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/167#issuecomment-598407766"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;PR #167&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I spent some time yesterday considering how to avoid adding the new element to the header, without success, I'll continue looking at that today.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Otherwise I think this is good to go.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38009 (#reply-title.comment-reply-title not updating when replying to an ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 20:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38009#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38009#comment:12/1584045512989084</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/peterwilsoncc"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;peterwilsoncc&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/167#issuecomment-598407766"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;PR #167&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I spent some time yesterday considering how to avoid adding the new element to the header, without success, I'll continue looking at that today.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Otherwise I think this is good to go.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49636 (Update conflict WP 5.4 / CV 19.0) created</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 12 Mar 2020 20:20:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49636</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49636/1584044456183172</guid>
      <description>&lt;p&gt;
In order to preserve our common site-health (i.e. world's health), &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
our priority is to fix &lt;strong&gt;THE&lt;/strong&gt; bug (CoVid 19). &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It is not time to spread new ones (WordPress 5.4).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Wordpress.org usually asserts that WP powers 30% of the web.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Many sites around the globe are providing informations on this virus : evolution, good practices ...&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
At the end of the month, WP will release and deploy (automatic upgrade) a new version.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The systemic risk must be adressed at the right level as well as the communication around the decisions to be made, with calm and serenity.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I personnaly think that WP 5.4 should be delayed and eventually skipped to 5.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Our common objective is to prioritize what matters : our lives.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regards&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 12 Mar 2020 20:15:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:82/1584044157201244</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48154#comment:81" title="Comment 81"&gt;gziolo&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is one consideration to take into account that might actually be covered with the updated check that detects whether JS build was executed. We need to ensure that PHPUnit tests pass without JS build files.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've created &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49635" title="#49635: enhancement: Build tools: Remove generated and package sourced files from committed ... (new)"&gt;#49635&lt;/a&gt; to follow up the discussion, I think it's safe to ignore the problem for now and consider back-porting if a suitable solution can be found.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49635 (Build tools: Remove generated and package sourced files from committed ...) created</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 12 Mar 2020 20:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49635</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49635/1584043985309826</guid>
      <description>&lt;p&gt;
Currently several PHP files either auto-generated or copied during the build process are committed in to the repositories &lt;code&gt;src&lt;/code&gt; directory, this includes:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;src/wp-includes/assets/script-loader-packages.php&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-includes/blocks/*.php&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
As including built files can lead to errors during the commit process, it would be dandy if these files could be removed from the repository and added to the list of ignored files.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A consideration is if this can be and needs to be done in such a way to avoid requiring JavaScript and CSS be built in order to run the PHP unit tests. I'm sure there are other complexities too.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48154" title="#48154: defect (bug): Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build (closed: fixed)"&gt;#48154&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38900 (Customize: Add REST API endpoints for changesets) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38900#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38900#comment:16/1584039418426168</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by dlh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1584039417162400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27703 (Need additional db version information in WP3.9+) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27703#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27703#comment:18/1584039226396452</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36524 (Problem with accessing last saved work) updated</title>
      
        <dc:creator>colomet</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:53:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36524#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36524#comment:4/1584039224677062</guid>
      <description>&lt;p&gt;
omg. too long ago.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
if I do not remember the issue, it may have ben fix it somehow. I did take a look but looks like it works now&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
thanks&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38702 (REST API: Add accessor functions for post_status and post_parent) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38702#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38702#comment:4/1584038673522715</guid>
      <description>&lt;p&gt;
@westonruter is this still a desired enhancement? We're turning over some long-forgotten bugs in triage today :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38702 (REST API: Add accessor functions for post_status and post_parent) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38702#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38702#comment:3/1584038585093717</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1584038583159000"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) closed</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:100/1584038525833003</guid>
      <description>wontfix: &lt;p&gt;
After discussion in the #core-restapi weekly chat today with @adamsilverstein, I'm closing this as wontfix. It's a good plan, and was a reasonable thing to pursue post-merge, but at this stage any overhaul to this functionality feels like it should fall under the overall Gutenberg admin changes as we move into full-site editing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #38342 (Quick Draft: Leverage REST API endpoints) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38342#comment:99</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38342#comment:99/1584038350323227</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1584038349156200"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49634 (Performance Benchmarks for REST API) created</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49634</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49634/1584038345995417</guid>
      <description>&lt;p&gt;
We'd like to keep track of how fast, or slow, REST API requests are (and how they've changed as the code has changed). A bit like &lt;a class="ext-link" href="https://make.wordpress.org/core/2020/03/11/whats-new-in-gutenberg-11-march/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://make.wordpress.org/core/2020/03/11/whats-new-in-gutenberg-11-march/&lt;/a&gt; under "Performance Benchmark".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Are there any tools that would help with this? It would be pretty great if the benchmarks were part of a test suite, or release process? This idea was just generally mentioned on &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQC26G/p1584037020137500"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.slack.com/archives/C02RQC26G/p1584037020137500&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:37:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:44/1584038257689192</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:43/1584038136376026</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1584038134153200"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40838 (REST API: Inconsistent parameter type handling in `set_param()`) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40838#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40838#comment:16/1584038095680242</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40838 (REST API: Inconsistent parameter type handling in `set_param()`) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40838#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40838#comment:15/1584037991401909</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by mnelson4. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1584037990151200"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49490 (Proposal: New wrapper function and hook for creating attachments) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 18:11:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49490#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49490#comment:3/1584036710703516</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1584036709133900"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48948 (Fix the Site Health template to produce valid HTML) updated</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Thu, 12 Mar 2020 17:12:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48948#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48948#comment:3/1584033128383321</guid>
      <description>&lt;p&gt;
Hello, I propose a patch with a replacement of html tag (p-&amp;gt; div) and a basic condition in the template on data.actions as mentioned in the ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48948.1.diff attached to Ticket #48948</title>
      
        <dc:creator>maxpertici</dc:creator>

      <pubDate>Thu, 12 Mar 2020 17:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48948/48948.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48948/48948.1.diff/1584032971501353</guid>
      <description>&lt;p&gt;
Replace &amp;lt;p&amp;gt; tag with &amp;lt;div&amp;gt; tag and tag conditional statement on data.actions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2020-03-12 at 8.40.55 AM.png attached to Ticket #49633</title>
      
        <dc:creator>Kevin Brent</dc:creator>

      <pubDate>Thu, 12 Mar 2020 16:02:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49633/Screen%20Shot%202020-03-12%20at%208.40.55%20AM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49633/Screen%20Shot%202020-03-12%20at%208.40.55%20AM.png/1584028960955019</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2020-03-11 at 5.57.10 PM.png attached to Ticket #49633</title>
      
        <dc:creator>Kevin Brent</dc:creator>

      <pubDate>Thu, 12 Mar 2020 16:02:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49633/Screen%20Shot%202020-03-11%20at%205.57.10%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49633/Screen%20Shot%202020-03-11%20at%205.57.10%20PM.png/1584028945653481</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Screen Shot 2020-03-11 at 1.51.19 PM.png attached to Ticket #49633</title>
      
        <dc:creator>Kevin Brent</dc:creator>

      <pubDate>Thu, 12 Mar 2020 16:02:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49633/Screen%20Shot%202020-03-11%20at%201.51.19%20PM.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49633/Screen%20Shot%202020-03-11%20at%201.51.19%20PM.png/1584028933749143</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49633 (Trim cookie paths) created</title>
      
        <dc:creator>Kevin Brent</dc:creator>

      <pubDate>Thu, 12 Mar 2020 16:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49633</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49633/1584028809391559</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
I had just migrated a WP website that was very old.  I encountered an issue that took several hours to debug.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The site was on PHP 5.6 and I updated everything to use PHP 7.3. At PHP 5.6 this was not an issue, but was at PHP 7.3.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The site seemed to be loading fine. No errors in the PHP error logs. However, I was not able to login to the WP Admin. After I defined error logging true. I get this:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://kevinbrent.com/images/1.png"&gt;&lt;img src="https://kevinbrent.com/images/1.png" alt="https://kevinbrent.com/images/1.png" crossorigin="anonymous" title="https://kevinbrent.com/images/1.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After several hours of debugging I found this:&lt;br /&gt;
&lt;a style="padding:0; border:none" href="https://kevinbrent.com/images/2.png"&gt;&lt;img src="https://kevinbrent.com/images/2.png" alt="https://kevinbrent.com/images/2.png" crossorigin="anonymous" title="https://kevinbrent.com/images/2.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I was able to fix this in the DB. But, feel that WP could simply trim&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
spaces from cookie paths since they are not allowed by PHP.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://kevinbrent.com/images/3.png"&gt;&lt;img src="https://kevinbrent.com/images/3.png" alt="https://kevinbrent.com/images/3.png" crossorigin="anonymous" title="https://kevinbrent.com/images/3.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There are 3 constants that require this attention.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;COOKIEPATH
&lt;/pre&gt;&lt;pre class="wiki"&gt;SITECOOKIEPATH
&lt;/pre&gt;&lt;pre class="wiki"&gt;PLUGINS_COOKIE_PATH
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #27703,â€‹40037 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:53:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27703%2C40037</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27703%2C40037/1584028382835919</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47451" title="Database: Introduce `wpdb::db_server_info()` to retrieve full MySQL ..."&gt;47451&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Introduce &lt;code&gt;wpdb::db_server_info()&lt;/code&gt; to retrieve full MySQL server information string as supplied by &lt;code&gt;mysqli_get_server_info()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This complements &lt;code&gt;wpdb::db_version()&lt;/code&gt;, which only returns a numeric version string and strips any additional information, e.g. vendor name.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props clarinetlord, birgire, webaware, pento.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40037" title="#40037: enhancement: Add ability to ask wpdb for full db server info (closed: fixed)"&gt;#40037&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27703" title="#27703: enhancement: Need additional db version information in WP3.9+ (closed: fixed)"&gt;#27703&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [47451]: Database: Introduce `wpdb::db_server_info()` to retrieve full MySQL ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47451/1584028381487224</guid>
      <description>&lt;p&gt;
Database: Introduce &lt;code&gt;wpdb::db_server_info()&lt;/code&gt; to retrieve full MySQL server information string as supplied by &lt;code&gt;mysqli_get_server_info()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This complements &lt;code&gt;wpdb::db_version()&lt;/code&gt;, which only returns a numeric version string and strips any additional information, e.g. vendor name.
&lt;/p&gt;
&lt;p&gt;
Props clarinetlord, birgire, webaware, pento.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40037" title="#40037: enhancement: Add ability to ask wpdb for full db server info (closed: fixed)"&gt;#40037&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27703" title="#27703: enhancement: Need additional db version information in WP3.9+ (closed: fixed)"&gt;#27703&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #48988 (WordPress Does Not Generate JPG Sizes After 5.3.1) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48988#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48988#comment:5/1584027161549678</guid>
      <description>&lt;p&gt;
@kevinbkt10 â€” wanted to check back in here to see if this ever got resolved or if you were able to provide more information?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #15311,â€‹34949 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:30:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15311%2C34949</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15311%2C34949/1584027008543960</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15311" title="#15311: enhancement: dynamic image resize (on the fly) using already available functions (new)"&gt;#15311&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #15311,â€‹49552 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15311%2C49552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15311%2C49552/1584026987351901</guid>
      <description>duplicate: &lt;p&gt;
Hi @javid99, thank you for the suggestion. We're already tracking this enhancement in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15311" title="#15311: enhancement: dynamic image resize (on the fly) using already available functions (new)"&gt;#15311&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #47053 (Accessibility: Need to set proper 'tabindex' in 'Skip To Toolbar' HTML) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:25:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47053#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47053#comment:38/1584026720222000</guid>
      <description>&lt;p&gt;
Having second thoughts about the approach in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47221" title="Toolbar: Load toolbar in `wp_body_open` when available.
For ..."&gt;[47221]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The usage of DocBlock syntax is not quite correct there, as it's neither a function nor a hook definition, just an &lt;code&gt;if&lt;/code&gt; condition. WordPress core does not generally have DocBlocks for random pieces of code like this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
More importantly, this logic is specific to &lt;code&gt;wp_admin_bar_render()&lt;/code&gt; and should be handled in that function, it does not belong in &lt;code&gt;wp_footer()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47053/47053.6.diff" title="Attachment '47053.6.diff' in Ticket #47053"&gt;47053.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47053/47053.6.diff" title="Download"&gt;â€‹&lt;/a&gt; addresses this. No functional difference here, just more appropriate logic.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>47053.6.diff attached to Ticket #47053</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47053/47053.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47053/47053.6.diff/1584026285125399</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49632 (Force lowercase for taxonomy id in register_taxonomy()) updated</title>
      
        <dc:creator>sebastienserre</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:15:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49632#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49632#comment:1/1584026141298706</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a patch&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49632.diff attached to Ticket #49632</title>
      
        <dc:creator>sebastienserre</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49632/49632.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49632/49632.diff/1584026096115105</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49631 (Test coverage for media_sideload_image() _source_url meta) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:11:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49631#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49631#comment:2/1584025892992858</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to @killua99 for a first pass.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note that you can write a test using &lt;code&gt;WP_TESTS_DOMAIN&lt;/code&gt; to sideload from the site set up during testing, rather than an external source.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49632 (Force lowercase for taxonomy id in register_taxonomy()) created</title>
      
        <dc:creator>sebastienserre</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:07:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49632</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49632/1584025666740200</guid>
      <description>&lt;p&gt;
Hello all,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To avoid conflict, I think &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/register_taxonomy/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://developer.wordpress.org/reference/functions/register_taxonomy/&lt;/a&gt; should mention that $taxonomy must be declared in lowercase.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Should it be a good idea to strtolower() the key ?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What do you think ?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49624 (Error message when uploading video) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 15:06:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49624#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49624#comment:1/1584025600573302</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi, @heavenberg. Sorry to hear about your trouble. It sounds like a possible problem with your server. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Does this happen with every video, or just this one?&lt;br /&gt;
Can you open the JavaScript console in your browser and see if there are any more error messages?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you need more assistance, it might be best to open a support request in the &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;WordPress support forums &lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49587 (Add error handling for the media manager Ajax response) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:57:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49587#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49587#comment:1/1584025079007205</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report @johnbillion, let's add this to 5.5 to confirm and get some design feedback on the best user experience for this.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49614 (Add an action for wp_media_attach_action events) updated</title>
      
        <dc:creator>antpb</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49614#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49614#comment:4/1584024588801820</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This would be a really great one to have added for 5.5. Going to move it into the milestone so we can keep track of it. :) &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49379 (When a m4a file is uploaded, a separate .jpg will be created) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49379#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49379#comment:2/1584024539232545</guid>
      <description>invalid: &lt;p&gt;
Hi @Presskopp,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for reporting. This is indeed a feature so that a thumbnail can be associated with an audio of video attachment.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49552 (Offer to reduce photos to reduce server pressure and speed) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49552#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49552#comment:3/1584024432984197</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1584024427133700"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49490 (Proposal: New wrapper function and hook for creating attachments) updated</title>
      
        <dc:creator>antpb</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:46:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49490#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49490#comment:2/1584024376652789</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was discussed in the Media component meeting and it was agreed that better consistency across image handling in Core would be a great goal for 5.5. Moving it into the milestone so we can keep an eye on it and discuss further. :) &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49631 (Test coverage for media_sideload_image() _source_url meta) updated</title>
      
        <dc:creator>antpb</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:39:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49631#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49631#comment:1/1584023983363539</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49631 (Test coverage for media_sideload_image() _source_url meta) created</title>
      
        <dc:creator>antpb</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49631</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49631/1584023926883625</guid>
      <description>&lt;p&gt;
Since &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48164" title="#48164: enhancement: media_sideload_image should store original URL and optionally check ... (closed: fixed)"&gt;#48164&lt;/a&gt; when an image is sideloaded we store the original attachment URL in &lt;code&gt;_source_url&lt;/code&gt;. There should be test coverage across this feature that validates that the meta is being properly stored. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@pbiron mentioned in the Media meeting where this was discussed that there are currently no existing tests around the &lt;code&gt;media_sideload_image()&lt;/code&gt; function. This would be a great start to getting that covered. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@joemcgill also mentioned that "You may want to consider writing the test in a way that sideloads an image that is already available on the test site." &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Link to media meeting where this took place: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02SX62S6/p1584022312111000"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.slack.com/archives/C02SX62S6/p1584022312111000&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49490 (Proposal: New wrapper function and hook for creating attachments) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:38:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49490#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49490#comment:1/1584023917609356</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1584023916129000"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:36:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078#comment:4/1584023767294471</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @danskoya, thanks for the report!&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If permissions to ~/uploads/ are not set correctly&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you referring to a use case where WordPress doesn't have rights to delete files from the filesystem? If so, what would you suggest should happen in this caseâ€”that a warning is shown in the admin that explains that the attachment was removed from the library but the file was not able to be deleted?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078#comment:3/1584023595782380</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1584023594127500"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49614 (Add an action for wp_media_attach_action events) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49614#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49614#comment:3/1584023425458315</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1584023423126300"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48164 (media_sideload_image should store original URL and optionally check ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:18:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48164#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48164#comment:10/1584022714085794</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1584022713116700"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48736 (Exclude PNG images from scaling after upload) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48736#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48736#comment:20/1584022374830489</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1584022373112900"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49629 (WordPress 5.4 RC2 - Top plus block missing and icons covering content. ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49629#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49629#comment:1/1584021900254106</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49630 (How does the lazy load works?) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 14:02:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49630#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49630#comment:2/1584021723625160</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49627 (oEmbedding - Privacy by design - Inconsistencies &amp; Legal concerns) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 13:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49627#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49627#comment:2/1584021409791180</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49627 (oEmbedding - Privacy by design - Inconsistencies &amp; Legal concerns) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 13:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49627#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49627#comment:1/1584021354445916</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49627" title="#49627: defect (bug): oEmbedding - Privacy by design - Inconsistencies &amp;amp; Legal concerns (new)"&gt;arena&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
oEmbedding is now driven by two files :&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp-includes/class-wp-oembed.php&lt;/code&gt;  and its list of "popular" oEmbed providers : array ( pattern =&amp;gt; array( oembed_url, regex [boolean] ) )
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This list is loaded in &lt;code&gt;wp-settings.php&lt;/code&gt; with this instruction : &lt;code&gt;$GLOBALS['wp_embed'] = new WP_Embed();&lt;/code&gt;&lt;br /&gt;
This list of providers is filterable with hook &lt;code&gt;'oembed_providers'&lt;/code&gt;, but the hook appears to be fired before &lt;code&gt;'plugins_loaded'&lt;/code&gt; and &lt;code&gt;'init'&lt;/code&gt; hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Note the difference between &lt;code&gt;WP_Embed&lt;/code&gt; and &lt;code&gt;WP_oEmbed&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The former is indeed created early in &lt;code&gt;wp-settings.php&lt;/code&gt;, but that does not create the &lt;code&gt;WP_oEmbed&lt;/code&gt; object.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The latter is created in &lt;code&gt;_wp_oembed_get_object()&lt;/code&gt; after plugins are loaded. &lt;code&gt;wp_oembed_add_provider()&lt;/code&gt; and &lt;code&gt;wp_oembed_remove_provider()&lt;/code&gt; specifically check for &lt;code&gt;did_action( 'plugins_loaded' )&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36856 (Can't add images or tags to post) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 12 Mar 2020 13:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36856#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36856#comment:3/1584020608382081</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43347 (Introduction of 'has_single' register_post_type parameter) updated</title>
      
        <dc:creator>powerbuoy</dc:creator>

      <pubDate>Thu, 12 Mar 2020 13:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43347#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43347#comment:1/1584019428891534</guid>
      <description>&lt;p&gt;
I know this is a two year old issue by now, but for anyone else requesting this I've written some code to make &lt;code&gt;has_single&lt;/code&gt; work: &lt;a class="ext-link" href="https://github.com/powerbuoy/sleek-post-types/blob/master/has-single.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/powerbuoy/sleek-post-types/blob/master/has-single.php&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Official support would be preferred obviously.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49630 (How does the lazy load works?) closed</title>
      
        <dc:creator>carike</dc:creator>

      <pubDate>Thu, 12 Mar 2020 12:56:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49630#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49630#comment:1/1584017806735820</guid>
      <description>invalid: &lt;p&gt;
Hallo there :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Trac is not for end-user support.&lt;br /&gt;
Please ask your question here:  &lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49630 (How does the lazy load works?) created</title>
      
        <dc:creator>plant20</dc:creator>

      <pubDate>Thu, 12 Mar 2020 12:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49630</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49630/1584016395748628</guid>
      <description>&lt;p&gt;
How does the lazy load works?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49628 (Add is_post_type_viewable filter) updated</title>
      
        <dc:creator>powerbuoy</dc:creator>

      <pubDate>Thu, 12 Mar 2020 12:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49628#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49628#comment:2/1584014436670438</guid>
      <description>&lt;p&gt;
Found a duplicate of that: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43347" title="#43347: feature request: Introduction of 'has_single' register_post_type parameter (new)"&gt;#43347&lt;/a&gt; but seems abandoned. Perhaps adding an is_post_type_viewable filter will be easier?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49628 (Add is_post_type_viewable filter) updated</title>
      
        <dc:creator>powerbuoy</dc:creator>

      <pubDate>Thu, 12 Mar 2020 11:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49628#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49628#comment:1/1584014223077936</guid>
      <description>&lt;p&gt;
Thinking about it, an even better solution would probably be to add official support for &lt;code&gt;has_single&lt;/code&gt; :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49629 (WordPress 5.4 RC2 - Top plus block missing and icons covering content. ...) created</title>
      
        <dc:creator>a4jp.com</dc:creator>

      <pubDate>Thu, 12 Mar 2020 11:49:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49629</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49629/1584013788136263</guid>
      <description>&lt;p&gt;
The top block on pages is missing an add block plus mark when you mouseover, and the mouseover is slow on all other blocks. The block edit icons also hides the text of the block above it making it difficult to edit pages if you can't read the text. Can the space between blocks be increased a bit or the icons be made slightly transparent so we can read the text under them a bit. We have to click off to read the text before clicking blocks again just to edit at the moment.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49628 (Add is_post_type_viewable filter) created</title>
      
        <dc:creator>powerbuoy</dc:creator>

      <pubDate>Thu, 12 Mar 2020 11:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49628</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49628/1584013392733308</guid>
      <description>&lt;p&gt;
It would be great if we could hook into is_post_type_viewable() and override the check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We've created a new config for post types; &lt;code&gt;has_single&lt;/code&gt;, which works very much like &lt;code&gt;has_archive&lt;/code&gt; only it disables single pages for a post-type (useful for post-types such as &lt;code&gt;office&lt;/code&gt; or &lt;code&gt;employee&lt;/code&gt; which usually in our cases only have archive pages).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, even though the post-type shows a 404 on single (using &lt;code&gt;template_redirect&lt;/code&gt;), inside the admin the "View"-links and "Permalink" settings still show up. It seems the easiest way to hide everything related to single pages is to simply &lt;code&gt;return false&lt;/code&gt; from &lt;code&gt;is_post_type_viewable()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>screenshot2 gutenberg wp 5.3.png attached to Ticket #49627</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 12 Mar 2020 11:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49627/screenshot2%20gutenberg%20wp%205.3.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49627/screenshot2%20gutenberg%20wp%205.3.png/1584013357388840</guid>
      <description>&lt;p&gt;
screenshot2 gutenberg wp 5.3
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot1  classic trunk (5.5-alpha-47436).png attached to Ticket #49627</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 12 Mar 2020 11:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49627/screenshot1%20%20classic%20trunk%20(5.5-alpha-47436).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49627/screenshot1%20%20classic%20trunk%20(5.5-alpha-47436).png/1584013333642532</guid>
      <description>&lt;p&gt;
screenshot1  classic trunk (5.5-alpha-47436)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49627 (oEmbedding - Privacy by design - Inconsistencies &amp; Legal concerns) created</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Thu, 12 Mar 2020 11:41:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49627</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49627/1584013279622250</guid>
      <description>&lt;p&gt;
oEmbedding is now driven by two files :&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp-includes/class-wp-oembed.php&lt;/code&gt;  and its list of "popular" oEmbed providers : array ( pattern =&amp;gt; array( oembed_url, regex [boolean] ) )
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This list is loaded in &lt;code&gt;wp-settings.php&lt;/code&gt; with this instruction : &lt;code&gt;$GLOBALS['wp_embed'] = new WP_Embed();&lt;/code&gt;&lt;br /&gt;
This list of providers is filterable with hook &lt;code&gt;'oembed_providers'&lt;/code&gt;, but the hook appears to be fired before &lt;code&gt;'plugins_loaded'&lt;/code&gt; and &lt;code&gt;'init'&lt;/code&gt; hooks.&lt;br /&gt;
The modus operandi to alter the "popular" providers list is described here : &lt;a class="ext-link" href="https://wordpress.org/support/article/embeds/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/article/embeds/&lt;/a&gt; .&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp-includes/js/dist/block-library.js&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The data structure is here different due to some visual aspects (Gutenberg)&lt;br /&gt;
Several variables with name like &lt;code&gt;'embedXxxxxIcon'&lt;/code&gt; are objects containing svg icons&lt;br /&gt;
and another list of oEmbed providers with a specific variable called 'common' which is a set of &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
-- name =&amp;gt; settings ( title, name svg icon, keywords, description )&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
=&amp;gt; patterns&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
1) the lists of oEmbed providers are not identical in php and javascript.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
2) in each list, the patterns for each oEmbed provider can be different.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
3) the once driven oEmbedding process by the php array that could be filtered or altered ("popular" oEmbed providers) is not possible anymore.&lt;br /&gt;
If you are using the Classic editor or Gutenberg, the process to retrieve the data and the structure of the data are different as shown in screenshot1 (Classic trunk) and screenshot2 (Gutenberg 5.3).&lt;br /&gt;
'Classic editor' is using &lt;code&gt;admin-ajax.php&lt;/code&gt; and retrieves a specific json format.&lt;br /&gt;
'Gutenberg' is using the rest-api and calls a url such as &lt;code&gt;'index.php?rest_route=/oembed/1.0/proxy&amp;amp;url....&amp;amp;_locale=user'&lt;/code&gt; and retrieves the full oembed json from the provider.&lt;br /&gt;
In the class-wp-oembed-controller, the code executed seems similar to Classic editor (data2html) but the result is obviously different.&lt;br /&gt;
Both are caching the html code in post_meta table, 'Gutenberg' is caching the json result of oembed in options table.&lt;br /&gt;
This means that the filter 'oembed_result' is by-passed when oembed content is displayed in 'Gutenberg'.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
4) if a site decides to remove one or all references to "popular" or "trusted" (vocabulary differs in code comments) oEmbed providers or add its own, this is not possible anymore when using Gutenberg, because the javascript providers list is hard-coded and cannot be altered.&lt;br /&gt;
For obvious local regulations, it is important to be consistent and coherent in the oembedding policy choices of each site for each site.&lt;br /&gt;
This is a regression and an infringement to the "Privacy by design" policy adopted by wordpress open source project.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
5) i am not going to discuss how the "popular" providers got elected by a "popular" vote or an electoral college and if they had a superpac to get elected (or more accurately "be referenced").&lt;br /&gt;
On some websites, these arbitrary choices that cannot be altered may contervene to website policy e.g. educational blogs for kids, or local laws.&lt;br /&gt;
In some countries, this can be considered as political [ethymology definition : "life in the city"] choice and can put at risk wordpress users : loading in their browsers references to forbidden sites.&lt;br /&gt;
Surveillance is everywhere and not all countries are democracies.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
6) it is important, that in WordPress, all "popular" oEmbed providers removed or added by filter, be removed or added in any form of code (Gutenbeg specific blocks included) (privacy by design).&lt;br /&gt;
This implies a unique reference list of providers (filterable/alterable in php) with some extra information for visual aspects under Gutenberg.&lt;br /&gt;
The javascript variables must be generated (or not if providers is an empty array) from the php list (with some default values if extra information is not provided).&lt;br /&gt;
To simply and easily :&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
a) add a new provider on both sides and specific svg icons.&lt;br /&gt;
b) remove a "popular" provider with an easy&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_oembed_remove_provider( 'tactic' ); &lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
rather than &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_oembed_remove_provider( '#https?://(www\.)?tactic\.com/.*/video/.*#i' );&lt;/code&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
c) &lt;code&gt;wp_oembed_remove_all_providers()&lt;/code&gt; is also welcome.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
7) it could be interesting to offer optional and intermediate solutions to oEmbedding as it is processed today (privacy by design) :&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
a) insert specific html ( usually iframe : fully intrusive)&lt;br /&gt;
b) insert link to url with thumbnail when available &lt;code&gt;&amp;lt;a href=...&amp;gt;&amp;lt;img src=thumbnail_url ... /&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt; (less intrusive)&lt;br /&gt;
c) insert link as text &lt;code&gt;&amp;lt;a href=url ...&amp;gt;(some title or text if available or url)&amp;lt;/a&amp;gt;&lt;/code&gt; (no oEmbedding : not intrusive)&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Requires to cache the complete json answer indifferently ('Classic' or 'Gutenberg').&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
8) it could be interesting to encapsulate the oembedding result in a custom html5 element (privacy by design) &lt;br /&gt;
such as &lt;code&gt;&amp;lt;wp-oembed&amp;gt; ... &amp;lt;/wp-oembed&amp;gt;&lt;/code&gt; to allow theme developpers to add specific js on embedded content.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
9) The oEmbed providers listed in wordpress are referenced by wordpress. Definitely change the vocabulary used in the code comments.&lt;br /&gt;
Do not use "popular" or "trusted" providers but 'referenced providers', because this is the most accurate definition.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Regards&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
related &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43713" title="#43713: enhancement: Privacy: Add a UI to allow administrators to disable individual embeds ... (new)"&gt;#43713&lt;/a&gt;, &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
related &lt;a class="ext-link" href="https://wordpress.org/support/article/embeds/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/article/embeds/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
ps : as a remainder, GDPR chapter IV title is Controller and Processor.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49615 (Editor: Support filtering arguments in block type registration) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 12 Mar 2020 08:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49615#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49615#comment:4/1584002903860898</guid>
      <description>&lt;p&gt;
The nice side-effect of using &lt;code&gt;register_post_type_args&lt;/code&gt; is the use case where you could set &lt;code&gt;render_callback&lt;/code&gt; using this filter and automate the block registration using some sort of &lt;code&gt;block.json&lt;/code&gt; detection from one central place. If you combine it with the new utility function &lt;code&gt;register_block_type_from_metadata&lt;/code&gt; I propose in &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/20794"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/20794&lt;/a&gt;, you could simplify the block registration to running a loop over the list of locations with &lt;code&gt;block.json&lt;/code&gt; file or even provide another filter that stores the list of such locations. This way, we could avoid the whole logic in Gutenberg that plays with action priorities to ensure that core blocks are successfully overridden in the plugin:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/blob/e8c7e9768c5f4eed7d5dcc92c5592424f0a52f83/webpack.config.js#L139-L180"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/WordPress/gutenberg/blob/e8c7e9768c5f4eed7d5dcc92c5592424f0a52f83/webpack.config.js#L139-L180&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Instead, it could be simplified to two things:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Gutenberg replaces the list of locations for core blocks
&lt;/li&gt;&lt;li&gt;Gutenberg registers filters that override &lt;code&gt;render_callback&lt;/code&gt; for core blocks (well, here the priority might be still an issue as it's the same code)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Thu, 12 Mar 2020 08:23:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:81/1584001396156549</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48154#comment:79" title="Comment 79"&gt;peterwilsoncc&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/48154/48154-update-file-check.diff" title="Attachment '48154-update-file-check.diff' in Ticket #48154"&gt;48154-update-file-check.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/48154/48154-update-file-check.diff" title="Download"&gt;â€‹&lt;/a&gt; I've modified the file looked for to determine if a site has been built when running from the WordPress-develop repo. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Without &lt;code&gt;wp-includes/assets/script-loader-packages.php&lt;/code&gt;, the JavaScript can not be run (no dependency array) and as it's generated during the build processes the remaining instructions in &lt;code&gt;/src/index.php&lt;/code&gt; are enough.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's a great idea to update code this way if you decide to ignore the &lt;code&gt;wp-includes/assets&lt;/code&gt; folder again.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also thinking it can perhaps do a Grunt &lt;code&gt;clean&lt;/code&gt; of &lt;code&gt;/src/wp-includes/assets/**&lt;/code&gt; before running Webpack in dev mode. This will help by deleting left-over old and unversioned files there (not strictly necessary but nice to have?). &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This proposal from @azaozz is also worth considering to ensure that all files generated earlier get removed. It would also accommodate future changes that we discussed like having one asset file for development and one for production.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is one consideration to take into account that might actually be covered with the updated check that detects whether JS build was executed. We need to ensure that PHPUnit tests pass without JS build files.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49617 (Image upload failing for the non - admin users of WordPress) updated</title>
      
        <dc:creator>amitagrawalindia</dc:creator>

      <pubDate>Thu, 12 Mar 2020 07:03:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49617#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49617#comment:1/1583996586197856</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 12 Mar 2020 06:14:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:4/1583993679845217</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We chatted about this ticket in [today's Triage](&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1583989966303400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1583989966303400&lt;/a&gt;).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I went ahead and refreshed the current patch in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36416/36416.diff" title="Attachment '36416.diff' in Ticket #36416"&gt;36416.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36416/36416.diff" title="Download"&gt;â€‹&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Swapping &lt;code&gt;dev-feedback&lt;/code&gt; to &lt;code&gt;second-opinion&lt;/code&gt; per discussion so this can get attention + review.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36416.diff attached to Ticket #36416</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 12 Mar 2020 06:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36416/36416.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36416/36416.diff/1583993256934670</guid>
      <description>&lt;p&gt;
Refresh of trimed.patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36902 (Function __return_on) closed</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Thu, 12 Mar 2020 06:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36902#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36902#comment:4/1583993068550846</guid>
      <description>wontfix: &lt;p&gt;
While we'll never remove any of the &lt;code&gt;__return&lt;/code&gt; functions from WordPress due to backwards compatibility, I don't think we should be adding any more now that PHP supports anonymous functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The best thing to do here is to use an anonymous function e.g. &lt;code&gt;function() { return 'on'; }&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36856 (Can't add images or tags to post) closed</title>
      
        <dc:creator>talldanwp</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:58:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36856#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36856#comment:2/1583992713686429</guid>
      <description>invalid: &lt;p&gt;
Hi @cdsommer, thanks for reaching out. I realize some time has passed since you created this ticket, so I might have been solved since. Apologies for the delay in responding!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems like it might be something related to your particular installation of WordPressâ€”I'd recommend reaching out on the forums for help with this kind of issue: &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://wordpress.org/support/forums/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36902 (Function __return_on) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:55:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36902#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36902#comment:3/1583992553406598</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by noisysocks. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1583992551327500"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #45807,â€‹46879 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=45807%2C46879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=45807%2C46879/1583992534920766</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/45807" title="#45807: defect (bug): CA Bundle is way out of date (closed: fixed)"&gt;#45807&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36722 (No way to access media "Attachment Display Settings" using wp.media) updated</title>
      
        <dc:creator>talldanwp</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36722#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36722#comment:2/1583992307181499</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @chattyboy, I realize some time has passed since you created this ticket. Apologies for the lack of a response in that time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Is this an issue you're still experiencing, or did you manage to find a solution?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36856 (Can't add images or tags to post) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36856#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36856#comment:1/1583992205250426</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by noisysocks. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1583992203323300"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36631 (wp.template() should throw an error if the template is not found) updated</title>
      
        <dc:creator>noisysocks</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36631#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36631#comment:2/1583991722183196</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good suggestion @joehoyle! The patch doesn't apply cleanly anymore, but if you or someone else is happy to refresh it then I think let's get this in.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36722 (No way to access media "Attachment Display Settings" using wp.media) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36722#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36722#comment:1/1583991680805590</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by noisysocks. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1583991678319200"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36524 (Problem with accessing last saved work) updated</title>
      
        <dc:creator>ehtis</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:32:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36524#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36524#comment:3/1583991172887091</guid>
      <description>&lt;p&gt;
Hi @colomet,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Not entirely sure if you can still see this, but can you add some steps on how to reproduce this? It's a bit unclear so more details could really help!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36631 (wp.template() should throw an error if the template is not found) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36631#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36631#comment:1/1583991128605080</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by talldanwp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1583991126314600"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36524 (Problem with accessing last saved work) updated</title>
      
        <dc:creator>ehtis</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36524#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36524#comment:2/1583991100231401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36524 (Problem with accessing last saved work) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:27:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36524#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36524#comment:1/1583990833582251</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by noisysocks. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1583990831311200"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49268 (Broken themes should always be listed) updated</title>
      
        <dc:creator>sorenbronsted</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:22:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49268#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49268#comment:4/1583990564785155</guid>
      <description>&lt;p&gt;
When I apply the patch from @rebasaurus and set &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; to true it will show themes that are broken, but you can not take action on it. The reason for this behavior is that &lt;code&gt;DISALLOW_FILE_MODS&lt;/code&gt; also modifies the &lt;code&gt; edit_themes &lt;/code&gt; capability among others. So if I understand you @johnbillion correct, you want to break this dependency?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To me as an inexperienced wp contributer it make sense that there is a connection between setting the environment variable and the change in the users capabilities.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36293 (video/audio object passed to wp_video_shortcode/wp_audio_shortcode is ...) updated</title>
      
        <dc:creator>talldanwp</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36293#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36293#comment:2/1583990211274521</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for reporting @gnotaras.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We discussed the ticket briefly in a triage session in slack (the link is above the comment and requires slack registration to view).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the triage session we didn't have time to look into this in depth, but I've moved this to the media component, so hopefully the ticket will get some eyes on it. There is also a shortcodes component, so questionable if it should live there.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36416 (maybe_unserialize returns false if non trimmed string is passed but ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36416#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36416#comment:3/1583989969220308</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by noisysocks. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1583989966303400"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36293 (video/audio object passed to wp_video_shortcode/wp_audio_shortcode is ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 12 Mar 2020 05:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36293#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36293#comment:1/1583989531712966</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Slack&lt;/a&gt; in #core by noisysocks. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1583989529299200"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49268 (Broken themes should always be listed) updated</title>
      
        <dc:creator>sorenbronsted</dc:creator>

      <pubDate>Thu, 12 Mar 2020 04:51:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49268#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49268#comment:3/1583988700030593</guid>
      <description>&lt;p&gt;
Just for the record I will try to fix this.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Mar 2020 04:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:80/1583987306497034</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48154#comment:79" title="Comment 79"&gt;peterwilsoncc&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Mainly seeing it switching branch to branch&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, managed to reproduce it too when "updating" to older revisions.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Without &lt;code&gt;wp-includes/assets/script-loader-packages.php&lt;/code&gt;, the JavaScript can not be run (no dependency array) and as it's generated during the build processes the remaining instructions in &lt;code&gt;/src/index.php&lt;/code&gt; are enough.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, makes sense to test for the existence of &lt;code&gt;script-loader-packages.php&lt;/code&gt;, 48154-update-file-check.diff looks good. Then ignoring the &lt;code&gt;wp-includes/assets&lt;/code&gt; directory should fix the above bugs and show a proper error message when WP is not build properly.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also thinking it can perhaps do a Grunt &lt;code&gt;clean&lt;/code&gt; of &lt;code&gt;/src/wp-includes/assets/**&lt;/code&gt; before running Webpack in &lt;code&gt;dev&lt;/code&gt; mode. This will help by deleting left-over old and unversioned files there (not strictly necessary but nice to have?). &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 12 Mar 2020 03:19:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:79/1583983186661713</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Think this happened only once after script-loader-packages.php was updated and committed manually. Have you seen this happen again? Can it be reproduced consistently?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Mainly seeing it switching branch to branch as I review code on repos I can't commit too. &lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This will bring back the previous bug (non-existing file) when building to /build and running tests on /src, and similar.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/48154/48154-update-file-check.diff" title="Attachment '48154-update-file-check.diff' in Ticket #48154"&gt;48154-update-file-check.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/48154/48154-update-file-check.diff" title="Download"&gt;â€‹&lt;/a&gt; I've modified the file looked for to determine if a site has been built when running from the WordPress-develop repo. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Without &lt;code&gt;wp-includes/assets/script-loader-packages.php&lt;/code&gt;, the JavaScript can not be run (no dependency array) and as it's generated during the build processes the remaining instructions in &lt;code&gt;/src/index.php&lt;/code&gt; are enough.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48154-update-file-check.diff attached to Ticket #48154</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 12 Mar 2020 03:11:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48154/48154-update-file-check.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48154/48154-update-file-check.diff/1583982663158282</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Mar 2020 03:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:78/1583982237634444</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48154#comment:77" title="Comment 77"&gt;peterwilsoncc&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As noted above, this is currently causing uncommitted files to appear in the &lt;code&gt;src&lt;/code&gt; directory when running &lt;code&gt;grunt build --dev&lt;/code&gt; or &lt;code&gt;grunt watch --dev&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Think this happened only once after &lt;code&gt;script-loader-packages.php&lt;/code&gt; was updated and committed manually. Have you seen this happen again? Can it be reproduced consistently?&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reading through &lt;code&gt;Gruntfile.js&lt;/code&gt;, it appears the intent is to manage the entirety of &lt;code&gt;src/wp-includes/assets/&lt;/code&gt; by the build process. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As such, I intend to add &lt;code&gt;src/wp-includes/assets/&lt;/code&gt; to the SVN ignore prop and &lt;code&gt;.gitignore&lt;/code&gt; to both trunk and the 5.4 branch. &lt;code&gt;.gitignore&lt;/code&gt; patch incoming.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This will bring back the previous bug (non-existing file) when building to /build and running tests on /src, and similar.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39370 (wp_insert_user() appends suffix to nicename when updating already ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39370#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39370#comment:6/1583981798423060</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 39370.1.diff: Instead of the user login use the user ID when checking whether a user nicename belongs to the same user.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Would be great if this can be tested with existing code/plugins that allow changing of &lt;code&gt;$user_login&lt;/code&gt;. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39370.1.diff attached to Ticket #39370</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:53:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39370/39370.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39370/39370.1.diff/1583981609855493</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39370 (wp_insert_user() appends suffix to nicename when updating already ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:52:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39370#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39370#comment:5/1583981520111238</guid>
      <description>&lt;p&gt;
As far as I see this can happen when the &lt;code&gt;$user_login&lt;/code&gt; has been changed. This cannot happen in core by default ($user_login is not changeable), but can be added/enabled by a plugin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Then the DB query will "find" a user ID as the updated &lt;code&gt;$user_login&lt;/code&gt; hasn't been saved yet. So using the &lt;code&gt;$user_login&lt;/code&gt; to confirm if it is the same user doesn't work. Would be better to use the user ID for that.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49270 (Add color format to REST API validation) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49270#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49270#comment:7/1583980930211187</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49270 (Add color format to REST API validation) closed</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49270#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49270#comment:6/1583980830504866</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47450" title="REST API: Introduce &amp;#34;hex-color&amp;#34; JSON Schema format.
Props ..."&gt;47450&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Introduce "hex-color" JSON Schema format.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey, chrisvanpatten.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49270" title="#49270: enhancement: Add color format to REST API validation (closed: fixed)"&gt;#49270&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47450]: REST API: Introduce "hex-color" JSON Schema format.  Props ...</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:40:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47450/1583980829368989</guid>
      <description>&lt;p&gt;
REST API: Introduce "hex-color" JSON Schema format.
&lt;/p&gt;
&lt;p&gt;
Props spacedmonkey, chrisvanpatten.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49270" title="#49270: enhancement: Add color format to REST API validation (closed: fixed)"&gt;#49270&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49182 (Unmask password button) updated</title>
      
        <dc:creator>carriganvb</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:36:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49182#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49182#comment:6/1583980613428472</guid>
      <description>&lt;p&gt;
Thank you @bernardroux I'll take a look and see if I can't find where the publication password appears. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks,&lt;br /&gt;
-Carrigan&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Thu, 12 Mar 2020 02:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:77/1583980184782653</guid>
      <description>&lt;p&gt;
As noted above, this is currently causing uncommitted files to appear in the &lt;code&gt;src&lt;/code&gt; directory when running &lt;code&gt;grunt build --dev&lt;/code&gt; or &lt;code&gt;grunt watch --dev&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Reading through &lt;code&gt;Gruntfile.js&lt;/code&gt;, it appears the intent is to manage the entirety of &lt;code&gt;src/wp-includes/assets/&lt;/code&gt; by the build process. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As such, I intend to add &lt;code&gt;src/wp-includes/assets/&lt;/code&gt; to the SVN ignore prop and &lt;code&gt;.gitignore&lt;/code&gt; to both trunk and the 5.4 branch. &lt;code&gt;.gitignore&lt;/code&gt; patch incoming.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49626 (Allow plugin developers to opt-out their plugin from auto updates) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 12 Mar 2020 01:40:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49626#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49626#comment:1/1583977209070397</guid>
      <description>&lt;p&gt;
Thanks for your ticket @JaworskiMatt!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think there is a filter that would already be usable for this purpose: &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/auto_update_type/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;`auto_update_{$type}`&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'auto_update_plugin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$update&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;plugin&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'your-plugin/your-file.php'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$update&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49626 (Allow plugin developers to opt-out their plugin from auto updates) created</title>
      
        <dc:creator>JaworskiMatt</dc:creator>

      <pubDate>Thu, 12 Mar 2020 01:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49626</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49626/1583977003528815</guid>
      <description>&lt;p&gt;
I would like to request a filter for plugin developers to be able to opt their plugin out from the automatic updates completely.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example in &lt;code&gt;wp_autoupdates_add_plugins_autoupdates_column_content&lt;/code&gt; we could add something like&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'wp_autoupdates_enabled_for_plugin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$plugin_file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This way a developer of a plugin that for some reason should always be updated manually, can hide this option from the admin for his own good.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49623 (Hierarchical Custom Post Types do not show up in the REST API) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 12 Mar 2020 01:30:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49623#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49623#comment:2/1583976648555815</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @alanford123!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Welcome to trac and thanks for your ticket!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you try this with all plugins disabled and a stock WordPress theme? We have &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/a44943546ca6259279f2632b1b4890bd7cc5ca22/tests/phpunit/tests/rest-api/rest-pages-controller.php#L133"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;automated tests&lt;/a&gt; to verify that all posts are returned, including child posts, when doing a regular request to a hierarchical post type.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>