<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #41709 (Make plugin install deep-linking easier) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41709#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41709#comment:1/1505428589192477</guid>
      <description>&lt;p&gt;
Mostly a duplicate of &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/18289" title="#18289: task (blessed): Direct link to plugin installation should have admin chrome (reviewing)"&gt;#18289&lt;/a&gt; (which was near-impossible to find)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:28:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:8/1505428122409587</guid>
      <description>&lt;p&gt;
Just a note that this change appears to have broken the "tag cloud" on the WordPress.org support forums. We had to disable them because the queries generated with this new DISTINCT in place were running too long.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://meta.trac.wordpress.org/changeset/5927"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/changeset/5927&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For reference, the taxonomy involved here is "topic-tag" which is used for the support forum topics in bbPress. The terms table and term_taxonomy table each contain approximately 500000 entries.
&lt;/p&gt;
&lt;p&gt;
The resulting query looks like the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT DISTINCT t.*, tt.* FROM wp_terms AS t
INNER JOIN wp_term_taxonomy AS tt
ON t.term_id = tt.term_id
WHERE tt.taxonomy IN ('topic-tag')
AND tt.count &amp;gt; 0
ORDER BY tt.count DESC
LIMIT 22
&lt;/pre&gt;&lt;p&gt;
Remove the DISTINCT keyword and the query runs more or less fine.
&lt;/p&gt;
&lt;p&gt;
So, systems with lots of terms may be negatively impacted, possibly broken, by this change. Might want to rethink it, and test on large installations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41831 ("Unable to locate WordPress Content directory (wp-content)" with ssh2) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41831#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41831#comment:3/1505427974444198</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41831 ("Unable to locate WordPress Content directory (wp-content)" with ssh2) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41831#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41831#comment:2/1505427959694995</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @mangoo,
&lt;/p&gt;
&lt;p&gt;
This sounds like &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35517" title="#35517: defect (bug): Work around PHP7 php-ssh2 breakage (new)"&gt;#35517&lt;/a&gt; - PHP7 / the ssh2 extension not being compatible with each other, can you confirm that you're running an affected version?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41888 (Code Editor: Warning messages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:21:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41888#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41888#comment:1/1505427686484650</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505427684000134"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41888 (Code Editor: Warning messages) created</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:20:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41888</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41888/1505427659219120</guid>
      <description>&lt;p&gt;
In a style.css file I checked.
There are mysterious messages such as:
6 of the following:
"Using width with padding-left can sometimes make elements larger then you expect."
&lt;/p&gt;
&lt;p&gt;
I also got a warning beside border: 1px solid #ddd
"Using width with border can sometimes make elements larger then you expect."
&lt;/p&gt;
&lt;p&gt;
2 warnings in the following code.
"Outlines should only be modified using :focus. and
"Using width with padding can sometimes make elements larger then you expect."
&lt;/p&gt;
&lt;p&gt;
There was also a very long warning message beside display: box. Basically with a lot of text saying that box is the wrong code to use.
&lt;/p&gt;
&lt;p&gt;
I am hoping that this will be adjusted.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41887 (Code Editor: Error disables the Update File button.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41887#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41887#comment:1/1505427338803628</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505427337000146"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41887 (Code Editor: Error disables the Update File button.) created</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41887</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41887/1505427317311607</guid>
      <description>&lt;p&gt;
When there is an error in the code the Update File button is disabled.
It would be better to find another approach.
&lt;/p&gt;
&lt;p&gt;
Such as giving a warning about saving the file etc... Leaving it up to the user to decide on saving the file.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>PeterRKnight</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:05:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:174/1505426717761689</guid>
      <description>&lt;p&gt;
Regardless of the sudden change of course, will we see the hooks API on npm soon? It would be good to use in plugins right now.
&lt;/p&gt;
&lt;p&gt;
Although it seems reasonable to hold off on this, it is striking how reluctant we are to embrace things that have served WordPress well as we attempt to modernise. Hooks &amp;amp; filters are the bread and butter of extending WordPress, it's one of the most battle tested overwhelmingly successful design patterns but it seems like there's a negative bias against it simply because it is not new? Hooks and filters are something that WordPress has gotten right despite all the flack WordPress gets for its architectural state.
&lt;/p&gt;
&lt;p&gt;
I'm not sure there is a JS project out there that has achieved the same ease of customization, allowing 3rd parties to modify just about every behaviour and string of an app on the same scale as we find in WordPress. So I don't understand why we've become transfixed with JS frameworks and evolving practices found in projects that don't even begin to resemble or emulate the needs of WordPress. They're not designed for an ecosystem of thousands of plugin and theme developers that want the power to change every piece of behaviour. Instead it seems like we need the blessing of some mythical standard in the JS developer community rather than forging our own decisions based on what we know works, and perhaps even doing things unique to WordPress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41886 (Code Editor: Auto scroll or click button to go to error.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 22:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41886#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41886#comment:4/1505426521763856</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41886 (Code Editor: Auto scroll or click button to go to error.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41886#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41886#comment:3/1505426247862237</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41886 (Code Editor: Auto scroll or click button to go to error.) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41886#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41886#comment:2/1505426215242486</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41886 (Code Editor: Auto scroll or click button to go to error.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:55:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41886#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41886#comment:1/1505426141138488</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505426139000341"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41886 (Code Editor: Auto scroll or click button to go to error.) created</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41886</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41886/1505426126979120</guid>
      <description>&lt;p&gt;
It would be good to have an auto scroll to go to error that the code editor notices. (Or a button the user can click.) After fixing one error the user can click the button again to go to the next.
&lt;/p&gt;
&lt;p&gt;
The Update File button should not be disabled.
&lt;/p&gt;
&lt;p&gt;
Originally &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/95"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/95&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
See conversation at &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1505425698000437"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C0381N237/p1505425698000437&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41529 (Twenty Seventeen: Add social icon for Dockerhub) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:45:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41529#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41529#comment:3/1505425559012189</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868#comment:5/1505424970921069</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30049 (wp_load_translations_early does not without WPLANG defined) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:19:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30049#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30049#comment:12/1505423957460989</guid>
      <description>&lt;p&gt;
Reopening to look into &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30049#comment:10" title="Comment 10"&gt;comment:10&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #30049,​41823 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 14 Sep 2017 21:18:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30049%2C41823</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30049%2C41823/1505423903980139</guid>
      <description>duplicate: &lt;p&gt;
I was able to reproduce the issue by using an English package and choosing Slovak during install, rather than the Slovak package from sk.wordpress.org.
&lt;/p&gt;
&lt;p&gt;
It's the same issue as in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/30049" title="#30049: defect (bug): wp_load_translations_early does not without WPLANG defined (reopened)"&gt;#30049&lt;/a&gt;: &lt;code&gt;wp_load_translations_early()&lt;/code&gt; does not work if neither &lt;code&gt;WPLANG&lt;/code&gt; nor &lt;code&gt;$wp_local_package&lt;/code&gt; are defined.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 20:38:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:63</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:63/1505421523205167</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39896#comment:62" title="Comment 62"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Per yesterday's Slack chat, we've decided to cut any UI for autosaving: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1505342651000160"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C0381N237/p1505342651000160&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to add-on that while the UI for &lt;em&gt;autosaving&lt;/em&gt; has been dropped, there is still a UI &lt;em&gt;for having been autosaved&lt;/em&gt;. In other  words, this is the notice which users are presented with after returning to the Customizer if they didn't explicitly save their changes: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39896/autosave-notice.png" title="Attachment 'autosave-notice.png' in Ticket #39896"&gt;autosave-notice.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39896/autosave-notice.png" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41885 (Editor in bottom line shows a timestamp) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 14 Sep 2017 20:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41885#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41885#comment:2/1505419956351235</guid>
      <description>invalid: &lt;p&gt;
Hi @ReikoDD, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
The issue is caused by an &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/admin/de/default?filters%5Bstatus%5D=either&amp;amp;filters%5Boriginal_id%5D=26&amp;amp;filters%5Btranslation_id%5D=50915264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;incorrect German translation&lt;/a&gt; of the &lt;code&gt;g:i:s a&lt;/code&gt; string as &lt;code&gt;H:i:s Uhr&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;U&lt;/code&gt;, &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;r&lt;/code&gt; are all recognized as valid parameters of the PHP &lt;a class="ext-link" href="https://secure.php.net/manual/en/function.date.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;date()&lt;/a&gt; function, and they produce the &lt;code&gt;150522195801Tue, 12 Sep 2017 13:12:38 +0000&lt;/code&gt; part on your screenshot.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41823 (Text on web site during update of plugins and at login page is always ...) updated</title>
      
        <dc:creator>dragy</dc:creator>

      <pubDate>Thu, 14 Sep 2017 20:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41823#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41823#comment:11/1505419262437623</guid>
      <description>&lt;p&gt;
seriously, anyone else who can look at his with me on slack?
&lt;/p&gt;
&lt;p&gt;
thx
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41885 (Editor in bottom line shows a timestamp) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41885#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41885#comment:1/1505418958934862</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by reikodd. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505418957000052"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41885 (Editor in bottom line shows a timestamp) created</title>
      
        <dc:creator>ReikoDD</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:54:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41885</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41885/1505418894603183</guid>
      <description>&lt;p&gt;
When i create a new post and save this after the i write more and then autosave the botton line has a timestamp not a correct string. I think is a JS Problem.
&lt;a style="padding:0; border:none" href="http://52.212.255.218/datas/wpbug.png"&gt;&lt;img src="http://52.212.255.218/datas/wpbug.png" alt="http://52.212.255.218/datas/wpbug.png" crossorigin="anonymous" title="http://52.212.255.218/datas/wpbug.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41884 (Twenty Seventeen: responsive (gallery) images are too large) created</title>
      
        <dc:creator>nosilver4u</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:36:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41884</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41884/1505417763271448</guid>
      <description>&lt;p&gt;
It seems the sizes attribute used for gallery images on the Twenty Seventeen theme is a bit off. When viewed on the front page or an archive page, instead of the selected thumbnail images (150px), the browser is choosing the medium size at 600w, which I believe is based on the "default" of 580px.
Even worse, when viewing a single post with a gallery, the "size" attribute is 100vw, which means a 1080p screen forces the browser to load the largest image available (1024w in my case).
&lt;/p&gt;
&lt;p&gt;
I switched over to the Twenty Sixteen theme and it does not seem to have this same problem.
&lt;/p&gt;
&lt;p&gt;
I also tested this on another site, and initially it was only showing thumbs (as expected). I compared the media settings, and realized the two sites were different.
&lt;/p&gt;
&lt;p&gt;
So there is one other thing that must be true to cause this behavior. Under the Media settings, if you have the thumbnail cropping turned off, this is the trigger.
&lt;/p&gt;
&lt;p&gt;
So essentially, when the thumbs are 150x113 instead of 150x150, the Twenty Seventeen theme adds all (or most of) the available sizes to the srcset list because it fails to find an exact match to display in the gallery.
&lt;/p&gt;
&lt;p&gt;
You can see it in action here: &lt;a class="ext-link" href="https://test.shanebishop.net/2017/06/23/hello-world/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://test.shanebishop.net/2017/06/23/hello-world/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41883 (Press This: JS error "Cannot read property 'stripTags' of undefined") closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:28:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41883#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41883#comment:5/1505417337587825</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41379" title="wp.sanitize - fix namespace for calls to `stripTags`.
Fixes an ..."&gt;41379&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
wp.sanitize - fix namespace for calls to &lt;code&gt;stripTags&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes an &lt;code&gt;undefined&lt;/code&gt; JavaScript error in PressThis since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41061" title="Move `sanitizeText` and `stripTags` from press this to `wp.sanitize`.
 ..."&gt;[41061]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props afercia.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41883" title="#41883: defect (bug): Press This: JS error &amp;#34;Cannot read property 'stripTags' of undefined&amp;#34; (closed: fixed)"&gt;#41883&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41379]: wp.sanitize - fix namespace for calls to `stripTags`.  Fixes an ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:28:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41379</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41379/1505417337093168</guid>
      <description>&lt;p&gt;
wp.sanitize - fix namespace for calls to &lt;code&gt;stripTags&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes an &lt;code&gt;undefined&lt;/code&gt; JavaScript error in PressThis since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41061" title="Move `sanitizeText` and `stripTags` from press this to `wp.sanitize`.
 ..."&gt;[41061]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props afercia.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41883" title="#41883: defect (bug): Press This: JS error &amp;#34;Cannot read property 'stripTags' of undefined&amp;#34; (closed: fixed)"&gt;#41883&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41883 (Press This: JS error "Cannot read property 'stripTags' of undefined") updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:24:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41883#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41883#comment:4/1505417055956174</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41883/41883.diff" title="Attachment '41883.diff' in Ticket #41883"&gt;41883.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41883/41883.diff" title="Download"&gt;​&lt;/a&gt; fixes it that issue, must have broken before the final commit. good argument for adding urit tests here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41883.diff attached to Ticket #41883</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41883/41883.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41883/41883.diff/1505417023454717</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41883 (Press This: JS error "Cannot read property 'stripTags' of undefined") updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:16:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41883#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41883#comment:3/1505416586359802</guid>
      <description>&lt;p&gt;
@adamsilverstein great, thanks! 🍷
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41689 (Retire Press This) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:13:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41689#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41689#comment:9/1505416439189913</guid>
      <description>&lt;p&gt;
Latest patch along with the corresponding update to the plugin works in initial testing as expected (currently hitting &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41883" title="#41883: defect (bug): Press This: JS error &amp;#34;Cannot read property 'stripTags' of undefined&amp;#34; (closed: fixed)"&gt;#41883&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41883 (Press This: JS error "Cannot read property 'stripTags' of undefined") updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41883#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41883#comment:2/1505416367373718</guid>
      <description>&lt;p&gt;
Whew, I was just starting to look into this relative to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41689" title="#41689: task (blessed): Retire Press This (closed: fixed)"&gt;#41689&lt;/a&gt;. I thought I broke something there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41883 (Press This: JS error "Cannot read property 'stripTags' of undefined") updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41883#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41883#comment:1/1505416234154972</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oops, thanks for catching @afercia - I see the issue, fix incoming.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41689.2.diff attached to Ticket #41689</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41689/41689.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41689/41689.2.diff/1505416148639470</guid>
      <description>&lt;p&gt;
2nd pass
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41883 (Press This: JS error "Cannot read property 'stripTags' of undefined") created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41883</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41883/1505416030018250</guid>
      <description>&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;access Press This from &lt;code&gt;wp-admin/press-this.php&lt;/code&gt; (haven't tried the bookmarklet)
&lt;/li&gt;&lt;li&gt;try to Publish, Save, or switch to "Standard Editor"
&lt;/li&gt;&lt;li&gt;observe your browser console:
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;code&gt;Uncaught TypeError: Cannot read property 'stripTags' of undefined&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
/cc @adamsilverstein
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41877 (Caddy server support) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:03:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41877#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41877#comment:2/1505415800004821</guid>
      <description>&lt;p&gt;
I wonder if it's about the time that we can assume that all web servers have rewrites available?
&lt;/p&gt;
&lt;p&gt;
We could keep the iis7/apache checks as they expose methods to check.. but most other server environments DO support it today - and any future server is likely to support it too given how relied upon it is today.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40774 (Refine error message when embedding invalid Video (URL)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 19:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40774#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40774#comment:6/1505415617866835</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by presskopp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505415616000218"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40175 (Upload Validation / MIME Handling) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40175#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40175#comment:22/1505415523554945</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40175 (Upload Validation / MIME Handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40175#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40175#comment:21/1505415475361154</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by blobfolio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505415472000645"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Publish Settings - Alternate Layout.png attached to Ticket #39896</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:55:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Alternate%20Layout.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Alternate%20Layout.png/1505415330167340</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41787 (Media: JS error when removing a video/audio sourced) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:54:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41787#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41787#comment:7/1505415277570460</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:62/1505415271112273</guid>
      <description>&lt;p&gt;
Okay, uploaded drafting and scheduling.
&lt;/p&gt;
&lt;p&gt;
Per yesterday's Slack chat, we've decided to cut any UI for autosaving: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1505342651000160"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C0381N237/p1505342651000160&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Still planning on putting together an update for the exit-restore-changes-flow when I have time again this week. Also attaching an alternate layout idea that I explored, but am worried about making any big changes right now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41787 (Media: JS error when removing a video/audio sourced) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41787#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41787#comment:6/1505415248313963</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505415247000144"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41704 (Use a consistent title for "Add Media" button and "Insert Media" window) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:53:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41704#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41704#comment:5/1505415234766690</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm not opposed to changing this string if it helps translations be more consistent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Publish Settings - Scheduling Flow.png attached to Ticket #39896</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Scheduling%20Flow.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Scheduling%20Flow.png/1505415112348107</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41704 (Use a consistent title for "Add Media" button and "Insert Media" window) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:51:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41704#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41704#comment:4/1505415076144211</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505415074000396"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38264 (Tests: Uploads aren't deleted after running individual tests) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38264#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38264#comment:7/1505414987106434</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505414985000478"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41844 (Media: audio players overflow playlist containers) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:47:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41844#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41844#comment:1/1505414821886353</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505414820000384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40921 (Inconsistent Handling of mp4 by Audio Widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40921#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40921#comment:19/1505414506427123</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505414505000014"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Publish Settings - Drafting Flow.png attached to Ticket #39896</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Drafting%20Flow.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/Publish%20Settings%20-%20Drafting%20Flow.png/1505414424666864</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33981 (Default Captions Should Use max-width) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:38:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33981#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33981#comment:12/1505414333728767</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505414331000572"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:38:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:173</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:173/1505414302251062</guid>
      <description>&lt;p&gt;
Thanks for the clarification. I &lt;strong&gt;am&lt;/strong&gt; curious to see if &lt;code&gt;wp.hooks&lt;/code&gt; proves useful in Gutenberg, or what changes that use might bring up! In the meantime, I would also like to start using &lt;code&gt;wp.hooks&lt;/code&gt; in core.
&lt;/p&gt;
&lt;p&gt;
The goal of getting &lt;code&gt;wp.hooks&lt;/code&gt; into trunk is to start trying to use is internally - I'm going to work on a demonstration of that next.
&lt;/p&gt;
&lt;p&gt;
If we find the &lt;code&gt;wp.hooks&lt;/code&gt; library is not useful or feel its API is not stable before the 4.9 release, I would support reverting or possubly authoring a dev note as well as liberal inline comments explaining that this is a new API that may have breaking changes and if developers use it they should watch development closely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35218 (Parse the creation date out of uploaded videos) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35218#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35218#comment:8/1505414162466317</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505414160000605"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41877 (Caddy server support) updated</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41877#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41877#comment:1/1505414087863369</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:13/1505413553057607</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Also, I'm assigning to @desrosj for further review, but @philmcdonnell feel free to add a patch if you have an approach you think will work. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:12/1505413489738593</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41629#comment:11" title="Comment 11"&gt;philmcdonnell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If there is no link currently on the inserted image it would just default to 'none' or would that want to default to custom url as well? I would think editing an existing should be set to none if that is what was there originally. Thoughts?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think your suggestion makes sense. Additionally, if a site has the image_default_link_type option set, we should probably respect it. So this would only apply as a default when that option is not set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21819 (Avoid redundant crops for custom headers in the media library) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:18:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21819#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21819#comment:31/1505413100474519</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505413099000084"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>philmcdonnell</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:11/1505412479203744</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41629#comment:9" title="Comment 9"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The behavior should work just like it currently does if the form is submitted while custom URL is selected and the URL field is left blank. The image is inserted with no link at all.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks! That is what I thought, just making sure. So it is trivial to make this work, however there are two links withing the image widget, one is replace image which uses the same code as the original insert image so that would work as expected. There is another link (button) that says edit image, what would the expected behavior be there? If there is no link currently on the inserted image it would just default to 'none' or would that want to default to custom url as well? I would think editing an existing should be set to none if that is what was there originally. Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:05:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:10/1505412307571571</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1505412305000406"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 14 Sep 2017 18:03:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:172</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:172/1505412239983962</guid>
      <description>&lt;p&gt;
Yep, exactly. Sorry if that was misunderstood. I didn't mean Gutenberg as the new editor, I meant it as a good way to test and experiment with wp-hooks in a forward-looking way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Thu, 14 Sep 2017 17:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:171</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:171/1505411392363322</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Choosing what we use in core today based on the needs of Gutenberg is a mistake.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, I didn't mean to imply that. I think what @azaozz means is that we have a nice opportunity to immediately test the approach in a large-ish JS project for core as part of one of the focuses—which might tell us if it's at all viable or desirable for it, illustrate inherent problems/flaws/opportunities we would want to address, or just learn that it's orthogonal to whatever approach we take for Gutenberg and it's fine to separate extensibility of current JS code from newer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Thu, 14 Sep 2017 17:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:170</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:170/1505409761065923</guid>
      <description>&lt;p&gt;
I was so looking forward to this
&lt;/p&gt;
&lt;p&gt;
Please revert the revert :-)
&lt;/p&gt;
&lt;p&gt;
Paul
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 14 Sep 2017 16:36:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:169</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:169/1505407008504475</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21170#comment:164" title="Comment 164"&gt;sudar&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I have been following this ticket for years. I got excited when it was finally merged it, I even tweeted about it. But when I woke up the next day it was reverted and I was very sad. I felt like a kid who’s birthday gift got snatched before they could use it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly how I felt.
&lt;/p&gt;
&lt;p&gt;
To date it has been very hard to extend code in WordPress written in Javascript.  &lt;code&gt;wp.hook&lt;/code&gt; finally offered a solution, and it has been far too long in coming.
&lt;/p&gt;
&lt;p&gt;
I really hope that &lt;em&gt;"perfect"&lt;/em&gt; is not allowed to exterminate &lt;em&gt;"good"&lt;/em&gt; here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 16:01:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:32/1505404915765140</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by mjassen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1505404913000342"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>verticalgrain</dc:creator>

      <pubDate>Thu, 14 Sep 2017 15:57:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:168</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:168/1505404649136339</guid>
      <description>&lt;p&gt;
I wanted to chime in and say I was excited to see this ticket merged and quite disappointed to see it being reverted.
&lt;/p&gt;
&lt;p&gt;
I hope that the reaction of so many developers who want this causes the decision to be reconsidered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 14 Sep 2017 15:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:3/1505403757120853</guid>
      <description>&lt;p&gt;
@firebird75 thank you for explaining how-to. I will install the plugin soon! Btw, would like to know what makes you feel my reply a great one... lol!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41867#comment:2" title="Comment 2"&gt;firebird75&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Wow, what a great and fast reply!!!
&lt;/p&gt;
&lt;p&gt;
The query you are showing up is the second one. There is one before that. You won't be able to see it with the last_query. You need to install a plugin like blackbox to see all the queries and so the one throwing the error.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>jadpm</dc:creator>

      <pubDate>Thu, 14 Sep 2017 15:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:167</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:167/1505402831836663</guid>
      <description>&lt;p&gt;
Just wanted to stop and say that I am also following this ticket for years now (the number of people subscribed here may give an idea of whether this is really an interesting project or what), and I was really shocked to read that a revert on this merge was even proposed for no real reason besides that maybe someday somehow someone would propose a better (?) approach.
&lt;/p&gt;
&lt;p&gt;
I might be entirely wrong, but the approach of this ticket was basically extending the successfull hooks mechanism from PHP to JS, so I would be extremely excited and maybe a little surprised to see an alternative approach that does just that.
&lt;/p&gt;
&lt;p&gt;
Finally, I am the lead developer of a set of commercial plugins which has been using a ported namespaced clone of this library for some months now, and not only we found it valuable and usefull but it proved itself as a reliable extension of the plugins API that made WordPress so easy to use for developers.
&lt;/p&gt;
&lt;p&gt;
I personally would like to reserve my opinion about Gutenberg since neither this is the ticket to discuss it, nor it is the measure of all WordPress things happening now. Hope everybody could understand that too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41882 (Walker_CategoryDropdown does not wrap options inside HTML select ...) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 14 Sep 2017 15:25:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41882#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41882#comment:1/1505402732692429</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 14 Sep 2017 15:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:9/1505401873241960</guid>
      <description>&lt;p&gt;
Trying to keep the Help text as an unordered list and at the same time using this text as target for &lt;code&gt;aria-describedby&lt;/code&gt; is not so easy because the text is composed by separate strings (and elements):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/8rHGjEmEfK.png"&gt;&lt;img src="https://cldup.com/8rHGjEmEfK.png" alt="https://cldup.com/8rHGjEmEfK.png" crossorigin="anonymous" title="https://cldup.com/8rHGjEmEfK.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are basically two options:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wrap the whole Help text within a container with an ID and target the wrapper using &lt;code&gt;aria-describedby="wrapper-ID"&lt;/code&gt;: this doesn't work consistently across various browsers/screen readers combinations, see test results below
&lt;/li&gt;&lt;li&gt;&lt;code&gt;aria-describedby&lt;/code&gt; accepts multiple IDs so can target multiple elements; this would require to use a unique ID on each element of the Help text and target them this way: &lt;code&gt;aria-describedby="element-1 element-2 element-3 element-4"&lt;/code&gt;; this works with all combos I've tested with, but it's not so clean in terms of code, especially for the JavaScript part
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
However, there's one more important concern: translations. Ideally, messages that are meaningful as a whole, shouldn't be split in separate strings. Splitting a string, increases the chances the whole message will be translated inconsistently and should be avoided. Feedback from the polyglots team would be very appreciated.
&lt;/p&gt;
&lt;p&gt;
Test results: for the ones who want to have some fun testing with screen readers, I've prepared 3 codepens:
&lt;/p&gt;
&lt;p&gt;
Test aria-describedby targeting parent element with multiple children
&lt;a class="ext-link" href="https://codepen.io/afercia/full/XeJxwB"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codepen.io/afercia/full/XeJxwB&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Test aria-describedby targeting parent element (hidden with display none) with multiple children
&lt;a class="ext-link" href="https://codepen.io/afercia/full/YrPdmj/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codepen.io/afercia/full/YrPdmj/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Test aria-describedby targeting multiple elements
&lt;a class="ext-link" href="https://codepen.io/afercia/full/BwyGNp"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codepen.io/afercia/full/BwyGNp&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Safari + VoiceOver have a very weird behavior, where also the visibility of the help text plays a role. When targeting the wrapper, the whole text gets announced only if it's hidden with &lt;code&gt;display: none&lt;/code&gt;. Instead, when it's visible, only the first sentence gets read out. For clarity, I've made a short video:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://cloudup.com/cCcpmOxRjqi"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cCcpmOxRjqi&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Conclusion: I'd recommend to keep it simple and use just a single element (a paragraph). Worth also noting the Help text should be the same in 4 different places, and when used in the admin pages Help tabs, a list might not look so nice: depending on the screen width and translations, there's the chance the text will wrap producing a few "widows", for example:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/ncnV-TE9hp.png"&gt;&lt;img src="https://cldup.com/ncnV-TE9hp.png" alt="https://cldup.com/ncnV-TE9hp.png" crossorigin="anonymous" title="https://cldup.com/ncnV-TE9hp.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41881 (Able to get simple test to work as an independent html, but on the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 14 Sep 2017 15:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41881#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41881#comment:2/1505401642011005</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41882.diff attached to Ticket #41882</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 14 Sep 2017 15:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41882/41882.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41882/41882.diff/1505401530150601</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>maguiar</dc:creator>

      <pubDate>Thu, 14 Sep 2017 14:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:166</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:166/1505401185792173</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Choosing what we use in core today based on the needs of Gutenberg is a mistake. The decorators, slot &amp;amp; fill patterns, and middlewares being explored there are React/Redux based approaches that are unlikely to be helpful for extending legacy JavaScript.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree so much with this, besides, is that the path we are taking? If it doesn't work with Gutenberg it just doesn't work anymore?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41882 (Walker_CategoryDropdown does not wrap options inside HTML select ...) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Thu, 14 Sep 2017 14:57:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41882</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41882/1505401069886213</guid>
      <description>&lt;p&gt;
If I use &lt;code&gt;Walker_CategoryDropdown()&lt;/code&gt; class to build a dropdown list with &lt;code&gt;wp_list_categories&lt;/code&gt; function, the output does not get wrapped inside &lt;code&gt;&amp;lt;select&amp;gt;...&amp;lt;/select&amp;gt;&lt;/code&gt; element. The rendered output is like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;option class="level-0" value="16"&amp;gt;Comedy&amp;lt;/option&amp;gt;
&amp;lt;option class="level-0" value="17"&amp;gt;Sci-Fi&amp;lt;/option&amp;gt;
&lt;/pre&gt;&lt;p&gt;
when it should be like
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;select&amp;gt;
   &amp;lt;option class="level-0" value="16"&amp;gt;Comedy&amp;lt;/option&amp;gt;
   &amp;lt;option class="level-0" value="17"&amp;gt;Sci-Fi&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/pre&gt;&lt;p&gt;
In order to achieve this we can add an additional parameter &lt;code&gt;html_wrapper_element&lt;/code&gt; in &lt;code&gt;wp_list_categories&lt;/code&gt; function and pass a value &lt;code&gt;dorpdown&lt;/code&gt; in the argument like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;
&lt;span class="cm"&gt;/* Template Name: Movie List */&lt;/span&gt;
&lt;span class="k"&gt;require_once&lt;/span&gt; &lt;span class="nx"&gt;ABSPATH&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'wp-admin/includes/template.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'taxonomy'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'movies_taxonomy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'walker'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Walker_CategoryDropdown&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="s1"&gt;'hide_empty'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'html_wrapper_element'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'dropdown'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_list_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and in &lt;code&gt;wp_list_categories&lt;/code&gt; we add this before the $html gets returned from the function.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_list_categories'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'html_wrapper_element'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'html_wrapper_element'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'dropdown'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;select&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;/select&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'echo'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Thu, 14 Sep 2017 14:54:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:165</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:165/1505400844699455</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here are some tangible examples of &lt;code&gt;wp.hooks&lt;/code&gt; already being used in a popular plugins:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was following this ticket because in the past I made something like that for a my plugin premium never released and abandoned so is not public. I was using a custom system made by me to enable to create other plugins that can improve the javascript that my plugin was implementing.
If it is available in the core something like that I don't know if my plugin would be published but I know that probably I should lost time to doing something else.
&lt;/p&gt;
&lt;p&gt;
I tweeted to and share on the net about this new implementation because save times, is a standard and is available and important will be used from the many integration in browser.
Actually for me doesn't matter if something is done with backbone or react (I don't like react personally for the license issue as example) but I know that I would need probably this API in the future and as developer I want that stuff and not wait or say hello to an amazing integration.
&lt;/p&gt;
&lt;p&gt;
When I have to talk to my customers I cannot say the implementation will be in 2 year, they want the stuff right now, and I have to do it on my own. So like with the rest API released piece by piece inside WordPress I think that is possible also for this one as already explained.
&lt;/p&gt;
&lt;p&gt;
Of course if it will be used inside the core or make available to developers inside the core will be so very cool :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41881 (Able to get simple test to work as an independent html, but on the ...) closed</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Thu, 14 Sep 2017 14:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41881#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41881#comment:1/1505400823856938</guid>
      <description>invalid: &lt;p&gt;
Hi @stephenshalomisraelorg,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac! This is the place to work on development of the core WordPress code. For help troubleshooting custom code, you should use the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Support Forums&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
You also should not publicly post login credentials to your site, even if it's a test site. Login credentials should only be shared with other people you trust. I recommend that you deactivate those credentials immediately.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Thu, 14 Sep 2017 14:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:164</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:164/1505400575756612</guid>
      <description>&lt;p&gt;
I have been following this ticket for years. I got excited when it was finally merged it, I even tweeted about it. But when I woke up the next day it was reverted and I was very sad. I felt like a kid who’s birthday gift got snatched before they could use it.
&lt;/p&gt;
&lt;p&gt;
I am just an ordinary developer who works on mostly plugins and this would be extremely valuable for me personally. All these years there have been numerous occasions when I could have made use of it, if it was available in core.
&lt;/p&gt;
&lt;p&gt;
The event based approached (actions &amp;amp; filters) in PHP has worked really well for WordPress and most developers who work in WordPress understand it. If it is extended to JavaScript it would benefit lot of (ordinary) developers like me. If I remember correctly WordPress has always preferred to keep the barrier to entry low and make it easy for developers to understand the code instead of just chasing the latest and greatest. (We still haven't used namespaces in PHP)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, what exactly about wp.hooks is "legacy"? Just the fact that it's been around a while? The notion that "there may be a better approach in the future" is NOT a good reason to keep kicking the can, especially since (A) there's no specifics about an alternative, and (B) there's been a need for this utility for years.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Choosing what we use in core today based on the needs of Gutenberg is a mistake. The decorators, slot &amp;amp; fill patterns, and middlewares being explored there are React/Redux based approaches that are unlikely to be helpful for extending legacy JavaScript.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Denying developers an easy to use and simple to understand library that they could use today (could have used all these years if it was merged) on the basis that something that _might_ get merged in the future (who knows how long it is going to take) may not need it is a very bad mistake, especially when it is not mutually exclusive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>mgibbs189</dc:creator>

      <pubDate>Thu, 14 Sep 2017 14:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:163</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:163/1505398307551251</guid>
      <description>&lt;p&gt;
This revert is unsettling on so many levels.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
5 years ago, I think this would've been a great addition to the state of Javascript in WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The patch was polished and merge-ready for &lt;strong&gt;3.7&lt;/strong&gt;... as in 2013. Lots of great contributors like @adamsilverstein @mikeschinkel and @carldanley poured their expertise into this. &lt;code&gt;wp.hooks&lt;/code&gt; is just as relevant today as it was 5 years ago.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm more concerned with having building blocks for the future that feel native, rather than potentially forced to fit in.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp.hooks&lt;/code&gt; is just a helper library (like lodash) -- only w/ methods to prioritize JS execution. The simple inclusion of this library will NOT interfere with whatever framework WP chooses.
&lt;/p&gt;
&lt;p&gt;
Also, what exactly about &lt;code&gt;wp.hooks&lt;/code&gt; is "legacy"? Just the fact that it's been around a while? The notion that "there &lt;em&gt;may&lt;/em&gt; be a better approach in the future" is NOT a good reason to keep kicking the can, especially since (A) there's no specifics about an alternative, and (B) there's been a need for this utility for years.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Using this approach on our current JS in no way precludes using a different approach in the future
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) updated</title>
      
        <dc:creator>johnpgreen</dc:creator>

      <pubDate>Thu, 14 Sep 2017 13:37:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879#comment:3/1505396275660003</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41804 (Combine and Relocate Editor Menu Link) updated</title>
      
        <dc:creator>cliffseal</dc:creator>

      <pubDate>Thu, 14 Sep 2017 13:21:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41804#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41804#comment:2/1505395275219248</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41804#comment:1" title="Comment 1"&gt;khoipro&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I just attached what you thought it should be. A little bit confuse about the name, should it be &lt;code&gt;Theme Editor&lt;/code&gt; and &lt;code&gt;Plugin Editor&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It would stay labeled "Editor". Thanks for the mockup!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>carousel_edit_url_for_newspro_201709141457.zip attached to Ticket #41881</title>
      
        <dc:creator>stephenshalomisraelorg</dc:creator>

      <pubDate>Thu, 14 Sep 2017 13:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41881/carousel_edit_url_for_newspro_201709141457.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41881/carousel_edit_url_for_newspro_201709141457.zip/1505395262802587</guid>
      <description>&lt;p&gt;
Plugin Zip that I used to import the widget into a golden installation of 4.8.1 wordpress
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41881 (Able to get simple test to work as an independent html, but on the ...) created</title>
      
        <dc:creator>stephenshalomisraelorg</dc:creator>

      <pubDate>Thu, 14 Sep 2017 13:19:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41881</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41881/1505395169270372</guid>
      <description>&lt;p&gt;
I am developing a WordPress plugin, but I am having difficulties with the drop-down.  A sample drop-down updates fine, but within the Word-Press framework, in the back-end widget form, it is not working.  The relevant information is below in terms of configuration.  I have a "golden" test platform available to anyone troubleshooting the issue to see it on the back-end at &lt;a class="ext-link" href="http://codesupport.shalomisrael.org/wp-login.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codesupport.shalomisrael.org/wp-login.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you for your attention to this issue.
&lt;/p&gt;
&lt;p&gt;
Reference:
&lt;/p&gt;
&lt;p&gt;
Firefox 55.0.3
Wordpress 4.8.1
&lt;a class="ext-link" href="http://codesupport.shalomisrael.org/simpletest.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codesupport.shalomisrael.org/simpletest.html&lt;/a&gt;
&lt;a class="ext-link" href="http://codesupport.shalomisrael.org/wp-login.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codesupport.shalomisrael.org/wp-login.php&lt;/a&gt;
user name: [redacted]
password:  [redacted]
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_onchange"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_onchange&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 12:56:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:162</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:162/1505393817440206</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We do need some more tangible examples to define and implement any solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@matveb @azaozz @pento @dd32
&lt;/p&gt;
&lt;p&gt;
Here are some tangible examples of &lt;code&gt;wp.hooks&lt;/code&gt; already being used in a popular plugins:
&lt;/p&gt;
&lt;p&gt;
wp.hooks is &lt;a class="ext-link" href="https://github.com/wp-shortcake/shortcake/wiki/Event-Attribute-Callbacks"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;included in Shortcake&lt;/a&gt;. This plugin has over 20k active installs and is actively used on very high traffic enterprise level sites.
&lt;/p&gt;
&lt;p&gt;
wp.hooks is used in &lt;a class="ext-link" href="https://www.advancedcustomfields.com/resources/adding-custom-javascript-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Advanced Custom Fields&lt;/a&gt;. This plugin has over 1 million active installs.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Primarily, it's mostly unused in real situations
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
False. It is actually used in production on large sites in real situations.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd want to see something using a modern library (Be that React, Vue, Angular, Whatever) using this pattern before we add it as-is to WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why? we don't make use of any 'modern library' in core today and this approach may not be applicable to modern JS anyway. &lt;strong&gt;Using this approach on our current JS in no way precludes using a different approach in the future&lt;/strong&gt; which is I think the core of our disagreement here.  Why do you assume using &lt;code&gt;wp.hooks&lt;/code&gt; for legacy extensibility means we are locked into using it for Gutenberg?
&lt;/p&gt;
&lt;p&gt;
Choosing what we use in core today based on the needs of Gutenberg is a mistake. The decorators, slot &amp;amp; fill patterns, and middlewares being explored there are React/Redux based approaches that are unlikely to be helpful for extending legacy JavaScript.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41217 (WP_Community_Events Disable Event Logs) updated</title>
      
        <dc:creator>charlestonsw</dc:creator>

      <pubDate>Thu, 14 Sep 2017 12:35:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41217#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41217#comment:14/1505392536840794</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
if ( ! WP_COMMUNITY_EVENTS_LOG ) {
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it'd need to be &lt;code&gt;if ( ! defined( 'WP_COMMUNITY_EVENTS_LOG' ) || ! WP_COMMUNITY_EVENTS_LOG )&lt;/code&gt;, since PHP  evaluates undefined constants as a string with the name as the value (i.e., &lt;code&gt;'WP_COMMUNITY_EVENTS_LOG'&lt;/code&gt;), which then evaluates to &lt;code&gt;true&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, that is true... I was giving a short non-functional concept.   :)
&lt;/p&gt;
&lt;p&gt;
Glad to see the removal of the excess logging and/or filter overhead is likely to get baked into core soon.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 12:31:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:161</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:161/1505392318460362</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would not be surprised if all of the Backbone apps you listed were not rewritten (or being rewritten) using a react-like library within the next 3 years
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Including the Customizer? So should we stop working on improving these JavaScript components?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 14 Sep 2017 12:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:9/1505391472564871</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41629#comment:8" title="Comment 8"&gt;philmcdonnell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What would be the case if the user didn't enter anything and just submitted the form? The &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; that is there is just a placeholder so it would not save I assume?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The behavior should work just like it currently does if the form is submitted while custom URL is selected and the URL field is left blank. The image is inserted with no link at all.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 14 Sep 2017 10:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:31/1505385748166734</guid>
      <description>&lt;p&gt;
Thanks for the links @zodiac1978
&lt;/p&gt;
&lt;p&gt;
I just checked out the &lt;em&gt;RS System Diagnostic&lt;/em&gt; plugin, it has some interesting info and features.
&lt;/p&gt;
&lt;p&gt;
It showed additonally e.g.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Permalink Structure
&lt;/li&gt;&lt;li&gt;Browser info for the current viewer
&lt;/li&gt;&lt;li&gt;Both "WP Memory Limit" and "WP Admin Memory Limit"
&lt;/li&gt;&lt;li&gt;Loaded PHP Extensions
&lt;/li&gt;&lt;li&gt;PHP Allow URL File Open
&lt;/li&gt;&lt;li&gt;PHP Allow URL File Incl
&lt;/li&gt;&lt;li&gt;... more
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I also checked out the &lt;em&gt;BSI System Info&lt;/em&gt; plugins, it showed additionally e.g.:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Default Timezone
&lt;/li&gt;&lt;li&gt;Operating System
&lt;/li&gt;&lt;li&gt; ... more
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Regarding extending the &lt;em&gt;System Information&lt;/em&gt; page:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should there be extra hooks for those who want to extend it, with features like download CSV button or send by email (like offered in the RS System Diagnostic plugin ). Currently it's not possible to add HTML, like a download button, in a section via the &lt;code&gt;debug_information&lt;/code&gt; filter. If we allow extra HTML sections to be added after the info, e.g. via some action, then wouldn't it be nice to have that extra section in the ToC too?
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Should there be a &lt;em&gt;private&lt;/em&gt; section, like &lt;em&gt;private&lt;/em&gt; field?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41880 (Improve comment in functions description for class http file) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Thu, 14 Sep 2017 10:20:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41880#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41880#comment:2/1505384454873568</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41880 (Improve comment in functions description for class http file) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Thu, 14 Sep 2017 10:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41880#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41880#comment:1/1505384450583506</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41880.patch attached to Ticket #41880</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Thu, 14 Sep 2017 10:18:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41880/41880.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41880/41880.patch/1505384322460297</guid>
      <description>&lt;p&gt;
Improve functions descriptions.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41880 (Improve comment in functions description for class http file) created</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Thu, 14 Sep 2017 10:17:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41880</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41880/1505384259262165</guid>
      <description>&lt;p&gt;
add static keyword and improve comment in functions descriptions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Thu, 14 Sep 2017 08:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879#comment:2/1505379404705413</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 14 Sep 2017 08:17:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:61/1505377021265162</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505377019000114"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39896 (Customizer: Allow users to Draft changes before Publishing) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 08:15:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39896#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39896#comment:60/1505376937065140</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Initial progress on implementing autosave revision support in the Customizer: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/256"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/256&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Screenshot of notice warning added can be seen in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39896/autosave-notice.png" title="Attachment 'autosave-notice.png' in Ticket #39896"&gt;autosave-notice.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39896/autosave-notice.png" title="Download"&gt;​&lt;/a&gt;. I just copied verbatim the string that gets shown on the edit post screen.
&lt;/p&gt;
&lt;p&gt;
Most of the remaining work is on the PHP side of things in the pull request:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Querying for a user's recent auto-draft changesets if they don't have an existing one loaded.
&lt;/li&gt;&lt;li&gt;When the Customizer loads with a blank changeset UUID, grab the most recent &lt;code&gt;draft&lt;/code&gt; or &lt;code&gt;future&lt;/code&gt; changeset, and if one exists, use its UUID instead of generating a new one. This behavior would need to be able to be disabled to allow Customize Snapshots to be able to have multiple changesets living concurrently.
&lt;/li&gt;&lt;li&gt;Update admin-ajax endpoint to support the &lt;code&gt;autosave_revision&lt;/code&gt; param.
&lt;/li&gt;&lt;li&gt;Delete the auto-draft changeset or a loaded changeset's autosave revision when dismissing the above notice.
&lt;/li&gt;&lt;li&gt;Load changeset data from autosave revision when &lt;code&gt;autosaved&lt;/code&gt; param is provided.
&lt;/li&gt;&lt;li&gt;Delete an autosave revision when saving a changeset fully (as a draft, future, or publish).
&lt;/li&gt;&lt;li&gt;And more I'm sure…
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For more notes on implementation, see first half of conversation in thread at: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1504725296000135"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C0381N237/p1504725296000135&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>autosave-notice.png attached to Ticket #39896</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 08:02:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39896/autosave-notice.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39896/autosave-notice.png/1505376142071552</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #41868,​41869 batch updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Thu, 14 Sep 2017 07:39:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=41868%2C41869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=41868%2C41869/1505374788425489</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41868" title="#41868: defect (bug): Documentations was not proper. (closed: duplicate)"&gt;#41868&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41804 (Combine and Relocate Editor Menu Link) updated</title>
      
        <dc:creator>khoipro</dc:creator>

      <pubDate>Thu, 14 Sep 2017 07:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41804#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41804#comment:1/1505374584994491</guid>
      <description>&lt;p&gt;
I just attached what you thought it should be. A little bit confuse about the name, should it be &lt;code&gt;Theme Editor&lt;/code&gt; and &lt;code&gt;Plugin Editor&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/EiIUsiH.png"&gt;&lt;img src="https://i.imgur.com/EiIUsiH.png" alt="https://i.imgur.com/EiIUsiH.png" crossorigin="anonymous" title="https://i.imgur.com/EiIUsiH.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18408 (Can't wp_reset_postdata after custom WP_Query in an admin edit page) updated</title>
      
        <dc:creator>lagdonkey</dc:creator>

      <pubDate>Thu, 14 Sep 2017 07:27:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18408#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18408#comment:27/1505374073416265</guid>
      <description>&lt;p&gt;
Can confirm that in Wp 4.8.1, this issue is still present. What caused me to notice, was the fact that on save, the currently edited post/page's slug was changing to match the slug of the last post in the Wp_query I was running in the post editor. My meta box was hooked into low priority in the sidebar section of the editor.
&lt;/p&gt;
&lt;p&gt;
What's particularly strange is, if you do something like
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;get_the_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Then you get the desired/expected result.
&lt;/p&gt;
&lt;p&gt;
This solution saved my bacon, but the issue itself cost me about an hour of debugging, trying to find the culprit. Issue occurred on my local Apache hosted dev environment with no plugins and only a custom theme I was working on. If it at all helps, I've also noticed issues in other areas of wp's backend when dealing with custom wp_query's, most noticably in other plugins like Advanced custom fields.
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18408#comment:26" title="Comment 26"&gt;nitesh.luharuka&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This works perfectly. The problem persists with 4.7.4 as well.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/18408#comment:25" title="Comment 25"&gt;jpSimkins&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To bypass this issue, do not use &lt;code&gt;the_post&lt;/code&gt; as this is the issue.
&lt;/p&gt;
&lt;p&gt;
I use this syntax and I have numerous metaboxes with no issue to the default post object nor the need to call &lt;code&gt;wp_reset_postdata();&lt;/code&gt;.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;\WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;have_posts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_posts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nv"&gt;$p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// nomal loop logic using $p as a normal WP_Post object
&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
It needs to be noted that you cannot use the loop methods like &lt;code&gt;get_the_title()&lt;/code&gt; but you can easily call &lt;code&gt;$p-&amp;gt;post_title&lt;/code&gt;. I do not believe the filters are applied to these so you may need to use a different object for the backend than the frontend since the issue is only on the backend of WP.
&lt;/p&gt;
&lt;p&gt;
Also, you could just use the same args with &lt;code&gt;get_posts();&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) updated</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Thu, 14 Sep 2017 06:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868#comment:3/1505371335100593</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>philmcdonnell</dc:creator>

      <pubDate>Thu, 14 Sep 2017 06:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:8/1505369742451879</guid>
      <description>&lt;p&gt;
What would be the case if the user didn't enter anything and just submitted the form? The &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; that is there is just a placeholder so it would not save I assume?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41828 (Customizer: Rename "Static Front Page" to "Homepage Settings") updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 14 Sep 2017 05:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41828#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41828#comment:19/1505365566530947</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41828#comment:18" title="Comment 18"&gt;greenshady&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't have an updated copy of The AP Stylebook on hand. I'm guessing it'd push for "home page."  However, the stylebook tends to change with usage and never sets anything in stone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nor do I, AP use &lt;code&gt;home page&lt;/code&gt; in two tweets from 2012 &amp;amp; 2015 &lt;a class="ext-link" href="https://twitter.com/search?f=tweets&amp;amp;q=home%20page%20from%3AAPStylebook&amp;amp;src=typd"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; (they've never tweeted &lt;code&gt;homepage&lt;/code&gt;)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If I were editing for a tech magazine, I'd allow for "homepage."  For a general newspaper, I'd go with "home page."
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From this year &lt;a class="ext-link" href="https://english.stackexchange.com/a/112057"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://english.stackexchange.com/a/112057&lt;/a&gt; cites some references to other style guides usage
&lt;/p&gt;
&lt;p&gt;
tl;dr Tech focused companies prefer &lt;code&gt;homepage&lt;/code&gt; over &lt;code&gt;home page&lt;/code&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
FWIW, it wouldn't hurt for core WP to adopt a particular stylebook or create its own.  It'd help with these types of discussions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is what &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/spelling/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/best-practices/spelling/&lt;/a&gt; is about, not a style guide in its own right, but the best we've got right now ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41842 (pingback() doesn't return anything) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 14 Sep 2017 04:12:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41842#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41842#comment:5/1505362332859485</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a good simple fix, but this is problematic because it doesn't really validate whether it worked per se, it measures whether or not the post ID exists. It doesn't measure whether the pingbacks themselves succeed.
&lt;/p&gt;
&lt;p&gt;
So the question is...what is success and failure in this case?
&lt;/p&gt;
&lt;p&gt;
What I would suggest is splitting sending a single pingback into its own function, for example, 'ping' with the arguments $pagelinkedfrom, $pagelinkedto which will return success of failure for a single ping.
&lt;/p&gt;
&lt;p&gt;
The problem is then...if a URL has multiple links in it, and it tries to ping all of them, what constitutes failure? Do they all have to be true? Sometimes, some of them don't have pingback support? Is that a success or a failure?
&lt;/p&gt;
&lt;p&gt;
It may be better to return a WP_Error object that can attach additional data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36824 (do_all_pings function queries all posts) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Thu, 14 Sep 2017 03:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36824#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36824#comment:33/1505361309266953</guid>
      <description>&lt;p&gt;
@mrmadhat The changes I made have that done by the function itself, which is why it switched to null. That means that it pulls the IDs one by one, but then pulls the content subsequently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 02:36:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:160</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:160/1505356602589598</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Thu, 14 Sep 2017 02:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:159</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:159/1505356501497578</guid>
      <description>&lt;p&gt;
Ok @azaozz, thanks for weighing in although this is a big change since you told me I should commit this code a few days ago.
&lt;/p&gt;
&lt;p&gt;
I regret having invested so much time and effort over the last two years working to bring this to core, and wish these concerns and "blockers" had been raised much, much earlier and not at the last minute.
&lt;/p&gt;
&lt;p&gt;
We should be collaborating as a team on these efforts, not arguing the merits of a library after a commit with demands for a revert.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>filter-example.jpg attached to Ticket #39165</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 14 Sep 2017 02:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/filter-example.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/filter-example.jpg/1505356488260352</guid>
      <description>&lt;p&gt;
Filter example - Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Thu, 14 Sep 2017 02:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:30/1505356383792439</guid>
      <description>&lt;p&gt;
@Clorith thanks for the detailed feedback. Here are some minor adjustments:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I get extra indentation for the first section (because the PHP tags are not like &lt;code&gt;&amp;lt;textarea&amp;gt;&amp;lt;?php&lt;/code&gt; and &lt;code&gt;?&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/code&gt;). Maybe this was the intention for the first section?:
&lt;pre class="wiki"&gt;`
		### WordPress ###
Version: 4.9-alpha-41375
Language: en_US
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;The string &lt;code&gt;'version %1$s by %2$s'&lt;/code&gt; is not translatable for &lt;code&gt;wp-themes&lt;/code&gt;, because of missing &lt;code&gt;__()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;We might want to wrap &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags around &lt;code&gt;&amp;lt;?php esc_html_e( 'Some information may be filtered ...&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;In &lt;code&gt;"### %s%S ###\n\n"&lt;/code&gt; I noticed the capital &lt;code&gt;%S&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Sometimes &lt;code&gt;AS&lt;/code&gt; and sometimes &lt;code&gt;as&lt;/code&gt; in &lt;code&gt;foreach&lt;/code&gt; loops.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Some other ideas:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Replace &lt;code&gt;&amp;lt;a href="#system-information-table-of-contents"&amp;gt;...&lt;/code&gt; with &lt;code&gt;&amp;lt;a href="#"&amp;gt;...&lt;/code&gt; to go to the top of the document?
&lt;/li&gt;&lt;li&gt;Find a way to have the headings in view (hidden under the wp-admin-bar) when using named anchors
&lt;/li&gt;&lt;li&gt;Float the "Return to table of contents" links to the right (or left for rtl)
&lt;/li&gt;&lt;li&gt;Copy to clipboard without displaying the textarea? (might invovle cross-browser implementation issues?)
&lt;/li&gt;&lt;li&gt;Maybe the string can be simplified to "Private information has been filtered out from the list you are about to copy." ?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Then there's the accessibility to consider (like screen-reader-text etc)
I played with the new filter:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$external_info = apply_filters( 'debug_information', array() );
// Merge the core and external debug fields
$info = array_merge( $external_info, $info );
&lt;/pre&gt;&lt;p&gt;
with this demo:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'debug_information', 'warp_drive_debug_information' );
function warp_drive_debug_information ( $info ) {
	$info['warp-drive-info'] = array(
		'label'  	=&amp;gt; __( 'Warp Drive', 'startrek' ),
		'description' 	=&amp;gt; __( 'Data from the Enterprise Engine Room', 'startrek' ),
        	'show_count' 	=&amp;gt; true,
		'fields' 	=&amp;gt; array(
			array(
                		'label' =&amp;gt; __( 'Core status', 'startrek' ),
                		'value' =&amp;gt; __( 'Stable', 'startrek' )
            		),
		        array(
        		        'label' =&amp;gt; __( 'Warp factor', 'startrek' ),
                		'value' =&amp;gt; rand( 1, 10 )
            		),
		)
	);
	return $info;
}
&lt;/pre&gt;&lt;p&gt;
and we can see in the screenshot here below how it's added on top of the core info.
&lt;/p&gt;
&lt;p&gt;
Maybe some plugins will adjust the priority to stay on top?
&lt;/p&gt;
&lt;p&gt;
I wonder if the external info should be added after the core info?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 14 Sep 2017 02:29:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:158</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:158/1505356184996223</guid>
      <description>&lt;p&gt;
I tend to agree with @dd32. @matveb puts it quite nicely:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We do need some more tangible examples to define and implement any solution.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Think it will be good to "proof-test" this in Gutenberg and change/replace it if it doesn't meet the expectations or doesn't fulfill its purpose.
&lt;/p&gt;
&lt;p&gt;
I mean it works quite nicely with the current JS in core, but if it is going to be unusable in the "future JS", better to either make it work there or change to something that will work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 00:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879#comment:1/1505349693636233</guid>
      <description>&lt;p&gt;
@melchoyce I think this is a duplicate of what I opened here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41850" title="#41850: defect (bug): Customize: Prevent panel sticky headers when scrolling if description ... (closed: fixed)"&gt;#41850&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 14 Sep 2017 00:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:157/1505349362179912</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
How would you propose we work on making our existing JavaScript more extendable in core?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Honestly, I can't answer that right now. However a lot of the code in question has been operating in it's current state for quite some time, another few {insert time length here} isn't going to do a huge amount of harm in the long run. Many have some form of extensibility worked in through unexpected and sometimes convoluted methods that others have already been using.
&lt;/p&gt;
&lt;p&gt;
I'm more concerned with having building blocks for the future that feel native, rather than potentially forced to fit in. In other words, I'd rather attempt to retroactively apply whatever the ultimate solution here to legacy code, than for future code to build upon something that was designed for a different era of Javascript. If that means that some legacy code remains non-accessible/extendable even longer, I'm not too worried about that.
&lt;/p&gt;
&lt;p&gt;
Whether we like it or not, a lot of the existing Backbone-based interfaces are likely to change in the future as design/feel/JS code/etc is integrated into a cohesive platform that works the same, no matter which page you're looking at.
Once upon a time it looked like all of WordPress would be built upon Backbone, today, finding someone who would choose Backbone over anything else is near impossible. I would not be surprised if all of the Backbone apps you listed were not rewritten (or being rewritten) using a react-like library within the next 3 years (to throw some form of timeline out there, that I'm fairly confident of).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 14 Sep 2017 00:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:62/1505348474684466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31779#comment:55" title="Comment 55"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we want to present additional warnings, we can frame them as "tips." See &lt;a class="missing attachment"&gt;- CSS Warning.png&lt;/a&gt; for an example. These tips will be dismissible notifications that only appear once. Once you dismiss them, they're gone.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think that this should be dismissible. Or rather, instead of a warning it could be just a notice. When editing &lt;code&gt;style.css&lt;/code&gt; in the theme editor, I think there should be a persistent link to open the Additional CSS section in Customizer, as noted in a Better Code Editing &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/17"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;issue&lt;/a&gt;. This is similar to how there a persistent admin notice if you go to the legacy custom header admin screen:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://user-images.githubusercontent.com/134745/28848417-b5c9de48-76c7-11e7-85b2-53bbda7b1e7e.png"&gt;&lt;img src="https://user-images.githubusercontent.com/134745/28848417-b5c9de48-76c7-11e7-85b2-53bbda7b1e7e.png" alt="https://user-images.githubusercontent.com/134745/28848417-b5c9de48-76c7-11e7-85b2-53bbda7b1e7e.png" crossorigin="anonymous" title="https://user-images.githubusercontent.com/134745/28848417-b5c9de48-76c7-11e7-85b2-53bbda7b1e7e.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Or it could be similar to how there is a “Edit with Live Preview” button on the widgets admin screen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:51:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:156/1505346675602066</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We have been experimenting with decorators, exploring slot &amp;amp; fill patterns, and dabbled with middlewares. There are some great points in these to build from. We do need some more tangible examples to define and implement any solution. Gutenberg gives us a good place to try them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@matveb do you feel that decorators, slot and fill patterns or middleware would be applicable to extending our existing core JavaScript, especially our single page Backbone Apps?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd want to see something using a modern library (Be that React, Vue, Angular, Whatever) using this pattern before we add it as-is to WordPress, if it proves to be useful in that context then I'd be all for this, but only after a reasonably complex application had tried it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@dd32 I'm happy to see Gutenberg &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/2474#issuecomment-327875802"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;exploring wp.hooks as a possible api for adding extensibility&lt;/a&gt;. At the same time, I am trying to forward the ongoing effort  to make our existing JavaScript more accessible and extendable - especially our single page apps - the media modal, the media grid, the new theme browser, the installed theme browser, the customizer, the editor and the revisions screen (i may have missed some). &lt;code&gt;wp.hooks&lt;/code&gt; seems like a great fit make these components more extendable, 'modern' JavaScript approaches may not be as good a fit.  How would you propose we work on making our existing JavaScript more extendable in core? Wait until the Gutenberg project decides how to approach extendability, then see if we can retroactively apply that approach to our legacy JavaScript?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41852 (Fix UN flag test by returning the correct value.) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41852#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41852#comment:3/1505346240382927</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41852#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not really following. Could you provide some steps to replicate the issue and why it doesn't apply to the England flag?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The tests are considered to fail (return false) if both flags look the same.
&lt;/p&gt;
&lt;p&gt;
The UN test is effectively returning &lt;code&gt;flag === flag2&lt;/code&gt;, ie true if identical.
&lt;/p&gt;
&lt;p&gt;
The English flag returns &lt;code&gt;flag !== flag2&lt;/code&gt;, ie false if identical.
&lt;/p&gt;
&lt;p&gt;
The way the tests are written means the affect is minimal as users are more likely to get a false negative than a false positive.
&lt;/p&gt;
&lt;p&gt;
I've put together a reduced test case at &lt;a class="ext-link" href="https://jsbin.com/palagay/2/edit?js,output"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jsbin.com/palagay/2/edit?js,output&lt;/a&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Visit the &lt;a class="ext-link" href="https://jsbin.com/palagay/2/edit?js,output"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;test case&lt;/a&gt; to see if your browser supports the UN flag (Chrome 61/MacOS Sierra will not)
&lt;/li&gt;&lt;li&gt;The outcome will display the images.
&lt;/li&gt;&lt;li&gt;To test in core, change the UN flag test to end:
&lt;/li&gt;&lt;/ol&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;flag2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'fail'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'pass'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41806 (Use get_network_by_path in get_admin_users_for_domain) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41806#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41806#comment:3/1505344330931532</guid>
      <description>&lt;p&gt;
@jeremyfelt The reason for the patch is simple, there are only 2 other places in core that run raw sql queries on  the sites table. I already for a patch for &lt;code&gt;ms_load_current_site_and_network&lt;/code&gt; (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41762" title="#41762: enhancement: Use WP_Network_Query in ms_load_current_site_and_network (closed: fixed)"&gt;#41762&lt;/a&gt;) and it is pointless change &lt;code&gt;network_domain_check&lt;/code&gt; as it only used installation process.
&lt;/p&gt;
&lt;p&gt;
For the sake of completely and the simply nature of this patch, I would make the change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41806.2.diff attached to Ticket #41806</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41806/41806.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41806/41806.2.diff/1505343685009887</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879/1505342000892749</guid>
      <description>&lt;p&gt;
When I was testing the Additional CSS panel in trunk, I noticed that clicking into the textarea moves my whole screen down, which I found surprising and kind of alarming. Then, when I try to scroll back up to read, it snaps back up instead of naturally scrolling, which felt even more alarming. We should not make any sort of scroll/movement assumptions here.
&lt;/p&gt;
&lt;p&gt;
Video: &lt;a class="ext-link" href="https://cloudup.com/cvJbKNaZ6yg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cvJbKNaZ6yg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41878 (No way to change the order of fields for taxonomy meta) created</title>
      
        <dc:creator>ralphonz</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41878/1505341646863010</guid>
      <description>&lt;p&gt;
There is currently no way to position any fields inserted with {$taxonomy}_add_form_fields or {$taxonomy}_edit_form_fields.  Any fields added always appear after the description field with no way to insert them anywhere else in the form.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40931 (Warning: Division by zero in ...) updated</title>
      
        <dc:creator>Abigailm</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40931#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40931#comment:7/1505341132499060</guid>
      <description>&lt;p&gt;
I saw no pattern and have seen this error on multiple sites. It seems to be something that was triggered by bots or spiders -- that is, when I have been able to trace the error in site logs, it often was triggered by a bot such as baidu.   It did seem to help to add this line to the robots.txt for the site:
&lt;/p&gt;
&lt;p&gt;
User-agent: *
Disallow: */embed/
&lt;/p&gt;
&lt;p&gt;
Though that was simply taking a step to discourage the triggering event, rather than actually addressing the underlying problem.
&lt;/p&gt;
&lt;p&gt;
And the reason that I was only seeing this with bots may simply reflect that my site content is not commonly embedded elsewhere, so real human users wouldn't ordinarily be viewing the embeds.
&lt;/p&gt;
&lt;p&gt;
But the better solution for me was simply to follow the recommendation of @aegis123 and put the modified/corrected embed-content.php file in my theme's directory.
&lt;/p&gt;
&lt;p&gt;
I actually am using this code on line 33:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ($data['height'] &amp;gt; 0) &amp;amp;&amp;amp; $data['width'] / $data['height'] &amp;gt; $aspect_ratio ) {
&lt;/pre&gt;&lt;p&gt;
(Since it is only the missing height value that causes the divide by 0 error, I didn't see a need to validate the width value.  If width is 0, but height is an integer, then width / height would simply produce a 0 value, which would always be &amp;lt; $aspect_ratio. But that's just my personal coding preference for simplicity - nothing wrong with checking both values.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:155/1505340791130293</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] as well as from members of the Gutenberg team [...] Are you working on a new approach to extensibility that will be applicable to core that we should be waiting for?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We have been experimenting with decorators, exploring slot &amp;amp; fill patterns, and dabbled with middlewares. There are some great points in these to build from. We do need some more tangible examples to define and implement any solution. Gutenberg gives us a good place to try them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41875 (Wordpress has some fundamental flaws in its structure) updated</title>
      
        <dc:creator>Soean</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41875#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41875#comment:2/1505339581259964</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:8/1505339224169778</guid>
      <description>&lt;p&gt;
Yeah, I was hesitant to address also the focus issue, because, ideally, that should work out of the box :( I've also quickly tried that and it triggers some weird behaviors:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;in Firefox, the page scrolls and the editor area first line goes under the WP toolbar
&lt;/li&gt;&lt;li&gt;in both Chrome and Firefox, if one line in the editor area was previously focused, clicking the label puts focus on that line because I guess CodeMirror remembers the previous insertion point; this behaviour is confusing when the focused line is outside of the visible editor area portion (which doesn't scroll)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
About the Help text, see also the &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1505329202000457"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;discussion on Slack&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37757 (Add `allowed_classes` to `maybe_unserialize` When WordPress is running ...) updated</title>
      
        <dc:creator>seuser</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37757#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37757#comment:9/1505338767039565</guid>
      <description>&lt;p&gt;
Nice, thanks for the info.
&lt;/p&gt;
&lt;p&gt;
Your arguments make sense to me - once a plugin is installed, regardless of whether it interacts with WP, it would need to be trusted as you say.
&lt;/p&gt;
&lt;p&gt;
A compromise could be to pass through the option name from the get_option function as a third argument to this. That could allow the developer to modify the unserialise options only for a specific option.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"option_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maybe_unserialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;maybe_unserialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...
&lt;/span&gt;        &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'unserialization_options'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$original&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// ...
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But in that case, in the pre filter in get_option could similarly be used to target a specific option, albeit with a bit more effort. For that reason, I'd be happy to leave as is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:7/1505338359138102</guid>
      <description>&lt;p&gt;
An additional change needed for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff" title="Attachment '41872.2.diff' in Ticket #41872"&gt;41872.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.2.diff" title="Download"&gt;​&lt;/a&gt;. When clicking on the label it should focus on the CodeMirror editor.
&lt;/p&gt;
&lt;p&gt;
In other words:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'click'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;codemirror&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:29/1505338298735820</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39165#comment:18" title="Comment 18"&gt;zodiac1978&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be useful to collect plugins which already do this? There are plenty of those in the plugin directory ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe this list is useful to find some more approaches on this topic:
&lt;a class="ext-link" href="https://wordpress.org/plugins/server-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/server-info/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/rs-system-diagnostic/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/rs-system-diagnostic/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/easy-debug-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/easy-debug-info/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/system-report-and-phpinfo/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/system-report-and-phpinfo/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/debug-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/debug-info/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/wp-system-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-system-info/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41877.patch attached to Ticket #41877</title>
      
        <dc:creator>viliamkopecky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41877/41877.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41877/41877.patch/1505338266095086</guid>
      <description>&lt;p&gt;
adding and using of $is_caddy global variable
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41877 (Caddy server support) created</title>
      
        <dc:creator>viliamkopecky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41877/1505338196049915</guid>
      <description>&lt;p&gt;
Caddy behaves mostly as nginx. But unknown &lt;code&gt;$_SERVER['SERVER_SOFTWARE']&lt;/code&gt; caused default permalinks options to include &lt;code&gt;index.php&lt;/code&gt;. This patch replicates global &lt;code&gt;$is_nginx&lt;/code&gt; variable to Caddy's context.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41852 (Fix UN flag test by returning the correct value.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41852#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41852#comment:2/1505338108704918</guid>
      <description>&lt;p&gt;
I'm not really following. Could you provide some steps to replicate the issue and why it doesn't apply to the England flag?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:28/1505338006494681</guid>
      <description>&lt;p&gt;
What would IPv6 support look like, the only thing I could think of here is if you are browsing the site over IPv6 your self?
&lt;/p&gt;
&lt;p&gt;
The other three points are very valid, adding those now.
&lt;/p&gt;
&lt;p&gt;
As for expiring links, that doesn't help over time, having the copy and paste field at the top is better here when users can put information right into their support topic or whatnot without the support giver being tied in to a time limit (if you post on the forums looking for help for example, there's no guarantee someone will click your link in the next X hours for it to remain valid).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:154/1505337502785796</guid>
      <description>&lt;p&gt;
I am going to jump out on the limb and cut it right off. One of the great things about WordPress is that it is not on the cutting edge.
&lt;/p&gt;
&lt;p&gt;
You can use the same old code year after year and it still works. Sure we add new features when we can but if the old way isn't blocking a feature why not keep it around?
&lt;/p&gt;
&lt;p&gt;
Hooks have served us well for years, and can keep working for another ten years. By then maybe we will have an all new WordPress that is 100% JS or some language that is even better. Then we can write a migration script to move everything to the new system. As long as the UI is similar to what writers are used to and gets as much attention to excellence as the current UI that will be fair play. But, I digress.
&lt;/p&gt;
&lt;p&gt;
For right now, this ticket is the best solution. Maybe a year from now we will come up with an idea we like better, but then we will spend five years getting it ready and this solution will have kept us going all that time.
&lt;/p&gt;
&lt;p&gt;
Maybe part of the api will need to change and ten plugins will need to refactor, but that is better than the current state where we are having to constantly work around stuff or fork a whole file just to get something to work.
&lt;/p&gt;
&lt;p&gt;
As a nearly perfect perfectionist, this is hard for me to say, but it is time to just ship this thing.
&lt;/p&gt;
&lt;p&gt;
"Give them the third best to go on with; the second best comes too late, the best never comes."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:27/1505337101321541</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40894/40894.5.diff" title="Attachment '40894.5.diff' in Ticket #40894"&gt;40894.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40894/40894.5.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Address feedback from @aduth -
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;whitespace fixes
&lt;/li&gt;&lt;li&gt;remove unused options-&amp;gt;stats
&lt;/li&gt;&lt;li&gt; add missing trailing semicolons
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40894.5.diff attached to Ticket #40894</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40894/40894.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40894/40894.5.diff/1505336969398462</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:56:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876#comment:3/1505336183249977</guid>
      <description>&lt;p&gt;
Custom widgets :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876#comment:2/1505336051527687</guid>
      <description>&lt;p&gt;
As suggested by @afercia, this can be generalized so that when you construct &lt;code&gt;WP_Widget&lt;/code&gt; there can be an optional &lt;code&gt;help&lt;/code&gt; parameter for &lt;code&gt;control_options&lt;/code&gt; which, when supplied, would automatically be inserted into the widget control. In that way it wouldn't be something ad hoc for the Custom HTML widget alone but could be re-used by other widgets. I am not aware of other widgets that need help text, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:6/1505335772394335</guid>
      <description>&lt;p&gt;
or maybe just a little highlight
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>home_blog_yellow.jpg attached to Ticket #39666</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39666/home_blog_yellow.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39666/home_blog_yellow.jpg/1505335733482120</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41875 (Wordpress has some fundamental flaws in its structure) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41875#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41875#comment:1/1505335561158900</guid>
      <description>&lt;p&gt;
Can you give a list of problems to solve? This is pretty vague.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:27/1505335383887802</guid>
      <description>&lt;p&gt;
Such a page would be hugely beneficial.
&lt;/p&gt;
&lt;p&gt;
Some additional information I would love to see:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IPv6 support
&lt;/li&gt;&lt;li&gt;active mysqli driver
&lt;/li&gt;&lt;li&gt;active drop-ins
&lt;/li&gt;&lt;li&gt;maybe permissions for the main folders?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, I was thinking it might be better still if the page could generate an expiring link that will display this at the frontend. This would allow you to copy this link and provide it to the support rep you're talking to. If the link contains an expiring token, the security risk should be minimal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876#comment:1/1505335300340562</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505335298000557"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:150/1505335283811500</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41876" title="#41876: defect (bug): Add inline help to Custom HTML widget (new)"&gt;#41876&lt;/a&gt; (Add inline help to Custom HTML widget)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:40:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:6/1505335238859394</guid>
      <description>&lt;p&gt;
For adding inline help to Custom HTML widget, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41876" title="#41876: defect (bug): Add inline help to Custom HTML widget (new)"&gt;#41876&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876/1505335205200112</guid>
      <description>&lt;p&gt;
There is no inline help in the Custom HTML widget for how to interact with the code editor. While the widget will add this to the help text on the widgets admin screen, this is not easily discoverable. Additionally, this help tab text is not displayed in the Customizer at all. Just like the Additional CSS section description in the Customizer, there could be a (?) icon in the widget, and once expanded it could reveal the same help text to guide usage of the widget. I suggest the icon could be placed in the top-right corner of the widget with the help text then appearing at the top when expanded, similar to the Customizer section description.
&lt;/p&gt;
&lt;p&gt;
See also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41872" title="#41872: defect (bug): Code Editor: Minor accessibility improvements to the CodeMirror ... (closed: fixed)"&gt;#41872&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/36"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/36&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/64"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/64&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RP4X03/p1503940071000037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RP4X03/p1503940071000037&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1505323129000204"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C0381N237/p1505323129000204&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Builds off of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41875 (Wordpress has some fundamental flaws in its structure) created</title>
      
        <dc:creator>peterhsbi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41875</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41875/1505335115612335</guid>
      <description>&lt;p&gt;
In way I am happy that Wordpress works. Of sorts. It is a versatile piece of software. It is amazing how many things you can create with it.
&lt;/p&gt;
&lt;p&gt;
But the process of making anything more complex work in Wordpress is excrutiatingly painful.
&lt;/p&gt;
&lt;p&gt;
The concept of plugins is wonderful. But currently the plugins have full access to the browser. They need to run inside Wordpress. Wordpress would need to provide the environment for as much code as possible. It's the only chance of minimizing js and and css conflicts.
&lt;/p&gt;
&lt;p&gt;
Currently everybody can submit a plugin and the only hope of making all components work together is hoping that progammers are sticking to at least some conventions. Bottomline: it is down to luck.
&lt;/p&gt;
&lt;p&gt;
I'd love to get involved. But to be quite honest, I have tried making some contributions with another browser based software before. It didn't go anywhere. My general impression of the age of browser based software: the only thing that matters is implementing features. The more the better.
&lt;/p&gt;
&lt;p&gt;
Minimizing pain on getting things to run together is an art. But it doesn't seem to rank very highly on the list of priorities.
&lt;/p&gt;
&lt;p&gt;
I'd love to get involved. But these are not cosmetic changes. So I don't know where to start and if there's a chance of anything changing on that level in the first place.
&lt;/p&gt;
&lt;p&gt;
So. There it is.
&lt;/p&gt;
&lt;p&gt;
Thanks for listening,
Peter
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:32/1505334549397815</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38707#comment:31" title="Comment 31"&gt;mrahmadawais&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@westonruter I have added a patch that makes the info in Add CSS section look better by adding &lt;code&gt;kbd&lt;/code&gt; elements. It looks like this now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please follow &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41872" title="#41872: defect (bug): Code Editor: Minor accessibility improvements to the CodeMirror ... (closed: fixed)"&gt;#41872&lt;/a&gt; for this as the text may get rewritten into a single paragraph. Note also the overlapping &lt;code&gt;kbd&lt;/code&gt; elements cause an undesirable darker gray line where they overlap. So the padding would need to be reduced in this element.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39681 (Add RGBA to Customizer color picker) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39681#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39681#comment:8/1505334117642842</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is not getting any traction, so punting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38900 (Customize: Add REST API endpoints for changesets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38900#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38900#comment:15/1505334016606753</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Work on this will continue in feature plugin and be tested during the development of a planned Customizer v2 feature plugin. No need to get this merged into core before feature plugin fully utilizes it in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6531 (Recursively search for files in theme and plugin editors) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:18:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6531#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6531#comment:41/1505333935834446</guid>
      <description>&lt;p&gt;
I'm interested in tackling this for 4.9.
&lt;/p&gt;
&lt;p&gt;
I'd like to investigate using proper PHP iterator objects, and provide some custom magic so that they can transparently cache into transients/object cache.
&lt;/p&gt;
&lt;p&gt;
The main benefit is that you don't pull in all files and folders into memory just to pass them around, but rather you prepare an iterator object and pass that on. In some cases, the actual iteration will never happen as it is not needed, and in some cases you'll only end up with a partial iteration, which saves IO and memory as well.
&lt;/p&gt;
&lt;p&gt;
Once the iterators are built, they can easily be adapted to replace the above functions.
&lt;/p&gt;
&lt;p&gt;
Is there anything that would speak against such an approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:16:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:31/1505333819490288</guid>
      <description>&lt;p&gt;
@westonruter I have added a patch that makes the info in Add CSS section look better by adding &lt;code&gt;kbd&lt;/code&gt; elements. It looks like this now.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/HbsbQ6x.png"&gt;&lt;img src="https://i.imgur.com/HbsbQ6x.png" alt="https://i.imgur.com/HbsbQ6x.png" crossorigin="anonymous" title="https://i.imgur.com/HbsbQ6x.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38707.diff attached to Ticket #38707</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38707/38707.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38707/38707.diff/1505333691143802</guid>
      <description>&lt;p&gt;
ADD: Use KBD to show User Keyboard Input Keys
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:26/1505333331286848</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>philmcdonnell</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:5/1505333226868457</guid>
      <description>&lt;p&gt;
I like the idea, but perhaps delineate those two pages from the rest with an &amp;lt;hr&amp;gt; or something also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:7/1505333193613779</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505333191000311"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:25/1505333147270259</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505333143000022"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:04:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:149/1505333072879706</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505333070000480"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24579 (Add Drag'n'Drop UI to plugin and theme manual uploaders) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24579#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24579#comment:30/1505332992707543</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:79/1505332992588625</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41078 (Detect if someone’s site is under version control, and suggest better ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41078#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41078#comment:6/1505332992493964</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:61/1505332992380422</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6531 (Recursively search for files in theme and plugin editors) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6531#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6531#comment:40/1505332992251190</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:4/1505332498261181</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37757 (Add `allowed_classes` to `maybe_unserialize` When WordPress is running ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37757#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37757#comment:8/1505332447704113</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37757#comment:5" title="Comment 5"&gt;seuser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
added specific documentation to the docblocks - will that automatically get picked up by the documentation pages?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, developer.wordpress.org/reference is built automatically from the inline docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:3/1505332350868534</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by presskopp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332348000647"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40921 (Inconsistent Handling of mp4 by Audio Widget) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40921#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40921#comment:18/1505331459236823</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24776 (Need Filter Hooks on Creating Slug - Check Availability of Slug if ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24776#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24776#comment:4/1505331329470443</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by onetarek. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505331327000134"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40921 (Inconsistent Handling of mp4 by Audio Widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:35:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40921#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40921#comment:17/1505331303271104</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by toddhalfpenny. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505331300000385"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40931 (Warning: Division by zero in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40931#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40931#comment:6/1505331253019738</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505331250000218"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:31:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:24/1505331094016964</guid>
      <description>&lt;p&gt;
Excellent feedback there.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Table headers I'm not super fond of, since the data is very varied in a listing such as this.
&lt;/li&gt;&lt;li&gt;Multisite already does add a new table if enabled :)
&lt;/li&gt;&lt;li&gt;Closing the copy-field again was left out to avoid having multiple actionable items at once (much like WooCommerce does it as well)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/39165.5.patch" title="Attachment '39165.5.patch' in Ticket #39165"&gt;39165.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/39165.5.patch" title="Download"&gt;​&lt;/a&gt; addresses the changes I am on board with:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Striped tables are a must for distinguishing rows, that's going right in there.
&lt;/li&gt;&lt;li&gt;I agree that &lt;code&gt;Undefined&lt;/code&gt; sounds better, so replacing those strings.
&lt;/li&gt;&lt;li&gt;I also like your inclusion here of a ToC like quick-link bar along the top, I was a bit skeptical at first but they actually seem rather useful and your concept image really helped nail that down.
&lt;/li&gt;&lt;li&gt;Back to top links, if a ToC is added there will definitely need to be one of those to help with navigation.
&lt;/li&gt;&lt;li&gt;Moved the memory limit field, it was shown in the &lt;code&gt;WordPress&lt;/code&gt; section still
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;TEMPLATEPATH&lt;/code&gt; constant we can use the function for instead, as it's filterable it makes sense, but   &lt;code&gt;WP_PLUGIN_DIR&lt;/code&gt; doesn't have a similarly associated function (unless I'm missing something)
&lt;/li&gt;&lt;li&gt;Active theme should be filtered out from the general list of available themes, I agree, good catch.
&lt;/li&gt;&lt;li&gt;I've added a little section outlining that some information may not be included in the copy-field as it is considered private and should not be posted on public forums, but I'm not the best at using my words. It has the string &lt;code&gt;Some information may be filtered out from the list you are about to copy, this is information we consider private, and is not meant to be shared in a public forum&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39165.5.patch attached to Ticket #39165</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/39165.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/39165.5.patch/1505330891618694</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41828 (Customizer: Rename "Static Front Page" to "Homepage Settings") updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:20:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41828#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41828#comment:18/1505330440418240</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41828#comment:7" title="Comment 7"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41828#comment:6" title="Comment 6"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Current sites with a made up word doesn't mean much. There are a lot of sites with misspellings and bad grammar and made up words. Why promote it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because people recognize it. Would still like input from a copy editor, though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can put on my old copy editor hat for a moment. :)
&lt;/p&gt;
&lt;p&gt;
I'd lean toward "home page" simply because it'd be clear to both people new to the Web and those familiar with the lingo.  If for no other reason than this clarity, I'd use two words.
&lt;/p&gt;
&lt;p&gt;
While "homepage" has been in use for many years, it'd probably look like a misspelling (thus, unprofessional) to many.
&lt;/p&gt;
&lt;p&gt;
I don't have an updated copy of The AP Stylebook on hand. I'm guessing it'd push for "home page."  However, the stylebook tends to change with usage and never sets anything in stone.
&lt;/p&gt;
&lt;p&gt;
If I were editing for a tech magazine, I'd allow for "homepage."  For a general newspaper, I'd go with "home page."
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
FWIW, it wouldn't hurt for core WP to adopt a particular stylebook or create its own.  It'd help with these types of discussions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:5/1505328733755016</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
and label additions
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Worth noting the label for the Custom HTML widget is not an addition :) actually, in 4.8 there's a label and it was removed in the CodeMirror patch, which is an a11y regression.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40187 (The tag cloud should output a list) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40187#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40187#comment:19/1505328543240091</guid>
      <description>&lt;p&gt;
@SergeyBiryukov okay, i'm working on another patch but I think parts of 40187.diff can be easily reused on most used tags as well. Let's try.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:4/1505328310296250</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
accessing &lt;code&gt;control.editor.codemirror.display.lineDiv&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, good to know, thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:37:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:153/1505327838463679</guid>
      <description>&lt;p&gt;
To get right to the point, I have to mostly agree with @pento here - I don't think it's quite the right moment in time for this.
&lt;/p&gt;
&lt;p&gt;
5 years ago, I think this would've been a great addition to the state of Javascript in WordPress - taking a concept WordPress developers were familiar with and providing a similar mechanism for the jumbled random pieces of Javascript inserted by all sorts of things, and actually getting it to all work together cohesively.
But it's not 5 years ago, it's now 2017 and WordPress is behind the curve on modern Javascript adoption, we're playing catch up and we need to be looking at what will be useful over the coming 10 years, and not just what has proved reliable in the past.
&lt;/p&gt;
&lt;p&gt;
The good news is that I don't think this patch/approach is incorrect or bad at all - Hooks &amp;amp; filters have certainly proved to be reliable in PHP, I just don't want us to run forward into adopting something which is based on historical JS usage in WordPress rather than future JS usage.
I'd want to see something using a modern library (Be that React, Vue, Angular, Whatever) using this pattern before we add it as-is to WordPress, if it proves to be useful in that context then I'd be all for this, but only after a reasonably complex application had tried it.
Gutenberg is the current obvious choice and if using it in Gutenberg didn't show up some shortcomings of the API as-is I'd be extremely surprised.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:3/1505327800060705</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@afercia the code changes look good, other than the jQuery for obtaining &lt;code&gt;.CodeMirror-code&lt;/code&gt;. This can be simplified by just accessing &lt;code&gt;editor.codemirror.display.lineDiv&lt;/code&gt;. Done in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff" title="Attachment '41872.2.diff' in Ticket #41872"&gt;41872.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Otherwise, for the text changes and label additions, I'll defer to @melchoyce, @michelleweber, and @mizejewski.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:2/1505327671809415</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Visual changes introduced in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff" title="Attachment '41872.diff' in Ticket #41872"&gt;41872.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/pB1BYCoY2d.png"&gt;&lt;img src="https://cldup.com/pB1BYCoY2d.png" alt="https://cldup.com/pB1BYCoY2d.png" crossorigin="anonymous" title="https://cldup.com/pB1BYCoY2d.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/GUoRBtLqSo.png"&gt;&lt;img src="https://cldup.com/GUoRBtLqSo.png" alt="https://cldup.com/GUoRBtLqSo.png" crossorigin="anonymous" title="https://cldup.com/GUoRBtLqSo.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/b45nB46t8V.png"&gt;&lt;img src="https://cldup.com/b45nB46t8V.png" alt="https://cldup.com/b45nB46t8V.png" crossorigin="anonymous" title="https://cldup.com/b45nB46t8V.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40187 (The tag cloud should output a list) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40187#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40187#comment:18/1505327598356233</guid>
      <description>&lt;p&gt;
@audrasjb Thanks for the patch! Sorry it took a few weeks to get back to you.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40187/40187.diff" title="Attachment '40187.diff' in Ticket #40187"&gt;40187.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40187/40187.diff" title="Download"&gt;​&lt;/a&gt; replaces the &lt;code&gt;.tagchecklist&lt;/code&gt; div for adding tags to a post with a list, but that's not what this ticket is about.
&lt;/p&gt;
&lt;p&gt;
As far as I can tell, the ticket is about the tag cloud that appears when clicking the &lt;code&gt;Choose from the most used tags&lt;/code&gt; link in the same meta box. With the patch, the tag cloud still outputs standalone &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags instead of a list.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41872.2.diff attached to Ticket #41872</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff/1505327532400940</guid>
      <description>&lt;p&gt;
Use editor.codemirror.display.lineDiv for obtaining .CodeMirror-code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>41872.diff attached to Ticket #41872</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff/1505327187199577</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:1/1505327073161528</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff" title="Attachment '41872.diff' in Ticket #41872"&gt;41872.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.diff" title="Download"&gt;​&lt;/a&gt; is a first pass to try to address the points above.
&lt;/p&gt;
&lt;p&gt;
Also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;in the Customizer, all the "help-toggle" buttons are now buttons with a &lt;code&gt;type="button"&lt;/code&gt; attribute, so there's no need to prevent the default action, use a keydown event, and filter the keys. They just need a click event
&lt;/li&gt;&lt;li&gt;prevents a focus loss when closing the Additional CSS help
&lt;/li&gt;&lt;li&gt;in the Plugin editor page: changes a &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; element to &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; for consistency with the Theme editor page
&lt;/li&gt;&lt;li&gt;removes some translation domain leftovers ('better-code-editing')
&lt;/li&gt;&lt;li&gt;changes the Help text list to a paragraph with an ID so it can be targeted by &lt;code&gt;aria-describedby&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;standardises the Help text wherever it is used, see new text below: suggestions for better wording welcome
&lt;/li&gt;&lt;li&gt;fixes a typo "plan text mode" to "plain text mode"
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
About the new Help text, I'd say it's important that is always the same everywhere to avoid confusion for users and make translators happy. New text:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
When using a keyboard: In the editing area the Tab key enters a tab character. To move away from this area by pressing Tab, press the Esc key followed by the Tab key. Screen reader users: you may need to press the Esc key twice to exit forms mode and then to allow the Tab key to move away from the editing area.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@westonruter I'd greatly appreciate your feedback and review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41870 (Code Editor: Add grunt task for building new CodeMirror bundles from ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41870#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41870#comment:2/1505326896343692</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:148</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:148/1505326716976327</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12423#comment:145" title="Comment 145"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;I'm aware that it would be ideal if the CodeMirror bundling logic (via browserify) could be added as part of core. For now, just the minified bundles are being included.
&lt;/li&gt;&lt;li&gt;The linters are being included as separate assets. They are not being minified, other than they are already minified as distributed. These could either benefit from additional uglification or bundling with codemirror if they are not going to be enqueued separately.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41870" title="#41870: task (blessed): Code Editor: Add grunt task for building new CodeMirror bundles from ... (assigned)"&gt;#41870&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;PHPUnit tests should be added for &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; and &lt;code&gt;WP_Widget_Custom_HTML&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41871" title="#41871: defect (bug): Code Editor: Add unit tests (closed: fixed)"&gt;#41871&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;There is no PHP linter yet. This would be a good enhancement. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41873" title="#41873: enhancement: Code Editor: Add PHP linter (new)"&gt;#41873&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;While there is an HTMLHint rule which checks for Kses violations, this does not extend to CSSLint and &lt;code&gt;safecss_filter_attr()&lt;/code&gt;. It would be a nice enhancement to get illegal style properties flagged as lint errors as well. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/60"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/60&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41874" title="#41874: enhancement: Code Editor: Extend CSS linter to check for safecss-forbidden properties (new)"&gt;#41874&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41874 (Code Editor: Extend CSS linter to check for safecss-forbidden properties) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41874</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41874/1505326686895525</guid>
      <description>&lt;p&gt;
While there is a custom HTMLHint rule which checks for Kses violations, this does not extend to CSSLint and &lt;code&gt;safecss_filter_attr()&lt;/code&gt;. It would be a nice enhancement to get illegal style properties flagged as lint errors as well.
&lt;/p&gt;
&lt;p&gt;
Originally &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/60"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/60&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;code&gt;safecss_filter_attr()&lt;/code&gt; function is used by KSES to filter HTML &lt;code&gt;style&lt;/code&gt; attributes, removing any properties that are illegal. This should be applied to CSS and &lt;code&gt;style&lt;/code&gt; attributes in HTML, so that any illegal properties are flagged as such.
&lt;/p&gt;
&lt;p&gt;
It seems that HTMLHint is not currently applying CSSLint to &lt;code&gt;style&lt;/code&gt; attributes, but if it did, then a &lt;code&gt;kses&lt;/code&gt; rule added to CSSLint could then apply to both HTML and CSS.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is for the code editor introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41873 (Code Editor: Add PHP linter) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41873</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41873/1505326518717150</guid>
      <description>&lt;p&gt;
There is no PHP linter yet when editing PHP in the code editor (powered by CodeMirror, from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;). This would be a good enhancement, PHP syntax errors are the most critical thing to catch prior to saving in order to prevent whitescreening a site. Currently there are linters only for HTML, JS, CSS, and JSON.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48#issuecomment-327963921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48#issuecomment-327963921&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Props to @rheinardkorf for finding &lt;a class="ext-link" href="http://glayzzle.com/php-parser/#demo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://glayzzle.com/php-parser/#demo&lt;/a&gt; !!
&lt;/p&gt;
&lt;p&gt;
On GitHub: &lt;a class="ext-link" href="https://github.com/glayzzle/php-parser"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/glayzzle/php-parser&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I had previously stumbled across the &lt;a class="ext-link" href="https://github.com/glayzzle/php-linter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/glayzzle/php-linter&lt;/a&gt; project but it is empty. I didn't see the other project.
&lt;/p&gt;
&lt;p&gt;
This holds great promise. The only icing on the cake here would be if the parser could be told which PHP version to use, but we could get a list of language features that are added after PHP 5.2 and mark them as errors when the version of PHP on the server is not new enough. Amazing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See more background on the original GitHub issue: &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872/1505326340434123</guid>
      <description>&lt;p&gt;
The CodeMirror-powered code editor areas recently introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; can be improved a bit with some minor accessibility enhancements.
&lt;/p&gt;
&lt;p&gt;
First of all, the CodeMirror editing area needs a proper ARIA role and &lt;code&gt;aria-multiline&lt;/code&gt; attribute to be exposed to assistive technologies as equivalent to a native HTML textarea. This was mentioned in the original ticket, see &lt;a href="https://core.trac.wordpress.org/ticket/12423#comment:49"&gt;https://core.trac.wordpress.org/ticket/12423#comment:49&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Further improvements:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;all the editing areas need to be labeled, whether using a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element, an &lt;code&gt;aria-label&lt;/code&gt;, or an &lt;code&gt;aria-labelledby&lt;/code&gt; attribute.
&lt;/li&gt;&lt;li&gt;all the underlying textarea elements need to be labeled, this is particularly important when CodeMirror is disabled in the user profile and the textarea are actually used
&lt;/li&gt;&lt;li&gt;worth noting the Custom HTML widget used to have a "Content:" label that was removed, it should be restored also for consistency with all the other widgets
&lt;/li&gt;&lt;li&gt;the Additional CSS textarea in the Customizer needs a label
&lt;/li&gt;&lt;li&gt;the Plugin and Theme editors miss a label since forever (I guess), this is a good opportunity to add it
&lt;/li&gt;&lt;li&gt;the help text with instructions to escape from the keyboard trap related to the Tab key needs to be consistently used as target for &lt;code&gt;aria-describedby&lt;/code&gt; on both the textarea elements and the CodeMirror editing areas
&lt;/li&gt;&lt;li&gt;this is a nice opportunity to improve the help text and make it consistent, users and translators will be happy
&lt;/li&gt;&lt;li&gt;the Additional CSS help toggle and panel &lt;code&gt;aria-expanded&lt;/code&gt; attribute needs to be fixed, see &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/89"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/89&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37629 (is_sticky filter hook) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37629#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37629#comment:2/1505326307543764</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37629#comment:1" title="Comment 1"&gt;tdmalone&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about the &lt;code&gt;pre_option_sticky_posts&lt;/code&gt; filter?
&lt;/p&gt;
&lt;p&gt;
There are other dynamic filters available in &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_option/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`get_option()`&lt;/a&gt; as well, which &lt;code&gt;is_sticky()&lt;/code&gt; calls.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By running a filter on that hook, you're filtering an option that's storing sticky posts of the &lt;code&gt;post&lt;/code&gt; post type, not the result of the &lt;code&gt;is_sticky()&lt;/code&gt; function.  There's potential for some unintended consequences here when other code is calling &lt;code&gt;get_option( 'sticky_posts' )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
While the option and the conditional are related by default, this is not necessarily true with custom sticky post implementations.  Sticky posts can be stored in a variety of ways.  A filter hook for the conditional function makes more sense in those scenarios.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41871 (Code Editor: Add unit tests) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41871</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41871/1505326232783264</guid>
      <description>&lt;p&gt;
PHPUnit tests should be added for &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; and &lt;code&gt;WP_Widget_Custom_HTML&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:26/1505326086175198</guid>
      <description>&lt;p&gt;
A follow-up ticket to build on the work being done here: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41870" title="#41870: task (blessed): Code Editor: Add grunt task for building new CodeMirror bundles from ... (assigned)"&gt;#41870&lt;/a&gt; (Code Editor: Add grunt task for building new CodeMirror bundles from external dependencies)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41870 (Code Editor: Add grunt task for building new CodeMirror bundles from ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41870#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41870#comment:1/1505326028012356</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41870 (Code Editor: Add grunt task for building new CodeMirror bundles from ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41870</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41870/1505325968556241</guid>
      <description>&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, it would be ideal if the CodeMirror bundling logic (via browserify) could be added as part of core. In this way, the external dependencies (CodeMirror and the linter linraries) can be managed by NPM. For now, just the minified bundles are being included.
&lt;/p&gt;
&lt;p&gt;
The logic used in the Better Code Editing plugin for creating the bundles can be seen here: &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/pull/92/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/pull/92/files&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Depends on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40894" title="#40894: task (blessed): Use Webpack instead of Browserify for build process (closed: fixed)"&gt;#40894&lt;/a&gt; which replaces Browserify with Webpack in core.
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42424" title="#42424: defect (bug): Codemirror: Unify line endings in csslint.js (closed: fixed)"&gt;#42424&lt;/a&gt;, where we need to fix line-endings for CSSLint.
&lt;/p&gt;
&lt;p&gt;
Additionally, the linters are currently being included as separate assets. They are not being minified, other than they are already minified as distributed. These could either benefit from additional uglification or bundling with codemirror if they are not going to be enqueued separately. The same goes for the &lt;code&gt;htmlhint-kses&lt;/code&gt; script.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41866 (REST API throws error when displaying an unlimited number of posts in ...) closed</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41866#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41866#comment:1/1505325087451371</guid>
      <description>invalid: &lt;p&gt;
Hi @dpsjfveloso1,
&lt;/p&gt;
&lt;p&gt;
Thanks for taking the time to make this report, and welcome to Trac! This particular behavior is by design. As described in &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/issues/2759#issuecomment-251809005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this comment&lt;/a&gt; from the WP-API GitHub repo, querying for all posts should be done via iteration, rather than a single massive query.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:25/1505324976424671</guid>
      <description>&lt;p&gt;
@aduth
&lt;/p&gt;
&lt;p&gt;
Thanks for the review, feedback and questions.
&lt;/p&gt;
&lt;p&gt;
I don't think we need to add minification here, we already handle that in our main build process which we run to package releases. For development, the unminified version is preferable and this approach fits nicely with our existing build tool chain.
&lt;/p&gt;
&lt;p&gt;
One additional use I imagine for webpack is importing/building our &lt;a class="ext-link" href="https://www.npmjs.com/org/wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;npm packages&lt;/a&gt; in the wp namespace for inclusion in core.
&lt;/p&gt;
&lt;p&gt;
Regarding splitting the configuration files, I had originally tried a single file and split it up based on &lt;a href="https://core.trac.wordpress.org/ticket/40894#comment:17"&gt;this comment&lt;/a&gt; and thinking it may help optimize the production/dev builds down the road.
&lt;/p&gt;
&lt;p&gt;
I will try to clean up the configs, removing stats and maybe moving watch:true as well as fixing your other noted format items.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What does this configuration look like when it scales to accommodate building both media and Gutenberg?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats a great question we need to figure out the answer to - hopefully we can port over much of what exists in the project. Having webpack in our core toolset will be a prerequisite.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34115 (oEmbed not working on author page without posts) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34115#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34115#comment:36/1505324864983882</guid>
      <description>&lt;p&gt;
Good progress by @swissspidy on a patch. Anyone, please review: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/254/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/254/files&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41857 (Walker_PageDropdown doesn't set correct selected value when using ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41857#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41857#comment:4/1505323035409696</guid>
      <description>&lt;p&gt;
Thanks for the example.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it's a cool idea, worth exploring ;-)
&lt;/p&gt;
&lt;p&gt;
But with this callback power, comes a great responsibility, like being sure that it's an injective map ;-)
&lt;/p&gt;
&lt;p&gt;
Alternative (smaller step) approach, would be to add a support for a &lt;code&gt;post_name&lt;/code&gt; selection.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 16:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869#comment:2/1505318733467032</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 16:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868#comment:2/1505318709881628</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30829 (I want to add the list table views in edit-tags.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 15:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30829#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30829#comment:12/1505315943058172</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41378" title="Taxonomy: Allow for adding custom list table views to taxonomy ..."&gt;41378&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Allow for adding custom list table views to taxonomy screens.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props eventualo, mariovalney, riddhiehta02, llemurya.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30829" title="#30829: enhancement: I want to add the list table views in edit-tags.php (closed: fixed)"&gt;#30829&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41378]: Taxonomy: Allow for adding custom list table views to taxonomy ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 15:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41378/1505315942556877</guid>
      <description>&lt;p&gt;
Taxonomy: Allow for adding custom list table views to taxonomy screens.
&lt;/p&gt;
&lt;p&gt;
Props eventualo, mariovalney, riddhiehta02, llemurya.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30829" title="#30829: enhancement: I want to add the list table views in edit-tags.php (closed: fixed)"&gt;#30829&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>firebird75</dc:creator>

      <pubDate>Wed, 13 Sep 2017 15:05:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:2/1505315120481638</guid>
      <description>&lt;p&gt;
Wow, what a great and fast reply!!!
&lt;/p&gt;
&lt;p&gt;
The query you are showing up is the second one. There is one before that. You won't be able to see it with the last_query. You need to install a plugin like blackbox to see all the queries and so the one throwing the error.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41851 (Avoid more test skipping for situations that are actually errors or ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41851#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41851#comment:2/1505314476699170</guid>
      <description>&lt;p&gt;
@johnbillion The changes to &lt;code&gt;Tests_Image_Meta&lt;/code&gt; seem too strong to me. WordPress can run in environments without the &lt;code&gt;gd&lt;/code&gt; or &lt;code&gt;exif&lt;/code&gt; extensions. If we want the tests to be portable - especially for cases where hosts want to run them in their own environments - then we should not make them fail because of non-essential PHP modules. (That's what &lt;code&gt;phpunit --strict&lt;/code&gt; is for.)
&lt;/p&gt;
&lt;p&gt;
If, on the other hand, we're going to decide that we want the tests to be maximally broad, and thus to have system requirements more stringent than WordPress itself, we should establish this as policy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:7/1505314028081906</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41377" title="Taxonomy: Force a `DISTINCT` term query when result count matters.
 ..."&gt;41377&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Force a &lt;code&gt;DISTINCT&lt;/code&gt; term query when result count matters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Generally, duplicate terms returned by a term query are eliminated in PHP,&lt;br /&gt;
after the database query takes place. This technique doesn't work properly&lt;br /&gt;
when the query parameters specify the &lt;code&gt;number&lt;/code&gt; of results, since the results&lt;br /&gt;
of a &lt;code&gt;SELECT ... LIMIT x...&lt;/code&gt; query may be deduplicated to a count less than&lt;br /&gt;
&lt;code&gt;x&lt;/code&gt;. In these cases, we force the original query to be &lt;code&gt;DISTINCT&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props elvishp2006.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41796" title="#41796: defect (bug): WP_Term_Query problem using object_ids and number attributes (closed: fixed)"&gt;#41796&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41377]: Taxonomy: Force a `DISTINCT` term query when result count matters.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41377/1505314027603266</guid>
      <description>&lt;p&gt;
Taxonomy: Force a &lt;code&gt;DISTINCT&lt;/code&gt; term query when result count matters.
&lt;/p&gt;
&lt;p&gt;
Generally, duplicate terms returned by a term query are eliminated in PHP,
after the database query takes place. This technique doesn't work properly
when the query parameters specify the &lt;code&gt;number&lt;/code&gt; of results, since the results
of a &lt;code&gt;SELECT ... LIMIT x...&lt;/code&gt; query may be deduplicated to a count less than
&lt;code&gt;x&lt;/code&gt;. In these cases, we force the original query to be &lt;code&gt;DISTINCT&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props elvishp2006.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41796" title="#41796: defect (bug): WP_Term_Query problem using object_ids and number attributes (closed: fixed)"&gt;#41796&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869#comment:1/1505313121193088</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868#comment:1/1505313097361341</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41869.patch attached to Ticket #41869</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41869/41869.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41869/41869.patch/1505313028762811</guid>
      <description>&lt;p&gt;
Add static keyword in functions descriptions and add missing functions descriptions.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) created</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:28:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869/1505312907610580</guid>
      <description>&lt;p&gt;
Add static keyword and add functions Descriptions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36325 (Move #wpadminbar above #page) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:25:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36325#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36325#comment:6/1505312741104493</guid>
      <description>wontfix: &lt;p&gt;
As noted above, it should be possible to adjust the styling as needed without changing the current markup.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40931 (Warning: Division by zero in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40931#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40931#comment:5/1505312574532033</guid>
      <description>&lt;p&gt;
The warning is displayed when the post has a featured image with corrupted metadata: the image has a particular size, but its &lt;code&gt;height&lt;/code&gt; attribute is empty.
&lt;/p&gt;
&lt;p&gt;
I have no objections to checking the value to avoid the warning, but it would be nice to find out what causes the metadata to become corrupted like that, as it could cause other issues elsewhere.
&lt;/p&gt;
&lt;p&gt;
@aegis123, @Abigailm: Were you able to identify any pattern in the affected posts? What kind of a featured image (format, size) they have?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41823 (Text on web site during update of plugins and at login page is always ...) updated</title>
      
        <dc:creator>dragy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:03:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41823#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41823#comment:10/1505311389378210</guid>
      <description>&lt;p&gt;
Sergey is gone, anyone else ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41868.patch attached to Ticket #41868</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41868/41868.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41868/41868.patch/1505311355566119</guid>
      <description>&lt;p&gt;
documentations improve
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) created</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868/1505311262729053</guid>
      <description>&lt;p&gt;
dot missing in documentation
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:152</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:152/1505310080245166</guid>
      <description>&lt;p&gt;
@flixos90 Thanks for bringing up async support. We discussed this &lt;a class="ext-link" href="https://github.com/WordPress/packages/pull/13#issuecomment-319958109"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;briefly on the PR&lt;/a&gt; and decided it was out of scope for 1.0.0 of wp.hooks. I would love to explore in a future version. One possible approach to explore for async with the current implementation for developers is to run a hook before the async action, and run another once the async action completed. Another option would be to return a promise from the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:151</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:151/1505309740009995</guid>
      <description>&lt;p&gt;
@pento I respectfully disagree with your conclusion here. As a note, I committed this code after careful discussion and several public comments affirming the commit by &lt;em&gt;WordPress Lead developer @azaozz&lt;/em&gt; as well as feedback and contributions from some of core's most experienced JavaScript contributors.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unfortunately, this was committed with a blocker not being addressed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;Your blocker seems contrived&lt;/em&gt;: we can't add a library to core until it is already used?  Just last week, our project leader @matt was telling us to have &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1504729788000192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;more iteration happening in trunk&lt;/a&gt;. Having this in trunk means we can build off it, using it in core itself and we have plans to do just that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even not considering modern practices, wp.hooks has no usage in Core, some parts of Core's legacy JS should be making use of it when it's committed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What? We can't add usage in core until hooks is in core. And indeed, now that it is in core, the plan is to move forward by adding extensibility to core JavaScript via &lt;code&gt;wp.hooks&lt;/code&gt;. For example, one common need extending the media modal and &lt;code&gt;wp.hooks&lt;/code&gt; would be perfect to add &lt;a href="https://core.trac.wordpress.org/ticket/40427#comment:5"&gt;these capabilities&lt;/a&gt; we are discussing on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40427" title="#40427: enhancement: Expose a JavaScript API to extend the Media Manager (new)"&gt;#40427&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For example, I recently worked to help introduce the image widget to core. &lt;a class="ext-link" href="https://github.com/xwp/wp-core-media-widgets/pull/46/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;In this PR&lt;/a&gt;, you can see the (huge amount of) code  needed to the get the 'Insert Media' button working (all we wanted was to remove the add gallery/playlist options). &lt;strong&gt;Having filters in place in wp.media would &lt;em&gt;greatly&lt;/em&gt; simplify these types of customizations.&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it's not necessarily the way forward, and making it the "WordPress way" limits our options.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree. Sure, it may not be the way forward with Gutenberg for example, why does that limit our options? We have needed a way to provide more JS extensibility for 5+ years, and &lt;code&gt;wp.hooks&lt;/code&gt; addresses that need. I haven't heard a final extensibility approach articulated by Gutenberg (or Calypso for that matter), and whatever they choose may not be applicable to our 35k lines of legacy JavaScript and Backbone code.
&lt;/p&gt;
&lt;p&gt;
It seems like &lt;em&gt;you are afraid to include hooks because it may lock us into something outdated&lt;/em&gt;. Please consider that this is a proven, well tested library that will let us make our existing JS more extensible. Sure - it may not work for our future needs - that shouldn't stop it from solving our current needs with a proven approach. Also, it is a tiny library that hasn't changed much in years, so the maintenance burden will be small.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once the modern practices are settled, backport to work with legacy JS. Add it into some of Core's legacy JS, so we get practical usage there, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is fanciful. We don't know what these practices will be or whether they will even work with our legacy JavaScript.  Why are we discarding a proven approach we know we can use now for some imaginary approach that may arrive at some time in the future? Many smart people worked very hard on this library and getting in core for good reason - they want to use it in their development work. It seems like you are saying we should not add it to core because its not yet used or because some new approach may work better. This hinders our progress in core JavaScript instead of forwarding it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we haven't already, have a better way of importing modules into Core. Committing the webpack-ed version of the module to the SVN repo is unsustainable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. We are planning to include this from npm directly once its published, as part of our build process once we switch to webpack from browserify we will have what we need (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40894" title="#40894: task (blessed): Use Webpack instead of Browserify for build process (closed: fixed)"&gt;#40894&lt;/a&gt;). This can still happen in 4.9.
&lt;/p&gt;
&lt;p&gt;
I would be interested to hear more feedback from @azaozz or other lead developers, as well as from members of the Gutenberg team such as @aduth or @jnylen0. Does &lt;code&gt;wp.hooks&lt;/code&gt; seem like something that would be genuinely useful for WordPress core and plugin/theme developers or in your project? Are you working on a new approach to extensibility that will be applicable to core that we should be waiting for? Also, @westonruter have you looked at wp.hooks, is it something you think would be useful in making the &lt;em&gt;Customizer more extensible?&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41865 (Have not received response at Hackerone) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41865#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41865#comment:2/1505309501844819</guid>
      <description>&lt;p&gt;
Hey @zhk,
&lt;/p&gt;
&lt;p&gt;
I appreciate your help in keeping WordPress secure. I looked at the HackerOne report and, while you're right that it hasn't had a response in five days, there had been responses from people on our team eight days ago. It is being looked at.
&lt;/p&gt;
&lt;p&gt;
However, the WordPress core Trac is not the place to get updates on HackerOne reports. Security issues shouldn't be discussed or referenced in public places until they have been resolved and disclosed. Please keep the questions, even ones for updates, on the HackerOne report. Each comment you make there is piped into our security slack channel and gets in front of the eyes of our whole team.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Aaron
WordPress Security Team Lead
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41865 (Have not received response at Hackerone) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41865#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41865#comment:1/1505309020164207</guid>
      <description>invalid: &lt;p&gt;
Hi @zhk, thank you for the report! It's being looked into, the security team will reply when they have a chance.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41823 (Text on web site during update of plugins and at login page is always ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41823#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41823#comment:9/1505308635571297</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41823#comment:8" title="Comment 8"&gt;dragy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
actually I see this message in english even on clean installation of wordpress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which locale are you using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:26/1505308616549304</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1505308614000579"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41823 (Text on web site during update of plugins and at login page is always ...) reopened</title>
      
        <dc:creator>dragy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41823#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41823#comment:8/1505308191073122</guid>
      <description>&lt;p&gt;
actually I see this message in english even on clean installation of wordpress, who can look at this with me on slack?
&lt;/p&gt;
&lt;p&gt;
thanks
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 13 Sep 2017 12:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:1/1505307422763147</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I created a custom post type (movie) and custom taxonomy (genre, associated with movie). The taxonomy has only one term "Comedy" and it has no parent.
&lt;/p&gt;
&lt;p&gt;
I also have a post under movie which where I have associated the only taxonomy term.
&lt;/p&gt;
&lt;p&gt;
Here is my code:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'taxonomy'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'movies_taxonomy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'depth'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'exclude'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'echo'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'hierarchical'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'hide_empty'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'show_count'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'title_li'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;wp_list_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;last_query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
As expected &lt;code&gt;wp_list_categories($args)&lt;/code&gt; does not come up with any taxonomy item since I have only one (ID = 16) and that has been excluded in the query.
&lt;/p&gt;
&lt;p&gt;
And here is the output of &lt;code&gt;$wpdb-&amp;gt;last_query&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT t.*, tt.* FROM wp_terms AS t INNER JOIN wp_term_taxonomy AS tt ON t.term_id = tt.term_id WHERE tt.taxonomy IN ('genre') AND t.term_id NOT IN (16) ORDER BY t.name ASC, which is different from yours.
&lt;/pre&gt;&lt;p&gt;
Can you please tell me the steps to reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:33:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:30/1505302415865507</guid>
      <description>&lt;p&gt;
@grapplerulrich the fact that one language did not do it in this case is not grounds for not including the ability to change word order. Remember, with translations, you're preparing the code so it can be translated into ANY of the languages, even ones you don't even know about.
&lt;/p&gt;
&lt;p&gt;
I'd highly recommend you include numbered placeholders so the order can be moved around.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41155 (WordPress 4.8 Admin Sidebar Sub Menu Navigation Issue) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41155#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41155#comment:8/1505301776491530</guid>
      <description>&lt;p&gt;
Thank you for the patch! I tested it (on 4.8.1) and it is working perfectly.
Also big thanks to @codexdemon for pointing out the issue!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41155#comment:6" title="Comment 6"&gt;chintanmachhi207&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt; &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41155" title="#41155: defect (bug): WordPress 4.8 Admin Sidebar Sub Menu Navigation Issue (assigned)"&gt;#41155&lt;/a&gt;.3 added to fixed this issue. &lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:150/1505301032819690</guid>
      <description>&lt;p&gt;
I'd also like to throw in another suggestion (which might be out of scope for the initial set of functions, but is worth considering IMO):
&lt;/p&gt;
&lt;p&gt;
Due to a lot of processes in JS being asynchronous, I've been thinking about asynchronous hooks. The currently suggested API monitors pretty much how the API works in PHP, however there may be cases in JS where none of these functions work, such as the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Imagine there's a JS filter for some data.
&lt;/li&gt;&lt;li&gt;Someone wants to use that filter and override that data with content from an AJAX call, like to the WP REST API.
&lt;/li&gt;&lt;li&gt;This is currently not possible since the AJAX call is asynchronous while the filter is synchronous and expects an immediate result.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A possible approach to make something like the above work would be something like &lt;code&gt;doActionAsync( 'hook', callback, arg1, arg2, moreArgs, finalArg )&lt;/code&gt;, where &lt;code&gt;callback&lt;/code&gt; is the callback that should fire after all hooks attached to the action have been fired (should always be parameter-less). Internally, &lt;code&gt;doActionAsync()&lt;/code&gt; would work like this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If no hooks are attached, immediately call the callback.
&lt;/li&gt;&lt;li&gt;Otherwise call the first hook and pass a callback to it which will call the next hook (the attached hook would be responsible for calling the callback after it has been completed).
&lt;/li&gt;&lt;li&gt;If there is no more next hook, all attached hooks have been run and the original callback passed to &lt;code&gt;doActionAsync()&lt;/code&gt; would be called to proceed with the original logic.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note that the above approach basically waits for each hook's completion until calling the next one. An alternative approach could be to call all hooks immediately and only wait more generally until every one has completed until calling the original callback.
&lt;/p&gt;
&lt;p&gt;
There could also be a &lt;code&gt;applyFiltersAsync( 'hook', callback, content, arg1, arg2, moreArgs, finalArg )&lt;/code&gt; which would work almost the same like the above, with the exception that the &lt;code&gt;callback&lt;/code&gt; would always require one parameter, which should be the &lt;code&gt;content&lt;/code&gt;. This would be passed on from attached hook to hook.
&lt;/p&gt;
&lt;p&gt;
Due to the complexity of this ticket already it may be better to think about the above later and deal with it in a separate ticket after the foundation is set in stone. I just wanted to leave this here for now. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41858 (Improve the list table pagination links color contrast) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:09:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41858#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41858#comment:2/1505300974397726</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@subrataemfluence I think there are no other UI controls in WordPress that change their background to blue on hover/focus, so these links design seems inconsistent to me and I don't see why they should be an exception.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41858 (Improve the list table pagination links color contrast) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41858#comment:1/1505300071810757</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The following color contrast meets WCGA level AA (4.5:1) &lt;a class="ext-link" href="https://www.joedolson.com/tools/color-contrast.php?type=hex&amp;amp;color=%230066c5&amp;amp;color2=%23e5e5e5&amp;amp;alpha=1#hex"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.joedolson.com/tools/color-contrast.php?type=hex&amp;amp;color=%230066c5&amp;amp;color2=%23e5e5e5&amp;amp;alpha=1#hex&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However the color &lt;code&gt;#0066c5&lt;/code&gt; does not fall inside the list WordPress official colors.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"Also on hover/focus the colors could be improved a bit, since UI controls that change their background to blue on hover/focus are a bit out of the design patterns used in WordPress:"&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Would you mind explaining &lt;strong&gt;"out of the design pattern used in WordPress"&lt;/strong&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41529 (Twenty Seventeen: Add social icon for Dockerhub) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41529#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41529#comment:2/1505299992876111</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1505299991000140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:12/1505299477007016</guid>
      <description>&lt;p&gt;
Thanks for the update @schlessera
&lt;/p&gt;
&lt;p&gt;
Glad to hear it worked for you @fierevere
&lt;/p&gt;
&lt;p&gt;
Just few notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If we want to take this in smaller steps, we could keep the same non-ipv6 code, to be absolutely sure that we're not exluding anything with the new patch.
&lt;/li&gt;&lt;li&gt;Would it make sense and be helpful for the developers reading the code, to match the most used db host strings, like localhost, 127.0.0.1 etc, before parsing with regex?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here's a list of db host strings from the &lt;a class="ext-link" href="https://codex.wordpress.org/Editing%20wp-config.php#Set_Database_Host"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Codex&lt;/a&gt;, maybe helpful in tests?:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Hosting Company					DB_HOST Value Guess
1and1						db12345678
A2 Hosting					localhost
AN Hosting					localhost
Aruba.it					localhost or real IP provided with activation mail.
A Small Orange					localhost
AT&amp;amp;T						xxxxxxxx.carrierzone.com full server name found in PHP MyAdmin.
BlueHost					localhost
DreamHost					mysql.example.com
GoDaddy - Shared and 4GH Hosting		In the Databases menu go to MySQL. To the right of the database name click on Actions and Details. The hostname is at the bottom of the window.
GoDaddy - cPanel Hosting			localhost
GoDaddy - Plesk Hosting				Use the IP address shown in the Databases Section in Plesk. Do not include :3306
HostGator					localhost
ICDSoft						localhost:/tmp/mysql5.sock
Infomaniak (old admin)				mysql.yourdomain
Infomaniak					In the Dashboard of your Web Hosting, go to Databases. The host server is at the top of the window (example: xxxx.myd.sharedbox.com)
InMotion Hosting				localhost
iPage						username.ipagemysql.com
IPower						username.ipowermysql.com
Laughing Squid					localhost
MediaTemple Grid				internal-db.s00000.gridserver.com - (Replace "00000" with the actual site number)
MediaTemple DV					localhost
MegaHost					localhost
NearlyFreeSpeech.Net				username.db
NetworkSolutions				mysqlv5
one.com						example.com.mysql
pair Networks					dbnnnx.pair.com
QTH.com						localhost
Rackspace Cloud					localhost for unmanaged servers, variable for Cloud Sites like mysqlXY-AB.wcN.dfQ.stabletransit.com where X,Y,A,B,N,Q are variables
SysFix.eu Power Hosting				datapower.sysfix.eu
Site5						localhost
SiteGround					localhost
Vevida.com					mysql.example.com, where example.com is your own domain name
Yahoo						mysql
Hosts with cPanel				localhost
Hosts with Plesk				localhost
Hosts with DirectAdmin				localhost
Tophost.it					sql.your-domain-name.it
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>toc.jpg attached to Ticket #39165</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/toc.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/toc.jpg/1505297337404137</guid>
      <description>&lt;p&gt;
Example screenshot: table of content (by default the notice-box is using javascript for top position)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:149/1505296810943826</guid>
      <description>&lt;p&gt;
In my modest and little opinion this implementation is very cool and I don't think that can create issues on WordPress but yes implementing and not using inside the core is not very useful.
The hook system in WordPress is cool because is integrated in the core so the developers can alter the behaviour so have the API and not using is not very useful, because developers can implement on their own a similar api in case.
&lt;/p&gt;
&lt;p&gt;
In any case the NPM package is interesting and probably is the case to evaluate where can be useful this API inside the core (also for Gutenberg). I think inside where there is an huge use of JavaScript like in the media picker, Tinymce, Widget Admin View etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 13 Sep 2017 08:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:29/1505292604291508</guid>
      <description>&lt;p&gt;
@javorszky Yea, Japanese do that to sometimes but it seems like the translations that I checked did not change the order of the term and taxonomy. &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/hu/default?filters%5Bstatus%5D=either&amp;amp;filters%5Boriginal_id%5D=202084&amp;amp;filters%5Btranslation_id%5D=9661611"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/hu/default?filters%5Bstatus%5D=either&amp;amp;filters%5Boriginal_id%5D=202084&amp;amp;filters%5Btranslation_id%5D=9661611&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 08:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:28/1505291108337868</guid>
      <description>&lt;p&gt;
Bear in mind that some LTR languages might have different word orders. English language has a hierarchy of &lt;strong&gt;thing:&lt;/strong&gt; member things, ie "Category: cats"
&lt;/p&gt;
&lt;p&gt;
Hungarian on the other hand (my mothertongue) would potentially display the same as "'macskák' kategória", which translated would be "(the) cats category".
&lt;/p&gt;
&lt;p&gt;
Control over word / concept order is important.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) created</title>
      
        <dc:creator>firebird75</dc:creator>

      <pubDate>Wed, 13 Sep 2017 08:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867/1505289949847072</guid>
      <description>&lt;p&gt;
If via the args, we exclude the only category available in the list, then the SQL query will end up wrongly formated (empty : IN() statement).
&lt;/p&gt;
&lt;p&gt;
See full query here :
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT object_id, term_taxonomy_id FROM wp_term_relationships INNER JOIN wp_posts ON object_id = ID WHERE term_taxonomy_id IN () AND post_type IN
('post') AND post_status = 'publish';
&lt;/pre&gt;&lt;p&gt;
Sample php code :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'taxonomy'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'category'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'child_of'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$queried_object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;category_parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'depth'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'exclude'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$queried_object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cat_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'echo'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'hierarchical'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'hide_empty'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'show_count'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'title_li'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;wp_list_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The solution would be to check if there are other categories to be displayed and if not, then just return the empty result.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:24/1505284885078928</guid>
      <description>&lt;p&gt;
I guess the obvious response to my own question about scope of Webpack is that if Gutenberg is to be merged with its proposed build tooling (Webpack-based), taking steps in core to accommodate this would ease such a transition. A more interesting question to eventually consider then might be: What does this configuration look like when it scales to accommodate building both media and Gutenberg?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:147</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:147/1505284561937368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:27:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:23/1505284057892120</guid>
      <description>&lt;p&gt;
A higher level question:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Maybe not in the scope of what's intended here (simply replacing Browserify), but eventually what role would Webpack seek to serve? For example, the Grunt task for uglification is one which Webpack has built-in support (&lt;code&gt;webpack.optimize.OptimizeJsPlugin&lt;/code&gt;). The devil's advocate question is: if it's just for basic bundling, are we gaining much over Browserify (+Babelify)?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A couple thoughts on the configuration:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;At some point if we start to observe significant overlap between development and production configurations, we might want a more scalable approach to sharing common properties (like a common configuration). Conversely, if this is not something we want to aim for early on, we may not even need the file split right now. Gutenberg, for example, has a single &lt;code&gt;webpack.config.js&lt;/code&gt; which switches on the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to add/modify configuration values. This could help with avoiding redundancy on assigning &lt;code&gt;mediaConfig&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Should &lt;code&gt;watch: true&lt;/code&gt; be assigned into the configuration from &lt;code&gt;Gruntfile.js&lt;/code&gt;, or does that make more sense within the configuration itself?
&lt;/li&gt;&lt;li&gt;We specify &lt;code&gt;stats&lt;/code&gt; dependant on the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; but it doesn't appear we set this &lt;code&gt;NODE_ENV&lt;/code&gt; anywhere, so it seems unnecessary. And even if it did work as expected, would we want nothing to be output for production builds?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A few minor styling quibbles (in Webpack config files):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should we bother with space aligning variable and object property assignment? Especially with comma-delimited variable declarations, it makes the incorrect assumption that a tab occupies four spaces (in Trac patch, it's obvious with the misalignment since it previews tabs at 8 spaces). Also that we have two spaces following the longest variable name in the respective Webpack configurations.
&lt;/li&gt;&lt;li&gt;Should be spaces between array square brackets (&lt;code&gt;mediaBuilds&lt;/code&gt;) and in require calls, and not after function keyword
&lt;/li&gt;&lt;li&gt;&lt;code&gt;module.exports&lt;/code&gt; object should be concluded with a semi-colon.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:18:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:27/1505283501918831</guid>
      <description>&lt;p&gt;
Here are some of the changes that I made:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;changes with the spacing
&lt;/li&gt;&lt;li&gt;fixed a few alignment issues
&lt;/li&gt;&lt;li&gt;improved part of the documentation
&lt;/li&gt;&lt;li&gt;Replaced the large if statement with a smaller one
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@javorszky The order does not need to be able to be changed for RTL. That is automatically done by the browser. Though there maybe some other languages where that may be necessary but I am not sure which ones.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #12423,​38707,​39892 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12423%2C38707%2C39892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12423%2C38707%2C39892/1505282869028686</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;41376&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Add CodeMirror-powered code editor with syntax highlighting, linting, and auto-completion.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Code editor is integrated into the Theme/Plugin Editor, Additional CSS in Customizer, and Custom HTML widget. Code editor is not yet integrated into the post editor, and it may not be until accessibility concerns are addressed.
&lt;/li&gt;&lt;li&gt;The CodeMirror component in the Custom HTML widget is integrated in a similar way to TinyMCE being integrated into the Text widget, adopting the same approach for integrating dynamic JavaScript-initialized fields.
&lt;/li&gt;&lt;li&gt;Linting is performed for JS, CSS, HTML, and JSON via JSHint, CSSLint, HTMLHint, and JSONLint respectively. Linting is not yet supported for PHP.
&lt;/li&gt;&lt;li&gt;When user lacks &lt;code&gt;unfiltered_html&lt;/code&gt; the capability, the Custom HTML widget will report any Kses-invalid elements and attributes as errors via a custom Kses rule for HTMLHint.
&lt;/li&gt;&lt;li&gt;When linting errors are detected, the user will be prevented from saving the code until the errors are fixed, reducing instances of broken websites.
&lt;/li&gt;&lt;li&gt;The placeholder value is removed from Custom CSS in favor of a fleshed-out section description which now auto-expands when the CSS field is empty. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;The CodeMirror library is included as &lt;code&gt;wp.CodeMirror&lt;/code&gt; to prevent conflicts with any existing &lt;code&gt;CodeMirror&lt;/code&gt; global.
&lt;/li&gt;&lt;li&gt;An &lt;code&gt;wp.codeEditor.initialize()&lt;/code&gt; API in JS is provided to convert a &lt;code&gt;textarea&lt;/code&gt; into CodeMirror, with a &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; function in PHP to manage enqueueing the assets and settings needed to edit a given type of code.
&lt;/li&gt;&lt;li&gt;A user preference is added to manage whether or not "syntax highlighting" is enabled. The feature is opt-out, being enabled by default.
&lt;/li&gt;&lt;li&gt;Allowed file extensions in the theme and plugin editors have been updated to include formats which CodeMirror has modes for: &lt;code&gt;conf&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;htm&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;jsx&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;md&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;phtml&lt;/code&gt;, &lt;code&gt;php3&lt;/code&gt;, &lt;code&gt;php4&lt;/code&gt;, &lt;code&gt;php5&lt;/code&gt;, &lt;code&gt;php7&lt;/code&gt;, &lt;code&gt;phps&lt;/code&gt;, &lt;code&gt;scss&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;svg&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;yml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;txt&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props westonruter, georgestephanis, obenland, melchoyce, pixolin, mizejewski, michelleweber, afercia, grahamarmfield, samikeijonen, rianrietveld, iseulde.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38707" title="#38707: enhancement: Customizer: Additional CSS highlight, revisions, selection, per-page, ... (new)"&gt;#38707&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [41376]: Editor: Add CodeMirror-powered code editor with syntax highlighting, ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41376/1505282868024685</guid>
      <description>&lt;p&gt;
Editor: Add CodeMirror-powered code editor with syntax highlighting, linting, and auto-completion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Code editor is integrated into the Theme/Plugin Editor, Additional CSS in Customizer, and Custom HTML widget. Code editor is not yet integrated into the post editor, and it may not be until accessibility concerns are addressed.
&lt;/li&gt;&lt;li&gt;The CodeMirror component in the Custom HTML widget is integrated in a similar way to TinyMCE being integrated into the Text widget, adopting the same approach for integrating dynamic JavaScript-initialized fields.
&lt;/li&gt;&lt;li&gt;Linting is performed for JS, CSS, HTML, and JSON via JSHint, CSSLint, HTMLHint, and JSONLint respectively. Linting is not yet supported for PHP.
&lt;/li&gt;&lt;li&gt;When user lacks &lt;code&gt;unfiltered_html&lt;/code&gt; the capability, the Custom HTML widget will report any Kses-invalid elements and attributes as errors via a custom Kses rule for HTMLHint.
&lt;/li&gt;&lt;li&gt;When linting errors are detected, the user will be prevented from saving the code until the errors are fixed, reducing instances of broken websites.
&lt;/li&gt;&lt;li&gt;The placeholder value is removed from Custom CSS in favor of a fleshed-out section description which now auto-expands when the CSS field is empty. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;The CodeMirror library is included as &lt;code&gt;wp.CodeMirror&lt;/code&gt; to prevent conflicts with any existing &lt;code&gt;CodeMirror&lt;/code&gt; global.
&lt;/li&gt;&lt;li&gt;An &lt;code&gt;wp.codeEditor.initialize()&lt;/code&gt; API in JS is provided to convert a &lt;code&gt;textarea&lt;/code&gt; into CodeMirror, with a &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; function in PHP to manage enqueueing the assets and settings needed to edit a given type of code.
&lt;/li&gt;&lt;li&gt;A user preference is added to manage whether or not "syntax highlighting" is enabled. The feature is opt-out, being enabled by default.
&lt;/li&gt;&lt;li&gt;Allowed file extensions in the theme and plugin editors have been updated to include formats which CodeMirror has modes for: &lt;code&gt;conf&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;htm&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;jsx&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;md&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;phtml&lt;/code&gt;, &lt;code&gt;php3&lt;/code&gt;, &lt;code&gt;php4&lt;/code&gt;, &lt;code&gt;php5&lt;/code&gt;, &lt;code&gt;php7&lt;/code&gt;, &lt;code&gt;phps&lt;/code&gt;, &lt;code&gt;scss&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;svg&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;yml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;txt&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props westonruter, georgestephanis, obenland, melchoyce, pixolin, mizejewski, michelleweber, afercia, grahamarmfield, samikeijonen, rianrietveld, iseulde.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38707" title="#38707: enhancement: Customizer: Additional CSS highlight, revisions, selection, per-page, ... (new)"&gt;#38707&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>38545.6.patch attached to Ticket #38545</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38545/38545.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38545/38545.6.patch/1505282814460433</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:22/1505281967316717</guid>
      <description>&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40894/40894.4.diff" title="Attachment '40894.4.diff' in Ticket #40894"&gt;40894.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40894/40894.4.diff" title="Download"&gt;​&lt;/a&gt; is a refresh &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40894/40894.3.diff" title="Attachment '40894.3.diff' in Ticket #40894"&gt;40894.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40894/40894.3.diff" title="Download"&gt;​&lt;/a&gt; to apply cleanly against trunk (no changes) 👍🏼
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40894.4.diff attached to Ticket #40894</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40894/40894.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40894/40894.4.diff/1505281879995064</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:145/1505281510805137</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have here a core patch in a PR that is now awaiting finalization of the Travis build. Once the jobs finish and it passes, I'm going to commit this to core: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/255/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/255/files&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please open any defects in new tickets.
&lt;/p&gt;
&lt;p&gt;
A few possible things to follow up on:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'm aware that it would be ideal if the CodeMirror bundling logic (via browserify) could be added as part of core. For now, just the minified bundles are being included.
&lt;/li&gt;&lt;li&gt;The linters are being included as separate assets. They are not being minified, other than they are already minified as distributed. These could either benefit from additional uglification or bundling with codemirror if they are not going to be enqueued separately.
&lt;/li&gt;&lt;li&gt;PHPUnit tests should be added for &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; and &lt;code&gt;WP_Widget_Custom_HTML&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;There is no PHP linter yet. This would be a good enhancement. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;While there is an HTMLHint rule which checks for Kses violations, this does not extend to CSSLint and &lt;code&gt;safecss_filter_attr()&lt;/code&gt;. It would be a nice enhancement to get illegal style properties flagged as lint errors as well. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/60"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/60&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Again, these should get opened as separate tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41866 (REST API throws error when displaying an unlimited number of posts in ...) created</title>
      
        <dc:creator>dpsjfveloso1</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41866</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41866/1505280283248684</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
The REST API posts/pages endpoints fails when using a filter to set the &lt;em&gt;posts_per_page&lt;/em&gt; as &lt;em&gt;-1&lt;/em&gt;, it throws a WP_Error, rest_post_invalid_page_number, as the number of max pages, &lt;em&gt;$max_pages&lt;/em&gt;, is negative as the &lt;em&gt;posts_per_page&lt;/em&gt; has a negative value (-1).
&lt;/p&gt;
&lt;p&gt;
The error can be reproduced by applying a filter for the &lt;em&gt;rest_page_query&lt;/em&gt; filter, setting the posts_per_page argument as -1:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_posts_limits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;\WP_REST_Request&lt;/span&gt; &lt;span class="nv"&gt;$restApiRequest&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Let's suppose that we want to remove the number of posts per page as unlimited under certain conditions, and this is the reason why we use this filter
&lt;/span&gt;    &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rest_page_query'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'remove_posts_limits'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The issue is caused due to the way that &lt;em&gt;$max_pages&lt;/em&gt; is set (file /wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php, starts at line 326):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$posts_query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query_vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rest_post_invalid_page_number'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'The page number requested is larger than the number of pages available.'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The simplest solution here would be to use the &lt;em&gt;abs()&lt;/em&gt; after casting &lt;em&gt;posts_per_page&lt;/em&gt; value:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$posts_query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query_vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But the &lt;em&gt;$max_pages&lt;/em&gt; could also be set inside of an if clause, as the value of $max_pages should be one in all cases (this would be a better solution):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;span class="nv"&gt;$posts_per_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$posts_query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query_vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;$posts_per_page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts_per_page&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// It's an unlimited number of posts per page, which means that $max_pages must be 1
&lt;/span&gt;    &lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Thanks,
Jorge
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39679 (Redirect loop on attachment pages) updated</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39679#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39679#comment:5/1505280232841680</guid>
      <description>&lt;p&gt;
@OPunWide, somewhere in either WordPress or your server setting, you‘ve inadvertently used upper case characters in your domain (YourFriendPaul.com should be yourfriendpaul.com everywhere.) From your server headers, it looks like it’s somewhere in WordPress’ configuration. (The following header is produced by WordPress.)
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Location: &lt;a class="ext-link" href="http://YourFriendPaul.com/wp/the-illusion-of-control.html/placebo-like-icon"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://YourFriendPaul.com/wp/the-illusion-of-control.html/placebo-like-icon&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The infinite redirects here are caused by a WordPress bug when comparing an upper-case domain to a lower-case domain. I’m trying to narrow down exactly where this comparison takes place.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For my own situation, I have a reverse proxying server in front of WordPress. Files are fetched from origin.example.com and served as www.example.com. Every other WordPress page gets the correct www.example.com page in every URL. However, for attachment pages there is some strange URL magic going on in redirect_canonical() that reads the server hostname from $_SERVER instead of WP_HOME. This is also a bug. There are a lot of assumptions and mistakes in this code that differs from the rest of Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39679 (Redirect loop on attachment pages) updated</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Wed, 13 Sep 2017 04:46:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39679#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39679#comment:4/1505277997709558</guid>
      <description>&lt;p&gt;
Same exact issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41857 (Walker_PageDropdown doesn't set correct selected value when using ...) updated</title>
      
        <dc:creator>it4life</dc:creator>

      <pubDate>Wed, 13 Sep 2017 04:11:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41857#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41857#comment:3/1505275896133078</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41857#comment:1" title="Comment 1"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not all fields have unique values, like &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;post_name&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
How should non-unique fields be handled?
&lt;/p&gt;
&lt;p&gt;
If the first match is selected, then that would depend on the order - that might be problematic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
About unique field, I have idea to pass &lt;code&gt;selected&lt;/code&gt; and &lt;code&gt;value_field&lt;/code&gt; as callback:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Custom_Walker_PageDropdown&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Walker_PageDropdown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Starts the element output.
         * @param array|string $args {
         *
         *    @type int|string|callable $selected     Value of the option that should be selected.
         *                                            Default 0.
         *                                            Or a callback that return true/false.
         *    @type string|callable     $value_field  Post field or a callback used to populate
         *                                            the 'value' attribute of the option elements.
         *                                            Default 'ID'.
         *
         * @see Walker_PageDropdown
         */&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;start_el&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$depth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$pad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;amp;nbsp;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$depth&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'value_field'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$value_field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'value_field'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value_field&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value_field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$value_field&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$value_field&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;option class=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;level-&lt;/span&gt;&lt;span class="si"&gt;$depth&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; value=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;esc_attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'selected'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'selected'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;' selected="selected"'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="cm"&gt;/* translators: %d: ID of a post */&lt;/span&gt;
                        &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'#%d (no title)'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="sd"&gt;/**
                 * Filters the page title when creating an HTML drop-down list of pages.
                 *
                 * @since 3.1.0
                 *
                 * @param string $title Page title.
                 * @param object $page  Page data object.
                 */&lt;/span&gt;
                &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'list_pages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="nv"&gt;$pad&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;esc_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Usage:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_dropdown_pages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'value_field'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' - '&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'selected'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'blog'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'walker'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Custom_Walker_PageDropdown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41857 (Walker_PageDropdown doesn't set correct selected value when using ...) updated</title>
      
        <dc:creator>it4life</dc:creator>

      <pubDate>Wed, 13 Sep 2017 03:24:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41857#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41857#comment:2/1505273048259923</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41857#comment:1" title="Comment 1"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Welcome to WordPress Trac, @it4life
&lt;/p&gt;
&lt;p&gt;
Can you give an example?
&lt;/p&gt;
&lt;p&gt;
Not all fields have unique values, like &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;post_name&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
How should non-unique fields be handled?
&lt;/p&gt;
&lt;p&gt;
If the first match is selected, then that would depend on the order - that might be problematic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, an example is using with &lt;code&gt;value_field&lt;/code&gt; = &lt;code&gt;post_name&lt;/code&gt; and it doesn't show selected value, as you see the code is only checking selected value by &lt;code&gt;ID&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 02:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:23/1505268851577323</guid>
      <description>&lt;p&gt;
Thanks for the update @Clorith
&lt;/p&gt;
&lt;p&gt;
just few additional ideas/remarks that come to mind:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Table header (optional) ? See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG" title="Attachment 'table-striped.JPG' in Ticket #39165"&gt;table-striped.JPG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/table-striped.JPG" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Striped table for easier read, i.e. alternating odd/even background? See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG" title="Attachment 'table-striped.JPG' in Ticket #39165"&gt;table-striped.JPG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/table-striped.JPG" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;"Not defined" vs "Undefined" (I like the latter more)
&lt;/li&gt;&lt;li&gt;If multisite is active then what about an extra multisite table?
&lt;/li&gt;&lt;li&gt;Table Of Contents - for easier navigation? (horizontal or vertical)
&lt;/li&gt;&lt;li&gt;"Go to the top of the document" links?
&lt;/li&gt;&lt;li&gt;How to close the copy&amp;amp;paste field again?
&lt;/li&gt;&lt;li&gt;Mention that the private info is excluded in the copy&amp;amp;paste field?
&lt;/li&gt;&lt;li&gt;Add WP_MEMORY_LIMIT ?
&lt;/li&gt;&lt;li&gt;Could we avoid constants like TEMPLATEPATH and WP_PLUGIN_DIR in favor of functions?
&lt;/li&gt;&lt;li&gt;The "Active theme" is included in "Other themes" (exclude it there?)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>table-striped.JPG attached to Ticket #39165</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 01:58:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG/1505267917329523</guid>
      <description>&lt;p&gt;
Example screenshot: striped + header
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41865 (Have not received response at Hackerone) created</title>
      
        <dc:creator>zhk</dc:creator>

      <pubDate>Wed, 13 Sep 2017 00:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41865</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41865/1505263907532689</guid>
      <description>&lt;p&gt;
Hi team,
I've submit a security at Hackerone, 5 days passed, but I have not received any response again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Wed, 13 Sep 2017 00:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:12/1505261497221483</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Wed, 13 Sep 2017 00:11:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:11/1505261482626780</guid>
      <description>&lt;p&gt;
@jbpaul17, sure. It's good to go as soon as someone can commit it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>