<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:25/1461969854602656</guid>
      <description>&lt;p&gt;
@jdgrimes thank you for that information. How does &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28216/28216.8.fallback.diff" title="Attachment '28216.8.fallback.diff' in Ticket #28216"&gt;28216.8.fallback.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28216/28216.8.fallback.diff" title="Download"&gt;​&lt;/a&gt; look for providing a fallback in the case where &lt;code&gt;spl_object_hash()&lt;/code&gt; is not available? It takes a somewhat similar approach as &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>28216.8.fallback.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:42:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.8.fallback.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.8.fallback.diff/1461969777013413</guid>
      <description>&lt;p&gt;
Provide fallback if spl_object_hash() is not available
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:5/1461969203469489</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Don't think this error has anything to do with the editor. There is no &lt;code&gt;coerce&lt;/code&gt; anywhere in there.
&lt;/p&gt;
&lt;p&gt;
Looks like this may be an error in the media modal (media-audiovideo.js or media-editor.js) most likely caused by wrong loading order. Perhaps look at the call trace on the first error, and open a new ticket if you can reliably reproduce it with all plugins disabled and a default theme.
&lt;/p&gt;
&lt;p&gt;
Leaving this open for now, waiting for more feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>jpdavoutian</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:2/1461968593675031</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the quick reply.
&lt;/p&gt;
&lt;p&gt;
Yes, I have seen the plugins you suggest.
There are a couple of issues with them.
&lt;/p&gt;
&lt;p&gt;
First of all they deal only with search results and not the wordpress queries in general.
&lt;/p&gt;
&lt;p&gt;
Secondly, you can see that the posts_request filter actually is returning an sql statement that is dummy.
&lt;a class="ext-link" href="https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L336"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L336&lt;/a&gt;
Although this approach is clever, it actually hits the database for nothing.
&lt;/p&gt;
&lt;p&gt;
But the most serious issue in my opinion is that it does not allow to intercept queries when we request only post ids. You simply cannot do it.
Many plugins make use of such queries and there is no way these queries to be served from solr or any other similar service.
&lt;/p&gt;
&lt;p&gt;
By having one more filter in wp-includes/query.php and a few more checks in code, we could actually generalize the use of search services without affecting or rewriting other plugins.
I have placed an action in wp-includes/query.php, line 3548
$this-&amp;gt;is_external_query = apply_filters_ref_array( 'posts_query_external', array( $this-&amp;gt;request, &amp;amp;$this ) );
and later on I just check the $this-&amp;gt;is_external_query to if I need to count posts or other stuff.
&lt;/p&gt;
&lt;p&gt;
I'm already working on such a case (woocommerce layered navigation) and have great success till now and the performance improvement is huge.
There are of course some minor issues I haven't solved yet and maybe cases I can't even think of, since my experience in wordpress is limited (that's why I haven't uploaded any code yet).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) updated</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 22:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:4/1461967835841340</guid>
      <description>&lt;p&gt;
Also enabling editor in custom post type definition and disabling call to wp_editor seems to work. It does make the CPT edit post screen look absolutely terrible, but at least it works. I've implemented this as a for-now fix for my plugin, but I'd really like it if wp_editor worked or was deprecated. Or to hear from other plugin authors about any work-around for the apparent breakage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:24/1461966470222822</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/28216#comment:20" title="Comment 20"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@PeterRKnight How fortunate that &lt;code&gt;spl_object_hash()&lt;/code&gt; is available in PHP 5.2! However, I see it is used in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; but has an alternate case for handling if the function is not defined. This worried me in that perhaps the function could be disabled in 5.2. But see &lt;a href="https://core.trac.wordpress.org/ticket/21267#comment:4"&gt;#21267&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since PHP 5.2 (the required version for WP is 5.2.4), &lt;code&gt;spl_object_hash&lt;/code&gt; exists, which means the &lt;code&gt;else&lt;/code&gt; statement and &lt;code&gt;function_exists()&lt;/code&gt; check are completely useless in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I think we're safe.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The reason that the &lt;code&gt;function_exists()&lt;/code&gt; check is needed is that the SPL extension can be disabled prior to PHP 5.3.0. So in 5.2.0 it is on by default but &lt;a class="ext-link" href="https://secure.php.net/manual/en/spl.installation.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;prior to 5.3.0 it can be disabled&lt;/a&gt;. In which case the functions that it provides wouldn't be available.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) updated</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:35:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:3/1461965725150071</guid>
      <description>&lt;p&gt;
OS: Ubuntu 16.04
Browser: Google Chrome (official google repo's stable) Version 50.0.2661.94 (64-bit), problem also persists in Firefox from 16.04 repo's v46.0, and Opera v36.0.2130.65 (yet to test in windows)
&lt;/p&gt;
&lt;p&gt;
Confirmed Windows 10 64-bit
Google Chrome 49.0.2623.112 (Official Build) m (32-bit)
Mozilla Firefox 45.0.1 and 46.0
Internet Explorer Edge (latest)
&lt;/p&gt;
&lt;p&gt;
WordPress Version 4.5 (for some reason it's not a listed version in the select box)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2016-04-29 22-27-49.png attached to Ticket #33421</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:34:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33421/Screenshot%20from%202016-04-29%2022-27-49.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33421/Screenshot%20from%202016-04-29%2022-27-49.png/1461965657362248</guid>
      <description>&lt;p&gt;
Screenshot of error in chrome console
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33421 (wp_editor with custom editor_id not working) reopened</title>
      
        <dc:creator>LewisCowles</dc:creator>

      <pubDate>Fri, 29 Apr 2016 21:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33421#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33421#comment:2/1461965608688615</guid>
      <description>&lt;p&gt;
I'm sure this bug is about more than square braces. I have the same error, without curly braces in 4.5, with code that worked in 4.4...
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;?php wp_editor( wpautop(stripslashes($post-&amp;gt;post_content)), 'content', ['media_buttons'=&amp;gt;false,'textarea_name'=&amp;gt;'content','dfw'=&amp;gt;true,'tiny_mce'=&amp;gt;true,'drag_drop_upload'=&amp;gt;true] ); ?&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This code exists within my view, $post is sent to the view, and I can confirm that the textarea has the post's content, but the wp_editor has JS errors (i'll add an attachment also for this)
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36687 (Feature to override WP_Query to provide results from other source) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 20:40:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36687#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36687#comment:1/1461962433325764</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jpdavoutian - Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
It would be helpful to hear more about how you think this feature would be implemented, and how you'd use it. There are a number of plugins doing something similar to what you've suggested, and they're "tricking" &lt;code&gt;WP_Query&lt;/code&gt; into fetching content from elsewhere using the &lt;code&gt;posts_request&lt;/code&gt; and &lt;code&gt;the_posts&lt;/code&gt; filters. See eg &lt;a class="ext-link" href="https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L55"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/10up/ElasticPress/blob/develop/classes/class-ep-wp-query-integration.php#L55&lt;/a&gt; Can you say more about how your approach would differ, and what advantages it would offer beyond these existing techniques?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 20:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:5/1461962223543050</guid>
      <description>&lt;p&gt;
@spacedmonkey I agree that it makes sense to move toward centralizing term-related queries, yes. Let's not do that in this specific ticket, but let's keep it in mind to make sure that the architectural decisions made here don't preclude the kind of improvements you're talking about.
&lt;/p&gt;
&lt;p&gt;
@flixos90 This is really excellent. Thanks for working on it.
&lt;/p&gt;
&lt;p&gt;
Running &lt;code&gt;$ phpunit --group taxonomy&lt;/code&gt;, a bunch of stuff is failing. Most of the notices appear to be due to some variable names that weren't changed properly, but there also appears to be a bunch of tests related to hierarchical terms that are related to each other. I haven't had a chance to debug this in detail.
&lt;/p&gt;
&lt;p&gt;
Most of your improvements sound worth considering, but I'm concerned about doing them all at once, especially in the absence of unit tests that describe the issues:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I also added a $suppress_filters argument which should probably (when active) disable more filters than it currently does in this implementation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The only place where we currently have this feature is in &lt;code&gt;WP_Query&lt;/code&gt;. I think we need a separate ticket to discuss whether it's a feature that we need here, and if so, how it should behave.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I found a bug that is possible to happen even in current versions of WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is pretty complicated, and I'm very wary of touching it without tests. I suggest we fix it separately, either before or after &lt;code&gt;WP_Term_Query&lt;/code&gt;. I wonder whether your fix is related to the unit test failures we're seeing. (It sounds like the fix might be straightforward enough to do *before* and then include in a refreshed patch here, but I'd like to hear what you think about it.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another problem in my opinion is the get_terms_fields filter. Since this class always queries for IDs (or a count), using the get_terms_fields filter to modify the requested fields in any way will most probably mess up the query
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah. I'm not a fan of this filter, or 'fields' arguments in general, since they tend to result in cache misses. I would imagine that most people using the filter are doing it to remove fields from the &lt;code&gt;SELECT&lt;/code&gt; statement, in which case there are no real compatibility concerns. However, it's possible that people are using it to *add* fields, possibly related to another table (which would be joined in another filter like 'terms_clauses'). This needs research before we make a decision. A search through the plugin repo is probably a good place to start, as is some reading on the backstory behind 'get_terms_fields' and friends. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9004" title="#9004: defect (bug): More filtering in get_terms() and wp_generate_tag_cloud() (closed: fixed)"&gt;#9004&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@flixos90 If you're able to debug the unit test issues and perhaps address some of the items above, that would be great. This ticket is something I would like to prioritize for 4.6, and I'll be able to dedicate time to refining the patch, but not until next week.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36295 (Docs: Add phpdocs for WP_Feed_Cache, WP_Feed_Cache_Transient, ...) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36295#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36295#comment:6/1461958002637630</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @ramiy,
&lt;/p&gt;
&lt;p&gt;
I've made a few changes through my update, (&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36295/36295.2.diff" title="Attachment '36295.2.diff' in Ticket #36295"&gt;attachment:36295.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36295/36295.2.diff" title="Download"&gt;​&lt;/a&gt;).  Here are a few suggestions for upcoming patches.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Naming your patch after the ticket it relates to will help other contributors to keep track of the many patches they see.
&lt;/li&gt;&lt;li&gt;When patches are submitted relative to the &lt;code&gt;/src/&lt;/code&gt; directory, it's a good indication that the patch author is aware of unit testing.  In this document patch, it's less important, but it's good practice.
&lt;/li&gt;&lt;li&gt;@access values are only necessary for class methods if the class method is private. See &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#1-functions-class-methods"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHP Documentation Standards&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;@since values can be a little tricky to trace back.  I checked out the entire &lt;code&gt;/tags/&lt;/code&gt; directory from the WordPress SVN and then used ACK to search for the first instance of a string.  Something like this:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;$ svn co https://core.svn.wordpress.org/tags/ core
$ cd core
$ ack -1 "class WP_SimplePie_Sanitize_KSES extends SimplePie_Sanitize"
3.5/wp-includes/class-feed.php
105:class WP_SimplePie_Sanitize_KSES extends SimplePie_Sanitize {
&lt;/pre&gt;&lt;p&gt;
In this example, the class was introduced in 3.5.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36533 (Doesn't work browse media libary on Frontend) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36533#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36533#comment:29/1461957827166274</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1461957825000129"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:15:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:39/1461957316170227</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1461957312000112"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36295.2.diff attached to Ticket #36295</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36295/36295.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36295/36295.2.diff/1461957067396979</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36588 (Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 19:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36588#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36588#comment:3/1461957019919409</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36587" title="#36587: defect (bug): PHPUnit Tests fail with PHP7 and Imagick 3.4.x (closed: fixed)"&gt;#36587&lt;/a&gt; addresses the error handler concerns with &lt;code&gt;ImageMagick&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36657 (Live Responsive Preview buttons not aligned) updated</title>
      
        <dc:creator>zarkod</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:57:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36657#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36657#comment:7/1461956252788204</guid>
      <description>&lt;p&gt;
@celloexpressions must be some plugin conflict, good on fresh install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35990 (Registering a custom post type should create a Recent CPT posts widget type) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:49:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35990#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35990#comment:6/1461955779567959</guid>
      <description>&lt;p&gt;
With &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37329" title="Widgets: Allow `WP_Widget` subclass instances (objects) to be ..."&gt;[37329]&lt;/a&gt;, the approach in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35990/35990.0.diff" title="Attachment '35990.0.diff' in Ticket #35990"&gt;35990.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35990/35990.0.diff" title="Download"&gt;​&lt;/a&gt; should now be viable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #28216,​35990 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=28216%2C35990</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=28216%2C35990/1461955708657814</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37329" title="Widgets: Allow `WP_Widget` subclass instances (objects) to be ..."&gt;37329&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Allow &lt;code&gt;WP_Widget&lt;/code&gt; subclass instances (objects) to be registered/unregistered in addition to &lt;code&gt;WP_Widget&lt;/code&gt; subclass names (strings).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Allows widgets to be registered which rely on dependency injection. Also will allow for new widget types to be created dynamically (e.g. a Recent Posts widget for each registered post type).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35990" title="#35990: feature request: Registering a custom post type should create a Recent CPT posts widget type (new)"&gt;#35990&lt;/a&gt;.&lt;br /&gt;
Props mdwheele, PeterRKnight, westonruter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28216" title="#28216: defect (bug): Allow to register pre-instantiated widgets (closed: fixed)"&gt;#28216&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37329]: Widgets: Allow `WP_Widget` subclass instances (objects) to be ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37329</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37329/1461955707973095</guid>
      <description>&lt;p&gt;
Widgets: Allow &lt;code&gt;WP_Widget&lt;/code&gt; subclass instances (objects) to be registered/unregistered in addition to &lt;code&gt;WP_Widget&lt;/code&gt; subclass names (strings).
&lt;/p&gt;
&lt;p&gt;
Allows widgets to be registered which rely on dependency injection. Also will allow for new widget types to be created dynamically (e.g. a Recent Posts widget for each registered post type).
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35990" title="#35990: feature request: Registering a custom post type should create a Recent CPT posts widget type (new)"&gt;#35990&lt;/a&gt;.
Props mdwheele, PeterRKnight, westonruter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28216" title="#28216: defect (bug): Allow to register pre-instantiated widgets (closed: fixed)"&gt;#28216&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>28216.7.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:38:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.7.diff/1461955101681849</guid>
      <description>&lt;p&gt;
Test registering multiple instances of the same class
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>28216.6.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:24:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.6.diff/1461954262076729</guid>
      <description>&lt;p&gt;
Fix docs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36295 (Docs: Add phpdocs for WP_Feed_Cache, WP_Feed_Cache_Transient, ...) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Fri, 29 Apr 2016 18:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36295#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36295#comment:5/1461953978506508</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36295#comment:4" title="Comment 4"&gt;ramiy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@stevenkword @DrewAPicture,
&lt;/p&gt;
&lt;p&gt;
How can I find out in which version the class/method/property was added?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@ramiy
I'm working right now on getting a process in place for this.  I'll let you know my steps as soon as I get it worked out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36588 (Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 17:51:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36588#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36588#comment:2/1461952315518449</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37328" title="Media/Unit Tests: ensure that image sizes are indeed removed when ..."&gt;37328&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media/Unit Tests: ensure that image sizes are indeed removed when errors are raised before assertions in &lt;code&gt;Tests_Media&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37328]: Media/Unit Tests: ensure that image sizes are indeed removed when ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 17:51:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37328</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37328/1461952314769233</guid>
      <description>&lt;p&gt;
Media/Unit Tests: ensure that image sizes are indeed removed when errors are raised before assertions in &lt;code&gt;Tests_Media&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 16:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:20/1461947378952523</guid>
      <description>&lt;p&gt;
Just did some very basic profiling on a medium-sized site with about a dozen plugins. There were 4 scenarios:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;No patch, en_US
&lt;/li&gt;&lt;li&gt;No patch, de_DE
&lt;/li&gt;&lt;li&gt;Patch applied, en_US
&lt;/li&gt;&lt;li&gt;Patch applied, de_DE
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All plugins had de_DE translation files, so for the tests with the patch applied I removed all the &lt;code&gt;load_plugin_textdomain()&lt;/code&gt; calls. What I noticed
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When using de_DE (no patch applied), the site was 30ms slower in average, using about 10MB more memory.
&lt;/li&gt;&lt;li&gt;When using en_US (patch applied), load time and memory consumption was identical, not real changes there
&lt;/li&gt;&lt;li&gt;When using de_DE (patch applied), load time was identical as without the patch, memory consumption went down by 1MB.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So, to sum this up, nothing really changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36588 (Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 16:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36588#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36588#comment:1/1461946538449115</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37327" title="Media/Unit Tests: ensure that the GD absrtraction is used for GD unit ..."&gt;37327&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media/Unit Tests: ensure that the GD absrtraction is used for GD unit tests for Images. Some of the procedural GD API functions can still throw &lt;code&gt;ImagickException&lt;/code&gt;, which is fun.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [37327]: Media/Unit Tests: ensure that the GD absrtraction is used for GD unit ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 16:15:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37327</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37327/1461946537928275</guid>
      <description>&lt;p&gt;
Media/Unit Tests: ensure that the GD absrtraction is used for GD unit tests for Images. Some of the procedural GD API functions can still throw &lt;code&gt;ImagickException&lt;/code&gt;, which is fun.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36588" title="#36588: defect (bug): Test_Image_Resize_GD::test_resize_bad_image() doesn't use GD (closed: fixed)"&gt;#36588&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:58:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:8/1461945535072027</guid>
      <description>&lt;p&gt;
Thanks @jeremyfelt!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36722 (No way to access media "Attachment Display Settings" using wp.media) created</title>
      
        <dc:creator>chattyboy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36722</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36722/1461945347789667</guid>
      <description>&lt;p&gt;
I am using custom wp.media request to get WP Media uploader iframe on front end.
&lt;/p&gt;
&lt;p&gt;
Added scripts, styles and media:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script('jquery');
wp_enqueue_media();
wp_enqueue_style( 'wp-admin' );
&lt;/pre&gt;&lt;p&gt;
then I am using JS to open the Media iframe:
&lt;/p&gt;
&lt;pre class="wiki"&gt;var custom_uploader;
jQuery(document).ready(function($){
	if (custom_uploader) {custom_uploader.open();return;}
	var parent_container = parent.document.body;
	custom_uploader = wp.media.frames.file_frame = wp.media({
		frame: 'post',
		state: 'insert',
		title: 'Choose Image',
		library : {type:'image'},
		button: {text: 'Choose Image'},
		multiple: false
	});
	custom_uploader.on('insert',function(){
		var attachment = custom_uploader.state().get('selection').first().toJSON();
		console.log( attachment );
	});
	custom_uploader.open();
});
&lt;/pre&gt;&lt;p&gt;
after selecting needed image, link and size I get the result:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"id":2182,"title":"WordPress","filename":"WordPress.jpg","url":"http://localhost:8080/mgwebthemes.com/uploads/2015/05/WordPress.jpg","link":"http://localhost:8080/mgwebthemes.com/wordpress/","alt":"","author":"1","description":"","caption":"","name":"WordPress","status":"inherit","uploadedTo":2166,"date":"2015-05-13T09:09:47.000Z","modified":"2015-05-13T09:09:47.000Z","menuOrder":0,"mime":"image/jpeg","type":"image","subtype":"jpeg","icon":"http://localhost:8080/mgwebthemes.com/wp-includes/images/media/default.png","dateFormatted":"13/05/2015","nonces":{"update":"2d7619f512","delete":"725c6d8639","edit":"709844b592"},"editLink":"http://localhost:8080/mgwebthemes.com/wp-admin/post.php?post=2182&amp;amp;action=edit","meta":false,"authorName":"admin","uploadedToLink":"http://localhost:8080/mgwebthemes.com/wp-admin/post.php?post=2166&amp;amp;action=edit","uploadedToTitle":"Test","filesizeInBytes":8990,"filesizeHumanReadable":"9 kB","sizes":{"thumbnail":{"height":150,"width":150,"url":"http://localhost:8080/mgwebthemes.com/uploads/2015/05/WordPress-150x150.jpg","orientation":"landscape"},"full":{"url":"http://localhost:8080/mgwebthemes.com/uploads/2015/05/WordPress.jpg","height":249,"width":201,"orientation":"portrait"}},"height":249,"width":201,"orientation":"portrait",...}
&lt;/pre&gt;&lt;p&gt;
it does not contain any Attachment Display Settings options.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #31746,​36707 batch updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=31746%2C36707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=31746%2C36707/1461945154769699</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37326" title="Multisite: Add the `pre_get_blogs_of_user` filter
This allows a ..."&gt;37326&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Add the &lt;code&gt;pre_get_blogs_of_user&lt;/code&gt; filter&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This allows a plugin to short circuit &lt;code&gt;get_blogs_of_user()&lt;/code&gt; in cases where the default behavior of the function is unnecessary or slow. (e.g. A user is a member of thousands of sites.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jsternberg.&lt;br /&gt;
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31746" title="#31746: defect (bug): get_blogs_of_user() can be very slow when a user is a member of ... (reviewing)"&gt;#31746&lt;/a&gt;, Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36707" title="#36707: enhancement: Add pre_get_blogs_of_user filter. (closed: fixed)"&gt;#36707&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37326]: Multisite: Add the `pre_get_blogs_of_user` filter  This allows a ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:52:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37326</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37326/1461945154268582</guid>
      <description>&lt;p&gt;
Multisite: Add the &lt;code&gt;pre_get_blogs_of_user&lt;/code&gt; filter
&lt;/p&gt;
&lt;p&gt;
This allows a plugin to short circuit &lt;code&gt;get_blogs_of_user()&lt;/code&gt; in cases where the default behavior of the function is unnecessary or slow. (e.g. A user is a member of thousands of sites.)
&lt;/p&gt;
&lt;p&gt;
Props jsternberg.
See &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31746" title="#31746: defect (bug): get_blogs_of_user() can be very slow when a user is a member of ... (reviewing)"&gt;#31746&lt;/a&gt;, Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36707" title="#36707: enhancement: Add pre_get_blogs_of_user filter. (closed: fixed)"&gt;#36707&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36571 (Add `$comment` parameter to `get_comment_author_email_link()`) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36571#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36571#comment:6/1461944975987138</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
#needs-unit-tests - there currently are none
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35433 (Walker_Comment::comment calls comment_text which forces the comment to ...) closed</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35433#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35433#comment:6/1461944800293649</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37325" title="Comments: pass `$comment` to `comment_text()` in ..."&gt;37325&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: pass &lt;code&gt;$comment&lt;/code&gt; to &lt;code&gt;comment_text()&lt;/code&gt; in &lt;code&gt;Walker_Comment::comment()&lt;/code&gt; instead of using a function which can skip the cache.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35433" title="#35433: defect (bug): Walker_Comment::comment calls comment_text which forces the comment to ... (closed: fixed)"&gt;#35433&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37325]: Comments: pass `$comment` to `comment_text()` in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37325</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37325/1461944799568978</guid>
      <description>&lt;p&gt;
Comments: pass &lt;code&gt;$comment&lt;/code&gt; to &lt;code&gt;comment_text()&lt;/code&gt; in &lt;code&gt;Walker_Comment::comment()&lt;/code&gt; instead of using a function which can skip the cache.
&lt;/p&gt;
&lt;p&gt;
Props rachelbaker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35433" title="#35433: defect (bug): Walker_Comment::comment calls comment_text which forces the comment to ... (closed: fixed)"&gt;#35433&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 29 Apr 2016 15:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:6/1461944616594964</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36707#comment:5" title="Comment 5"&gt;jtsternberg&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we start with &lt;code&gt;false&lt;/code&gt; instead and allow for the return of an empty array?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually yah, that seems like a good idea, though it probably should be &lt;code&gt;null&lt;/code&gt; in keeping with the precedent of other &lt;code&gt;'pre_*&lt;/code&gt; filters in WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, it looks like the static variable is a no-go?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For this ticket, yes. We can continue discussing improvements to &lt;code&gt;get_blogs_of_user()&lt;/code&gt; on &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31746" title="#31746: defect (bug): get_blogs_of_user() can be very slow when a user is a member of ... (reviewing)"&gt;#31746&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 29 Apr 2016 14:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:5/1461941487076889</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Feel free to reopen with steps to reproduce on a clean install if it turns out to be a bug in WordPress core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36721 (Add secondary location for plugins and/or themes.) created</title>
      
        <dc:creator>scotthack</dc:creator>

      <pubDate>Fri, 29 Apr 2016 14:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36721</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36721/1461941036005348</guid>
      <description>&lt;p&gt;
I run my sites on my own dedicated box.  I have about 60 WordPress installs running on the site and about 2 years ago I slowly started migrating all of the sites into a multi-tenant install.  It has been working really, really well, and has made updating the sites a lot easier, etc.  I've also been doing the same thing by symlinking plugin directories inside the wp-content/plugins directory.  However, ideally, I'd like to be able to add a line to the wp-config file with a secondary location of plugins that I could universally install on my sites.  Then I wouldn't need to create the symlinked folders on a site by site basis.  It would also add the ability to easily add a new plugin to all 60 sites without much fuss.  I don't want to move the location of my plugins folder.  I want to add a secondary location, so I can have plugins installed still in wp-content/plugins but also pull from another area.  An internal library of sorts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #30866 (wordpress-Importer plugin xml parser unit testing fail.) updated</title>
      
        <dc:creator>ianmjones</dc:creator>

      <pubDate>Fri, 29 Apr 2016 14:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30866#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30866#comment:7/1461940659027220</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch 30866.2.patch still applies and works on 4.6.
&lt;/p&gt;
&lt;p&gt;
Without it, running unit tests on MAMP fail.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14584 (HTML entities in category and tag elements) updated</title>
      
        <dc:creator>ianmjones</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:56:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14584#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14584#comment:6/1461938184291383</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The importer requires that the CDATA contain data in the same format that will be inserted into the database, which means html entity encoded characters are required.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14584.patch attached to Ticket #14584</title>
      
        <dc:creator>ianmjones</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14584/14584.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14584/14584.patch/1461937867194716</guid>
      <description>&lt;p&gt;
Refreshed for 4.6, replaced commented out red-herring code with explanation of why encoded html entities are in CDATA.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) closed</title>
      
        <dc:creator>pubblivori</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:15:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:4/1461935734814243</guid>
      <description>invalid: &lt;p&gt;
probable that is my problem.... since I'm not a developer and is hard to figure out what the problem is. the only thing I know that was running just before the upgrade...and after that no more...
I close this report by now.....thanyou for your patience....
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36295 (Docs: Add phpdocs for WP_Feed_Cache, WP_Feed_Cache_Transient, ...) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:15:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36295#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36295#comment:4/1461935705971560</guid>
      <description>&lt;p&gt;
@stevenkword @DrewAPicture,
&lt;/p&gt;
&lt;p&gt;
How can I find out in which version the class/method/property was added?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #24884,​36718 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=24884%2C36718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=24884%2C36718/1461935660031400</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37324" title="Query: Discard non-scalar 'm' instead of attempting to sanitize.
 ..."&gt;37324&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Discard non-scalar 'm' instead of attempting to sanitize.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Query&lt;/code&gt; discards most non-array date values ('year', 'monthnum', etc) by&lt;br /&gt;
casting to integer. Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;, the 'm' parameter has been handled&lt;br /&gt;
as a string; see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24884" title="#24884: defect (bug): WP_Query's &amp;#34;m&amp;#34; parameter is cast to an int which is a problem due to ... (closed: fixed)"&gt;#24884&lt;/a&gt;. However, the string-handling introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;&lt;br /&gt;
blindly attempted to handle arrays and other non-scalar types as strings,&lt;br /&gt;
resulting in PHP notices and invalid MySQL syntax.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props vortfu.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36718" title="#36718: defect (bug): WP_Query::parse_query does not handle the &amp;#34;m&amp;#34; param correctly (closed: fixed)"&gt;#36718&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [37324]: Query: Discard non-scalar 'm' instead of attempting to sanitize.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37324</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37324/1461935658788690</guid>
      <description>&lt;p&gt;
Query: Discard non-scalar 'm' instead of attempting to sanitize.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Query&lt;/code&gt; discards most non-array date values ('year', 'monthnum', etc) by
casting to integer. Since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;, the 'm' parameter has been handled
as a string; see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24884" title="#24884: defect (bug): WP_Query's &amp;#34;m&amp;#34; parameter is cast to an int which is a problem due to ... (closed: fixed)"&gt;#24884&lt;/a&gt;. However, the string-handling introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;[25138]&lt;/a&gt;
blindly attempted to handle arrays and other non-scalar types as strings,
resulting in PHP notices and invalid MySQL syntax.
&lt;/p&gt;
&lt;p&gt;
Props vortfu.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36718" title="#36718: defect (bug): WP_Query::parse_query does not handle the &amp;#34;m&amp;#34; param correctly (closed: fixed)"&gt;#36718&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36718 (WP_Query::parse_query does not handle the "m" param correctly) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Fri, 29 Apr 2016 13:05:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36718#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36718#comment:2/1461935140686361</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the patch!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27282 (WP_Query returns more results when there are sticky posts) updated</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27282#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27282#comment:16/1461934154663453</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27282#comment:14" title="Comment 14"&gt;Trimension&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This simple design change would also bring some more benefits, because as a Post-Property it doesn't need the restriction to be only available in normal Posts but also in CPT's and it would also improve the performance because one query is better than two, Right ?!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It means a migration script which updates all concerned posts before cleaning the options table.
&lt;/p&gt;
&lt;p&gt;
Maybe @bendoh 's patch can be applied while a new ticket is created to change the design.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;stop the bug
&lt;/li&gt;&lt;li&gt;redesign and migrate
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36720 (WP_Query should not return more than "posts_per_page" if ...) updated</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36720#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36720#comment:3/1461933534667351</guid>
      <description>&lt;p&gt;
Thank you.
I could not find the original
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:3/1461933234087407</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;code&gt;get_post_meta()&lt;/code&gt; is used plenty of times in core and by many plugins out there. So far this is the first report about &lt;code&gt;get_post_meta()&lt;/code&gt; not working anymore in 4.5. Hence I'm pretty sure it's not a bug in WordPress itself.
&lt;/p&gt;
&lt;p&gt;
Does your problem still exist with all plugins disabled and using one of the default themes?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #27282,​36720 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27282%2C36720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27282%2C36720/1461933063640404</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Thanks for your report! Looks like this is already being tracked in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27282" title="#27282: defect (bug): WP_Query returns more results when there are sticky posts (new)"&gt;#27282&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>pubblivori</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:2/1461933051458691</guid>
      <description>&lt;p&gt;
I'm still doing some tests... but the fact is that a function using it stopped working after the upgrade...
I have to do te same reverse test into another site using the previous wp version. If the outuput is not the same.... something went wrong....
&lt;/p&gt;
&lt;pre class="wiki"&gt;Here the piece of code isolated:
//$vecchia_scheda = get_post_meta( 68846, 'vecchia_scheda', true ); //not working after upgrade
$custom_fields = get_post_custom(68846);
$vecchia_scheda = $custom_fields['vecchia_scheda'][0];
//mod working
$vecchio_slug= get_post_field( 'post_name', $vecchia_scheda );
$nuovo_slug= get_post_field( 'post_name', $ID );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36720 (WP_Query should not return more than "posts_per_page" if ...) updated</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:29:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36720#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36720#comment:1/1461932970793781</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36720 (WP_Query should not return more than "posts_per_page" if ...) created</title>
      
        <dc:creator>bastho</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36720</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36720/1461932890868992</guid>
      <description>&lt;p&gt;
Case seen on a website containing 2849 posts where 2479 are sticky.
&lt;/p&gt;
&lt;p&gt;
calling from the home page:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post__not_in'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
returns 2479 posts while:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'order'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'DESC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'orderby'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'posts_type'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'ignore_sticky_posts'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="s1"&gt;'post__not_in'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
returns only 4 posts.
&lt;/p&gt;
&lt;p&gt;
For an unknown reason, the limit is not applied on stickies.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) updated</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Fri, 29 Apr 2016 12:12:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719#comment:1/1461931922508216</guid>
      <description>&lt;p&gt;
more information ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36719 (get_post_meta) created</title>
      
        <dc:creator>pubblivori</dc:creator>

      <pubDate>Fri, 29 Apr 2016 11:19:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36719</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36719/1461928741517610</guid>
      <description>&lt;p&gt;
After upgrade to 4.5.1 (from 4.4.2) the get_post_meta function stopped working.
I've made some tests with get_post_custom and seems working.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36718 (WP_Query::parse_query does not handle the "m" param correctly) updated</title>
      
        <dc:creator>vortfu</dc:creator>

      <pubDate>Fri, 29 Apr 2016 10:35:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36718#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36718#comment:1/1461926133688024</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36718.patch attached to Ticket #36718</title>
      
        <dc:creator>vortfu</dc:creator>

      <pubDate>Fri, 29 Apr 2016 10:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36718/36718.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36718/36718.patch/1461926098027159</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36718 (WP_Query::parse_query does not handle the "m" param correctly) created</title>
      
        <dc:creator>vortfu</dc:creator>

      <pubDate>Fri, 29 Apr 2016 10:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36718</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36718/1461926052837176</guid>
      <description>&lt;p&gt;
The fix for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24884" title="#24884: defect (bug): WP_Query's &amp;#34;m&amp;#34; parameter is cast to an int which is a problem due to ... (closed: fixed)"&gt;#24884&lt;/a&gt; (in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25138" title="Don't cast the 'm' query variable to an integer as the value can ..."&gt;r25138&lt;/a&gt;) introduced a bug where &lt;code&gt;WP_Query::parse_query()&lt;/code&gt; allows the &lt;code&gt;m&lt;/code&gt; param to be passed as a non scalar type - leading to a potential SQL query error in &lt;code&gt;WP_Query::get_posts()&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
wp&amp;gt; $q = new WP_Query( [ 'm' =&amp;gt; [ 123 ] ] );
wp&amp;gt; $q-&amp;gt;get_posts();
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 1689
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 1691
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 1693
Warning: substr() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2627
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2628
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2630
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2632
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2634
Warning: strlen() expects parameter 1 to be string, array given in ./wp-includes/query.php on line 2636
&lt;/p&gt;
&lt;p&gt;
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish')  ORDER BY' at line 1 for query SELECT SQL_CALC_FOUND_ROWS  wp_posts.ID FROM wp_posts  WHERE 1=1  AND &lt;strong&gt;YEAR(wp_posts.post_date)= &lt;/strong&gt;AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish')  ORDER BY wp_posts.post_date DESC LIMIT 0, 10 ...
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 08:09:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717#comment:1/1461917375530550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36717/36717.diff" title="Attachment '36717.diff' in Ticket #36717"&gt;36717.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36717/36717.diff" title="Download"&gt;​&lt;/a&gt; is a patch that adds the necessary magic methods to &lt;code&gt;WP_Site&lt;/code&gt; and &lt;code&gt;WP_Network&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36717.diff attached to Ticket #36717</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 08:08:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36717/36717.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36717/36717.diff/1461917336819506</guid>
      <description>&lt;p&gt;
patch with magic methods
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36717 (Allow to access network and site properties using the current naming ...) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 08:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36717</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36717/1461917277263497</guid>
      <description>&lt;p&gt;
In multisite we have the issue that we used to call a site a blog and a network a site. Therefore the &lt;code&gt;WP_Site&lt;/code&gt; and &lt;code&gt;WP_Network&lt;/code&gt; classes use weird naming conventions for their properties. It has to be like that for backwards compatibility, but since the classes itself now use the new conventions, it can be extremely confusing to interact with them (&lt;code&gt;$site-&amp;gt;site_id&lt;/code&gt; will give me the network ID for example).
&lt;/p&gt;
&lt;p&gt;
That's why I'm proposing to add magic getters to both these classes, allowing to access these properties in the following way:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;in both classes, &lt;code&gt;id&lt;/code&gt; simply refers to the objects ID (so in &lt;code&gt;WP_Site&lt;/code&gt; it will be the site ID, and in &lt;code&gt;WP_Network&lt;/code&gt; it will be the network ID)
&lt;/li&gt;&lt;li&gt;to get the network ID of a site, we can use &lt;code&gt;$site-&amp;gt;network_id&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;to get the main site ID of a network, we can use &lt;code&gt;$network-&amp;gt;site_id&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
While this doesn't provide a functional benefit, it would make interacting with these classes a lot more logical. And it's also backwards compatible since we're only adding these new properties virtually.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #14671,​36713 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 29 Apr 2016 07:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14671%2C36713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14671%2C36713/1461914430400094</guid>
      <description>duplicate: &lt;blockquote class="citation"&gt;
&lt;p&gt;
If you do not send enough args to an action, filter or callback, WordPress implodes. We can prevent this by checking the function we are about to call to see how many args it requires.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's a patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14671" title="#14671: enhancement: Deprecate the &amp;#34;accepted args&amp;#34; argument in add_filter() and add_action() (closed: wontfix)"&gt;#14671&lt;/a&gt; that does that.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36711 (Add caching to get_page_by_path) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 07:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36711#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36711#comment:2/1461913307181272</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:22/1461913081910545</guid>
      <description>&lt;p&gt;
@westonruter Inline &lt;code&gt;@see&lt;/code&gt; tags &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/inline-documentation-standards/php/#other-descriptions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;should only be used for hooks&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31384 (Pingback does not work for schemeless URLs) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:53:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31384#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31384#comment:4/1461912830422167</guid>
      <description>&lt;p&gt;
This should work if we change to wp_parse_url
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:21/1461910967651999</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I fleshed out the unit tests, testing the registration of a class name and a class instance together, ensuring both result in registered widgets. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28216/28216.5.diff" title="Attachment '28216.5.diff' in Ticket #28216"&gt;28216.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28216/28216.5.diff" title="Download"&gt;​&lt;/a&gt;. I think this is good to go!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>28216.5.diff attached to Ticket #28216</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 06:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28216/28216.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28216/28216.5.diff/1461910743620327</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28216 (Allow to register pre-instantiated widgets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 29 Apr 2016 05:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28216#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28216#comment:20/1461908459242645</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@PeterRKnight How fortunate that &lt;code&gt;spl_object_hash()&lt;/code&gt; is available in PHP 5.2! However, I see it is used in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; but has an alternate case for handling if the function is not defined. This worried me in that perhaps the function could be disabled in 5.2. But see &lt;a href="https://core.trac.wordpress.org/ticket/21267#comment:4"&gt;#21267&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since PHP 5.2 (the required version for WP is 5.2.4), &lt;code&gt;spl_object_hash&lt;/code&gt; exists, which means the &lt;code&gt;else&lt;/code&gt; statement and &lt;code&gt;function_exists()&lt;/code&gt; check are completely useless in &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So I think we're safe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36716 (Copy and paste removes extra spaces) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 04:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36716</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36716/1461903135169853</guid>
      <description>&lt;p&gt;
In Chrome, given the sentence "I love Beyonce" if I select and copy "love " and with "love " still selected hit paste, I get "Ilove Beyonce".
&lt;/p&gt;
&lt;p&gt;
In Safari, given the sentence "I love Beyonce" if I select and copy "love " and with "love " still selected hit paste, I get "I loveBeyonce".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Fri, 29 Apr 2016 03:44:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:4/1461901480007814</guid>
      <description>&lt;p&gt;
I've also been working through some concepts for this. I don't have a patch yet, but I'll take a look at @celloexpressions to get some ideas.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36126 (lastBuildDate in comment feed may not be empty) updated</title>
      
        <dc:creator>Cybr</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36126#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36126#comment:8/1461897730224855</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That's correct @stevenkword,
&lt;/p&gt;
&lt;p&gt;
My statements were indeed for &lt;code&gt;get_last_build_date_feed()&lt;/code&gt;, a function that never really existed. You spoke about this function in the linked ticket (4575). I back-traced a never-released changeset, and I now know I need to be more careful on this.
&lt;/p&gt;
&lt;p&gt;
I think enough information has been supplied on this matter :).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36715 (Contextual help to describe what roles are) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:32:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36715</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36715/1461897152864100</guid>
      <description>&lt;p&gt;
Roles are not exactly self-explaining "What's the difference between a contributor and an author?" is probably a confusing question for new users.
&lt;/p&gt;
&lt;p&gt;
We have help text to describe what roles are in the Help dropdown on the Add New User page, but it's rather out of the way.
&lt;/p&gt;
&lt;p&gt;
I'd like to suggest moving this help text closer to its context, in the form of a tooltip next to the Role dropdown in the Add New User form.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Untitled.mov attached to Ticket #36714</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36714/Untitled.mov</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36714/Untitled.mov/1461895770320817</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36714 (Moving cursor down into Twitter embed produces two text carets) created</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Fri, 29 Apr 2016 02:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36714</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36714/1461895753682288</guid>
      <description>&lt;p&gt;
Moving cursor down into Twitter embed produces two text carets, one on either side of the embed.
&lt;/p&gt;
&lt;p&gt;
See screencast.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9993 (Rss and atom feeds are dropping some characters) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:48:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9993#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9993#comment:26/1461894491669467</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9993#comment:25" title="Comment 25"&gt;stevenkword&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This might be a case where the naming conventions don't quite make sense.  Both Atom and RSS feeds use the same &lt;code&gt;the_title_rss()&lt;/code&gt; method in their respective templates.  The only difference being that the Atom template wraps the output in CDATA ,which would be unnecessary, but not problematic after this change.
&lt;/p&gt;
&lt;p&gt;
Ideally, since both templates use XML (the export component too), naming the method &lt;code&gt;the_title_xml()&lt;/code&gt; would have been more appropriate.  While we do have the ability to add unit tests for Atom as of 4.5, I think the tests proposed in this ticket cover those test cases.  As a future part of adding test coverage for feeds, I would like to add a new &lt;code&gt;common.php&lt;/code&gt; to &lt;code&gt;/tests/feed/&lt;/code&gt; to help make things more obvious.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because the functionality is different isn't this even more reason to add unit tests for Atom?
&lt;/p&gt;
&lt;p&gt;
Also looking and &lt;code&gt;the_title_rss()&lt;/code&gt; is also used in &lt;a href="https://core.trac.wordpress.org/browser/branches/4.5/src/wp-admin/includes/export.php#L426"&gt;src/wp-admin/includes/export.php#L426&lt;/a&gt;, sadly there are zero export unit tests at the moment, there is a patch adding export unit tests in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/22435" title="#22435: enhancement: Export API (new)"&gt;#22435&lt;/a&gt; but they are dependant on the new Export API enhancements in that ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36703 (Correct method override information in WP_Widget class documentation) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:25:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36703#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36703#comment:1/1461893102679416</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36713 (Check the number of arguments before calling call_user_func_array()) created</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:20:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36713</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36713/1461892805484003</guid>
      <description>&lt;p&gt;
If you do not send enough args to an action, filter or callback, WordPress implodes. We can prevent this by checking the function we are about to call to see how many args it requires.
&lt;/p&gt;
&lt;p&gt;
Here is concept code that I will convert to a patch if the idea is approved:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;helper_count_required_args&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;is_scalar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;br&amp;gt;arg_counts: "&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nb"&gt;var_export&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;function_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReflectionFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;method_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ReflectionMethod&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nv"&gt;$function&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arg_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;$key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$r&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;getNumberOfRequiredParameters&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
One concern I can see with this is that it will slow things down a bit, but at the same time it might prevent a few problems.
&lt;/p&gt;
&lt;p&gt;
To keep down overhead, I suggest we do the check when the hook is added not when it is run. We could even increase the fourth parameter ($accepted_args) automatically if that is what the function really requires.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Fri, 29 Apr 2016 01:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:5/1461892040749776</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should we start with &lt;code&gt;false&lt;/code&gt; instead and allow for the return of an empty array?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually yah, that seems like a good idea, though it probably should be &lt;code&gt;null&lt;/code&gt; in keeping with the precedent of other &lt;code&gt;'pre_*&lt;/code&gt; filters in WordPress.
&lt;/p&gt;
&lt;p&gt;
Also, it looks like the static variable is a no-go?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35791 (WP_Site_Query class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 00:19:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35791#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35791#comment:33/1461889172043480</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35791/35791-class.2.patch" title="Attachment '35791-class.2.patch' in Ticket #35791"&gt;35791-class.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35791/35791-class.2.patch" title="Download"&gt;​&lt;/a&gt; fixes some bugs/inconsistencies and includes minor improvements.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;use &lt;code&gt;sites&lt;/code&gt; as cache group, similar to &lt;code&gt;WP_Site&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;pass site IDs to &lt;code&gt;_prime_site_caches()&lt;/code&gt; instead of network IDs
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$orderby&lt;/code&gt; support for &lt;code&gt;site__in&lt;/code&gt; and &lt;code&gt;network__in&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;removed &lt;code&gt;$found_orderby_blog_id&lt;/code&gt; variable (unused)
&lt;/li&gt;&lt;li&gt;removed &lt;code&gt;$filtered_where_clause&lt;/code&gt; property (unused)
&lt;/li&gt;&lt;li&gt;simplified search clause SQL process (AND is no longer prepended, so we don't need to remove it afterwards)
&lt;/li&gt;&lt;li&gt;sort ascending by default (since default sort is by site ID)
&lt;/li&gt;&lt;li&gt;use class property &lt;code&gt;$date_query&lt;/code&gt; to store &lt;code&gt;WP_Date_Query&lt;/code&gt; object
&lt;/li&gt;&lt;li&gt;fixed docs for &lt;code&gt;$orderby&lt;/code&gt; argument and &lt;code&gt;$order&lt;/code&gt; argument
&lt;/li&gt;&lt;li&gt;added docs for &lt;code&gt;parse_site_query&lt;/code&gt; action
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35791-class.2.patch attached to Ticket #35791</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 29 Apr 2016 00:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35791/35791-class.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35791/35791-class.2.patch/1461888792081172</guid>
      <description>&lt;p&gt;
some fixes and improvements for WP_Site_Query
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>mensmaximus</dc:creator>

      <pubDate>Fri, 29 Apr 2016 00:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:6/1461888577064424</guid>
      <description>&lt;p&gt;
After some more investigation I can definitely say passing &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;do_action( "activate_{$plugin}" );&lt;/code&gt; in plugins.php line 166 solves the described problem.
&lt;/p&gt;
&lt;p&gt;
The question now is how can we determine whether the plugin activation was started on the network admin screen? &lt;code&gt;is_network_admin()&lt;/code&gt; is not working in case &lt;code&gt;error_scrape&lt;/code&gt; because &lt;code&gt;WP_NETWORK_ADMIN&lt;/code&gt; is not defined and &lt;code&gt;$GLOBALS['current_screen']-&amp;gt;in_admin( 'network' )&lt;/code&gt; is empty. I even tried to pass &lt;code&gt;is_network_admin()&lt;/code&gt; as an argument to &lt;code&gt;$iframe_url&lt;/code&gt; in &lt;code&gt;/wp-admin/plugins.php&lt;/code&gt; line 438.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36712 (Paragraph tags removed from div elements if script tag is present) created</title>
      
        <dc:creator>dankop</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:51:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36712</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36712/1461887492848293</guid>
      <description>&lt;p&gt;
I honestly have no idea how to summarize this bug (therefore my lousy title), so I'll best skip right to how to reproduce it.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Get 10 paragraphs of text from Lorem Ipsum, and paste it to your visual editor.
&lt;/li&gt;&lt;li&gt;Switch to the text editor and wrap the first 5 paragraphs in a div, and wrap the last 5 in a second div.
&lt;/li&gt;&lt;li&gt;After the first paragraph in each div, simply write &amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;
&lt;/li&gt;&lt;li&gt;Switch between Visual and Text editor, and watch the paragraphs in the second div disappear.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For you convenience, you can copy the template from here, instead of typing it manually: &lt;a class="ext-link" href="http://pastebin.com/PFYj885M"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastebin.com/PFYj885M&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If the paragraphs don't disappear after the first switch from text to visual, do it a couple of more times. I tried it on a fresh new install using the Twenty Sixteen theme.
&lt;/p&gt;
&lt;p&gt;
I encountered this bug while having a couple of Instagram embeds on the same page, all of which loaded a script.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #32504 (WP_Network_Query class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:46:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32504#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32504#comment:6/1461887172087154</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/32504/32504.diff" title="Attachment '32504.diff' in Ticket #32504"&gt;32504.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/32504/32504.diff" title="Download"&gt;​&lt;/a&gt; is an initial take on &lt;code&gt;WP_Network_Query&lt;/code&gt;. I took an approach similar to the other recent query classes where only the ID is queried. These IDs are then (if necessary) transformed into objects through a new &lt;code&gt;get_network()&lt;/code&gt; function. I also added related method to prime the network cache. Network meta (also known as network options or site options, stored in the sitemeta table) is also supported.
&lt;/p&gt;
&lt;p&gt;
This is just a first patch that definitely needs to be enhanced and extended. Specifically I think it would be great to directly support a &lt;code&gt;super_admin&lt;/code&gt; parameter which the class will automatically handle and transform it into a meta query for it. There are other use-cases as well, specifically I'm taking the use-cases from the WP Multi Network plugin into account.
&lt;/p&gt;
&lt;p&gt;
The patch also introduces a new function &lt;code&gt;get_networks()&lt;/code&gt; which makes use of &lt;code&gt;WP_Network_Query&lt;/code&gt;, so this is a good way to test it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36316 (Image editor: improve form validation errors handling) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36316#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36316#comment:3/1461887007784475</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>32504.diff attached to Ticket #32504</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32504/32504.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32504/32504.diff/1461886781001623</guid>
      <description>&lt;p&gt;
initial patch for the class
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36708 (Silence ini_set() in wp_debug_mode() if WP_DEBUG is off) updated</title>
      
        <dc:creator>avagoldin</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:31:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36708#comment:1/1461886296592944</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36692" title="#36692: defect (bug): Ajax requests should display errors (closed: duplicate)"&gt;#36692&lt;/a&gt;
Maybe &lt;code&gt;ini_set( 'display_errors', 0 );&lt;/code&gt; only if &lt;code&gt;WP_DEBUG&lt;/code&gt; is false?
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36711 (Add caching to get_page_by_path) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36711#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36711#comment:1/1461886024539525</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
First pass at this patch. Pretty simple patch to get caching. The caching method is simple to the one in the get_pages function. This cache key use last_changed, a value set in the clean_post_cache function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36711.patch attached to Ticket #36711</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36711/36711.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36711/36711.patch/1461885208915861</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36711 (Add caching to get_page_by_path) created</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 28 Apr 2016 23:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36711</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36711/1461885172316086</guid>
      <description>&lt;p&gt;
The function is get_page_by_path is called lot in WP_Query. Currently is doesn't have any caching on it. This is performance issue if you are using persistent cache.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21773 (Scheduled pages/posts should not appear in custom menus) updated</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21773#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21773#comment:11/1461883783222696</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a patch that makes sure any menu items that are of the type post_type (so posts, pages, CPTs) don't show on the front-end if they don't have the publish status. So this will remove scheduled items, draft items and private items from showing up.
&lt;/p&gt;
&lt;p&gt;
I wasn't sure on the best place to put this, as there is a &lt;code&gt;_is_valid_nav_menu_item&lt;/code&gt; function that I thought maybe extending to include this functionality might make sense, but ultimately I just created a similar function to handle this.
&lt;/p&gt;
&lt;p&gt;
I have tested this and it seems to work great, but am open to any ideas if there's a better way to approach this or better place to put this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21773.diff attached to Ticket #21773</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21773/21773.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21773/21773.diff/1461883618719411</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36555 (Semantic elements for non-link links: ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:15:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36555#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36555#comment:2/1461881759845520</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thinking maybe some links should be real &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements since they're hidden when JS is off. So, they wouldn't need the class &lt;code&gt;aria-button-if-js&lt;/code&gt;. Specifically, the ones with the class &lt;code&gt;hide-if-no-js&lt;/code&gt; that open the "attach" modal.
About the styling part, there's &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35126" title="#35126: enhancement: Improvements for the new .button-link CSS class (closed: fixed)"&gt;#35126&lt;/a&gt;. Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33271 (WP_Http streaming should use 'w' mode, not 'w+') updated</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33271#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33271#comment:3/1461881684032999</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added a patch that changes this. Ran some tests to make sure things still worked as expected (basically just pulled the file stream tests from our unit tests) and everything still worked great for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35791 (WP_Site_Query class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:14:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35791#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35791#comment:32/1461881652563076</guid>
      <description>&lt;p&gt;
I just noticed that the class currently uses &lt;code&gt;site&lt;/code&gt; for the cache group while &lt;code&gt;WP_Site&lt;/code&gt; uses &lt;code&gt;sites&lt;/code&gt;. We should probably align &lt;code&gt;WP_Site_Query&lt;/code&gt; to use &lt;code&gt;sites&lt;/code&gt; as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>33271.diff attached to Ticket #33271</title>
      
        <dc:creator>dkotter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33271/33271.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33271/33271.diff/1461881616329351</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:12/1461881485413388</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Personally, I like the direction here and I think this would make the &lt;code&gt;.button-link&lt;/code&gt; class more useful and easier to use. A few things to consider, to improve the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;usually, links inside list tables are not underlined see &lt;code&gt;.widefat a&lt;/code&gt; in &lt;code&gt;common.css&lt;/code&gt; I'd suggest to do the same for &lt;code&gt;.button-link&lt;/code&gt; when inside list tables
&lt;/li&gt;&lt;li&gt;maybe worth searching all the CSS for &lt;code&gt;text-decoration: none;&lt;/code&gt; to check if there are special cases that should be addressed
&lt;/li&gt;&lt;li&gt;though I'd agree some styles should be consistent across all the WordPress ecosystem, I'm pretty sure the maintainers of Press This and the Customizer would like to keep the styles unchanged, since they're both sort of self-contained applications
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Any thougths more than welcome. /cc @helen @michaelarestad @celloexpressions
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:08:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:4/1461881328982480</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36707/36707.diff" title="Attachment '36707.diff' in Ticket #36707"&gt;36707.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36707/36707.diff" title="Download"&gt;​&lt;/a&gt; is a riff on/refresh of @jtsternberg's original patch and uses &lt;code&gt;count()&lt;/code&gt; rather than &lt;code&gt;empty()&lt;/code&gt; to check the returned data from the filter.
&lt;/p&gt;
&lt;p&gt;
Should we start with &lt;code&gt;false&lt;/code&gt; instead and allow for the return of an empty array?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36707.diff attached to Ticket #36707</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Thu, 28 Apr 2016 22:07:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36707/36707.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36707/36707.diff/1461881224927127</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36709 (Symlinked plugin path incorrectly registered during uninstall) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36709#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36709#comment:1/1461880702867088</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/27158" title="Detect and handle symlinking of plugins in plugin_basename().
props ..."&gt;[27158]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36406 ($network_wide is unreliable) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:56:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36406#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36406#comment:5/1461880562792155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by mensmaximus. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1461880560000636"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36710.diff attached to Ticket #36710</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:52:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36710/36710.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36710/36710.diff/1461880329208305</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36710 (Symlinked directories should not be deleted recursively) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36710</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36710/1461880307373369</guid>
      <description>&lt;p&gt;
When deleting a symlinked plugin, the current behavior is to recursively delete everything in the plugin's real directory and then fail to unlink the symlink because rmdir won't work on a symlink. This is probably not what the site admin intended when they installed the plugin via a symlink. The desired behavior is to unlink only the symlink, leaving the external directory intact so that other symlinks remain intact.
&lt;/p&gt;
&lt;p&gt;
My patch fixes this in WP_Filesystem rather than in the plugin deletion logic because it seems generally applicable to the use cases for symlinks.
&lt;/p&gt;
&lt;p&gt;
What makes this hard is that trailing slashes are significant when dealing with symlinked directories. The trailing slash causes the link to be followed:
&lt;/p&gt;
&lt;pre class="wiki"&gt;is_link('/link/') =&amp;gt; false
is_link('/link') =&amp;gt; true
&lt;/pre&gt;&lt;p&gt;
The patch fixes deletion of symlinked plugins: it unlinks the symlink and leaves the real files intact. It should be carefully checked against other uses of delete because they might not include the trailing slash. In such cases, adding a trailing slash to the new &lt;code&gt;is_dir()&lt;/code&gt; check might help. Could be a minefield, could be fine.
&lt;/p&gt;
&lt;p&gt;
Related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29408" title="#29408: defect (bug): Symlinked themes and plugins should not be updatable (new)"&gt;#29408&lt;/a&gt; but not a duplicate.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31405 (upgrade.php fails with mixed HTTPS (SSL) and simple HTTP sites) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31405#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31405#comment:15/1461880080419326</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31405/31405.diff" title="Attachment '31405.diff' in Ticket #31405"&gt;31405.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31405/31405.diff" title="Download"&gt;​&lt;/a&gt; is an approach to fix this problem. It introduces a new possible &lt;code&gt;$scheme&lt;/code&gt; value for &lt;code&gt;set_url_scheme()&lt;/code&gt;. This value is called &lt;code&gt;original&lt;/code&gt; and will keep the original scheme of the URL. Every site should have its current scheme stored in the &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;siteurl&lt;/code&gt; options, so we can rely on that to fix the error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31405.diff attached to Ticket #31405</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31405/31405.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31405/31405.diff/1461879853347583</guid>
      <description>&lt;p&gt;
fix using &lt;code&gt;set_url_scheme()&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34213 (Change priority for loading theme/plugin translations) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:38:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34213#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34213#comment:16/1461879482409827</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34213/34213.diff" title="Attachment '34213.diff' in Ticket #34213"&gt;34213.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34213/34213.diff" title="Download"&gt;​&lt;/a&gt; reverts &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29984" title="Avoid double path separators in `load_theme_textdomain()`. Fixes ..."&gt;[29984]&lt;/a&gt; for &lt;code&gt;load_theme_textdomain()&lt;/code&gt;. Should this be added to &lt;code&gt;WP_Theme::load_textdomain()&lt;/code&gt; instead?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35791 (WP_Site_Query class) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:27:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35791#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35791#comment:31/1461878871748005</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35791#comment:21" title="Comment 21"&gt;spacedmonkey&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Going forward, I think we should deprecate wp_get_sites, as get_sites should replace it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure if that's a good idea. &lt;code&gt;get_sites()&lt;/code&gt; sounds to generic and could cause fatal errors if there are plugins/themes which define the same function (Yes, without a prefix).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36709.diff attached to Ticket #36709</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:24:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36709/36709.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36709/36709.diff/1461878688324719</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36709 (Symlinked plugin path incorrectly registered during uninstall) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36709</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36709/1461878581804310</guid>
      <description>&lt;p&gt;
The &lt;code&gt;dirname()&lt;/code&gt; shouldn't be here in &lt;code&gt;uninstall_plugin()&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		wp_register_plugin_realpath( WP_PLUGIN_DIR . '/' . dirname( $file ) );
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;wp_register_plugin_realpath()&lt;/code&gt; calls &lt;code&gt;dirname( $file );&lt;/code&gt; to remove the basename. The basename must be included in the argument or the symlinked directory won't be registered. Then, if &lt;code&gt;uninstall.php&lt;/code&gt; does this check it will fail:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( dirname( WP_UNINSTALL_PLUGIN ) != dirname( plugin_basename( __FILE__ ) ) )
  exit();
&lt;/pre&gt;&lt;p&gt;
This was observed while trying to uninstall Jetpack which was installed as a symlink. The result was a WSOD. Removing the &lt;code&gt;dirname()&lt;/code&gt; from &lt;code&gt;uninstall_plugin()&lt;/code&gt; fixes the path registration and allows the check to pass.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35457 (Theme installer upload button improvements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:20:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35457#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35457#comment:15/1461878408624176</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1461878406000235"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31405 (upgrade.php fails with mixed HTTPS (SSL) and simple HTTP sites) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31405#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31405#comment:14/1461877968784648</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1461877967000546"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:4/1461877933241070</guid>
      <description>&lt;p&gt;
I have been reviewing performance in the WordPress core and noticed that all the terms functions are the worst performing in my tests. All of the terms functions performance a high number sql queries (with joins) and there is no consistent caching method. Many of these functions do not cache at all. I have done a quick search of the code base of functions what query the terms table. Perhaps the internals of these functions can be replaced to use WP_Term_Query. I have ordered this list in order likelyhood they could implement WP_Term_Query.
&lt;/p&gt;
&lt;p&gt;
get_terms
get_term_by
term_exists
wp_get_object_terms
wp_unique_term_slug
_split_shared_term
wp_insert_term
global_terms
&lt;/p&gt;
&lt;p&gt;
Like the WP_Site_Query ticket, the patches should be broken up two. One for the class and the other for the implementation.  Otherwise, good work @flixos90
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36704 (Delete Plugin not compatible with Bulk Actions) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36704#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36704#comment:1/1461877914860898</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/26735" title="#26735: defect (bug): Plugin bulk deletion attempts to define WP_UNINSTALL_PLUGIN constant ... (new)"&gt;#26735&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14172 (Implement $scheme in site info in ms-sites edit site) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 21:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14172#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14172#comment:22/1461877252477127</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1461877250000521"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:19/1461876806771731</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34114/34114.5.diff" title="Attachment '34114.5.diff' in Ticket #34114"&gt;34114.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34114/34114.5.diff" title="Download"&gt;​&lt;/a&gt; looks great!
&lt;/p&gt;
&lt;p&gt;
Would be nice if we could do some testing to see how this improves performance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20943 (Paragraphs get removed in table cells when Visual editor is refreshed) updated</title>
      
        <dc:creator>dankop</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:51:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20943#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20943#comment:53/1461876709316401</guid>
      <description>&lt;p&gt;
Is there any progress being made on this issue? Paragraph tags are still getting removed from the first paragraph inside an element (div in my case). In some cases with every switch between text/visual editor, a paragraph gets removed until all that's left is just a hug chunk of text.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33887 (Multisite update from SSL network fails on non SSL domains) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33887#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33887#comment:8/1461876420453282</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by websupporter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1461876418000506"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>jtsternberg</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:47:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:3/1461876420262621</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related patch. &lt;a href="https://core.trac.wordpress.org/attachment/ticket/31746/31746.3.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/31746/31746.3.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26262 (Ajax requests shouldn't display errors) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26262#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26262#comment:25/1461876355570903</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26262#comment:24" title="Comment 24"&gt;pavelevap&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This change probably caused problems for many sites, see for example: &lt;a class="ext-link" href="https://wordpress.org/support/topic/problems-with-45-upgrade-add-media-not-working/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/problems-with-45-upgrade-add-media-not-working/&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the report, I've created &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36708" title="#36708: defect (bug): Silence ini_set() in wp_debug_mode() if WP_DEBUG is off (closed: fixed)"&gt;#36708&lt;/a&gt; as a follow-up (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36692" title="#36692: defect (bug): Ajax requests should display errors (closed: duplicate)"&gt;#36692&lt;/a&gt; is also related).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36708.patch attached to Ticket #36708</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:42:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36708/36708.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36708/36708.patch/1461876148416478</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36708 (Silence ini_set() in wp_debug_mode() if WP_DEBUG is off) created</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36708</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36708/1461876119720706</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/24564" title="Don't display errors for XML-RPC requests, as they malform the ..."&gt;[24564]&lt;/a&gt;, we've added &lt;code&gt;ini_set( 'display_errors', 0 )&lt;/code&gt; for XML-RPC requests.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36571" title="Don't display errors during Ajax requests.
See #34915 for REST and ..."&gt;[36571]&lt;/a&gt;, we did the same for AJAX requests. Apparently this caused issues on sites where &lt;code&gt;ini_set()&lt;/code&gt; has been disabled for security reasons, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26262#comment:24" title="Comment 24 for #26262: defect (bug): Ajax requests shouldn't display errors (closed: fixed)"&gt;comment:24:ticket:26262&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As this line fires regardless of &lt;code&gt;WP_DEBUG&lt;/code&gt; value and can lead to unexpected errors in production, we should add error suppression here (at least if &lt;code&gt;WP_DEBUG&lt;/code&gt; is disabled), as we already do in every other instance of &lt;code&gt;ini_set()&lt;/code&gt; in core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35592 (Description of button 'Clear inactive widgets' not hiding when closing ...) closed</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:39:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35592#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35592#comment:11/1461875963113840</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37323" title="Widgets: When the Inactive Widgets section is hidden also hide the ..."&gt;37323&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: When the Inactive Widgets section is hidden also hide the “Clear Inactive Widgets” button description text.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props welcher.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35592" title="#35592: defect (bug): Description of button 'Clear inactive widgets' not hiding when closing ... (closed: fixed)"&gt;#35592&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37323]: Widgets: When the Inactive Widgets section is hidden also hide the ...</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37323</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37323/1461875962499168</guid>
      <description>&lt;p&gt;
Widgets: When the Inactive Widgets section is hidden also hide the “Clear Inactive Widgets” button description text.
&lt;/p&gt;
&lt;p&gt;
Props welcher.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35592" title="#35592: defect (bug): Description of button 'Clear inactive widgets' not hiding when closing ... (closed: fixed)"&gt;#35592&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:2/1461875740389223</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707#comment:1/1461875645217040</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by nerrad. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1461875643000494"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36583 (Make "Save Draft" the predominant button when editting a not-published post) updated</title>
      
        <dc:creator>LucP</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36583#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36583#comment:6/1461875632389752</guid>
      <description>&lt;p&gt;
Here's the link to the publishing - saving drafts - scheduling post- survey:
&lt;a class="ext-link" href="http://chefduweb.polldaddy.com/s/publishing-saving-updating-in-wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://chefduweb.polldaddy.com/s/publishing-saving-updating-in-wordpress&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please share everybody!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31746 (get_blogs_of_user() can be very slow when a user is a member of ...) updated</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:33:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31746#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31746#comment:26/1461875622806244</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36707" title="#36707: enhancement: Add pre_get_blogs_of_user filter. (closed: fixed)"&gt;#36707&lt;/a&gt; was created for specifically getting the filter initially proposed put in, that way we're able to keep this ticket for continued discussion of a longer term solution as discussed in slack.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36707 (Add pre_get_blogs_of_user filter.) created</title>
      
        <dc:creator>nerrad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:32:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36707</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36707/1461875560332382</guid>
      <description>&lt;p&gt;
See original discussion on &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31746" title="#31746: defect (bug): get_blogs_of_user() can be very slow when a user is a member of ... (reviewing)"&gt;#31746&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The filter has been broken out into its own ticket so that discussion on longer term improvement of &lt;code&gt;get_blogs_of_user()&lt;/code&gt; can be continued there.
&lt;/p&gt;
&lt;p&gt;
See &lt;a href="https://core.trac.wordpress.org/attachment/ticket/31746/31746.3.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/31746/31746.3.diff&lt;/a&gt; for patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34074 (wp_debug false still showing errors) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34074#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34074#comment:5/1461875114417501</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>36706.patch attached to Ticket #36706</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:15:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36706/36706.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36706/36706.patch/1461874548366885</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36706 (Add fallback for TextDomain field in get_plugin_data()) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:15:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36706</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36706/1461874519001515</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34114" title="#34114: enhancement: Remove the requirement to call load_plugin_textdomain() or ... (closed: fixed)"&gt;#34114&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are a lot of plugins which don't declare the Text Domain field in the plugin header. If the plugin is on translate.w.org its headers are translated by default. Let's help those plugins so the translations are getting used.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26262 (Ajax requests shouldn't display errors) updated</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26262#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26262#comment:24/1461873978753383</guid>
      <description>&lt;p&gt;
This change probably caused problems for many sites, see for example: &lt;a class="ext-link" href="https://wordpress.org/support/topic/problems-with-45-upgrade-add-media-not-working/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/problems-with-45-upgrade-add-media-not-working/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You can also Google for:
&lt;/p&gt;
&lt;pre class="wiki"&gt;ini_set() has been disabled for security reasons in wp-includes/load.php on line 305
&lt;/pre&gt;&lt;p&gt;
I found that it is caused by this change for sites which have &lt;code&gt;diplay_errors&lt;/code&gt; set to "On" and disabled &lt;code&gt;ini_set()&lt;/code&gt; for security reasons. In this case Ajax calls are returning and displaying PHP error and that is why Ajax calls fail. And for users it means that it is not possible to open Media modal window, insert media into post, etc. Should I create a new ticket for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36705 (Read-only plugins are uninstalled before deletion fails) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36705/1461873964790034</guid>
      <description>&lt;p&gt;
Plugin uninstall happens before deletion is attempted. If the plugin's files are read-only, the plugins list action says "Delete" but all that happens is uninstall and an error.
&lt;/p&gt;
&lt;p&gt;
Plugins that cannot be deleted because they are read-only in the filesystem should not have Delete buttons. &lt;code&gt;is_writable()&lt;/code&gt; should be checked while constructing the actions. If read-only, either remove the button or replace it with an action which deletes the plugin's data and leaves the files. I prefer the latter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35697 (Add a `fields` key to `wp_get_sites()`) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35697#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35697#comment:3/1461873879834545</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35791" title="#35791: task (blessed): WP_Site_Query class (closed: fixed)"&gt;#35791&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31746 (get_blogs_of_user() can be very slow when a user is a member of ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 20:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31746#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31746#comment:25/1461873811741963</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by websupporter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1461873810000384"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:3/1461873560399726</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35381/35381.diff" title="Attachment '35381.diff' in Ticket #35381"&gt;35381.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35381/35381.diff" title="Download"&gt;​&lt;/a&gt; is a first take on this class. I used a similar approach like the one we have been using for other more recent query classes (like &lt;code&gt;WP_Comment_Query&lt;/code&gt; and now &lt;code&gt;WP_Site_Query&lt;/code&gt;) where the main query only queries IDs and then uses &lt;code&gt;get_term()&lt;/code&gt; to get objects. My goal for this first patch was to mimic the functionality of the &lt;code&gt;get_terms()&lt;/code&gt; function. In a later iteration the class should also be able to be used by &lt;code&gt;wp_get_object_terms()&lt;/code&gt; - it isn't yet, but this is just a note to keep in mind for further enhancement.
&lt;/p&gt;
&lt;p&gt;
Some details about the implementation:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Backwards compatibility is a major issue here: there were a number of filters in &lt;code&gt;get_terms()&lt;/code&gt; that I have now moved into the class while also adding the usual actions and filters that we have in other query classes. My tests so far worked fine, but we should have a detailed look at all the filters and whether they work as intended. I also added a &lt;code&gt;$suppress_filters&lt;/code&gt; argument which should probably (when active) disable more filters than it currently does in this implementation.
&lt;/li&gt;&lt;li&gt;I left the check whether a taxonomy exists (possibly throws &lt;code&gt;WP_Error&lt;/code&gt;) and whether there is a hierarchical taxonomy in &lt;code&gt;get_terms()&lt;/code&gt;. I think both of them are not explicitly required to run for any term query.
&lt;/li&gt;&lt;li&gt;I found a bug that is possible to happen even in current versions of WordPress. In version 4.5 we allowed to query terms of any taxonomy - in this case the &lt;code&gt;$taxonomy&lt;/code&gt; argument is null. However there are multiple occassions where it is assumed to be an array. In all cases of a foreach loop, I added a check whether &lt;code&gt;$taxonomy&lt;/code&gt; is a trueish value (in this case it's always an array). At one point there is a &lt;code&gt;reset()&lt;/code&gt; call which obviously will throw a notice at this point if &lt;code&gt;$taxonomy&lt;/code&gt; is null. Try the following query for example: &lt;code&gt;get_terms( array( 'name' =&amp;gt; 'uncategorized' ) )&lt;/code&gt;. We should remove the requirement for passing a taxonomy for other functions (since it's no longer necessary in a lot of cases since term splitting) - for this particular notice, we need to see if we can adjust &lt;code&gt;sanitize_term_field()&lt;/code&gt;. Btw, this also makes the documentation slightly incorrect where &lt;code&gt;$taxonomy&lt;/code&gt; is stated to always be an array.
&lt;/li&gt;&lt;li&gt;Besides the &lt;code&gt;$suppress_filters&lt;/code&gt; argument, I also added a &lt;code&gt;no_found_rows&lt;/code&gt; argument (similar to other query classes) and a &lt;code&gt;$count&lt;/code&gt; argument. The latter is already present through &lt;code&gt;$fields = 'count'&lt;/code&gt;, but I thought we could standardize it, similar to the other query classes. It's a duplicate though, so if that is an issue, maybe we can deprecate &lt;code&gt;$fields = 'count'&lt;/code&gt; - or otherwise get rid of &lt;code&gt;$count&lt;/code&gt; again if there's no other way.
&lt;/li&gt;&lt;li&gt;Another problem in my opinion is the &lt;code&gt;get_terms_fields&lt;/code&gt; filter. Since this class always queries for IDs (or a count), using the &lt;code&gt;get_terms_fields&lt;/code&gt; filter to modify the requested fields in any way will most probably mess up the query - it's basically not of any use at this point. I wonder if we can deprecate/drop it - it does not affect what the query returns anyway with this implementation.
&lt;/li&gt;&lt;li&gt;I added a private &lt;code&gt;_prime_term_caches()&lt;/code&gt; function, similar like we have for posts and comments. This function is used internally by the query class.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18857 (get_plugin_page_hookname uses menu_title to construct subpage load-hooks) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18857#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18857#comment:21/1461873525536054</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just stumbled upon this issue with &lt;a class="ext-link" href="https://wordpress.org/plugins/better-wp-security/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;iThemes Security&lt;/a&gt; (thanks to @fierevere for the report).
&lt;/p&gt;
&lt;p&gt;
The plugin adds a submenu page:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$this-&amp;gt;available_pages[] = add_menu_page(
	__( 'Dashboard', 'better-wp-security' ),
	__( 'Security', 'better-wp-security' ),
	$itsec_globals['plugin_access_lvl'],
	'itsec',
	array( $this, 'render_page' )
);
&lt;/pre&gt;&lt;p&gt;
and then uses screen IDs like &lt;code&gt;security_page_toplevel_page_itsec_settings&lt;/code&gt; to display settings, meta boxes, etc.
&lt;/p&gt;
&lt;p&gt;
However, if &lt;code&gt;__( 'Security', 'better-wp-security' )&lt;/code&gt; is translated, screen ID changes too, e.g. if the string is translated into "Безопасность" in ru_RU, the screen ID becomes &lt;code&gt;%d0%b1%d0%b5%d0%b7%d0%be%d0%bf%d0%b0%d1%81%d0%bd%d0%be%d1%81%d1%82%d1%8c_page_toplevel_page_itsec_settings&lt;/code&gt;, and the corresponding settings page becomes blank: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18857/18857.jpg" title="Attachment '18857.jpg' in Ticket #18857"&gt;18857.jpg&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18857/18857.jpg" title="Download"&gt;​&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30073" title="#30073: defect (bug): Dynamic filters/actions using WP_Screen-&amp;gt;id can lead to some ... (closed: duplicate)"&gt;#30073&lt;/a&gt; for a detailed explanation.
&lt;/p&gt;
&lt;p&gt;
Let's see what is needed to get &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18857/18857.diff" title="Attachment '18857.diff' in Ticket #18857"&gt;18857.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18857/18857.diff" title="Download"&gt;​&lt;/a&gt; in.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36704-no-bulk-delete.diff attached to Ticket #36704</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:57:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36704/36704-no-bulk-delete.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36704/36704-no-bulk-delete.diff/1461873449072372</guid>
      <description>&lt;p&gt;
Remove delete from plugin bulk actions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36704 (Delete Plugin not compatible with Bulk Actions) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36704</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36704/1461873398271373</guid>
      <description>&lt;p&gt;
&lt;code&gt;delete_plugins()&lt;/code&gt; has a &lt;code&gt;foreach&lt;/code&gt; loop which calls &lt;code&gt;uninstall_plugin()&lt;/code&gt; which defines a constant:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('WP_UNINSTALL_PLUGIN', $file);
&lt;/pre&gt;&lt;p&gt;
A constant cannot be defined twice. If several plugins are selected for bulk deletion and two of these have uninstall.php, only the first one will see the expected constant value. For example, Jetpack's uninstall.php dies immediately when the constant contains an unexpected value. This prevents the code at the end of &lt;code&gt;delete_plugins()&lt;/code&gt; finishing the job for the plugins that were uninstalled and deleted. (Jetpack's uninstall.php isn't exactly doing it right, but it's a very real example.)
&lt;/p&gt;
&lt;p&gt;
The obvious fix is to remove Delete from bulk actions on the Plugins page. This leaves the working parts in working order and buys time to rewrite the delete/uninstall API to work with a bulk delete function if this is desirable.
&lt;/p&gt;
&lt;p&gt;
Part of the rework would involve rewriting &lt;code&gt;uninstall_plugin()&lt;/code&gt; and the uninstall.php pattern so that it can return a &lt;code&gt;WP_Error&lt;/code&gt; instead of dying. This way, &lt;code&gt;delete_plugins()&lt;/code&gt; could continue without leaving the work of &lt;code&gt;delete_plugins()&lt;/code&gt; incomplete for the plugins that were uninstalled.
&lt;/p&gt;
&lt;p&gt;
I propose removing Delete from bulk plugin actions until the uninstall API is made compatible with bulk deletion.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>18857.jpg attached to Ticket #18857</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18857/18857.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18857/18857.jpg/1461873308698274</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36677 (WP 4.5.1 severely limits image upload size to under 2 MB) updated</title>
      
        <dc:creator>jasonwhite99</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36677#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36677#comment:9/1461872412463156</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have a problem in 4.5.1 that it won't accept any JPG into the media gallery if the image has EXIF metadata, or larger than 2MB. Currently thinking of maybe upgrading the PHP version, but there's nothing in the current configuration that would cause the problems I'm having now. Uploading an image with metadata gets an HTTP Error. Image over 2MB gets the "image too large" error.
&lt;/p&gt;
&lt;p&gt;
I've reinstalled the current WP version and looked the php.ini up and down... nothing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35381.diff attached to Ticket #35381</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35381/35381.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35381/35381.diff/1461871927810779</guid>
      <description>&lt;p&gt;
WP_Term_Query class
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36694 ([Pages] [Edit Page] Changing the Permalink URL updates the displayed ...) updated</title>
      
        <dc:creator>setsailmedia</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36694#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36694#comment:1/1461871374714820</guid>
      <description>&lt;p&gt;
The error is in wp-admin/includes/post.php : function get_sample_permalink_html()
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36702 (Increase humanism in first comment) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:01:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36702#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36702#comment:3/1461870109021780</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This only has positives.  I do think we have a chance to improve the overall first comment humanism and the education around comments.
&lt;/p&gt;
&lt;p&gt;
I do like the idea of adding an email address and gravatar, and also explaining where the avatar comes from. This would help people understand where the avatars come from that they see.  "A WordPress Commentator" seems like a person that would have a WordPress.org email address and a Wapuu gravatar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36262 (Page Restore Autosave Not Working) updated</title>
      
        <dc:creator>jawad96</dc:creator>

      <pubDate>Thu, 28 Apr 2016 19:00:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36262#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36262#comment:5/1461870024647524</guid>
      <description>&lt;p&gt;
Hello @adamsilverstein
&lt;/p&gt;
&lt;p&gt;
Were you able to test this yet?
&lt;/p&gt;
&lt;p&gt;
Many Thanks,
Jawad
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:59:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:18/1461869987425036</guid>
      <description>&lt;p&gt;
@swissspidy Thanks. The array needs to be initialized, otherwise you'll get a PHP warning: &lt;code&gt;Warning: in_array() expects parameter 2 to be array, null given in /src/wp-includes/l10n.php on line 819&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34114/34114.5.diff" title="Attachment '34114.5.diff' in Ticket #34114"&gt;34114.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34114/34114.5.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Initialize &lt;code&gt;$cached_mofiles&lt;/code&gt; as an array if it's null.
&lt;/li&gt;&lt;li&gt;Short-circuit if domain is 'default' which is reserved for core.
&lt;/li&gt;&lt;li&gt;Move tests to a new file &lt;code&gt;l10n/loadTextdomainJustInTime.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;In &lt;code&gt;get_translations_for_domain()&lt;/code&gt; swap the order of the &lt;code&gt;isset()&lt;/code&gt; check and &lt;code&gt;load_textdomain_just_in_time()&lt;/code&gt;. No need to try loading the text domain again if it's already there.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>#36703.patch attached to Ticket #36703</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:59:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36703/%2336703.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36703/%2336703.patch/1461869966564017</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36703 (Correct method override information in WP_Widget class documentation) created</title>
      
        <dc:creator>Frank Klein</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:59:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36703</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36703/1461869940824348</guid>
      <description>&lt;p&gt;
The documentation at the top of the &lt;code&gt;WP_Widget&lt;/code&gt; class file currently states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
This class must be extended for each widget and WP_Widget::widget(), WP_Widget::update() and WP_Widget::form() need to be overridden.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd say that this is probably not correct for &lt;code&gt;WP_Widget::update()&lt;/code&gt; and &lt;code&gt;WP_Widget::form()&lt;/code&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;WordPress does not enforce the overriding for these methods, as it does for &lt;code&gt;WP_Widget::widget()&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;To have a widget without settings, not overriding these methods seems like the correct approach, as demonstrated by the contents of the &lt;code&gt;WP_Widget::form()&lt;/code&gt; method.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I propose to rework the documentation to clarify this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>34114.5.diff attached to Ticket #34114</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34114/34114.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34114/34114.5.diff/1461869421333435</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36702 (Increase humanism in first comment) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:47:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36702#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36702#comment:2/1461869256269804</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36702-2.diff attached to Ticket #36702</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:39:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36702/36702-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36702/36702-2.diff/1461868761571777</guid>
      <description>&lt;p&gt;
Jorbin'd
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36702 (Increase humanism in first comment) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:37:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36702#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36702#comment:1/1461868677074636</guid>
      <description>&lt;p&gt;
I like this idea and see no reason it should be "Mr WordPress" -- why would WordPress possibly have a gender?
&lt;/p&gt;
&lt;p&gt;
While I'm partial to Wapuu for kawaii reasons, "A WordPress Commenter" is fine.
&lt;/p&gt;
&lt;p&gt;
If so, let's swap out the final "o" for "e" in the patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36455 (Call opcache_reset() after plug-in, theme or core update) updated</title>
      
        <dc:creator>JasWSInc</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:37:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36455#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36455#comment:2/1461868673783505</guid>
      <description>&lt;p&gt;
+1 for trying to automatically flush the OPcache (in core) after any theme/plugin update occurs. Perhaps on the &lt;code&gt;shutdown&lt;/code&gt; action hook once the update is complete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36473 (JavaScript error in theme customizer a specific value of before_widget) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:19:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36473#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36473#comment:7/1461867556396798</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37322" title="Customize: Remove format placeholders from widget templates and ..."&gt;37322&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Remove format placeholders from widget templates and selectors, fixing a jQuery selector syntax error and the broken highlight/shift-click behaviors.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The issues occur in themes that register sidebars that reference a single format placeholder (&lt;code&gt;%1$s&lt;/code&gt; and &lt;code&gt;%2$s&lt;/code&gt;) multiple times, such as in the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; attributes for &lt;code&gt;$before_widget&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props martin.krcho, westonruter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36473" title="#36473: defect (bug): JavaScript error in theme customizer a specific value of before_widget (closed: fixed)"&gt;#36473&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37322]: Customize: Remove format placeholders from widget templates and ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37322</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37322/1461867555102789</guid>
      <description>&lt;p&gt;
Customize: Remove format placeholders from widget templates and selectors, fixing a jQuery selector syntax error and the broken highlight/shift-click behaviors.
&lt;/p&gt;
&lt;p&gt;
The issues occur in themes that register sidebars that reference a single format placeholder (&lt;code&gt;%1$s&lt;/code&gt; and &lt;code&gt;%2$s&lt;/code&gt;) multiple times, such as in the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; attributes for &lt;code&gt;$before_widget&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props martin.krcho, westonruter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36473" title="#36473: defect (bug): JavaScript error in theme customizer a specific value of before_widget (closed: fixed)"&gt;#36473&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36702.diff attached to Ticket #36702</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:13:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36702/36702.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36702/36702.diff/1461867239696344</guid>
      <description>&lt;p&gt;
Change 'Mr WordPress' to 'A WordPress Commentor'
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36702 (Increase humanism in first comment) created</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36702</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36702/1461867189860469</guid>
      <description>&lt;p&gt;
In the vein of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/30089" title="Increase both mystery and humanism"&gt;[30089]&lt;/a&gt;, this patch proposes changing the name of the first commenter in new builds of WordPress.
&lt;/p&gt;
&lt;p&gt;
The first comment has historically been left by "Mr WordPress" in order to indicate it's a comment left by a 'person.' One, therefore, cannot simply suggest we change this to 'WordPress' as that does not demonstrate humanity.
&lt;/p&gt;
&lt;p&gt;
I propose one of the following choices:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Mx WordPress - Mx is accepted as a &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Mx_(title)"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;gender-nonspecific title&lt;/a&gt;, however it could be difficult to translate into all languages.
&lt;/li&gt;&lt;li&gt;Captain WordPress - There is no gender involved and this could be translated, though it implies a ranking hierarchy that may be confusing.
&lt;/li&gt;&lt;li&gt;Wapuu - Wapuu has no gender, and we could use a &lt;code&gt;wapuu@wordpress.org&lt;/code&gt; email address that uses Wapuu as a gravatar, however Wapuu is less likely to be known by new members of WordPress (and they are the most likely to see the comment and wonder what it is).
&lt;/li&gt;&lt;li&gt;A WordPress Commenter - This is the most clear about both what the darn thing is and who left it.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'm attaching a patch for the last proposal, as I feel it's both the most understandable and translatable of the lot.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9993 (Rss and atom feeds are dropping some characters) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Thu, 28 Apr 2016 18:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9993#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9993#comment:25/1461867135225137</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/9993#comment:24" title="Comment 24"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@stevenkword Maybe add tests for Atom also?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This might be a case where the naming conventions don't quite make sense.  Both Atom and RSS feeds use the same &lt;code&gt;the_title_rss()&lt;/code&gt; method in their respective templates.  The only difference being that the Atom template wraps the output in CDATA ,which would be unnecessary, but not problematic after this change.
&lt;/p&gt;
&lt;p&gt;
Ideally, since both templates use XML (the export component too), naming the method &lt;code&gt;the_title_xml()&lt;/code&gt; would have been more appropriate.  While we do have the ability to add unit tests for Atom as of 4.5, I think the tests proposed in this ticket cover those test cases.  As a future part of adding test coverage for feeds, I would like to add a new &lt;code&gt;common.php&lt;/code&gt; to &lt;code&gt;/tests/feed/&lt;/code&gt; to help make things more obvious.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36473 (JavaScript error in theme customizer a specific value of before_widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 17:31:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36473#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36473#comment:6/1461864713931494</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36126 (lastBuildDate in comment feed may not be empty) updated</title>
      
        <dc:creator>stevenkword</dc:creator>

      <pubDate>Thu, 28 Apr 2016 17:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36126#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36126#comment:7/1461864019010446</guid>
      <description>&lt;p&gt;
At first I thought this related to &lt;a href="https://core.trac.wordpress.org/ticket/4575"&gt;https://core.trac.wordpress.org/ticket/4575&lt;/a&gt; via changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32765" title="Improve lastBuildDate timestamp in rss feeds
RSS feed timestamps ..."&gt;[32765]&lt;/a&gt;.  However, since that was later reverted in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/33281" title="Feeds: Revert [32765] because of objections raised in #4575.
"&gt;[33281]&lt;/a&gt;, it looks like the problem existed prior to those changes.
&lt;/p&gt;
&lt;p&gt;
Currently in trunk, I am able to move all comments to the trash and view domain.com/comments/feed/ and get the empty &lt;code&gt;&amp;lt;lastBuildDate&amp;gt;&lt;/code&gt; tags you mention.  In this case, it is more likely that the empty string is being caused by an empty return value from &lt;code&gt;get_lastcommentmodified()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/feed-rss2-comments.php#L46"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/feed-rss2-comments.php#L46&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>danieliser</dc:creator>

      <pubDate>Thu, 28 Apr 2016 17:19:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:18/1461863945070501</guid>
      <description>&lt;p&gt;
It may be worth considering a 2 step transition here.
&lt;/p&gt;
&lt;p&gt;
Step 1: Combine the settings into a single recognizable UI
Step 2: Completely change the way the UI looks, works.
&lt;/p&gt;
&lt;p&gt;
My concern with your above interface would be that it not only rearranges years worth of memorizing where things are to begin with (none of these elements have been rearranged in a long time), but also looks completely different than they are used to.
&lt;/p&gt;
&lt;p&gt;
May be too big of a jump, though I could be wrong.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 17:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:17/1461862907085742</guid>
      <description>&lt;p&gt;
@ocean90 Check out &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34114/34114.4.diff" title="Attachment '34114.4.diff' in Ticket #34114"&gt;34114.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34114/34114.4.diff" title="Download"&gt;​&lt;/a&gt;, where I took your suggestions to heart.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34114.4.diff attached to Ticket #34114</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 17:00:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34114/34114.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34114/34114.4.diff/1461862859562014</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>internationalized-plugin-de_DE.mo attached to Ticket #34114</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:50:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34114/internationalized-plugin-de_DE.mo</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34114/internationalized-plugin-de_DE.mo/1461862255209695</guid>
      <description>&lt;p&gt;
.mo file used in the tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>internationalized-theme-de_DE.mo attached to Ticket #34114</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:50:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34114/internationalized-theme-de_DE.mo</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34114/internationalized-theme-de_DE.mo/1461862244945881</guid>
      <description>&lt;p&gt;
.mo file used in the tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35340 (PHP Fatal Error: Call to undefined method WP_Error::exists()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:48:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35340#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35340#comment:6/1461862081614135</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:16/1461861936217930</guid>
      <description>&lt;p&gt;
@ocean90 I forgot to mention that you need to create the &lt;code&gt;.mo&lt;/code&gt; files yourself when applying the patch, as these binary files are not part of it. Can upload them to this ticket though.
&lt;/p&gt;
&lt;p&gt;
Thanks for the heads-up regarding the copying. I don't like that method, but didn't see how else I could do it. Will look at &lt;code&gt;Tests_Theme_ThemeDir&lt;/code&gt; and &lt;code&gt;Tests_Import_Import&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36677 (WP 4.5.1 severely limits image upload size to under 2 MB) updated</title>
      
        <dc:creator>Pixeldrummer</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:41:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36677#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36677#comment:8/1461861706591794</guid>
      <description>&lt;p&gt;
&lt;em&gt;This in reply to your request for values, &lt;code&gt;upload_max_filesize&lt;/code&gt; and &lt;code&gt;post_max_size&lt;/code&gt; from our server admin:&lt;/em&gt;
...public policy is 10M, goodman is 32M, civitas is showing 10M. That would mean that there's no way the php.ini setting is going to be limiting uploads to 2M. Even accounting for the fact that base64 encoding increases the size by roughly 33%, even the 10M limits should allow more than 6MB even if the raw post size is getting limited rather than the real file size.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36677#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the explanation.
&lt;/p&gt;
&lt;p&gt;
I've assumed this was a PHP configuration problem as the error message and the limit match exactly the (old) default in PHP. Could you check what are the values of &lt;code&gt;upload_max_filesize&lt;/code&gt; and &lt;code&gt;post_max_size&lt;/code&gt; to rule them out.  Also, could you experiment with several different themes (including the default Twenty *) to confirm if this is caused only by that theme or is more common.
&lt;/p&gt;
&lt;p&gt;
I know there were some problems with Imagick using more memory while resizing uploaded images, but then PHP will run out of memory and the error message will be different.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35340 (PHP Fatal Error: Call to undefined method WP_Error::exists()) updated</title>
      
        <dc:creator>lordspace</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35340#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35340#comment:5/1461860963222399</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey folks,
&lt;/p&gt;
&lt;p&gt;
I am getting the same error when trying to login with ThemeMyLogin plugin and the user doesn't exist. will submit this at the plugin support page as well.
&lt;/p&gt;
&lt;p&gt;
Fatal error: Call to undefined method WP_Error::exists() in /home/myuser/aaaa_app/some-site.com/htdocs/wp-includes/capabilities.php on line 509
&lt;/p&gt;
&lt;p&gt;
WP. 4.5.1
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Update:&lt;/strong&gt; It seems this error was happening in my code which was executing in 'login_redirect' filter. It was checking for:
&lt;/p&gt;
&lt;p&gt;
current_user_can( 'manage_options' )
or
user_can( $user, 'manage_options' )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34114 (Remove the requirement to call load_plugin_textdomain() or ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:22:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34114#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34114#comment:15/1461860535076495</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Some feedback on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34114/34114.3.diff" title="Attachment '34114.3.diff' in Ticket #34114"&gt;34114.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34114/34114.3.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The tests are failing for me:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;) Tests_L10n::test_load_plugin_textdomain_just_in_time
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-Das ist ein Dummy Plugin
+This is a dummy plugin
/tests/phpunit/tests/l10n.php:70
2) Tests_L10n::test_load_theme_textdomain_just_in_time
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-Das ist ein Dummy Theme
+This is a dummy theme
/tests/phpunit/tests/l10n.php:99
&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;In &lt;code&gt;load_textdomain_just_in_time()&lt;/code&gt; the default value of the static variable should be null and &lt;code&gt;if ( empty( $cached_mofiles ) )&lt;/code&gt;  should be replace with &lt;code&gt;if ( null === $cached_mofiles )&lt;/code&gt;. This prevents recurring lookups for installs which don't have any translations installed.
&lt;/li&gt;&lt;li&gt;The tests should remove the test plugin/theme from the plugin/theme directory
&lt;ul&gt;&lt;li&gt;Do we really have to copy them? &lt;code&gt;Tests_Theme_ThemeDir&lt;/code&gt; is changing the global &lt;code&gt;$wp_theme_directories&lt;/code&gt; variable, for the plugin we could just require the file like &lt;code&gt;Tests_Import_Import&lt;/code&gt; does.
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35381 (Introduce `WP_Term_Query`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 16:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35381#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35381#comment:2/1461859441373830</guid>
      <description>&lt;p&gt;
I just finished working on an initial approach for the class. Will post this a little later tonight with some notes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>michaelarestad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 15:31:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:17/1461857467308217</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here, "Right" is also into post content, which I can see confusing many users.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Worth testing if we want to go that route. Out of context, it could maybe be confusing, but I suspect it would be fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29660 (Functions in wp_includes/query.php assume non-null return value from ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 28 Apr 2016 15:28:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29660#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29660#comment:21/1461857335969469</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I remain concerned that adding &lt;code&gt;empty()&lt;/code&gt; checks will paper over legitimate bugs.
&lt;/p&gt;
&lt;p&gt;
The code path described by @Howdy_McGee in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33729" title="#33729: defect (bug): Non-Object Errors using `is_category()` For Categories That Don't Exist (closed: duplicate)"&gt;#33729&lt;/a&gt; is a legitimate way to trigger the PHP notice, but IMHO this is due to an underlying problem with the semantics of our &lt;code&gt;is_*&lt;/code&gt; functions.
&lt;/p&gt;
&lt;p&gt;
What does it mean to say &lt;code&gt;$this-&amp;gt;is_category()&lt;/code&gt;? Does it mean that a category was *requested*? Or does it mean that you're viewing an actual category? The way &lt;code&gt;WP_Query&lt;/code&gt; currently works, the answer depends on when you ask the question:
&lt;/p&gt;
&lt;ol class="loweralpha"&gt;&lt;li&gt;At or before 'pre_get_posts', &lt;code&gt;is_category&lt;/code&gt; is based solely on the results of the rewrite rule, *not* on a database query. So on &lt;code&gt;example.com/category/foo&lt;/code&gt;, when 'foo' does not exist, &lt;code&gt;$this-&amp;gt;is_category&lt;/code&gt; is *true* and &lt;code&gt;$this-&amp;gt;is_404&lt;/code&gt; is *false*.
&lt;/li&gt;&lt;li&gt;If you ask the question after &lt;code&gt;WP::handle_404()&lt;/code&gt;, then &lt;code&gt;$this-&amp;gt;is_category&lt;/code&gt; is *false* and &lt;code&gt;$this-&amp;gt;is_404&lt;/code&gt; is *true*.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Which is "correct"? It depends on whether you think the &lt;code&gt;is_*&lt;/code&gt; flags should reflect the intent of the request, or the results of the request. It seems to me that &lt;code&gt;is_404&lt;/code&gt; always refers to the query results - why would you _intend_ to query a 404? - so I think the latter is the case. But if I'm right about this, then &lt;code&gt;is_*&lt;/code&gt; queries are pretty much unreliable anytime before &lt;code&gt;'wp'&lt;/code&gt;. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14729" title="#14729: defect (bug): Fatal errors after [15531] when conditional tags are used too early (closed: fixed)"&gt;#14729&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Alternatively, it would be possible to modify the way that &lt;code&gt;parse_query()&lt;/code&gt; works, so that flags like &lt;code&gt;is_category&lt;/code&gt; are set back to false if the requested object does not exist. But this will mean doing an additional database query during every page request. There are a bunch of existing tickets related to this: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31355" title="#31355: defect (bug): Custom hierarchical post type 404s when `get_queried_object` is called ... (closed: fixed)"&gt;#31355&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27015" title="#27015: defect (bug): WP_Query::get_queried_object() does not always work in 'pre_get_posts' (new)"&gt;#27015&lt;/a&gt;, &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/21790" title="#21790: defect (bug): When set a static front page WP main query isn't set correctly (assigned)"&gt;#21790&lt;/a&gt;. It is a pretty major change to the way &lt;code&gt;WP_Query&lt;/code&gt; works, but it may be required if we're going to promise developers that they can use the conditional &lt;code&gt;is_*&lt;/code&gt; methods at 'pre_get_posts'.
&lt;/p&gt;
&lt;p&gt;
In any case, given the above, I'm against papering over the error. Developers should be aware that &lt;code&gt;is_category()&lt;/code&gt; is not accurate at 'pre_get_posts'. If anything, we should make the error message more descriptive.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36177 (default htaccess should include security measures) updated</title>
      
        <dc:creator>bendoh</dc:creator>

      <pubDate>Thu, 28 Apr 2016 15:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36177#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36177#comment:7/1461856637710646</guid>
      <description>&lt;p&gt;
Having just dealt with a site hacked because of Revolution Slider (*fist shake*); this sprang to mind and I'm glad there's a ticket for it.
&lt;/p&gt;
&lt;p&gt;
So &amp;lt;Location&amp;gt; may not be usable in .htaccess, but it appears &amp;lt;Files&amp;gt; is. Since wp-content/uploads should presumably never have executable code, perhaps adding wp-content/uploads/.htaccess with the following rule
will work:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;Files *.php&amp;gt;
deny from all
&amp;lt;/Files&amp;gt;
&lt;/pre&gt;&lt;p&gt;
This works for me, but it may break existing plugins that would (stupidly) rely on executing uploaded PHP files.
&lt;/p&gt;
&lt;p&gt;
But how does this particular .htaccess file get locked down? Presumably wp-content/uploads is writable by the webserver, so it doesn't completely prevent vulnerable code from manipulating or deleting this file entirely. What springs to mind is using a sticky bit on wp-content/uploads so that as long as .htaccess isn't owned by the webserver, that file can't be manipulated from vulnerable PHP code.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, sticky bits aren't a thing on Windows, AFAIK.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 14:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:37/1461855447191004</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36701 (Pages parameter for get_comments) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Thu, 28 Apr 2016 14:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36701#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36701#comment:1/1461854515141271</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @mireillesan - Thanks for the ticket, and welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Pagination parameters seem like a good idea. The parameter name for the page number, based on what we use in other query classes, would be &lt;code&gt;paged&lt;/code&gt;. We are less consistent about the "per page" parameter name - &lt;code&gt;WP_Query&lt;/code&gt; calls it &lt;code&gt;posts_per_page&lt;/code&gt;, while &lt;code&gt;WP_User_Query&lt;/code&gt; calls it &lt;code&gt;number&lt;/code&gt;. Since we already have &lt;code&gt;number&lt;/code&gt; in &lt;code&gt;WP_Comment_Query&lt;/code&gt;, it makes sense to use it here too.
&lt;/p&gt;
&lt;p&gt;
When introducing new parameters like this, which are conceptually similar to other existing params (in this case, &lt;code&gt;offset&lt;/code&gt;), we should have unit tests that demonstrate which one takes precedence - ie, what happens when you pass &lt;code&gt;offset=21&amp;amp;paged=5&amp;amp;number=20&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36701 (Pages parameter for get_comments) created</title>
      
        <dc:creator>mireillesan</dc:creator>

      <pubDate>Thu, 28 Apr 2016 14:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36701</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36701/1461854170209184</guid>
      <description>&lt;p&gt;
Would it also be possible to add a $paged parameter to get_comments?
&lt;/p&gt;
&lt;p&gt;
That way we can have more control over the pagination.
&lt;/p&gt;
&lt;p&gt;
For example:
Reviews are usually just comments with an extra meta_key.
To display only the reviews, we can easily filter them inside get_comments.
&lt;/p&gt;
&lt;p&gt;
There's one issue, the pagination (paginate_comments_links) grabs total comment count and ignoring the fact that get_comments only displays selected comments based on meta_key.
&lt;/p&gt;
&lt;p&gt;
Hope it makes sense what I wrote, if not, just let me know.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36473 (JavaScript error in theme customizer a specific value of before_widget) updated</title>
      
        <dc:creator>rsusanto</dc:creator>

      <pubDate>Thu, 28 Apr 2016 14:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36473#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36473#comment:5/1461852553249850</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36473.diff attached to Ticket #36473</title>
      
        <dc:creator>rsusanto</dc:creator>

      <pubDate>Thu, 28 Apr 2016 14:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36473/36473.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36473/36473.diff/1461852474300483</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #36531,​36700 batch updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 28 Apr 2016 13:58:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36531%2C36700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36531%2C36700/1461851929252022</guid>
      <description>duplicate: &lt;p&gt;
Hi @sangsang,
&lt;/p&gt;
&lt;p&gt;
Welcome to Trac and thanks for taking the time to fill out a bug report. I suspect you're probably running into the same issue described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36531" title="#36531: defect (bug): Default image size medium_large is not generated (closed: fixed)"&gt;#36531&lt;/a&gt;, wherein the &lt;code&gt;medium_large&lt;/code&gt; size is removed after saving the media size options. &lt;code&gt;medium_fixed&lt;/code&gt; is not a size that is generated by WordPress.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #36302 (wp_update_comment needs a filter) updated</title>
      
        <dc:creator>frankiet</dc:creator>

      <pubDate>Thu, 28 Apr 2016 13:56:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36302#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36302#comment:9/1461851807433860</guid>
      <description>&lt;p&gt;
Thank you all for the replies
What do you think of this version?
&lt;/p&gt;
&lt;p&gt;
New
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Filter a comment's data before it is sanitized and updated into the database.
 *
 * @since x.x.x
 *
 * @param array $commentarr data.
 */
$commentarr = apply_filters( 'wp_update_comment_data', $commentarr);
// If an error occurred
if ( ! $commentarr || is_wp_error( $commentarr ) ) {
    $error_message = __('We apologize, but an error has occurred while processing your request');
    if( is_wp_error( $commentarr ) ){
        $error_message = $commentarr-&amp;gt;get_error_message();
    }
     /**
     * Fires after an error occurs
     *
     * @since  x.x.x
     *
     * @param string $error_message
     * @param array $commentarr data.
     */
    do_action( 'wp_update_comment_data_error', $error_message, $commentarr);
    if ( defined('DOING_AJAX') ){
        die($error_message );
    }
    wp_die( $error_message, 429 );
}
&lt;/pre&gt;&lt;p&gt;
New &lt;code&gt;do_action( 'edit_comment',$comment_ID, $comment, $old_comment); &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Full version:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="sd"&gt;/**
 * Updates an existing comment in the database.
 *
 * Filters the comment and makes sure certain fields are valid before updating.
 *
 * @since 2.0.0
 *
 * @global wpdb $wpdb WordPress database abstraction object.
 *
 * @param array $commentarr Contains information on the comment.
 * @return int Comment was updated if value is 1, or was not updated if value is 0.
 */&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;wp_update_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// First, get all of the original fields
&lt;/span&gt;    &lt;span class="nv"&gt;$comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_ID'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;ARRAY_A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$old_comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Make sure that the comment post ID is valid (if specified).
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_post_ID'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_post_ID'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="sd"&gt;/**
     * Filter a comment's data before it is sanitized and updated into the database.
     *
     * @since x.x.x
     *
     * @param array $commentarr data.
     */&lt;/span&gt;
    &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_update_comment_data'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// If an error occurred
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;is_wp_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$error_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'We apologize, but an error has occurred while processing your request'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;is_wp_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nv"&gt;$error_message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;get_error_message&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="sd"&gt;/**
         * Fires after an error occurs
         *
         * @since x.x.x
         *
         * @param string $error_message
         * @param array $commentarr data.
         */&lt;/span&gt;
        &lt;span class="nx"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'wp_update_comment_data_error'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$error_message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;defined&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DOING_AJAX'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$error_message&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;wp_die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$error_message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;429&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="c1"&gt;// Escape data pulled from DB.
&lt;/span&gt;    &lt;span class="nv"&gt;$comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_slash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$old_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="c1"&gt;// Merge old and new fields with new fields overwriting old ones.
&lt;/span&gt;    &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_filter_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// Now extract the merged array.
&lt;/span&gt;    &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_unslash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$commentarr&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="sd"&gt;/**
     * Filter the comment content before it is updated in the database.
     *
     * @since 1.5.0
     *
     * @param string $comment_content The comment data.
     */&lt;/span&gt;
    &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_content'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'comment_save_pre'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_content'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_date_gmt'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_gmt_from_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_date'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'hold'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'approve'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nv"&gt;$comment_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_ID'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nv"&gt;$comment_post_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'comment_post_ID'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="nv"&gt;$keys&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'comment_post_ID'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_author'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_author_email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_approved'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_karma'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_author_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_date_gmt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_parent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_agent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'comment_author_IP'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_array_slice_assoc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$keys&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nv"&gt;$rval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;compact&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'comment_ID'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;clean_comment_cache&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comment_ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;wp_update_comment_count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$comment_post_ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="sd"&gt;/**
     * Fires immediately after a comment is updated in the database.
     *
     * The hook also fires immediately before comment status transition hooks are fired.
     *
     * @since 1.2.0
     * @since x.x.x The `$comment` and `$old_comment` parameters were added.
     * @param int $comment_ID The comment ID.
     * @param object $comment The comment.
     * @param array $old_comment Old comment.
     */&lt;/span&gt;
    &lt;span class="nv"&gt;$comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment_ID&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'edit_comment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nv"&gt;$comment_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$old_comment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;wp_transition_comment_status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;comment_approved&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$old_status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$comment&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$rval&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36699 (Caption (maybe shortcodes in general) break when "lower than" ...) closed</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 28 Apr 2016 13:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36699#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36699#comment:2/1461850110979188</guid>
      <description>wontfix: &lt;p&gt;
This isn't a bug. The less than character needs to be encoded because shortcodes are not parsed if they're inside an HTML tag. The un-encoded less than is really the opening of an HTML tag that you just never close, causing the closing caption shortcode tag to not be seen.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4280 (Allow to constrain widgets being displayed on certain page types only) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 13:04:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4280#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4280#comment:59/1461848684121142</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by voldemortensen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1461848680002639"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Thu, 28 Apr 2016 11:56:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:16/1461844591063312</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36474#comment:15" title="Comment 15"&gt;michaelarestad&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@danieliser trying the PT/Customizer view slide works pretty well also:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One thing that concerns me about using the sliding navigation to change panels is that "Back" is "Right", which works well in the Customizer because it's off-screen. Here, "Right" is also into post content, which I can see confusing many users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35566 (Remove title attributes: Tag cloud widget uses title to display topic count) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 11:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35566#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35566#comment:15/1461844097227709</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1461844094000997"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 11:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:95</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:95/1461844097073524</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by rianrietveld. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1461844094000997"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33301 (Create and edit links inline) updated</title>
      
        <dc:creator>rianrietveld</dc:creator>

      <pubDate>Thu, 28 Apr 2016 11:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33301#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33301#comment:94/1461843958668420</guid>
      <description>&lt;p&gt;
Test results form the accessibility test team on Wp 4.5 plus patch 33301.voiceover.diff
&lt;/p&gt;
&lt;p&gt;
Same questions where asked as in the first test &lt;a class="ext-link" href="https://make.wordpress.org/accessibility/2016/02/25/accessibility-usertest-create-and-edit-links-inline/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/accessibility/2016/02/25/accessibility-usertest-create-and-edit-links-inline/&lt;/a&gt;. Conclusion is at the bottom, only Gabriela tested with VoceOver.
&lt;/p&gt;
&lt;p&gt;
Results:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Reagan Lynch (screen reader user &amp;amp; developer)&lt;/strong&gt;
This works great. I understand the instructions, I can edit the link,
insert the link, and also look for a page or post to link to.
When I type a word into the search field JAWS correctly reports that
there are results and I can arrow through the results using the up and
down arrows. Very nicely done.
AT used: Windows 7 and JAWS 17
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Shaun Everiss  (screen reader user)&lt;/strong&gt;
Ok works. I didn't find any issues, access, incerting, searching for things to insert it works.
AT used: NVDA, Windows 7, Firefox 45
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Tobias Clemens Häcker (screen reader user &amp;amp; developer)&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Q: Can you understand how to add a link using this inline window
A: Yes and no. After pressing Ctrl + K I can start typing the URL or a search term and get voice notifications of the amount of results. However when using the up/down arrows to select the a single result only their number (6 of 20 for example) is spoken by NVDA, not the title. I can activate apply once it’s selected by hitting Tab to access the “Apply” button and then Enter to activate it.
Q: Is this usable with your assistive technology?
A: Yes and no, I don’t know which post is selected but typing in a URL works fine.
&lt;/p&gt;
&lt;p&gt;
Q: Can you hear the search result if you enter a search word instead of an URL
A: No, only the number of results or the number of a specific result is spoken.
&lt;/p&gt;
&lt;p&gt;
Q: Are you missing functionality to make this work for you
A: I miss voice output of search results.
&lt;/p&gt;
&lt;p&gt;
AT used: NVDA, Windows 7, Chrome browser
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Michelle DeYoung  (developer)&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Results Windows10/Chrome/NVDA:
Can you understand how to search for a page using a search word using this inline window - Partially.
Is this usable with your assistive technology? - Not the Search feature.
If you use a screen reader: can you hear the search result if you enter a search word instead of an URL - No.
The Search result list items are announced as "unknown", so user will not know what to select.
&lt;/p&gt;
&lt;p&gt;
Results Win10/FF/NVDA
The pop-up is announced as "Alert". The heading is not voiced by the screen readers. The heading should be announced as "Insert/Edit Link". The keyboard focus is dropped in the URL text field, so when the user tabs the first item they hear announced after 'Alert" is "Link text". If the user happened to arrow as their first movement in the popup, they are thrown down to the section list of content items. Each content item is not voiced, but their URL is - and the cursor focus remains in the URL field. The URL field is dynamically updated with the url of the items they are arrowing through in the list. The user will not know that the URL is being updated dynamically. I suggest it gets updated only when a selection is made. If the URL field was initially populated with a user URL,  that URL should remain until they have decided to make another selection. The section list of content is announced as "Section".  I think it needs to be clearer about what the section contains.  When the user tabs to the Section list of content, they can arrow to the items, but none of them are announced.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Geof Collis (screen reader user &amp;amp; developer)&lt;/strong&gt;
I'm not sure how the wheel part works but I had no problems inserting a link or finding a page on the site.
AT used: Windows 7, JAWS 14.5, IE 11.0.96
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Sirisha Gubba (developer)&lt;/strong&gt;
Q: Can you understand how to add a link using this inline window?
A: Instructions are given through place holder and as user starts typing in they are gone.
AT user does not understand the if the search result is a page or the modified date  next to it etc.
Wheel should have more description then just "Link Option" button.
Unable to close the "type/search URL" small window with "ESC" key
&lt;/p&gt;
&lt;p&gt;
Q: Can you understand how to search for a page using a search word using this inline window?
A: AT and Keyboard: Able to search it but unable to close the "Edit/delete" small window  with ESC key and also user is unable to access the "EDIT" and Delete" button
&lt;/p&gt;
&lt;p&gt;
AT used: NVDA, with FF on Windows7
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Gabriela Nino de Rivera Torres (developer)&lt;/strong&gt;
Keyboard only test: Everything worked great. The only issue that I found is that the Esc key won't close the small window.
&lt;/p&gt;
&lt;p&gt;
Safari/VoiceOver test:
Can you access the little window with the input field for the link? - yes
Can you understand how to add a link using this inline window? – yes
Can you understand how to search for a page using a search word using this inline window?
cmd +K opens the small window, VoiceOver announce it as a combo box and instructs me to type text to display a list of choices.
Is this usable with your assistive technology? I will say yes, but some details need attention:
&lt;/p&gt;
&lt;p&gt;
1) When opening the small window with cmd + K, the focus will jump very fast two or three times before settling down on the input field. I hear VoiceOver announcing: “li, li, links selected”. This problem won’t prevent the user to use the functionality because once the focus is on the input field it will stay there.
&lt;/p&gt;
&lt;p&gt;
2) When searching on the input field, I see the number of results found on the VoiceOver text console, but there is not enough time to announce them before VoiceOver announce me the word that I typed on the input field. I tried lowering VoiceOver speech rate and pitch, also I changed the verbosity from high to medium. It did a little difference, but in most of the cases the results are not announced.
&lt;/p&gt;
&lt;p&gt;
3) I’m not sure if the extra options window is part of the test, but when searching, VoiceOver does not announce the total of results found. If I move to the list of the results, VoiceOver won’t announce the result when it receives focus. Although, it does announce them in the small window (like Twitter does ;-)).
&lt;/p&gt;
&lt;p&gt;
If you use a screen reader: can you hear the search result if you enter a search word instead of an URL? See comment number 2 below.
Are you missing functionality to make this work for you? I won’t say missing a functionality since only small details need to be corrected to make it work with the assistive technology.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Conclusions&lt;/strong&gt;
Common remark: the window doesn't close on Esc.
The functionality works understandable in IE/JAWS, FF/NVDA
Chrome/NVDA has isses: it misses voice output of search results.
For Safari/Voiceover: see remarks 1,2 and 3 from Gabriela.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36700 (media setting missing size.) created</title>
      
        <dc:creator>sangsang</dc:creator>

      <pubDate>Thu, 28 Apr 2016 11:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36700</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36700/1461841349851778</guid>
      <description>&lt;p&gt;
settings &amp;gt; media
&lt;/p&gt;
&lt;p&gt;
only 3 image size is shown.
thumbnail, medium, large.
&lt;/p&gt;
&lt;p&gt;
additional size -
medium_large,
medium_fixed
image size is missing.
&lt;/p&gt;
&lt;p&gt;
so need to add these size in the setting.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35785 (Concatenating "wp-post-new-reload=true" with URL repeatedly) updated</title>
      
        <dc:creator>Tyrannous</dc:creator>

      <pubDate>Thu, 28 Apr 2016 10:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35785#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35785#comment:2/1461840432633224</guid>
      <description>&lt;p&gt;
This also happens on new post screen when you press "Publish" multiple times while the site loads.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36698 (Multiple menu items are identified as the parent of the current page) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Thu, 28 Apr 2016 10:41:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36698#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36698#comment:1/1461840088788057</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
It's a bit hard to distinguish if this might be a bug or not from the screenshot, we would need some more information about it, does this also happen when using Twenty Sixteen and no plugins?
&lt;/p&gt;
&lt;p&gt;
Alternatively if you could share the HTML output for the full menu that would be helpful to us as it's hard to distinguish what pages and the relation between them (it's not always possible just by looking at the HTML either, but it's a start).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36699 (Caption (maybe shortcodes in general) break when "lower than" ...) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Thu, 28 Apr 2016 10:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36699#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36699#comment:1/1461840024031191</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Bildschirmfoto 2016-04-28 um 12.20.24.png attached to Ticket #36699</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Thu, 28 Apr 2016 10:29:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36699/Bildschirmfoto%202016-04-28%20um%2012.20.24.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36699/Bildschirmfoto%202016-04-28%20um%2012.20.24.png/1461839394772390</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36699 (Caption (maybe shortcodes in general) break when "lower than" ...) created</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Thu, 28 Apr 2016 10:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36699</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36699/1461838999684368</guid>
      <description>&lt;p&gt;
The caption shortcode (maybe shortcodes with start and end tags in general) break when "lower than" character is inserted manually:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[caption]&amp;lt;a href=""&amp;gt;&amp;lt;img class="" src="" alt="Caption with special character lower than &amp;amp;lt; breaks WP" /&amp;gt;&amp;lt;/a&amp;gt; Caption with special character lower than &amp;lt; breaks WP (inserted manually)[/caption]
&lt;/pre&gt;&lt;p&gt;
Using the UI it is escaped correctly with &lt;code&gt;&amp;amp;lt;&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
You can see a testcase here: &lt;a class="ext-link" href="http://testserver.torstenlandsiedel.de/2016/04/testcase-caption/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://testserver.torstenlandsiedel.de/2016/04/testcase-caption/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>wperror.jpg attached to Ticket #36698</title>
      
        <dc:creator>binigwasay</dc:creator>

      <pubDate>Thu, 28 Apr 2016 10:07:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36698/wperror.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36698/wperror.jpg/1461838074781467</guid>
      <description>&lt;p&gt;
Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36698 (Multiple menu items are identified as the parent of the current page) created</title>
      
        <dc:creator>binigwasay</dc:creator>

      <pubDate>Thu, 28 Apr 2016 10:07:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36698</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36698/1461838021575406</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://www.dropbox.com/s/hci9mvyg4k9ziht/wperror.jpg?dl=0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.dropbox.com/s/hci9mvyg4k9ziht/wperror.jpg?dl=0&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Menu - Custom Menu
&lt;/p&gt;
&lt;p&gt;
Events - is category entry from custom menu
&lt;/p&gt;
&lt;p&gt;
Booking - is a page contents shortcode for contact form 7
&lt;/p&gt;
&lt;p&gt;
Event and booking is not related at all
&lt;/p&gt;
&lt;p&gt;
But when I open any article from events category then booking menu item will become current item parent also.
&lt;/p&gt;
&lt;p&gt;
Is this a bug?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36681 (BUG - not uploaded Image shown on product page set up by visual ...) closed</title>
      
        <dc:creator>hyewonwang</dc:creator>

      <pubDate>Thu, 28 Apr 2016 09:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36681#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36681#comment:1/1461836209482068</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Thu, 28 Apr 2016 09:10:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:15/1461834603859367</guid>
      <description>&lt;p&gt;
@westonruter and @celloexpressions - thank you for your input. In such case I'll do browser/device testing and then worry about letting the community know about potential issues with backwards compatibility. I'm counting on your experience and little help with this step :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Thu, 28 Apr 2016 08:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:8/1461833650633068</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36492#comment:7" title="Comment 7"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyway, we should probably discuss this in a broader scope since there are also a &lt;code&gt;WP_Post_Type&lt;/code&gt; and &lt;code&gt;WP_Taxonomy&lt;/code&gt; class in the making which use a similar approach (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36217" title="#36217: enhancement: WP_Post_Type class (closed: fixed)"&gt;#36217&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36224" title="#36224: enhancement: WP_Taxonomy class (closed: fixed)"&gt;#36224&lt;/a&gt;).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure! Drew mentioned pointed them out to me as well. I have yet to review the most recent patches on those tickets though.
&lt;/p&gt;
&lt;p&gt;
I like the idea of handling arguments in a &lt;code&gt;get_instance()&lt;/code&gt; method or similar. I'm not 100% fond of the current approaches anyway.
&lt;/p&gt;
&lt;p&gt;
This shouldn't stop us from introducing &lt;code&gt;WP_Status&lt;/code&gt; in a revised patch. Such base class will surely help with handling the arguments in a better way, because it makes us think more about it :-)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That definitely makes sense. Just for an overview, can you outline to me which parts of WordPress have statuses? Not sure atm if there are others beside posts and comments. I would also like to broaden this discussion for the above two tickets - a post type and a taxonomy (and a comment type) are basically "content types", similar to how a post status and a comment status are both statuses.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Posts, comments and users all currently have some kind of statuses. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36594" title="#36594: enhancement: Add a Filter for Custom Comment Statuses (closed: duplicate)"&gt;#36594&lt;/a&gt; and &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/34316" title="#34316: enhancement: User status inconsistent between single-site &amp;amp; multisite (new)"&gt;#34316&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 28 Apr 2016 08:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:7/1461830877199670</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36492#comment:6" title="Comment 6"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My primary concern with the current approach is that we're doing argument handling in the constructor.
&lt;/p&gt;
&lt;p&gt;
Outside of the Customizer APIs and list table classes, we don't usually do much argument handling in constructors, as they're typically relegated to populating properties in core classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The thing is the arguments are only validated and filled with defaults to populate the properties afterwards. I agree in so far that the constructor should not do anything external with the arguments. But we can think about alternatives, for example we could put all the arguments into an &lt;code&gt;$args&lt;/code&gt; property in the class and then move the logic from the constructor into a &lt;code&gt;validate()&lt;/code&gt; method. We could then use magic getters to access these values as properties. I definitely think the validating logic should stay in the class and not in the &lt;code&gt;register_post_status()&lt;/code&gt; function. Anyway, we should probably discuss this in a broader scope since there are also a &lt;code&gt;WP_Post_Type&lt;/code&gt; and &lt;code&gt;WP_Taxonomy&lt;/code&gt; class in the making which use a similar approach (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36217" title="#36217: enhancement: WP_Post_Type class (closed: fixed)"&gt;#36217&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36224" title="#36224: enhancement: WP_Taxonomy class (closed: fixed)"&gt;#36224&lt;/a&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With that in mind, I think we'd do well to implement a base/sub-class pattern with something like &lt;code&gt;WP_Status&lt;/code&gt; – as &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12706#comment:211" title="Comment 211 for #12706: task (blessed): Custom post status bugs (reopened)"&gt;suggested&lt;/a&gt; by @johnjamesjacoby in #12706 – that could be then extended for the posts, or users, or comments, or * use cases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That definitely makes sense. Just for an overview, can you outline to me which parts of WordPress have statuses? Not sure atm if there are others beside posts and comments. I would also like to broaden this discussion for the above two tickets - a post type and a taxonomy (and a comment type) are basically "content types", similar to how a post status and a comment status are both statuses.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36492 (Add `WP_Post_Status` class) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 28 Apr 2016 07:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36492#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36492#comment:6/1461828665448686</guid>
      <description>&lt;p&gt;
@flixos90 I've iterated on 36492.2.diff with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36492/36492.3.diff" title="Attachment '36492.3.diff' in Ticket #36492"&gt;36492.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36492/36492.3.diff" title="Download"&gt;​&lt;/a&gt;. Changes mostly comprise coding standards and docs fixes. Some notes not implemented in the new patch:
&lt;/p&gt;
&lt;p&gt;
My primary concern with the current approach is that we're doing argument handling in the constructor.
&lt;/p&gt;
&lt;p&gt;
Outside of the Customizer APIs and list table classes, we don't usually do much argument handling in constructors, as they're typically relegated to populating properties in core classes.
&lt;/p&gt;
&lt;p&gt;
With that in mind, I think we'd do well to implement a base/sub-class pattern with something like &lt;code&gt;WP_Status&lt;/code&gt; – as &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12706#comment:211" title="Comment 211 for #12706: task (blessed): Custom post status bugs (reopened)"&gt;suggested&lt;/a&gt; by @johnjamesjacoby in #12706 – that could be then extended for the posts, or users, or comments, or * use cases.
&lt;/p&gt;
&lt;p&gt;
Implementing argument handling in the constructor could throw up some roadblocks when it comes to implementing a base class.
&lt;/p&gt;
&lt;p&gt;
All that said, I wouldn't really have a problem with committing a &lt;code&gt;WP_Post_Status&lt;/code&gt; first-run, though I would package it with a &lt;code&gt;WP_Status&lt;/code&gt; base class in the same release. There's enough cross-over and possibility for standardized methods of handling underlying status architecture elsewhere in core to give the base/sub-class approach due consideration. Post statuses is an excellent place to start.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36492.3.diff attached to Ticket #36492</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 28 Apr 2016 07:05:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36492/36492.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36492/36492.3.diff/1461827112402007</guid>
      <description>&lt;p&gt;
Docs fixes + coding standards
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 28 Apr 2016 06:44:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:3/1461825883018131</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Starting to investigate, this isn't trivial to implement and there are some UX issues to think about. I think we should treat it as a somewhat hidden progressive enhancement - if you drag an image in and you can upload it'll open the media modal and let you go through the process, but we can't cleanly display upload or permissions errors here.
&lt;/p&gt;
&lt;p&gt;
I'm attempting to adapt the code from the media library. I started with &lt;code&gt;tmpl-uploader-inline&lt;/code&gt; in &lt;code&gt;wp-includes/media-template.php&lt;/code&gt;, but working through it I don't think we should add any of that markup, only the JS should work (keeping the UI simple). I'm also looking at the &lt;code&gt;UploaderWindow&lt;/code&gt; view in &lt;code&gt;wp-includes/js/media-views.js&lt;/code&gt;. Need to investigate &lt;code&gt;wp.Uploader&lt;/code&gt; next; work in progress patch is uploaded (if anyone else wants to iterate, please do so, otherwise I'll revisit likely in a couple weeks).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35827.wip.diff attached to Ticket #35827</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 28 Apr 2016 06:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35827/35827.wip.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35827/35827.wip.diff/1461825613541830</guid>
      <description>&lt;p&gt;
Initial work in progress.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #28574 ('Requires at Least' - New File Header Name for Plugin &amp; Theme ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 06:06:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28574#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28574#comment:6/1461823576537598</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1461823574002617"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>nguyencongtuan</dc:creator>

      <pubDate>Thu, 28 Apr 2016 05:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:3/1461822976642611</guid>
      <description>&lt;p&gt;
Hi @westonruter ,
&lt;/p&gt;
&lt;p&gt;
I will do it and submit the patch for it in the next month.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Thu, 28 Apr 2016 05:55:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:93/1461822939620387</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:91" title="Comment 91"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd love to help with improving the admin menu. It's a pain to work with.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Serious +1 to this.
&lt;/p&gt;
&lt;p&gt;
I'd also like to suggest that the menu and the permissions for pages be decoupled because the logic is incredibly hard to follow and hard-to-follow permissions code makes for custom code that often has easily bypassed permissions.
&lt;/p&gt;
&lt;p&gt;
And, decoupling would not stop us from having a helper function that both added mentions AND set permissions but having the internal logic decouple would mean we could better understand the logic and actually deal with concerns separately when we need to.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:92" title="Comment 92"&gt;sc0ttkclark&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What if ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1 to that too.
&lt;/p&gt;
&lt;p&gt;
JMTCW.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Thu, 28 Apr 2016 05:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:2/1461821879207101</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Agreed. The HTTP requests should be combined into a single request.
&lt;/p&gt;
&lt;p&gt;
If anyone wants to own this we can milestone it for 4.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36557 (WordPress Version 4.5 Upgrade Failure) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 28 Apr 2016 05:24:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36557#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36557#comment:3/1461821051469102</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36676 (WordPress TinyMCE toolbar/tabs unresponsive in Chrome Version ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 28 Apr 2016 05:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36676#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36676#comment:6/1461821027863702</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36679 (Document WP_UnitTestCase-&gt;go_to()) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Thu, 28 Apr 2016 05:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36679#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36679#comment:2/1461820987450517</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36453 (Disable 'replace' button in replace media frame while attachment is ...) updated</title>
      
        <dc:creator>shahpranaf</dc:creator>

      <pubDate>Thu, 28 Apr 2016 05:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36453#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36453#comment:3/1461820976130081</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 28 Apr 2016 04:33:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:1/1461818011010846</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by nguyencongtuan. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1461818008000264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) created</title>
      
        <dc:creator>nguyencongtuan</dc:creator>

      <pubDate>Thu, 28 Apr 2016 04:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697/1461817959935352</guid>
      <description>&lt;p&gt;
Have many admin-ajax.php are called ( total depend on post types and taxonomy types are defined ) at same time when click on Menu from Customizer or Shift + click on menu from Preview Window that cause take many resource from server
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>michaelarestad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 04:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:15/1461817638831939</guid>
      <description>&lt;p&gt;
@danieliser trying the PT/Customizer view slide works pretty well also:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/-7sqwuVbcR.jpg"&gt;&lt;img src="https://cldup.com/-7sqwuVbcR.jpg" alt="https://cldup.com/-7sqwuVbcR.jpg" crossorigin="anonymous" title="https://cldup.com/-7sqwuVbcR.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/Gg1tfHcA_C.jpg"&gt;&lt;img src="https://cldup.com/Gg1tfHcA_C.jpg" alt="https://cldup.com/Gg1tfHcA_C.jpg" crossorigin="anonymous" title="https://cldup.com/Gg1tfHcA_C.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://cloudup.com/c1eOSdBPfJB"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/c1eOSdBPfJB&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35314 (Background color should be applied to the body element instead of html) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 28 Apr 2016 03:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35314#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35314#comment:4/1461815958609857</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>danieliser</dc:creator>

      <pubDate>Thu, 28 Apr 2016 03:42:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:14/1461814941649775</guid>
      <description>&lt;p&gt;
@michaelarestad your renderings look pretty nice I like the faded styling, though still has the collapsables.
&lt;/p&gt;
&lt;p&gt;
I think I completely agree with @celloexpressions in that the entire UI needs a rethink. With my biggest plugin I recently did the same thing, reduced nearly a dozen metaboxes (most from extensions) into 3 that all others could be merged into.
&lt;/p&gt;
&lt;p&gt;
IE Reduce &amp;amp; simplify. I think coming up with a creative way to include all of the relevant info into 1 or 2 new boxes would be ideal.
&lt;/p&gt;
&lt;p&gt;
Some things I can see working well
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Publish, preview buttons, post status &amp;amp; scheduling should be collapsed into a smarter UI, @michaelarestad has the right idea moving scheduling into a secondary button off of the Publish button.
&lt;/li&gt;&lt;li&gt;Categories &amp;amp; Tags would be ideal just below the content editor, part of it to be more precise. Some slick interface to tag there would be perfect. Think of how post terms are displayed in the post footer on most themes, makes since thats where you would edit it too.
&lt;/li&gt;&lt;li&gt;That would only leave featured image &amp;amp; post format
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
None of the renderings so far have included Page Attributes (parent, template) or Author fields, just something to consider.
&lt;/p&gt;
&lt;p&gt;
Side note, I am assuming that Excerpt, Discussions, Trackbacks etc will be left untouched?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36474 (Revamp meta boxes) updated</title>
      
        <dc:creator>michaelarestad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 03:25:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36474#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36474#comment:13/1461813935913809</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are several issues with accordion UIs, and the Customizer ended up moving away from them as a result (and also Press This I believe).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Press This and the Customizer both essentially still use an accordion-like interface that still requires an extra click. The only difference is that those interfaces isolate the view once clicked rather than allowing other sections to be opened simultaneously. I prefer that as it's more ATM-like (one thing at a time)
&lt;/p&gt;
&lt;p&gt;
Here is an idea I've been toying with:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/DKl0HiUaOq-1200x1200.png"&gt;&lt;img src="https://cldup.com/DKl0HiUaOq-1200x1200.png" alt="https://cldup.com/DKl0HiUaOq-1200x1200.png" crossorigin="anonymous" title="https://cldup.com/DKl0HiUaOq-1200x1200.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
And in context (ignore the custom fields as that's in progress):
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/MyS7FZkL9d-3000x3000.jpeg"&gt;&lt;img src="https://cldup.com/MyS7FZkL9d-3000x3000.jpeg" alt="https://cldup.com/MyS7FZkL9d-3000x3000.jpeg" crossorigin="anonymous" title="https://cldup.com/MyS7FZkL9d-3000x3000.jpeg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It could also be modified to isolate each view like Press This and Customizer, but I think having the ability to see more than one at a time is valuable in this situation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Thu, 28 Apr 2016 03:15:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:92/1461813321177429</guid>
      <description>&lt;p&gt;
What if we converted the basic array into a true object and a new hook that ran after the main admin_menu hook, so we could begin to issue doing it wrong notices if the admin_menu has actions set on it.
&lt;/p&gt;
&lt;p&gt;
The new object could do whatever it needed and still be compatible for a good deal of hacks too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35314 (Background color should be applied to the body element instead of html) closed</title>
      
        <dc:creator>michaelarestad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 03:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35314#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35314#comment:3/1461813308809907</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37321" title="Component: Administration
Setting the background color on `body` is ..."&gt;37321&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Component: Administration&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Setting the background color on &lt;code&gt;body&lt;/code&gt; is more flexible than on the &lt;code&gt;html&lt;/code&gt; element. This patch assigns the background color to &lt;code&gt;body&lt;/code&gt; instead of the &lt;code&gt;html&lt;/code&gt; element.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35314" title="#35314: enhancement: Background color should be applied to the body element instead of html (closed: fixed)"&gt;#35314&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37321]: Component: Administration  Setting the background color on `body` is ...</title>
      
        <dc:creator>michaelarestad</dc:creator>

      <pubDate>Thu, 28 Apr 2016 03:15:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37321</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37321/1461813308194165</guid>
      <description>&lt;p&gt;
Component: Administration
&lt;/p&gt;
&lt;p&gt;
Setting the background color on &lt;code&gt;body&lt;/code&gt; is more flexible than on the &lt;code&gt;html&lt;/code&gt; element. This patch assigns the background color to &lt;code&gt;body&lt;/code&gt; instead of the &lt;code&gt;html&lt;/code&gt; element.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35314" title="#35314: enhancement: Background color should be applied to the body element instead of html (closed: fixed)"&gt;#35314&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Thu, 28 Apr 2016 02:36:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:26/1461811017003474</guid>
      <description>&lt;p&gt;
I want to add some clarifications to some of what's been written before.
&lt;/p&gt;
&lt;p&gt;
First of all, I want to make it clear that I am not against the goal of having a &lt;strong&gt;public API&lt;/strong&gt; for letting plugins &amp;amp; themes &lt;strong&gt;register autoloader mappings at runtime&lt;/strong&gt;. However, I see this as the &lt;strong&gt;last step&lt;/strong&gt; in a long term effort, not the &lt;strong&gt;first step&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
I think that, starting out with the public API spells disaster while we still have the following issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;we are still bound to PHP 5.2 compatibility (&lt;strong&gt;no namespaces&lt;/strong&gt;);
&lt;/li&gt;&lt;li&gt;we have &lt;strong&gt;no clear naming rules&lt;/strong&gt; for some of the elements we are trying to write the API for;
&lt;/li&gt;&lt;li&gt;Core is in a state where it does &lt;strong&gt;not know what is needed from this API&lt;/strong&gt;, and &lt;strong&gt;couldn't fulfil its requirements&lt;/strong&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The "just use Composer" approach does not preclude adding a public API at some point that lets plugins &amp;amp; themes add autoloader mappings at runtime. However, it &lt;strong&gt;postpones deciding on the final structure of this API&lt;/strong&gt; until a point in time where the above three issues have been solved. Composer is just a fast way to be able to attack these systematically.
&lt;/p&gt;
&lt;p&gt;
Anther thing to consider is that the one true benefit that an autoloader brings to the table that you can't easily have without is the way you can "just use" libraries. You don't have to call any bootstrapping code that will &lt;code&gt;include&lt;/code&gt; lots of stuff, you don't have to &lt;code&gt;include&lt;/code&gt; yourself, you don't have to check if an external class exists first. If you now start with a custom autoloader specific to WordPress Core, you might be able to autoload a plugin's classes without &lt;code&gt;include&lt;/code&gt;s (you saved a few lines of typing), but you blocked access to that biggest benefit of an autoloader. Let's be honest: all the great modern PHP libraries can saves us hours and days of custom development when working on a larger project &lt;strong&gt;will not be rewritten&lt;/strong&gt; to make them work with a WP-specific autoloader! So each of them will need special forks/bridges/adapters to use within WordPress. That's not really progress, if you ask me...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
With our approach, plugins and themes could start using the autoloader with WordPress 4.6 already, for instance. Changes at Core WordPress could then be made step by step, when the time is right for each of these steps.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, they could start using the autoloader. My personal belief is that this will lead to loads of breaking code further down the line, as we will have lots of plugins &amp;amp; themes that don't use namespaces and will produce all sorts of conflicts. We will then end up with thousands of problematic plugins, and no way to deal with the conflicts they produced. What's worse, with the backwards compatibility policy of WordPress, we would not even be able to make drastic changes to the autoloader itself to remedy that situation.
&lt;/p&gt;
&lt;p&gt;
Presence of an autoloader makes naming conflicts worse, as they may not be immediately obvious. That's why I think namespaces are an absolute must when using an autoloader.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we shouldn't allow for registration of custom autoload rules
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree, PSR-4/WP-? &amp;amp; classmaps should be more than enough.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The biggest problem with using Composer as a solution for WP is the sheer number of sites and servers that will not have it installed. Therefore the only viable option IMHO is to bake an autoloader into core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not an issue. For the approach I recommended above, Composer would only be used at development time for as long as WP stays at PHP 5.2. After that, you can just as well include Composer with WordPress, it does not need to be installed globally. So, if you want to bake in an autoloader into WordPress Core, why not just use the one that the rest of the PHP world uses?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"Hey everyone... we just took a giant step forward into the future... and adopted a deprecated system for autoloading!!!"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I might be wrong, but I assume that, when talking about an autoloader, you'll get a similar reaction for "&lt;em&gt;not using namespaces&lt;/em&gt;", as well as for "&lt;em&gt;not using Composer&lt;/em&gt;". As far as I am concerned, the simple fact of starting to build a &lt;em&gt;custom&lt;/em&gt; autoloader is "&lt;em&gt;reinventing the wheel from the past&lt;/em&gt;" as I wrote further above.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;Build a list of classes
&lt;/li&gt;&lt;li&gt;Map list of classes to file names
&lt;/li&gt;&lt;li&gt;Fix file names + fix includes that break in this step
&lt;/li&gt;&lt;li&gt;Break out classes when there is more than one class in a file + fix includes … again
&lt;/li&gt;&lt;li&gt;Think about autoloading … again (but now with a strong base)
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, I also recommend an approach similar to this. In addition to that, if we're using a &lt;code&gt;composer.json&lt;/code&gt; for the autoloading from the beginning, we have an easy way to test and immediately use the changes, and "&lt;em&gt;fixing includes&lt;/em&gt;" would be replaced by "&lt;em&gt;add to composer.json&lt;/em&gt;".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36696_tests.patch attached to Ticket #36696</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 28 Apr 2016 02:29:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36696/36696_tests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36696/36696_tests.patch/1461810542276487</guid>
      <description>&lt;p&gt;
Unit tests.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36696.patch attached to Ticket #36696</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 28 Apr 2016 02:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36696/36696.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36696/36696.patch/1461810398315579</guid>
      <description>&lt;p&gt;
Patch based on wonderboy's 27272.2.diff.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36696 (WP_Meta_Query can give wrong results when comparing large numbers) created</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Thu, 28 Apr 2016 02:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36696</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36696/1461810223046701</guid>
      <description>&lt;p&gt;
This is a follow on from &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/27272" title="#27272: defect (bug): WP meta queries comparing apples to oranges (reopened)"&gt;#27272&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Using quoted numbers can trigger MySQL to do floating-point type conversion (last two points in the first bullet list in &lt;a class="ext-link" href="http://dev.mysql.com/doc/refman/5.7/en/type-conversion.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://dev.mysql.com/doc/refman/5.7/en/type-conversion.html&lt;/a&gt;):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;If one of the arguments is a decimal value, comparison depends on the other argument. The arguments are compared as decimal values if the other argument is a decimal or integer value, or as floating-point values if the other argument is a floating-point value.
&lt;/li&gt;&lt;li&gt;In all other cases, the arguments are compared as floating-point (real) numbers.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Currently number literals are quoted in &lt;code&gt;WP_Meta_Query&lt;/code&gt;, whereas the LONGTEXT &lt;code&gt;meta_value&lt;/code&gt; column is cast to the passed-in meta &lt;code&gt;type&lt;/code&gt;. Thus when a number literal (quoted string) is compared to the &lt;code&gt;meta_value&lt;/code&gt; column (cast to SIGNED/UNSIGNED meta &lt;code&gt;type&lt;/code&gt;), floating-point type conversion is evoked. If the numbers involved are larger than the floating-point precision (53 bits), then incorrect comparisons can occur.
&lt;/p&gt;
&lt;p&gt;
You can see this happening in the &lt;code&gt;mysql&lt;/code&gt; client by using the 54 bit numbers 9007199254740992 (&lt;code&gt;0x20 0000 0000 0000&lt;/code&gt;) and 9007199254740993 (&lt;code&gt;0x20 0000 0000 0001&lt;/code&gt;):
&lt;/p&gt;
&lt;pre class="wiki"&gt;select '9007199254740992'+0.0, '9007199254740993'+0.0, '9007199254740992'+0.0 &amp;lt; '9007199254740993'+0.0;
&lt;/pre&gt;&lt;p&gt;
which will return:
&lt;/p&gt;
&lt;pre class="wiki"&gt;+------------------------+------------------------+-------------------------------------------------+
| '9007199254740992'+0.0 | '9007199254740993'+0.0 | '9007199254740992'+0.0 &amp;lt; '9007199254740993'+0.0 |
+------------------------+------------------------+-------------------------------------------------+
|   9.007199254740992e15 |   9.007199254740992e15 |                                               0 |
+------------------------+------------------------+-------------------------------------------------+
&lt;/pre&gt;&lt;p&gt;
(Note the results are system dependent.)
&lt;/p&gt;
&lt;p&gt;
A way around this is to not quote number literals, as in the proposed patch, based on @wonderboymusic's &lt;a href="https://core.trac.wordpress.org/ticket/27272#comment:5"&gt;27272.2.diff&lt;/a&gt;. It's been switched (ahem) to an if-elseif-else statement to easily allow cases like &lt;code&gt;DECIMAL(10,2)&lt;/code&gt; etc to be added. (Note the patch attached here also fixes a regression I introduced in previous proposed patches on the &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/27272" title="#27272: defect (bug): WP meta queries comparing apples to oranges (reopened)"&gt;#27272&lt;/a&gt; ticket re casting on &lt;code&gt;LIKE&lt;/code&gt;/&lt;code&gt;NOT LIKE&lt;/code&gt;.)
&lt;/p&gt;
&lt;p&gt;
This issue relates to &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/36652" title="#36652: enhancement: Use meta_value in a meta query to decide type format in SQL clause (reviewing)"&gt;#36652&lt;/a&gt; (using the PHP type of the meta &lt;code&gt;value&lt;/code&gt; to determine cast), and the proposed patch should facilitate it.
&lt;/p&gt;
&lt;p&gt;
This issue also relates to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36625" title="#36625: enhancement: Don't CAST the post meta value to CHAR in meta query (closed: fixed)"&gt;#36625&lt;/a&gt; (don't bother &lt;code&gt;CHAR&lt;/code&gt; casting &lt;code&gt;meta_value&lt;/code&gt; column), and the proposed patch shouldn't impact on a fix for that.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Thu, 28 Apr 2016 01:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:14/1461808223432110</guid>
      <description>&lt;p&gt;
Generally speaking, I am okay with breaking compatibility with things that aren't using the customizer API directly, but want to keep it as much as possible for anything following best practices and using specifically-blessed API features such as custom sections and panels.
&lt;/p&gt;
&lt;p&gt;
With that being said, skimming through the current patch, I don't think we need to be particularly worried about back-compat. The only PHP change is in &lt;code&gt;customize.php&lt;/code&gt; and is only adding a class name to the root element. In terms of the JS side, custom sections and panels that generally follow the core UI should be using the core functions for expanding/collapsing rather than implementing their own versions, so the changes there should work for them. If we don't change anything in the markup for an individual section or panel, essentially, I think we'll be okay in terms of custom sections and panels, even if the css and js changes are extensive. When the JS functions are overridden by a custom section, the UI is typically different anyway.
&lt;/p&gt;
&lt;p&gt;
What's described above with the &lt;code&gt;Zerif&lt;/code&gt; theme sounds like both generally a bad idea and something that a plugin could maybe do but a theme should not do. As a general rule themes should not do anything whatsoever to change the way the customizer UI works, only add their own panels/sections/controls as needed and build additional UI through custom object types when absolutely necessary. I'm totally fine with breaking things like that but we should make our best effort to inform anyone that may be affected. If this is a common issue (and even if it's only in a few themes), we should also probably have a broader discussion with the theme review team about what themes &lt;em&gt;shouldn't&lt;/em&gt; be allowed to do with the customizer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36649 (Right-hand CAST in a MySQL query produces DB error) closed</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Thu, 28 Apr 2016 01:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36649#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36649#comment:7/1461807512439350</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37320" title="Database: Set MySQL connection collation.
Fixes #36649.
"&gt;37320&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Database: Set MySQL connection collation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36649" title="#36649: defect (bug): Right-hand CAST in a MySQL query produces DB error (closed: fixed)"&gt;#36649&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [37320]: Database: Set MySQL connection collation.  Fixes #36649. </title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Thu, 28 Apr 2016 01:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/37320</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/37320/1461807511415662</guid>
      <description>&lt;p&gt;
Database: Set MySQL connection collation.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36649" title="#36649: defect (bug): Right-hand CAST in a MySQL query produces DB error (closed: fixed)"&gt;#36649&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36649.3.diff attached to Ticket #36649</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Thu, 28 Apr 2016 01:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36649/36649.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36649/36649.3.diff/1461807204866052</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36649 (Right-hand CAST in a MySQL query produces DB error) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 28 Apr 2016 00:57:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36649#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36649#comment:6/1461805045935352</guid>
      <description>&lt;p&gt;
Need to reset back to the original charset/collation at the end. Apart from that, looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Thu, 28 Apr 2016 00:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:25/1461803647624839</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:10" title="Comment 10"&gt;giuseppe.mazzapica&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An example (among literally dozens) the class &lt;code&gt;WP_MatchesMapRegex&lt;/code&gt; is located in a file named &lt;code&gt;class-wp.php&lt;/code&gt; that is so named because &lt;em&gt;also&lt;/em&gt; contains the class &lt;code&gt;WP&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Not to talk about some classes that are placed pretty much arbitrarily: &lt;code&gt;wpdb&lt;/code&gt; class is in &lt;code&gt;wp-db.php&lt;/code&gt; and &lt;code&gt;WP_Query&lt;/code&gt; class is in &lt;code&gt;query.php&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Problem numero uno.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:8" title="Comment 8"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think a staged approach to this is the best way. Firstly, let's make every class that's not always loaded (wp-admin, etc) loadable via autoloading. This is probably a large task in itself, as we need to switch to one-class-per-file with predictable file naming.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I strongly agree with that. Whatever solution there could be, the list of class and file names imo is priority 1. From there, further steps can be taken – to make the &lt;em&gt;one class per file&lt;/em&gt; rule stick. I want to suggest to break this task in multiple tickets and proceed from there on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Build a list of classes
&lt;/li&gt;&lt;li&gt;Map list of classes to file names
&lt;/li&gt;&lt;li&gt;Fix file names + fix includes that break in this step
&lt;/li&gt;&lt;li&gt;Break out classes when there is more than one class in a file + fix includes … again
&lt;/li&gt;&lt;li&gt;Think about autoloading … again (but now with a strong base)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
As I have done an throughout analysis (not by hand) of all classes, etc. in core (4.4), I can provide &lt;strong&gt;the base for step one&lt;/strong&gt;. (Yes, I know, those are not the classes in core, but the &lt;em&gt;used&lt;/em&gt; classes – hence &lt;em&gt;base for step one&lt;/em&gt;).
&lt;/p&gt;
&lt;pre class="wiki"&gt;	    Class                                  Matches REF        EXT min/Max PHP min/Max PHP all
	    -----------------------------------------------------------------------------------------
	    AMFReader                              1       user                   5.0.0
	    AMFStream                              1       user                   5.0.0
	    AVCSequenceParameterSetReader          1       user                   5.0.0
	    AtomEntry                              1       user                   4.0.0
	    AtomFeed                               1       user                   4.0.0
	    AtomParser                                     user                   5.0.0
	    Automatic_Upgrader_Skin                5       user                   5.0.0
	    Bulk_Plugin_Upgrader_Skin              1       user                   5.0.0
	    Bulk_Theme_Upgrader_Skin               1       user                   5.0.0
	    Bulk_Upgrader_Skin                     2       user                   5.0.0
	 CU COM                                    3       user                   4.0.0
	    Core_Upgrader                          4       user                   5.0.0
	    Custom_Background                      1       user                   5.0.0
	    Custom_Image_Header                    1       user                   5.0.0
	 C  DOMDocument                            6       dom        5.0.0       5.0.0
	    DOMText                                2       dom        5.0.0       5.0.0
	    DOMXPath                               6       dom        5.0.0       5.0.0
	    DateTimeZone                           5       date       5.2.0       5.2.0
	 C  Error                                  8       user                   4.0.0       5.1.0
	    Exception                              41      Core       5.1.0       5.1.0
	 C  Featured_Content                       1       user                   4.0.0       5.1.0
	    File_Upload_Upgrader                   2       user                   5.0.0
	    Gettext_Translations                   2       user                   5.0.0
	    IXR_Base64                             1       user                   5.0.0
	    IXR_Client                             3       user                   5.0.0
	    IXR_ClientMulticall                            user                   5.0.0
	    IXR_Date                               5       user                   5.0.0
	    IXR_Error                              214     user                   5.0.0
	    IXR_IntrospectionServer                        user                   5.0.0
	    IXR_Message                            3       user                   5.0.0
	    IXR_Request                            2       user                   5.0.0
	    IXR_Server                             2       user                   5.0.0
	    IXR_Value                              4       user                   5.0.0
	 C  Imagick                                2       imagick    2.0.0a1     5.1.3
	 C  ImagickPixel                           1       imagick    2.0.0a1     5.1.3
	    Language_Pack_Upgrader                 5       user                   5.0.0
	    Language_Pack_Upgrader_Skin            2       user                   5.0.0
	 C  MO                                     2       user                   5.0.0
	    MagpieRSS                              1       user                   5.0.0
	    Memcache                               1       memcache   0.2         4.3.3
	 C  NOOP_Translations                      1       user                   5.0.0
	    PDO                                    1       PDO        5.1.0       5.1.0
	  U PEAR                                   3       user                   4.0.0
	 CU PEAR_Error                             1       user                   4.0.0
	    PHPMailer                              1       user                   4.0.0       5.2.0RC1
	 C  PO                                     24      user                   5.0.0
	 C  POMO_CachedFileReader                  1       user                   5.0.0
	 C  POMO_CachedIntFileReader                       user                   5.0.0
	 C  POMO_FileReader                        1       user                   5.0.0
	 C  POMO_Reader                            3       user                   5.0.0
	 C  POMO_StringReader                      1       user                   5.0.0
	    POP3                                   1       user                   5.0.0
	    PasswordHash                           7       user                   5.0.0
	    PclZip                                 165     user                   5.0.0
	    Plugin_Installer_Skin                  2       user                   5.0.0
	    Plugin_Upgrader                        7       user                   5.0.0
	    Plugin_Upgrader_Skin                   1       user                   5.0.0
	    RSSCache                               1       user                   5.0.0
	    ReflectionClass                        1       Reflection 5.0.0       5.0.0
	    SMTP                                   1       user                   4.0.0       5.1.0
	 C  Services_JSON                          6       user                   5.0.0
	    Services_JSON_Error                    2       user                   5.0.0
	 C  SimplePie                              3       user                   4.0.0       5.3.0
	    SimplePie_Author                               user                   5.0.0
	    SimplePie_Cache                        3       user                   5.0.0
	    SimplePie_Cache_DB                     1       user                   5.0.0
	    SimplePie_Cache_File                   1       user                   5.0.0
	    SimplePie_Cache_Memcache                       user                   5.0.0
	    SimplePie_Cache_MySQL                          user                   4.0.0       5.1.0
	    SimplePie_Caption                              user                   5.0.0
	    SimplePie_Category                             user                   5.0.0
	    SimplePie_Content_Type_Sniffer                 user                   5.0.0
	    SimplePie_Copyright                            user                   5.0.0
	    SimplePie_Core                                 user                   4.0.0
	    SimplePie_Credit                               user                   5.0.0
	    SimplePie_Decode_HTML_Entities         1       user                   5.0.0
	    SimplePie_Enclosure                            user                   5.0.0
	    SimplePie_Exception                    3       user                   4.0.0       5.1.0
	    SimplePie_File                         2       user                   5.0.0
	    SimplePie_HTTP_Parser                  2       user                   5.0.0
	    SimplePie_IRI                          8       user                   5.0.0
	    SimplePie_Item                                 user                   4.0.0       5.3.0
	    SimplePie_Locator                              user                   5.0.0
	    SimplePie_Misc                         28      user                   4.0.0       5.1.0
	    SimplePie_Net_IPv6                     2       user                   5.0.0
	    SimplePie_Parse_Date                   2       user                   5.0.0
	    SimplePie_Parser                               user                   4.0.0       5.1.0
	    SimplePie_Rating                               user                   5.0.0
	    SimplePie_Registry                     6       user                   5.0.0
	    SimplePie_Restriction                  1       user                   5.0.0
	    SimplePie_Sanitize                     2       user                   5.0.0
	    SimplePie_Source                               user                   5.0.0
	    SimplePie_XML_Declaration_Parser               user                   5.0.0
	    SimplePie_gzdecode                     1       user                   5.0.0
	 C  SimpleXMLElement                       1       SimpleXML  5.0.1       5.0.1
	 C  Snoopy                                         user                   5.0.0
	 CU Sodium                                 2       user                   4.0.0
	 C  Text_Diff                              6       user                   5.0.0
	    Text_Diff_Engine_native                        user                   4.0.0
	    Text_Diff_Engine_shell                         user                   4.0.0       4.0.4
	    Text_Diff_Engine_string                        user                   4.0.0
	    Text_Diff_Engine_xdiff                         user                   4.0.0
	    Text_Diff_Op                           4       user                   5.0.0
	    Text_Diff_Op_add                       7       user                   5.0.0
	    Text_Diff_Op_change                    5       user                   5.0.0
	    Text_Diff_Op_copy                      10      user                   5.0.0
	    Text_Diff_Op_delete                    7       user                   5.0.0
	    Text_Diff_Renderer                     2       user                   5.0.0
	    Text_Diff_Renderer_inline              2       user                   4.0.0
	    Text_MappedDiff                                user                   5.0.0
	    Theme_Installer_Skin                   2       user                   5.0.0
	    Theme_Upgrader                         6       user                   5.0.0
	    Theme_Upgrader_Skin                    1       user                   5.0.0
	 C  Translation_Entry                      6       user                   5.0.0
	 C  Translations                           1       user                   5.0.0
	    Twenty_Eleven_Ephemera_Widget                  user                   4.0.0       4.3.0
	    Twenty_Fourteen_Ephemera_Widget                user                   5.0.0
	 C  TypeError                              17      user                   4.0.0       5.1.0
	    WP                                     1       user                   4.0.0       5.1.2
	    WP_Admin_Bar                                   user                   5.0.0
	    WP_Ajax_Response                       15      user                   5.0.0
	    WP_Automatic_Updater                   5       user                   5.0.0
	    WP_Comment                             4       user                   4.0.0       5.1.0
	    WP_Comment_Query                       5       user                   5.0.0
	    WP_Comments_List_Table                 1       user                   5.0.0
	    WP_Customize_Background_Image_Control  1       user                   5.0.0
	    WP_Customize_Background_Image_Setting  1       user                   5.0.0
	    WP_Customize_Color_Control             5       user                   5.0.0
	    WP_Customize_Control                   12      user                   5.0.0
	    WP_Customize_Cropped_Image_Control     1       user                   5.0.0
	    WP_Customize_Filter_Setting            2       user                   5.0.0
	    WP_Customize_Header_Image_Control      1       user                   5.0.0
	    WP_Customize_Header_Image_Setting      1       user                   5.0.0
	    WP_Customize_Image_Control             3       user                   5.0.0
	    WP_Customize_Manager                   3       user                   4.0.0       5.1.2
	    WP_Customize_Media_Control             1       user                   5.0.0
	    WP_Customize_Nav_Menu_Auto_Add_Control         user                   5.0.0
	    WP_Customize_Nav_Menu_Control                  user                   5.0.0
	    WP_Customize_Nav_Menu_Item_Control     1       user                   5.0.0
	    WP_Customize_Nav_Menu_Item_Setting     2       user                   4.0.0       5.1.0
	    WP_Customize_Nav_Menu_Location_Control 1       user                   5.0.0
	    WP_Customize_Nav_Menu_Name_Control             user                   5.0.0
	    WP_Customize_Nav_Menu_Section          1       user                   5.0.0
	    WP_Customize_Nav_Menu_Setting          2       user                   4.0.0       5.1.0
	    WP_Customize_Nav_Menus                 1       user                   5.0.0
	    WP_Customize_Nav_Menus_Panel           1       user                   5.0.0
	    WP_Customize_New_Menu_Control          1       user                   5.0.0
	    WP_Customize_New_Menu_Section          1       user                   5.0.0
	    WP_Customize_Panel                     2       user                   5.0.0
	    WP_Customize_Section                   5       user                   5.0.0
	    WP_Customize_Setting                   5       user                   5.0.0
	    WP_Customize_Sidebar_Section           1       user                   5.0.0
	    WP_Customize_Site_Icon_Control         1       user                   5.0.0
	    WP_Customize_Theme_Control             2       user                   5.0.0
	    WP_Customize_Themes_Section            1       user                   5.0.0
	    WP_Customize_Upload_Control            1       user                   5.0.0
	    WP_Customize_Widgets                   1       user                   4.0.0       5.2.0
	    WP_Date_Query                          4       user                   5.0.0
	    WP_Dependencies                        2       user                   5.0.0
	    WP_Embed                               1       user                   5.0.0
	 C  WP_Error                               319     user                   5.0.0
	    WP_Feed_Cache                                  user                   5.0.0
	    WP_Feed_Cache_Transient                1       user                   5.0.0
	    WP_Filesystem_Base                     4       user                   5.0.0
	    WP_Filesystem_Direct                           user                   5.0.0
	    WP_Filesystem_FTPext                           user                   5.0.0
	    WP_Filesystem_SSH2                             user                   5.0.0
	    WP_Filesystem_ftpsockets                       user                   5.0.0
	  U WP_HTTP                                1       user                   4.0.0
	    WP_HTTP_Fsockopen                              user                   5.0.0
	    WP_HTTP_IXR_Client                     2       user                   5.0.0
	    WP_HTTP_Proxy                          2       user                   5.0.0
	    WP_HTTP_Response                       1       user                   5.0.0
	  U WP_HTTP_Streams                        1       user                   4.0.0
	    WP_Http                                12      user                   5.0.0
	    WP_Http_Cookie                         2       user                   5.0.0
	    WP_Http_Curl                                   user                   5.0.0
	    WP_Http_Encoding                       5       user                   5.0.0
	    WP_Http_Streams                                user                   5.0.0
	    WP_Image_Editor                        2       user                   5.0.0
	    WP_Image_Editor_GD                             user                   5.0.0
	    WP_Image_Editor_Imagick                        user                   5.0.0
	    WP_Importer                                    user                   5.0.0
	    WP_Internal_Pointers                           user                   5.0.0
	    WP_Links_List_Table                            user                   5.0.0
	    WP_List_Table                          14      user                   5.0.0
	    WP_Locale                              7       user                   5.0.0
	    WP_MS_Sites_List_Table                         user                   5.0.0
	    WP_MS_Themes_List_Table                        user                   4.0.0       5.0.2
	    WP_MS_Users_List_Table                         user                   5.0.0
	    WP_MatchesMapRegex                     3       user                   5.0.0
	    WP_Media_List_Table                            user                   5.0.0
	    WP_Meta_Query                          6       user                   5.0.0
	    WP_Nav_Menu_Widget                             user                   5.0.0
	    WP_Network                             12      user                   5.0.0
	    WP_Object_Cache                        1       user                   4.0.0       5.2.0
	    WP_Plugin_Install_List_Table                   user                   5.0.0
	    WP_Plugins_List_Table                          user                   5.0.0
	    WP_Post                                8       user                   5.0.0
	    WP_Post_Comments_List_Table                    user                   5.0.0
	    WP_Posts_List_Table                            user                   5.0.0
	    WP_Press_This                          1       user                   5.0.0
	    WP_Query                               15      user                   5.0.0
	    WP_REST_Request                        3       user                   4.0.0       5.3.0
	    WP_REST_Response                       4       user                   5.0.0
	    WP_REST_Server                                 user                   4.0.0       5.1.0
	    WP_Rewrite                             1       user                   4.0.0       5.1.0
	    WP_Role                                3       user                   5.0.0
	    WP_Roles                               3       user                   5.0.0
	 C  WP_Screen                              5       user                   5.0.0
	    WP_Scripts                             3       user                   5.0.0
	    WP_Session_Tokens                      10      user                   5.0.0
	    WP_SimplePie_File                              user                   5.0.0
	    WP_SimplePie_Sanitize_KSES             1       user                   5.0.0
	    WP_Site_Icon                           1       user                   5.0.0
	    WP_Styles                              2       user                   5.0.0
	    WP_Tax_Query                           2       user                   5.0.0
	    WP_Term                                4       user                   5.0.0
	    WP_Terms_List_Table                            user                   5.0.0
	 C  WP_Text_Diff_Renderer_Table            1       user                   5.0.0
	    WP_Text_Diff_Renderer_inline                   user                   5.0.0
	    WP_Theme                               17      user                   4.0.0       5.4.0
	    WP_Theme_Install_List_Table                    user                   5.0.0
	    WP_Themes_List_Table                   1       user                   4.0.0       5.0.2
	    WP_Upgrader                            4       user                   5.0.0
	    WP_Upgrader_Skin                       8       user                   5.0.0
	    WP_User                                17      user                   5.0.0
	    WP_User_Meta_Session_Tokens                    user                   5.0.0
	    WP_User_Query                          3       user                   5.0.0
	 C  WP_User_Search                                 user                   5.0.0
	    WP_Users_List_Table                            user                   5.0.0
	    WP_Widget                              16      user                   5.0.0
	    WP_Widget_Archives                             user                   5.0.0
	    WP_Widget_Area_Customize_Control       1       user                   5.0.0
	    WP_Widget_Calendar                             user                   5.0.0
	    WP_Widget_Categories                           user                   5.0.0
	    WP_Widget_Factory                      1       user                   5.0.0
	    WP_Widget_Form_Customize_Control       1       user                   5.0.0
	    WP_Widget_Links                                user                   5.0.0
	    WP_Widget_Meta                                 user                   5.0.0
	    WP_Widget_Pages                                user                   5.0.0
	    WP_Widget_RSS                                  user                   5.0.0
	    WP_Widget_Recent_Comments                      user                   5.0.0
	    WP_Widget_Recent_Posts                         user                   5.0.0
	    WP_Widget_Search                               user                   5.0.0
	    WP_Widget_Tag_Cloud                            user                   5.0.0
	    WP_Widget_Text                                 user                   5.0.0
	    WP_oEmbed                              3       user                   4.0.0       5.1.0
	    WP_oEmbed_Controller                   1       user                   5.0.0
	    Walker                                 7       user                   5.0.0
	    Walker_Category                        1       user                   5.0.0
	    Walker_CategoryDropdown                1       user                   5.0.0
	    Walker_Category_Checklist              1       user                   5.0.0
	    Walker_Comment                         2       user                   5.0.0
	    Walker_Nav_Menu                        3       user                   5.0.0
	    Walker_Nav_Menu_Checklist              3       user                   5.0.0
	    Walker_Nav_Menu_Edit                           user                   5.0.0
	    Walker_Page                            1       user                   5.0.0
	    Walker_PageDropdown                    1       user                   5.0.0
	    XMLReader                              1       xmlreader  5.0.0       5.0.0
	 C  ZipArchive                             1       zip        1.6.0       5.2.0
	    _WP_Dependency                         1       user                   5.0.0
	 C  _WP_Editors                            4       user                   4.0.0       5.5.0
	    _WP_List_Table_Compat                  2       user                   5.0.0
	    ftp                                    1       user                   4.0.0       4.3.0
	    ftp_base                               2       user                   4.0.0       4.0.4
	 C  getID3                                 18      user                   5.0.0
	    getid3_ac3                             2       user                   5.0.0
	    getid3_apetag                          1       user                   5.0.0
	    getid3_asf                                     user                   4.0.0       5.3.0
	    getid3_dts                             1       user                   5.0.0
	    getid3_exception                       8       user                   4.0.0       5.1.0
	    getid3_flac                            2       user                   5.0.0
	    getid3_flv                                     user                   5.0.0
	    getid3_handler                         14      user                   5.0.0       5.1.0
	    getid3_id3v1                           2       user                   5.0.0
	    getid3_id3v2                           3       user                   5.0.0
	    getid3_lib                             901     user                   4.0.0       5.1.0
	    getid3_lyrics3                                 user                   5.0.0
	    getid3_matroska                                user                   4.0.0       5.1.0
	    getid3_mp3                             6       user                   5.0.0
	  U getid3_mpeg                            1       user                   4.0.0
	    getid3_ogg                             2       user                   5.0.0
	    getid3_quicktime                               user                   5.0.0
	    getid3_riff                            8       user                   4.0.0       5.1.0
	 CU idna_convert                           2       user                   4.0.0
	    parent                                 102     Core       5.0.0       5.0.0
	 CU pear                                           user                   4.0.0
	    phpmailerException                     25      user                   4.0.0       5.1.0
	    self                                   263     Core       5.0.0       5.0.0
	    stdClass                               34      Core       4.0.0       4.0.0
	 C  wp_atom_server                                 user                   5.0.0
	    wp_xmlrpc_server                               user                   4.0.0       5.1.0
	    wpdb                                   1       user                   5.0.0
	    -----------------------------------------------------------------------------------------
	    Total [294]                                                           5.2.0       5.4.0
&lt;/pre&gt;&lt;p&gt;
When you read until here: you can close your mouth now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36695 (wp-util: update to latest _.template syntax) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 28 Apr 2016 00:27:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36695#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36695#comment:1/1461803257785155</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36695.diff attached to Ticket #36695</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 28 Apr 2016 00:27:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36695/36695.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36695/36695.diff/1461803232992972</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36695 (wp-util: update to latest _.template syntax) created</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Thu, 28 Apr 2016 00:25:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36695</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36695/1461803130012130</guid>
      <description>&lt;p&gt;
With the upgrade to Underscore 1.8.3 in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36546" title="Update Backbone and Underscore to the latest versions.
Backbone, from ..."&gt;[36546]&lt;/a&gt; and 4.5, the preferred syntax for passing options to &lt;code&gt;_.template&lt;/code&gt; is to pass two parameters (&lt;code&gt;template, options&lt;/code&gt;) rather than three (&lt;code&gt;template, data, options&lt;/code&gt;).  This patch updates the &lt;code&gt;wp.template&lt;/code&gt; function accordingly (and also cleans up the style of the immediately surrounding code).
&lt;/p&gt;
&lt;p&gt;
No functional changes, since Underscore &lt;a class="ext-link" href="https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L1414-L1416"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;supports&lt;/a&gt; passing &lt;code&gt;data = null&lt;/code&gt; for backwards compatibility, but we should fix this to be consistent with the correct usage of the function.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>