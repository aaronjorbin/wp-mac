<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #48716 (Improve wording for PHP update warning // Part 2) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 25 Dec 2019 23:36:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48716#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48716#comment:9/1577316965915534</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's get this finalized I think :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think the strings in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/48716/48716.3.patch" title="Attachment '48716.3.patch' in Ticket #48716"&gt;48716.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/48716/48716.3.patch" title="Download"&gt;​&lt;/a&gt; look good, let's use most of them, but let's also change the one for:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your version of PHP (%s) is out of date&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To something a bit more reflective of what is the current situation:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your site is running an older version of PHP (%s)&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This because WordPress generally recommends the latest-ish version of PHP (depending on timing it may be a version behind), but older versions may still be actively supported, this makes it clearer that you're not on the latest version, but does not claim it is outdated, as that word is also associated with something not being supported.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47606 (Display Site Health score on Dashboard) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 25 Dec 2019 23:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47606#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47606#comment:8/1577315880074979</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/47606/47606.patch" title="Attachment '47606.patch' in Ticket #47606"&gt;47606.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/47606/47606.patch" title="Download"&gt;​&lt;/a&gt; has a few pieces to it for functionality sake.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It makes sure the &lt;code&gt;WP_Site_Health&lt;/code&gt; class can be instantiated once, so we don't have to recreate it for multiple page loads, this to facilitate that the class has to run in a few locations depending on context.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
An instance is called in &lt;code&gt;wp-settings.php&lt;/code&gt;, this is to make sure the introduced WP_Cron event can be picked up and handled (much like the fatal error handler, found right above it, is done, only without the assistance of helper functions).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The Dashboard widget it self is for the most part a straight copy from the plugin, as I mentioned I wanted to use that, it has a slight adjustment to the default string, shown only when no site health checks have been collected yet, to account for scheduled events being filterable so the frequency may not be what was originally implemented.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This also enqueues Site Health's JavaScript and styles on the Dashboard page, as well as the individual &lt;code&gt;site-health.php&lt;/code&gt; pages.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The task of running tests was separated out to its own function, &lt;code&gt;WP_Site_Health-&amp;gt;perform_test( $callback )&lt;/code&gt;, to prevent repeating our selves in too many places.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
And finally, a new cron schedule is added for &lt;code&gt;weekly&lt;/code&gt; events (I've always been puzzled by this not already existing, but it's not been needed, and now it is, so makes sense to introduce it).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9175 (Admin Option Page lacks Infos about serialized Option Values) reopened</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Wed, 25 Dec 2019 23:13:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9175#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9175#comment:29/1577315626149763</guid>
      <description>&lt;p&gt;
I was going to open a ticket asking for this feature. So I'm re-opening this ticket that was closed 8 years ago as &lt;em&gt;maybelater&lt;/em&gt;. Maybe &lt;em&gt;maybelater&lt;/em&gt; can become &lt;em&gt;maybesoon&lt;/em&gt; :P&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I find the options.php page to be very useful. A lot easier than working with phpMyAdmin in many cases.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Having the option to at least view the serialized data would be really useful. JSON-encoded data shows in options.php page, so why not serialized data?&lt;br /&gt;
Editing would be a +1&lt;br /&gt;
Ability to beautify array would be another +1&lt;br /&gt;
Ability to beautify JSON would be a cherry on top.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>47606.patch attached to Ticket #47606</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 25 Dec 2019 23:10:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47606/47606.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47606/47606.patch/1577315412237977</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #30991,​49081 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 21:40:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30991%2C49081</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30991%2C49081/1577310058034841</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/30991" title="#30991: defect (bug): Post type object capability 'delete_posts' is referenced in the posts ... (assigned)"&gt;#30991&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #47195 (Switch WP_UnitTest_Factory_For_Blog-&gt;create_object() to use ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 21:39:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47195#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47195#comment:10/1577309987989154</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47013" title="Tests: Update legacy arguments passed to ..."&gt;47013&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Update legacy arguments passed to &lt;code&gt;WP_UnitTest_Factory_For_Blog::create_object()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This converts the arguments originally meant for &lt;code&gt;wpmu_create_blog()&lt;/code&gt; to the ones used by &lt;code&gt;wp_insert_site()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47011" title="Tests: Switch `WP_UnitTest_Factory_For_Blog::create_object()` to use ..."&gt;[47011]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47195" title="#47195: defect (bug): Switch WP_UnitTest_Factory_For_Blog-&amp;gt;create_object() to use ... (closed: fixed)"&gt;#47195&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47013]: Tests: Update legacy arguments passed to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 21:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47013</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47013/1577309986792861</guid>
      <description>&lt;p&gt;
Tests: Update legacy arguments passed to &lt;code&gt;WP_UnitTest_Factory_For_Blog::create_object()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This converts the arguments originally meant for &lt;code&gt;wpmu_create_blog()&lt;/code&gt; to the ones used by &lt;code&gt;wp_insert_site()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47011" title="Tests: Switch `WP_UnitTest_Factory_For_Blog::create_object()` to use ..."&gt;[47011]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47195" title="#47195: defect (bug): Switch WP_UnitTest_Factory_For_Blog-&amp;gt;create_object() to use ... (closed: fixed)"&gt;#47195&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49081 (Undefined index) created</title>
      
        <dc:creator>aleapp</dc:creator>

      <pubDate>Wed, 25 Dec 2019 21:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49081</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49081/1577308141343593</guid>
      <description>&lt;p&gt;
When on custom post list page I have this notice&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Undefined property: stdClass::$delete_posts in /wp-admin/includes/class-wp-posts-list-table.php on line 416&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have custom post type 'shop' and the current user does not have 'delete_posts' capability but instead it has 'delete_shops' custom capability.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You may want to add isset check.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47195 (Switch WP_UnitTest_Factory_For_Blog-&gt;create_object() to use ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 18:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47195#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47195#comment:9/1577297715066926</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47012" title="Tests: Replace most instances of `wpmu_delete_blog()` not specifically ..."&gt;47012&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Replace most instances of &lt;code&gt;wpmu_delete_blog()&lt;/code&gt; not specifically testing that function with &lt;code&gt;wp_delete_site()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47011" title="Tests: Switch `WP_UnitTest_Factory_For_Blog::create_object()` to use ..."&gt;[47011]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47195" title="#47195: defect (bug): Switch WP_UnitTest_Factory_For_Blog-&amp;gt;create_object() to use ... (closed: fixed)"&gt;#47195&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47012]: Tests: Replace most instances of `wpmu_delete_blog()` not specifically ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 18:15:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47012</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47012/1577297713946477</guid>
      <description>&lt;p&gt;
Tests: Replace most instances of &lt;code&gt;wpmu_delete_blog()&lt;/code&gt; not specifically testing that function with &lt;code&gt;wp_delete_site()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47011" title="Tests: Switch `WP_UnitTest_Factory_For_Blog::create_object()` to use ..."&gt;[47011]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47195" title="#47195: defect (bug): Switch WP_UnitTest_Factory_For_Blog-&amp;gt;create_object() to use ... (closed: fixed)"&gt;#47195&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #47195 (Switch WP_UnitTest_Factory_For_Blog-&gt;create_object() to use ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 18:10:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47195#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47195#comment:8/1577297420794805</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47011" title="Tests: Switch `WP_UnitTest_Factory_For_Blog::create_object()` to use ..."&gt;47011&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Switch &lt;code&gt;WP_UnitTest_Factory_For_Blog::create_object()&lt;/code&gt; to use &lt;code&gt;wp_insert_site()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Map some arguments for backward compatibility with &lt;code&gt;wpmu_create_blog()&lt;/code&gt; previously used there.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props davidbaumwald, danielbachhuber, jeremyfelt, SergeyBiryukov.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47195" title="#47195: defect (bug): Switch WP_UnitTest_Factory_For_Blog-&amp;gt;create_object() to use ... (closed: fixed)"&gt;#47195&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47011]: Tests: Switch `WP_UnitTest_Factory_For_Blog::create_object()` to use ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 18:10:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47011</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47011/1577297419625381</guid>
      <description>&lt;p&gt;
Tests: Switch &lt;code&gt;WP_UnitTest_Factory_For_Blog::create_object()&lt;/code&gt; to use &lt;code&gt;wp_insert_site()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Map some arguments for backward compatibility with &lt;code&gt;wpmu_create_blog()&lt;/code&gt; previously used there.
&lt;/p&gt;
&lt;p&gt;
Props davidbaumwald, danielbachhuber, jeremyfelt, SergeyBiryukov.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/47195" title="#47195: defect (bug): Switch WP_UnitTest_Factory_For_Blog-&amp;gt;create_object() to use ... (closed: fixed)"&gt;#47195&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Wed, 25 Dec 2019 05:39:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:25/1577252381417532</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is not a "keyword war" :) &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You removed mine and added yours. You disagree with my opinion and I disagree with yours. Would you like it if I removed your keyword and put mine back? Of course not.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Over the last couple of days I've been trying to convince you and the original poster that even small changes like this one have to be assessed from all possible sides.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We assessed all of those sides ourselves, and came to a different conclusion.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The proposed change is a small enhancement to the outputted HTML white space and at the same time a small decrease to source code readability mostly because it removes code highlighting.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These are your opinions and are not representative of the coding standards or the opinions of others in this ticket. And the syntax highlighting is abysmal with no change due to the lack of surrounding whitespace.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry if you feel that way, and yes, this is causing me a lot of anxiety too. All I tried to do was a simple review of a small code change that seems to slightly enhance one thing but slightly diminish another.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We all have good intentions, and we all are trying our best, even when we do not agree. I choose to believe that’s a baseline understanding, particularly for all of us in this conversation after all of our lovely years together. 🤝&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I’d like to see some action taken in this multisite file to resolve this issue. We have a proposed patch on the floor that a multisite component maintainer would like to commit. @azaozz how would you like to proceed?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49080 (Cropping images in the Media Library doesn't affect post thumbnails) created</title>
      
        <dc:creator>pikamander2</dc:creator>

      <pubDate>Wed, 25 Dec 2019 05:36:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49080</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49080/1577252175316789</guid>
      <description>&lt;p&gt;
Steps to reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a 900x2000 image.
&lt;/li&gt;&lt;li&gt;Use the Media Library to crop it down to 900x400 (and save it).
&lt;/li&gt;&lt;li&gt;Add the featured image to a post.
&lt;/li&gt;&lt;li&gt;Visit the post.
&lt;/li&gt;&lt;li&gt;Note that the original image appears, not the cropped version.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
You can work around this by installing the third-party Regenerate Thumbnails plugin and clicking the "Regenerate image sizes" link on the post page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But why does this happen in the first place? It doesn't seem like the correct behavior. When an image is cropped in the Media Library, you would expect that to be roughly equivalent to uploading a new image that had been cropped beforehand.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 25 Dec 2019 03:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:105/1577246179758502</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by paragonie. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1577246178122900"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47195 (Switch WP_UnitTest_Factory_For_Blog-&gt;create_object() to use ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 02:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47195#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47195#comment:7/1577242686847450</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 02:39:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:15/1577241540074907</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 02:38:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:14/1577241527119093</guid>
      <description>&lt;p&gt;
Reopening for 5.3.3 consideration.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 02:34:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:13/1577241247720351</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47010" title="Media: Make sure `attachment_url_to_postid()` performs a ..."&gt;47010&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Make sure &lt;code&gt;attachment_url_to_postid()&lt;/code&gt; performs a case-sensitive search for the uploaded file name.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Previously, the first available match was returned, regardless of the case, which was not always the expected result.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props archon810, ben.greeley, tristangemus, vsamoletov, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39768" title="#39768: defect (bug): Incorrect image returned with attachment_url_to_postid() (closed: fixed)"&gt;#39768&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47010]: Media: Make sure `attachment_url_to_postid()` performs a ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Dec 2019 02:24:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47010</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47010/1577240678297505</guid>
      <description>&lt;p&gt;
Media: Make sure &lt;code&gt;attachment_url_to_postid()&lt;/code&gt; performs a case-sensitive search for the uploaded file name.
&lt;/p&gt;
&lt;p&gt;
Previously, the first available match was returned, regardless of the case, which was not always the expected result.
&lt;/p&gt;
&lt;p&gt;
Props archon810, ben.greeley, tristangemus, vsamoletov, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39768" title="#39768: defect (bug): Incorrect image returned with attachment_url_to_postid() (closed: fixed)"&gt;#39768&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>tobifjellner</dc:creator>

      <pubDate>Tue, 24 Dec 2019 22:26:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:4/1577226364851585</guid>
      <description>&lt;p&gt;
I don't like the idea of moving these files into /wp-content/uploads&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Some WordPress installations may place the /uploads directory even on a separate server. The WordPress installation shouldn't really put anything in the uploads directory.
&lt;/li&gt;&lt;li&gt;The file readme.html is updated now and then. It includes important information about WordPress' environment demands. But a system update shouldn't never change &lt;strong&gt;anything&lt;/strong&gt; in the /updates directory.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Also keep in mind that several translated versions of WordPress will either replace these files and/or add a localized version with a different name.&lt;br /&gt;
If we move license.txt and readme.html, then we would also need to shuffle around the corresponding localized versions.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>archon810</dc:creator>

      <pubDate>Tue, 24 Dec 2019 19:31:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:12/1577215871849268</guid>
      <description>&lt;p&gt;
Looking forward to it in 5.4.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49059 (Whitespace inside p element in wp-signup.php should be removed) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 24 Dec 2019 18:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49059#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49059#comment:24/1577213317512947</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49059#comment:23" title="Comment 23"&gt;johnjamesjacoby&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I added the commit keyword originally, and you removed it. Keyword wars are uncooperative.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is not a "keyword war" :) In my opinion this is not a good change to make. Removing the "commit" keyword is the result of that review. I'm sorry if I'm failing to express that more convincingly/in better words.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Over the last couple of days I've been trying to convince you and the original poster that even small changes like this one have to be assessed from all possible sides. The proposed change is a small enhancement to the outputted HTML white space and at the same time a small decrease to source code readability mostly because it removes code highlighting.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Arguments like this one are wholly unproductive. The notifications from this ticket are causing me too much anxiety, because you're wrong &lt;em&gt;and&lt;/em&gt; you're not listening and you're not trying to be helpful, so I'm unsubscribing.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry if you feel that way, and yes, this is causing me a lot of anxiety too. All I tried to do was a simple review of a small code change that seems to slightly enhance one thing but slightly diminish another.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39768 (Incorrect image returned with attachment_url_to_postid()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 17:53:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39768#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39768#comment:11/1577210000230942</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39768#comment:10" title="Comment 10"&gt;archon810&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An alternate solution, and one we went with, is to get all the rows in PHP and if &amp;gt;1, go through them and do a case sensitive match in PHP.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks, that actually seems the most straightforward option here, without any side effects that I can think of.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Implemented in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39768/39768.3.diff" title="Attachment '39768.3.diff' in Ticket #39768"&gt;39768.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39768/39768.3.diff" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39768.3.diff attached to Ticket #39768</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 17:51:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39768/39768.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39768/39768.3.diff/1577209917561089</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:17:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:51/1577204238797293</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47009" title="Docs: Use a third-person singular verb for comment template function ..."&gt;47009&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Use a third-person singular verb for comment template function descriptions, per the documentation standards.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47009]: Docs: Use a third-person singular verb for comment template function ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:17:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47009</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47009/1577204237688020</guid>
      <description>&lt;p&gt;
Docs: Use a third-person singular verb for comment template function descriptions, per the documentation standards.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:4/1577203715552475</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47008" title="Docs: Improve documentation for `get_comment_author_url()`.
Props ..."&gt;47008&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;get_comment_author_url()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props stevenlinx.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49076" title="#49076: defect (bug): get_comment_author_url() missing inline doc description for Code Reference (closed: fixed)"&gt;#49076&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47008]: Docs: Improve documentation for `get_comment_author_url()`.  Props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47008</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47008/1577203714458568</guid>
      <description>&lt;p&gt;
Docs: Improve documentation for &lt;code&gt;get_comment_author_url()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props stevenlinx.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49076" title="#49076: defect (bug): get_comment_author_url() missing inline doc description for Code Reference (closed: fixed)"&gt;#49076&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 16:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:3/1577203684098416</guid>
      <description>&lt;p&gt;
Hi there, welcome back to WordPress Trac! Thanks for the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The "must be within The Loop, or a comment loop" piece is probably not particularly relevant to the specific function, as it applies to other comments template functions as well. The rest looks good, though could perhaps be incorporated into the existing description and &lt;code&gt;@return&lt;/code&gt; tag to avoid repetition.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #10726,​49079 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:57:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=10726%2C49079</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=10726%2C49079/1577203029102899</guid>
      <description>duplicate: &lt;p&gt;
Hi there, thanks for the ticket!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We're already tracking this enhancement in &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10726" title="#10726: enhancement: Admin notifications for more than 1 email (reopened)"&gt;#10726&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #15317,​49074 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:54:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15317%2C49074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15317%2C49074/1577202860512083</guid>
      <description>duplicate: &lt;p&gt;
Hi there, welcome to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/15317" title="#15317: defect (bug): My Sites limited to 23 sites on Admin Bar (assigned)"&gt;#15317&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49079 (Allow more than one admin email (multiple recipients)) created</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:25:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49079</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49079/1577201119038542</guid>
      <description>&lt;p&gt;
WordPress should allow setting more than one admin email.&lt;br /&gt;
Case in point: allow for both client/owner and maintainer/dev/administrator to receive admin emails (updates and critical error notifications etc.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I know that there are plugins out there that do this, but when a site encounters a critical error, plugins are usually the first things to go. So plugins might not be as reliable. I believe this functionality should exist in core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Obviously adding a new email would require verification by a current admin, and verification of new email added.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 15:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078#comment:2/1577199794207470</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 24 Dec 2019 14:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:2/1577198927451141</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) updated</title>
      
        <dc:creator>danskoya</dc:creator>

      <pubDate>Tue, 24 Dec 2019 13:31:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078#comment:1/1577194291327013</guid>
      <description>&lt;p&gt;
platform:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Apache HTTPD 2.4.41, OpenSSL 1.1.1d, (mod_php) PHP 7.4&lt;br /&gt;
WordPress 5.3.2 (no plugins, default 2019 theme, no hard-coded mods)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49078 (Media Library permission checks in WordPress) created</title>
      
        <dc:creator>danskoya</dc:creator>

      <pubDate>Tue, 24 Dec 2019 13:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49078/1577193581364012</guid>
      <description>&lt;p&gt;
If permissions to ~/uploads/ are not set correctly (or was modified in some manner), deleting media will only delete database references (item(s) will disappear from the Media Library view) but the actual files are not deleted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
However, when uploading media, permission errors are displayed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This seems to be the the default behavior.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When was the last time you checked the contents of ~/uploads/ directory?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49077 (Add https://github.com/WordPress/wordpress-develop to Packagist) created</title>
      
        <dc:creator>clarinetlord</dc:creator>

      <pubDate>Tue, 24 Dec 2019 11:03:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49077/1577185391342422</guid>
      <description>&lt;p&gt;
Currently, the WordPress Develop repo is not on Packagist, even though it now has a composer.json file (thanks to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43558" title="#43558: enhancement: Add `composer.json` file for development dependencies (closed: fixed)"&gt;#43558&lt;/a&gt;). In order to use as a dependency, for example to use as a foundation to building an automated testing suite for a theme or plugin, you need to manually add the Github URL as an additional repository definition in your project's composer.json file. Normally this wouldn't be much of an issue, but due to the large number of branches and tags, Composer has to search the entire repo to generate a list of tags and branches available on every install/update, which takes several minutes! Adding WordPress Develop to Packagist (to be alongside &lt;a class="ext-link" href="https://packagist.org/packages/wordpress/phpdoc-parser"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://packagist.org/packages/wordpress/phpdoc-parser&lt;/a&gt;), would parse and cache branches and tags as they are released via the Packagist Github hook.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) updated</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Tue, 24 Dec 2019 09:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076#comment:1/1577179173098039</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>tck49076.diff attached to Ticket #49076</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Tue, 24 Dec 2019 09:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49076/tck49076.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49076/tck49076.diff/1577179055328237</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49076 (get_comment_author_url() missing inline doc description for Code Reference) created</title>
      
        <dc:creator>stevenlinx</dc:creator>

      <pubDate>Tue, 24 Dec 2019 09:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49076/1577178531626282</guid>
      <description>&lt;p&gt;
The Code Reference page is missing the description field , which the Codex page has. The DevHub (Code Reference) description field came from inline docs of source code header.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Code Reference : get_comment_author_url()&lt;br /&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_comment_author_url/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/get_comment_author_url/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Codex : get_comment_author_url()&lt;br /&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/Function_Reference/get_comment_author_url"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Function_Reference/get_comment_author_url&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49075 (Twenty Twenty: Inserted images not responsive at smaller browser widths) created</title>
      
        <dc:creator>JarretC</dc:creator>

      <pubDate>Tue, 24 Dec 2019 08:32:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49075/1577176344455419</guid>
      <description>&lt;p&gt;
Reported on the forums here initially:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/posts-images-are-not-responsive"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/posts-images-are-not-responsive&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When decreasing the browser width down to the &amp;gt; 600px width you'll start to see some images being cut off. This is due to the following code:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;.entry-content &amp;gt; *:not(.alignwide):not(.alignfull):not(.alignleft):not(.alignright):not(.is-style-wide) {
	max-width: 58rem;
	width: calc(100% - 4rem);
}
&lt;/pre&gt;&lt;p&gt;
As inserted images are placed inside of a &amp;lt;figure&amp;gt; element the code sets the max-width to something wider than what the browser width is. If the inserted image has a width set inline, it'll cause it to display past the border of the browser.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
max-width could be set to either 100% in this case or could be targeted using media queries to something where if the browser width is less than 600px the max-width is then set to 100%&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48958 (Twenty Twenty: Multiple Block Left/Right Align Display Issues) updated</title>
      
        <dc:creator>JarretC</dc:creator>

      <pubDate>Tue, 24 Dec 2019 08:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48958#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48958#comment:3/1577176026370024</guid>
      <description>&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/48718" title="#48718: defect (bug): Twenty Twenty: Block Left/Right Align Display Issues (assigned)"&gt;#48718&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is due to the elements being absolutely positioned. I haven't yet figured out a good workaround without removing the absolute positioning entirely and placing the images inside of the content "box" like the majority of other sites do that would fix this issue.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49074 (Can't scroll to bottom of multisite list in menu) created</title>
      
        <dc:creator>amazewebsite</dc:creator>

      <pubDate>Tue, 24 Dec 2019 07:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49074/1577171252463743</guid>
      <description>&lt;p&gt;
In a multi site dashboard when logged as admin, with a long list of multi sites it's not possible to scroll to bottom of list in the menu&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png"&gt;&lt;img src="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png" alt="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png" crossorigin="anonymous" title="https://i.ibb.co/8BCzDPB/Screen-Shot-2019-12-24-at-12-47-19-AM.png" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Tue, 24 Dec 2019 05:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:3/1577164433153617</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I really struggle to see where you're coming from here, they're not "untracked"&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Bad word choice on my part, but I couldn’t think of anything better at the time.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
By untracked, I meant to convey that these files are uniquely served raw and without any PHP intervention, unlike favicon.ico and robots.txt which both have handlers when the files are not otherwise present (or filtered in some other way.)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I don’t think license.txt or readme.html are the kinds of files that make sense to handle dynamically like a favicon or robots file, but I also don’t think it makes sense to bundle them in the root of every single installation, especially when no commonly popular Apache or Nginx ruleset for WordPress have ever attempted to 404 them, redirect them, or anything else.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So step one in my mind is to find a way to simply remove these files from the project root. Step two is to include them in a way that feels intentional, possibly even as a fun improvement.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
macOS &lt;a class="ext-link" href="http://osxdaily.com/2014/08/20/famous-steve-jobs-speech-hidden-mac-easter-egg/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;famously ships with&lt;/a&gt; a not-so-hidden copy of the “Here’s to the crazy ones” speech. I do still think it would be fun if WordPress shipped with the GPL license as an Attachment that a User &lt;em&gt;might&lt;/em&gt; read, as opposed to a raw file they never will. That’s just a single idea off the top of my head, to soften the blow of WordPress not shipping with a copy of the GPL license at all, which isn’t what I’m suggesting. Hopefully that clarifies somewhat?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fullpatch-v5-44867-image-editor-save-modified-image-as-a-new-copy.patch attached to Ticket #44867</title>
      
        <dc:creator>drzraf</dc:creator>

      <pubDate>Tue, 24 Dec 2019 04:29:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44867/fullpatch-v5-44867-image-editor-save-modified-image-as-a-new-copy.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44867/fullpatch-v5-44867-image-editor-save-modified-image-as-a-new-copy.patch/1577161757244117</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49014 (Silence set_time_limit() call in wp-admin/includes/class-wp-upgrader.php) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Tue, 24 Dec 2019 04:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49014#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49014#comment:4/1577160202273987</guid>
      <description>&lt;p&gt;
Thanks for your answer from WordPress 5.2 the minimum php requirement is 5.6.20, I wonder if you have any precedent to temporarily disable error_reporting(0) in order not to use the suppression operator (it's slow).&lt;br /&gt;
Obviously for all those probable functions disabled but necessary for WordPress ini_get, ini_set, chmod, buffer, temporary directory etc.&lt;br /&gt;
Downloading the file the weight is known but the Download and Upload speed is unknown, you could add a pre-calculation for the zip files (WordPress update, plugin, repository theme)&lt;br /&gt;
, subsequently calculate the variable speed.&lt;br /&gt;
For the second question, I am afraid there is not much to do to create the code to handle this because it is very complex.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49056 (Can we stop bundling default themes?) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Tue, 24 Dec 2019 03:27:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49056#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49056#comment:10/1577158037684521</guid>
      <description>&lt;p&gt;
I will add a note for the default theme.&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/5.3-branch/wp-includes/default-constants.php#L407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/5.3-branch/wp-includes/default-constants.php#L407&lt;/a&gt;&lt;br /&gt;
it is also possible to force the use of a predefined theme in the wp-config.php file, before each modification make a backup of the database and files.&lt;br /&gt;
I changed it to a WordPress multisite 5.3 directly from the core file.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Tue, 24 Dec 2019 02:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:2/1577153450242301</guid>
      <description>&lt;p&gt;
These two files might belong in a WordPress installation (well, pre-installation anyway) but I don't feel they belong in &lt;em&gt;&lt;strong&gt;my&lt;/strong&gt;&lt;/em&gt; database. I don't want them in my SQL tables nor in my uploads folder. Why spread the clutter?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
These files are as useful as &lt;code&gt;wp-config-sample.php&lt;/code&gt; - very useful up until the point my site is up and running. Not so much afterwards.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe they can find their home as links next to &lt;code&gt;about.php&lt;/code&gt; &lt;code&gt;credits.php&lt;/code&gt; etc. It would certainly give them the visibility you feel they need.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44586 (SQL mode test results broken in MySQL 8.0.11) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Tue, 24 Dec 2019 01:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44586#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44586#comment:2/1577151947594038</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44384" title="#44384: defect (bug): InnoDB doesn't support SPATIAL indexes for query CREATE TEMPORARY TABLE (closed: fixed)"&gt;#44384&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44586 (SQL mode test results broken in MySQL 8.0.11) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Tue, 24 Dec 2019 01:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44586#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44586#comment:1/1577151744932648</guid>
      <description>&lt;p&gt;
I can replicate this as well as an additional DB test failure. I am using MySQL 8.0.16 locally.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;There were 3 failures:
1) Tests_DB::test_set_sql_mode
Failed asserting that two arrays are equal.
--- Expected
+++ Actual
@@ @@
 Array (
-    0 =&amp;gt; 'IGNORE_SPACE'
-    1 =&amp;gt; 'NO_AUTO_CREATE_USER'
+    0 =&amp;gt; 'ERROR_FOR_DIVISION_BY_ZERO'
+    1 =&amp;gt; 'NO_ENGINE_SUBSTITUTION'
+    2 =&amp;gt; 'NO_ZERO_IN_DATE'
 )
.../tests/phpunit/includes/abstract-testcase.php:682
.../tests/phpunit/tests/db.php:303
2) Tests_DB::test_set_allowed_incompatible_sql_mode
Failed asserting that an array contains 'ONLY_FULL_GROUP_BY'.
.../tests/phpunit/tests/db.php:343
3) Tests_dbDelta::test_spatial_indices
Failed asserting that an array is empty.
.../tests/phpunit/tests/dbdelta.php:576
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49072 (Move readme.html &amp; license.txt out of project root (maybe into Uploads?)) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Tue, 24 Dec 2019 00:50:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49072#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49072#comment:1/1577148636799160</guid>
      <description>&lt;p&gt;
In my humble opinion, I personally disagree with several fundamental ideas behind your train of thought, but I like where you're going with it.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/license.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/license.txt&lt;/a&gt;&lt;br /&gt;
All of the immediately above URLs do not work, and result in a 404 page.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounded like something we should fix, it now loads the WordPress.org License info page instead.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some folks recommend removing these files as a security precaution&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We're both on the same page here, removing them only removes one minor way to identify a site as running WordPress - removing them provides no benefit what-so-ever (Sorry security plugins who love to block these files).&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some folks delete these files from their internal WordPress forks simply to reduce their maintenance footprint&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"Some" here would be the incredibly few people who track WordPress in their own VCS system, there's no legitimate reason to remove the files to reduce the burden here since WordPress is just going to add them back in (if using WordPress upgrades, o many 3rd party tooling) - although their lack of being on the filesystem should no longer force WordPress to abort using partial upgrade packages when it finds them missing for minor releases - but it'll add them back for the next major upgrade.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once installed, though, these files become invisibly burdensome on the web server, as they are untracked in PHP and rarely changing in the WordPress project.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I really struggle to see where you're coming from here, they're not "untracked" unless you consider &lt;code&gt;wp-login.php&lt;/code&gt; to also be untracked - they're treated the same as any other WordPress file and updated/refreshed with each WordPress update, they're not left to rot, and are only invisible if you never knew they existed in the first place (which is the ideal situation - most end-users shouldn't need to see these specific files) since the content (as i'll go into below) would be far better off presented in an entirely different manner.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ultimately though, I have always considered these files to be assets that belong inside of WordPress, not outside of it.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That I can agree with; however, these files are not intended to be used &lt;em&gt;within&lt;/em&gt; WordPress, they're specifically designed for use &lt;em&gt;outside&lt;/em&gt; of WordPress, and given that these two use-cases are significantly different, it makes very little sense in combining it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
What I think you really want to say here, is that you feel the content of these files provides useful content to the end user, specifically, so that they a) understand the license of what WordPress is (license.txt) and b) understand the requirements of WordPress and where to get support (readme.html).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the license front - Linking to, or displaying the raw license, is a common way for software to present it to the end-user, but is one that is ignored and never read by the vast majority of even technically minded people - I doubt many of the WordPress users who would appreciate what the GPL provides to them would ever actually read the GPL and not get bored. So I don't think that's the right approach for WordPress. I actually appreciate the effort that has been taken in the About section, viewable at a URL similar to &lt;a class="ext-link" href="https://dd32.id.au/wp-admin/freedoms.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dd32.id.au/wp-admin/freedoms.php&lt;/a&gt; (Toolbar -&amp;gt; W -&amp;gt; About WordPress -&amp;gt; Freedoms). That page does a great job IMHO of explaining what freedoms the license gives, although it lacks in actually defining the license and the actual license text is at least two clicks away from the page, it's a lot more useful to the average WordPress user than the raw license ever would be. I obviously think that could be improved, in both linking to the license text and explicitly defining what it is (Rather than just "GPL")&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
On the Requirements and Support front, I wouldn't mind seeing the requirements spelt out somewhere, but for the majority of users, Site Health provides a better insight into that than what listing the requirements ever would. Support is available through the Admin Toolbar with the W menu listing Documentation (Codex - That should be updated), Support (Forums), and Feedback (Feedback Forum). I think we could obviously do better there as well. I would even argue that a "Where to get help" in the about section would be a useful addition, pull the support section from the readme and expose it there in a nice readable manner - although that will also show that &lt;code&gt;readme.html&lt;/code&gt; probably needs it's support section updating.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
tl;dr: I'm not against exposing this data more, I just don't believe it's the right format to be doing it in. Just my 5c.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48955 (WP 5.3.1 changes cause potential backwards compatibility breakage with kses) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Tue, 24 Dec 2019 00:38:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48955#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48955#comment:24/1577147939413560</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:21" title="Comment 21"&gt;aduth&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about plugins which respect the documented string type, and would likewise break if a feature enhancement to support arrays was adopted?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
(examples)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Arguably, it was never the case that &lt;code&gt;wp_kses&lt;/code&gt; would have worked as expected with an array value filtered by any of the plugins above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The reason I keep harping on about the documentation is that it serves as a contract against which backwards-compatibility should be measured.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is a fair point, and the examples you listed (which look like they will mostly either do nothing or cause a warning and perhaps some minor breakage) are a good argument against changing the long-documented behavior. However I don't think accidentally breaking an undocumented behavior that is being actively used is necessarily the right idea, either.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If a plugin comes to rely on an incidental, undocumented behavior, it's unfortunate if that behavior changes over time. [...] Given the choice, we should seek to uphold support for the documented behavior.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Making functions conform more closely to their documented behavior is good, but that doesn't mean incidental, undocumented behavior that people are relying on has to stop working.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Another path to take (already suggested above) would be to restore the array behavior but add a deprecation notice when an array is passed to any of the relevant functions. I'm thinking now that this is probably the best solution.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
we should be especially cautious with added feature support for these functions, given their sensitive nature and the expanded complexity of supporting additional combinations of arguments.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also a fair point, but you'd be trading a hypothetical concern against something that is known to be a problem today:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/48955#comment:2" title="Comment 2"&gt;iCaleb&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We're seeing quite a few errors stem from this unfortunately on a number of sites, with some PHP errors coming from popular plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From Caleb's same comment, "deprecation notices followed by strict type checking later on" seems like a sensible way to handle this, addressing broken sites in the short term and predictability/complexity in the longer term.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>