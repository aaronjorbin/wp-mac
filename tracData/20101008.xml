<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14429 (Faster is_serialized) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 23:26:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14429#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14429#comment:20/1286580390000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14429#comment:19" title="Comment 19"&gt;hakre&lt;/a&gt;:
Yeah, something like that basically. To avoid the huge backtrace.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14450 (ms-files.php generates bad content-types for REQUEST_URI's with query ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 23:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14450#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14450#comment:7/1286580297000000</guid>
      <description>&lt;p&gt;
Also, I closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14594" title="#14594: defect (bug): Header injection in ms-files.php? (closed: fixed)"&gt;#14594&lt;/a&gt; even though it's not, technically, fully fixed yet... But since it was ignored for two months, I figured security is no longer a priority...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 23:21:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:9/1286580083000000</guid>
      <description>&lt;p&gt;
Well, if it's the main loop, yipou can always check for $wp_query === $wp_the_query. For everything else, assume it's a plugin, and not yours, unless the context, or ID, or whatever, is specified.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14429 (Faster is_serialized) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14429#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14429#comment:19/1286578547000000</guid>
      <description>&lt;p&gt;
You mean something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;$len = strlen( $data );
$last_index = $len - 1;
$last_char = $data[$last_index];
$last_char_match = ( ';' === $last_char || '}' === $last_char )
&lt;/pre&gt;&lt;p&gt;
?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:8/1286578295000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15063#comment:7" title="Comment 7"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The point is that we need a standard way to inspect content...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
s/content/context/
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:45:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:7/1286577953000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15063#comment:6" title="Comment 6"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In PHP you can just add public members to a class att runtime.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes of course, but you are missing the point.  Clearly I can do that for my own code, but I can't do with the objects someone else creates (without modifying their code.)
&lt;/p&gt;
&lt;p&gt;
The point is that we need a standard way to inspect content in other people's code in which we have no access to the object creation, i.e. in core and in 3rd party plugins.
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15003 (Upgraded WordPress, Code appearing) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15003#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15003#comment:15/1286577690000000</guid>
      <description>&lt;p&gt;
Please test with a fresh database as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15052 (The screen turns white once I add over 4000 pages.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15052#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15052#comment:4/1286577545000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Lyncis can you please enable error logging and WP_DEBUG? Some additional information shuld be kept in the PHP error log then. Please share.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:29:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:6/1286576980000000</guid>
      <description>&lt;p&gt;
In PHP you can just add public members to a class att runtime.
&lt;/p&gt;
&lt;pre class="wiki"&gt;$query = new WP_Query();
$query-&amp;gt;context = 'named';
&lt;/pre&gt;&lt;p&gt;
now in a hook, you can check for the query object's context:
&lt;/p&gt;
&lt;pre class="wiki"&gt;action_callback( $query ) {
  if ( empty($query-&amp;gt;context) || 'named' !== $query-&amp;gt;context )
    return;
  // your context specific code here
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14450 (ms-files.php generates bad content-types for REQUEST_URI's with query ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:20:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14450#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14450#comment:6/1286576457000000</guid>
      <description>&lt;p&gt;
Security Note: w/o patch header injection, reported in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14594" title="#14594: defect (bug): Header injection in ms-files.php? (closed: fixed)"&gt;#14594&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
+1 for backport beacuse of that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14594 (Header injection in ms-files.php?) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:19:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14594#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14594#comment:3/1286576347000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14450" title="#14450: defect (bug): ms-files.php generates bad content-types for REQUEST_URI's with query ... (closed: fixed)"&gt;#14450&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14993 (make_clickable issue with ! character in URL) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 22:16:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14993#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14993#comment:8/1286576195000000</guid>
      <description>&lt;p&gt;
About what the users are concerned is that ! is not linked (link ends prior to !) I think we should put that in because otherwise twitter users will spam trac all the time as they see the bug. See: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15070" title="#15070: defect (bug): WordPress cuts short links with &amp;#34;!&amp;#34; (closed: duplicate)"&gt;#15070&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15078 (Custom Loops in Twenty Ten) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 21:39:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15078#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15078#comment:2/1286573958000000</guid>
      <description>&lt;p&gt;
Big plus one from me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15073 (Add Table Buttons to Visual Editor Kitchen Sink (2nd row)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 08 Oct 2010 21:37:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15073#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15073#comment:2/1286573840000000</guid>
      <description>&lt;p&gt;
From implementation point of view there would be two areas that would need attention:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;There are eleven default table buttons in &lt;a class="ext-link" href="http://tinymce.moxiecode.com/examples/full.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;TinyMCE (third row)&lt;/a&gt;. Adding all would extend the second row a lot. We can probably remove 4 without limiting the functionality much but even 7 new buttons make the toolbar quite longer.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;There are some rare cases when wpautop may break complex tables, usually a paragraph in a table whitin another table, etc.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15078 (Custom Loops in Twenty Ten) updated</title>
      
        <dc:creator>iandstewart</dc:creator>

      <pubDate>Fri, 08 Oct 2010 21:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15078#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15078#comment:1/1286573811000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>15078.diff attached to Ticket #15078</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Fri, 08 Oct 2010 21:28:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15078/15078.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15078/15078.diff/1286573309000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15078 (Custom Loops in Twenty Ten) created</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Fri, 08 Oct 2010 21:27:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15078/1286573260000000</guid>
      <description>&lt;p&gt;
In Twenty Ten, we use get_template_part to allow users to override loop.php.
This is a beautiful thing.
&lt;/p&gt;
&lt;p&gt;
However, when files in Twenty Ten use anything other than the default loop, they don't use &lt;code&gt;get_template_part('loop','custom')&lt;/code&gt; and loop-custom.php. Instead, they just hardcode the loop into the file.
&lt;/p&gt;
&lt;p&gt;
We should fix that.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15077 (is_active_sidebar() cannot accept a sidebar name as input) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 21:03:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15077#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15077#comment:1/1286571782000000</guid>
      <description>&lt;p&gt;
I know I asked for this ticket, but I forgot &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11160" title="#11160: defect (bug): Inconsistancies in Naming and Using Sidebar Names and IDs. (new)"&gt;#11160&lt;/a&gt;, and I think this is a duplicate of that, yes?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15076 (wp_query-&gt;query_vars should hold taxonomy and term for post_tag and ...) updated</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Fri, 08 Oct 2010 21:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15076#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15076#comment:1/1286571668000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Added very simple, and probably wrong patch, tested on trunk with twentyten and it doesn't seem to cause any weirdness (which is not to be expected either, it's just adding two variables nothing else).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>tax-term.patch attached to Ticket #15076</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:59:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15076/tax-term.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15076/tax-term.patch/1286571598000000</guid>
      <description>&lt;p&gt;
Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15077 (is_active_sidebar() cannot accept a sidebar name as input) created</title>
      
        <dc:creator>dvmorris</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:57:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15077/1286571477000000</guid>
      <description>&lt;p&gt;
If I send a sidebar name, such as "Right Sidebar", to is_active_sidebar($index), it does not properly translate the name into the sidebar id. The function is on line 971 of wp-includes/widgets.php, and the @param comment implies that it is able to accept sidebar names as input.
&lt;/p&gt;
&lt;p&gt;
If you replace line 972 with the logic from dynamic_sidebar() on lines 842-854, it works properly. Perhaps these lines of code should be moved to a function so they do not need to be repeated twice to fix this issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12180 (Custom taxonomies for custom post types exported but not tied to posts) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:30:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12180#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12180#comment:8/1286569825000000</guid>
      <description>fixed: &lt;p&gt;
Hey William, since this was closed on a released milestone, generally we open up a new ticket. At this point, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14306" title="#14306: defect (bug): Custom Taxonomies not associated to Custom Post Type on Export (closed: fixed)"&gt;#14306&lt;/a&gt; is already open for 3.1, with regards to exporting. Feel free to comment there.
&lt;/p&gt;
&lt;p&gt;
The import process is entirely separate, so if that's your issue, then you should open a new ticket and we'll take a look.
&lt;/p&gt;
&lt;p&gt;
Re-closing.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12180 (Custom taxonomies for custom post types exported but not tied to posts) updated</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:25:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12180#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12180#comment:7/1286569513000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12180 (Custom taxonomies for custom post types exported but not tied to posts) reopened</title>
      
        <dc:creator>wpdavis</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12180#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12180#comment:6/1286569491000000</guid>
      <description>&lt;p&gt;
Sorry to open this back up again, but while the patch works for exporting correctly, the wordpress importer still doesn't read custom taxonomies. It only looks for tags on line 466.
&lt;/p&gt;
&lt;pre class="wiki"&gt;preg_match_all('|&amp;lt;category domain="tag"&amp;gt;(.*?)&amp;lt;/category&amp;gt;|is', $post, $tags);
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #15073 (Add Table Buttons to Visual Editor Kitchen Sink (2nd row)) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15073#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15073#comment:1/1286569456000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:25/1286569301000000</guid>
      <description>&lt;p&gt;
Hi kevinB, for compressed scripts, only edit the .dev.js versions, and omit the compressed versions. We will then handle compression on commit.
&lt;/p&gt;
&lt;p&gt;
I've asked Ptah to review this patch as I know he is also working on a patch, so let's see what we can grab from each to continue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15075 (filter manage_users_columns stopped working) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15075#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15075#comment:1/1286568862000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15076 (wp_query-&gt;query_vars should hold taxonomy and term for post_tag and ...) created</title>
      
        <dc:creator>joostdevalk</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:08:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15076/1286568505000000</guid>
      <description>&lt;p&gt;
wp_query-&amp;gt;query_vars holds two variables, taxonomy and term, for custom taxonomy archives. These two variables don't exist in post_tag and category archives, and were they there, it might be easier to treat all taxonomies the same.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14037 (XMLRPC posts failing since upgrade from WP 2.9.2 to WP 3.0) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14037#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14037#comment:19/1286568383000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="missing ticket" title="ticket comment does not exist"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this problem solved after setting the constant for multisite?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Upgraded MU installs don't use the MULTISITE constant. Adding that to an upgraded MU install takes down the main site.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14379 (Add cache invalidation to get_blogs_of_user()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 08 Oct 2010 20:00:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14379#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14379#comment:1/1286568017000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14037 (XMLRPC posts failing since upgrade from WP 2.9.2 to WP 3.0) updated</title>
      
        <dc:creator>skinnydog</dc:creator>

      <pubDate>Fri, 08 Oct 2010 19:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14037#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14037#comment:18/1286564494000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="missing ticket" title="ticket comment does not exist"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this problem solved after setting the constant for multisite?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was told not to define this in a MU -&amp;gt; 3.0 install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15075 (filter manage_users_columns stopped working) created</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Fri, 08 Oct 2010 18:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15075/1286564273000000</guid>
      <description>&lt;p&gt;
In WordPress 3.0 I've used
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('manage_users_columns', array(&amp;amp;$this, 'manage_users_columns'));
add_filter('manage_users_custom_column', array(&amp;amp;$this, 'manage_users_custom_column'), 10, 3);
&lt;/pre&gt;&lt;p&gt;
to add a comments column to the users' table. - I've tested this code in WordPress 3.1-alpha and it seems like my custom column is not added to the array anymore.
&lt;/p&gt;
&lt;p&gt;
Could somebody please have a look. - Maybe related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14776" title="#14776: defect (bug): 'manage_' . screen . '_columns' filter not working (closed: fixed)"&gt;#14776&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Cheers,
Berny
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15072 (blogger.getRecentPosts drops backslashes) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Fri, 08 Oct 2010 18:01:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15072#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15072#comment:1/1286560881000000</guid>
      <description>&lt;p&gt;
Most XML-RPC clients use the metaWeblog.getRecentPosts method.  Does this have the same problem?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14662 (Posts and Terms APIs allow loops in hierarchical data) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 08 Oct 2010 17:09:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14662#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14662#comment:6/1286557753000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15074" title="#15074: defect (bug): Better page ancestor circular dependency detection (closed: duplicate)"&gt;#15074&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15074 (Better page ancestor circular dependency detection) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 08 Oct 2010 17:08:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15074#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15074#comment:2/1286557712000000</guid>
      <description>&lt;p&gt;
Possibly related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14662" title="#14662: defect (bug): Posts and Terms APIs allow loops in hierarchical data (closed: fixed)"&gt;#14662&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15074 (Better page ancestor circular dependency detection) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15074#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15074#comment:1/1286557190000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15758" title="Some more hierarchy loop detection."&gt;[15758]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15074 (Better page ancestor circular dependency detection) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:59:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15074/1286557177000000</guid>
      <description>&lt;p&gt;
We check to see if the post_parent == ID, but we don't look for loops of the form 1 -&amp;gt; 2 -&amp;gt; 1.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15073 (Add Table Buttons to Visual Editor Kitchen Sink (2nd row)) created</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:54:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15073/1286556867000000</guid>
      <description>&lt;p&gt;
Add Table Buttons to Visual Editor Kitchen Sink (2nd row)
&lt;/p&gt;
&lt;p&gt;
This regular comes on the forums. Tables are an infrequent, but very natural way to present information. In an edu environment they are essential.
&lt;/p&gt;
&lt;p&gt;
I suspect you have used tables in your posts, but have the expertise to  enter the html directly yourself.
&lt;/p&gt;
&lt;p&gt;
I think the general usefulness, and unobtrusive 2nd row experience makes this a candidate for core, and not plugin material.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11420 (Easy within-site linking from new content) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11420#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11420#comment:20/1286556003000000</guid>
      <description>&lt;p&gt;
Some suggestions after looking through the first patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We can overload the command executed from the default 'link' button (similar to the Advanced Link plugin). This will remove the necessity of new translation, styling, etc. To return to the default link dialog the wpLink plugin can be disabled.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;We would need a custom "Suggest" script that would return post/category/tag name + URL, probably best in JSON format. It should post to admin-ajax.php.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It's nice to hide the "advanced" link properties however the dialog looks incomplete/empty with so much white space at the bottom and cannot be resized dynamically. Perhaps we can leave them visible but move them under the fold, i. e. the user would have to scroll down to see them?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15072 (blogger.getRecentPosts drops backslashes) created</title>
      
        <dc:creator>daveabrahams</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15072/1286555105000000</guid>
      <description>&lt;p&gt;
I have posts on my site containing fragments like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[latex]\neg r(a,b)[/latex]
&lt;/pre&gt;&lt;p&gt;
But when I pull them down using emacs weblogger-mode, the backslash is always missing.  I edebug'ed way down into the bowels of the code and looked at the raw data arriving in the process buffer, and it was missing the backslash, so I'm pretty certain this is a WP bug and not something in emacs or weblogger-mode.  Weblogger-mode is using the blogger API.  I tried several other clients, and they seemed to work, but I assume they're using a different protocol (e.g. atom).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [15758]: Some more hierarchy loop detection.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15758</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15758/1286554934260124</guid>
      <description>&lt;p&gt;
Some more hierarchy loop detection.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10141 (URL Functions for: login, logout, lostpasword and the new register) updated</title>
      
        <dc:creator>Axel_germany</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10141#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10141#comment:11/1286554819000000</guid>
      <description>&lt;p&gt;
The same applies to wp-includes/user.php line 89 and 109 (and probably some more places).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15071 ("New WordPress website" mail is text/plan but contains htmlentities) closed</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15071#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15071#comment:1/1286554268000000</guid>
      <description>invalid: &lt;p&gt;
&lt;em&gt;Je nieuwe WordPress blog is met succes ge&amp;amp;#239;nstalleerd op:&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Is this the message?  It seems the Dutch translation (the one included in the latest download from nl.wordpress.org) uses itself the numeric character reference there.  Do you know how to contact the Dutch translators?
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15069 (Autosave function assumes that there is only on tinyMCE on the page) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 08 Oct 2010 16:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15069#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15069#comment:1/1286553892000000</guid>
      <description>&lt;p&gt;
This should work properly with the default editor (id = content) however WordPress allows the id to be passed to &lt;a href="https://core.trac.wordpress.org/browser/trunk/wp-includes/general-template.php#L1758"&gt;the_editor function&lt;/a&gt;. If the write/edit pages for custom post types use that function and pass different id, that would break autosave for them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 08 Oct 2010 15:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:28/1286550216000000</guid>
      <description>&lt;p&gt;
Right; we need a patch first. Then we can decide what to call the template.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 08 Oct 2010 14:46:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:27/1286549177000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13818#comment:25" title="Comment 25"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah, I've since changed my opinion. No point in introducing a new prefix.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Consistency with a confusing terminology is not a virtue.
&lt;/p&gt;
&lt;p&gt;
As JohnONolan said:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;em&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/12974#comment:13"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Massive +1 on that suggestion Mike.&lt;/a&gt;&lt;/em&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15068 (merging query objects/arrays) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 14:43:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15068#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15068#comment:4/1286548989000000</guid>
      <description>&lt;p&gt;
While we're at it: if this ever gets implemented, supporting SQL EXCEPT is only a tiny bit more work once SQL UNION is done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15068 (merging query objects/arrays) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 14:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15068#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15068#comment:3/1286548890000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15068#comment:2" title="Comment 2"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you do a global sort on UNIONs ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, with a subquery.
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT *
FROM (
  SELECT ...
  UNION
  SELECT ...
) as stmt
ORDER BY ...
LIMIT N
&lt;/pre&gt;&lt;p&gt;
It's a bit slow, since it'll need to quick sort or heap sort the result, but it'll still be faster and more reliable than pulling the X results of N queries, in order to drop dups and use php to sort the top X results out of the resulting merged set. Better let SQL do it than re-invent the union statement... As a bonus, using an SQL UNION allows to extract stats, i.e. the total number of rows.
&lt;/p&gt;
&lt;p&gt;
Pushing this to future pending a patch, though, because it's an extremely messy proposition -- even with an ORM.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15070 (WordPress cuts short links with "!") closed</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Fri, 08 Oct 2010 14:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15070#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15070#comment:1/1286548646000000</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14993" title="#14993: defect (bug): make_clickable issue with ! character in URL (closed: fixed)"&gt;#14993&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15071 ("New WordPress website" mail is text/plan but contains htmlentities) created</title>
      
        <dc:creator>grizzdesign</dc:creator>

      <pubDate>Fri, 08 Oct 2010 14:29:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15071</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15071/1286548164000000</guid>
      <description>&lt;p&gt;
I'm not sure how general or specific this bug is so I'll just present the case I had.
&lt;/p&gt;
&lt;p&gt;
In the official Dutch version of WordPress 3.0.1 the mail "Nieuwe WordPress website" contained the word "geïnstalleerd" ('installed') but it was escaped/encoded using as "ge&amp;amp;#239;nstalleerd".
&lt;/p&gt;
&lt;p&gt;
Since the mail is sent as text/plain those entites show up litterly as an ampersand and the numbers.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15070 (WordPress cuts short links with "!") created</title>
      
        <dc:creator>larysa</dc:creator>

      <pubDate>Fri, 08 Oct 2010 14:08:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15070</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15070/1286546883000000</guid>
      <description>&lt;p&gt;
Short links that have an exclamation point in the URLs [ "!" ] posted in comments are "cut" by the WP.
&lt;/p&gt;
&lt;p&gt;
For instance, WordPress cuts &lt;a class="ext-link" href="http://name.ly/!Bd$8N"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://name.ly/!Bd$8N&lt;/a&gt; down to &lt;a class="ext-link" href="http://name.ly/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://name.ly/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Facebook and Twitter, for instance, handle such links correctly.
&lt;/p&gt;
&lt;p&gt;
As it is 100% legal URL syntax [ &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/URL"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/URL&lt;/a&gt; ] to have "!" in the URL, such cuts are annoying.
&lt;/p&gt;
&lt;p&gt;
WP should not cut the URLs downto "!" character but parse it to the next space or new line character.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14772 (Administration bar) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 08 Oct 2010 14:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14772#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14772#comment:44/1286546810000000</guid>
      <description>&lt;p&gt;
The Gravatar URL is slightly broken, as account_domain already has a trailing slash (on my install, at least).
&lt;/p&gt;
&lt;p&gt;
It can be fixed by changing the following on line 81 of admin-bar.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_admin_bar-&amp;gt;user-&amp;gt;account_domain . '/wp-admin/profile.php'
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp_admin_bar-&amp;gt;user-&amp;gt;account_domain . 'wp-admin/profile.php'
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 08 Oct 2010 13:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:5/1286544547000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15063#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems to me that always passing the wp_query object is good enough.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you explain to me how? And I'm not sure even what you mean, "passing the wp_query object?"
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You can add an ID property to it if necessary before running get_posts().
Suggesting we re-open if the object is not systematically passed, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't follow.  Can you give some code examples to what you mean?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15068 (merging query objects/arrays) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 08 Oct 2010 12:58:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15068#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15068#comment:2/1286542680000000</guid>
      <description>&lt;p&gt;
Can you do a global sort on UNIONs ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>kevinB</dc:creator>

      <pubDate>Fri, 08 Oct 2010 12:52:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:24/1286542339000000</guid>
      <description>&lt;p&gt;
For the second issue (statuses should be registered to one or more post types), I suggest following the pattern set for taxonomies:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function register_taxonomy_for_object_type( $taxonomy, $object_type) {
	global $wp_taxonomies;
	if ( !isset($wp_taxonomies[$taxonomy]) )
		return false;
	if ( ! get_post_type_object($object_type) )
		return false;
	$wp_taxonomies[$taxonomy]-&amp;gt;object_type[] = $object_type;
	return true;
}
&lt;/pre&gt;&lt;p&gt;
I would be able to implement that type of solution early next week if nobody else has it done by then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>kevinB</dc:creator>

      <pubDate>Fri, 08 Oct 2010 12:48:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:23/1286542117000000</guid>
      <description>&lt;p&gt;
Just uploaded a &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/12706/Custom_Stati_Support.patch"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;patch&lt;/a&gt; for the first issue.  This is mostly comprehensive, supporting use of the following type of stati:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;private type, indicated by $status_obj-&amp;gt;private.  Some functionality as normal private, but a separate set of capability requirements which may include all or some of the following: "read_secret_posts", "edit_secret_posts", "delete_secret_posts", "set_secret_posts" (the "publish" equivalent).  If a status-specific caps is not defined for some operation, the normal private status equivalent is used.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;pending type, indicated by &lt;strong&gt;$status_obj-&amp;gt;moderation&lt;/strong&gt;.  Enables additional multi-step moderation, optionally with status-specific capabilities.  A new filter is applied to allow plugins to customize the default moderation status for the main Submit button:
&lt;/li&gt;&lt;/ul&gt;&lt;pre class="wiki"&gt;$moderation_status = apply_filters( 'post_moderation_status', 'pending', $post-&amp;gt;ID );
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Remaining Issues:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I didn't touch xml-rpc or map_meta_cap (but see meta mapping in attached plugin for ideas)
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Custom &lt;strong&gt;public&lt;/strong&gt; stati now have some backend support but no Edit Form UI integration.   The complication-to-benefit ratio seems much higher here; at this point I'm not eager to push it.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The js I moved into edit-form-advanced.php should be reviewed for optimal delivery method.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I don't know the WP way to compress js files.  post.js and inline-edit-post.js in this patch are a copy of uncompressed dev.js
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Demo Plugin:&lt;/strong&gt;
I also attached a &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/12706/custom-status-helper_1.0.zip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;plugin&lt;/a&gt; to demonstrate two custom stati via the following roles:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Reviewer" - has edit_approved, delete_approved, set_approved, edit_others, delete_others for all post types
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;"Super Editor" (name='super') - has read_secret, edit_secret, delete_secret, set_secret for all post types (in addition to regular editor caps)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The WP roles definitions will be added to your DB, but db-stored capabilities are only that of Contributor and Editor, respectively.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>custom-status-helper_1.0.zip attached to Ticket #12706</title>
      
        <dc:creator>kevinB</dc:creator>

      <pubDate>Fri, 08 Oct 2010 12:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12706/custom-status-helper_1.0.zip</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12706/custom-status-helper_1.0.zip/1286541888000000</guid>
      <description>&lt;p&gt;
plugin to demonstrate custom stati "Approved" and "Secret".  Corresponding roles of "Reviewer" and "Super Editor"
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15067 (Deprecate exiting admin menu functions and add new ones that accept an ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 08 Oct 2010 12:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15067#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15067#comment:2/1286541804000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>JohnONolan</dc:creator>

      <pubDate>Fri, 08 Oct 2010 11:43:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:26/1286538214000000</guid>
      <description>&lt;p&gt;
Related (The original ticket for this issue): &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12974" title="#12974: enhancement: Add support to get_archive_template() for custom content types (closed: duplicate)"&gt;#12974&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14889 (Memory Comparison Broken / WordPress Memory Limit) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 08 Oct 2010 10:42:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14889#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14889#comment:9/1286534538000000</guid>
      <description>&lt;p&gt;
+1 for using a named and not an anonymous function (as this is not PHP 5.3) - if at all.
&lt;/p&gt;
&lt;p&gt;
If you don't like the drawback of having additional code in the bootstrap (albeit the bootstrap's complexity can be reduced but it's normally argumented against it - probably it depends who brings things up) in _this_case_ this could be done if administrators are told that they MUST configure their memory limit in the M notation in both PHP.INI and wordpress configuration.
&lt;/p&gt;
&lt;p&gt;
From a real life standpoint this can work, some might wonder, but if it's documented, why not? Most will have the M notation anyway. And even if you uses gigabytes, you can pretty easily write them in megabytes 1G = 1024M.
&lt;/p&gt;
&lt;p&gt;
I already updated my &lt;a class="ext-link" href="http://codex.wordpress.org/User:Hakre/Technical_Installation"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Technical Installation Checklist&lt;/a&gt; as it looks like that this bug (in terms of strict data handling) is never been fixed.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I my eyes it's even more important right now to remove the &lt;strong&gt;256M limitation&lt;/strong&gt; by making that magic number configureable (at least), see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13847" title="#13847: defect (bug): WP increasing the memory above other server limit (closed: fixed)"&gt;#13847&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 08 Oct 2010 10:34:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:25/1286534078000000</guid>
      <description>&lt;p&gt;
Yeah, I've since changed my opinion. No point in introducing a new prefix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>autosave-patch.patch attached to Ticket #15069</title>
      
        <dc:creator>karevn</dc:creator>

      <pubDate>Fri, 08 Oct 2010 10:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15069/autosave-patch.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15069/autosave-patch.patch/1286533727000000</guid>
      <description>&lt;p&gt;
The patch that fixes the problem for wp 3.0.1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15069 (Autosave function assumes that there is only on tinyMCE on the page) created</title>
      
        <dc:creator>karevn</dc:creator>

      <pubDate>Fri, 08 Oct 2010 10:28:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15069</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15069/1286533692000000</guid>
      <description>&lt;p&gt;
Autosave javascript assumes there is only one tinyMCE instance on the post editor page, thus breaking autosave feature under the next circumstances:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Content editor is in HTML mode
&lt;/li&gt;&lt;li&gt;Some custom tinyMCE instances are added to the page by some plugin or theme.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
A patch that fixes that problem is attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15066 (Create a Meta Box class) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 07:51:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15066#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15066#comment:1/1286524278000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 07:49:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:4/1286524164000000</guid>
      <description>&lt;p&gt;
Seems to me that always passing the wp_query object is good enough. You can add an ID property to it if necessary before running get_posts(). Suggesting we re-open if the object is not systematically passed, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15068 (merging query objects/arrays) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 07:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15068#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15068#comment:1/1286523702000000</guid>
      <description>&lt;p&gt;
So... In other word, add SQL UNION support?...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14594 (Header injection in ms-files.php?) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 07:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14594#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14594#comment:2/1286523198000000</guid>
      <description>&lt;p&gt;
There might still be some potential for injections, though. Unit tests would be good...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14594 (Header injection in ms-files.php?) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 08 Oct 2010 07:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14594#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14594#comment:1/1286523053000000</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15749" title="Ensure we don't generate incorrect content types when files are ..."&gt;r15749&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14122 (Custom "capabilities" appears broken on custom post types) updated</title>
      
        <dc:creator>kevinB</dc:creator>

      <pubDate>Fri, 08 Oct 2010 06:37:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14122#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14122#comment:13/1286519862000000</guid>
      <description>&lt;p&gt;
Okay, I didn't realize it was that close.  I'll try to put something together Saturday night.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14122 (Custom "capabilities" appears broken on custom post types) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 06:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14122#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14122#comment:12/1286519288000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14122#comment:11" title="Comment 11"&gt;kevinB&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've been pondering this topic extensively over the last few months and have some code to throw into the fray.  Will plan on submitting a patch by Oct 13th.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Our feature freeze is next week, and I don't want to cut it close, so I must warn you that I or someone else might end up getting to this first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14122 (Custom "capabilities" appears broken on custom post types) updated</title>
      
        <dc:creator>kevinB</dc:creator>

      <pubDate>Fri, 08 Oct 2010 06:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14122#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14122#comment:11/1286518732000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've been pondering this topic extensively over the last few months and have some code to throw into the fray.  Will plan on submitting a patch by Oct 13th.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15068 (merging query objects/arrays) created</title>
      
        <dc:creator>youngmicroserf</dc:creator>

      <pubDate>Fri, 08 Oct 2010 04:27:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15068</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15068/1286512078000000</guid>
      <description>&lt;p&gt;
As multiple post type installations proliferate, I assume more and more people will come across a situation (like me) in which they need to display two (or more) sets of content units, say posts, and post-type "audio" in one stream - say on the main blog page. As long as the only condition is the post type itself, that will work fine. However, if those two sets need to be selected using different conditional criteria, say a category in one case, and a custom field in the other, then the current query_posts options will not be sufficient.
&lt;/p&gt;
&lt;p&gt;
While it is possible to retrieve multiple arrays via get_posts and merge them, then sort them using cusomt php, such a solution will break the paged navigation.
&lt;/p&gt;
&lt;p&gt;
If such situations will - as I assume - become more likely as more people use multiple post types and additional variables to specify content, I think it would be useful to be able to combine multiple queries into a meta query that will sort the combined object according to a common sorting variable, say date, and thus preserve the paged navigation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12974 (Add support to get_archive_template() for custom content types) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:47:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12974#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12974#comment:28/1286509645000000</guid>
      <description>duplicate: &lt;p&gt;
True, but that one is already blessed for 3.1, and John won't mind.
&lt;/p&gt;
&lt;p&gt;
Patches still welcome on the other ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12974 (Add support to get_archive_template() for custom content types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:45:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12974#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12974#comment:27/1286509526000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12974#comment:26" title="Comment 26"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13818" title="#13818: task (blessed): There should be index pages for custom post types (closed: fixed)"&gt;#13818&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it would be the other way around; 12974 came first. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12974 (Add support to get_archive_template() for custom content types) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12974#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12974#comment:26/1286509405000000</guid>
      <description>&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13818" title="#13818: task (blessed): There should be index pages for custom post types (closed: fixed)"&gt;#13818&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:39:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:24/1286509152000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13818#comment:23" title="Comment 23"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For consistency with the template hierarchy, the template should be named &lt;code&gt;archive-{post-type}.php&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here is an alternate opinion:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/12974#comment:12"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/12974#comment:12&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15067 (Deprecate exiting admin menu functions and add new ones that accept an ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15067#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15067#comment:1/1286509048000000</guid>
      <description>&lt;p&gt;
Per &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13937" title="#13937: enhancement: Pass named arguments to add_meta_box() (closed: wontfix)"&gt;#13937&lt;/a&gt;, we can probably do this without deprecating entire functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15067 (Deprecate exiting admin menu functions and add new ones that accept an ...) created</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15067</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15067/1286508823000000</guid>
      <description>&lt;p&gt;
Compared to the many  other APIs that accept &lt;code&gt;$args&lt;/code&gt; the admin menu functions (&lt;code&gt;add_menu_page()&lt;/code&gt;, &lt;code&gt;add_submenu_page()&lt;/code&gt;,  etc.) are less accessible because of the 6 and 7 ordinal parameters are hard to remember and easy to get wrong.
&lt;/p&gt;
&lt;p&gt;
Suggestion is to deprecate those functions and replace with functional equivalents that use an $args array.  Since the functions are for admin menus but the names of the functions appear to be generic, we could easily name these proposed functions &lt;code&gt;add_admin_menu_page()&lt;/code&gt; and &lt;code&gt;add_admin_submenu_page()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12718" title="#12718: enhancement: Better structure for admin menu (reopened)"&gt;#12718&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12636 (Update sample output of a custom date via ajax) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:29:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12636#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12636#comment:2/1286508599000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15757" title="Update via ajax the sample output of custom date/times on ..."&gt;[15757]&lt;/a&gt;) Update via ajax the sample output of custom date/times on options-general. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12636" title="#12636: enhancement: Update sample output of a custom date via ajax (closed: fixed)"&gt;#12636&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15757]: Update via ajax the sample output of custom date/times on ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 03:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15757</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15757/1286508597236895</guid>
      <description>&lt;p&gt;
Update via ajax the sample output of custom date/times on options-general. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12636" title="#12636: enhancement: Update sample output of a custom date via ajax (closed: fixed)"&gt;#12636&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [15756]: s/Wether/Whether/</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 02:35:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15756</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15756/1286505306164844</guid>
      <description>&lt;p&gt;
s/Wether/Whether/
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #9124 (meta_compare needs to allow "in" as well) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 02:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9124#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9124#comment:37/1286504844000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15755" title="Add NOT LIKE/BETWEEN/IN. props AaronCampbell, fixes #9124."&gt;[15755]&lt;/a&gt;) Add NOT LIKE/BETWEEN/IN. props AaronCampbell, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9124" title="#9124: enhancement: meta_compare needs to allow &amp;#34;in&amp;#34; as well (closed: fixed)"&gt;#9124&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15755]: Add NOT LIKE/BETWEEN/IN. props AaronCampbell, fixes #9124.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 08 Oct 2010 02:27:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15755</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15755/1286504842328131</guid>
      <description>&lt;p&gt;
Add NOT LIKE/BETWEEN/IN. props AaronCampbell, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9124" title="#9124: enhancement: meta_compare needs to allow &amp;#34;in&amp;#34; as well (closed: fixed)"&gt;#9124&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15066 (Create a Meta Box class) created</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Fri, 08 Oct 2010 01:32:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15066</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15066/1286501569000000</guid>
      <description>&lt;p&gt;
Widgets became much more extensible when we introduced the WP_Widget class in version 2.8.  New widgets were easier to make, and we finally had the ability to create multi-instance widgets without a lot of coding overhead and headaches.
&lt;/p&gt;
&lt;p&gt;
Meta Boxes are used by themes and plug-ins in a similar fashion to customize the layout and functionality of the post/page/custom-post-type edit screen.  Unfortunately, the code for creating a new meta box and handling the subsequent form submission is difficult to track down, prone to errors, and nearly impossible to use in a multi-instance situation.
&lt;/p&gt;
&lt;p&gt;
We should abstract the meta box creation process so that adding a new meta box is as easy as adding a new widget - just extend a WP_Meta_Box class to add the functionality.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15065 (Introduce register_theme_update_hook()) created</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Fri, 08 Oct 2010 01:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15065</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15065/1286501317000000</guid>
      <description>&lt;p&gt;
Currently, theme authors overload the activation hook with routines for upgrading from older versions.
&lt;/p&gt;
&lt;p&gt;
We should have a dedicated hook for when themes are upgraded.
&lt;/p&gt;
&lt;p&gt;
The activation hook should only be fired when the theme is activated by the user.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/14912"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;14912&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9124 (meta_compare needs to allow "in" as well) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 08 Oct 2010 01:13:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9124#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9124#comment:36/1286500390000000</guid>
      <description>&lt;p&gt;
Sorry, I didn't check the overwrite checkbox.  Please use 9124.9.2.diff, as it has the adjustments to the inline docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9124.9.2.diff attached to Ticket #9124</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 08 Oct 2010 01:11:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9124/9124.9.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9124/9124.9.2.diff/1286500279000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9124 (meta_compare needs to allow "in" as well) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 08 Oct 2010 00:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9124#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9124#comment:35/1286498912000000</guid>
      <description>&lt;p&gt;
Fixed the inline docs to show all the new choices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9124.9.diff attached to Ticket #9124</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Fri, 08 Oct 2010 00:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9124/9124.9.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9124/9124.9.diff/1286498878000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9124 (meta_compare needs to allow "in" as well) reopened</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 07 Oct 2010 23:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9124#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9124#comment:34/1286494721000000</guid>
      <description>&lt;p&gt;
I already ran across a limitation with this.  Luckily it's easily remedied.  We added support for IN, LIKE, and BETWEEN.  Do you see any reason not to also support NOT IN, NOT LIKE, and NOT BETWEEN?  The latest patch (9124.9.diff) adds support for these.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #12574 (Update Tinymce) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Thu, 07 Oct 2010 23:25:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12574#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12574#comment:13/1286493906000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
FYI this (TinyMCE 3.3.9.2) has been deployed to wp.com
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 23:15:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:41/1286493329000000</guid>
      <description>&lt;p&gt;
The original goal of this ticket was to not have to bother with separators.
&lt;/p&gt;
&lt;p&gt;
So, I think a new ticket should be opened for passing an array of arguments, similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13937" title="#13937: enhancement: Pass named arguments to add_meta_box() (closed: wontfix)"&gt;#13937&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 23:13:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:23/1286493219000000</guid>
      <description>&lt;p&gt;
For consistency with the template hierarchy, the template should be named &lt;code&gt;archive-{post-type}.php&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 23:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:62/1286492790000000</guid>
      <description>&lt;p&gt;
No, because it spans multiple taxonomies. Also, it's consistent with meta_query.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15064 (Template function for wp-admin submit buttons) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 23:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15064#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15064#comment:1/1286492626000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #14666,​13818 batch updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14666%2C13818</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14666%2C13818/1286492327000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [15754]: Revert part of [15753]. See [12914]. See #14666</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:58:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15754</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15754/1286492325014573</guid>
      <description>&lt;p&gt;
Revert part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15753" title="Introduce remove_menu_page() and remove_submenu_page(). Fixes #12718"&gt;[15753]&lt;/a&gt;. See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12914" title="Add phpdoc to all the add_*_page functions.
Rename arguments to ..."&gt;[12914]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:48:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:40/1286491685000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:38" title="Comment 38"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15753" title="Introduce remove_menu_page() and remove_submenu_page(). Fixes #12718"&gt;[15753]&lt;/a&gt; was supposed to reference &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt;. Sorry, again.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One thing my code implicitly addressed that we didn't cover in IRC (my bad) was moving to an&lt;code&gt;$args&lt;/code&gt; based solution for what is currently &lt;code&gt;add_menu_page()&lt;/code&gt; and &lt;code&gt;add_submenu_page()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The fact that there 6 or 7 parameters that are hard to remember and must be called in the correct order makes the current API less approachable than if it were to use args instead.
&lt;/p&gt;
&lt;p&gt;
Can we discuss that on this ticket before closure?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:39/1286491429000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:37" title="Comment 37"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why not dogfood the existing nav_menu cpt and make a new, internal one for the admin menus? Full and complete manipulation if you want it, and completely hidden from view if you don't.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
After working with it a lot, I don't think the current nav_menu system is anywhere near mature enough to extend to another context. It should be given time to mature before tackling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:38/1286491333000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15753" title="Introduce remove_menu_page() and remove_submenu_page(). Fixes #12718"&gt;[15753]&lt;/a&gt; was supposed to reference &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14666" title="#14666: task (blessed): Create reliable way to remove admin menus and submenus (closed: fixed)"&gt;#14666&lt;/a&gt;. Sorry, again.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:41:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:3/1286491298000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:41:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:2/1286491292000000</guid>
      <description>&lt;p&gt;
Mark:
&lt;/p&gt;
&lt;p&gt;
The use-cases I'm most concerned about are not when I'm using the &lt;code&gt;WP_Query&lt;/code&gt; but when someone else is such as in core or plugins.
&lt;/p&gt;
&lt;p&gt;
I'm doing all my work with CMS-related sites and I'm finding I probably spend &amp;gt;50% of my debugging time tracking down a bug that happened because I didn't get the limiting context correct in global filters.  I'm looking for ways to make plugin code more robust.
&lt;/p&gt;
&lt;p&gt;
By analogy I am basically trying to go from protecting myself against all the potential alternate needles in the haystack and instead wanting to focus on a single specific needle that is known.  Instead of looking for and testing for &lt;em&gt;"artifacts"&lt;/em&gt; i.e. &lt;code&gt;$postnow&lt;/code&gt;, &lt;code&gt;$typenow&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_SERVER['REQUEST_URI']&lt;/code&gt; etc. etc. I'd like to be able to tested for a know identifier in every reasonable context.
&lt;/p&gt;
&lt;p&gt;
Filters called by &lt;code&gt;WP_Query&lt;/code&gt; is but one place where where context is badly needed, but its one of the bigger ones.
&lt;/p&gt;
&lt;p&gt;
If you don't like this proposal, can we explore other ways to allow to to pinpoint context with known markers? This was less important in the blog days because you had nailed most patterns, but with CMS use-cases the number of potential patterns has increased exponentially.
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:37/1286491261000000</guid>
      <description>&lt;p&gt;
Why not dogfood the existing nav_menu cpt and make a new, internal one for the admin menus? Full and complete manipulation if you want it, and completely hidden from view if you don't.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14666 (Create reliable way to remove admin menus and submenus) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:37:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14666#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14666#comment:12/1286491045000000</guid>
      <description>fixed: &lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15753" title="Introduce remove_menu_page() and remove_submenu_page(). Fixes #12718"&gt;[15753]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:36/1286490935000000</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15753" title="Introduce remove_menu_page() and remove_submenu_page(). Fixes #12718"&gt;[15753]&lt;/a&gt;) Introduce remove_menu_page() and remove_submenu_page(). Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12718" title="#12718: enhancement: Better structure for admin menu (reopened)"&gt;#12718&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15753]: Introduce remove_menu_page() and remove_submenu_page(). Fixes #12718</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15753</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15753/1286490931687156</guid>
      <description>&lt;p&gt;
Introduce remove_menu_page() and remove_submenu_page(). Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12718" title="#12718: enhancement: Better structure for admin menu (reopened)"&gt;#12718&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:34:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:35/1286490895000000</guid>
      <description>wontfix: &lt;p&gt;
Sorry, wrong ticket. Closing, as per post-dev-meeting IRC discussion today.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:34/1286490806000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:27:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:61/1286490474000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12891#comment:59" title="Comment 59"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Done. Advanced query example updated:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nice!  But would &lt;code&gt;'tax_terms'&lt;/code&gt; not be more consistent with other arguments than &lt;code&gt;'tax_query'&lt;/code&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15064.diff attached to Ticket #15064</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:20:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15064/15064.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15064/15064.diff/1286490055000000</guid>
      <description>&lt;p&gt;
First swing, and a few sample implementations.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15064 (Template function for wp-admin submit buttons) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15064</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15064/1286489953000000</guid>
      <description>&lt;p&gt;
We have a lot of duplicate code surrounding submit buttons. And our HTML hasn't always been the same, so plugins have to keep up. Let's create a &lt;code&gt;submit_button()&lt;/code&gt; API function that takes care of this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:17:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063#comment:1/1286489840000000</guid>
      <description>wontfix: &lt;p&gt;
If you're making the WP_Query, you can just do:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$myfoo-&amp;gt;set_context( 'my-movie-list' );
$query = new WP_Query( ... );
$myfoo-&amp;gt;reset_context();
&lt;/pre&gt;&lt;p&gt;
Or, even just extend WP_Query. For instance, we have "GO_Query" at GigaOM that does all sorts of caching and magic.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15060 (Removing title on widget doesn't modify in-widget-title span) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:14:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15060#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15060#comment:2/1286489671000000</guid>
      <description>&lt;p&gt;
Curious. What system and browser are you using? Maybe it is a JS issue.
&lt;/p&gt;
&lt;p&gt;
I'll do more testing on it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15060 (Removing title on widget doesn't modify in-widget-title span) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:12:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15060#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15060#comment:1/1286489576000000</guid>
      <description>&lt;p&gt;
I don't know if something went wrong when I manually applied this to the dev.js file but I couldn't get it work :-(
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15063 (Add a "context" property to  WP_Query as a 2nd param to its constructor) created</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15063</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15063/1286489565000000</guid>
      <description>&lt;p&gt;
Through WordPress there's often a need to run a special query using &lt;code&gt;WP_Query&lt;/code&gt; but to also modify it using filters like &lt;code&gt;post_where&lt;/code&gt; and &lt;code&gt;post_join&lt;/code&gt;. Unfortunately it's very hard to get the context right and to only run those filters when needed.
&lt;/p&gt;
&lt;p&gt;
I'd like to propose a new property on WP_Query that adds a context which we could optionally set when we create WP_Query objects, i.e.:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$query = new WP_Query('post_type=movie','my-movie-list');
&lt;/pre&gt;&lt;p&gt;
Then in a filter could do something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function posts_where($where,$query) {
	if (isset($query-&amp;gt;context='my-movie-list')) {
		// Modify the where clause here...
	}
	return $where;
}
&lt;/pre&gt;&lt;p&gt;
Core could then start using it for when calling WP_Query to identify the context of the query. This could go a long way to helping up make our sites more robust.
&lt;/p&gt;
&lt;p&gt;
I'll submit a patch if I get interest.
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14966 (QuickPress should be a function with alot of hooks) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14966#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14966#comment:12/1286489016000000</guid>
      <description>&lt;p&gt;
Thinking about this more, we pulled in the stuff from the admin so we could generate auto-drafts. I don't like that more I think about it.
&lt;/p&gt;
&lt;p&gt;
Let's kill media button handling and move that to a hook for the dashboard module in particular. If the form is passed a $post, then so be it, but that's up to the developer. Beyond that, we don't have much use for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15688" title="Move some post and taxonomy functions from admin/includes to ..."&gt;[15688]&lt;/a&gt; which I can revert. Though maybe there is a need for get_terms_to_edit() if indeed a $post is passed. (Should we support edits by default?)
&lt;/p&gt;
&lt;p&gt;
My big questions now are how to implement field creation and what not. I think I maybe went a little too far with 14966.2.diff, but I do see a use case for hidden fields to be processed as an array -- doing it otherwise seems weird. Maybe submit buttons as well. I'd rather not see big chunks of HTML getting processed as arguments, because then it is much more difficult to pick and choose which you want, or to customize them, etc.
&lt;/p&gt;
&lt;p&gt;
It makes sense to me that you'd want to say I want array( 'title', 'content' ) and taxonomies =&amp;gt; array( 'post_tag', 'category' ), and it should build that for you into a form.
&lt;/p&gt;
&lt;p&gt;
Also, tabindex. Media buttons right now force us to leave it in, but it's a PITA to keep with the sprintf() needing to occur, and really they shouldn't be forced on forms because most won't want it (and shouldn't use it). The tabindex being in there was actually what got me thinking about fields with attributes in arrays, because based on the raw HTML, there's no way to easily remove tabindex="%d" if you don't want it.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 22:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:60/1286488889000000</guid>
      <description>&lt;p&gt;
Maybe we should replace 'IN' / 'NOT IN' with 'include' / 'exclude'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:54:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:59/1286488458000000</guid>
      <description>&lt;p&gt;
Done. Advanced query example updated:
&lt;/p&gt;
&lt;pre class="wiki"&gt;get_posts( array(
  'post_type' =&amp;gt; 'event',
  'tax_query' =&amp;gt; array(
    array(
      'taxonomy' =&amp;gt; 'location',
      'terms' =&amp;gt; array( 'everywhere' )
    ),
    array(
      'taxonomy' =&amp;gt; 'location',
      'terms' =&amp;gt; array( 'there' ),
      'operator' =&amp;gt; 'NOT IN'
    ),
  )
) );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:58/1286488234000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15752" title="Remove debug cruft introduced by [15751]. See #12891"&gt;[15752]&lt;/a&gt;) Remove debug cruft introduced by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15751" title="Add 'tax_query' as public query var. See #12891"&gt;[15751]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12891" title="#12891: task (blessed): Advanced multi-taxonomy WP_Query()s (closed: fixed)"&gt;#12891&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15752]: Remove debug cruft introduced by [15751]. See #12891</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:50:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15752</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15752/1286488232287454</guid>
      <description>&lt;p&gt;
Remove debug cruft introduced by &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15751" title="Add 'tax_query' as public query var. See #12891"&gt;[15751]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12891" title="#12891: task (blessed): Advanced multi-taxonomy WP_Query()s (closed: fixed)"&gt;#12891&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:49:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:33/1286488183000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12718#comment:32" title="Comment 32"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm happy that you find using github and gists good for collaboration but could you put snapshot patches on tickets in future so it is easy to follow the development in one place :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm still trying to get to the point where I understand how to efficiently create patches.  Will move to that when as soon as I can.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:57/1286488074000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15751" title="Add 'tax_query' as public query var. See #12891"&gt;[15751]&lt;/a&gt;) Add 'tax_query' as public query var. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12891" title="#12891: task (blessed): Advanced multi-taxonomy WP_Query()s (closed: fixed)"&gt;#12891&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15751]: Add 'tax_query' as public query var. See #12891</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:47:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15751</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15751/1286488072131552</guid>
      <description>&lt;p&gt;
Add 'tax_query' as public query var. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12891" title="#12891: task (blessed): Advanced multi-taxonomy WP_Query()s (closed: fixed)"&gt;#12891&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14966 (QuickPress should be a function with alot of hooks) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14966#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14966#comment:11/1286487556000000</guid>
      <description>&lt;p&gt;
QuickPress includes should stay in the admin.
A second  template tag should bring them in if it is going to be used.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12718 (Better structure for admin menu) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:35:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12718#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12718#comment:32/1286487323000000</guid>
      <description>&lt;p&gt;
I'm happy that you find using github and gists good for collaboration but could you put snapshot patches on tickets in future so it is easy to follow the development in one place :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15059 (Fix for "Undefined property: WP_Query::$post" in register_globals) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15059#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15059#comment:1/1286486633000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15750" title="Avoid Notice if the query doesn't have a post set e.g. on a 404 . ..."&gt;[15750]&lt;/a&gt;) Avoid Notice if the query doesn't have a post set e.g. on a 404 . Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15059" title="#15059: defect (bug): Fix for &amp;#34;Undefined property: WP_Query::$post&amp;#34; in register_globals (closed: fixed)"&gt;#15059&lt;/a&gt; props chrisbliss18.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15750]: Avoid Notice if the query doesn't have a post set e.g. on a 404 . ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15750</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15750/1286486630184691</guid>
      <description>&lt;p&gt;
Avoid Notice if the query doesn't have a post set e.g. on a 404 . Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15059" title="#15059: defect (bug): Fix for &amp;#34;Undefined property: WP_Query::$post&amp;#34; in register_globals (closed: fixed)"&gt;#15059&lt;/a&gt; props chrisbliss18.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12821 (Merge get_posts() and get_pages()) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:13:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12821#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12821#comment:20/1286485987000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14122 (Custom "capabilities" appears broken on custom post types) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:13:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14122#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14122#comment:10/1286485986000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This needs some love. Anyone want to pick it up?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14450 (ms-files.php generates bad content-types for REQUEST_URI's with query ...) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14450#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14450#comment:5/1286485868000000</guid>
      <description>&lt;p&gt;
Re-opening to allow it to soak in trunk before potential backport.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #15054 (Add filter hook to get_option) updated</title>
      
        <dc:creator>bireme</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:03:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15054#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15054#comment:2/1286485415000000</guid>
      <description>&lt;p&gt;
+1 this can be very useful
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14450 (ms-files.php generates bad content-types for REQUEST_URI's with query ...) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:00:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14450#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14450#comment:4/1286485249000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15749" title="Ensure we don't generate incorrect content types when files are ..."&gt;[15749]&lt;/a&gt;) Ensure we don't generate incorrect content types when files are requested with query strings. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14450" title="#14450: defect (bug): ms-files.php generates bad content-types for REQUEST_URI's with query ... (closed: fixed)"&gt;#14450&lt;/a&gt; props chrisbliss18.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15749]: Ensure we don't generate incorrect content types when files are ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 21:00:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15749</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15749/1286485245531041</guid>
      <description>&lt;p&gt;
Ensure we don't generate incorrect content types when files are requested with query strings. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14450" title="#14450: defect (bug): ms-files.php generates bad content-types for REQUEST_URI's with query ... (closed: fixed)"&gt;#14450&lt;/a&gt; props chrisbliss18.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12891 (Advanced multi-taxonomy WP_Query()s) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12891#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12891#comment:56/1286484616000000</guid>
      <description>&lt;p&gt;
Let's go with something closer to what scribu suggested. Let's skip parentheticals this time around, and assume the various taxonomy queries are ANDed together. So, taxonomy, term(s) and an operator to join those terms. Scribu, want to take first shot at that, since you suggested the syntax?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15058 (Validate option and transient name lengths) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:39:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15058#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15058#comment:4/1286483950000000</guid>
      <description>&lt;p&gt;
I'm all for adding these checks. Even as a seasoned WP developer, running into these issues can cause massive problems and wasted time in order to remember that many functions make the final option name longer and that it is being truncated.
&lt;/p&gt;
&lt;p&gt;
I know that there are many more areas to be tackled. I could have gone deeper with my original patch as I made a full listing of all the areas where option names are modified before being stored. However, I didn't want to jump off the deep end when opening this topic for discussion.
&lt;/p&gt;
&lt;p&gt;
I see that both &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11959" title="#11959: defect (bug): Value Truncation Still Unchecked in registration.php (new)"&gt;#11959&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14649" title="#14649: defect (bug): Throw error when registering a Post Type longer than 20 chars (closed: duplicate)"&gt;#14649&lt;/a&gt; are awaiting patches. I can working on patches for those.
&lt;/p&gt;
&lt;p&gt;
First, I'd like to know:
&lt;/p&gt;
&lt;p&gt;
1) Is this something that will be added if I work on it? I have a history of working on things that won't get added due to one reason or another, and I'd rather not waste my time.
&lt;/p&gt;
&lt;p&gt;
2) What is the best way to manage the workflow? Should the existing tickets relating to sanity checks be handled on an individual basis or would making a large batch ticket with a massive patch be preferred. The former (individual tickets/patches) makes more sense to me, but I'm not on the core team.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11589 (Disable the availability of deprecated functions by default for new ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:39:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11589#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11589#comment:17/1286483945000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11589#comment:16" title="Comment 16"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could set WP_ENABLE_DEPRECATED_FUNCTIONS to true by default so it wouldn't change current behaviour. People that don't need deprecated functions could then set it to false.
&lt;/p&gt;
&lt;p&gt;
A different approach would be to move all the really old deprecated functions into a WP Legacy plugin. This is what BuddyPress does currently.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The big problem is when you need the function you need it.
&lt;/p&gt;
&lt;p&gt;
If it's on by default most people won't know to disable it, and we have conditional includes which object caches don't like.
&lt;/p&gt;
&lt;p&gt;
Also how do you deal with the install/activation of plugin/theme which still uses the functions when they are disabled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15058 (Validate option and transient name lengths) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:31:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15058#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15058#comment:3/1286483463000000</guid>
      <description>&lt;p&gt;
We don't currently do sanity checks on the schema anywhere. If we are to do this, then it should be done across the board: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11959" title="#11959: defect (bug): Value Truncation Still Unchecked in registration.php (new)"&gt;#11959&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14649" title="#14649: defect (bug): Throw error when registering a Post Type longer than 20 chars (closed: duplicate)"&gt;#14649&lt;/a&gt;, etc. &amp;lt;&lt;a class="ext-link" href="http://wpdevel.wordpress.com/2010/09/13/cpt-enhancements/#comment-10882"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wpdevel.wordpress.com/2010/09/13/cpt-enhancements/#comment-10882&lt;/a&gt;&amp;gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14579 (Ajaxify list-type screens in the admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14579#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14579#comment:76/1286482394000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15748" title="Revive WP_User_Search as deprecated. See #14579"&gt;[15748]&lt;/a&gt;) Revive WP_User_Search as deprecated. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15748]: Revive WP_User_Search as deprecated. See #14579</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15748</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15748/1286482391737122</guid>
      <description>&lt;p&gt;
Revive WP_User_Search as deprecated. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14579" title="#14579: task (blessed): Ajaxify list-type screens in the admin (closed: fixed)"&gt;#14579&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [15747]: Unset global variables when they are no longer needed.</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15747</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15747/1286482369971784</guid>
      <description>&lt;p&gt;
Unset global variables when they are no longer needed.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11589 (Disable the availability of deprecated functions by default for new ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 20:08:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11589#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11589#comment:16/1286482104000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We could set WP_ENABLE_DEPRECATED_FUNCTIONS to true by default so it wouldn't change current behaviour. People that don't need deprecated functions could then set it to false.
&lt;/p&gt;
&lt;p&gt;
A different approach would be to move all the really old deprecated functions into a WP Legacy plugin. This is what BuddyPress does currently.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14696 (Personal Dashboard) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 07 Oct 2010 19:34:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14696#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14696#comment:7/1286480061000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15746" title="First pass of user admin. Network admin and screen cleanups. see #14696"&gt;[15746]&lt;/a&gt;) First pass of user admin. Network admin and screen cleanups. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14696" title="#14696: task (blessed): Personal Dashboard (closed: fixed)"&gt;#14696&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15746]: First pass of user admin. Network admin and screen cleanups. see #14696</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 07 Oct 2010 19:34:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15746</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15746/1286480058414021</guid>
      <description>&lt;p&gt;
First pass of user admin. Network admin and screen cleanups. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14696" title="#14696: task (blessed): Personal Dashboard (closed: fixed)"&gt;#14696&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15061 (Allow either array or string to be passed to locate_template) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:16:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15061#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15061#comment:3/1286475381000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15061#comment:2" title="Comment 2"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15061" title="#15061: enhancement: Allow either array or string to be passed to locate_template (closed: fixed)"&gt;chrisbliss18&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that this is just a very small sampling. In total, locate_template is used 89 times in BuddyPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doesn't this fact argue against adding any unnecessary logic that would slow performance?  What is the advantage of using strings alone?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're misunderstanding me. It is used 89 times in the entirety of BuddyPress' code, not 89 times in a single page load.
&lt;/p&gt;
&lt;p&gt;
I decided to benchmark the code. The performance different when boiling down to just the difference in the old function and my patch's version is as follows for 10,000,000 function calls that randomly select between a string or an array argument:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Original: 11.932206869125
Patch:    14.583618879318
&lt;/pre&gt;&lt;p&gt;
So the performance penalty is a 22.22% increase in execution time. This amounts to a performance penalty of 0.000000265 seconds for an individual call.
&lt;/p&gt;
&lt;p&gt;
Looking at a standard page load (with BuddyPress since I talked about it in the ticket details), locate_template is called a total of four times.
&lt;/p&gt;
&lt;p&gt;
What is the advantage of using strings alone? It's a much easier to remember argument syntax and is more in-line with other similar functions such as load_template, get_template_part (which takes a string and converts it into an array to call locate_template with), and is_page_template.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #7671,​15062 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=7671%2C15062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=7671%2C15062/1286475295000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15745" title="Fix irrelevant error message on plugin activation again. Props andy. ..."&gt;[15745]&lt;/a&gt;) Fix irrelevant error message on plugin activation again. Props andy. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15062" title="#15062: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#15062&lt;/a&gt; for the 3.0 branch. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7671" title="#7671: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#7671&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [15745]: Fix irrelevant error message on plugin activation again. Props andy. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15745</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15745/1286475293161140</guid>
      <description>&lt;p&gt;
Fix irrelevant error message on plugin activation again. Props andy. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15062" title="#15062: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#15062&lt;/a&gt; for the 3.0 branch. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7671" title="#7671: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#7671&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #7671 (Plugin fatal error yields irrelevant error message from WordPress) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:10:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7671#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7671#comment:22/1286475002000000</guid>
      <description>fixed: &lt;p&gt;
Because this belongs in the 3.0 branch I have opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15062" title="#15062: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#15062&lt;/a&gt;. If this were introduced in this cycle, reopening the ticket would be fine, but the list of tickets ina point release should IMO be reflective of all changes.
&lt;/p&gt;
&lt;p&gt;
Don't mind me, just tacking on the original milestone here. Thanks Andy for finding this, as many of us have looked thanks to many reports of this in 3.0.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #7671 (Plugin fatal error yields irrelevant error message from WordPress) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:06:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7671#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7671#comment:21/1286474796000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #15062 (Plugin fatal error yields irrelevant error message from WordPress) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:06:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15062#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15062#comment:2/1286474773000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15744" title="Fix irrelevant error message on plugin activation again. Props andy. ..."&gt;[15744]&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15062 (Plugin fatal error yields irrelevant error message from WordPress) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15062#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15062#comment:1/1286474727000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15062 (Plugin fatal error yields irrelevant error message from WordPress) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 18:04:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15062</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15062/1286474689000000</guid>
      <description>&lt;p&gt;
Redux of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7671" title="#7671: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#7671&lt;/a&gt; for 3.0.2 and 3.1.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15061 (Allow either array or string to be passed to locate_template) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 07 Oct 2010 17:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15061#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15061#comment:2/1286473453000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15061" title="#15061: enhancement: Allow either array or string to be passed to locate_template (closed: fixed)"&gt;chrisbliss18&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that this is just a very small sampling. In total, locate_template is used 89 times in BuddyPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Doesn't this fact argue against adding any unnecessary logic that would slow performance?  What is the advantage of using strings alone?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15061 (Allow either array or string to be passed to locate_template) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 17:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15061#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15061#comment:1/1286473230000000</guid>
      <description>&lt;p&gt;
I should have noted in the ticket details that the patch will allow the following to work in the same manner:
&lt;/p&gt;
&lt;pre class="wiki"&gt;locate_template( array( 'members/single/activity.php' ), true );
locate_template( 'members/single/activity.php', true );
&lt;/pre&gt;&lt;p&gt;
Thus backwards-compatibility is maintained.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>allow-string-locate_template-arg.diff attached to Ticket #15061</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 17:38:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15061/allow-string-locate_template-arg.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15061/allow-string-locate_template-arg.diff/1286473098000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15061 (Allow either array or string to be passed to locate_template) created</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Thu, 07 Oct 2010 17:38:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15061</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15061/1286473090000000</guid>
      <description>&lt;p&gt;
Currently, template file names have to be passed as an array to the locate_template function:
&lt;/p&gt;
&lt;pre class="wiki"&gt;locate_template(array('category-new.php', 'category.php'));
&lt;/pre&gt;&lt;p&gt;
Passing in multiple template file names is a very powerful feature; however, outside of core, most code simply needs to locate a single template file name. As can be seen from this variety of locate_template calls made in BuddyPress:
&lt;/p&gt;
&lt;pre class="wiki"&gt;locate_template( array( 'members/single/activity.php' ), true );
locate_template( array( 'members/single/messages.php' ), true );
locate_template( array( 'members/single/profile/edit.php' ), true );
locate_template( array( 'members/members-loop.php' ), true );
locate_template( array( 'activity/activity-loop.php' ), true );
locate_template( array( 'groups/single/forum.php' ), true );
locate_template( array( 'sidebar.php' ), true );
locate_template( array( 'groups/single/group-header.php' ), true );
&lt;/pre&gt;&lt;p&gt;
Note that this is just a very small sampling. In total, locate_template is used 89 times in BuddyPress, and not once is more than a single file passed to locate_template.
&lt;/p&gt;
&lt;p&gt;
My attached patch makes working with locate_template much easier for general usage by allowing either a string or array for the $template_names argument. A string argument will be changed into an array.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14419 (Make get_editable_user_ids() use the role system instead of user level) updated</title>
      
        <dc:creator>BandB</dc:creator>

      <pubDate>Thu, 07 Oct 2010 17:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14419#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14419#comment:2/1286471853000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>fix-removed-widget-title-refresh.diff attached to Ticket #15060</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 17:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15060/fix-removed-widget-title-refresh.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15060/fix-removed-widget-title-refresh.diff/1286471369000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15060 (Removing title on widget doesn't modify in-widget-title span) created</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Thu, 07 Oct 2010 17:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15060</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15060/1286471362000000</guid>
      <description>&lt;p&gt;
In the widget editor, widgets with titles have this title shown in the widget editor container title. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Text: Sample Widget
&lt;/pre&gt;&lt;p&gt;
When a widget is first modified and saved, adding a title will cause this widget editor container title to update via JS to reflect the title update. Subsequent modifications of the title will also be reflected. However, if the title is removed, the previous title will remain.
&lt;/p&gt;
&lt;p&gt;
Looking at the code shows that the in-widget-title span that holds this widget editor container title is only updated if the title value is not empty. This is easily tested by adding a Text widget, giving it a title, clicking Save, confirming that the title is reflected in the container, removing the title, and clicking Save again.
&lt;/p&gt;
&lt;p&gt;
The supplied patch modifies the JS that handles this process and causes it to always update the in-widget-title span, even when the title entry is empty or missing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>thenbrent</dc:creator>

      <pubDate>Thu, 07 Oct 2010 16:54:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:2/1286470474000000</guid>
      <description>&lt;p&gt;
My use case for this is a rating taxonomy (Excellent, Good, Satisfactory, Below Average, Poor). This needs exclusive types as an item can't be both "Excellent" &amp;amp; "Satisfactory".
&lt;/p&gt;
&lt;p&gt;
However, there might be multiple dimensions each requiring an individual rating - 'Speed', 'Service, 'Quality' etc. These could be separated into distinct meta boxes or combined into the one hierarchy. If in the one hierarchy, it would need to be possible to choose one rating (child) for each dimension (parent). The advantage of this method being that it uses one meta box instead of three.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, these are probably atypical requirements. For most use cases, I imagine exclusive means on that taxonomy in it's entirety. So, I guess that would be the better option and I'll be left with 3 meta boxes. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fix-undefined-property-post.diff attached to Ticket #15059</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 16:23:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15059/fix-undefined-property-post.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15059/fix-undefined-property-post.diff/1286468586000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15059 (Fix for "Undefined property: WP_Query::$post" in register_globals) created</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Thu, 07 Oct 2010 16:22:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15059</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15059/1286468573000000</guid>
      <description>&lt;p&gt;
The register_globals function (wp-includes/classes.php) has an unchecked property reference. This causes the following warning to be generated on post type listings when the post type has no entries:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Undefined property: WP_Query::$post in ABSPATH/wp-includes/classes.php on line 443
&lt;/pre&gt;&lt;p&gt;
The attached patch fixes removes the warning with an isset check that assigns a value of null if &lt;code&gt;$wp_query-&amp;gt;post&lt;/code&gt; isn't set. This is the same result as assigning the undefined value without the warning.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14909 (Pass "_e('Press This')" through filter) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Thu, 07 Oct 2010 16:06:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14909#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14909#comment:7/1286467598000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15058 (Validate option and transient name lengths) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 16:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15058#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15058#comment:2/1286467285000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13310 (Extend option_name to varchar(255)) updated</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13310#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13310#comment:4/1286467137000000</guid>
      <description>&lt;p&gt;
This isn't a bad idea. Especially the specific length.
&lt;/p&gt;
&lt;p&gt;
The get_site_option function uses the options table when the site isn't multisite and uses the sitemeta table when it is multisite. This translates into a maximum name size of 64 characters (length of option_name) for site option storage for non-multisite and 255 characters (length of meta_key) for multisite.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13310 (Extend option_name to varchar(255)) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13310#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13310#comment:3/1286466851000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/15058" title="#15058: enhancement: Validate option and transient name lengths (new)"&gt;#15058&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15058 (Validate option and transient name lengths) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:53:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15058#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15058#comment:1/1286466814000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13310" title="#13310: enhancement: Extend option_name to varchar(255) (closed: fixed)"&gt;#13310&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7671 (Plugin fatal error yields irrelevant error message from WordPress) updated</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7671#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7671#comment:20/1286466368000000</guid>
      <description>&lt;p&gt;
My apologies for the faux pas and my thanks for the commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15057 (Is the double serialization in maybe_serialize( ) intentional ?) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:41:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15057#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15057#comment:3/1286466108000000</guid>
      <description>wontfix: &lt;p&gt;
So, yeah, wontfix due to compatiblity reasons: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14074" title="Revert changes to maybe_serialize() made in r13673. Do not prevent ..."&gt;[14074]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15057 (Is the double serialization in maybe_serialize( ) intentional ?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15057#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15057#comment:2/1286465909000000</guid>
      <description>&lt;p&gt;
Here's what it says:
&lt;/p&gt;
&lt;p&gt;
&lt;a href="http://core.trac.wordpress.org/browser/trunk/wp-includes/functions.php?annotate=blame&amp;amp;rev=15723#L1005"&gt;browser/trunk/wp-includes/functions.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>validate-option-length.diff attached to Ticket #15058</title>
      
        <dc:creator>chrisbliss18</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15058/validate-option-length.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15058/validate-option-length.diff/1286465881000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15058 (Validate option and transient name lengths) created</title>
      
        <dc:creator>chrisjean</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:37:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15058</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15058/1286465866000000</guid>
      <description>&lt;p&gt;
The option_name column in the options table holds up to 64 characters yet there aren't any length checks to ensure that the length isn't exceeded. This leads to all sorts of odd behavior as the name will be truncated to fit, saving the option but not allowing it to be retrieved with the same name.
&lt;/p&gt;
&lt;p&gt;
This issue affects all uses of the options system. A particular annoyance is transients. A transient that doesn't expire has a max name length of 53 characters yet a transient that does expire has a max name length of 45 characters. When attempting to save an expiring transient of name length between 46 and 53 characters, the transient will store but will be deleted before being used when get_transient is called due to the missing _transient_timeout_ option (since it was too long).
&lt;/p&gt;
&lt;p&gt;
The core issues are that the functions don't return any type of failure condition on names that are too long and no warning is created. So, I've created a patch that addresses both of these issues.
&lt;/p&gt;
&lt;p&gt;
The patch shows an example of how option and transient name length validation can be added. In order to allow users to modify the option_name column length, a new constant, WP_OPTION_LENGTH, is created with a default value of 64. This constant is checked for all length validation.
&lt;/p&gt;
&lt;p&gt;
This is simply an example of how I'd like the validation to function. I'm not attached to the wording of the warnings or the name of the constant.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15056 (New hook for wp_new_user_notification()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:35:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15056#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15056#comment:3/1286465707000000</guid>
      <description>&lt;p&gt;
See &lt;a class="ext-link" href="http://codex.wordpress.org/Pluggable_Functions"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Pluggable_Functions&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15056 (New hook for wp_new_user_notification()) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:34:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15056#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15056#comment:2/1286465655000000</guid>
      <description>worksforme: &lt;p&gt;
wp_new_user_notification() is pluggable, which means you can redefine it and make it do whatever you want.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #15057 (Is the double serialization in maybe_serialize( ) intentional ?) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:33:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15057#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15057#comment:1/1286465631000000</guid>
      <description>&lt;p&gt;
What does SVN blame say on that line of code?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15057 (Is the double serialization in maybe_serialize( ) intentional ?) created</title>
      
        <dc:creator>DrLightman</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:31:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15057</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15057/1286465470000000</guid>
      <description>&lt;pre class="wiki"&gt;function maybe_serialize( $data ) {
   if ( is_array( $data ) || is_object( $data ) )
       return serialize( $data );
   if ( is_serialized( $data ) )
       return serialize( $data );
   return $data;
}
&lt;/pre&gt;&lt;pre class="wiki"&gt;   if ( is_serialized( $data ) )
       return serialize( $data );
&lt;/pre&gt;&lt;p&gt;
It creeps me out :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #7671 (Plugin fatal error yields irrelevant error message from WordPress) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7671#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7671#comment:19/1286465391000000</guid>
      <description>&lt;p&gt;
mrmist, you're right. It's okay this time, since it's a straightforward fix to a regression.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7671 (Plugin fatal error yields irrelevant error message from WordPress) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:27:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7671#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7671#comment:18/1286465270000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15744" title="Fix irrelevant error message on plugin activation again. Props andy. ..."&gt;[15744]&lt;/a&gt;) Fix irrelevant error message on plugin activation again. Props andy. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7671" title="#7671: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#7671&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15744]: Fix irrelevant error message on plugin activation again. Props andy. ...</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15744</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15744/1286465267526188</guid>
      <description>&lt;p&gt;
Fix irrelevant error message on plugin activation again. Props andy. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7671" title="#7671: defect (bug): Plugin fatal error yields irrelevant error message from WordPress (closed: fixed)"&gt;#7671&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15056 (New hook for wp_new_user_notification()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15056#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15056#comment:1/1286465258000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7671 (Plugin fatal error yields irrelevant error message from WordPress) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:24:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7671#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7671#comment:17/1286465069000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I could be speaking out of turn, but it's probably best not to re-open fixes that were complete on old milestones.
&lt;/p&gt;
&lt;p&gt;
Also version tracks the original report generally.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>catch_fatal_activation_hook.diff attached to Ticket #7671</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/7671/catch_fatal_activation_hook.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/7671/catch_fatal_activation_hook.diff/1286463866000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #7671 (Plugin fatal error yields irrelevant error message from WordPress) reopened</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7671#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7671#comment:16/1286463844000000</guid>
      <description>&lt;p&gt;
Somewhere along the line this bug crept back in. If the script dies in the activate_$plugin hook, the plugin is activated and the message to the user is that a function has already been defined.
&lt;/p&gt;
&lt;p&gt;
The fix is simple: run the activate_$plugin hook BEFORE saving the new active_plugins array.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #15056 (New hook for wp_new_user_notification()) created</title>
      
        <dc:creator>Veraxus</dc:creator>

      <pubDate>Thu, 07 Oct 2010 15:04:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15056</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15056/1286463843000000</guid>
      <description>&lt;p&gt;
I'd like to be able to customize the new user's registration email, but this requires an additional filter hook in wp_new_user_notification(). The hook could be something as straightforward as this:
==================================================================
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_new_user_notification($user_id, $plaintext_pass = '') {
	$user = new WP_User($user_id);
	$user_login = stripslashes($user-&amp;gt;user_login);
	$user_email = stripslashes($user-&amp;gt;user_email);
	// The blogname option is escaped with esc_html on the way into the database in sanitize_option
	// we want to reverse this for the plain text arena of emails.
	$blogname = wp_specialchars_decode(get_option('blogname'), ENT_QUOTES);
	$message  = sprintf(__('New user registration on your site %s:'), $blogname) . "\r\n\r\n";
	$message .= sprintf(__('Username: %s'), $user_login) . "\r\n\r\n";
	$message .= sprintf(__('E-mail: %s'), $user_email) . "\r\n";
	@wp_mail(get_option('admin_email'), sprintf(__('[%s] New User Registration'), $blogname), $message);
	if ( empty($plaintext_pass) )
		return;
	$message  = sprintf(__('Username: %s'), $user_login) . "\r\n";
	$message .= sprintf(__('Password: %s'), $plaintext_pass) . "\r\n";
	$message .= wp_login_url() . "\r\n";
        $message = apply_filters('new_user_email_message',$message);
	wp_mail($user_email, sprintf(__('[%s] Your username and password'), $blogname), $message);
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13067 (Configuration of Plugin and Theme Repository/ies) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 07 Oct 2010 14:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13067#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13067#comment:9/1286462918000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://www.wptavern.com/forum/themes-templates/1911-theme-repository-reviews.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Theme repository reviews&lt;/a&gt;, &lt;a class="ext-link" href="http://konstruktors.com/blog/wordpress/2538-automatic-updates-for-plugins-and-themes-hosted-outside-wordpress-extend/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Automatic Updates for Plugins and Themes Hosted Outside WordPress Extend&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>15055.export.php.diff attached to Ticket #15055</title>
      
        <dc:creator>RyanMurphy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 14:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15055/15055.export.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15055/15055.export.php.diff/1286461596000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15054 (Add filter hook to get_option) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 14:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15054#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15054#comment:1/1286461573000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15055 (Add blogname to WXR export) created</title>
      
        <dc:creator>RyanMurphy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 14:25:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15055</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15055/1286461533000000</guid>
      <description>&lt;p&gt;
From the Ideas section: &lt;a class="ext-link" href="http://wordpress.org/extend/ideas/topic/append-exported-wordpress-xml-file-with-site-name"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/ideas/topic/append-exported-wordpress-xml-file-with-site-name&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
I have few website's I administer and I download the export file, just in case, once in a while, (I do do a full db backup everyday as well.) and find it annoying that the default file name for the .xml is wordpress.todays-date.xml. How about making it my-site-wordpress.todays-date.xml?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>get_option_filter.patch attached to Ticket #15054</title>
      
        <dc:creator>leogermani</dc:creator>

      <pubDate>Thu, 07 Oct 2010 14:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15054/get_option_filter.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15054/get_option_filter.patch/1286461239000000</guid>
      <description>&lt;p&gt;
add filter to get_option function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15054 (Add filter hook to get_option) created</title>
      
        <dc:creator>leogermani</dc:creator>

      <pubDate>Thu, 07 Oct 2010 14:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15054</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15054/1286461187000000</guid>
      <description>&lt;p&gt;
Add a filter hook to get_option function to allow plugins to filter options.
&lt;/p&gt;
&lt;p&gt;
Current filter 'pre_option_$option' does not pass the option name as a parameter, so you need to have one specific function for each option you want to filter. This does not allow you to filter dynamically created options, nor lets you filter all options if you want to do so.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15053 (Site options page displays complete users list - no way of interaction) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 13:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15053#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15053#comment:1/1286459697000000</guid>
      <description>&lt;p&gt;
As a workaround, you can use remove_meta_box() to disable the Site Users box altogether.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14944 (GNU Lesser General Public License file is missing) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 07 Oct 2010 13:53:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14944#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14944#comment:25/1286459613000000</guid>
      <description>&lt;p&gt;
I've covered the topic on my blog a bit: &lt;a class="ext-link" href="http://hakre.wordpress.com/2010/10/06/wordpress-licensing-issues-on-showing-license/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress Licensing Issues – On Showing License&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15044 (apache_mod_loaded fails due to ob_get_clean behavior on some servers) updated</title>
      
        <dc:creator>hamfastgamgee</dc:creator>

      <pubDate>Thu, 07 Oct 2010 13:13:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15044#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15044#comment:4/1286457190000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15044#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We use ob_get_clean() in more than a half-dozen places in core. So I'm willing to guess it isn't that. That also tells me that we wouldn't make this change without sound reasoning and a way to reproduce the issue, otherwise we may just end up using ob_get_clean() back again at a later time.
&lt;/p&gt;
&lt;p&gt;
The PHP 5.2.10 release announcement lists a memory leak in ob_get_clean() as a fix. I don't have 5.2.9 to test on at the moment, but I can try to get it fired up, maybe that is the issue (but doubtful). Can you test ob_get_clean() on a regular PHP file on that server and see what is up?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the WP System Health plugin actually says I'm running on 5.2.14, despite what Green Geeks phpinfo says, so maybe their hosted sites get a newer version of PHP than their main site uses? :)  That would seem to rule out 5.2.9 as a direct problem.
&lt;/p&gt;
&lt;p&gt;
Anyway, yes, I would definitely agree with the assessment that since ob_get_clean is used elsewhere for areas that are not failing that something else is likely going on, or maybe there's a circumstance to the phpinfo parsing that causes this to fail in this particular code.  However, I know for a fact that using ob_get_contents and ob_end_clean instead of ob_get_clean in this one location does in fact solve the problem, even though those statements are, according to PHP, supposed to be more or less identical.
&lt;/p&gt;
&lt;p&gt;
Here are some support forum links for exactly the same problem as I am describing:
&lt;a class="ext-link" href="http://wordpress.org/support/topic/permalink-settings-page-is-blank-wp-292"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/permalink-settings-page-is-blank-wp-292&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/blank-media-window-mac-upload"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/blank-media-window-mac-upload&lt;/a&gt; &lt;a class="ext-link" href="http://wordpress.org/support/topic/permalinks-settings-page-is-blank"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/permalinks-settings-page-is-blank&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/mac-osx-amp-php-532-uploading-images"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/mac-osx-amp-php-532-uploading-images&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Some of those pages suggested that 5.2.13 was fine and 5.3.2 was broken.  No idea what kind of bearing that has on 5.2.14.
&lt;/p&gt;
&lt;p&gt;
I'm not much of a PHP hacker (I'm a professional software developer but not experienced in PHP), so I'm not sure how to proceed to actually debug the real failure.  (A friend of mine who is a PHP hacker for his day job hypothesized that multiple headers were getting sent and somehow this caused ob_get_clean to not properly close the output buffer.)  I just know I fixed it on my server by the change indicated, but I don't want to hand the site over to the non-technical maintainers without some hope that future upgrades to Wordpress will just re-break their site. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15053 (Site options page displays complete users list - no way of interaction) created</title>
      
        <dc:creator>mwidmann</dc:creator>

      <pubDate>Thu, 07 Oct 2010 12:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15053/1286453298000000</guid>
      <description>&lt;p&gt;
I have ~4k users in a multisite site. Accessing the site options for this site displays ALL users of the site. This is very slow and takes many resources I don't need.
&lt;/p&gt;
&lt;p&gt;
Neither the &lt;code&gt;ms-sites.php&lt;/code&gt; nor &lt;code&gt;get_users_of_blog( $id )&lt;/code&gt; offers a way of changing this behavior by applying filters or actions.
&lt;/p&gt;
&lt;p&gt;
The only way I can apply changes atm is to apply a filter to &lt;code&gt;$wpdb-&amp;gt;query()&lt;/code&gt;'s &lt;code&gt;query&lt;/code&gt; , which imo is not very elegant and would mean too much overhead.
&lt;/p&gt;
&lt;p&gt;
The best solution would be to add a filter to define what &lt;code&gt;get_users_of_blog&lt;/code&gt; queries.
&lt;/p&gt;
&lt;p&gt;
Changing the behavior would require to re-think the whole workflow of changing the roles for users on sites in a multisite environment. Maybe by adding functionality to the edit user pane.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12706 (Custom post status bugs) updated</title>
      
        <dc:creator>aesqe</dc:creator>

      <pubDate>Thu, 07 Oct 2010 11:42:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12706#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12706#comment:22/1286451756000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>8466.2.diff attached to Ticket #8466</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 10:20:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8466/8466.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8466/8466.2.diff/1286446844000000</guid>
      <description>&lt;p&gt;
Patch refreshed against &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15742" title="Sticky post support for post types, first pass. see #12702, props azizur."&gt;[15742]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14170 (Problems with network activation) updated</title>
      
        <dc:creator>coolmann</dc:creator>

      <pubDate>Thu, 07 Oct 2010 10:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14170#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14170#comment:24/1286446196000000</guid>
      <description>&lt;p&gt;
Thank you for your quick reply, Scribu, really appreciated. I agree about the extra parameter (which would replace the clunky $_GET value), but the same thing should be added to the deactivation hook. Also, what about the 'wpmu_new_blog' hook, is it safe to assume it will be still available in WP 3.1 to run the activation script when a new blog is created (and the plugin is network-activated?) I would suggest keeping this hook and let plugin developers handle the activation accordingly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15051 (Don't let all &lt;thead&gt; checkboxes to function as selector) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:53:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15051#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15051#comment:5/1286445220000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15743" title="More specific selector for checkbox columns. Props Cimmo for initial ..."&gt;[15743]&lt;/a&gt;) More specific selector for checkbox columns. Props Cimmo for initial patch. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15051" title="#15051: enhancement: Don't let all &amp;lt;thead&amp;gt; checkboxes to function as selector (closed: fixed)"&gt;#15051&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15743]: More specific selector for checkbox columns. Props Cimmo for initial ...</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15743</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15743/1286445217574796</guid>
      <description>&lt;p&gt;
More specific selector for checkbox columns. Props Cimmo for initial patch. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15051" title="#15051: enhancement: Don't let all &amp;lt;thead&amp;gt; checkboxes to function as selector (closed: fixed)"&gt;#15051&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15051 (Don't let all &lt;thead&gt; checkboxes to function as selector) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15051#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15051#comment:4/1286444911000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15051#comment:3" title="Comment 3"&gt;Cimmo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I never used JQuery in my life, I just used my common sense and it fixed the issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very good. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14912 (Introduce register_update_hook()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:36:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14912#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14912#comment:27/1286444198000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14912#comment:25" title="Comment 25"&gt;batmoo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14912#comment:23" title="Comment 23"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've added an is_admin() at the beginning, to keep the front-end light and free of potential weirdness.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The one potential problem with only firing the update hook on is_admin is that the front-end is going to have updated plugin code which likely expects updated data, and that's more likely to cause weirdness.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Considering that 99.9% of plugin updates will be done through the admin, I don't think this is a problem.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And from the looks of it, the current patch fires update_option/update_site_option on every page load for all update hooks registered. It might be better be to fire those only if the version is different.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
update_option() and update_site_option() do an UPDATE only if the new value is different from the old value, so it's the same thing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14170 (Problems with network activation) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14170#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14170#comment:23/1286443485000000</guid>
      <description>&lt;p&gt;
Hi coolmann, that's basically what my Proper Network Activation plugin does for all plugins that have an activation hook.
&lt;/p&gt;
&lt;p&gt;
For now, I think it's better you simply call _single_blog_activate().
&lt;/p&gt;
&lt;p&gt;
Instead of making plugin authors go through this for each plugin they have, maybe register_activation_hook() should accept a third parameter, like &lt;code&gt;$do_for_all_blogs = true&lt;/code&gt;. This way, plugins that want to handle network activation themselves can do so easily.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15015 (Customisable submit button for comment form) updated</title>
      
        <dc:creator>morpheu5</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:11:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15015#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15015#comment:5/1286442691000000</guid>
      <description>&lt;p&gt;
Hi there. Any plan to work on this? I need to know if I can rely on something like this or if I have to go for dirty workarounds.
&lt;/p&gt;
&lt;p&gt;
The point is that I need to almost completely redesign the markup of the form. In fact I'd need to get rid of the &amp;lt;p&amp;gt; that surrounds the submit button and replace it with a &amp;lt;div&amp;gt;. This is because I have a theme developed for Drupal and I need to keep that in sync with the one for Wordpress, and there's no way Drupal's theme is going to be changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12702 (Enable sticky post checkbox for custom post type Publish metabox) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12702#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12702#comment:20/1286442638000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15742" title="Sticky post support for post types, first pass. see #12702, props azizur."&gt;[15742]&lt;/a&gt;) Sticky post support for post types, first pass. see &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12702" title="#12702: feature request: Enable sticky post checkbox for custom post type Publish metabox (reopened)"&gt;#12702&lt;/a&gt;, props azizur.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15742]: Sticky post support for post types, first pass. see #12702, props azizur.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 09:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15742</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15742/1286442635505035</guid>
      <description>&lt;p&gt;
Sticky post support for post types, first pass. see &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12702" title="#12702: feature request: Enable sticky post checkbox for custom post type Publish metabox (reopened)"&gt;#12702&lt;/a&gt;, props azizur.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12702 (Enable sticky post checkbox for custom post type Publish metabox) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:46:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12702#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12702#comment:19/1286441210000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The implementation of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8466" title="#8466: enhancement: Can a &amp;#34;Sticky&amp;#34; view be added to the Edit Posts page next to Drafts? (closed: fixed)"&gt;#8466&lt;/a&gt; is affected by this.
&lt;/p&gt;
&lt;p&gt;
I was talking with dd32 and we were wondering whether we could indeed get away with storing custom post type stickies in &lt;code&gt;get_option('sticky_posts')&lt;/code&gt;. The only contraindication I can think of is a theme that fetches that value and counts it, or something along those lines. As it is, that approach is already flawed, as a post can be sticky but doesn't need to be published, so their count would be off. Thus, we're only adding an additional dynamic as allowing posts of other types to be stickies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8466 (Can a "Sticky" view be added to the Edit Posts page next to Drafts?) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8466#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8466#comment:12/1286440803000000</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/12702" title="#12702: feature request: Enable sticky post checkbox for custom post type Publish metabox (reopened)"&gt;#12702&lt;/a&gt;, sticky posts for custom post types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8466 (Can a "Sticky" view be added to the Edit Posts page next to Drafts?) updated</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8466#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8466#comment:11/1286440421000000</guid>
      <description>&lt;p&gt;
Patch seems ok to me, tested sticky posts with different status (pending, draft etc..) all showed up ok in the view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>8466.png attached to Ticket #8466</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:20:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8466/8466.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8466/8466.png/1286439608000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8466 (Can a "Sticky" view be added to the Edit Posts page next to Drafts?) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:18:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8466#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8466#comment:10/1286439489000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
8466.diff:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds a "Sticky (#)" link to the edit posts screen.
&lt;/li&gt;&lt;li&gt;This link appears immediately after "Published (#)" if present, otherwise right after "All (#)".
&lt;/li&gt;&lt;li&gt;Moves wp() calls in the admin to query_posts(). Per discussion late in the 3.0 cycle, but needs to be double-checked.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>8466.diff attached to Ticket #8466</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8466/8466.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8466/8466.diff/1286439472000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14912 (Introduce register_update_hook()) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:11:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14912#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14912#comment:26/1286439102000000</guid>
      <description>&lt;p&gt;
Expanding on that last remark, there should probably be two procedures. One that tells the plugin to run the upgrade code on all page loads, regardless of where we are on the site. The other that tells the plugin to make these changes persistent, which runs in the admin area only, preferably only when the admin is logged in, and which updates the stored plugin version. This, to avoid hammering the DB on large sites.
&lt;/p&gt;
&lt;p&gt;
The two functions need to be well documented, too, so they're not misused. Most plugin devs don't realize that non-atomic upgrade code can wreck their data when it's run concurrently on multiple page loads.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15051 (Don't let all &lt;thead&gt; checkboxes to function as selector) updated</title>
      
        <dc:creator>Cimmo</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15051#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15051#comment:3/1286438852000000</guid>
      <description>&lt;p&gt;
I never used JQuery in my life, I just used my common sense and it fixed the issue. The condensed version looks even better if it works the same, but yes the point is, please apply the patch if you like it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15741]: Revert accidental inclusion in last commit... [15740]</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:06:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15741</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15741/1286438791486645</guid>
      <description>&lt;p&gt;
Revert accidental inclusion in last commit... &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15740" title="Fix an English fail."&gt;[15740]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [15740]: Fix an English fail.</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 07 Oct 2010 08:04:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15740</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15740/1286438655086110</guid>
      <description>&lt;p&gt;
Fix an English fail.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15048 (long theme name length causes menu bug) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 05:59:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15048#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15048#comment:7/1286431193000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15739" title="Some doc updates. see #15048."&gt;[15739]&lt;/a&gt;) Some doc updates. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15048" title="#15048: defect (bug): long theme name length causes menu bug (closed: fixed)"&gt;#15048&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15739]: Some doc updates. see #15048.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 05:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15739</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15739/1286431190842374</guid>
      <description>&lt;p&gt;
Some doc updates. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15048" title="#15048: defect (bug): long theme name length causes menu bug (closed: fixed)"&gt;#15048&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #12863 (jQuery UI 1.8) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 04:33:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12863#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12863#comment:19/1286426020000000</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12863 (jQuery UI 1.8) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 04:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12863#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12863#comment:18/1286425222000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15738" title="Verify that a widget is draggable before stripping its draggability. ..."&gt;[15738]&lt;/a&gt;) Verify that a widget is draggable before stripping its draggability. props filosofo, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12863" title="#12863: defect (bug): jQuery UI 1.8 (closed: fixed)"&gt;#12863&lt;/a&gt;. Fixes widget creation for jQUI 1.8.5; should be fixed in jQUI 1.8.6.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15738]: Verify that a widget is draggable before stripping its draggability. ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 07 Oct 2010 04:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15738</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15738/1286425219252625</guid>
      <description>&lt;p&gt;
Verify that a widget is draggable before stripping its draggability. props filosofo, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12863" title="#12863: defect (bug): jQuery UI 1.8 (closed: fixed)"&gt;#12863&lt;/a&gt;. Fixes widget creation for jQUI 1.8.5; should be fixed in jQUI 1.8.6.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15042 (plugin.php functions (filters) should be available to all pluggable ...) updated</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Thu, 07 Oct 2010 03:00:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15042#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15042#comment:4/1286420437000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15042#comment:2" title="Comment 2"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Question: How would one actually hook into these functions? No plugins would be loaded, because the DB will not have access to load those plugins yet. Is the assumption that a future feature will be added that autoloads for these requirements?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I want to use the 'query' filter and I want to be sure that every query is passed through my filter. However, the 'query' filter is only applied conditionally because apply_filters is not necessarily available when the first query is run.
&lt;/p&gt;
&lt;p&gt;
There are typically several queries executed before plugins are loaded. Thus, if I want all queries to pass through my filter I must add my filter prior to the first query. Thus I must add my filter during the database configuration phase. This is impossible because the entire database inclusion phase is completed prior to the inclusion of plugin.php.
&lt;/p&gt;
&lt;p&gt;
Strictly speaking, I can hack globals to add a filter any time I want. I don't like doing this, but I've done it. However, if I need to execute a query during the database configuration phase, my filters will not be applied because the 'query' filter is conditional upon the existence of a function in plugin.php.
&lt;/p&gt;
&lt;p&gt;
While these are certainly edge and corner cases, they are not unrealistic. I created this ticket because HyperDB needs a query filter that never lets a query escape the filter. A new system is not needed; what is needed is add_filter and apply_filters. True story.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12863 (jQuery UI 1.8) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 07 Oct 2010 02:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12863#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12863#comment:17/1286418619000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;verify-draggability.12863.diff&lt;/code&gt; verifies that the item is actually draggable before trying to strip it of its draggability.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>verify-draggability.12863.diff attached to Ticket #12863</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 07 Oct 2010 02:28:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12863/verify-draggability.12863.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12863/verify-draggability.12863.diff/1286418528000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14912 (Introduce register_update_hook()) updated</title>
      
        <dc:creator>batmoo</dc:creator>

      <pubDate>Thu, 07 Oct 2010 02:01:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14912#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14912#comment:25/1286416869000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is awesome guys!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14912#comment:23" title="Comment 23"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've added an is_admin() at the beginning, to keep the front-end light and free of potential weirdness.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The one potential problem with only firing the update hook on is_admin is that the front-end is going to have updated plugin code which likely expects updated data, and that's more likely to cause weirdness.
&lt;/p&gt;
&lt;p&gt;
For example, if I go from 0.1 to 0.2 and my update hook changes the name of an option from 'my_option' to 'myplugin_my_option', my code is going to reference the option as 'myplugin_my_option'. If a user visits my site before the update hook fires, my plugin is probably not going to work. But then again, this might just be a coding practice issue.
&lt;/p&gt;
&lt;p&gt;
And from the looks of it, the current patch fires update_option/update_site_option on every page load for all update hooks registered. It might be better be to fire those only if the version is different.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15042 (plugin.php functions (filters) should be available to all pluggable ...) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 07 Oct 2010 01:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15042#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15042#comment:3/1286415546000000</guid>
      <description>&lt;p&gt;
Jacob, it looks like you wrote your comment in the style of Aquinas.  I could live with that as a requirement for all Trac tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14170 (Problems with network activation) updated</title>
      
        <dc:creator>coolmann</dc:creator>

      <pubDate>Thu, 07 Oct 2010 00:17:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14170#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14170#comment:22/1286410621000000</guid>
      <description>&lt;p&gt;
Hi everybody, I know this is not a support forum, but please allow me to ask a question about this specific issue. I'm developing a plugin and I'd like to make it multi-site aware. Since things are changing in WP 3.1 about the network activation, per your discussion here above, I wanted to understand if it's safe to use the following code for my activation function
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_activation_hook( __FILE__, 'coolmann_activate' );
function coolmann_activate() {
	global $wpdb;
	if (function_exists('is_multisite') &amp;amp;&amp;amp; is_multisite()) {
		if (isset($_GET['networkwide']) &amp;amp;&amp;amp; ($_GET['networkwide'] == 1)) {
	                $old_blog = $wpdb-&amp;gt;blogid;
			// Get all blog ids
			$blogids = $wpdb-&amp;gt;get_col($wpdb-&amp;gt;prepare("SELECT blog_id FROM $wpdb-&amp;gt;blogs"));
			foreach ($blogids as $blog_id) {
				switch_to_blog($blog_id);
				_single_blog_activate();
			}
			switch_to_blog($old_blog);
			return;
		}
	}
	_single_blog_activate();
}
&lt;/pre&gt;&lt;p&gt;
where _single_blog_activate() is the function that I use to initialize options, tables, etc. What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>