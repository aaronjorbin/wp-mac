<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #49128 (Some lines without translation (site health) (core)) updated</title>
      
        <dc:creator>SergeyKovalets</dc:creator>

      <pubDate>Fri, 03 Jan 2020 21:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49128#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49128#comment:6/1578087224735031</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is defined. The problem is in the Yoast SEO plugin.&lt;br /&gt;
When it is deactivated, the problem disappears.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49128 (Some lines without translation (site health) (core)) updated</title>
      
        <dc:creator>SergeyKovalets</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49128#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49128#comment:5/1578084843186483</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49128#comment:3" title="Comment 3"&gt;diddledan&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've had a quick browse of the sourcecode for site-health and I cannot see any strings that do not have correct internationalisation wrappers (they're all correctly internationalised), so if there are untranslated strings then likely the localisation files are incomplete (as Sergey suggests there might be a downloadable update).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Excellent. Thank you for your attention.&lt;br /&gt;
Apparently this is the problem of my hosting.&lt;br /&gt;
I will try to find out what affects this.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49128 (Some lines without translation (site health) (core)) updated</title>
      
        <dc:creator>SergeyKovalets</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49128#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49128#comment:4/1578084611899983</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49128#comment:2" title="Comment 2"&gt;SergeyBiryukov&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I could not reproduce the issue on a clean install with the Ukrainian locale, all the strings are translated: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49128/49128.PNG" title="Attachment '49128.PNG' in Ticket #49128"&gt;49128.PNG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49128/49128.PNG" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do you have any pending translation updates in Dashboard → Updates?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No updates.&lt;br /&gt;
Perhaps the problem is in my hosting.&lt;br /&gt;
I have 12 sites on one hosting, my clients use this hosting and they have the same problems.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49128 (Some lines without translation (site health) (core)) updated</title>
      
        <dc:creator>diddledan</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:48:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49128#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49128#comment:3/1578084499848633</guid>
      <description>&lt;p&gt;
I've had a quick browse of the sourcecode for site-health and I cannot see any strings that do not have correct internationalisation wrappers (they're all correctly internationalised), so if there are untranslated strings then likely the localisation files are incomplete (as Sergey suggests there might be a downloadable update).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49096 (Allow updating attachments with new files) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49096#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49096#comment:7/1578084105184245</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49096#comment:6" title="Comment 6"&gt;joehoyle&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think even today if you were to implement this in the admin, you'd actually want to post a blob back, and do all transformation in JavaScript, say on a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also note this WICG proposal: &lt;a class="ext-link" href="https://discourse.wicg.io/t/proposal-native-media-optimization-and-basic-editing-support/4068/11"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://discourse.wicg.io/t/proposal-native-media-optimization-and-basic-editing-support/4068/11&lt;/a&gt;. Eventually "native" image editing may be (is?) coming to the browsers, including setting of the EXIF data, etc. If/when this gets added to the browsers thinking the old-style image editor should finally be replaced with a client-side editor that, ideally, would be using the REST API.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49128 (Some lines without translation (site health) (core)) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49128#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49128#comment:2/1578083991748571</guid>
      <description>&lt;p&gt;
Hi there, welcome to WordPress Trac! Thanks for the report.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I could not reproduce the issue on a clean install with the Ukrainian locale, all the strings are translated: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/49128/49128.PNG" title="Attachment '49128.PNG' in Ticket #49128"&gt;49128.PNG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/49128/49128.PNG" title="Download"&gt;​&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Do you have any pending translation updates in Dashboard → Updates?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>screenshot.png attached to Ticket #49128</title>
      
        <dc:creator>fierevere</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49128/screenshot.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49128/screenshot.png/1578083904327607</guid>
      <description>&lt;p&gt;
ru_RU, site health
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>49128.PNG attached to Ticket #49128</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:37:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49128/49128.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49128/49128.PNG/1578083878604131</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49128 (Some lines without translation (site health) (core)) updated</title>
      
        <dc:creator>fierevere</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49128#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49128#comment:1/1578083872905545</guid>
      <description>&lt;p&gt;
As i remember it's been issue with beta versions when Site Health was just integrated into core, i have never seen this problem reproducible again with ru_RU at least.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49126.diff attached to Ticket #49126</title>
      
        <dc:creator>diddledan</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:32:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49126/49126.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49126/49126.diff/1578083526829852</guid>
      <description>&lt;p&gt;
Remove IE8 conditional and xmlns="" attribute in _wp_admin_html_begin()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>2020-01-03 220304.png attached to Ticket #49128</title>
      
        <dc:creator>SergeyKovalets</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:29:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49128/2020-01-03%20220304.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49128/2020-01-03%20220304.png/1578083354890607</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49128 (Some lines without translation (site health) (core)) created</title>
      
        <dc:creator>SergeyKovalets</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:28:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49128/1578083333140807</guid>
      <description>&lt;p&gt;
In any locale, some translated lines are displayed in their original form.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Bug-View-User-goes-to-homepage.jpg attached to Ticket #49127</title>
      
        <dc:creator>bobteree</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49127/Bug-View-User-goes-to-homepage.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49127/Bug-View-User-goes-to-homepage.jpg/1578082681831599</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49127 (Clicking on "View" under any user under Users &gt;&gt;&gt; goes to homepage of ...) created</title>
      
        <dc:creator>bobteree</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:17:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49127/1578082645133219</guid>
      <description>&lt;p&gt;
The above is not really a bug, but confusing for the following use-cases. We deal with eCommerce (WooCommerce) -centric sites/customers.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We have 1000's of customers listed under the User &amp;gt;&amp;gt; tab.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Sometimes a shopkeeper or admin wants to "View" a particular customer's information (e.g. bill to or ship to address or phone number, etc.).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
But when you click on "View" you go to the installation's homepage, which is odd. This feature seems to have been built for a blog-centric world as the URL structure is site.com/author/username. If that particular user has blog posts, it goes to a webpage that lists all of that user's blog posts. But if you have no blog posts (as most e-commerce users make no posts), you go to homepage.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Perhaps this is a recommendation for WooCommerce. Such that if you install the WooCommerce plugin, this "View" link might also go to the same location as "Edit" where you can see a user's information as well as edit it. This is a minimal solution. Better yet, would be to go to a very ecommerce-centric use case page that details that users information as well as past orders or something.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Note that if you have installed bbpress, this link is taken over by that Plugin and it goes to the Forum profile for that user. I think this is a good precedence for WooCommerce to make this link go to a better place than the homepage.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48615 (parameter types for both parameters of set_image_handler use invalid ...) updated</title>
      
        <dc:creator>diddledan</dc:creator>

      <pubDate>Fri, 03 Jan 2020 20:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48615#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48615#comment:2/1578082635524341</guid>
      <description>&lt;p&gt;
These changes are merged into upstream version 1.5.4 (git tag 1.5.4-fixed): &lt;a class="ext-link" href="https://github.com/simplepie/simplepie/releases/tag/1.5.4-fixed"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/simplepie/simplepie/releases/tag/1.5.4-fixed&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48401 (Saving a Post Breaks in Gutenberg if you have a custom taxonomy named ...) closed</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Jan 2020 19:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48401#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48401#comment:17/1578079353979914</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47037" title="REST API: Issue doing_it_wrong if a taxonomy's specified rest_base is ..."&gt;47037&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Issue doing_it_wrong if a taxonomy's specified rest_base is already in use by a different resource.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props fgiannar, TimothyBlynJacobs, kingkool68, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48401" title="#48401: defect (bug): Saving a Post Breaks in Gutenberg if you have a custom taxonomy named ... (closed: fixed)"&gt;#48401&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47037]: REST API: Issue doing_it_wrong if a taxonomy's specified rest_base is ...</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Jan 2020 19:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47037</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47037/1578079352828001</guid>
      <description>&lt;p&gt;
REST API: Issue doing_it_wrong if a taxonomy's specified rest_base is already in use by a different resource.
&lt;/p&gt;
&lt;p&gt;
Props fgiannar, TimothyBlynJacobs, kingkool68, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/48401" title="#48401: defect (bug): Saving a Post Breaks in Gutenberg if you have a custom taxonomy named ... (closed: fixed)"&gt;#48401&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49126 (Update needed in wp-admin/includes/template.php) created</title>
      
        <dc:creator>hommealone</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:50:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49126/1578077414509730</guid>
      <description>&lt;p&gt;
I think an update is needed to the function &lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;_wp_admin_html_begin()
&lt;/pre&gt;&lt;p&gt;
in the file wp-admin/includes/template.php beginning at line 2425.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The output of this function can be seen in the source code of any page in the WordPress admin area, right at the top.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I noticed first that the code contains this:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Wrong:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;html xmlns="http://www.w3.org/1999/xhtml"
&lt;/pre&gt;&lt;p&gt;
Should be:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;html xmlns="https://www.w3.org/1999/xhtml"
&lt;/pre&gt;&lt;p&gt;
But more importantly, perhaps, &lt;a class="ext-link" href="https://wordpress.org/support/users/joyously/|@joyously"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/users/joyously/|@joyously&lt;/a&gt; notes:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Looking at the URL, even though it redirects to https, it refers to http in its content. The other documents do also, when referencing the xmlns. And, having an XML namespace on a HTML5 document doesn’t even make sense. It should probably be removed entirely, just as the conditional for IE8 should be removed since the browser support is for a minimum of IE11 for quite awhile now.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(See: &lt;a class="ext-link" href="https://wordpress.org/support/topic/error-in-wp-admin-includes-template-php/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/error-in-wp-admin-includes-template-php/&lt;/a&gt; )&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42238 (Notice when Rest Comments controler is checking permision for a non ...) closed</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42238#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42238#comment:24/1578076930245083</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47036" title="REST API: Short-circuit comment controller permissions check if ..."&gt;47036&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Short-circuit comment controller permissions check if commented-upon post type does not exist.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props imani3011, dragosh635, subrataemfluence, timothyblynjacobs.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42238" title="#42238: defect (bug): Notice when Rest Comments controler is checking permision for a non ... (closed: fixed)"&gt;#42238&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47036]: REST API: Short-circuit comment controller permissions check if ...</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:42:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47036</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47036/1578076929087907</guid>
      <description>&lt;p&gt;
REST API: Short-circuit comment controller permissions check if commented-upon post type does not exist.
&lt;/p&gt;
&lt;p&gt;
Props imani3011, dragosh635, subrataemfluence, timothyblynjacobs.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42238" title="#42238: defect (bug): Notice when Rest Comments controler is checking permision for a non ... (closed: fixed)"&gt;#42238&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44567 (Image creation via Rest API, including additional data/meta data) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44567#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44567#comment:5/1578076452912579</guid>
      <description>&lt;p&gt;
Uploaded an additional patch removing the change to an unrelated test.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44567.2.diff attached to Ticket #44567</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:33:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44567/44567.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44567/44567.2.diff/1578076426002137</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48401 (Saving a Post Breaks in Gutenberg if you have a custom taxonomy named ...) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:27:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48401#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48401#comment:16/1578076057490854</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48401 (Saving a Post Breaks in Gutenberg if you have a custom taxonomy named ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48401#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48401#comment:15/1578075776858926</guid>
      <description>&lt;p&gt;
Uploaded a revised version of the patch to add a translators comment to the warning message. Translator comments are always required when using sprintf placeholders within a translatable string.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>48401.3.diff attached to Ticket #48401</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:22:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/48401/48401.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/48401/48401.3.diff/1578075735169456</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42875 (Registering an "array" setting for the REST API causes a "Undefined ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42875#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42875#comment:7/1578075149917036</guid>
      <description>&lt;p&gt;
I uploaded a new patch that fixes the documentation error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Opted not to add an additional test since we do have the &lt;code&gt;test_get_item_with_custom_array_setting&lt;/code&gt; test and it isn't clear what the assertion would be for just testing the doing it wrong.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>42875.2.diff attached to Ticket #42875</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:11:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/42875/42875.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/42875/42875.2.diff/1578075077022883</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #42875 (Registering an "array" setting for the REST API causes a "Undefined ...) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:08:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42875#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42875#comment:6/1578074913954286</guid>
      <description>&lt;p&gt;
We say "meta" when we mean setting, in one comment on the latest patch; and for clarity it might be good to have a test that explicitly asserts we DON'T get a doing_it_wrong when we DO provide the items schema, though that may be covered implicitly by the other tests.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42238 (Notice when Rest Comments controler is checking permision for a non ...) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Fri, 03 Jan 2020 18:00:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42238#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42238#comment:23/1578074420749302</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48818 (REST API does not check nested required properties) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 17:08:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48818#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48818#comment:3/1578071307892172</guid>
      <description>&lt;p&gt;
@circuitbit this is a great point. In WordPress we use v4 of the JSON Schema &lt;em&gt;except&lt;/em&gt; for &lt;code&gt;required&lt;/code&gt; where we use the v3 syntax. This syntax is nice to work with for core because we do a lot of conditional adding/removing of properties as well as the addition of new properties through things like additional properties and metadata. The simpler boolean syntax allows the requiredness of the property to be entirely communicated through one array definition instead of having to modify the base schema.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
That being said,. I do think supporting the array format would be quite nice, particularly for cases where you are documenting a single &lt;code&gt;object&lt;/code&gt; property on a schema, as opposed to the schema for the entire resource. I think we could add support for that syntax in the patch for this feature.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48798 (REST API: Expose editor-color-palette theme support in /themes endpoint) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Fri, 03 Jan 2020 16:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48798#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48798#comment:11/1578070551110949</guid>
      <description>&lt;p&gt;
@koke this is looking good to me. One thing is that when listing properties, you can't use a type shorthand like that. You need to specify a full schema.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;'name'  =&amp;gt; 'string',
&lt;/pre&gt;&lt;p&gt;
needs to be&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;'name' =&amp;gt; array(
    'type' =&amp;gt; 'string',
),
&lt;/pre&gt;&lt;p&gt;
It also looks like a short array syntax array snuck in there for &lt;code&gt;editor-color-palette&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We also don't support the JSON-Schema v4+ required syntax, instead we use the v3 boolean syntax at the moment.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;'required' =&amp;gt; array( 'name', 'slug', 'color' ),
&lt;/pre&gt;&lt;p&gt;
That being said, since this is a readonly property, we could just drop the &lt;code&gt;required&lt;/code&gt; information entirely.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49125 (Cannot upload videos in the newest version of wordpress) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 16:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49125#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49125#comment:2/1578069742322176</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49122 (Coding Standard : Javascript - /src/js/_enqueues/wp/customize/base.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 16:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49122#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49122#comment:1/1578069676094727</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49096 (Allow updating attachments with new files) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Fri, 03 Jan 2020 16:37:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49096#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49096#comment:6/1578069423845113</guid>
      <description>&lt;p&gt;
Yeah, I was thinking about a transformation API, but I think that would be very limiting and not that worth doing. By allowing a blob upload, REST API clients can do whatever transformation / filters they want - allowing crop etc as transforms would be mostly a dead end IMO. I think even today if you were to implement this in the admin, you'd actually want to post a blob back, and do all transformation in JavaScript, say on a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43941 (Add default value to register meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 03 Jan 2020 15:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43941#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43941#comment:34/1578064919406017</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by chrisvanpatten. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1578064917253700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49125 (Cannot upload videos in the newest version of wordpress) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 03 Jan 2020 14:58:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49125#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49125#comment:1/1578063533441289</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome to WordPress Core Trac @iwonarejmus and thanks for opening this ticket,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Video upload works fine on my side (see screenshot above), on a fresh WordPress install.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you please provide some details about your server configuration?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also, please confirm you are experiencing the issue on a fresh install without any plugin installed and with Twenty Twenty (otherwise, you should ask in support forum as Trac is for WordPress Core development).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers,&lt;br /&gt;
Jb&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49096 (Allow updating attachments with new files) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 03 Jan 2020 14:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49096#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49096#comment:5/1578063354888302</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the closest example in core is the image editor, which mostly because it was built pre-rest-api doesn't have the image updating logic in an endpoint, but core does include this behaviour.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a good point. However, there is one major difference in the way these systems work versus what you are describing. For these cases, all of the file editing logic happens on the server via the WP application and the editor sends the transformation "instructions", e.g., crop dimensions, rotations, etc, to an Admin-Ajax callback, which executes the instructions and updates the file. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
There is no place where an external editor would update an attachment file itself and then upload a new file (that I'm aware of). I'd be more than happy to see us expose more transformation options vis the REST API as a first step towards a fully decoupled editing experience.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Capture d’écran 2020-01-03 à 15.54.32.png attached to Ticket #49125</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 03 Jan 2020 14:55:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49125/Capture%20d%E2%80%99%C3%A9cran%202020-01-03%20%C3%A0%2015.54.32.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49125/Capture%20d%E2%80%99%C3%A9cran%202020-01-03%20%C3%A0%2015.54.32.png/1578063304892221</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Fri, 03 Jan 2020 14:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120#comment:8/1578060740130411</guid>
      <description>&lt;p&gt;
I know WordPress only executes the code but the comment is used to create good coding.&lt;br /&gt;
For example, the plug-in programmer may decide to set a time zone other than UTC but wordpress core expects only UTC.&lt;br /&gt;
An example follows.&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;date_default_timezone_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Europe/London'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;time_zone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Europe/London'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/wpdb/#comment-2794"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/classes/wpdb/#comment-2794&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49125 (Cannot upload videos in the newest version of wordpress) created</title>
      
        <dc:creator>iwonarejmus</dc:creator>

      <pubDate>Fri, 03 Jan 2020 13:51:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49125/1578059485458434</guid>
      <description>&lt;p&gt;
Hey Team,&lt;br /&gt;
videos .mp4 dont upload (or they do and straight after they disappear with the error: Cannot read property 'get' of undefined ). WordPress  Version 5.3.2&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 03 Jan 2020 13:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120#comment:7/1578058999254686</guid>
      <description>&lt;p&gt;
WordPress does not use any time zone offsets when operating its MySQL database. I am not sure why would it need to be pointed out specifically.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Fri, 03 Jan 2020 13:34:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120#comment:6/1578058494735210</guid>
      <description>&lt;p&gt;
sorry my bad english, I updated the previous message .. Currently there is no link between the time of the php server and the mysql server.&lt;br /&gt;
In short, this is the problem&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49124 (Add option in backend to change login slug wp-admin for security purpose) updated</title>
      
        <dc:creator>viitorcloudvc</dc:creator>

      <pubDate>Fri, 03 Jan 2020 13:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49124#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49124#comment:1/1578058153509279</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48154 (Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build) closed</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Fri, 03 Jan 2020 13:15:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48154#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48154#comment:19/1578057334960060</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47035" title="Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS ..."&gt;47035&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This patch integrates DependencyExtractionWebpackPlugin which was battle-tested in Gutenberg. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This will greatly simplify the process of upgrading npm packages which change after every Gutenberg release. It might even useful during the WordPress release cycle as we might need to publish more often as we discover critical bugs and regressions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jonsurrell, adamsilverstein, youknowriad, ocean90, netweb.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/48154" title="#48154: enhancement: Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build (reopened)"&gt;#48154&lt;/a&gt;. &lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47035]: Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS ...</title>
      
        <dc:creator>gziolo</dc:creator>

      <pubDate>Fri, 03 Jan 2020 13:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47035</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47035/1578057333765521</guid>
      <description>&lt;p&gt;
Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build.
&lt;/p&gt;
&lt;p&gt;
This patch integrates DependencyExtractionWebpackPlugin which was battle-tested in Gutenberg.
&lt;/p&gt;
&lt;p&gt;
This will greatly simplify the process of upgrading npm packages which change after every Gutenberg release. It might even useful during the WordPress release cycle as we might need to publish more often as we discover critical bugs and regressions.
&lt;/p&gt;
&lt;p&gt;
Props jonsurrell, adamsilverstein, youknowriad, ocean90, netweb.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/48154" title="#48154: enhancement: Build Tools: Integrate DependencyExtractionWebpackPlugin in the JS build (reopened)"&gt;#48154&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 03 Jan 2020 12:13:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120#comment:5/1578053595199944</guid>
      <description>&lt;p&gt;
I don't follow what you mean by inside/outside distinction. The time is always the same. Any differences are just how is it expressed (e.g. human-readable string in a time zone, Unix timestamp, WP timestamp summed with a time zone offset, etc).&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Fri, 03 Jan 2020 12:00:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120#comment:4/1578052822999510</guid>
      <description>&lt;p&gt;
@SergeyBiryukov @Rarst happy New Year&lt;br /&gt;
is there the concept of time for code executed inside the WordPress core and outside the WordPress core? I explain in mysql only DATETIME table uses UTC or as of MySQL 8.0.19, you can specify a time zone offset (other than a negative offset equal to zero -00:00) when inserting TIMESTAMP and DATETIME values into a table while other functions could use a non-zero offset. it would be nice to add a comment to wpdb class.&lt;br /&gt;
MySQL DATETIME prior 5.6.5 &lt;a class="ext-link" href="https://dev.mysql.com/doc/refman/5.6/en/timestamp-initialization.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dev.mysql.com/doc/refman/5.6/en/timestamp-initialization.html&lt;/a&gt;&lt;br /&gt;
MySQL DATETIME after &lt;a class="ext-link" href="https://dev.mysql.com/doc/refman/8.0/en/datetime.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dev.mysql.com/doc/refman/8.0/en/datetime.html&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49124 (Add option in backend to change login slug wp-admin for security purpose) created</title>
      
        <dc:creator>viitorcloudvc</dc:creator>

      <pubDate>Fri, 03 Jan 2020 11:02:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49124/1578049356786948</guid>
      <description>&lt;p&gt;
Shall we think about to implement feature in dashboard options-general.php under Site Address (URL), A new option to change website login slug with replace to wp-admin as login url? &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #47605 (Email sender name change with site title in wp-includes/pluggable.php) updated</title>
      
        <dc:creator>viitorcloudvc</dc:creator>

      <pubDate>Fri, 03 Jan 2020 10:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47605#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47605#comment:9/1578045608458409</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47605 (Email sender name change with site title in wp-includes/pluggable.php) updated</title>
      
        <dc:creator>viitorcloudvc</dc:creator>

      <pubDate>Fri, 03 Jan 2020 09:58:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47605#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47605#comment:8/1578045507232862</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49096 (Allow updating attachments with new files) updated</title>
      
        <dc:creator>joehoyle</dc:creator>

      <pubDate>Fri, 03 Jan 2020 09:46:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49096#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49096#comment:4/1578044771179600</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The closest example we currently have in core that I can think of this similarly to how custom theme images—like headers and site icons—are created now as new attachments instead of updating files for an existing attachment.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the closest example in core is the image editor, which mostly because it was built pre-rest-api doesn't have the image updating logic in an endpoint, but core does include this behaviour.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but I could also see this opening up problems where files are updated on existing attachment posts that container totally different metadata&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a good point, I had considered maybe limiting the mime type for example to the original attachment, but yes, by opening up an endpoint we'd probably be allowing more difference than the in-line PHP editing that is done in core currently.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think sooner or later, this will have to be included in the REST API. I think it's likely any future media editing even in the admin is likely to use the REST API, and we get a two for one by letting clients also use it. I don't know how the WordPress mobile app does this, but I assume it just doesn't let you edit images, which I think is probably not a great user experience. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Editing an image for your site icon has the user expectation that you wouldn't destroy / replace the original image, but the "direct" editing of an attachment comes with the expectation you are actually editing "the thing".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
---&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
So, my "argument" :D is: this functionality already does exist in Core, it's just that Core doesn't need an endpoint to use it. By adding this to the REST API, we allow 3rd party image editing tools to be used with WordPress, and we also allow for future Core/Admin image editing to use the same endpoint.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #48935,​49120 batch updated</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Fri, 03 Jan 2020 07:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=48935%2C49120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=48935%2C49120/1578037442569677</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48935" title="#48935: enhancement: Remove strtotime() usage from core (new)"&gt;#48935&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>base_js_coding_standard_issues.diff attached to Ticket #49122</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Fri, 03 Jan 2020 07:28:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49122/base_js_coding_standard_issues.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49122/base_js_coding_standard_issues.diff/1578036510089062</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49122 (Coding Standard : Javascript - /src/js/_enqueues/wp/customize/base.js) created</title>
      
        <dc:creator>ankitmaru</dc:creator>

      <pubDate>Fri, 03 Jan 2020 07:28:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49122/1578036493005191</guid>
      <description>&lt;p&gt;
Coding Standard : Javascript - /src/js/_enqueues/wp/customize/base.js&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 03 Jan 2020 04:03:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:9/1578024237921245</guid>
      <description>&lt;p&gt;
That's fine by me.  The users controller is the only one I've looked at in any detail and didn't realize the pattern in the others was different.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also agree that refactoring the similar methods in the other controllers is out-of-scope for this ticket.  I'll leave it to some other enterprising soul to maybe open another ticket on that :-)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 03:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:8/1578023409461242</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49118#comment:7" title="Comment 7"&gt;pbiron&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The basic pattern of all those checks seems to be: early return (with a &lt;code&gt;WP_Error&lt;/code&gt;) when the permission check fails and do a single "success" return at the end.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for bringing this up! That was my initial thought as well, but after a closer look it turned out  that a &lt;code&gt;return true&lt;/code&gt; inside a &lt;code&gt;foreach()&lt;/code&gt; loop is actually more common in the existing code:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php?marks=89#L75"&gt;WP_REST_Post_Statuses_Controller::get_items_permissions_check()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php#L75" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php?marks=167#L149"&gt;WP_REST_Post_Statuses_Controller::check_read_permission()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php#L149" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-post-types-controller.php?marks=86#L74"&gt;WP_REST_Post_Types_Controller::get_items_permissions_check()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-post-types-controller.php#L74" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1307#L1283"&gt;WP_REST_Posts_Controller::check_assign_terms_permission()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L1283" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php?marks=92#L75"&gt;WP_REST_Taxonomies_Controller::get_items_permissions_check()&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.3.2/src/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php#L75" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I went back and forth for a bit, as I also find a single "success" return at the end more readable, but ultimately chose to be consistent with most of the existing checks, since refactoring them seemed out of scope for this ticket.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 03 Jan 2020 03:26:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:7/1578021988833771</guid>
      <description>&lt;p&gt;
@SergeyBiryukov One comment about the change you made to immediately return instead of just breading out the loop: that might make it harder to add other checks to &lt;code&gt;WP_REST_Users_Controller::get_items_permissions_check()&lt;/code&gt; in the future.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The basic pattern of all those checks seems to be: early return (with a &lt;code&gt;WP_Error&lt;/code&gt;) when the permission check fails and do a single "success" return at the end.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The change you made kind of breaks that pattern...and &lt;em&gt;might&lt;/em&gt; make it harder for a contributor submitting a future patch that adds a new check:  they'd have to realize that any new checks need to go &lt;strong&gt;before&lt;/strong&gt; the &lt;code&gt;'authors' === $request['who'&lt;/code&gt; check.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Of course, that's something that a committer would need to check before committing such future patches, but I'm thinking it would be better to make it easier for contributors to not have to worry about noticing the early "success" return.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just a thought.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39443 (Search Page Template the_category() bug) updated</title>
      
        <dc:creator>Howdy_McGee</dc:creator>

      <pubDate>Fri, 03 Jan 2020 02:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39443#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39443#comment:2/1578018490511768</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Reverting back to 4.7 I don't see where it orders by hierarchy. It seems to order by Alpha always. In WordPress 4.9 there's the &lt;code&gt;wp_get_object_terms_args&lt;/code&gt; filter hook which may circumvent this issue ( orderby parent ) but there isn't anything specific to &lt;code&gt;the_category()&lt;/code&gt;. Not sure if this change is wanted or necessary. We would likely need an additional parameter to pass all the way down to &lt;code&gt;wp_get_object_terms()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 02:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:6/1578018397355904</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47034" title="REST API: Synchronize permission checks in ..."&gt;47034&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
REST API: Synchronize permission checks in &lt;code&gt;::get_items_permissions_check()&lt;/code&gt; methods for post types, post statuses, and users:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Only query post types with &lt;code&gt;'show_in_rest' =&amp;gt; true&lt;/code&gt; instead of looping over all post types and checking the &lt;code&gt;show_in_rest&lt;/code&gt; property separately.
&lt;/li&gt;&lt;li&gt;Return from the &lt;code&gt;foreach()&lt;/code&gt; loop as soon as the permission check succeeded.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props pbiron, TimothyBlynJacobs, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49118" title="#49118: enhancement: REST API: minor performance improvement for /wp/v2/users?who=authors (closed: fixed)"&gt;#49118&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47034]: REST API: Synchronize permission checks in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 02:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47034</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47034/1578018396171867</guid>
      <description>&lt;p&gt;
REST API: Synchronize permission checks in &lt;code&gt;::get_items_permissions_check()&lt;/code&gt; methods for post types, post statuses, and users:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Only query post types with &lt;code&gt;'show_in_rest' =&amp;gt; true&lt;/code&gt; instead of looping over all post types and checking the &lt;code&gt;show_in_rest&lt;/code&gt; property separately.
&lt;/li&gt;&lt;li&gt;Return from the &lt;code&gt;foreach()&lt;/code&gt; loop as soon as the permission check succeeded.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props pbiron, TimothyBlynJacobs, SergeyBiryukov.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49118" title="#49118: enhancement: REST API: minor performance improvement for /wp/v2/users?who=authors (closed: fixed)"&gt;#49118&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) updated</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Fri, 03 Jan 2020 02:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120#comment:2/1578017886738890</guid>
      <description>&lt;p&gt;
Hi thanks for your welcome.&lt;br /&gt;
It is a logical bug that does not reflect the current WordPress 5.3 wp_date coding and other related functions do not use functions dependent on the current offset (all old php functions use the current offset except gmdate, gmmktime for it is 0).&lt;br /&gt;
Before WordPress 5.3 it was used current_time with strtotime or date but it created problems for this it has been replaced by wp_date, current_datetime (DateTime class).&lt;br /&gt;
An example of code follows, I was unable to create the bug but it would be nice to use the same code for each context.&lt;br /&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="c1"&gt;//Bad old function with offset
&lt;/span&gt;&lt;span class="nv"&gt;$date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'2020-02-01 00:00'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//plugin
&lt;/span&gt;&lt;span class="nb"&gt;date_default_timezone_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Australia/Adelaide'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//ini_set( 'date.timezone', 'Australia/Adelaide');
&lt;/span&gt;&lt;span class="nv"&gt;$timestamp&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$date&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"Z"&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;current&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$timestamp&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;//Always UTC
&lt;/span&gt;&lt;span class="nv"&gt;$timestamp&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$offset&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;//WordPress core #maybe
&lt;/span&gt;&lt;span class="nb"&gt;date_default_timezone_set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'UTC'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$timestamp&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;strtotime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$date&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;var_dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$timestamp&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49106 (Code refactoring for WP OPML XML) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 01:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49106#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49106#comment:3/1578013934581654</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47033" title="Link Manager: Use a strict `in_array()` check in `wp-links-opml.php`.
 ..."&gt;47033&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Link Manager: Use a strict &lt;code&gt;in_array()&lt;/code&gt; check in &lt;code&gt;wp-links-opml.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dkarfa.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49106" title="#49106: defect (bug): Code refactoring for WP OPML XML (closed: fixed)"&gt;#49106&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47033]: Link Manager: Use a strict `in_array()` check in `wp-links-opml.php`.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 01:12:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47033</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47033/1578013933545561</guid>
      <description>&lt;p&gt;
Link Manager: Use a strict &lt;code&gt;in_array()&lt;/code&gt; check in &lt;code&gt;wp-links-opml.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dkarfa.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49106" title="#49106: defect (bug): Code refactoring for WP OPML XML (closed: fixed)"&gt;#49106&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49117 (WP default themes' translations keep being installed when updating ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 03 Jan 2020 00:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49117#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49117#comment:2/1578012204549410</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
WP default themes' (3 twentywhatever themes) translations keep being installed in wp-content/languages/themes when updatig wordpress, no matter what WP version it is updating to, or what the default theme is.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WordPress installs/updates the translations for all installed themes, regardless of what the default theme is.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To clarify, do you have the themes installed on the site? &lt;code&gt;CORE_UPGRADE_SKIP_NEW_BUNDLED&lt;/code&gt; should prevent future default themes from being installed, as long as it's been defined correctly in the config file (Before the wp-settings.php line)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 03 Jan 2020 00:42:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120#comment:1/1578012173847561</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi there, welcome back to WordPress Trac!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Could you clarify what exactly is the bug here, and how to reproduce it on a clean install?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As far as I can see, this code works as intended, and there are more than 70 other instances of &lt;code&gt;strtotime()&lt;/code&gt; in WordPress core.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49121 (Decode more HTML entities for the blogname sent in an email) updated</title>
      
        <dc:creator>jensdavidsson</dc:creator>

      <pubDate>Fri, 03 Jan 2020 00:28:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49121#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49121#comment:1/1578011296601530</guid>
      <description>&lt;p&gt;
How to reproduce the bug&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="a"&gt;&lt;/h2&gt;
&lt;p&gt;
Set the blogname to something that contains the special character ä. That same character will be encoded to &lt;strong&gt;&amp;amp;auml;&lt;/strong&gt; when saved, but not properly decoded when sent in the email.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>49121.diff attached to Ticket #49121</title>
      
        <dc:creator>jensdavidsson</dc:creator>

      <pubDate>Fri, 03 Jan 2020 00:17:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49121/49121.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49121/49121.diff/1578010632726174</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44427 (Introduce lazy-loading API for media and other elements) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 03 Jan 2020 00:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44427#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44427#comment:71/1578010523402038</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44427#comment:70" title="Comment 70"&gt;flixos90&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the explanation and clarification! :)&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think this should be back-ported to all content because only then it will have a significant impact on performance of WordPress websites. &lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Right, this will have the highest/best impact. Lets do it.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the impact of one &lt;code&gt;preg_replace_callback()&lt;/code&gt; per post is rather low on a relative scale - the logic for adding &lt;code&gt;loading&lt;/code&gt; attributes is much cheaper than e.g. the one for making images responsive, it includes much less logic and no potential database call. Maybe we can optimize the patch further though, particularly the additional &lt;code&gt;preg_match()&lt;/code&gt; that runs for every match/image.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, thinking we can try to optimize the exact method used a bit more. Also perhaps not parse all &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags twice with regex. Maybe the current functionality can be extended to add all needed HTML attributes at the same time/with one &lt;code&gt;preg_replace_callback()&lt;/code&gt;. Lets look a bit more there when reviewing the actual patch.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding browsers lazy-loading images by default, I'm personally not aware of any such plans. Was there anything particular in the blog post that led you to this thought?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No, nothing "direct" in the post. But it explains it very well, including the "side effects". When thinking more about it, seems the best place for this enhancement is in the browsers, i.e. change the default from &lt;code&gt;eager&lt;/code&gt; to &lt;code&gt;lazy&lt;/code&gt; as you mention :)&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Of course there is the caveat when the browser "doesn't know" the size of the image before starting to download it. As mentioned Chrome fetches the initial 2KB of each image file to try to get the (intrinsic) size. Generally this is "not ideal" as establishing another http(s) connection takes time and resources (there are usually 7 "back and forth" between the client and the server in an https handshake). I'm not 100% sure if that happens for all under-the-fold images or only when there's no &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes in the img tag.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Perhaps this is something that can be considered when implementing it in WP? Would it make sense to make it conditional on having &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; and not having &lt;code&gt;importance&lt;/code&gt; and &lt;code&gt;decoding&lt;/code&gt;? Or should we ignore the presence of &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; and assume the browser will always be able to get/guess the image size and the webpage content will never "jump down" when the user scrolls and images are loaded. Thinking it would be great to try to "dig up" some more info about the "interactions" between these img tag attributes.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think we should expand this ticket further to cover adding these attributes too (&lt;code&gt;importance&lt;/code&gt; and &lt;code&gt;decoding&lt;/code&gt;), but whether their combination can have unintended effects is crucial to know.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, these two attribute seem very specific anyway, don't think we can auto-add them even if we wanted to, and seems they shouldn't be removed when present.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49121 (Decode more HTML entities for the blogname sent in an email) created</title>
      
        <dc:creator>jensdavidsson</dc:creator>

      <pubDate>Fri, 03 Jan 2020 00:15:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49121/1578010520334597</guid>
      <description>&lt;p&gt;
This concerns newly-registered users that are receiving email notifications.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The function &lt;strong&gt;wp_new_user_notification()&lt;/strong&gt; should take more HTML entities in consideration when decoding the blogname value.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48170 (Switch link list widgets to nav blocks) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 03 Jan 2020 00:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48170#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48170#comment:3/1578010051863557</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @afercia @joedolson &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Most of these widgets are here for years, it would be very hard (= frankly impossible) to keep backward compatibility with all themes. I'd propose two alternative solutions for this issue:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Keep the current markup but adding &lt;code&gt;role="navigation"&lt;/code&gt; that doesn't hurt and it's still a good first step.
&lt;/li&gt;&lt;li&gt;Switch to &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; for themes that declare HTML5 support for widgets.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'd vote for the option 2. We just have to add a new option to the HTML5 features list.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For reference: &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/add_theme_support/#html5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/add_theme_support/#html5&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers,&lt;br /&gt;
Jb&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35391 (Remove title attributes: the Posts Date column full date and time) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 02 Jan 2020 23:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35391#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35391#comment:14/1578007625662609</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35391 (Remove title attributes: the Posts Date column full date and time) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 02 Jan 2020 23:23:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35391#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35391#comment:13/1578007421628338</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my opinion, it would be better to reconsider the initially proposed patch as it still solves the issue. Also, I tested it it's looking pretty good on my side.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;35391.1.diff&lt;/code&gt; refreshes the previous patch and adds some fresh docs.&lt;br /&gt;
Concening the &lt;code&gt;mode&lt;/code&gt; @param tag, I'm wondering if we should use "Optional" (like I did in the patch) or "Deprecated", as this parameter is no longer needed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Cheers,&lt;br /&gt;
Jb&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35391-comments-desktop-after.png attached to Ticket #35391</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 02 Jan 2020 23:21:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35391/35391-comments-desktop-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35391/35391-comments-desktop-after.png/1578007266040292</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35391-posts-mobile-after.png attached to Ticket #35391</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 02 Jan 2020 23:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35391/35391-posts-mobile-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35391/35391-posts-mobile-after.png/1578007225022196</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35391-posts-desktop-after.png attached to Ticket #35391</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 02 Jan 2020 23:20:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35391/35391-posts-desktop-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35391/35391-posts-desktop-after.png/1578007212102573</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35391.1.diff attached to Ticket #35391</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Thu, 02 Jan 2020 23:18:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35391/35391.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35391/35391.1.diff/1578007127914490</guid>
      <description>&lt;p&gt;
Refreshes the patch and adds some fresh docs
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 02 Jan 2020 22:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:13/1578002865356731</guid>
      <description>worksforme: &lt;p&gt;
Completely agree with @TimothyBlynJacobs, @xkon, and @jorbin that an user facing option to "lock/restrict the public REST API" is not a good idea. As pointed out above it will not only allow users to "break their sites". It also "pushes" the users into having to make a decision about concepts and features that most people are not aware of. Leaving such choices in the hands of the web developers, like theme/plugin authors, is the proper solution.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If there are cases of private or restricted data available through the REST API for non logged-in users, they should be treated as bugs and fixed in specific tickets for each specific case. Similarly, if a theme or a plugin restricts what data is accessible for non logged-in users, the theme/plugin should also ensure that access to that data is restricted through RSS and REST.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@apedog I understand your concerns but a user facing option in wp-admin doesn't seem to be the best solution :) REST is just another way to access a WordPress powered site, similarly to many other web sites that are not powered by WordPress. If a website owner or a website "builder/developer" wants to restrict some of the public data available by default to non logged-in users, best would be to install a "proper" plugin, or develop one if their needs are not met by any existing plugin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Closing this as "worksforme" since it is the intended behaviour. Please open specific tickets if there are cases where (private or restricted) data is not available by default through the "front-end", but is available through the REST API for non logged-in users.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49120 (strtotime() in WP::send_headers()) created</title>
      
        <dc:creator>autotutorial</dc:creator>

      <pubDate>Thu, 02 Jan 2020 21:28:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49120/1578000520462355</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/reference/classes/wp/send_headers/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/classes/wp/send_headers/&lt;/a&gt; bug strtotime function. From WordPress 5.3 use class DateTime.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 21:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:5/1578000176820733</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 21:19:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:4/1577999952557100</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48754 (Media image crop features not working.) updated</title>
      
        <dc:creator>sjnbham</dc:creator>

      <pubDate>Thu, 02 Jan 2020 20:04:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48754#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48754#comment:3/1577995480409446</guid>
      <description>&lt;p&gt;
I ran in to this issue as well. It happens in the latest versions of Chrome and FireFox. If you use the crop tool and then click the Crop button again or press the Enter key, then the crop is registered and the save button becomes available. This behavior is not very intuitive. It would be great to have the save option available while the crop tool is active. If focus switches to another image editing button like rotate or the save button is selected, then the crop state would be kept.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48303 (Docblock improvements for 5.4) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 19:20:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48303#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48303#comment:54/1577992834537736</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47032" title="Docs: Synchronize &amp;#34;Default empty array&amp;#34; notes for `$args` parameter in ..."&gt;47032&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Synchronize "Default empty array" notes for &lt;code&gt;$args&lt;/code&gt; parameter in &lt;code&gt;get_comment_text()&lt;/code&gt; and &lt;code&gt;comment_text()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props denisco.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [47032]: Docs: Synchronize "Default empty array" notes for `$args` parameter in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 19:20:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47032</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47032/1577992833395701</guid>
      <description>&lt;p&gt;
Docs: Synchronize "Default empty array" notes for &lt;code&gt;$args&lt;/code&gt; parameter in &lt;code&gt;get_comment_text()&lt;/code&gt; and &lt;code&gt;comment_text()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props denisco.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/48303" title="#48303: task (blessed): Docblock improvements for 5.4 (new)"&gt;#48303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 19:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:3/1577992238969252</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49117 (WP default themes' translations keep being installed when updating ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 19:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49117#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49117#comment:1/1577992215898772</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49096 (Allow updating attachments with new files) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 02 Jan 2020 18:56:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49096#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49096#comment:3/1577991373880700</guid>
      <description>&lt;p&gt;
Unless we had some application that required this functionality in core, I would suggest that this is plugin material. The external editor use case is definitely and interesting one, but I could also see this opening up problems where files are updated on existing attachment posts that container totally different metadata which should really have been an entirely new object.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The closest example we currently have in core that I can think of this similarly to how custom theme images—like headers and site icons—are created now as new attachments instead of updating files for an existing attachment.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49119 (HELP) closed</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 02 Jan 2020 18:56:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49119#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49119#comment:1/1577991363078845</guid>
      <description>invalid: &lt;p&gt;
Hi @sheshe350,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm sorry to hear that you are having issues with your WordPress site. Unfortunately, this is not the right place to post. This Trac instance is for the development of the core WordPress software and not general user support.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For support, please open a ticket in the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress.org Support Forums&lt;/a&gt;, or reach out to your hosting provider.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #49096 (Allow updating attachments with new files) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 02 Jan 2020 18:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49096#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49096#comment:2/1577990625474304</guid>
      <description>&lt;p&gt;
From @joemcgill in Slack:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are some plugins that implement this, but it’s not something we have UI for in core, nor a simple API to implement at the moment.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
All editing in core is currently handled on the server side and not something that we have any need to expose to third party editors, but I like the idea of being able to build decoupled image editors on top of the REST API, so it would be worth doing a quick feasibility PoC.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49119 (HELP) created</title>
      
        <dc:creator>sheshe350</dc:creator>

      <pubDate>Thu, 02 Jan 2020 18:29:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49119/1577989786043613</guid>
      <description>&lt;p&gt;
I cant figure out where to send an email or call.  After the 5.3 update my dashboard doesn't open anymore.  My website is up but my messaging/emails doesn't work and I cannot get into my dashboard to even do a reverse to an earlier date.  My email is &lt;em&gt;removed&lt;/em&gt;, please I need your help. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 02 Jan 2020 16:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:2/1577983859563520</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch looks good to me. Thanks @pbiron!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Thu, 02 Jan 2020 15:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:12/1577980564199812</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Plugins should be able to use the REST api on the front end and an option to disable it is essentially an option to allow users to break their site. This topic has been discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39806" title="#39806: enhancement: Disable REST API by default, making it opt-in rather than always-on (closed: wontfix)"&gt;#39806&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38446" title="#38446: task (blessed): Deprecate the rest_enabled filter (closed: fixed)"&gt;#38446&lt;/a&gt; amongst other places. As @joehoyle wrote one of the previous times this was discussed:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The more WP functionality core functionality we see moving to be build on the REST API, the more it will become not possible to disable it. The REST API is not just an external facing layer on WordPress, it is core functionality.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As per usual, if you don't want your site to be publicly accessible, there are plugins and other means of doing that - but it's not a default / feature of WordPress core to enable such a thing.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
User facing options also are not free, as was noted by Havoc Pennington in 2002 in an article that has had a lasting impact on the philosophies of WordPress:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It turns out that preferences have a cost. Of course, some preferences also have important benefits - and can be crucial interface features. But each one has a price, and you have to carefully consider its value. Many users and developers don't understand this, and end up with a lot of cost and little value for their preferences dollar.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Too many preferences means you can't find any of them.&lt;br /&gt;
Preferences really substantively damage QA and testing.&lt;br /&gt;
Preferences make integration and good UI difficult.&lt;br /&gt;
The point of a good program is to do something specific and do it well.&lt;br /&gt;
Preferences keep people from fixing real bugs.&lt;br /&gt;
Preferences can confuse many users.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I find that if you're hard-core disciplined about having good defaults that Just Work instead of lazily adding preferences, that naturally leads the overall UI in the right direction. Issues come up via bugzilla or mailing lists or user testing, and you fix them in some way other than adding a preference, and this means you have to think about the right UI and the right way to fix problems. Basically, using preferences as a band-aid is the root of much UI evil.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see any new arguments that makes me believe this ticket shouldn't be closed as a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39806" title="#39806: enhancement: Disable REST API by default, making it opt-in rather than always-on (closed: wontfix)"&gt;#39806&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 02 Jan 2020 15:40:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118#comment:1/1577979653741043</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>49118.diff attached to Ticket #49118</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 02 Jan 2020 15:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/49118/49118.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/49118/49118.diff/1577979637072718</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #49118 (REST API: minor performance improvement for /wp/v2/users?who=authors) created</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 02 Jan 2020 15:39:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49118/1577979574151756</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42202" title="#42202: enhancement: REST API: no equivalent for `who=authors` to display potential authors (closed: fixed)"&gt;#42202&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Changeset &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43001" title="REST API: Add `who=authors` as a query parameter for `GET ..."&gt;[43001]&lt;/a&gt;/&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43137" title="REST API: When handling `who=authors` query parameter for `GET ..."&gt;[43137]&lt;/a&gt; added a &lt;code&gt;who=authors&lt;/code&gt; parameter to the &lt;code&gt;list users&lt;/code&gt; endpoint.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When that parameter is present, &lt;code&gt;WP_REST_Users_Controller::get_items_permissions_check()&lt;/code&gt; checks that the current user has the capability to &lt;code&gt;edit_posts&lt;/code&gt; for at least 1 post type that has &lt;code&gt;show_in_rest = true&lt;/code&gt; and supports author.  That check loops through &lt;strong&gt;all&lt;/strong&gt; post types with &lt;code&gt;show_in_rest = true&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A minor performance improvement could be had by breaking out of that loop as soon one post type is found that meets the requirements.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #48617 (Twenty Twenty: Figure elements with inline style can overflow content ...) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 02 Jan 2020 15:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48617#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48617#comment:7/1577979515119228</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would like to get this into the next major release, however I would prefer that we avoid using &lt;code&gt;!important&lt;/code&gt; if possible. I will test and look for a solution when I get a chance, but any help with this issue is appreciated.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48970 (Twenty Twenty : Menu rendering problem Unicode (Bangla)) updated</title>
      
        <dc:creator>ianbelanger</dc:creator>

      <pubDate>Thu, 02 Jan 2020 15:16:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48970#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48970#comment:10/1577978169980770</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49117 (WP default themes' translations keep being installed when updating ...) created</title>
      
        <dc:creator>3dwebvision</dc:creator>

      <pubDate>Thu, 02 Jan 2020 14:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49117/1577973943586914</guid>
      <description>&lt;p&gt;
This happens every website I maintain, and it has been happening ever since I got in the field of web design with wordpress. I'm reporting it because I couldn't find any refference to the issue on the net.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To keep the clutter to a minimum, I regularly add following lines to config.php:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;define( 'CORE_UPGRADE_SKIP_NEW_BUNDLED', true );
define( 'WP_DEFAULT_THEME', 'whatever-the-theme-is' );
&lt;/pre&gt;&lt;p&gt;
WP default themes' (3 twentywhatever themes) translations keep being installed in wp-content/languages/themes when updatig wordpress, no matter what WP version it is updating to, or what the default theme is.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Not a big issue, but still a bug and a nuisance.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:11/1577969446847946</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
When first digging into WordPress, many years ago, I remember I was a bit surprised RSS feeds was also available for any archive, just by adding /feed to the URL. Should I have expected it not to, based on the fact that I had edited the template?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good point. The Admin area links to ample documentation regarding RSS - had you wanted those questions answered.&lt;br /&gt;
The same should be afforded to REST API. Preferably from a similar settings page, if not from the exact same page.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I even deleted such template, but still the index.php took over. I understood one ting quit early: Must learn more, or else I don't know what I am really doing, so far.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I absolutely relate to this attitude. I completely agree with your point.&lt;br /&gt;
That is the impetus behind this ticket. To facilitate exactly that kind of understanding and access. As it stands, REST is hidden from an admin user. It exists as &lt;em&gt;external-only&lt;/em&gt; documentation, and is thus implicitly only targeted at developers interested in using it. Not at site admins.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An overview of how content may be accessed through different interfaces and formats will be a good thing, if not already there. This may be linked to from admin.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is a must (IMO)&lt;br /&gt;
Some measure of control would also be a positive addition. In much the same way the WP Admin area allows minimal control of permalinks and rewrite rules.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49112 (variable name typo `clipdoardText`) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:09:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49112#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49112#comment:3/1577966968132617</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47031" title="Site Health: Fix typo in a variable name in ..."&gt;47031&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Site Health: Fix typo in a variable name in &lt;code&gt;js/_enqueues/admin/site-health.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props nickylimjj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49112" title="#49112: defect (bug): variable name typo `clipdoardText` (closed: fixed)"&gt;#49112&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47031]: Site Health: Fix typo in a variable name in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47031</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47031/1577966967037903</guid>
      <description>&lt;p&gt;
Site Health: Fix typo in a variable name in &lt;code&gt;js/_enqueues/admin/site-health.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props nickylimjj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49112" title="#49112: defect (bug): variable name typo `clipdoardText` (closed: fixed)"&gt;#49112&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49112 (variable name typo `clipdoardText`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49112#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49112#comment:2/1577966802853012</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49108 (Coding Standards: src/js/media/controllers/library.js) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49108#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49108#comment:2/1577966730820440</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47030" title="Coding Standards: Move assignment out of condition in ..."&gt;47030&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Move assignment out of condition in &lt;code&gt;js/media/controllers/library.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49108" title="#49108: defect (bug): Coding Standards: src/js/media/controllers/library.js (closed: fixed)"&gt;#49108&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47030]: Coding Standards: Move assignment out of condition in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:05:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47030</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47030/1577966729650915</guid>
      <description>&lt;p&gt;
Coding Standards: Move assignment out of condition in &lt;code&gt;js/media/controllers/library.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49108" title="#49108: defect (bug): Coding Standards: src/js/media/controllers/library.js (closed: fixed)"&gt;#49108&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49107 (Coding Standards: src/js/media/views/settings.js) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:00:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49107#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49107#comment:2/1577966412705387</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47029" title="Coding Standards: Move assignment out of condition in ..."&gt;47029&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Move assignment out of condition in &lt;code&gt;js/media/views/settings.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49107" title="#49107: defect (bug): Coding Standards: src/js/media/views/settings.js (closed: fixed)"&gt;#49107&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47029]: Coding Standards: Move assignment out of condition in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 12:00:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47029</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47029/1577966411572989</guid>
      <description>&lt;p&gt;
Coding Standards: Move assignment out of condition in &lt;code&gt;js/media/views/settings.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ankitmaru.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49107" title="#49107: defect (bug): Coding Standards: src/js/media/views/settings.js (closed: fixed)"&gt;#49107&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #46652 (Add "template_loaded" action after a template has been included as ...) updated</title>
      
        <dc:creator>sntikekar</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/46652#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/46652#comment:3/1577966300536146</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>46652.patch attached to Ticket #46652</title>
      
        <dc:creator>sntikekar</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:55:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/46652/46652.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/46652/46652.patch/1577966147803714</guid>
      <description>&lt;p&gt;
Adds action 'template_loaded' as required. Follows WordPress-Core coding standards.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #25137,​44458 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:50:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25137%2C44458</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25137%2C44458/1577965810563840</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25137" title="#25137: feature request: Enable safe mode to run WordPress without loading plugins (closed: duplicate)"&gt;#25137&lt;/a&gt; was marked as a duplicate.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:47:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:10/1577965645125812</guid>
      <description>&lt;p&gt;
The ambition to not let any very low end "developer/hacker" get any surprises about how content of an advanced publishing system for the internet gets acessible is very odd, IMO. Like an ostrich that buries it's head in the sand is not invisible.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When first digging into WordPress, many years ago, I remember I was a bit surprised RSS feeds was also available for any archive, just by adding /feed to the URL. Should I have expected it not to, based on the fact that I had edited the template? I even deleted such template, but still the index.php took over. I understood one ting quit early: Must learn more, or else I don't know what I am really doing, so far.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/49110#comment:9" title="Comment 9"&gt;apedog&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;WP Admin area &lt;em&gt;must&lt;/em&gt; (IMO) afford to its user as much control of the REST API as it affords to robots.txt and the RSS feed.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
robots.txt is not enforcing restrictions.&lt;br /&gt;
The options for feeds is just for convenience. To disable it you need a plugin.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;WP Admin area &lt;em&gt;must&lt;/em&gt; (IMO) afford to its user as information about REST API as it gives about RSS.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That's very little, and I don't think it belongs in the admin area for end users. To be educated in how WordPress works you must consult documentation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
An overview of how content may be accessed through different interfaces and formats will be a good thing, if not already there. This may be linked to from admin.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The goal of the REST API is to provide access not only public content, but for editing and administration.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Properly and completely restricting access is a thing for dedicated plugins, like  membership, written be people who actually know what they are doing. Trying to make it correct that assuming what you can't see in browser by visiting exposed links of your site on not a way to go.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49115 (Published on select dropdown has a line height issue in WP Admin) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49115#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49115#comment:1/1577965506235178</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49113 (Twenty Twenty, Version 1.1, Font is overritten in p-Tags) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49113#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49113#comment:2/1577965431386154</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49108 (Coding Standards: src/js/media/controllers/library.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:42:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49108#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49108#comment:1/1577965360188904</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49107 (Coding Standards: src/js/media/views/settings.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49107#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49107#comment:1/1577965344145939</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49106 (Code refactoring for WP OPML XML) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:42:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49106#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49106#comment:2/1577965337292689</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49106 (Code refactoring for WP OPML XML) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:41:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49106#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49106#comment:1/1577965269782808</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49105 (Code refactoring for WP Comment Post) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:40:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49105#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49105#comment:2/1577965213155496</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47028" title="Coding Standards: Use strict comparison in `wp-comments-post.php`.
 ..."&gt;47028&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-comments-post.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props dkarfa.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49105" title="#49105: defect (bug): Code refactoring for WP Comment Post (closed: fixed)"&gt;#49105&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47028]: Coding Standards: Use strict comparison in `wp-comments-post.php`.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:40:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47028</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47028/1577965211958693</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-comments-post.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props dkarfa.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49105" title="#49105: defect (bug): Code refactoring for WP Comment Post (closed: fixed)"&gt;#49105&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49105 (Code refactoring for WP Comment Post) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:39:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49105#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49105#comment:1/1577965199993633</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49104 (Coding Standards: Use Strict comparison and Yoda conditions in ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:35:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49104#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49104#comment:2/1577964956863388</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/47027" title="Coding Standards: Use strict comparison and Yoda conditions in ..."&gt;47027&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison and Yoda conditions in &lt;code&gt;wp-includes/widgets.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props jenilk.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49104" title="#49104: defect (bug): Coding Standards: Use Strict comparison and Yoda conditions in ... (closed: fixed)"&gt;#49104&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [47027]: Coding Standards: Use strict comparison and Yoda conditions in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:35:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/47027</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/47027/1577964955733946</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison and Yoda conditions in &lt;code&gt;wp-includes/widgets.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props jenilk.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/49104" title="#49104: defect (bug): Coding Standards: Use Strict comparison and Yoda conditions in ... (closed: fixed)"&gt;#49104&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #49104 (Coding Standards: Use Strict comparison and Yoda conditions in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 02 Jan 2020 11:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49104#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49104#comment:1/1577964937654808</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #49110 (Add ability to lock/restrict public REST API access from WP Admin) updated</title>
      
        <dc:creator>apedog</dc:creator>

      <pubDate>Thu, 02 Jan 2020 10:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/49110#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/49110#comment:9/1577961199387962</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
You have to know that these templates exist, the exact same way you would know about REST.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I emphatically disagree.&lt;br /&gt;
Installing WordPress and hacking away at the default theme is a common (and &lt;em&gt;encouraged&lt;/em&gt;) use-case.&lt;br /&gt;
It requires only basic knowledge of HTML and PHP and a willingness to read about the templates and WP in general. A very low technical barrier.&lt;br /&gt;
Knowing REST, or even knowing &lt;em&gt;of&lt;/em&gt; REST, is not a requirement. Nor should it be.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WP Admin area &lt;em&gt;must&lt;/em&gt; (IMO) afford to its user as much control of the REST API as it affords to robots.txt and the RSS feed.
&lt;/li&gt;&lt;li&gt;WP Admin area &lt;em&gt;must&lt;/em&gt; (IMO) afford to its user as information about REST API as it gives about RSS.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>47192.3.diff attached to Ticket #47192</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 02 Jan 2020 04:15:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47192/47192.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47192/47192.3.diff/1577938507081489</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47192 (Allow users to enter recovery mode via their registered email) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 02 Jan 2020 04:11:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47192#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47192#comment:15/1577938262122294</guid>
      <description>&lt;p&gt;
I've forgotten something, naturally. I think we'd link to this page from the current error template as well as from the automatic email.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #47192 (Allow users to enter recovery mode via their registered email) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Jan 2020 04:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47192#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47192#comment:14/1577937922505423</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-site-health by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-site-health/p1577937920001100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Request Recovery Mode Link.png attached to Ticket #47192</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 02 Jan 2020 04:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47192/Request%20Recovery%20Mode%20Link.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47192/Request%20Recovery%20Mode%20Link.png/1577937844639295</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>47192.2.diff attached to Ticket #47192</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 02 Jan 2020 04:03:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/47192/47192.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/47192/47192.2.diff/1577937807450858</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #47192 (Allow users to enter recovery mode via their registered email) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 02 Jan 2020 04:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/47192#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/47192#comment:13/1577937773118863</guid>
      <description>&lt;p&gt;
@spacedmonkey, @dd32, @miss_jwo and I discussed this feature at WordCamp US to try and find a way forward without introducing any security issues.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The crux of the issue is that for the request an email form to work when the site is experiencing a fatal error, execution needs to be handled before plugins are loaded. This poses a problem because we don't want any user to be able to request a link to enter recovery mode, only users who can &lt;code&gt;resume_plugins&lt;/code&gt; or &lt;code&gt;resume_themes&lt;/code&gt;. Doing permission checks before WordPress has been able to load plugins may not be safe.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The solution the four of us came up with is to "cache" the list of email addresses that have permission to perform this action, and when the link is requested, check if the provided email address is contained within the allow list. That list is then updated when a user logs in, has a role changed, or the user is updated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When a user requests a recovery mode link, we no longer have access to the fatal error that occurred and the context of the page is different. Additionally, we no longer need to rate limit it since the email isn't sent automatically on an error. So I've introduced a second email method that has less content.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The UI is currently all handled using &lt;code&gt;wp_die()&lt;/code&gt;. We can't easily use the wp-login.php styles because we'd have to wait for plugins to load to gain access to the &lt;code&gt;login_header()&lt;/code&gt; and &lt;code&gt;login_footer()&lt;/code&gt; functions. However, if we wanted to, I suppose we could move those functions to a separate file that can be selectively included. If we did reuse the login styles, though, we might run into an issue that site owners won't be able to easily style the page since plugins like Theme My Login wouldn't have run yet.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I've uploaded a patch that does this for people to play around with. The styling and language is all very primitive, but it is hopefully enough to get an idea of how it might work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Visit &lt;code&gt;/wp-login.php?action=request_rm&lt;/code&gt; to see the page and initiate the flow.&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Howdy!
You requested a link to enter Recovery Mode.
First, visit your website (http://trunk.test/) and check for any visible issues. Next, visit the page where the error was caught and check for any visible issues.
Please contact your host for assistance with investigating this issue further.
If your site appears broken and you can't access your dashboard normally, WordPress now has a special "recovery mode". This lets you safely login to your dashboard and investigate further.
http://trunk.test/wp-login.php?action=enter_recovery_mode&amp;amp;rm_token=04TVkFeEt9aGSlC1B0ZXei&amp;amp;rm_key=5JmVtMgiEuYMno6PuIxxRI
To keep your site safe, this link will expire in 1 day. Don't worry about that, though: you can request a new link at any time.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29418 (Taxonomy archive query not including all of its post types.) updated</title>
      
        <dc:creator>Howdy_McGee</dc:creator>

      <pubDate>Thu, 02 Jan 2020 02:44:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29418#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29418#comment:10/1577933089206249</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here's how I see it. At this point (LN 2135) in the get_posts method we're simply looking for post types matching the current taxonomy, that's all. We should be including all post types not just searchable ones. It doesn't really matter for searchable types anyway. Whenever a search query is added it sets the post_type to 'any' which then goes out and grabs all searchable post type as seen in lines 1847 -&amp;gt; 1854 -&amp;gt; 2409.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Removing the &lt;code&gt;exclude_from_search&lt;/code&gt; flag solves this issue, continues to keep the post type unsearchable, and doesn't undo the original patches work.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Adding additional flags to fix this bug would end up causing more confusion than necessary. Maybe this change would be easier to apply with a major update so there's plenty of notice prior and testing to be done.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>29418.diff attached to Ticket #29418</title>
      
        <dc:creator>Howdy_McGee</dc:creator>

      <pubDate>Thu, 02 Jan 2020 02:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29418/29418.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29418/29418.diff/1577932971567237</guid>
      <description>&lt;p&gt;
Exclude Search Removed
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #48769 (meta_input, tax_input, tags_input and post_category arguments are not ...) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Thu, 02 Jan 2020 02:12:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48769#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48769#comment:4/1577931159637807</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #48410 (`wp_insert_post()` can result in duplicate post data) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Thu, 02 Jan 2020 02:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/48410#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/48410#comment:5/1577931025081164</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44588 (Denote the Copy action is complete by updating the Copy button to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Jan 2020 01:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44588#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44588#comment:15/1577927351364267</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-php by nickylimjj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-php/p1577927349006700"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42202 (REST API: no equivalent for `who=authors` to display potential authors) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 02 Jan 2020 00:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42202#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42202#comment:28/1577925469956781</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1577925468099200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>