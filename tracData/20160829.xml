<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>iamfriendly</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:35:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:129/1472513701042189</guid>
      <description>&lt;p&gt;
I'm not sure it's about catching/preventing all of the instances of someone doing it wrong. It's about setting a precedent and, possibly more importantly, setting expectations.
&lt;/p&gt;
&lt;p&gt;
Ultimately, this has a potential to break a lot of things, very quickly and very badly. (Please note I am very pro this change, I'm just urging an abundance of caution). One mis-step can lead to developers going down a winding path without us really realising it. This can end badly for the user. (See the shortcodes API changes last year, which admittedly was a necessary change to a feature and this is more architectural, but the point stands).
&lt;/p&gt;
&lt;p&gt;
There are currently many ways to override core pieces (in a doing_it_wrong fashion) but that doesn't mean we should simply ignore that and give developers another chance to shoot themselves and their users in the foot.
&lt;/p&gt;
&lt;p&gt;
I'm +1 for the addition of a branch which would allow us to really hammer this and see what breaks in a lot of scenarios. It (probably) means a slower inclusion into core, but it sure as heck gives us a real chance to see what's happening and also can give developers a chance to test and test again. It also gives us a way to compare and contrast items like speed and memory usage.
&lt;/p&gt;
&lt;p&gt;
I truly believe that, when merged, this will be one of the biggest, most positive changes to WP in a long time. I'm so glad we're having this conversation and hashing out all of the ways we can get this done, to get it right.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16483 (Visibility: password-protected exposes multiple pages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:20:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16483#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16483#comment:17/1472512801363058</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1472512798000098"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:7/1472512680429217</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because this field is labeled implicitly, adding the for and id attributes doesn't accomplish anything
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @joedolson. Re implicit labelling, when I started improving a11y for projects and sites, one of my go-to references is the &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/How_to_structure_an_HTML_form#The_&amp;lt;label&amp;gt;_element"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Mozilla Developer Network&lt;/a&gt; site where it states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
A &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element is bound to its widget with the for attribute. The for attribute references the id attribute of the corresponding widget. A widget can be nested inside its &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element but even in that case, it is considered best practice to set the for attribute because some assistive technologies do not understand implicit relationships between labels and widgets.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In addition, the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress A11y Coding Standards&lt;/a&gt; the information given there is that "All form inputs must include an &lt;strong&gt;explicitly associated&lt;/strong&gt;  &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element."
&lt;/p&gt;
&lt;p&gt;
So if the WP a11y team consensus is that adding &lt;code&gt;for&lt;/code&gt; attributes for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s is useless when widgets are nested, perhaps that should be clarified, as I see at least many instances throughout the WP codebase where &lt;code&gt;for&lt;/code&gt; attributes were added to &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s with widgets nested. Thank you.
&lt;/p&gt;
&lt;p&gt;
(copy pasted most from &lt;a href="https://core.trac.wordpress.org/ticket/37649#comment:6"&gt;https://core.trac.wordpress.org/ticket/37649#comment:6&lt;/a&gt; )
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:16:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:128/1472512619758701</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP 5.3 and namespacing sure seems like it would negate many of these potential issues.
Is it time?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How? Even with namespaces, a plugin could still include it's own version with whatever namespace we end up using. Example.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@jorbin but the unaware dev would now have to duplicate both the namespace and the class name. A simple class name collision would no longer occur.
&lt;/p&gt;
&lt;p&gt;
There is always be the possibility of someone &lt;em&gt;doing it wrong&lt;/em&gt;. I don't believe we can stop all instances, especially if the dev's intent is to override the class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>mercime</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:6/1472512451030983</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Because this field is labeled implicitly, adding the for and id attributes doesn't accomplish anything
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @joedolson. Please note that this patch also includes adding a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tag to a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; form control which is required.
&lt;/p&gt;
&lt;p&gt;
As to implicit labelling, when I started improving a11y for projects and sites, one of my go-to references is the &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/How_to_structure_an_HTML_form#The_&amp;lt;label&amp;gt;_element"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Mozilla Developer Network&lt;/a&gt; site where it states:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
A &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element is bound to its widget with the for attribute. The for attribute references the id attribute of the corresponding widget. A widget can be nested inside its &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element but even in that case, it is considered best practice to set the for attribute because some assistive technologies do not understand implicit relationships between labels and widgets.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In addition, the &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/best-practices/coding-standards/accessibility-coding-standards/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordPress A11y Coding Standards&lt;/a&gt; the information given there is that "All form inputs must include an &lt;strong&gt;explicitly associated&lt;/strong&gt;  &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element."
&lt;/p&gt;
&lt;p&gt;
So if the WP a11y team consensus is that adding &lt;code&gt;for&lt;/code&gt; attributes for &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s is useless when widgets are nested, perhaps that should be clarified, as I see at least many instances throughout the WP codebase where &lt;code&gt;for&lt;/code&gt; attributes were added to &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s with widgets nested. Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:127/1472512133735445</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:125" title="Comment 125"&gt;afragen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
PHP 5.3 and namespacing sure seems like it would negate many of these potential issues.
&lt;/p&gt;
&lt;p&gt;
Is it time?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How?  Even with namespaces, a plugin could still include it's own version with whatever namespace we end up using. &lt;a class="ext-link" href="https://gist.github.com/aaronjorbin/6d8ae5ce0473734255ec70b06c109898"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Example&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 29 Aug 2016 23:06:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:126/1472511961579510</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:124" title="Comment 124"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having "pluggable" classes in WordPress is out of the question.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Many class instances are stored in a global variable, and these can be replaced already. So "pluggable classes" are already here, as "pluggable instances". &lt;code&gt;WP_Scripts&lt;/code&gt; is one example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:58:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:82/1472511513291834</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38436" title="Customize: Allow users to more seamlessly create page-based nav menus ..."&gt;38436&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Allow users to more seamlessly create page-based nav menus during customization.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Introduces the ability to create stubs for the various post types to add to a given menu. This eliminates the need to leave the customizer to first create the post in the admin and then return to managing menus. Only the title of the newly-created post can be supplied; the post content will be blank and will need to be provided in the normal edit post screen outside the customizer, unless a plugin enables a post editing in the customizer experience. When a post is created and added to a nav menu in the customizer, the newly created post that is added to a menu is given the &lt;code&gt;auto-draft&lt;/code&gt; status, and if the changes are not published, the &lt;code&gt;auto-draft&lt;/code&gt; post will be automatically deleted within 7 days via &lt;code&gt;wp_delete_auto_drafts()&lt;/code&gt;. However, if the customizer changes are saved, then these nav menu item &lt;code&gt;auto-draft&lt;/code&gt; post stubs will be transitioned to &lt;code&gt;publish&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Includes portions of code from the Customize Posts &amp;lt;&lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts&lt;/a&gt;&amp;gt; and Front-end Editor &amp;lt;&lt;a class="ext-link" href="https://github.com/iseulde/wp-front-end-editor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/iseulde/wp-front-end-editor&lt;/a&gt;&amp;gt; plugins.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For more information, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props celloexpressions, westonruter, valendesigns, afercia, melchoyce, mapk, iseulde, mrahmadawais.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38436]: Customize: Allow users to more seamlessly create page-based nav menus ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:58:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38436/1472511512800711</guid>
      <description>&lt;p&gt;
Customize: Allow users to more seamlessly create page-based nav menus during customization.
&lt;/p&gt;
&lt;p&gt;
Introduces the ability to create stubs for the various post types to add to a given menu. This eliminates the need to leave the customizer to first create the post in the admin and then return to managing menus. Only the title of the newly-created post can be supplied; the post content will be blank and will need to be provided in the normal edit post screen outside the customizer, unless a plugin enables a post editing in the customizer experience. When a post is created and added to a nav menu in the customizer, the newly created post that is added to a menu is given the &lt;code&gt;auto-draft&lt;/code&gt; status, and if the changes are not published, the &lt;code&gt;auto-draft&lt;/code&gt; post will be automatically deleted within 7 days via &lt;code&gt;wp_delete_auto_drafts()&lt;/code&gt;. However, if the customizer changes are saved, then these nav menu item &lt;code&gt;auto-draft&lt;/code&gt; post stubs will be transitioned to &lt;code&gt;publish&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Includes portions of code from the Customize Posts &amp;lt;&lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts&lt;/a&gt;&amp;gt; and Front-end Editor &amp;lt;&lt;a class="ext-link" href="https://github.com/iseulde/wp-front-end-editor"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/iseulde/wp-front-end-editor&lt;/a&gt;&amp;gt; plugins.
&lt;/p&gt;
&lt;p&gt;
For more information, see &lt;a class="ext-link" href="https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/2016/06/16/feature-proposal-content-authorship-in-menus-with-live-preview/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Props celloexpressions, westonruter, valendesigns, afercia, melchoyce, mapk, iseulde, mrahmadawais.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37873 (Consolidate customizer CSS) created</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37873</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37873/1472510638276129</guid>
      <description>&lt;p&gt;
There is a lot of rule duplication in the customizer's CSS, as well as separate files for nav menus and widgets. Much of the UI is very similar or the same, so it seems worth coming up with some standard names for those visual components. We should also consider whether it's worth maintaining those separate files.
&lt;/p&gt;
&lt;p&gt;
This will almost certainly impact JS and possibly plugins, so we should research that as well.
&lt;/p&gt;
&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34333" title="#34333: defect (bug): Customizer: aggregate similar CSS rules (closed: fixed)"&gt;#34333&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37872 (Improving instructions wording on password reinit page) created</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:37:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37872/1472510230379836</guid>
      <description>&lt;p&gt;
Many subscribers are confused by the instructions on password reinit page.
&lt;/p&gt;
&lt;p&gt;
Here are three suggestions for improving instructions wording (I am not using the English version of WordPress, so original wordings may be incorrect):
&lt;/p&gt;
&lt;p&gt;
1) "Please enter your new password below."
-&amp;gt; "Please consider using the generated password or enter a new password below"
&lt;/p&gt;
&lt;p&gt;
2) "New password"
-&amp;gt; "Your password"
&lt;/p&gt;
&lt;p&gt;
3) "Hint: &amp;lt;How to choose a good password...&amp;gt;"
-&amp;gt; Remove it by default. Only display this hint when there is a red warning  sign due to the detection of a "Weak" or "Very weak" password.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:125/1472509265395207</guid>
      <description>&lt;p&gt;
PHP 5.3 and namespacing sure seems like it would negate many of these potential issues.
&lt;/p&gt;
&lt;p&gt;
Is it time?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:13:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:124/1472508837904970</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can't see why a plugin would want to do that, and it would probably break half of the time, because autoloading means there's no set point in time where you know the class was or wasn't loaded any more.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately this is not entirely true. The plugins are loaded relatively early. They will always be loaded before a bunch of classes are first needed effectively letting the plugins always "preload" some classes. I agree with @Clorith: "...you say they shouldn't, I agree. But from experience, they will, they most definitely will."
&lt;/p&gt;
&lt;p&gt;
Having "pluggable" classes in WordPress is out of the question.
&lt;/p&gt;
&lt;p&gt;
@schlessera, @flixos90, @flixos90 not sure how well you know the WordPress codebase but there is a thing called "pluggable.php". As far as I know this is a left-over from forking b2 14 years ago that wasn't fixed/removed in time. This is probably the worst architectural decision ever. Why would you want to extend it? :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Autoloading has several benefits out of the box, even with a more procedural codebase like WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. Autoloading is great for classes. After a quick look through the code, about 80-100 of the 200 classes will always be loaded, and half of the rest would never be loaded together. So currently autoloading will affect maybe about 5% of the code. This is still good, that percent will increase in the future.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nobody is meant to replace core WordPress classes. And if they do, they would have done it with or without an autoloader. The addition of an autoloader does not in any way change the fact that plugins can already replaces whatever they want on most systems, and cause havoc.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not true. Plugins cannot replace any of the &lt;code&gt;required&lt;/code&gt; classes.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does that mean that we should discuss how best to proceed so that some precautions can be taken? Yes, absolutely! But does that mean that we should avoid a definite code improvement because it could be "mis-used"? I don't think so.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Totally agree. As far as I see the way to proceed here is:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make an experimental branch where all this can be tested and cleaned up before merging in core.
&lt;/li&gt;&lt;li&gt;Find a way to "lock down" core classes so they cannot be replaced by plugins. Think of this like having the &lt;code&gt;final&lt;/code&gt; keyword in class definitions. One possible way would be to have a custom autoloader that has a list of the core classes and doesn't do &lt;code&gt;class_exists()&lt;/code&gt; before loading any of them (and keeps some sort of state to test if they are already loaded).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:13:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:123</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:123/1472508820236420</guid>
      <description>&lt;p&gt;
I just ran some siege tests of single page  loads using twentyfifteen and they show no real speed difference between &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38398" title="Unit Tests:
* Automatically delete objects that we were created ..."&gt;r38398&lt;/a&gt; ( before the autoloader) and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38433" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;r38433&lt;/a&gt; (now) ( 4.86 to 4.89 ).  If speed is going to be used as an argument towards this, we need something that demonstrates it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37110 (Update to jQuery 3.*) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:06:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37110#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37110#comment:4/1472508413080385</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472508410000339"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37841 (HTML 5 syntax error with rel='https://api.w.org/') updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 29 Aug 2016 22:01:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37841#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37841#comment:1/1472508111721622</guid>
      <description>&lt;p&gt;
Hi zhanglide2018 - welcome, and thanks for opening your first ticket.
&lt;/p&gt;
&lt;p&gt;
I think the issue you've found might be a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37800" title="#37800: defect (bug): Close &amp;#34;link rel&amp;#34; dns-prefetch tag (closed: fixed)"&gt;#37800&lt;/a&gt;. Try the patch there, and if that fixes your issue, then this one can be closed as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34333 (Customizer: aggregate similar CSS rules) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:57:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34333#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34333#comment:12/1472507876560817</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by helen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472507874000330"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37871 (Clarify Login Label (Email Address)) created</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37871</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37871/1472507327225260</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36620" title="Template: Update label for the username field in `wp_login_form()` ..."&gt;r36620&lt;/a&gt; changed the login label from &lt;code&gt;Username&lt;/code&gt; to &lt;code&gt;Username or Email&lt;/code&gt; once logging in via email address was added.
&lt;/p&gt;
&lt;p&gt;
I'd like to see that clarified further, as &lt;code&gt;Username or Email Address&lt;/code&gt;. It's simply clearer and more accurate language (in English variants at least). Those who are mostly unfamiliar with logging-in in general, or have cognitive difficulties, will appreciate being told it's the address we're after, and not an actual email that should be pasted in.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37870 (Adding hints to login/registration form fields) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37870#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37870#comment:1/1472506287162795</guid>
      <description>&lt;p&gt;
Thanks for the ticket @davidbourguignon.
&lt;/p&gt;
&lt;p&gt;
There's some suggestion that &lt;a class="ext-link" href="https://www.nngroup.com/articles/form-design-placeholders/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;placeholders are bad for accessibility&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Even those that are computer illiterate, I would expect them to understand the concept of logging in, probably even have logged in to other sites before. Adding in placeholder text may even confuse them more - "Why do I need to enter &lt;code&gt;johnsmith&lt;/code&gt; when my name is Gary Jones?"
&lt;/p&gt;
&lt;p&gt;
What I do think could be clarified, and it probably worth it's own ticket, is changing "Email" to "Email Address".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #37863,​37869 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:27:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37863%2C37869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37863%2C37869/1472506053888560</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37863" title="#37863: defect (bug): HTTP/1.1 defined header in wp-comments-post.php (closed: fixed)"&gt;#37863&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37870 (Adding hints to login/registration form fields) created</title>
      
        <dc:creator>davidbourguignon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37870</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37870/1472505771920868</guid>
      <description>&lt;p&gt;
Could it be possible to clarify a bit the login/registration system for computer-illiterate people, by putting a grayed-out example of the kind of data they have to enter in each login field?
&lt;/p&gt;
&lt;p&gt;
I have already seen this on other websites, and it is very effective IMHO. For example:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;ID: grayed-out johnsmith
&lt;/li&gt;&lt;li&gt;Email: grayed-out john@…
&lt;/li&gt;&lt;li&gt;Etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Of course, the grayed-out examples should be considered for i18n, so that the form displays examples relevant to each culture/language.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37869 (wp-comments-post server protocol change) created</title>
      
        <dc:creator>kobashicomputing</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:14:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37869/1472505249563576</guid>
      <description>&lt;p&gt;
Hardcoded HTTP 1.1 is no longer valid anymore. Could be HTTP/2.
&lt;/p&gt;
&lt;p&gt;
Change from this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'POST'&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Allow: POST'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'HTTP/1.1 405 Method Not Allowed'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type: text/plain'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'POST'&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Allow: POST'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'SERVER_PROTOCOL'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' 405 Method Not Allowed'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;header&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type: text/plain'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:6/1472504851779561</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38435" title="Accessibility: Improve the file upload inputs styling.
Though ..."&gt;38435&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Improve the file upload inputs styling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Though browsers implement &lt;code&gt;cursor: pointer&lt;/code&gt; on this kind of controls a bit &lt;br /&gt;
inconsistently, the &lt;code&gt;pointer&lt;/code&gt; cursor styling makes more clear the button and&lt;br /&gt;
label are actionable controls.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Ankit K Gupta.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35552" title="#35552: defect (bug): Added pointer cursor on theme, plugin, and media uploader (closed: fixed)"&gt;#35552&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38435]: Accessibility: Improve the file upload inputs styling.  Though ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 21:07:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38435/1472504851288237</guid>
      <description>&lt;p&gt;
Accessibility: Improve the file upload inputs styling.
&lt;/p&gt;
&lt;p&gt;
Though browsers implement &lt;code&gt;cursor: pointer&lt;/code&gt; on this kind of controls a bit
inconsistently, the &lt;code&gt;pointer&lt;/code&gt; cursor styling makes more clear the button and
label are actionable controls.
&lt;/p&gt;
&lt;p&gt;
Props Ankit K Gupta.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35552" title="#35552: defect (bug): Added pointer cursor on theme, plugin, and media uploader (closed: fixed)"&gt;#35552&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:53:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:30/1472504015701122</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by delawski. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472504013000316"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:7/1472503302642968</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38434" title="Themes: Correct the type for the `$name` parameter of the ..."&gt;38434&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Correct the type for the &lt;code&gt;$name&lt;/code&gt; parameter of the &lt;code&gt;get_header&lt;/code&gt;, &lt;code&gt;get_footer&lt;/code&gt;, &lt;code&gt;get_sidebar&lt;/code&gt;, and &lt;code&gt;get_template_part_{$slug}&lt;/code&gt; hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38434]: Themes: Correct the type for the `$name` parameter of the ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:41:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38434/1472503302179960</guid>
      <description>&lt;p&gt;
Themes: Correct the type for the &lt;code&gt;$name&lt;/code&gt; parameter of the &lt;code&gt;get_header&lt;/code&gt;, &lt;code&gt;get_footer&lt;/code&gt;, &lt;code&gt;get_sidebar&lt;/code&gt;, and &lt;code&gt;get_template_part_{$slug}&lt;/code&gt; hooks.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 20:26:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:5/1472502398806313</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 29 Aug 2016 19:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:13/1472497500328552</guid>
      <description>&lt;p&gt;
Per the discussion in the customize meeting, linked above, we're planning to move forward with CSSTidy in core to support this and handle sanitization.
&lt;/p&gt;
&lt;p&gt;
Additionally, due to problems with the amount of data stored in options, we'll need to use a post type with a post for each theme, which would also provide revisions directly.
&lt;/p&gt;
&lt;p&gt;
While we'd ideally also bundle a code editor for this, that part isn't required for a first pass. We'll need to find the best 3rd-party CSS editor, or perhaps make our own since we only need CSS (see previously &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14527" title="Remove codepress dir. see #13307."&gt;[14527]&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
I probably won't have time to flesh out those pieces for 4.7; is anyone else interested in picking this up?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:59:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:122</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:122/1472497189897073</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472497187000262"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:121</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:121/1472496898672687</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:117" title="Comment 117"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This increases the probability of breakage, and we are enabling them to do so, we are "making core pluggable" (which is a terminology I like for this) by allowing replacement of previously non-replaceable classes, and it means even something simple like a bugfix to a class in a point release, which are automatically pushed, could result in unexpected behavior one way or another.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What you're describing is certainly something worth discussing. I'm not happy with that terminology, however, because it relates this to the already "pluggable" elements in WordPress Core like &lt;code&gt;db.php&lt;/code&gt; and &lt;code&gt;advanced-cache.php&lt;/code&gt;. The point about these is that &lt;strong&gt;they are meant to be replaced&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Nobody is meant to replace core WordPress classes. And if they do, they would have done it with or without an autoloader. The addition of an autoloader does not in any way change the fact that plugins can already replaces whatever they want on most systems, and cause havoc. Correct me if I'm wrong, but I think that on most systems (those which belong to "end-users"), a plugin can replace any filesystem file within web root if it wants. So, with or without an autoloader, there are no guarantees, and you can't keep malicious/un-smart people from doing malicious/un-smart things.
&lt;/p&gt;
&lt;p&gt;
Does that mean that we should discuss how best to proceed so that some precautions can be taken? Yes, absolutely! But does that mean that we should avoid a definite code improvement because it could be "mis-used"? I don't think so. I'd rather, we make it easier and better for the proper developers to do their jobs and for WordPress Core to more easily adapt to changing requirements.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
You're right that we shouldn't let other plugin or theme developers affect how we implement things, but we DO NEED to take user expectations into consideration, and users won't know what's going on when one plugin declares a core class which another plugin relies on later down the line and gets a whole different behavior because the first one to load their own isn't a carbon copy of core, or they both try to declare that same class because core is pluggable now because we never load up core versions of classes if they are already declared.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From a users point of view, their site is now broken, and they may not be tech savvy enough to fix it (because a fix to a fatal error requires hands on modifications one way or another), and this would be on us, we enabled them to break it this badly and if we can let them break it, we should at least make an effort to help prevent it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, although I don't see why this would be an "autoloader issue" (as bad plugins kill users' sites, even today), I understand why we might need to worry that errors happen at a different level and prevent plugin deactivation (although I'm sure almost any "end-users" have had to deal with a WSOD before). So, apart from improving the WordPress error handler in general, we might also improve the standard class loader that gets registered to provide some safeguards. These safeguards would have a minor impact on performance, though, so ideally, we could also provide a switch for the pros to just disable these safeguards. If end-users are a concern, a proper error handler would not kill the site, but allow admin logins in safe-mode and ask the user whether to deactivate the offending plugin. But that's definitely a topic for a different ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37868.diff attached to Ticket #37868</title>
      
        <dc:creator>GeertDD</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37868/37868.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37868/37868.diff/1472496732348414</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37868 (Avoid default width styles in the markup of the audio player) created</title>
      
        <dc:creator>GeertDD</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37868</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37868/1472496707849643</guid>
      <description>&lt;p&gt;
The markup for every audio player contains inline styles for setting its width to 100%, like below (simplified):
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div class="wp-audio-shortcode" style="width: 100%;"&amp;gt;
&amp;lt;audio class="wp-audio-shortcode" style="width: 100%;"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Why not move that style to a stylesheet? It is the default style for &lt;em&gt;every&lt;/em&gt; audio player, so let’s not repeat ourselves each time. Moreover, style attributes in the HTML make it hard to override styles. If you don’t want your audio player to be 100% wide you’re left with two ugly options:
&lt;/p&gt;
&lt;p&gt;
a) Use &lt;code&gt;!important&lt;/code&gt; declarations in your own stylesheet to override it.
&lt;/p&gt;
&lt;p&gt;
b) Filter out the default width like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'shortcode_atts_audio', 'my_shortcode_atts_audio', 10, 4 );
function my_shortcode_atts_audio( $out, $pairs, $atts, $shortcode ) {
	$out['style'] = preg_replace( '~(?:^|\s)width\s*+:\s*+100%;?~i', '', $out['style'] );
	return $out;
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:36:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:120</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:120/1472495785193561</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:119" title="Comment 119"&gt;charliespider&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just a heads up... we're getting the following error popping up when running our unit tests on &lt;a class="ext-link" href="https://circleci.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://circleci.com&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Fatal error:  Class 'WP_HTTP_Cookie' not found
&lt;/pre&gt;&lt;p&gt;
which pulls in master branch from &lt;a class="ext-link" href="git://develop.git.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;git://develop.git.wordpress.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Haven't nailed it down completely yet, but thinking it's a result of the changes in this ticket.
&lt;/p&gt;
&lt;p&gt;
It appears that class-wp-http-cookie.php is not getting loaded despite not being listed in &lt;code&gt;composer.json&lt;/code&gt;: &lt;code&gt;autoload.exclude-from-classmap&lt;/code&gt;, but I haven't read through everything here to see if we are expected to do something different when referencing WP core classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The class is actually called &lt;code&gt;WP_Http_Cookie&lt;/code&gt;  (see case).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>charliespider</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:119</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:119/1472495419220173</guid>
      <description>&lt;p&gt;
Just a heads up... we're getting the following error popping up when running our unit tests on &lt;a class="ext-link" href="https://circleci.com"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://circleci.com&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Fatal error:  Class 'WP_HTTP_Cookie' not found
&lt;/pre&gt;&lt;p&gt;
which pulls in master branch from &lt;a class="ext-link" href="git://develop.git.wordpress.org/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;git://develop.git.wordpress.org/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Haven't nailed it down completely yet, but thinking it's a result of the changes in this ticket.
&lt;/p&gt;
&lt;p&gt;
It appears that class-wp-http-cookie.php is not getting loaded despite not being listed in &lt;code&gt;composer.json&lt;/code&gt;: &lt;code&gt;autoload.exclude-from-classmap&lt;/code&gt;, but I haven't read through everything here to see if we are expected to do something different when referencing WP core classes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:50/1472495108925534</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472495107000299"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35186 (Put the Customizer "back" button next to the "Close" button) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35186#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35186#comment:18/1472494991935015</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494988000291"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:22:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:8/1472494945783768</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494944000288"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36908 (Customizer menus and widgets "search" usability and visual improvements) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36908#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36908#comment:7/1472494862631649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch: &lt;a class="ext-link" href="https://patch-diff.githubusercontent.com/raw/xwp/wordpress-develop/pull/153.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://patch-diff.githubusercontent.com/raw/xwp/wordpress-develop/pull/153.diff&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34747 (Provide more flexibility for "You are customizing" text) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34747#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34747#comment:13/1472494695971468</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494693000280"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:7/1472494253748986</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494252000260"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:49/1472494195920458</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494194000257"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:09:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:77/1472494194240437</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:08:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:65</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:65/1472494132740598</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472494130000253"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:04:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:20/1472493870659761</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding to 4.7 due to the existing code in Customize Posts which can be lifted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 18:01:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:19/1472493712169153</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472493710000233"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36012 (Add .current-ancestor class to any relative menu item ancestor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36012#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36012#comment:1/1472493451942529</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472493450000168"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:5/1472493112263132</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472493110000152"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:51:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:6/1472493075183505</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Discussed a bit in today's accessibility meeting, noted this screen is still used for installs from .zip files and when JS is off so agreed to make the "Activate" link look like a primary action button, maybe removing the "pipe". Moving to 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:47:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:18/1472492863779174</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472492861000178"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:76/1472492775318097</guid>
      <description>&lt;p&gt;
Closely related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37727" title="#37727: enhancement: Allow for customize control notifications to have extensible templates (closed: fixed)"&gt;#37727&lt;/a&gt; (Allow for customize control notifications to have extensible templates)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:29/1472492744311692</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472492741000172"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37650 (Title attribute for comment reply link) closed</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:44:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37650#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37650#comment:4/1472492692692772</guid>
      <description>wontfix: &lt;p&gt;
Hi, @trepmal! Thanks for contributing to WordPress!
&lt;/p&gt;
&lt;p&gt;
The WordPress philosophy has been not to add any additional title attributes, due to their negative impact on accessibility. We discussed this ticket in the weekly bug scrub for accessibility, and have decided this is not something we'll add. There are many other ways to incorporate title attributes, if you wish to, or you can choose a more accessible route by creating accessible tooltips that aren't dependent on a mouse to access.
&lt;/p&gt;
&lt;p&gt;
Here are a couple resources to help with that:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.nngroup.com/articles/icon-usability/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.nngroup.com/articles/icon-usability/&lt;/a&gt;
&lt;a class="ext-link" href="http://heydonworks.com/practical_aria_examples/#input-tooltip"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://heydonworks.com/practical_aria_examples/#input-tooltip&lt;/a&gt;
&lt;a class="ext-link" href="http://accessibility.athena-ict.com/aria/examples/tooltip.shtml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://accessibility.athena-ict.com/aria/examples/tooltip.shtml&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thank you!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:42:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:75/1472492562493911</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472492561000163"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:40:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:5/1472492441818688</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472492440000136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:51/1472491874185370</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472491872000126"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:30:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724#comment:6/1472491809363226</guid>
      <description>wontfix: &lt;p&gt;
Thanks Josh.  Over the last number of releases, WordPress has made an explicit decision to &lt;a href="https://core.trac.wordpress.org/query?summary=~Remove+title+attribute&amp;amp;col=id&amp;amp;col=summary&amp;amp;col=milestone&amp;amp;col=owner&amp;amp;col=type&amp;amp;col=status&amp;amp;col=priority&amp;amp;desc=1&amp;amp;order=id"&gt;remove title attributes&lt;/a&gt; through out core.  The &lt;a class="ext-link" href="https://www.w3.org/TR/html/dom.html#the-title-attribute"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;W3C explicitly points out that title attributes can be problematic&lt;/a&gt; in the HTML spec. If the tester you worked with comes back with some more information, please comment and share it.  Conversation can always continue while ticket is closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37650 (Title attribute for comment reply link) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37650#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37650#comment:3/1472491577220609</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472491574000086"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:24:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:5/1472491442459506</guid>
      <description>&lt;p&gt;
Although this isn't a patch we'll be able to use, thanks for your contribution! If you have the time to create a patch that changes this to an explicit label, that would be awesome! Thank you for contributing!
&lt;/p&gt;
&lt;p&gt;
(And yes, I did cut and paste this comment from the other ticket...)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:23:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:6/1472491410848869</guid>
      <description>&lt;p&gt;
Although this isn't a patch we'll be able to use, thanks for your contribution! If you have the time to create a patch that changes this to an explicit label, that would be awesome! Thank you for contributing!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37724 (The links in the W (WordPress logo) admin bar dropdown do not have ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37724#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37724#comment:5/1472491376668341</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472491375000074"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:5/1472491217414779</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37649" title="#37649: defect (bug): Bind `label`s to form controls in Tools &amp;gt; Export screen (closed: invalid)"&gt;#37649&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:19:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:4/1472491180841110</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As noted in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37648" title="#37648: defect (bug): Bind label to Plugins &amp;gt; Install search input field (closed: invalid)"&gt;#37648&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Because this field is labeled implicitly, adding the for and id attributes doesn't accomplish anything. However, if the label were changed so it did *not* wrap the input, then the for and id attributes were added, this would improve accessibility for users of voice input software.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:13:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:12/1472490828964036</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472490826000058"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:09:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:13/1472490588444100</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472490586000046"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:3/1472490566212062</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34923 (Allow users to more seamlessly create page-based nav menus during ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34923#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34923#comment:81/1472490278709889</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1472490276000030"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37648 (Bind label to Plugins &gt; Install search input field) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:03:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37648#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37648#comment:4/1472490195555939</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472490192000018"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37649 (Bind `label`s to form controls in Tools &gt; Export screen) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 17:02:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37649#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37649#comment:2/1472490170660981</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1472490168000015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37414 (Use `get_network()` instead of global `$current_site`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 16:25:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37414#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37414#comment:4/1472487951867460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37414/37414.diff" title="Attachment '37414.diff' in Ticket #37414"&gt;37414.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37414/37414.diff" title="Download"&gt;​&lt;/a&gt; I replaced all instances of &lt;code&gt;get_current_site()&lt;/code&gt; with &lt;code&gt;get_network()&lt;/code&gt;, plus some related adjustments, like changing internal variable names from &lt;code&gt;$current_site&lt;/code&gt; to &lt;code&gt;$current_network&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
While &lt;code&gt;get_network()&lt;/code&gt; is not available on some of these functions, this should not be a problem since there are &lt;code&gt;is_multisite()&lt;/code&gt; checks in place that prevent it from being called. This was similar with &lt;code&gt;get_current_site()&lt;/code&gt; as well, so I was not sure why the function was moved in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38388" title="Multisite: move `get_current_site()` to `load.php` so that it can be ..."&gt;38388&lt;/a&gt;. The global &lt;code&gt;$current_site&lt;/code&gt; is not available on non-multisite, so I think that function should remain in an &lt;code&gt;ms-*.php&lt;/code&gt; file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37414.diff attached to Ticket #37414</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 16:18:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37414/37414.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37414/37414.diff/1472487506804582</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) reopened</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 29 Aug 2016 16:08:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:4/1472486914894805</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37523#comment:3" title="Comment 3"&gt;TimothyBlynJacobs&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This broke unit tests that I have that use the &lt;code&gt;Basic_Object&lt;/code&gt; class in a test since they are now only loaded in that test file instead of the functions file. Could the require calls be moved to the functions file so those classes are always available?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37523 (Unit tests: Move classes out of includes/functions.php into their own file) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:59:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37523#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37523#comment:3/1472486350222228</guid>
      <description>&lt;p&gt;
This broke unit tests that I have that use the &lt;code&gt;Basic_Object&lt;/code&gt; class in a test since they are now only loaded in that test file instead of the functions file. Could the require calls be moved to the functions file so those classes are always available?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:4/1472486001239559</guid>
      <description>&lt;p&gt;
Refreshed patch resets the cursor style to &lt;code&gt;default&lt;/code&gt; if the input field is, by chance, disabled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35552.diff attached to Ticket #35552</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:52:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35552/35552.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35552/35552.diff/1472485938254738</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:3/1472485413023071</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35552 (Added pointer cursor on theme, plugin, and media uploader) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:40:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35552#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35552#comment:2/1472485237149741</guid>
      <description>&lt;p&gt;
Probably, the reason why these file upload inputs are not styled is because, historically, they have always been very difficult if not impossible to style due to the fact this kind of inputs depends on the operating system, especially the "browse" button. Modern browsers allow some more styling through the shadow-DOM and exotic proprietary CSS selectors but honestly I think it's better to stay away from that and do just what is proposed in this ticket :)
Using the pointer cursor is a nice, small, improvement and I don't see any reason why it shouldn't be done. +1 from me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37413 (Use `get_site()` instead of global `$current_blog`) closed</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:38:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37413#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37413#comment:2/1472485132846661</guid>
      <description>invalid: &lt;p&gt;
I just searched through the WordPress codebase and actually wasn't able to find any occurrence of the &lt;code&gt;$current_blog&lt;/code&gt; global where the code was not part of the global scope anyway. Therefore I would consider this an invalid ticket - when I opened it, I assumed there were cases where this change was necessary, so it's great that there aren't. :)
&lt;/p&gt;
&lt;p&gt;
Although I mentioned this in the ticket description, I don't think we should (and even can) replace &lt;code&gt;get_current_blog_id()&lt;/code&gt; occurrences. While it would be nice for more usage of current naming conventions in the code, &lt;code&gt;get_current_blog_id()&lt;/code&gt; is easier to use than &lt;code&gt;get_site()-&amp;gt;id&lt;/code&gt; and, more importantly, also works outside of Multisite.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>dnaber-de</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:37:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:118</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:118/1472485061117601</guid>
      <description>&lt;p&gt;
Well, everywhere you filter an object instance, plugins are able to compromise the type (and some doing so by now). So this problem already exists. Bad code can pretty much break anything in some way, that should not influence code development.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>achbed</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:3/1472484887541723</guid>
      <description>&lt;p&gt;
What's interesting is that the individual posts are loaded and cached to the object cache individually, but the combined query result is what is controlled via the &lt;code&gt;cache_results&lt;/code&gt; parameter. This seems to meet the defined parameter intent because it's not caching the full result of the query.  If the posts themselves change enough that you can't use object caching I'd be truly surprised.
&lt;/p&gt;
&lt;p&gt;
If you want to prevent the posts themselves from caching, that appears to be a different request and intent.  Maybe an additional &lt;code&gt;cache_posts&lt;/code&gt; parameter to control that piece of the caching puzzle?
&lt;/p&gt;
&lt;p&gt;
We should update the docs at the very least to explain this behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:4/1472484568693893</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oops.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:28:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:3/1472484531507835</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37867#comment:1" title="Comment 1"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Which IDE are you using? This sounds like something that an IDE should be able to handle easily without needing to be prompted by a potentially &lt;em&gt;very&lt;/em&gt; long list of &lt;code&gt;@method&lt;/code&gt; comments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
PhpStorm. It is only 3 method comments. I hope the patch makes it more clear, maybe my explanation wasn't very good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:27:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:2/1472484475798413</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37867/37867.diff" title="Attachment '37867.diff' in Ticket #37867"&gt;37867.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37867/37867.diff" title="Download"&gt;​&lt;/a&gt; is a first pass, probably we should decide on a standard for the class descriptions here. What I used differs from the one for bookmarks, which is the only one that had a docblock. I have omitted &lt;code&gt;@since&lt;/code&gt; tags, although they could also be added, and &lt;a href="https://core.trac.wordpress.org/browser/trunk/tests/includes/factory.php?rev=25002"&gt;I guess would be 3.7&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:26:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867#comment:1/1472484389184566</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Which IDE are you using? This sounds like something that an IDE should be able to handle easily without needing to be prompted by a potentially &lt;em&gt;very&lt;/em&gt; long list of &lt;code&gt;@method&lt;/code&gt; comments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37866 (Introduce `$network_id` parameter in `get_user_count()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37866#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37866#comment:1/1472484284870823</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37866/37866.diff" title="Attachment '37866.diff' in Ticket #37866"&gt;37866.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37866/37866.diff" title="Download"&gt;​&lt;/a&gt; introduces the new parameter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37867.diff attached to Ticket #37867</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:24:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37867/37867.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37867/37867.diff/1472484279811044</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37866.diff attached to Ticket #37866</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:24:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37866/37866.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37866/37866.diff/1472484253520332</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37867 (Document return types for create/create_and_get/create_many() methods ...) created</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:22:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37867</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37867/1472484165569013</guid>
      <description>&lt;p&gt;
The &lt;code&gt;create()&lt;/code&gt;, &lt;code&gt;create_and_get()&lt;/code&gt;, and &lt;code&gt;create_many()&lt;/code&gt; methods are defined on the base factory class, and use other methods that are defined as abstract and implemented by the child classes. So just documenting the return types of the child class methods isn't really that helpful, and probably won't be picked up by IDEs. But by using &lt;code&gt;@method&lt;/code&gt; annotations in the class-level docblocks for each of the factories we can provide this information in a form that will be helpful to those of use who use intelligent IDEs, as well as any developer who is new to the tests.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37866 (Introduce `$network_id` parameter in `get_user_count()`) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:22:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37866</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37866/1472484138034230</guid>
      <description>&lt;p&gt;
The function &lt;code&gt;get_user_count()&lt;/code&gt; currently only supports checking for user count of the current network. Since it is easily possible to retrieve that value for other networks as well using &lt;code&gt;get_network_option()&lt;/code&gt; (since 4.4), I think we should support that functionality here as well by introducing an optional &lt;code&gt;$network_id&lt;/code&gt; parameter that will default to the current network.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37865" title="#37865: enhancement: Allow using the `$network_id` parameter of `get_blog_count()` again (closed: fixed)"&gt;#37865&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37762 (cache_results parameter doesn't prevent queried posts from being added ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:22:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37762#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37762#comment:2/1472484134880959</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mark-k. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472484131000242"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37865 (Allow using the `$network_id` parameter of `get_blog_count()` again) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37865#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37865#comment:1/1472483886323292</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37865/37865.diff" title="Attachment '37865.diff' in Ticket #37865"&gt;37865.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37865/37865.diff" title="Download"&gt;​&lt;/a&gt; makes use of the parameter again, by leveraging the power of &lt;code&gt;get_network_option()&lt;/code&gt;. In the DocBlock, I also added notices for both the 3.7 change (previously missing) and the new change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37865.diff attached to Ticket #37865</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:16:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37865/37865.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37865/37865.diff/1472483763488474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37865 (Allow using the `$network_id` parameter of `get_blog_count()` again) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 15:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37865</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37865/1472483651420557</guid>
      <description>&lt;p&gt;
The &lt;code&gt;$network_id&lt;/code&gt; parameter of &lt;code&gt;get_blog_count()&lt;/code&gt; has not been used since 3.1, and was officially deprecated in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/25113" title="Deprecate $network_id argument in get_blog_count(). props jeremyfelt. ..."&gt;25113&lt;/a&gt;. When looking at the history, it appears that this was done to be able to fully rely on &lt;code&gt;get_site_option()&lt;/code&gt; which does not support passing a network ID.
&lt;/p&gt;
&lt;p&gt;
However, now we have &lt;code&gt;get_network_option()&lt;/code&gt; which _does_ support a network ID, so I think we should un-deprecate this parameter and make use of it again (is that possible?).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:117/1472482753186608</guid>
      <description>&lt;p&gt;
I fear I might've not used my words right, and my intent wasn't very clear, so let me try again :)
&lt;/p&gt;
&lt;p&gt;
My worry is that per today's approach, core loads certain things up, and they are there; with auto loading, they're never really loaded until they are needed (if not already loaded), so if a plugin loads up the same class name, we won't load ours. There's currently a list of some 70-80 files from &lt;code&gt;wp-settings.php&lt;/code&gt; which are not pluggable in any way, but with this, those would also be re-enabled (unless I'm missing something here, and I would be happy to be told so :) )
&lt;/p&gt;
&lt;p&gt;
This increases the probability of breakage, and we are enabling them to do so, we are "making core pluggable" (which is a terminology I like for this) by allowing replacement of previously non-replaceable classes, and it means even something simple like a bugfix to a class in a point release, which are automatically pushed, could result in unexpected behavior one way or another.
&lt;/p&gt;
&lt;p&gt;
You're right that we shouldn't let other plugin or theme developers affect how we implement things, but we DO NEED to take user expectations into consideration, and users won't know what's going on when one plugin declares a core class which another plugin relies on later down the line and gets a whole different behavior because the first one to load their own isn't a carbon copy of core, or they both try to declare that same class because core is pluggable now because we never load up core versions of classes if they are already declared.
From a users point of view, their site is now broken, and they may not be tech savvy enough to fix it (because a fix to a fatal error requires hands on modifications one way or another), and this would be on us, we enabled them to break it this badly and if we can let them break it, we should at least make an effort to help prevent it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:4/1472482638633339</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This appears to be an issue with the Spanish translation. It's missing the &lt;code&gt;%6$s&lt;/code&gt; placeholder which adds the &lt;code&gt;update-link&lt;/code&gt; class attribute which the shiny updater uses.
&lt;/p&gt;
&lt;p&gt;
There's &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/es/default?filters%5Bterm%5D=There+is+a+new+version&amp;amp;filters%5Bstatus%5D=either"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;no translation listed on translate.wordpress.org&lt;/a&gt; for the phrase &lt;code&gt;There is a new version of %1$s available. &amp;lt;a href="%2$s" %3$s&amp;gt;View version %4$s details&amp;lt;/a&amp;gt; or &amp;lt;a href="%5$s" %6$s&amp;gt;update now&amp;lt;/a&amp;gt;.&lt;/code&gt; for Spanish (&lt;code&gt;es_ES&lt;/code&gt;), yet a translation does appear in the downloaded translation file: &lt;code&gt;Hay disponible una nueva versión de %1$s. &amp;lt;a href=\"%2$s\" class=\"thickbox\" title=\"%3$s\"&amp;gt;Ver los detalles de la versión %4$s&amp;lt;/a&amp;gt; o &amp;lt;a href=\"%5$s\"&amp;gt;actualízala ahora&amp;lt;/a&amp;gt;.&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
@ocean90 Can you take a look? This is the third issue we've seen where a translation doesn't have the correct placeholder and it's being allowed through somehow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:3/1472481624004856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Sorry @leemon, I misunderstood your original report. The update is successfully performed, but uses the bleak old updater instead of the shiny new updater.
&lt;/p&gt;
&lt;p&gt;
I've confirmed this is the case. Clicking the &lt;code&gt;actualízala ahora&lt;/code&gt; link takes you to the bleak updates screen instead of performing a shiny update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:4/1472480506617079</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've been playing around with this behaviour for a few days and I now have a patch.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34084/34084.patch" title="Attachment '34084.patch' in Ticket #34084"&gt;34084.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34084/34084.patch" title="Download"&gt;​&lt;/a&gt; does the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Logs the user in and redirects them to the admin area as soon as WordPress is installed.
&lt;/li&gt;&lt;li&gt;Falls back to displaying the existing "Success!" message if headers have been sent (eg. from a malformed &lt;code&gt;wp-config.php&lt;/code&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36215" title="#36215: enhancement: Friendlier &amp;#34;headers already sent&amp;#34; error message on wp-login.php (closed: wontfix)"&gt;#36215&lt;/a&gt;) which would otherwise result in a white screen of death.
&lt;/li&gt;&lt;li&gt;Correctly populates the fallback value for &lt;code&gt;COOKIEHASH&lt;/code&gt; during bootstrap, which is otherwise an empty string during installation (due to lack of a &lt;code&gt;siteurl&lt;/code&gt; option). This allows the correct cookie to be set when logging the user in.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
What needs testing:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Password managers:&lt;/strong&gt; I've been testing with 1Password. If you save your login when prompted to, then your credentials are correctly presented when subsequently visiting the login screen. One thing to note is that the form field names on the installation screen differ from those on the login screen, so some password managers may not deal with this so well. Installation and subsequent login should be tested with other password managers such as LastPass, KeePass, and Dashlane, and built-in browser password managers (Chrome, Firefox, Edge) on desktop and mobile. The intent here is to ensure that password management works equally well as it does now, given that the form fields have different names. I'm 99% sure it'll be ok.
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Welcome screen:&lt;/strong&gt; The "Welcome to WordPress!" panel on the dashboard is now the first thing people see after installing WordPress. It takes the place of the "Success!" message. Does this panel need further improvement for UX purposes? (If so, it should probably go into a separate ticket.) See also the focus on NUX.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 14:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:2/1472479834685688</guid>
      <description>&lt;ul&gt;&lt;li&gt;No errors reported in PHP's error log
&lt;/li&gt;&lt;li&gt;No JS errors reported in browser's console
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've set both WP_DEBUG and SCRIPT_DEBUG to true
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34084.patch attached to Ticket #34084</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34084/34084.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34084/34084.patch/1472479183878385</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:3/1472479142900509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:57:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864#comment:1/1472479065649871</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, @leemon.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Are you able to take a look in PHP's error log and see if there are any errors being reported?
&lt;/li&gt;&lt;li&gt;Are there any JavaScript errors being reported in your browser's console?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36215 (Friendlier "headers already sent" error message on wp-login.php) updated</title>
      
        <dc:creator>juanfra</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36215#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36215#comment:6/1472478462662059</guid>
      <description>&lt;p&gt;
Good! That looks great. The only thing (from what I've tested) is that the error message is displayed when somebody goes (or is redirected) to &lt;code&gt;wp-login.php&lt;/code&gt; directly. If you visit &lt;code&gt;wp-admin/&lt;/code&gt; there's not any kind of notice, and you get the php error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>update.jpg attached to Ticket #37864</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37864/update.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37864/update.jpg/1472477371645367</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37864 (No shiny update when updating a plugin in a non-English site) created</title>
      
        <dc:creator>leemon</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37864</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37864/1472477344606927</guid>
      <description>&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Set "Spanish" as Site Language
&lt;/li&gt;&lt;li&gt;Click the "actualízala ahora" link in any non-updated plugin in the Plugins screen
&lt;/li&gt;&lt;li&gt;No Shiny Update, but Bleak Screen of Sadness
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36215 (Friendlier "headers already sent" error message on wp-login.php) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:13:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36215#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36215#comment:5/1472476407966572</guid>
      <description>wontfix: &lt;p&gt;
It turns out that this functionality is already in place. See the above screenshot.
&lt;/p&gt;
&lt;p&gt;
I thought about suppressing the &lt;code&gt;Cannot modify header information - headers already sent&lt;/code&gt; errors that appear if error output is enabled, but this actually proves to be a very effective phrase to search for in addition to following the links in the above message.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Screen Shot 2016-08-29 at 14.10.51.png attached to Ticket #36215</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36215/Screen%20Shot%202016-08-29%20at%2014.10.51.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36215/Screen%20Shot%202016-08-29%20at%2014.10.51.png/1472476275599692</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37075 (get_terms() argument documentation should point to ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 29 Aug 2016 13:02:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37075#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37075#comment:2/1472475745346821</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
All yours :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:55:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:17/1472475331503097</guid>
      <description>&lt;p&gt;
@dd32 &lt;code&gt;function_exists()&lt;/code&gt; &lt;a class="ext-link" href="https://secure.php.net/manual/en/function.function-exists.php#refsect1-function.function-exists-notes"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;doesn't detect disabled functions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;Note:&lt;/strong&gt;
A function name may exist even if the function itself is unusable due to configuration or compiling options (with the image functions being an example).
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:116/1472474211302755</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:113" title="Comment 113"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is the part that worries me, you say they shouldn't, I agree. But from experience, they will, they most definitely will.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with @schlessera - I don't think it's a good idea to base code decisions in Core on how developers might misuse it. There's always ways that someone can mess up WordPress by doing things in a way that are not intended to be handled that way. Anything like that falls under the second type of error condition and should fatally fail if possible (so that they find out it's wrong during development) or be forbidden by guidelines like "Writing a Plugin" (where it is already stated that one should use a custom prefix for custom stuff).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just look at 4.6 which had this with a single generically named function for &lt;code&gt;the_post_thumbnail_caption&lt;/code&gt; which themes and plugins were already using, already declared function and classes means server error, this can't be fixed without accessing the file system in some way, which is a technical step many of our users are not comfortable making (and we shouldn't force upon them if we can avoid it).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is an example of exactly the above. A plugin or theme that declares such a function (especially without a &lt;code&gt;function_exists&lt;/code&gt; check) is most certainly badly developed to some degree. These plugins and themes will always exist, and us not making it easier for them to hijack stuff will not make them go away.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) reopened</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:15/1472473559646974</guid>
      <description>&lt;p&gt;
Fixed in trunk. Reopening for minor.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) closed</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:14/1472473449914755</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38433" title="Post Thumbnails: Prevent post thumbnail previews from spilling into ..."&gt;38433&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Post Thumbnails: Prevent post thumbnail previews from spilling into other images.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;, when previewing a page with a secondary loop, all post&lt;br /&gt;
thumbnails would be filtered to display the post thumbnail for the&lt;br /&gt;
page being previewed. This ensures &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt;&lt;br /&gt;
is only applied if the &lt;code&gt;$post_id&lt;/code&gt; of the post meta being filtered is&lt;br /&gt;
equal to the post or page being previewed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swisspidy, joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37697" title="#37697: defect (bug): Strange behavior with thumbnails on preview in 4.6 (closed: fixed)"&gt;#37697&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38433]: Post Thumbnails: Prevent post thumbnail previews from spilling into ...</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 29 Aug 2016 12:24:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38433/1472473449397501</guid>
      <description>&lt;p&gt;
Post Thumbnails: Prevent post thumbnail previews from spilling into other images.
&lt;/p&gt;
&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38118" title="Post Thumbnails: Only update featured images when saving a post.
 ..."&gt;[38118]&lt;/a&gt;, when previewing a page with a secondary loop, all post
thumbnails would be filtered to display the post thumbnail for the
page being previewed. This ensures &lt;code&gt;_wp_preview_post_thumbnail_filter()&lt;/code&gt;
is only applied if the &lt;code&gt;$post_id&lt;/code&gt; of the post meta being filtered is
equal to the post or page being previewed.
&lt;/p&gt;
&lt;p&gt;
Props swisspidy, joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37697" title="#37697: defect (bug): Strange behavior with thumbnails on preview in 4.6 (closed: fixed)"&gt;#37697&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 11:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:2/1472471985635801</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38432" title="Comments: Add support for all HTTP protocol versions when returning a ..."&gt;38432&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Comments: Add support for all HTTP protocol versions when returning a 405 from &lt;code&gt;wp-comments-post.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37863" title="#37863: defect (bug): HTTP/1.1 defined header in wp-comments-post.php (closed: fixed)"&gt;#37863&lt;/a&gt;&lt;br /&gt;
Props tnash&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38432]: Comments: Add support for all HTTP protocol versions when returning a ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 11:59:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38432/1472471985139377</guid>
      <description>&lt;p&gt;
Comments: Add support for all HTTP protocol versions when returning a 405 from &lt;code&gt;wp-comments-post.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37863" title="#37863: defect (bug): HTTP/1.1 defined header in wp-comments-post.php (closed: fixed)"&gt;#37863&lt;/a&gt;
Props tnash
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 11:55:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863#comment:1/1472471755559731</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for the report, Tim!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>DrProtocols</dc:creator>

      <pubDate>Mon, 29 Aug 2016 09:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:76/1472462442763090</guid>
      <description>&lt;p&gt;
Whilst a little late to the game I would say resolving this issue (and perhaps if the resolution also extended to transliterating all international characters in a uploaded filenames and ensuring all lower-case) would be a massive win in terms of site portability since issues can often arise with character set support on different platforms and also case-sensitive vs case-insensitive filesystems.
&lt;/p&gt;
&lt;p&gt;
The IEEE Portable Filename Character Set (&lt;a class="ext-link" href="http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap03.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap03.html&lt;/a&gt; section 3.276) but with the added condition of lower-case only is an ideal goal for any uploaded media file.
&lt;/p&gt;
&lt;p&gt;
To paraphrase Shakespeare, "A file by any other name still displays the same".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 08:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:115</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:115/1472460725754402</guid>
      <description>&lt;p&gt;
I feel there are differences in how people perceive "error conditions" and their use/handling in software development.
&lt;/p&gt;
&lt;p&gt;
The way I see it, there are two general types of error conditions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Error conditions that are due to something in the required context of your piece of code not being in the state you were expecting. This is stuff like the DB not being accessible, a query that does not produce results, etc... These types of error conditions need to be gracefully handled, as they occur at runtime for otherwise perfectly valid code. A 100% bug-free (yeah, right) plugin can still be hit by a DB connection issue.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Error conditions that are due to code that is logically broken, in whatever way. This is stuff like a plugin using the wrong function, omitting required arguments, overriding what is not to be overridden, etc... These types of errors need to break as soon and as hard as possible. You don't want to continue "somewhat running correctly" with broken code, only to have it completely failed a month later on the production server. The more critical your code base fails with such errors, the better.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So, under these assumptions, someone overriding a WordPress Core class, and doing stuff that is not meant to be done, is creating error conditions of the second type. Ideally, this would reliably throw a hundred error messages at them. This is currently not the case, either with or without autoloader. This does not mean however that we should try to "avoid" throwing errors in such a case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 29 Aug 2016 08:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:114</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:114/1472458193997698</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:113" title="Comment 113"&gt;Clorith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I was thinking of ways we could possibly sign core classes so we don't auto load plugin/theme ones as replacements […]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That way exists already: namespaces, available since PHP 5.3.
&lt;/p&gt;
&lt;p&gt;
But I agree with @schlessera: Whoever tries to replace core classes will run into many problems immediately, and their code &lt;em&gt;should&lt;/em&gt; break. This is not a problem the core has to resolve.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33349 (Synchronous XMLHttpRequest on the main thread is deprecated) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 29 Aug 2016 07:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33349#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33349#comment:13/1472455158633382</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by iseulde. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1472455155000011"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37863 (HTTP/1.1 defined header in wp-comments-post.php) created</title>
      
        <dc:creator>tnash</dc:creator>

      <pubDate>Mon, 29 Aug 2016 07:17:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37863/1472455021506545</guid>
      <description>&lt;pre class="wiki"&gt;if ( 'POST' != $_SERVER['REQUEST_METHOD'] ) {
        header('Allow: POST');
        header('HTTP/1.1 405 Method Not Allowed');
        header('Content-Type: text/plain');
        exit;
}
&lt;/pre&gt;&lt;p&gt;
Should ideally be protocol agnostic, to support HTTP/2 in line with other files this should probably be
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'POST' != $_SERVER['REQUEST_METHOD'] ) {
$protocol = $_SERVER['SERVER_PROTOCOL'];
       	if ( ! in_array( $protocol, array( 'HTTP/1.1', 'HTTP/2', 'HTTP/2.0' ) ) ) {
                $protocol = 'HTTP/1.0';
       	}
        header('Allow: POST');
        header("$protocol 405 Method Not Allowed");
        header('Content-Type: text/plain');
        exit;
}
&lt;/pre&gt;&lt;p&gt;
in line with other files, which can't use wp_get_server_protocol(); prior to wp_load.php
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Mon, 29 Aug 2016 06:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:113</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:113/1472453903132108</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:112" title="Comment 112"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another thing that needs clarification: if we have autoloading, would a plugin be able to stop some of the core classes from loading, noop or replace them etc. That would be a backwards compatibility disaster down the road :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, a plugin could potentially do this if it would &lt;code&gt;require&lt;/code&gt; a class with the same name before it was loaded through the autoloader. However, I can't see why a plugin would want to do that, and it would probably break half of the time, because autoloading means there's no set point in time where you know the class was or wasn't loaded any more. Also, I think there's a number of classes and functions that contain a &lt;code&gt;class_exists()&lt;/code&gt; check before being loaded, so these could just as easily be replaced by a plugin version.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the part that worries me, you say they shouldn't, I agree. But from experience, they will, they most definitely will.
&lt;/p&gt;
&lt;p&gt;
I can guarantee that this will lead to an increase in broken setups, plugins and themes will re-declare classes, they won't use &lt;code&gt;class_exists&lt;/code&gt; (because why should they, core will only make this a problem if core is loaded before them, there's not much consideration for other plugins and themes in that regard), they will have class name collisions with other plugins that are trying to be just as clever.
&lt;/p&gt;
&lt;p&gt;
Just look at 4.6 which had this with a single generically named function for &lt;code&gt;the_post_thumbnail_caption&lt;/code&gt; which themes and plugins were already using, already declared function and classes means server error, this can't be fixed without accessing the file system in some way, which is a technical step many of our users are not comfortable making (and we shouldn't force upon them if we can avoid it).
&lt;/p&gt;
&lt;p&gt;
I was thinking of ways we could possibly sign core classes so we don't auto load plugin/theme ones as replacements, but that won't work if they just do an include or require right off the bat, which is the more likely scenario than them piggybacking off a core auto loader.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Mon, 29 Aug 2016 06:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:112</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:112/1472452749050757</guid>
      <description>&lt;p&gt;
Regarding the difficulties with the build-time move from &lt;code&gt;src/*&lt;/code&gt; paths to final paths, there is an alternative solution:
We could use a custom autoloader generator that does not use relative paths, but rather paths based on a set constant, like &lt;code&gt;ABSPATH&lt;/code&gt;. This would remove any assumptions about the build steps changing the folder hierarchy, as long as the surrounding code always properly defines this constant.
&lt;/p&gt;
&lt;p&gt;
In reply to @azaozz :
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Classes autoloading is very nice for OOP apps. However WordPress is not an OOP app. It's true, there are about 200 classes. Many of them are just containers for namespacing the functions inside. These are not meant to be extended or used in any OOP way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Autoloading has several benefits out of the box, even with a more procedural codebase like WordPress:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Instead of loading everything that might be used within a given code path (which often ends up being almost the entire code base), you effectively only load and process the exact amount of code you need, when you need it. This will most probably reduce (only benchmarks can tell for sure) memory consumption and processor work, and result in faster load times. I expect that especially AJAX calls (which often only do a small task and immediately die) to see drastic improvements, once the move to autoloading is completed.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The code does not need to know the path to classes anymore. This removes a lot of hard-coded strings and assumptions, and makes moving and reorganizing the code a breeze. After work on the autoloader is completed, moving files around would not be a breaking change anymore, as only the autoloader generator should need to know about their location in the first place.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Usage of an autoloader makes a lot of "timing" related bugs obvious, where code was only working "by chance" because the exact execution path of a section of code was necessary to have the correct files loaded when they were used.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;An autoloader makes the inclusion of third-party libraries (of which there are a number already included within WP Core) much easier, if each of the libraries just knows how to include its own autoloadable assets. This way, your code does not need to know anything about the actual file layout of a third-party library, it just needs to know what initial class/function to use.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The order of loading becomes irrelevant, as everything is loaded at the point where it is required.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Not all of these benefits can be completely delivered with this first iteration, because the code base is not yet fully adapted to make the best use of an autoloader. But already having an autoloader is a first necessary step, and it makes a lot of other changes to the code much easier.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are also about 4750 "loose" functions. What does autoloading do for them?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not much, indeed. Their files can be added to the Composer autoloader, but this will just immediately &lt;code&gt;include&lt;/code&gt; then when the autoloader is loaded.
&lt;/p&gt;
&lt;p&gt;
However, this does not in any way reduce the other benefits that the autoloader provides. The fact that one half of the code base will not become faster and lighter does not make it useless to have the other half become faster and lighter. And I think it is obvious that there's a clear trend towards OOP with the more recent code additions, so the benefits will only grow with time.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Another thing that needs clarification: if we have autoloading, would a plugin be able to stop some of the core classes from loading, noop or replace them etc. That would be a backwards compatibility disaster down the road :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, a plugin could potentially do this if it would &lt;code&gt;require&lt;/code&gt; a class with the same name before it was loaded through the autoloader. However, I can't see why a plugin would want to do that, and it would probably break half of the time, because autoloading means there's no set point in time where you know the class was or wasn't loaded any more. Also, I think there's a number of classes and functions that contain a &lt;code&gt;class_exists()&lt;/code&gt; check before being loaded, so these could just as easily be replaced by a plugin version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37697 (Strange behavior with thumbnails on preview in 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 29 Aug 2016 06:02:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37697#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37697#comment:13/1472450520846254</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We should get this into trunk to get more feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36908 (Customizer menus and widgets "search" usability and visual improvements) updated</title>
      
        <dc:creator>ryankienstra</dc:creator>

      <pubDate>Mon, 29 Aug 2016 04:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36908#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36908#comment:6/1472446753627879</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Pull Request&lt;/strong&gt;
&lt;em&gt;Request For Review&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Could you please review this &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/153"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;GitHub pull request&lt;/a&gt;? Here's a &lt;a class="ext-link" href="https://cloudup.com/cFRQ_Zxg8QZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;screenshot&lt;/a&gt; of the search field that appears on clicking a menu's "Add Items" button.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/153/commits/9d9ffa54825e738d3a144b14c520b77328696978"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Commit 9d9ffa54&lt;/a&gt; : Create &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-49c6fb18cfad3f9946aa8ca15b809b3fR770"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;search icon&lt;/a&gt; in &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, using neighbor &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-6bdd5041777c50e624f1d0beae2e0b7cR1453"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;:after&lt;/a&gt;. It's not possible to set this as a &lt;code&gt;:before&lt;/code&gt; or &lt;code&gt;:after&lt;/code&gt; psuedo-element of the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-6bdd5041777c50e624f1d0beae2e0b7cR1425"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Increase padding-left&lt;/a&gt; from &lt;code&gt;10px&lt;/code&gt; to &lt;code&gt;30px&lt;/code&gt; to create space for this. Mainly copy styling of &lt;code&gt;.clear-results&lt;/code&gt; in &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/css/customize-nav-menus.css#L626"&gt;customize-nav-menus.css#L626&lt;/a&gt;. In menu search field, &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/compare/trac-36908?expand=1#diff-79f9bc58f474eba515dbb6e2822b7a22R628"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;increase clickable area&lt;/a&gt; of x icon.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
One open question is whether the "widgets search field" should have the "same custom control" (red "x" button). So far, this only appears in the &lt;a class="ext-link" href="https://cloudup.com/cFRQ_Zxg8QZ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;menu search field&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This ticket's description states:
&lt;code&gt;&lt;/code&gt;&lt;code&gt;Not sure about the widgets search field, ideally it would be great to pair it with the menu items search and implement the same custom control to clear the field&lt;/code&gt;&lt;code&gt;&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37827 (Some classes still need to be moved into their own file) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 04:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37827#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37827#comment:15/1472445958618888</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37827#comment:8" title="Comment 8"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38364" title="i18n: move `is_rtl()` to `l10n.php` (which loads way earlier). Load ..."&gt;38364&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
i18n: move &lt;code&gt;is_rtl()&lt;/code&gt; to &lt;code&gt;l10n.php&lt;/code&gt; (which loads way earlier). Load &lt;code&gt;WP_Locale&lt;/code&gt; file in &lt;code&gt;wp-settings.php&lt;/code&gt;. Retire &lt;code&gt;wp-includes/locale.php&lt;/code&gt; - it only loaded the class and the one function, &lt;code&gt;is_rtl()&lt;/code&gt;. If someone loaded this file for fun somewhere else, it would be a fatal error.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37827" title="#37827: enhancement: Some classes still need to be moved into their own file (closed: fixed)"&gt;#37827&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;
AFAICT this has caused a fatal when &lt;code&gt;wp_die()&lt;/code&gt; is called upon mu-plugin/plugin inclusion, as the function now exists much earlier than it can be called.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:16/1472440442883509</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:15/1472440327059449</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36697 (Combining the HTTP requests for obtaining the available nav menu items ...) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36697#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36697#comment:5/1472440324119570</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch above uses most of the original code and simply puts iterators in where needed. Keen for someone to review and help me align with WordPress preferred syntax.
&lt;/p&gt;
&lt;p&gt;
Also, open to suggestions for a cleaner way to manage the loading state of availableMenuItemContainer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:6/1472440148825535</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37335/37335.diff" title="Attachment '37335.diff' in Ticket #37335"&gt;37335.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37335/37335.diff" title="Download"&gt;​&lt;/a&gt; is my proposal here, which would need to correspond with the Theme Review Team agreeing to allow top-level links only if they're added via this hook or a custom section. A theme would do something along the lines of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'customize_themes_panel_header', function( $panel ) {
	echo '&amp;lt;span class="customize-action"&amp;gt;&amp;lt;a href="http://wordpress.org/"&amp;gt;' . __( 'Theme documentation', 'theme-slug' ) . '&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;';
});
&lt;/pre&gt;&lt;p&gt;
Note that the hook would move to a themes panel heading that is identical in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36697.diff attached to Ticket #36697</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36697/36697.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36697/36697.diff/1472440096324223</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36281 (Importer Fails to import menu items in PHP7) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36281#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36281#comment:5/1472439990197025</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Pull request: &lt;a class="ext-link" href="https://github.com/boonebgorges/wordpress-importer/pull/1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/boonebgorges/wordpress-importer/pull/1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
@boonebgorges I was going to mark this as resolved but I see the pull request was closed and not merged
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37335.diff attached to Ticket #37335</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 29 Aug 2016 03:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37335/37335.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37335/37335.diff/1472439835306153</guid>
      <description>&lt;p&gt;
Action hook in themes panel header.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:59:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:14/1472439554608435</guid>
      <description>&lt;p&gt;
re-open for 4.6.1
&lt;/p&gt;
&lt;p&gt;
I took a slightly different route, instead of checking if the function was disabled, simply called &lt;code&gt;function_exists()&lt;/code&gt; which in retrospect is the obvious method..
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37680 (PHP Warning: ini_get_all() has been disabled for security reasons) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37680#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37680#comment:13/1472439505724046</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38431" title="Bootstrap: Check that `ini_get_all()` exists before calling it, allows ..."&gt;38431&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: Check that &lt;code&gt;ini_get_all()&lt;/code&gt; exists before calling it, allows us to work around hosts who disable the function for "security purposes".&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38431]: Bootstrap: Check that `ini_get_all()` exists before calling it, allows ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38431/1472439505226200</guid>
      <description>&lt;p&gt;
Bootstrap: Check that &lt;code&gt;ini_get_all()&lt;/code&gt; exists before calling it, allows us to work around hosts who disable the function for "security purposes".
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37680" title="#37680: defect (bug): PHP Warning: ini_get_all() has been disabled for security reasons (closed: fixed)"&gt;#37680&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37768 (HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ...) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:42:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37768#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37768#comment:9/1472438535665114</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37768 (HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ...) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37768#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37768#comment:8/1472438517401563</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38430" title="HTTP: Accept non-string values in cookies, fixing a regression since ..."&gt;38430&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP: Accept non-string values in cookies, fixing a regression since 4.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37768" title="#37768: defect (bug): HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ... (closed: fixed)"&gt;#37768&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38430]: HTTP: Accept non-string values in cookies, fixing a regression since ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:41:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38430</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38430/1472438516820465</guid>
      <description>&lt;p&gt;
HTTP: Accept non-string values in cookies, fixing a regression since 4.5.
&lt;/p&gt;
&lt;p&gt;
Props swissspidy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37768" title="#37768: defect (bug): HTTP API No Longer Accepts Integer and Float Values for the 'cookies' ... (closed: fixed)"&gt;#37768&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:11/1472438023395864</guid>
      <description>&lt;p&gt;
I took a slightly different route, as this is only going to be a temporary measure (hopefully).
&lt;/p&gt;
&lt;p&gt;
re-opening for 4.6.1 merge
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:10/1472437968723641</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38429" title="HTTP: Handle an edgecase within the URI parsing library included in ..."&gt;38429&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
HTTP: Handle an edgecase within the URI parsing library included in Requests, where if a double slash exists at the start of the path the URL is passed to cURL malformed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90 for initial patch.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37733" title="#37733: defect (bug): `cURL error 3: malformed` for remote requests since 4.6 (closed: fixed)"&gt;#37733&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38429]: HTTP: Handle an edgecase within the URI parsing library included in ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38429/1472437968213740</guid>
      <description>&lt;p&gt;
HTTP: Handle an edgecase within the URI parsing library included in Requests, where if a double slash exists at the start of the path the URL is passed to cURL malformed.
&lt;/p&gt;
&lt;p&gt;
Props flixos90 for initial patch.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37733" title="#37733: defect (bug): `cURL error 3: malformed` for remote requests since 4.6 (closed: fixed)"&gt;#37733&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37862 (Permalink Bug in Editor) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37862#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37862#comment:1/1472437219710720</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37423" title="#37423: defect (bug): Permalink for pending post - get_sample_permalink_html bug (closed: fixed)"&gt;#37423&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37756 (Allow inline scripts on script aliases) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Mon, 29 Aug 2016 02:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37756#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37756#comment:3/1472436834287085</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37756#comment:2" title="Comment 2"&gt;pcfreak30&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@swissspidy why is this set to an older WP version?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Via &lt;a class="ext-link" href="https://make.wordpress.org/core/handbook/tutorials/trac/opening-a-ticket/#create-a-new-ticket"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/core/handbook/tutorials/trac/opening-a-ticket/#create-a-new-ticket&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="5"&gt;&lt;li&gt;&lt;strong&gt;Version&lt;/strong&gt;: The version of WordPress being used. Ideally, this would be the earliest affected or applicable version.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27994 (Erroneous plugin deactivation should be a manual action) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 29 Aug 2016 00:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27994#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27994#comment:7/1472432170997856</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37785 (WordPress asks to update to same (or older) plugin) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 29 Aug 2016 00:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37785#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37785#comment:3/1472431544693667</guid>
      <description>&lt;p&gt;
To me this looks like an old transient isn't being cleared because outgoing HTTP requests are being blocked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14310 (Make template hierarchy filterable) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:56:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14310#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14310#comment:83/1472428565329451</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38428" title="Themes: Correct the list of possible values for the dynamic portion of ..."&gt;38428&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Correct the list of possible values for the dynamic portion of the &lt;code&gt;{$type}_template_hierarchy&lt;/code&gt; and &lt;code&gt;{$type}_template&lt;/code&gt; filters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14310" title="#14310: enhancement: Make template hierarchy filterable (closed: fixed)"&gt;#14310&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38428]: Themes: Correct the list of possible values for the dynamic portion of ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38428/1472428564452876</guid>
      <description>&lt;p&gt;
Themes: Correct the list of possible values for the dynamic portion of the &lt;code&gt;{$type}_template_hierarchy&lt;/code&gt; and &lt;code&gt;{$type}_template&lt;/code&gt; filters.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14310" title="#14310: enhancement: Make template hierarchy filterable (closed: fixed)"&gt;#14310&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37756 (Allow inline scripts on script aliases) updated</title>
      
        <dc:creator>pcfreak30</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37756#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37756#comment:2/1472428509838466</guid>
      <description>&lt;p&gt;
@swissspidy why is this set to an older WP version?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33704 (Reduce reliance on wp_is_mobile()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33704#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33704#comment:6/1472428216281251</guid>
      <description>&lt;p&gt;
Yep, splitting this out into separate issues would be a good way to tackled it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24587 (Walker_Page and Walker_Nav_Menu not compatible) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24587#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24587#comment:15/1472427931311839</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'll have a go at this over the coming weeks. The wholesale change of &lt;code&gt;wp_parse_args()&lt;/code&gt; I mentioned in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/24587#comment:10" title="Comment 10"&gt;comment:10&lt;/a&gt; is not the solution, I'll try a targeted approach along those lines for nav/pages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:45:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:5/1472427922309131</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1472427920000093"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35206 (Allow theme authors to control white space between menu items) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35206#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35206#comment:30/1472427019528659</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35206#comment:29" title="Comment 29"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've not checked, but &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24587" title="#24587: defect (bug): Walker_Page and Walker_Nav_Menu not compatible (closed: wontfix)"&gt;#24587&lt;/a&gt; might affect this. Need to confirm whether &lt;code&gt;$args&lt;/code&gt; is an array or an object in every situation where it's used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I've looked over &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24587" title="#24587: defect (bug): Walker_Page and Walker_Nav_Menu not compatible (closed: wontfix)"&gt;#24587&lt;/a&gt;, within each walker &lt;code&gt;$args&lt;/code&gt; is consistent but it differs between the two. I've added some tests to ensure I don't (un)break this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37862 (Permalink Bug in Editor) created</title>
      
        <dc:creator>hemnathmouli</dc:creator>

      <pubDate>Sun, 28 Aug 2016 23:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37862</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37862/1472425849488006</guid>
      <description>&lt;p&gt;
The bug happens when I do this.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Page &amp;gt; Add new Page
&lt;/li&gt;&lt;li&gt;Enter the title ( eg. "That page" ) and press enter ( I don't need any content, because I will write page-that-page.php )
&lt;/li&gt;&lt;li&gt;Now If I visit http:example.com/that-page/ page shows 404
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Note: My permalink settings is "Common Settings" = "Post name"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33704 (Reduce reliance on wp_is_mobile()) updated</title>
      
        <dc:creator>curdin</dc:creator>

      <pubDate>Sun, 28 Aug 2016 22:46:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33704#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33704#comment:5/1472424410175061</guid>
      <description>&lt;p&gt;
Looking at the CSS a bit closer the use of .ios is usually to address browser quirks / performance. As @akibjorklund hinted at both .ios and .mobile appear to be replaceable by use of mediaqueries. Saying that if js will be used to inject .mobile we can split the replacement of .mobile into a separate ticket as there won't be any dependency.
Seems like given the broad use of wp_is_mobile() internal and by plugins it would make sense to split the tickets and then look at deprecating once all tickets are resolved?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 28 Aug 2016 22:40:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:41/1472424016717740</guid>
      <description>&lt;p&gt;
A report from "the wild": &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38279" title="Query: use composition for `$db` in `WP_Query`, removes need to import ..."&gt;[38279]&lt;/a&gt; broke a site I work on. But, there are a lot of steps to replicating what happened, and a plugin is involved. It might be impossible for core to account for a case like it.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;This site caches some &lt;code&gt;WP_Query&lt;/code&gt; objects as transients. The serialized &lt;code&gt;WP_Query&lt;/code&gt; now includes the &lt;code&gt;$db&lt;/code&gt; property.
&lt;/li&gt;&lt;li&gt;I have Query Monitor enabled, including its &lt;code&gt;QM_DB&lt;/code&gt; class.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;QM_DB&lt;/code&gt; keeps a trace of queries, and any objects in the trace are serialized into the transient, too.
&lt;/li&gt;&lt;li&gt;One of the classes on this site tries to prevent you from unserializing it by adding a &lt;code&gt;__wakeup()&lt;/code&gt; method with &lt;code&gt;wp_die()&lt;/code&gt;. That object was serialized in the trace, and when it was later unserialized via &lt;code&gt;get_transient()&lt;/code&gt;, it called &lt;code&gt;wp_die()&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I would also note that an exception would have been thrown when setting the transient if a closure had been in the trace: &lt;code&gt;'Serialization of 'Closure' is not allowed'&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37855-result.png attached to Ticket #37855</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 21:23:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37855/37855-result.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37855/37855-result.png/1472419433525353</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36624 (Add nicename__in and nicename__not_in to WP_User_Query) updated</title>
      
        <dc:creator>atomicadam</dc:creator>

      <pubDate>Sun, 28 Aug 2016 21:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36624#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36624#comment:7/1472418402632010</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36624#comment:6" title="Comment 6"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@atomicadam I have yet to, so don't let that stop you from taking a stab at it. It's mostly a copy-paste job from existing (don't forget the &lt;code&gt;orderby&lt;/code&gt; additions.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
sounds good, i'll see what I can come up with. thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36624 (Add nicename__in and nicename__not_in to WP_User_Query) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sun, 28 Aug 2016 20:53:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36624#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36624#comment:6/1472417625147058</guid>
      <description>&lt;p&gt;
@atomicadam I have yet to, so don't let that stop you from taking a stab at it. It's mostly a copy-paste job from existing (don't forget the &lt;code&gt;orderby&lt;/code&gt; additions.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37861 (Renaming of class files for consistency) created</title>
      
        <dc:creator>afragen</dc:creator>

      <pubDate>Sun, 28 Aug 2016 20:45:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37861</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37861/1472417107316907</guid>
      <description>&lt;p&gt;
I'm not sure how relevant this is in general, but with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt; shouldn't we at least follow the naming convention for the few class files left?
&lt;/p&gt;
&lt;p&gt;
A quick glance shows
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp-includes/class.wp-dependencies.php&lt;/code&gt; -&amp;gt; &lt;code&gt;wp-includes/class-wp-dependencies.php&lt;/code&gt;
&lt;code&gt;wp-includes/class.wp-scripts.php&lt;/code&gt; -&amp;gt; &lt;code&gt;wp-includes/class-wp-scripts.php&lt;/code&gt;
&lt;code&gt;wp-includes/class.wp-styles.php&lt;/code&gt; -&amp;gt; &lt;code&gt;wp-includes/class-wp-styles.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I'm not certain what type of breakage may occur, unless someone is loading these independently of core.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36624 (Add nicename__in and nicename__not_in to WP_User_Query) updated</title>
      
        <dc:creator>atomicadam</dc:creator>

      <pubDate>Sun, 28 Aug 2016 20:25:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36624#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36624#comment:5/1472415911145974</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36624#comment:3" title="Comment 3"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36624#comment:2" title="Comment 2"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we're going to add &lt;code&gt;nicename__*&lt;/code&gt;, it probably makes sense to do &lt;code&gt;login__*&lt;/code&gt; at the same time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure thing. I can work on a patch.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@johnjamesjacoby - you still working on this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33349 (Synchronous XMLHttpRequest on the main thread is deprecated) closed</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 28 Aug 2016 19:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33349#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33349#comment:12/1472413941050570</guid>
      <description>fixed: &lt;p&gt;
I forgot to link the commit and mark this as fixed. Apologies.
&lt;/p&gt;
&lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38425" title="Editor: Use Beacon API over sync request
See ..."&gt;[38425]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37075 (get_terms() argument documentation should point to ...) updated</title>
      
        <dc:creator>sjmur</dc:creator>

      <pubDate>Sun, 28 Aug 2016 19:49:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37075#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37075#comment:1/1472413773408891</guid>
      <description>&lt;p&gt;
Hey, I'd like to take this and fix the doc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37808 (Zero-width space stripped by TinyMCE again) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 19:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37808#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37808#comment:11/1472411301743176</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is fixed upstream and will be fixed in WordPress when we update TinyMCE in 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37832 (Using ?p=xxx on a posts page with an invalid post ID does not return a ...) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:58:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37832#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37832#comment:4/1472410734456449</guid>
      <description>&lt;p&gt;
Also related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37251" title="#37251: defect (bug): Not return 404 on front-page with option page and url `/page/2` (new)"&gt;#37251&lt;/a&gt; plus new one: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37862" title="#37862: defect (bug): Permalink Bug in Editor (new)"&gt;#37862&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37808 (Zero-width space stripped by TinyMCE again) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37808#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37808#comment:10/1472410538989148</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1472410537000005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37755 (Visual Editor: Weird unicode (vietnamese) characters display on ...) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37755#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37755#comment:16/1472410381940997</guid>
      <description>&lt;p&gt;
Reopen for 4.6.1 consideration.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37755 (Visual Editor: Weird unicode (vietnamese) characters display on ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37755#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37755#comment:15/1472410305294739</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38427" title="TinyMCE: change the default font for the `vi` locale to the same stack ..."&gt;38427&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
TinyMCE: change the default font for the &lt;code&gt;vi&lt;/code&gt; locale to the same stack as &lt;code&gt;he_IL&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props nmt90 for reporting and testing this.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37755" title="#37755: defect (bug): Visual Editor: Weird unicode (vietnamese) characters display on ... (closed: fixed)"&gt;#37755&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38427]: TinyMCE: change the default font for the `vi` locale to the same stack ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38427</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38427/1472410304444310</guid>
      <description>&lt;p&gt;
TinyMCE: change the default font for the &lt;code&gt;vi&lt;/code&gt; locale to the same stack as &lt;code&gt;he_IL&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props nmt90 for reporting and testing this.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37755" title="#37755: defect (bug): Visual Editor: Weird unicode (vietnamese) characters display on ... (closed: fixed)"&gt;#37755&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) reopened</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:40:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:15/1472409646625060</guid>
      <description>&lt;p&gt;
Reopen for 4.6.1.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37690 (Backspace causes jumping) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37690#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37690#comment:14/1472409600749341</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38426" title="Editor: fix jumpiness on pressing backspace and delete in the Text ..."&gt;38426&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: fix jumpiness on pressing backspace and delete in the Text editor.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37690" title="#37690: defect (bug): Backspace causes jumping (closed: fixed)"&gt;#37690&lt;/a&gt; for trunk.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38426]: Editor: fix jumpiness on pressing backspace and delete in the Text ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38426/1472409600241786</guid>
      <description>&lt;p&gt;
Editor: fix jumpiness on pressing backspace and delete in the Text editor.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37690" title="#37690: defect (bug): Backspace causes jumping (closed: fixed)"&gt;#37690&lt;/a&gt; for trunk.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:111</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:111/1472409378343374</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by afragen. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472409376000154"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38425]: Editor: Use Beacon API over sync request  See ...</title>
      
        <dc:creator>iseulde</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:28:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38425</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38425/1472408932887110</guid>
      <description>&lt;p&gt;
Editor: Use Beacon API over sync request
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://www.w3.org/TR/beacon/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/beacon/&lt;/a&gt; for more information.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22115 (Further Simplifying errors) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:18:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22115#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22115#comment:9/1472408319327044</guid>
      <description>wontfix: &lt;p&gt;
I'm going to close this in favour of the functionality remaining in a debugging plugin (as mentioned above, Query Monitor provides this). I don't want to increase the amount of memory that &lt;code&gt;wpdb&lt;/code&gt; uses on every database call, even if it is a small increase.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #17010 (Inconsistent handling of HTTP response codes) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17010#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17010#comment:14/1472407782585075</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35164 (Singular body class and main post post class) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35164#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35164#comment:14/1472407657656713</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34982 (New algorithm for displaying a hierarchical list of post objects in ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:07:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34982#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34982#comment:9/1472407633110723</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's try again :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37457 (Review usage of esc_attr_e()) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:05:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37457#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37457#comment:9/1472407503450040</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38424" title="I18N: Correct various instances of incorrect usage of `esc_attr_e()`.
 ..."&gt;38424&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
I18N: Correct various instances of incorrect usage of &lt;code&gt;esc_attr_e()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37457" title="#37457: defect (bug): Review usage of esc_attr_e() (closed: fixed)"&gt;#37457&lt;/a&gt;&lt;br /&gt;
Props henry.wright, afercia&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38424]: I18N: Correct various instances of incorrect usage of `esc_attr_e()`.  ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 18:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38424</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38424/1472407502915303</guid>
      <description>&lt;p&gt;
I18N: Correct various instances of incorrect usage of &lt;code&gt;esc_attr_e()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37457" title="#37457: defect (bug): Review usage of esc_attr_e() (closed: fixed)"&gt;#37457&lt;/a&gt;
Props henry.wright, afercia
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20899 (is_home() should be able to be true when is_feed()) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20899#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20899#comment:17/1472406826528801</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14310 (Make template hierarchy filterable) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14310#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14310#comment:82/1472406769732556</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37358 (Don't display errors during installation) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:49:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37358#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37358#comment:4/1472406546368328</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38423" title="Upgrade/Install: Don't display PHP errors during installation.
If a ..."&gt;38423&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade/Install: Don't display PHP errors during installation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If a user is installing WordPress for the first time and has set &lt;code&gt;WP_DEBUG&lt;/code&gt; to true, a PHP error during installation makes for a visually jarring experience.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37358" title="#37358: enhancement: Don't display errors during installation (closed: fixed)"&gt;#37358&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38423]: Upgrade/Install: Don't display PHP errors during installation.  If a ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:49:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38423</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38423/1472406545898033</guid>
      <description>&lt;p&gt;
Upgrade/Install: Don't display PHP errors during installation.
&lt;/p&gt;
&lt;p&gt;
If a user is installing WordPress for the first time and has set &lt;code&gt;WP_DEBUG&lt;/code&gt; to true, a PHP error during installation makes for a visually jarring experience.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37358" title="#37358: enhancement: Don't display errors during installation (closed: fixed)"&gt;#37358&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37852 (Drag&amp;drop doesn't work on Chrome) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:48:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37852#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37852#comment:1/1472406535073571</guid>
      <description>worksforme: &lt;p&gt;
Dragging image thumbnails to rearrange them in the gallery tab in the media popup works as expected here. Tested in Chrome 52.0.2743.116 m Win10.
&lt;/p&gt;
&lt;p&gt;
Please follow the standard troubleshooting: clear browser cache, turn off plugins, switch to a default theme, turn off browser extensions, then try again. If you're still having problems, maybe try on another computer or/and another version of Chrome (if possible).
&lt;/p&gt;
&lt;p&gt;
Closing this as worksforme. Feel free to reopen with steps to consistently reproduce.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:41:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:4/1472406086320612</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38422" title="Formatting: Add a parameter to `wp_send_json_error()`, ..."&gt;38422&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting: Add a parameter to &lt;code&gt;wp_send_json_error()&lt;/code&gt;, &lt;code&gt;wp_send_json_success()&lt;/code&gt;, and &lt;code&gt;wp_send_json()&lt;/code&gt; for specifying the HTTP response code.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Defaults to &lt;code&gt;200&lt;/code&gt; in all cases, but can be used, for example, to return a &lt;code&gt;403&lt;/code&gt; when using &lt;code&gt;wp_send_json_error()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;&lt;br /&gt;
Props stephenharris&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38422]: Formatting: Add a parameter to `wp_send_json_error()`, ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38422</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38422/1472406085839641</guid>
      <description>&lt;p&gt;
Formatting: Add a parameter to &lt;code&gt;wp_send_json_error()&lt;/code&gt;, &lt;code&gt;wp_send_json_success()&lt;/code&gt;, and &lt;code&gt;wp_send_json()&lt;/code&gt; for specifying the HTTP response code.
&lt;/p&gt;
&lt;p&gt;
Defaults to &lt;code&gt;200&lt;/code&gt; in all cases, but can be used, for example, to return a &lt;code&gt;403&lt;/code&gt; when using &lt;code&gt;wp_send_json_error()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35666" title="#35666: enhancement: Add support for HTTP response codes to wp_send_json_error(), ... (closed: fixed)"&gt;#35666&lt;/a&gt;
Props stephenharris
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36362 (check_ajax_referer() does not send a 403 response code upon failure) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36362#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36362#comment:3/1472405429884727</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38421" title="Security: Return a `403` instead of a `200` HTTP status when ..."&gt;38421&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Security: Return a &lt;code&gt;403&lt;/code&gt; instead of a &lt;code&gt;200&lt;/code&gt; HTTP status when &lt;code&gt;check_ajax_referer()&lt;/code&gt; fails.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is, unfortunately, untestable in the current test suite, even in the AJAX tests.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36362" title="#36362: defect (bug): check_ajax_referer() does not send a 403 response code upon failure (closed: fixed)"&gt;#36362&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38421]: Security: Return a `403` instead of a `200` HTTP status when ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38421</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38421/1472405429420314</guid>
      <description>&lt;p&gt;
Security: Return a &lt;code&gt;403&lt;/code&gt; instead of a &lt;code&gt;200&lt;/code&gt; HTTP status when &lt;code&gt;check_ajax_referer()&lt;/code&gt; fails.
&lt;/p&gt;
&lt;p&gt;
This is, unfortunately, untestable in the current test suite, even in the AJAX tests.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36362" title="#36362: defect (bug): check_ajax_referer() does not send a 403 response code upon failure (closed: fixed)"&gt;#36362&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36361 (check_ajax_referer() lacks a _doing_it_wrong() call when the $action ...) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36361#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36361#comment:3/1472404492876078</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38420" title="Security: Trigger a `_doing_it_wrong()` when `check_ajax_referer()` is ..."&gt;38420&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Security: Trigger a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; when &lt;code&gt;check_ajax_referer()&lt;/code&gt; is called without its first parameter. This brings it inline with &lt;code&gt;check_admin_referer()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36361" title="#36361: enhancement: check_ajax_referer() lacks a _doing_it_wrong() call when the $action ... (closed: fixed)"&gt;#36361&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38420]: Security: Trigger a `_doing_it_wrong()` when `check_ajax_referer()` is ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:14:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38420</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38420/1472404492399585</guid>
      <description>&lt;p&gt;
Security: Trigger a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; when &lt;code&gt;check_ajax_referer()&lt;/code&gt; is called without its first parameter. This brings it inline with &lt;code&gt;check_admin_referer()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36361" title="#36361: enhancement: check_ajax_referer() lacks a _doing_it_wrong() call when the $action ... (closed: fixed)"&gt;#36361&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37832 (Using ?p=xxx on a posts page with an invalid post ID does not return a ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37832#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37832#comment:3/1472404411604499</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37785 (WordPress asks to update to same (or older) plugin) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:12:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37785#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37785#comment:2/1472404365064165</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Perhaps a transient that doesn't get cleaned properly? Can anyone reproduce this repeatedly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37756 (Allow inline scripts on script aliases) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 17:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37756#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37756#comment:1/1472404180015065</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35666 (Add support for HTTP response codes to wp_send_json_error(), ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:52:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35666#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35666#comment:3/1472403168011630</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37358 (Don't display errors during installation) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:52:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37358#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37358#comment:3/1472403158857298</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36362 (check_ajax_referer() does not send a 403 response code upon failure) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:52:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36362#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36362#comment:2/1472403151679370</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36361 (check_ajax_referer() lacks a _doing_it_wrong() call when the $action ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36361#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36361#comment:2/1472403144598410</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37655 ([Template Hierarchy] category-slug.php cannot be properly loaded when ...) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:40:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37655#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37655#comment:7/1472402416121614</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37655/37655.3.diff" title="Attachment '37655.3.diff' in Ticket #37655"&gt;37655.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37655/37655.3.diff" title="Download"&gt;​&lt;/a&gt; is an updated patch with tests which demonstrate the updated template hierarchy when a post or term name includes multibyte characters. See &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37655#comment:6" title="Comment 6"&gt;comment:6&lt;/a&gt; for the details.
&lt;/p&gt;
&lt;p&gt;
I'd love to get this in. Any feedback from anyone?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37655.3.diff attached to Ticket #37655</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37655/37655.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37655/37655.3.diff/1472402197142813</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14310 (Make template hierarchy filterable) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14310#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14310#comment:81/1472401132402456</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38419" title="Themes: Introduce tests for the theme template hierarchy.
See #14310
"&gt;38419&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Introduce tests for the theme template hierarchy.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14310" title="#14310: enhancement: Make template hierarchy filterable (closed: fixed)"&gt;#14310&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38419]: Themes: Introduce tests for the theme template hierarchy.  See #14310 </title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:18:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38419</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38419/1472401131932100</guid>
      <description>&lt;p&gt;
Themes: Introduce tests for the theme template hierarchy.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14310" title="#14310: enhancement: Make template hierarchy filterable (closed: fixed)"&gt;#14310&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #14310,​37770 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14310%2C37770</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14310%2C37770/1472400893903006</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38418" title="Themes: Update filter names in the inline documentation for the ..."&gt;38418&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Themes: Update filter names in the inline documentation for the &lt;code&gt;get_*_template()&lt;/code&gt; functions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14310" title="#14310: enhancement: Make template hierarchy filterable (closed: fixed)"&gt;#14310&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38418]: Themes: Update filter names in the inline documentation for the ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 16:14:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38418</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38418/1472400893411564</guid>
      <description>&lt;p&gt;
Themes: Update filter names in the inline documentation for the &lt;code&gt;get_*_template()&lt;/code&gt; functions.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14310" title="#14310: enhancement: Make template hierarchy filterable (closed: fixed)"&gt;#14310&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36325 (Move #wpadminbar above #page) updated</title>
      
        <dc:creator>cbutlerjr</dc:creator>

      <pubDate>Sun, 28 Aug 2016 15:45:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36325#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36325#comment:2/1472399106782277</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can understand how this might be an issue.  However, I'm not sure that moving this ID earlier in the stream is the best solution.
&lt;/p&gt;
&lt;p&gt;
For starters, there's no requirement to place the toolbar at the top of the page. It can be positioned at the bottom, and that can be done with just CSS.  Additionally, from a document perspective, I'm not sure I would agree that it makes much sense to have all of the toolbar HTML at the top of the document. That has the potential for an ugly page load in certain situations.
&lt;/p&gt;
&lt;p&gt;
This isn't really a bug so much as it is an enhancement request.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37691 (plugins directory not being actively checked) updated</title>
      
        <dc:creator>bheadrick</dc:creator>

      <pubDate>Sun, 28 Aug 2016 15:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37691#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37691#comment:4/1472397652290220</guid>
      <description>&lt;p&gt;
I'm doing this locally in a VVV instance, so not exactly FTP, but I copied the files from one site instance to another.
&lt;/p&gt;
&lt;p&gt;
permissions does sound like a plausible cause, although this same process never failed me before this last update.
&lt;/p&gt;
&lt;p&gt;
plugins$ ls -l
total 68
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 akismet
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 force-regenerate-thumbnails
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 gravityforms
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 gravityformslogging
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 gravityformsmailchimp
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 gravityformsstripe
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 InteractiveMapBuilder
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 jetpack
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 js_composer
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 mojo-marketplace-wp-plugin
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 revslider
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 ssl-insecure-content-fixer
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 Ultimate_VC_Addons
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 updraftplus
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 w3-total-cache
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce.2.4
drwxrwxrwx 1 vagrant vagrant    0 Aug  6 20:44 woocommerce-amount-due-filter
drwxrwxrwx 1 vagrant vagrant    0 Aug  6 20:44 woocommerce-cart-based-shipping
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce-cost-of-goods
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce-dynamic-pricing
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce-gateway-stripe
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 woocommerce-min-max-quantities
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce-pdf-invoice
drwxrwxrwx 1 vagrant vagrant    0 Aug  6 20:44 woocommerce-pdf-invoice-template
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce-product-addons
drwxrwxrwx 1 vagrant vagrant 4096 Aug 28 14:57 woocommerce-purchase-order
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 woocommerce-quote
drwxrwxrwx 1 vagrant vagrant    0 Aug 28 14:57 woothemes-updater
&lt;/p&gt;
&lt;p&gt;
I'm not really good at reading permissions in anything other than octal, so I went up a directory and ran this to be sure:
&lt;/p&gt;
&lt;p&gt;
chmod -R 777 plugins
&lt;/p&gt;
&lt;p&gt;
and refreshed the plugins page - there is only 1 plugin listed as being installed.
&lt;/p&gt;
&lt;p&gt;
I didn't have hello dolly or akismet in the plugins folder, but when I copied those in, they showed up in the plugins page immediately afterwards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37860 (Labels are misplaced with respect to text box.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 14:53:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37860#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37860#comment:2/1472395996185869</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) updated</title>
      
        <dc:creator>Compute</dc:creator>

      <pubDate>Sun, 28 Aug 2016 14:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912#comment:97/1472395936649497</guid>
      <description>&lt;p&gt;
Consider follow &lt;a href="https://core.trac.wordpress.org/ticket/36335"&gt;https://core.trac.wordpress.org/ticket/36335&lt;/a&gt; . Composer.json file added in &lt;a href="https://core.trac.wordpress.org/ticket/36335#comment:72"&gt;https://core.trac.wordpress.org/ticket/36335#comment:72&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37860 (Labels are misplaced with respect to text box.) updated</title>
      
        <dc:creator>juhise</dc:creator>

      <pubDate>Sun, 28 Aug 2016 14:46:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37860#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37860#comment:1/1472395571121283</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>AfterFix.png attached to Ticket #37860</title>
      
        <dc:creator>juhise</dc:creator>

      <pubDate>Sun, 28 Aug 2016 14:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37860/AfterFix.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37860/AfterFix.png/1472395504285638</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>theme.png attached to Ticket #37860</title>
      
        <dc:creator>juhise</dc:creator>

      <pubDate>Sun, 28 Aug 2016 14:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37860/theme.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37860/theme.png/1472395458801362</guid>
      <description>&lt;p&gt;
screen shot of theme page
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>37860.patch attached to Ticket #37860</title>
      
        <dc:creator>juhise</dc:creator>

      <pubDate>Sun, 28 Aug 2016 14:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37860/37860.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37860/37860.patch/1472395415857856</guid>
      <description>&lt;p&gt;
attached patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37860 (Labels are misplaced with respect to text box.) created</title>
      
        <dc:creator>juhise</dc:creator>

      <pubDate>Sun, 28 Aug 2016 14:42:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37860/1472395377673985</guid>
      <description>&lt;p&gt;
On plugin-install.php and theme-install.php. Labels on favorites tab seem not aligned.
Labels and text box should appear same align.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37858 (Sample permalink test uses invalid permalink tag) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 12:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37858#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37858#comment:2/1472388744325482</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38417" title="Permalinks: Correct an invalid peramstructure tag in a test.
Fixes #37858
"&gt;38417&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Permalinks: Correct an invalid peramstructure tag in a test.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37858" title="#37858: defect (bug): Sample permalink test uses invalid permalink tag (closed: fixed)"&gt;#37858&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38417]: Permalinks: Correct an invalid peramstructure tag in a test.  Fixes #37858 </title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 12:52:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38417</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38417/1472388743816161</guid>
      <description>&lt;p&gt;
Permalinks: Correct an invalid peramstructure tag in a test.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37858" title="#37858: defect (bug): Sample permalink test uses invalid permalink tag (closed: fixed)"&gt;#37858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37858 (Sample permalink test uses invalid permalink tag) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 12:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37858#comment:1/1472388694244937</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37858 (Sample permalink test uses invalid permalink tag) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 12:50:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37858/1472388646414292</guid>
      <description>&lt;p&gt;
The &lt;code&gt;Tests_Admin_Includes_Post::test_get_sample_permalink_should_allow_daylike_slugs_if_permastruct_does_not_cause_an_archive_conflict()&lt;/code&gt; unit test uses &lt;code&gt;%month%&lt;/code&gt; in its permastructure, which is invalid. It should use &lt;code&gt;%monthnum%&lt;/code&gt;. The test's validity remains unaffected.
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/32647" title="Disallow post slugs that will result in permalinks that conflict with ..."&gt;[32647]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37857 (Strange behaviour for COOKIE_DOMAIN since Wordpress 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 12:08:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37857#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37857#comment:1/1472386122402815</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37857 (Strange behaviour for COOKIE_DOMAIN since Wordpress 4.6) created</title>
      
        <dc:creator>indikatordesign</dc:creator>

      <pubDate>Sun, 28 Aug 2016 11:53:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37857</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37857/1472385195440488</guid>
      <description>&lt;p&gt;
I hope I am right here, because since the last update for WordPress 4.6 there is a very strange behaviour with the by hand sedate constant COOKIE_DOMAIN.
&lt;/p&gt;
&lt;p&gt;
I have adapted COOKIE_DOMAIN in wp-config.php to be able to use the same login data about multible domains away.
&lt;/p&gt;
&lt;p&gt;
Since the update for WordPress 4.6 this causes problems with the browser cache for all dynamic data transfers, like forms etc. Not only in WordPress, but also in form-plugins or WooCommerce.
&lt;/p&gt;
&lt;p&gt;
With the example WooCommerce: data for the goods basket are updated always only after a renewed page-reload. That means, if you go to basket, no changes are active. You need to reload the basket to see the changes in action. The same behavior with changes in forms for addresses etc.
&lt;/p&gt;
&lt;p&gt;
Absolutely no caching module is active. If browser caching is disabled, everything works fine.
&lt;/p&gt;
&lt;p&gt;
These are the changes I've made for the COOKIE_DOMAIN in wp-config.php:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'COOKIE_DOMAIN'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'.domain.com'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'COOKIEPATH'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'SITECOOKIEPATH'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'ADMIN_COOKIE_PATH'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/wp-admin'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'COOKIEHASH'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'https://'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;COOKIE_DOMAIN&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If I escape them, everything works fine.
&lt;/p&gt;
&lt;p&gt;
Before the update everything functioned very well and without any problems.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36224 (WP_Taxonomy class) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 11:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36224#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36224#comment:15/1472382279362201</guid>
      <description>&lt;p&gt;
Perhaps needs a &lt;code&gt;__toString()&lt;/code&gt; method, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37368" title="#37368: defect (bug): get_object_taxonomies() ignores output type argument for attachments (closed: fixed)"&gt;#37368&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33372 (WP_Query may return incorrect results when using negative values with ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 11:00:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33372#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33372#comment:27/1472382009185819</guid>
      <description>&lt;p&gt;
Worth noting that the tests fail on HHVM:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
1) Tests_Query_ParseQuery::test_parse_query_p_array
Failed asserting that two strings are identical.
--- Expected
+++ Actual
@@ @@
-404
+
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29736 (Proposal to check for is_scalar() in WP_Query::fill_query_vars()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:57:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29736#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29736#comment:5/1472381874624971</guid>
      <description>&lt;p&gt;
For some reason the condition added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/29912" title="Check that search value is scalar before parsing.
Prevents PHP ..."&gt;[29912]&lt;/a&gt; does not work on HHVM as the tests fail because of a &lt;code&gt;strlen() expects parameter 1 to be string, array given&lt;/code&gt; error
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37368 (get_object_taxonomies() ignores output type argument for attachments) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37368#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37368#comment:12/1472381728172741</guid>
      <description>&lt;p&gt;
This breaks on HHVM because &lt;code&gt;array_unique()&lt;/code&gt; does a string comparison and cannot convert a &lt;code&gt;stdClass&lt;/code&gt; object to a string.
&lt;/p&gt;
&lt;p&gt;
Could probably be solved by introducing &lt;code&gt;WP_Taxonomy&lt;/code&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36224" title="#36224: enhancement: WP_Taxonomy class (closed: fixed)"&gt;#36224&lt;/a&gt; with a &lt;code&gt;__toString()&lt;/code&gt; method.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:110</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:110/1472381015120916</guid>
      <description>&lt;p&gt;
Noting that some concerns have been raised by core team members in Slack.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472367198000081"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1472367198000081&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472380479000091"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1472380479000091&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:33:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:109</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:109/1472380405513131</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38416" title="Bootstrap: Fix failing external HTTP tests after [38411].
When ..."&gt;38416&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Bootstrap: Fix failing external HTTP tests after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38411" title="Bootstrap: after r38409 and r38410, revert r38402 which reverted ..."&gt;[38411]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When testing the transports, the transport name needs to be capitalized for the class name to be correct (&lt;code&gt;WP_Http_Curl&lt;/code&gt; vs. &lt;code&gt;WP_Http_curl&lt;/code&gt; ).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38416]: Bootstrap: Fix failing external HTTP tests after [38411].  When ...</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:33:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38416</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38416/1472380404999672</guid>
      <description>&lt;p&gt;
Bootstrap: Fix failing external HTTP tests after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38411" title="Bootstrap: after r38409 and r38410, revert r38402 which reverted ..."&gt;[38411]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When testing the transports, the transport name needs to be capitalized for the class name to be correct (&lt;code&gt;WP_Http_Curl&lt;/code&gt; vs. &lt;code&gt;WP_Http_curl&lt;/code&gt; ).
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37855 (Clean WordPress Head - Group together related tags) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:20:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37855#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37855#comment:2/1472379617480805</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Easy fix, playing with the &lt;code&gt;default-filters.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37855.2.patch attached to Ticket #37855</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:05:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37855/37855.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37855/37855.2.patch/1472378722951911</guid>
      <description>&lt;p&gt;
re-order the &lt;code&gt;wp_head&lt;/code&gt; actions to match the &lt;code&gt;$priority&lt;/code&gt; parameter
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37731 (Infinite loop in _wp_json_sanity_check() during plugin install) reopened</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:04:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37731#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37731#comment:23/1472378643151333</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37731 (Infinite loop in _wp_json_sanity_check() during plugin install) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:03:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37731#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37731#comment:22/1472378583064057</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38415" title="Upgrade/Install: After [37687], fix the number of params passed to the ..."&gt;38415&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade/Install: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37687" title="Upgrade: Trigger the `upgrader_process_complete` action for ..."&gt;[37687]&lt;/a&gt;, fix the number of params passed to the upgrade hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_version_check()&lt;/code&gt;, &lt;code&gt;wp_update_plugins()&lt;/code&gt; and &lt;code&gt;wp_update_themes()&lt;/code&gt; are all originally hooked to the &lt;code&gt;upgrader_process_complete&lt;/code&gt; action with zero arguments passed to them. Zero arguments should be passed when re-adding them after translation updates, otherwise the sky will fall.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ionutst, gitlost.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37731" title="#37731: defect (bug): Infinite loop in _wp_json_sanity_check() during plugin install (closed: fixed)"&gt;#37731&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38415]: Upgrade/Install: After [37687], fix the number of params passed to the ...</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 10:03:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38415</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38415/1472378582520701</guid>
      <description>&lt;p&gt;
Upgrade/Install: After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37687" title="Upgrade: Trigger the `upgrader_process_complete` action for ..."&gt;[37687]&lt;/a&gt;, fix the number of params passed to the upgrade hooks.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_version_check()&lt;/code&gt;, &lt;code&gt;wp_update_plugins()&lt;/code&gt; and &lt;code&gt;wp_update_themes()&lt;/code&gt; are all originally hooked to the &lt;code&gt;upgrader_process_complete&lt;/code&gt; action with zero arguments passed to them. Zero arguments should be passed when re-adding them after translation updates, otherwise the sky will fall.
&lt;/p&gt;
&lt;p&gt;
Props ionutst, gitlost.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37731" title="#37731: defect (bug): Infinite loop in _wp_json_sanity_check() during plugin install (closed: fixed)"&gt;#37731&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37731 (Infinite loop in _wp_json_sanity_check() during plugin install) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:46:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37731#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37731#comment:21/1472377587489126</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37731 (Infinite loop in _wp_json_sanity_check() during plugin install) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37731#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37731#comment:20/1472377546703894</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Opened a new ticket for the &lt;code&gt;wp_json_encode()&lt;/code&gt; fixes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37856 (Prepare data before sanity check in wp_json_encode()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37856#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37856#comment:1/1472377294013139</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37856.diff attached to Ticket #37856</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37856/37856.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37856/37856.diff/1472377285288140</guid>
      <description>&lt;p&gt;
Props ionutst
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37856 (Prepare data before sanity check in wp_json_encode()) created</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:39:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37856/1472377197816169</guid>
      <description>&lt;p&gt;
Splitting this out of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37731" title="#37731: defect (bug): Infinite loop in _wp_json_sanity_check() during plugin install (closed: fixed)"&gt;#37731&lt;/a&gt; as a followup to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36358" title="#36358: defect (bug): Return of _wp_json_prepare_data() in wp_json_encode() should be used. (closed: fixed)"&gt;#36358&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;wp_json_encode()&lt;/code&gt;, the data is being prepared for JSON sanitization for &lt;code&gt;_wp_json_prepare_data()&lt;/code&gt;. Later on, the call to &lt;code&gt;_wp_json_sanity_check()&lt;/code&gt; doesn't use the prepared data but the raw data instead.
&lt;/p&gt;
&lt;p&gt;
I don't see why this was done that way in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36358" title="#36358: defect (bug): Return of _wp_json_prepare_data() in wp_json_encode() should be used. (closed: fixed)"&gt;#36358&lt;/a&gt;, so I'd love to hear what @rmccue has to say about it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:03:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:108</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:108/1472375035824891</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36335/http-tests.diff" title="Attachment 'http-tests.diff' in Ticket #36335"&gt;http-tests.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36335/http-tests.diff" title="Download"&gt;​&lt;/a&gt; fixes the failing external HTTP tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>http-tests.diff attached to Ticket #36335</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/http-tests.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/http-tests.diff/1472374963096233</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>37855.patch attached to Ticket #37855</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 09:00:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37855/37855.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37855/37855.patch/1472374836667275</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;$priority&lt;/code&gt; parameter to &lt;code&gt;wp_head&lt;/code&gt; actions
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37855 (Clean WordPress Head - Group together related tags) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 08:49:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37855#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37855#comment:1/1472374168757065</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37855 (Clean WordPress Head - Group together related tags) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sun, 28 Aug 2016 08:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37855/1472374118874553</guid>
      <description>&lt;p&gt;
This is a request from the Israeli WordPress Community. I'm trying to make some of them get involved in WordPress core development.
&lt;/p&gt;
&lt;p&gt;
Two WordPress users from the SEO industry, asked me to make the WordPress &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; cleaner. To update the site's source and group together the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;link rel="..."&amp;gt;&lt;/code&gt; tags.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Not the scripts and stylesheets! &lt;/strong&gt; Other tags like: &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/rsd_link/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;RSD&lt;/a&gt;, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wlwmanifest_link/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WLW&lt;/a&gt;, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_no_robots/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;noindex&lt;/a&gt;, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/rel_canonical/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;canonical&lt;/a&gt;, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_shortlink_wp_head/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;shortlink&lt;/a&gt;, &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/wp_site_icon/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;icon&lt;/a&gt; and few others. All those functions echo some kind of &lt;code&gt;&amp;lt;link rel="..."&amp;gt;&lt;/code&gt; tag. Changing those tags position in the head has no effect on the site itself.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>Grzegorz.Janoszka</dc:creator>

      <pubDate>Sun, 28 Aug 2016 08:35:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:33/1472373307971099</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/25239#comment:32" title="Comment 32"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An issue affecting 4.6 installs is fixed in 4.6.1, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37736" title="#37736: defect (bug): Emails fail on certain server setups (closed: fixed)"&gt;#37736&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
dd32: the one we are discussing here is completely different and unrelated. It is about using HTTP variables when they are not available (like when calling wp-cron script from system cron.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 28 Aug 2016 08:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:107</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:107/1472371818125055</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1472371812000083"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 28 Aug 2016 04:00:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:32/1472356811335591</guid>
      <description>&lt;p&gt;
An issue affecting 4.6 installs is fixed in 4.6.1, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37736" title="#37736: defect (bug): Emails fail on certain server setups (closed: fixed)"&gt;#37736&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-test-tinymce-toolbars.php attached to Ticket #27159</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 03:20:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.php/1472354426493186</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 03:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:46/1472354285321491</guid>
      <description>&lt;p&gt;
wp-test-tinymce-toolbars.php is a small plugin that can be used to test different toolbars configurations. The buttons are set "manually", by copying and pasting from the list of available buttons.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Sun, 28 Aug 2016 02:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:106</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:106/1472351109054794</guid>
      <description>&lt;p&gt;
Is the &lt;code&gt;class_exists()&lt;/code&gt; check still needed at all? I don't see why.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 28 Aug 2016 02:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:105</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:105/1472351054731513</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38414" title="Admin: allow `WP_Screen` to be checked via autoload in ..."&gt;38414&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Admin: allow &lt;code&gt;WP_Screen&lt;/code&gt; to be checked via autoload in &lt;code&gt;convert_to_screen()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kraftbj.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38414]: Admin: allow `WP_Screen` to be checked via autoload in ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 28 Aug 2016 02:24:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38414</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38414/1472351054258749</guid>
      <description>&lt;p&gt;
Admin: allow &lt;code&gt;WP_Screen&lt;/code&gt; to be checked via autoload in &lt;code&gt;convert_to_screen()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props kraftbj.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37851 (Tests in Tests_Query_Conditionals fail when run independently) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 02:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37851#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37851#comment:3/1472349713519923</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38413" title="Query: Add and improve tests for query conditionals on the front page ..."&gt;38413&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Query: Add and improve tests for query conditionals on the front page and home page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37851" title="#37851: defect (bug): Tests in Tests_Query_Conditionals fail when run independently (closed: fixed)"&gt;#37851&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38413]: Query: Add and improve tests for query conditionals on the front page ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 28 Aug 2016 02:01:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38413</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38413/1472349713043641</guid>
      <description>&lt;p&gt;
Query: Add and improve tests for query conditionals on the front page and home page.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37851" title="#37851: defect (bug): Tests in Tests_Query_Conditionals fail when run independently (closed: fixed)"&gt;#37851&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>36335.16.diff attached to Ticket #36335</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 28 Aug 2016 01:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/36335.16.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/36335.16.diff/1472348876155462</guid>
      <description>&lt;p&gt;
Fixes WP_Screen notice
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 28 Aug 2016 01:45:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:104</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:104/1472348703608486</guid>
      <description>&lt;p&gt;
Including in the autoloader fixes my issue in the previous comment. See incoming patch.
&lt;/p&gt;
&lt;p&gt;
I'm not familiar enough with autoloading to know if the other instances of using &lt;code&gt;class_exists( XXX, false )&lt;/code&gt; are problematic or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 28 Aug 2016 01:04:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:103</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:103/1472346250771070</guid>
      <description>&lt;p&gt;
Since this landed, there seems to be an order issue where WP_Screen isn't being loaded until, at least, after the &lt;code&gt;admin_init&lt;/code&gt; hook. I'm unfamiliar with the methods we're using to debug it immediately.
&lt;/p&gt;
&lt;p&gt;
Prior, no notice thrown. After:
&lt;/p&gt;
&lt;pre class="wiki"&gt;NOTICE: wp-includes/functions.php:4027 - convert_to_screen(), add_meta_box() was called incorrectly. Likely direct inclusion of wp-admin/includes/template.php in order to use add_meta_box(). This is very wrong. Hook the add_meta_box() call into the add_meta_boxes action instead. Please see Debugging in WordPress for more information. (This message was added in version 3.3.0.)
require_once('wp-admin/admin.php'), do_action('admin_init'), Akismet_Admin::admin_init, add_meta_box, convert_to_screen, _doing_it_wrong, trigger_error
&lt;/pre&gt;&lt;p&gt;
When &lt;code&gt;add_meta_box&lt;/code&gt; has the screen arg set as a string, &lt;code&gt;convert_to_screen&lt;/code&gt; fires. &lt;code&gt;convert_to_screen&lt;/code&gt; checks &lt;code&gt;if ( ! class_exists( 'WP_Screen', false ) ) {&lt;/code&gt;, which then throws the &lt;code&gt;_doing_it_wrong&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>tw2113</dc:creator>

      <pubDate>Sun, 28 Aug 2016 00:33:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:40/1472344432775695</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:9" title="Comment 9"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This would still break any code that was doing &lt;code&gt;new wpdb()&lt;/code&gt; though. Not sure how common that is, but there may be plugins that do it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can think of at least one time where I created my own instance for an external read-only database. Been a couple years, but it's still in place last I checked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 00:08:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:102</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:102/1472342909943515</guid>
      <description>&lt;p&gt;
Another thing that needs clarification: if we have autoloading, would a plugin be able to stop some of the core classes from loading, noop or replace them etc. That would be a backwards compatibility disaster down the road :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 28 Aug 2016 00:06:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:101</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:101/1472342806018122</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38412" title="Script Loader: autoload in `load-{scripts|styles}.php`.
Props ..."&gt;38412&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Script Loader: autoload in &lt;code&gt;load-{scripts|styles}.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props JohnPBloch.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38412]: Script Loader: autoload in `load-{scripts|styles}.php`.  Props ...</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 28 Aug 2016 00:06:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38412</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38412/1472342805530835</guid>
      <description>&lt;p&gt;
Script Loader: autoload in &lt;code&gt;load-{scripts|styles}.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props JohnPBloch.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 28 Aug 2016 00:03:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:100</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:100/1472342596410712</guid>
      <description>&lt;p&gt;
I think I'm still missing something important here.
&lt;/p&gt;
&lt;p&gt;
Classes autoloading is very nice for OOP apps. However WordPress is &lt;strong&gt;not&lt;/strong&gt; an OOP app. It's true, there are about 200 classes. Many of them are just containers for namespacing the functions inside. These are not meant to be extended or used in any OOP way.
&lt;/p&gt;
&lt;p&gt;
There are also about 4750 "loose" functions. What does autoloading do for them?
&lt;/p&gt;
&lt;p&gt;
As far as I see autoloading is &lt;strong&gt;maybe nice to have&lt;/strong&gt; for the couple of hundred classes in WordPress. We can certainly do that when the minimum required PHP version allows it. However using a "side" functionality of a third party app to add this now seems premature. Also considering all the things that are breaking. I don't see the big benefits from doing this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>