<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #44980 (When using a mobile browser (iOS 12) and the Visual Editor you won’t ...) created</title>
      
        <dc:creator>Geost</dc:creator>

      <pubDate>Fri, 21 Sep 2018 23:46:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44980</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44980/1537573560543276</guid>
      <description>&lt;p&gt;
Hi folks!
&lt;/p&gt;
&lt;p&gt;
I was able to reproduce this issue by using the latest version of WordPress.org and also on a WordPress.com site.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Steps to reproduce the problem:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Log in to your WordPress site using a browser (Safari or Chrome) on any device with iOS 12.
&lt;/li&gt;&lt;li&gt;Edit or create a post/page with text on it using the Visual Editor
&lt;/li&gt;&lt;li&gt;Select/highlight any word. Then try to highlight the next or previous word.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;What happens&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
It won't let you highlight what you want. Instead, it will highlight all the paragraph or nothing.
Here's a video:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://cld.wthms.co/NwMb1X"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://cld.wthms.co/NwMb1X&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
(You will notice this only happens with the Visual Editor and not the Text Editor)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;What I expected&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
To be able to highlight the text as in the Text Editor
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Devices where I was able to replicate this:&lt;/strong&gt;
iPhone 6 Plus and iPad Air 2 (A1567)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;OS:&lt;/strong&gt;
iOS 12.0
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Browser:&lt;/strong&gt;
Safari &amp;amp; Chrome
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44169 (New filter to short circuit WP_User_Query results) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 21 Sep 2018 22:54:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44169#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44169#comment:8/1537570448587550</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@tlovett1 - Thanks for the ticket, patch and tests! This looks good and I can see how this would be useful!
&lt;/p&gt;
&lt;p&gt;
I posted a new combined diff with your patch and tests in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44169/44169.1.diff" title="Attachment '44169.1.diff' in Ticket #44169"&gt;44169.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44169/44169.1.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The diff is unfortunately complicated and hard to look at because of the existing lines that are intended in the patch (because they sit inside a conditional); the diff has them oddly interspersed and that makes it hard to see what you are actually changing.
&lt;/p&gt;
&lt;p&gt;
I created &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44169/44169-indent-fixed.diff" title="Attachment '44169-indent-fixed.diff' in Ticket #44169"&gt;44169-indent-fixed.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44169/44169-indent-fixed.diff" title="Download"&gt;​&lt;/a&gt; as a workaround - in this diff i left the existing lines unindented so you can much more clearly see what is added by your patch. in this diff it is clearer that your code runs the filter passing null, then if the result is still null it runs the existing code that queries the database. if the result is not null it continues as normal with the results just after the existing database code executes.
&lt;/p&gt;
&lt;p&gt;
I'm seeing some test failures I'll look into: &lt;a class="ext-link" href="https://travis-ci.org/adamsilverstein/wordpress-develop-fork/jobs/431694171"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/adamsilverstein/wordpress-develop-fork/jobs/431694171&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'd love to see what @boonebgorges thinks since he did so much of the original work on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36687" title="#36687: feature request: Feature to override WP_Query to provide results from other source (closed: fixed)"&gt;#36687&lt;/a&gt; and has a deep understanding of the implications of any changes here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44169-indent-fixed.diff attached to Ticket #44169</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 21 Sep 2018 22:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44169/44169-indent-fixed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44169/44169-indent-fixed.diff/1537568724775124</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>44169.1.diff attached to Ticket #44169</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 21 Sep 2018 22:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44169/44169.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44169/44169.1.diff/1537568714823539</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38280 (Make term count for a specific object type available) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 20:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38280#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38280#comment:28/1537563464819931</guid>
      <description>&lt;p&gt;
Diving back into this today, I thought of an issue with the conditionals in &lt;code&gt;wp_get_term_object_count()&lt;/code&gt;. The first condition checked is &lt;code&gt;0 === $term-&amp;gt;count&lt;/code&gt;. If the object types registered to a taxonomy change and the count is 0, a recount will not occur until a term is added or removed from an object. This could result in inaccurate counts,
&lt;/p&gt;
&lt;p&gt;
Maybe we have been thinking about this the wrong way. Maybe, instead of checking the number of object types registered to a taxonomy (which could be the same even if you remove one taxonomy and add another), the object types themselves should be compared. Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$new_types = array_diff( $registered_object_types, $counted_object_types );
$missing_counted_types = array_diff( $counted_object_types, $registered_object_types );
if ( ! empty( $new_types ) || ! empty( $missing_counted_types ) {
    // Object types have changed. Recount.
} elseif ( 0 === $term-&amp;gt;count ) {
    // Check for 0 count.
} else {
    $count = wp_get_term_object_count_from_meta( $term_id, $object_type );
}
&lt;/pre&gt;&lt;p&gt;
This would also require &lt;code&gt;_wp_counted_object_types&lt;/code&gt; for &lt;em&gt;every&lt;/em&gt; term, which I am also undecided on and want to think about a bit more. The only alternative I can think of in the current state is storing a cache as an option when there is only one object type on a taxonomy. But, I think that introduces some needless complexity.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What information would the error provide to a developer?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The scenarios where a count could not be determined, I think, are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;An error occurred trying to recount
&lt;/li&gt;&lt;li&gt;Post type does not exist.
&lt;/li&gt;&lt;li&gt;A custom callback was not properly implemented.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44966 (Safari + Voiceover does not allow tags entry in editor) updated</title>
      
        <dc:creator>konainm</dc:creator>

      <pubDate>Fri, 21 Sep 2018 20:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44966#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44966#comment:3/1537562767795677</guid>
      <description>&lt;p&gt;
@parbaugh @afercia
&lt;/p&gt;
&lt;p&gt;
This problem can also be fixed by adding placeholder text to the input box. Even a blank placeholder with a single space works.
&lt;/p&gt;
&lt;p&gt;
Please see the modified code for the tags meta box below:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function tagsdiv-post_tag( $post, $box ) {
	$defaults = array( 'taxonomy' =&amp;gt; 'post_tag' );
	if ( ! isset( $box['args'] ) || ! is_array( $box['args'] ) ) {
		$args = array();
	} else {
		$args = $box['args'];
	}
	$r = wp_parse_args( $args, $defaults );
	$tax_name = esc_attr( $r['taxonomy'] );
	$taxonomy = get_taxonomy( $r['taxonomy'] );
	$user_can_assign_terms = current_user_can( $taxonomy-&amp;gt;cap-&amp;gt;assign_terms );
	$comma = _x( ',', 'tag delimiter' );
	$terms_to_edit = get_terms_to_edit( $post-&amp;gt;ID, $tax_name );
	if ( ! is_string( $terms_to_edit ) ) {
		$terms_to_edit = '';
	}
?&amp;gt;
&amp;lt;div class="tagsdiv" id="&amp;lt;?php echo $tax_name; ?&amp;gt;"&amp;gt;
	&amp;lt;div class="jaxtag"&amp;gt;
	&amp;lt;div class="nojs-tags hide-if-js"&amp;gt;
		&amp;lt;label for="tax-input-&amp;lt;?php echo $tax_name; ?&amp;gt;"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;add_or_remove_items; ?&amp;gt;&amp;lt;/label&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;textarea name="&amp;lt;?php echo "tax_input[$tax_name]"; ?&amp;gt;" rows="3" cols="20" class="the-tags" id="tax-input-&amp;lt;?php echo $tax_name; ?&amp;gt;" &amp;lt;?php disabled( ! $user_can_assign_terms ); ?&amp;gt; aria-describedby="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;-desc"&amp;gt;&amp;lt;?php echo str_replace( ',', $comma . ' ', $terms_to_edit ); // textarea_escaped by esc_attr() ?&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
 	&amp;lt;?php if ( $user_can_assign_terms ) : ?&amp;gt;
	&amp;lt;div class="ajaxtag hide-if-no-js"&amp;gt;
		&amp;lt;label class="screen-reader-text" for="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;add_new_item; ?&amp;gt;&amp;lt;/label&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;input data-wp-taxonomy="&amp;lt;?php echo $tax_name; ?&amp;gt;" placeholder=" " type="text" id="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;" name="newtag[&amp;lt;?php echo $tax_name; ?&amp;gt;]" class="newtag form-input-tip" size="16" autocomplete="off" aria-describedby="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;-desc" value="" /&amp;gt;
		&amp;lt;input type="button" class="button tagadd" value="&amp;lt;?php esc_attr_e('Add'); ?&amp;gt;" /&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;p class="howto" id="new-tag-&amp;lt;?php echo $tax_name; ?&amp;gt;-desc"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;separate_items_with_commas; ?&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;?php elseif ( empty( $terms_to_edit ) ): ?&amp;gt;
		&amp;lt;p&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;no_terms; ?&amp;gt;&amp;lt;/p&amp;gt;
	&amp;lt;?php endif; ?&amp;gt;
	&amp;lt;/div&amp;gt;
	&amp;lt;ul class="tagchecklist" role="region"&amp;gt;&amp;lt;/ul&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;?php if ( $user_can_assign_terms ) : ?&amp;gt;
&amp;lt;p class="hide-if-no-js"&amp;gt;&amp;lt;button type="button" class="button-link tagcloud-link" id="link-&amp;lt;?php echo $tax_name; ?&amp;gt;" aria-expanded="false"&amp;gt;&amp;lt;?php echo $taxonomy-&amp;gt;labels-&amp;gt;choose_from_most_used; ?&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;?php endif; ?&amp;gt;
&amp;lt;?php
}
&lt;/pre&gt;&lt;p&gt;
I have also created a plugin that can be activated to push the above fix please find it on:
&lt;a class="ext-link" href="https://github.com/KonainM/NYU-Tags-Accessibility-Fix"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/KonainM/NYU-Tags-Accessibility-Fix&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44234 (Add missing unit tests for erasing personal data by username or email ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 19:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44234#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44234#comment:14/1537556774730284</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
I only used the first input argument of those filter, so it's open for improvements to add the other arguments.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think tests for filters should just confirm that a filtered value effects the outcome of the function, so this should be sufficient.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The unit tests are a useful documentation, so what about changing the order of methods; show first the methods that explain how it should work, then after that the methods for failing/error?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is just preference, but fine with your changes. I usually organize my tests in a top down manner, testing the scenarios from the first line of the function to the last.
&lt;/p&gt;
&lt;p&gt;
All your changes look good, though. I think this one is ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18450 (New safe action to add rewrite rules on) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 21 Sep 2018 18:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18450#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18450#comment:38/1537553252957136</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by cybr. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1537553251000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 21 Sep 2018 16:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:7/1537548475839155</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mukeshpanchal27. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1537548474000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44845 (_get_list_table: Support for privacy requests tables) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 16:11:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44845#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44845#comment:2/1537546286606750</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like this idea, and the patch looks good. But, unfortunately, this is blocked by two issues.
&lt;/p&gt;
&lt;p&gt;
First, &lt;code&gt;_get_list_table()&lt;/code&gt; will try to include &lt;code&gt;wp-admin/includes/class-wp-' . $required . '-list-table.php&lt;/code&gt;, which does not exist yet (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43895" title="#43895: enhancement: Organize privacy functions into logical files and classes (new)"&gt;#43895&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Second, there is a problem with the privacy request class table names that will need to be resolved. The class names do not follow the correct pattern. &lt;code&gt;WP_Privacy_Data_Export_Requests_Table&lt;/code&gt;, for example should be &lt;code&gt;WP_Privacy_Data_Export_Requests_List_Table&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
When a class is in its own file, the name should be &lt;code&gt;class-actualclassname.php&lt;/code&gt;. In the current state, the file for &lt;code&gt;WP_Privacy_Data_Export_Requests_Table&lt;/code&gt; would be &lt;code&gt;class-wp-privacy-data-export-requests-table.php&lt;/code&gt;, which does not match the pattern &lt;code&gt;_get_list_table()&lt;/code&gt; expects. Changing the class name is a backward compatibility issue, so it needs to be handled carefully.
&lt;/p&gt;
&lt;p&gt;
Going to move this to 5.0 for visibility and because this is at a minimum blocked by &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43895" title="#43895: enhancement: Organize privacy functions into logical files and classes (new)"&gt;#43895&lt;/a&gt;. Ideally, both of these tickets should land in 5.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43895 (Organize privacy functions into logical files and classes) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 21 Sep 2018 15:56:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43895#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43895#comment:5/1537545377875231</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44845" title="#44845: enhancement: _get_list_table: Support for privacy requests tables (new)"&gt;#44845&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 21 Sep 2018 15:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963#comment:40/1537543016577802</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by blobfolio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1537543016000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44976.2.patch attached to Ticket #44976</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 14:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/44976.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/44976.2.patch/1537541872705534</guid>
      <description>&lt;p&gt;
Updated patch. change array_search to in_array
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44979 (Parameter 1 to wp_default_styles() expected to be a reference, value given) created</title>
      
        <dc:creator>jqz</dc:creator>

      <pubDate>Fri, 21 Sep 2018 13:48:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44979/1537537711927091</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37772" title="#37772: defect (bug): Not working &amp;#34;wp_default_styles&amp;#34; on PHP 7.1.0 (closed: fixed)"&gt;#37772&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The bug still manifests if the UOPZ extension is loaded.
&lt;/p&gt;
&lt;p&gt;
(It is a PHP warning, so functionality is okay, but log files will get cluttered and performance hit as server writes to log file on each page request.)
&lt;/p&gt;
&lt;p&gt;
Environment:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Windows 10 x64
&lt;/li&gt;&lt;li&gt;Apache 2.4.27
&lt;/li&gt;&lt;li&gt;PHP 7.1.9 VC14-x64 Thread Safe
&lt;/li&gt;&lt;li&gt;UOPZ extension 5.0.2 (PHP 7.1 Thread Safe x64 - &lt;a class="ext-link" href="https://pecl.php.net/package/uopz/5.0.2/windows"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://pecl.php.net/package/uopz/5.0.2/windows&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fresh install of WordPress 4.9.8.
&lt;/p&gt;
&lt;p&gt;
It can be fixed by removing the &lt;code&gt;&amp;amp;&lt;/code&gt; from the function parameter declaration for &lt;code&gt;wp_default_styles()&lt;/code&gt; and &lt;code&gt;wp_default_scripts()&lt;/code&gt; - the &lt;code&gt;&amp;amp;&lt;/code&gt; is not required as the parameter is an object and thus the original object is referenced in any case.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44236 (Maintain consistency between privacy export report and archive filenames) updated</title>
      
        <dc:creator>GripsArt</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:59:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44236#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44236#comment:16/1537534752608815</guid>
      <description>&lt;p&gt;
before sending a new patch, i want discuss these three points:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The filter can add characters not supported by the file system.
&lt;/li&gt;&lt;li&gt;The filter can add non-unique file names and override previous files.
&lt;/li&gt;&lt;li&gt;If the filter returns an empty string, the file becomes: .html.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
i talked with some other devs on the contributer day in Würzburg, we think it is not the job of a filter to protect for bad using from plugins/themes.
&lt;/p&gt;
&lt;p&gt;
@birgire
@desrosj
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44978 (Reset admin mail not receiving confirmation) closed</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:39:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44978#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44978#comment:1/1537533593101246</guid>
      <description>invalid: &lt;p&gt;
Hi @webdeveloper2018, Welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44978 (Reset admin mail not receiving confirmation) created</title>
      
        <dc:creator>webdeveloper2018</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:28:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44978/1537532936578791</guid>
      <description>&lt;p&gt;
Hello Support,
&lt;/p&gt;
&lt;p&gt;
For &lt;a class="ext-link" href="https://www.ustunner.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.ustunner.com/&lt;/a&gt; site, I am trying to change Email Address        from backend General -&amp;gt; Email Address. But it not sending any confirmation email on new email to confirm email address. Let me know what I need to do to fix this issue.
&lt;/p&gt;
&lt;p&gt;
Waiting for your kind reply.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44977 (Transient fill fail delete to itself if it's timeout option is missing) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:26:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44977#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44977#comment:1/1537532775914696</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:14:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:6/1537532099514496</guid>
      <description>&lt;p&gt;
You patch look great. Kindly change array_search to a simply in_array. Array_search is an overkill for something as simple as this.
&lt;/p&gt;
&lt;p&gt;
I don’t have the time now otherwise I will do it myself when I am free.
&lt;/p&gt;
&lt;p&gt;
Do that please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 12:01:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:5/1537531273333482</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44976.patch attached to Ticket #44976</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 11:54:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/44976.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/44976.patch/1537530856496624</guid>
      <description>&lt;p&gt;
New working patch with thee new functions.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 11:52:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:4/1537530759479945</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Collizo4sky, So you want to deregister control type not control.
&lt;/p&gt;
&lt;p&gt;
I have tested your patch and found that it is not remove control type when i call below function in theme functions.php file.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt; $wp_customize-&amp;gt;deregister_control_type( 'WP_Customize_Color_Control' ); &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
i have checked your code and found that it's return notice when we try to deregister any controls. You can please try rewise patch that i have do and added two new functions to deregister panel and section also.
&lt;/p&gt;
&lt;p&gt;
After applying patch you can check like below functions.
&lt;/p&gt;
&lt;p&gt;
To deregister any control type add below function in &lt;code&gt; customize_register &lt;/code&gt; action like below
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;customize_deregister_control_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;deregister_control_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Customize_Color_Control'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customize_deregister_control_type'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To deregister any panel type add below function in &lt;code&gt; customize_register &lt;/code&gt; action like below
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;customize_deregister_panel_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;deregister_panel_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Customize_Themes_Panel'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customize_deregister_panel_type'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To deregister any section type add below function in &lt;code&gt; customize_register &lt;/code&gt; action like below
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;customize_deregister_section_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$wp_customize&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;deregister_section_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'WP_Customize_Section'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'customize_register'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'customize_deregister_section_type'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44977 (Transient fill fail delete to itself if it's timeout option is missing) created</title>
      
        <dc:creator>nlozovan</dc:creator>

      <pubDate>Fri, 21 Sep 2018 11:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44977/1537529144362862</guid>
      <description>&lt;p&gt;
Just faced this issue - for some reason, the transient was not deleting itself. While checking the DB, the option with the transient was there, while the timeout option was missing (probably a glitch while saving to DB).
Now, if you check get_transient() in option.php (quick link &lt;a href="https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-includes/option.php#L0"&gt;https://core.trac.wordpress.org/browser/tags/4.9.8/src/wp-includes/option.php#L0&lt;/a&gt; ) you can see that these are deleted only if both exist and both pass the test:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[...]
 if ( false !== $timeout &amp;amp;&amp;amp; $timeout &amp;lt; time() ) { DELETING TRANSIENT}
[...]
&lt;/pre&gt;&lt;p&gt;
Otherwise transient will hang... forever. This should be tuned up so it also checks that these options exist, and delete transient if timeout is absolete.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 09:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:3/1537522453447244</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44976#comment:2" title="Comment 2"&gt;mukesh27&lt;/a&gt;:
remove_control() removes a control and not the control type. These are two different thing. Ask yourself, why do we have to register a control type when we already have add_control()
&lt;/p&gt;
&lt;p&gt;
A control and control type are two different concept.
&lt;/p&gt;
&lt;p&gt;
The former is what is shown on customizer and the latter is the php Class definition of the control.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Collizo4sky, remove_control already remove the control for customizer so why we need other function for same functionality?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Fri, 21 Sep 2018 08:19:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:2/1537517955085129</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@Collizo4sky, remove_control already remove the control for customizer so why we need other function for same functionality?
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;unset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) updated</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976#comment:1/1537510997272048</guid>
      <description>&lt;p&gt;
Couldn't find how to remove the duplicate patch. So here we are. Two similar patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>class-wp-customize-manager.2.diff attached to Ticket #44976</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:20:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.2.diff/1537510835540017</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>class-wp-customize-manager.diff attached to Ticket #44976</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44976/class-wp-customize-manager.diff/1537510705144855</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44976 (Proposal to add deregister_control_type(), deregister_panel_type() and ...) created</title>
      
        <dc:creator>Collizo4sky</dc:creator>

      <pubDate>Fri, 21 Sep 2018 06:17:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44976/1537510644453830</guid>
      <description>&lt;p&gt;
Today was the time I wish I am able to remove a registered customizer control.
&lt;/p&gt;
&lt;p&gt;
I also have a patch to implement a deregister_control_type()
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39309 (Secure WordPress Against Infrastructure Attacks) updated</title>
      
        <dc:creator>paragoninitiativeenterprises</dc:creator>

      <pubDate>Fri, 21 Sep 2018 05:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39309#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39309#comment:41/1537508907108184</guid>
      <description>&lt;p&gt;
We released &lt;a class="ext-link" href="https://github.com/paragonie/sodium_compat/releases/tag/v1.6.6"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;sodium_compat v1.6.6&lt;/a&gt; tonight, which introduced a &lt;em&gt;significant&lt;/em&gt; speedup on 32-bit platforms (i.e. &lt;code&gt;PHP_INT_SIZE === 4&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
I believe it is now reasonably practical to consider Ed25519 signature verification on future WordPress updates.
&lt;/p&gt;
&lt;p&gt;
Questions:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;What are the specific infrastructure blockers on the WordPress.org side that need to be resolved before my patches can be considered for merging?
&lt;ul&gt;&lt;li&gt;To be preemptive, demanding HSM support is &lt;a class="ext-link" href="https://www.psychologytoday.com/us/blog/happiness-in-world/201106/why-perfect-is-the-enemy-good"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;making perfect the enemy of good&lt;/a&gt;. But even if that demand is still on the table, YubiHSM supports Ed25519 so this problem is solved. Surely the companies that depend on WordPress can swing for one?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What additional code changes need to be made to accommodate this patch?
&lt;ul&gt;&lt;li&gt;e.g. making sure update servers push the Ed25519 header alongside the update file
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;What are the social (and/or office-political) objections to this change?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
In the event of a security concern, I'd like to remind everyone that libsodium is in the PHP standard library as of 7.2, so any concerns over the security of Ed25519 need to be raised in a lot of places (and probably published on the IACR if you've discovered a new attack).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
As far as code audits go, I'm not sure what to suggest.
&lt;/p&gt;
&lt;p&gt;
The quotes I received ranged from $2k to $4k per person-day, for a minimum of two weeks. One firm issued a flat rate quote in the $20-30k range. This isn't the sort of thing you can solve with Fiverr.
&lt;/p&gt;
&lt;p&gt;
But more pertinently:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;None of the firms who specialize in cryptography (save ours) also specializes in PHP.
&lt;/li&gt;&lt;li&gt;None of the software security firms specializing in PHP that we're aware of have cryptography experts on staff.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A first-party cryptography audit is &lt;a class="ext-link" href="https://www.schneier.com/blog/archives/2011/04/schneiers_law.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;useless&lt;/a&gt;; only through third party verification can we hope to gain confidence that a specific implementation is secure.
&lt;/p&gt;
&lt;p&gt;
This presents a unique challenge for us: Who else has the prerequisite experience and specialized domain knowledge to check our work? Furthermore, an audit of sodium_compat would also require auditing the various PHP versions that WordPress supports. To wit:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;PHP 5.2.4
&lt;/li&gt;&lt;li&gt;PHP 5.2.5
&lt;/li&gt;&lt;li&gt;PHP 5.2.6
&lt;/li&gt;&lt;li&gt;PHP 5.2.7
&lt;/li&gt;&lt;li&gt;PHP 5.2.8
&lt;/li&gt;&lt;li&gt;PHP 5.2.9
&lt;/li&gt;&lt;li&gt;PHP 5.2.10
&lt;/li&gt;&lt;li&gt;PHP 5.2.11
&lt;/li&gt;&lt;li&gt;PHP 5.2.12
&lt;/li&gt;&lt;li&gt;PHP 5.2.13
&lt;/li&gt;&lt;li&gt;PHP 5.2.14
&lt;/li&gt;&lt;li&gt;PHP 5.2.15
&lt;/li&gt;&lt;li&gt;PHP 5.2.16
&lt;/li&gt;&lt;li&gt;PHP 5.3.0
&lt;/li&gt;&lt;li&gt;PHP 5.3.1
&lt;/li&gt;&lt;li&gt;PHP 5.3.2
&lt;/li&gt;&lt;li&gt;PHP 5.3.3
&lt;/li&gt;&lt;li&gt;PHP 5.3.4
&lt;/li&gt;&lt;li&gt;PHP 5.3.5
&lt;/li&gt;&lt;li&gt;PHP 5.3.6
&lt;/li&gt;&lt;li&gt;PHP 5.3.7
&lt;/li&gt;&lt;li&gt;PHP 5.3.8
&lt;/li&gt;&lt;li&gt;PHP 5.3.9
&lt;/li&gt;&lt;li&gt;PHP 5.3.10
&lt;/li&gt;&lt;li&gt;PHP 5.3.11
&lt;/li&gt;&lt;li&gt;PHP 5.3.12
&lt;/li&gt;&lt;li&gt;PHP 5.3.13
&lt;/li&gt;&lt;li&gt;PHP 5.3.14
&lt;/li&gt;&lt;li&gt;PHP 5.3.15
&lt;/li&gt;&lt;li&gt;PHP 5.3.16
&lt;/li&gt;&lt;li&gt;PHP 5.3.17
&lt;/li&gt;&lt;li&gt;PHP 5.3.18
&lt;/li&gt;&lt;li&gt;PHP 5.3.19
&lt;/li&gt;&lt;li&gt;PHP 5.3.20
&lt;/li&gt;&lt;li&gt;PHP 5.3.21
&lt;/li&gt;&lt;li&gt;PHP 5.3.22
&lt;/li&gt;&lt;li&gt;PHP 5.3.23
&lt;/li&gt;&lt;li&gt;PHP 5.3.24
&lt;/li&gt;&lt;li&gt;PHP 5.3.25
&lt;/li&gt;&lt;li&gt;PHP 5.3.26
&lt;/li&gt;&lt;li&gt;PHP 5.3.27
&lt;/li&gt;&lt;li&gt;PHP 5.3.28
&lt;/li&gt;&lt;li&gt;PHP 5.3.29
&lt;/li&gt;&lt;li&gt;PHP 5.4.0
&lt;/li&gt;&lt;li&gt;PHP 5.4.1
&lt;/li&gt;&lt;li&gt;PHP 5.4.2
&lt;/li&gt;&lt;li&gt;PHP 5.4.3
&lt;/li&gt;&lt;li&gt;PHP 5.4.4
&lt;/li&gt;&lt;li&gt;PHP 5.4.5
&lt;/li&gt;&lt;li&gt;PHP 5.4.6
&lt;/li&gt;&lt;li&gt;PHP 5.4.7
&lt;/li&gt;&lt;li&gt;PHP 5.4.8
&lt;/li&gt;&lt;li&gt;PHP 5.4.9
&lt;/li&gt;&lt;li&gt;PHP 5.4.10
&lt;/li&gt;&lt;li&gt;PHP 5.4.11
&lt;/li&gt;&lt;li&gt;PHP 5.4.12
&lt;/li&gt;&lt;li&gt;PHP 5.4.13
&lt;/li&gt;&lt;li&gt;PHP 5.4.14
&lt;/li&gt;&lt;li&gt;PHP 5.4.15
&lt;/li&gt;&lt;li&gt;PHP 5.4.16
&lt;/li&gt;&lt;li&gt;PHP 5.4.17
&lt;/li&gt;&lt;li&gt;PHP 5.4.18
&lt;/li&gt;&lt;li&gt;PHP 5.4.19
&lt;/li&gt;&lt;li&gt;PHP 5.4.20
&lt;/li&gt;&lt;li&gt;PHP 5.4.21
&lt;/li&gt;&lt;li&gt;PHP 5.4.22
&lt;/li&gt;&lt;li&gt;PHP 5.4.23
&lt;/li&gt;&lt;li&gt;PHP 5.4.24
&lt;/li&gt;&lt;li&gt;PHP 5.4.25
&lt;/li&gt;&lt;li&gt;PHP 5.4.26
&lt;/li&gt;&lt;li&gt;PHP 5.4.27
&lt;/li&gt;&lt;li&gt;PHP 5.4.28
&lt;/li&gt;&lt;li&gt;PHP 5.4.29
&lt;/li&gt;&lt;li&gt;PHP 5.4.30
&lt;/li&gt;&lt;li&gt;PHP 5.4.31
&lt;/li&gt;&lt;li&gt;PHP 5.5.0
&lt;/li&gt;&lt;li&gt;PHP 5.5.1
&lt;/li&gt;&lt;li&gt;PHP 5.5.2
&lt;/li&gt;&lt;li&gt;PHP 5.5.3
&lt;/li&gt;&lt;li&gt;PHP 5.5.4
&lt;/li&gt;&lt;li&gt;PHP 5.5.5
&lt;/li&gt;&lt;li&gt;PHP 5.5.6
&lt;/li&gt;&lt;li&gt;PHP 5.5.7
&lt;/li&gt;&lt;li&gt;PHP 5.5.8
&lt;/li&gt;&lt;li&gt;PHP 5.5.9
&lt;/li&gt;&lt;li&gt;PHP 5.5.10
&lt;/li&gt;&lt;li&gt;PHP 5.5.11
&lt;/li&gt;&lt;li&gt;PHP 5.5.12
&lt;/li&gt;&lt;li&gt;PHP 5.5.13
&lt;/li&gt;&lt;li&gt;PHP 5.5.14
&lt;/li&gt;&lt;li&gt;PHP 5.5.15
&lt;/li&gt;&lt;li&gt;PHP 5.5.16
&lt;/li&gt;&lt;li&gt;PHP 5.5.17
&lt;/li&gt;&lt;li&gt;PHP 5.5.18
&lt;/li&gt;&lt;li&gt;PHP 5.5.19
&lt;/li&gt;&lt;li&gt;PHP 5.5.20
&lt;/li&gt;&lt;li&gt;PHP 5.5.21
&lt;/li&gt;&lt;li&gt;PHP 5.5.22
&lt;/li&gt;&lt;li&gt;PHP 5.5.23
&lt;/li&gt;&lt;li&gt;PHP 5.5.24
&lt;/li&gt;&lt;li&gt;PHP 5.5.25
&lt;/li&gt;&lt;li&gt;PHP 5.5.26
&lt;/li&gt;&lt;li&gt;PHP 5.5.27
&lt;/li&gt;&lt;li&gt;PHP 5.5.28
&lt;/li&gt;&lt;li&gt;PHP 5.5.29
&lt;/li&gt;&lt;li&gt;PHP 5.5.30
&lt;/li&gt;&lt;li&gt;PHP 5.5.31
&lt;/li&gt;&lt;li&gt;PHP 5.5.32
&lt;/li&gt;&lt;li&gt;PHP 5.5.33
&lt;/li&gt;&lt;li&gt;PHP 5.5.34
&lt;/li&gt;&lt;li&gt;PHP 5.5.35
&lt;/li&gt;&lt;li&gt;PHP 5.5.36
&lt;/li&gt;&lt;li&gt;PHP 5.5.37
&lt;/li&gt;&lt;li&gt;PHP 5.5.38
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
... and those are just the &lt;a class="ext-link" href="https://secure.php.net/supported-versions.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;versions of PHP that are no longer supported by the PHP team&lt;/a&gt;!
&lt;/p&gt;
&lt;p&gt;
So if "we need an audit" is the big blocker issue, as Matt Mullenweg as expressed in the past, then it bears emphasizing the level of effort being demanded here.
&lt;/p&gt;
&lt;p&gt;
An auditor would be required to:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Verify that there are no security bugs in sodium_compat itself. This is the easy part.
&lt;/li&gt;&lt;li&gt;Verify that there are no security-affecting side-channel attacks made possible by the PHP interpreter (and/or OpCache).
&lt;/li&gt;&lt;li&gt;Verify that any null findings in step 2 hold for every PHP version I listed above, and also for all the versions that are still supported by the developers of PHP.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
A team of three security experts (consisting of at least one cryptographer) would likely burn months of their lives on making sure this is done right. And that's just for one audit; a single data point.
&lt;/p&gt;
&lt;p&gt;
Speaking of points, I hope mine is clear: Please tell me what the specific obstacles are to getting this merged, and I will do what I can to solve them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 21 Sep 2018 05:19:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:39/1537507163779710</guid>
      <description>&lt;p&gt;
Created &lt;a href="https://core.trac.wordpress.org/ticket/44975"&gt;https://core.trac.wordpress.org/ticket/44975&lt;/a&gt; for the ability to switch a non-date-floating post back into a date-floating post. So this ticket can just focus on allowing posts to remain "date floating" even when the &lt;code&gt;date&lt;/code&gt; parameter is provided in update requests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44975 (REST API support switching draft to unscheduled) created</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Fri, 21 Sep 2018 05:15:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44975/1537506954026548</guid>
      <description>&lt;p&gt;
Ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39953" title="#39953: enhancement: REST API: Do not update date when preparing post if date is known to ... (new)"&gt;#39953&lt;/a&gt; allows REST API clients to send a post's date in a POST request, and either leave the post as "date floating" (draft that says 'Publish immediately') switch it to be "non-date-floating" (draft that says 'Schedule for...').
&lt;/p&gt;
&lt;p&gt;
However, REST API clients cannot make a request to switch the post BACK to being "date floating" (mentioned on &lt;a href="https://core.trac.wordpress.org/ticket/39953#comment:25"&gt;https://core.trac.wordpress.org/ticket/39953#comment:25&lt;/a&gt; and &lt;a href="https://core.trac.wordpress.org/ticket/39953#comment:34"&gt;https://core.trac.wordpress.org/ticket/39953#comment:34&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
This option isn't available in WordPress' default editor either (see &lt;a href="https://core.trac.wordpress.org/ticket/8368#comment:20"&gt;https://core.trac.wordpress.org/ticket/8368#comment:20&lt;/a&gt;). However, from my testing, WordPress.com's Calypso editor DOES allow this. Also there's a very old ticket suggesting it be added: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8368" title="#8368: enhancement: Scheduling post time behavior and language refinements (assigned)"&gt;#8368&lt;/a&gt;, so it seems reasonable that the REST API should support this (and maybe Gutenberg too someday).
&lt;/p&gt;
&lt;p&gt;
So how should a REST API client specify they want to switch a post back to date floating (say "Publish immediately" in the classic editor)?
&lt;/p&gt;
&lt;p&gt;
Should they provide a post's &lt;code&gt;date&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, or maybe even to the same value as &lt;code&gt;modified&lt;/code&gt;? (I suggest that last one because that's how you leave a currently-"date floating" post as-is, see &lt;a href="https://core.trac.wordpress.org/ticket/39953#comment:25"&gt;https://core.trac.wordpress.org/ticket/39953#comment:25&lt;/a&gt;)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>WPMS.jpg attached to Ticket #44974</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Fri, 21 Sep 2018 02:34:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44974/WPMS.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44974/WPMS.jpg/1537497296734350</guid>
      <description>&lt;p&gt;
Screen grab of incorrect wording
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44974 (On WordPress MultiSite &gt; Sites, when deactivating, the verbiage says ...) created</title>
      
        <dc:creator>BearlyDoug</dc:creator>

      <pubDate>Fri, 21 Sep 2018 02:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44974/1537497273255283</guid>
      <description>&lt;p&gt;
On WordPress MultiSite &amp;gt; Sites, when deactivating, the verbiage says "Deleted" rather than "Deactivated".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44973 (Issues with $wpdb-&gt;get_col_info) updated</title>
      
        <dc:creator>drocks13</dc:creator>

      <pubDate>Thu, 20 Sep 2018 23:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44973#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44973#comment:1/1537487957775622</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44901 (Remove unneeded WP_Error in confirmaction) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Thu, 20 Sep 2018 23:01:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44901#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44901#comment:7/1537484463388824</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Alright finally setup my local environment here so I can start patching things.&lt;br /&gt;
@desrosj or @SergeyBiryukov would you mind reviewing/testing before we mark to &lt;code&gt;commit&lt;/code&gt;&lt;br /&gt;
Thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44901.diff attached to Ticket #44901</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Thu, 20 Sep 2018 22:58:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44901/44901.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44901/44901.diff/1537484291660337</guid>
      <description>&lt;p&gt;
Initial Code Restructuring
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Thu, 20 Sep 2018 22:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:38/1537482446650529</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39953#comment:35" title="Comment 35"&gt;TimothyBlynJacobs&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could also support passing &lt;code&gt;null&lt;/code&gt; as a date to reset back to no fixed date.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is &lt;code&gt;null&lt;/code&gt; the correct value, over &lt;code&gt;false&lt;/code&gt; or an empty string?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44094 (Hook for WP_User data hydration to enable strong data security) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 22:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44094#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44094#comment:9/1537482424707347</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Thu, 20 Sep 2018 22:24:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:37/1537482245221933</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We could also support passing null as a date to reset back to no fixed date.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It does not need to be a part of this ticket I think given that it's a longstanding issue (see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/8368" title="#8368: enhancement: Scheduling post time behavior and language refinements (assigned)"&gt;#8368&lt;/a&gt;), but this is the idea I came to as well, and I really like this idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8368 (Scheduling post time behavior and language refinements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 22:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8368#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8368#comment:29/1537481380670014</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by danielbachhuber. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1537481380000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44973 (Issues with $wpdb-&gt;get_col_info) created</title>
      
        <dc:creator>drocks13</dc:creator>

      <pubDate>Thu, 20 Sep 2018 21:37:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44973/1537479469374060</guid>
      <description>&lt;p&gt;
When attempting to get certain column information using $wpdb-&amp;gt;get_col_info I get the following error notice:
&lt;/p&gt;
&lt;p&gt;
Notice: Undefined property: stdClass::$primary_key in ..../wp-includes/wp-db.php on line 3211
&lt;/p&gt;
&lt;p&gt;
Similar for 'not_null' and several of the other options. Name, type, etc. work just fine. It looks like not all the properties are set for all the options listed in the docs - &lt;a class="ext-link" href="https://codex.wordpress.org/Class_Reference/wpdb#Getting_Column_Information"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Class_Reference/wpdb#Getting_Column_Information&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 21:36:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:36/1537479376377151</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by danielbachhuber. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1537479375000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44965 (WordPress Core strips $_GET['error'] occasionally) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 21:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44965#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44965#comment:2/1537478786205371</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44233.7.diff attached to Ticket #44233</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:54:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44233/44233.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44233/44233.7.diff/1537476888980773</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44233 (Add missing unit tests for exporting personal data by username or ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44233#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44233#comment:26/1537476837973089</guid>
      <description>&lt;p&gt;
Thanks, @iandunn! See my responses below which are reflected in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44233/44233.7.diff" title="Attachment '44233.7.diff' in Ticket #44233"&gt;44233.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44233/44233.7.diff" title="Download"&gt;​&lt;/a&gt; .
&lt;/p&gt;
&lt;h4 id="Tests_Privacy_WpPrivacyProcessPersonalDataExportPage"&gt;&lt;code&gt;Tests_Privacy_WpPrivacyProcessPersonalDataExportPage&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How is &lt;code&gt;$request_email&lt;/code&gt; different from &lt;code&gt;$requester_email&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;$request_email&lt;/code&gt; appears to left over from a patch refactor. I removed it because it was not used anywhere (&lt;code&gt;$requester_email&lt;/code&gt; was used instead in all test methods).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why is this (&lt;code&gt;wp_mail_from&lt;/code&gt; hook) removed here instead of in &lt;code&gt;test_function_should_send_error_on_last_page_of_last_exporter_when_mail_delivery_fails()&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I removed all filter and action related removing in the &lt;code&gt;tearDown()&lt;/code&gt; method because &lt;code&gt;parent::tearDown()&lt;/code&gt; already handles these.
&lt;/p&gt;
&lt;p&gt;
Also in this class:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removed &lt;code&gt;self::$send_as_email&lt;/code&gt;. This is only ever &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. I created a data provider for methods that should test when an email is and is not sent.
&lt;/li&gt;&lt;/ul&gt;&lt;h4 id="Tests_Privacy_WpPrivacyGeneratePersonalDataExportFile"&gt;&lt;code&gt;Tests_Privacy_WpPrivacyGeneratePersonalDataExportFile&lt;/code&gt;&lt;/h4&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What problem is caused by a plugin intentionally changing the path to the folder?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The &lt;code&gt;tearDown()&lt;/code&gt; method will delete the export folder after each test method. I think @birgire had added this, but I think the intent was to prevent a non-default export folder from being removed when running the tests on an install where a plugin was filtering the directory. I removed these checks in my patch. If @birgire can point to a reason this should stay, we can add the checks back.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is it unsafe to assume that &lt;code&gt;$exports_dir&lt;/code&gt; is a folder? What would cause it to be a file?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The exports directory will be a file after the &lt;code&gt;test_detect_cannot_create_folder()&lt;/code&gt; test method which verifies an error is returned when the export directory is a file. I added an inline comment above that conditional for context. It also &lt;em&gt;could&lt;/em&gt; be a file if an incorrect value is returned to the &lt;code&gt;wp_privacy_exports_dir&lt;/code&gt; filter.
&lt;/p&gt;
&lt;p&gt;
Also in the patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Removed &lt;code&gt;_function_&lt;/code&gt; from all methods that had &lt;code&gt;test_function_does_something&lt;/code&gt; for more precise naming.
&lt;/li&gt;&lt;li&gt;Created a DRY &lt;code&gt;_setup_expected_failure()&lt;/code&gt; helper method to set up a test method to expect an exception.
&lt;/li&gt;&lt;li&gt;Removed &lt;code&gt;@since&lt;/code&gt; tags on test methods in favor of &lt;code&gt;@ticket&lt;/code&gt; tags.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42463 (Poor Description of add_image_size Params) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:47:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42463#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42463#comment:9/1537476458811013</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42463 (Poor Description of add_image_size Params) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:47:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42463#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42463#comment:8/1537476451896815</guid>
      <description>&lt;p&gt;
The docblock is totally inadequate.  My reading of it is literally "We will either scale or crop your photo, and the default is false."  So wth?  Am I to understand that if I set "true", then a 1000 x 1000 image will be "cropped" to, say, the middle 100x100 pixels and never resized?  Based on my experience, that is not even accurate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39963 (MIME Alias Handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39963#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39963#comment:39/1537475896038468</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1537475895000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40175 (Upload Validation / MIME Handling) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:37:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40175#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40175#comment:31/1537475821842159</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1537475821000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37392 (Multisite "Sites" screen: Add links to filter websites by status) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:36:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37392#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37392#comment:26/1537475784279837</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by mnelson4. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1537475783000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:9/1537475578321479</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1537475577000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43169 (Media views: avoid to move focus programmatically when not strictly ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 20:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43169#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43169#comment:9/1537475456247739</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by antpb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1537475455000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41305 (Add lazily evaluated translations) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 20 Sep 2018 18:58:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41305#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41305#comment:25/1537469923761218</guid>
      <description>&lt;p&gt;
FYI this would help &lt;a href="https://core.trac.wordpress.org/ticket/44758#comment:24"&gt;https://core.trac.wordpress.org/ticket/44758#comment:24&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44094 (Hook for WP_User data hydration to enable strong data security) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 18:43:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44094#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44094#comment:8/1537468998818737</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by yaronguez. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1537468997000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41305 (Add lazily evaluated translations) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 20 Sep 2018 18:42:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41305#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41305#comment:24/1537468959555821</guid>
      <description>&lt;p&gt;
FYI I would love to see this happen. I took the latest patch for a spin with &lt;a class="ext-link" href="https://wordpress.org/plugins/event-espresso-decaf/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;our plugin&lt;/a&gt; and there were no fatal errors, but it broke some key functionality (our plugin does event registration, and it broke that). We were using translated strings as array keys. There were warnings for both of these, and after I cast them to strings, the code worked fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44758 (The REST API is not respecting the user's locale properly.) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 20 Sep 2018 18:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44758#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44758#comment:25/1537467463709151</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
But now that I think about it, &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41305" title="#41305: enhancement: Add lazily evaluated translations (assigned)"&gt;#41305&lt;/a&gt; came back into my mind which should solve this issue for _any_ string. So that's probably the way to go
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, I'd love for that to be the solution. I'm not holding my breath though, as that'll be a significant change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Thu, 20 Sep 2018 18:12:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:35/1537467141048065</guid>
      <description>&lt;p&gt;
We could also support passing &lt;code&gt;null&lt;/code&gt; as a date to reset back to no fixed date.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 20 Sep 2018 18:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:34/1537466867430304</guid>
      <description>&lt;p&gt;
I took this for a spin and basically double-checked what the unit tests are already asserting:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;on a date-floating post, if you POST the same &lt;code&gt;date&lt;/code&gt; you received in a GET request, it will remain date-floating
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;on a date-floating post, if you POST a different &lt;code&gt;date&lt;/code&gt; than what you received in a GET request, it will no longer be date-floating
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;on a non-date-floating post, it will remain a non-date-floating post regardless of what you provide for &lt;code&gt;date&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So 👍
&lt;/p&gt;
&lt;p&gt;
However, I would think we'd want to also support transitioning back to date-floating (like I noted is supported in Calypso, and so is supported by the WP.com API). Eg for a non-date-floating post, if you passed an identical &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;modified&lt;/code&gt; dates, the post should revert to date-floating (the database columns &lt;code&gt;post_date&lt;/code&gt; and &lt;code&gt;post_date_gmt&lt;/code&gt; are updated with the POST &lt;code&gt;date&lt;/code&gt; value, the POST's &lt;code&gt;modified&lt;/code&gt; value is ignored and &lt;code&gt;post_modified&lt;/code&gt; and &lt;code&gt;post_modified_gmt&lt;/code&gt; are instead updated to the current time). Should I make a separate issue for supporting updating a non-date-floating post to be date-floating again?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38994 (Update Plupload to version 2.X) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 17:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38994#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38994#comment:4/1537464733255271</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1537464731000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 17:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:33/1537463329634050</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by timothybjacobs. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1537463328000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44458 (Catch WSODs and provide a means for recovery for end users) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 20 Sep 2018 17:06:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44458#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44458#comment:30/1537463217310905</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by sheri. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1537463216000200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44972 (wp_get_current_user() misbehavior) created</title>
      
        <dc:creator>tazotodua</dc:creator>

      <pubDate>Thu, 20 Sep 2018 16:30:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44972</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44972/1537461006862767</guid>
      <description>&lt;p&gt;
You might say that the problem is coming from plugins, but wanted to mention this:
&lt;/p&gt;
&lt;p&gt;
Sometimes, I've found that some plugins use:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$smth = get_bloginfo('language'...);&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
1) directly in plugin php file (i mean out of the hook, just directly as a new line),
&lt;/p&gt;
&lt;p&gt;
2) or sometimes that code is used in &lt;code&gt;class&lt;/code&gt; &lt;code&gt;__construct&lt;/code&gt;  method (not different than first one - you know, constructor is executed directly too).
&lt;/p&gt;
&lt;p&gt;
to reproduce the problem, just place that line in any plugin/functions.php, then enter WP dashboard, and you get:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Sorry, you are not allowed to access this page.&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
yes, just using that code in XYZ plugin (without any further action, just that code), causes you to be blocked out from wp.
&lt;/p&gt;
&lt;p&gt;
I've researched and the chain goes like -&amp;gt; get_bloginfo()-&amp;gt;get_user_locale() -&amp;gt;wp_get_current_user()----&amp;gt;  &lt;code&gt;wp_set_current_user( $user_id );&lt;/code&gt; &amp;lt;---- this one makes the issue i think.
&lt;/p&gt;
&lt;p&gt;
so, i dont know, but i think get_bloginfo function (or get_current user function) which may be &lt;strong&gt;EVEN&lt;/strong&gt; fired incorrectly, shouldnt cause that problem.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44820 (CodeMirror in Customize - copy &amp; paste bug) updated</title>
      
        <dc:creator>dionysous</dc:creator>

      <pubDate>Thu, 20 Sep 2018 15:03:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44820#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44820#comment:3/1537455834982019</guid>
      <description>&lt;p&gt;
Hello @SergeyBiryukov ,
&lt;/p&gt;
&lt;p&gt;
thank you for trying. Try copying this CSS code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.class .class-2 #id-here {
}
&lt;/pre&gt;&lt;p&gt;
...and save the Customize options then. Reload the Customize.
Paste only this after the saved CSS code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;.class .class-2 #id-here {
&lt;/pre&gt;&lt;p&gt;
The cursor/focus should be after the openin &lt;strong&gt;{&lt;/strong&gt;. Next press enter key. Then the &lt;em&gt;align-content&lt;/em&gt; suggestion should appear.
&lt;/p&gt;
&lt;p&gt;
It happened for users on Windows, e.g. on Chrome or Firefox.
&lt;/p&gt;
&lt;p&gt;
I could reproduce it now in Safari (latest) and Google Chrome (latest) on MacOS, but we have users/webdesigners, which reported us the problem on Windows systems.
&lt;/p&gt;
&lt;p&gt;
Can you reproduce the bug now?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27399 (Filter the HTML output of wp_get_attachment_image) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Thu, 20 Sep 2018 15:02:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27399#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27399#comment:29/1537455756525915</guid>
      <description>&lt;p&gt;
I also think filtering the HTML output would be helpful for lazy loading plugins. Especially as we now have those new media widgets, which couldn't be easily handled by these plugins.
&lt;/p&gt;
&lt;p&gt;
Patch looks fine for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>WP_Community_Events.patch attached to Ticket #44971</title>
      
        <dc:creator>andfinally</dc:creator>

      <pubDate>Thu, 20 Sep 2018 14:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44971/WP_Community_Events.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44971/WP_Community_Events.patch/1537452007621474</guid>
      <description>&lt;p&gt;
Change to enable WP_Community_Events to find cached events when no location is passed to the constructor
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44971 (Enable WP_Community_Events to find cached events even if it's ...) created</title>
      
        <dc:creator>andfinally</dc:creator>

      <pubDate>Thu, 20 Sep 2018 13:59:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44971</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44971/1537451965686538</guid>
      <description>&lt;p&gt;
The "WordPress Events and News" dashboard widget in &lt;code&gt;wp-admin&lt;/code&gt; makes requests to the  &lt;code&gt;http://api.wordpress.org/events/1.0/&lt;/code&gt; endpoint for details about WordPress community events in a particular location. The class that powers the widget caches the event data for a location in a transient, using the user's IP address as the key.
&lt;/p&gt;
&lt;p&gt;
At the moment, the localisation function that retrieves this cached data for the dashboard JS, &lt;code&gt;wp_localize_community_events&lt;/code&gt;, relies on the fact that the ajax request handler that fetches it, &lt;code&gt;wp_ajax_get_community_events&lt;/code&gt;, saves the user's last known location as a user option.
&lt;/p&gt;
&lt;p&gt;
We'd like to show the community events in Calypso too. We've created an endpoint on public-api.wordpress.com (D18510-code) which instantiates &lt;code&gt;WP_Community_Events&lt;/code&gt; and fetches the events. We're not persisting the user's last known location, so we're not generally passing a location array to the constructor. To avoid putting too much pressure on the &lt;code&gt;api.wordpress.org&lt;/code&gt; endpoint, we'd like to make sure the class's &lt;code&gt;get_cached_events&lt;/code&gt; method checks if there are cached events for the user's network IP before it makes a request to the API.
&lt;/p&gt;
&lt;p&gt;
We have a workaround for this in our endpoint (D18510-code), which calls &lt;code&gt;get_unsafe_client_ip&lt;/code&gt; to create a location for the user if none is provided in search params; but it seems to make more sense to enable the class to handle this case.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;WP_Community_Events&lt;/code&gt; currently tries to retrieve cached events before it makes a request to the API. If nothing's found in the cache, it calls &lt;code&gt;get_unsafe_client_ip&lt;/code&gt; before making the request. This patch moves that call to before the cache search, so that even if the class is instantiated without a location, it'll still be able to find any events cached for the user's current IP.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44970 (multisite GUID tables are not update after site name change) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 13:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44970#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44970#comment:3/1537448441508012</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44970 (multisite GUID tables are not update after site name change) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 13:00:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44970#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44970#comment:2/1537448431667465</guid>
      <description>wontfix: &lt;p&gt;
Hi @colomet, thanks for the ticket!
&lt;/p&gt;
&lt;p&gt;
Although GUIDs look like full URLs, they're actually just a unique name for the post that should never change. For this reason, they're intentionally not linked to the permalink setting. See &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/6492" title="#6492: enhancement: Guids No Longer Have Permalink Format (reopened)"&gt;#6492&lt;/a&gt; for previous discussions on this.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44970 (multisite GUID tables are not update after site name change) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 20 Sep 2018 12:49:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44970#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44970#comment:1/1537447796057583</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44970 (multisite GUID tables are not update after site name change) created</title>
      
        <dc:creator>colomet</dc:creator>

      <pubDate>Thu, 20 Sep 2018 10:35:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44970</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44970/1537439710742115</guid>
      <description>&lt;p&gt;
The Post table have the GUID colum. If the name of the site change, that table do not update the url of the page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42209 (register_taxonomy with a non-sequential array index of post_types ...) updated</title>
      
        <dc:creator>spectacula</dc:creator>

      <pubDate>Thu, 20 Sep 2018 10:05:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42209#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42209#comment:5/1537437928445256</guid>
      <description>&lt;p&gt;
I've run into this again today and was surprised to see it not fixed. A client wanted a certain taxonomy removed from a custom post type. This causes REST calls to the taxonomy to throw the wrong data type for &lt;strong&gt;types&lt;/strong&gt;.
The taxonomy and post type are created by a plugin that's outside of our control so we'd rather not have to modify it and thus have to maintain it. The change isn't one that'd need to be fed back to the original plugin authors either as it's not a bug just a client preference.
&lt;/p&gt;
&lt;p&gt;
Here's an example that achieves the same effect:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'init'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;register_taxonomy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'taxonomy_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'attachment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'page'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'show_in_rest'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;unregister_taxonomy_for_object_type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'taxonomy_name'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'attachment'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// Make request to https://{domain}/wp-json/wp/v2/taxonomies/taxonomy_name/
// "types":{"0":"post","2":"page"} instead of "types":["post","page"]
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44821 (Add filter for custom taxonomy per page value in `WP_Term_List_Table`) updated</title>
      
        <dc:creator>nateallen</dc:creator>

      <pubDate>Thu, 20 Sep 2018 06:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44821#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44821#comment:3/1537423833975950</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44821#comment:2" title="Comment 2"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44821/44821.3.diff" title="Attachment '44821.3.diff' in Ticket #44821"&gt;44821.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44821/44821.3.diff" title="Download"&gt;​&lt;/a&gt; seems like a good start.
&lt;/p&gt;
&lt;p&gt;
For consistency with the &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/edit_post_type_per_page/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;edit_{$post_type}_per_page&lt;/a&gt; filter though, the new filter should probably apply to core taxonomies as well. Any objections to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44821/44821.4.diff" title="Attachment '44821.4.diff' in Ticket #44821"&gt;44821.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44821/44821.4.diff" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thank you for the feedback. Yes, I think &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44821/44821.4.diff" title="Attachment '44821.4.diff' in Ticket #44821"&gt;44821.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44821/44821.4.diff" title="Download"&gt;​&lt;/a&gt; makes more sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44818 (cron: preventing duplicate events fails when the first event is too ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 06:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44818#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44818#comment:10/1537423644369941</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44820 (CodeMirror in Customize - copy &amp; paste bug) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 06:06:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44820#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44820#comment:2/1537423573982800</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @dionysous, welcome to WordPress Trac! Thanks for the report.
&lt;/p&gt;
&lt;p&gt;
I could not reproduce the issue on a clean install with Opera 55 (Windows 10).
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Does it happen in CodeMirror demos on &lt;a class="ext-link" href="https://codemirror.net"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codemirror.net&lt;/a&gt;?
&lt;/li&gt;&lt;li&gt;Which browser are you using?
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44821 (Add filter for custom taxonomy per page value in `WP_Term_List_Table`) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 05:56:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44821#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44821#comment:2/1537422972073897</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44821/44821.3.diff" title="Attachment '44821.3.diff' in Ticket #44821"&gt;44821.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44821/44821.3.diff" title="Download"&gt;​&lt;/a&gt; seems like a good start.
&lt;/p&gt;
&lt;p&gt;
For consistency with the &lt;a class="ext-link" href="https://developer.wordpress.org/reference/hooks/edit_post_type_per_page/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;edit_{$post_type}_per_page&lt;/a&gt; filter though, the new filter should probably apply to core taxonomies as well. Any objections to &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44821/44821.4.diff" title="Attachment '44821.4.diff' in Ticket #44821"&gt;44821.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44821/44821.4.diff" title="Download"&gt;​&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44821.4.diff attached to Ticket #44821</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 05:53:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44821/44821.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44821/44821.4.diff/1537422834084046</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44957 (media library shows errors when image filename is its dimensions) closed</title>
      
        <dc:creator>rtpHarry</dc:creator>

      <pubDate>Thu, 20 Sep 2018 05:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44957#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44957#comment:2/1537420874836889</guid>
      <description>invalid: &lt;p&gt;
Hello, I just tried to recreate this again for the steps and realised its my adblocker "uBlock Origin" which I guess was identifying them as potential adverts and blocking the urls.
&lt;/p&gt;
&lt;p&gt;
Sorry to waste your time.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #44318 (Non-default table prefix not used with new src/build flow, results in ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 05:14:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44318#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44318#comment:14/1537420462627983</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43650" title="Upgrade/Install: Adjust table prefix string check in ..."&gt;43650&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Upgrade/Install: Adjust table prefix string check in &lt;code&gt;setup-config.php&lt;/code&gt; for the coding standards change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42343" title="Code is Poetry.
WordPress' code just... wasn't.
This is now dealt ..."&gt;[42343]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props shashwatmittal, allendav.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44318" title="#44318: defect (bug): Non-default table prefix not used with new src/build flow, results in ... (closed: fixed)"&gt;#44318&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43650]: Upgrade/Install: Adjust table prefix string check in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 05:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43650</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43650/1537420461543545</guid>
      <description>&lt;p&gt;
Upgrade/Install: Adjust table prefix string check in &lt;code&gt;setup-config.php&lt;/code&gt; for the coding standards change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42343" title="Code is Poetry.
WordPress' code just... wasn't.
This is now dealt ..."&gt;[42343]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props shashwatmittal, allendav.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44318" title="#44318: defect (bug): Non-default table prefix not used with new src/build flow, results in ... (closed: fixed)"&gt;#44318&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44318 (Non-default table prefix not used with new src/build flow, results in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 05:14:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44318#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44318#comment:13/1537420446994040</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44318#comment:11" title="Comment 11"&gt;shashwatmittal&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Was not of aware of that. Thanks, will keep in mind the next time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No worries, thanks for the patch :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>customizer_issue.webm attached to Ticket #44968</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 20 Sep 2018 04:57:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44968/customizer_issue.webm</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44968/customizer_issue.webm/1537419433124148</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44968 (Header Text color option doing two jobs, so both suffer) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Thu, 20 Sep 2018 04:56:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44968#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44968#comment:2/1537419362715496</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@joyously, Yes it's bug. it will persist when we close Customizer panel otherwise color field value not removed and it working fine. check attached video for more information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44318 (Non-default table prefix not used with new src/build flow, results in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 20 Sep 2018 04:46:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44318#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44318#comment:12/1537418794507749</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44969 (Add support to limit results in get_objects_in_term()) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 20 Sep 2018 02:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44969/1537411416761230</guid>
      <description>&lt;p&gt;
The &lt;code&gt;get_objects_in_term()&lt;/code&gt; function currently returns all object IDs related to a term in a taxonomy. On sites with many term relationships, this may result in tens of thousands of them.
&lt;/p&gt;
&lt;p&gt;
Without a way to limit the results, developers currently need to write their own custom database query just to inject their own &lt;code&gt;LIMIT&lt;/code&gt; clause.
&lt;/p&gt;
&lt;p&gt;
Conveniently, the &lt;code&gt;get_objects_in_term()&lt;/code&gt; function already has a third &lt;code&gt;$args&lt;/code&gt; parameter that's currently only used to pass in a sort-order of &lt;code&gt;ASC&lt;/code&gt; or &lt;code&gt;DESC&lt;/code&gt;, so adding support for other query clauses is technically straight forward.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>