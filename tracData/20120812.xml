<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sun, 12 Aug 2012 22:55:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:14/1344812140592984</guid>
      <description>&lt;p&gt;
azaozz: in 5 years I don't think I've ever had a single complaint about my app's live preview being distracting. As I said above, I wait to update until there is a delay after typing, which probably avoids the UX problem you are worrying about.
&lt;/p&gt;
&lt;p&gt;
Anyway, this shouldn't be a debate about whether or not any client of the WordPress API has reasonable cause to create frequent preview updates. I laid out some reasons for why a template solution would be desirable and so far the reactions have mostly been dismissive of the rationale. The reaction that it would be difficult and error-prone are valid and that sounds like the legitimate reason to resist implementing something like I suggest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [964]: Fix shortcode_unautop() tests on Windows environments. see [371]. see ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 22:10:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/964/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/964/tests/1344809455119622</guid>
      <description>&lt;p&gt;
Fix shortcode_unautop() tests on Windows environments. see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/371/tests" title="shortcode_unautop() tests"&gt;[371]&lt;/a&gt;. see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/573/tests" title="Fixing failed unit tests.  The HEREDOC used the line endings in the ..."&gt;[573]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21558 (easy way to disable filtering for specific tag in the excerpt) updated</title>
      
        <dc:creator>hatul</dc:creator>

      <pubDate>Sun, 12 Aug 2012 21:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21558#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21558#comment:1/1344805335135339</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21558 (easy way to disable filtering for specific tag in the excerpt) created</title>
      
        <dc:creator>hatul</dc:creator>

      <pubDate>Sun, 12 Aug 2012 21:01:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21558/1344805290628566</guid>
      <description>&lt;p&gt;
I think there should be an easy way to prevent the filtering of specific tags (such as a image or a paragraph) in the excerpt.
Now to add a specific tag I need to rewrite the excerpt function. For example:
&lt;a class="ext-link" href="http://aaronrussell.co.uk/legacy/improving-wordpress-the_excerpt/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://aaronrussell.co.uk/legacy/improving-wordpress-the_excerpt/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Should be action that marks the tags that not will filter.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [963]: Explicitly exclude closure test for PHP 5.2 to prevent a parse error. ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 20:40:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/963/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/963/tests/1344804025154704</guid>
      <description>&lt;p&gt;
Explicitly exclude closure test for PHP 5.2 to prevent a parse error. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/101" title="#101: defect (bug): Security Breach: Editing off others posts with Level 1 (closed: fixed)"&gt;#101&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset in tests [962]: Fix parse error in PHP 5.2. see [952].</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 20:39:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/962/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/962/tests/1344803966675360</guid>
      <description>&lt;p&gt;
Fix parse error in PHP 5.2. see &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/952/tests" title="Introduce a category factory
Accomodate the term taxonomy, but set ..."&gt;[952]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21547 (Enable 'delocalization' of scripts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Aug 2012 20:19:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21547#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21547#comment:6/1344802791807420</guid>
      <description>&lt;p&gt;
This ticket is basically for the ability to "merge" the already set script_data with newly added values. Indeed this was possible to do with the proposed &lt;code&gt;add_script_data()&lt;/code&gt; in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11520" title="#11520: enhancement: print_scripts_l10n() should use json_encode() (closed: fixed)"&gt;#11520&lt;/a&gt; however it didn't make it.
&lt;/p&gt;
&lt;p&gt;
Localizing a script (as done in WordPress) means setting a simple JS object as &lt;code&gt;string_name : translated_value&lt;/code&gt;, then the main script uses the translated strings as needed. Agree it doesn't make sense for this to be overwritten. Additionally &lt;code&gt;html_entity_decode()&lt;/code&gt; needs to be run on the translations.
&lt;/p&gt;
&lt;p&gt;
Adding arbitrary "script_data" was supposed to be the underlying API method for localizing a script but with more possibilities like merging/overwriting already added data, i.e. exactly what you would use in this case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5809 (Updating a term in one taxonomy affects the term in every taxonomy) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 20:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5809#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5809#comment:53/1344802038972736</guid>
      <description>&lt;p&gt;
Closed &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21557" title="#21557: defect (bug): Duplicate term slug (closed: duplicate)"&gt;#21557&lt;/a&gt; as a duplicate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21557 (Duplicate term slug) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 20:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21557#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21557#comment:1/1344802016499073</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5809" title="#5809: defect (bug): Updating a term in one taxonomy affects the term in every taxonomy (closed: fixed)"&gt;#5809&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6211" title="#6211: enhancement: allow identical taxonomy slugs in different taxonomies (closed: duplicate)"&gt;#6211&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21557 (Duplicate term slug) created</title>
      
        <dc:creator>robertoentringer</dc:creator>

      <pubDate>Sun, 12 Aug 2012 19:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21557/1344801460495904</guid>
      <description>&lt;p&gt;
Case:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;add custom taxonomy-1
&lt;/li&gt;&lt;li&gt;- add term-a
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;add custom taxonomy-2
&lt;/li&gt;&lt;li&gt;- add term-a
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Bug: When I edit (wp-admin/edit-tags.php) the "term-a" in "taxonomy-1" changes also occur on the "term-a" in "taxonomy-2".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 12 Aug 2012 18:40:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:13/1344796830861722</guid>
      <description>&lt;p&gt;
As @markoheijnen mentions above "live preview" as you type is really bad from UX point of view. It's fun watching for a while but as soon as the user starts typing something "more serious" it's super distracting. It's the exact opposite of DFW :)
&lt;/p&gt;
&lt;p&gt;
On a small screen it's even worse: half of the screen is already taken up by the keyboard, then there is editor area where the user types on the other half. A live preview would split that editor into two making it really small and would "mirror" the content from the editor in the preview.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20704 (New hook: login_init_xmlrpc) closed</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sun, 12 Aug 2012 18:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20704#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20704#comment:8/1344795466862166</guid>
      <description>wontfix: &lt;p&gt;
I'm fine that you only need a hook that passes only the username. Normally you would also expect the password.
&lt;/p&gt;
&lt;p&gt;
I'm closing this ticket since there is only one type of login. Maybe two if you don't want that XML-RPC uses the same login. This is something that already can be done.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #20704 (New hook: login_init_xmlrpc) updated</title>
      
        <dc:creator>aercolino</dc:creator>

      <pubDate>Sun, 12 Aug 2012 18:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20704#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20704#comment:7/1344794725324163</guid>
      <description>&lt;p&gt;
What do you mean with "is wrong"? It was MY action, as you observed... I make it the way I need it...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21397 (Expose post revisions on the XML-RPC Endpoint) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sun, 12 Aug 2012 17:40:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21397#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21397#comment:17/1344793200300886</guid>
      <description>&lt;p&gt;
I do mean the autosave behavior. For creating a revision it probably make sense to use wp.editPost for doing that.
&lt;/p&gt;
&lt;p&gt;
For getting revisions I do believe it is better to create new methods for that because when using a API it should be obvious how to use it. It's little bit like the media methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21539 (category_description filter not applied to Description field on ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 17:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21539#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21539#comment:5/1344792702920975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21539#comment:4" title="Comment 4"&gt;StephenCronin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does that mean we don't need to progress anything and we can close this ticket?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not necessarily, we can leave it open to see if there might be more use cases for a new filter here and close it later if it gets no more traction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21547 (Enable 'delocalization' of scripts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 17:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21547#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21547#comment:5/1344791230288980</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21547#comment:4" title="Comment 4"&gt;evansolomon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An idea that I think is somewhat behind this ticket is that there should be an API for passing data to Javascript that isn't intertwined with localization.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was previously discussed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11520" title="#11520: enhancement: print_scripts_l10n() should use json_encode() (closed: fixed)"&gt;#11520&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21556 (Function to return value of an array element taking the array and a ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 12 Aug 2012 16:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21556#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21556#comment:1/1344790150561096</guid>
      <description>&lt;p&gt;
I don't think you need an accessor function like that, it's too much reflection. Reading values is like 1000x's faster than reading the return value of a function call in PHP. And instead of setting &lt;code&gt;$value = $arr[$key]&lt;/code&gt;, just refer to it as &lt;code&gt;$arr[$key]&lt;/code&gt; unless you act on it by calling &lt;code&gt;trim()&lt;/code&gt; or something
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21556 (Function to return value of an array element taking the array and a ...) created</title>
      
        <dc:creator>gkb6891</dc:creator>

      <pubDate>Sun, 12 Aug 2012 16:36:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21556</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21556/1344789383850183</guid>
      <description>&lt;p&gt;
PHP has a syntactical issue with a construct like the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$value = return_array_fun()[$key];
&lt;/pre&gt;&lt;p&gt;
where return_array_fun() is a function returning an array as output.
&lt;/p&gt;
&lt;p&gt;
One is forced to rewrite it as
&lt;/p&gt;
&lt;pre class="wiki"&gt;$temp_array = return_array_fun();
$value = $temp_array[$key];
&lt;/pre&gt;&lt;p&gt;
It would be nice to have a function in WordPress that makes this simple. Here's the one-liner:
&lt;/p&gt;
&lt;pre class="wiki"&gt; /**
   * Get the value of an element in an array
   */
  function array_get_value( $array, $key ) {
          return $array[$key];
  }
&lt;/pre&gt;&lt;p&gt;
I didn't create a separate diff file for this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18136 (WordPress Adding Spurious &lt;/p&gt;) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 12 Aug 2012 16:28:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18136#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18136#comment:4/1344788912265990</guid>
      <description>worksforme: &lt;p&gt;
There are still excess &lt;code&gt;&amp;lt;/p&amp;gt;&lt;/code&gt; tags in the linked post, but I couldn't reproduce the issue by copying the content from the HTML source (also tried switching to visual editor and back to HTML) neither in 3.4 nor in current trunk.
&lt;/p&gt;
&lt;p&gt;
Free free to reopen with steps to reproduce if there's still a problem.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sun, 12 Aug 2012 16:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:12/1344787392868134</guid>
      <description>&lt;p&gt;
Hi Marko - thanks for the clarification. I don't see the difficulty implicitly in implementing my suggestion, because I don't have a lot of experience with the internals of WordPress apart from the API.
&lt;/p&gt;
&lt;p&gt;
So, if it's too difficult or error-prone to provide the kind of templating behavior I suggested, I respect that. I'm happy to have my points recorded here in the ticket in case anybody has insights that would make such as solution more manageable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21533 (Error suppression in wp-db is lame: Part 2) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Sun, 12 Aug 2012 15:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21533#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21533#comment:8/1344786112000317</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21555 (Deprecate wp_create_thumbnail()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 12 Aug 2012 15:32:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21555#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21555#comment:1/1344785552723554</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21554 (Problem with determining e-mail charset in wp-mail.php) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Sun, 12 Aug 2012 15:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21554#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21554#comment:1/1344785429811530</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21397 (Expose post revisions on the XML-RPC Endpoint) updated</title>
      
        <dc:creator>maxcutler</dc:creator>

      <pubDate>Sun, 12 Aug 2012 13:31:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21397#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21397#comment:16/1344778290022740</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21397#comment:15" title="Comment 15"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
About the functionality. We don't want to save a post but we want to create a new revision for a specific post. That can be put live when needed. It's for loading the content into the site without needing it to be saved. A little bit what core does now when you writing a post for a long time and it saves when you are writing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you referring to the autosave behavior? I'm not sure why that warrants an entire new method (which must be maintained in perpetuity) instead of just adding a flag to &lt;code&gt;wp.editPost&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
These new methods look awfully similar to the existing post methods, and I don't yet see a clear advantage to increasing the maintenance and documentation burden when the same could be accomplished with simple filters/flags on existing methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14888 (PHPMailer class uses wrong/no sender for mail envelope) updated</title>
      
        <dc:creator>ipublicis</dc:creator>

      <pubDate>Sun, 12 Aug 2012 12:23:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14888#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14888#comment:10/1344774184258388</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18136 (WordPress Adding Spurious &lt;/p&gt;) updated</title>
      
        <dc:creator>ipublicis</dc:creator>

      <pubDate>Sun, 12 Aug 2012 12:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18136#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18136#comment:3/1344773524888030</guid>
      <description>&lt;p&gt;
I checked the code on some of the other more recent posts and it doesn't show anymore. This has more than one year. Shouldn't it be closed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21555.diff attached to Ticket #21555</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sun, 12 Aug 2012 12:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21555/21555.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21555/21555.diff/1344772810261979</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21555 (Deprecate wp_create_thumbnail()) created</title>
      
        <dc:creator>obenland</dc:creator>

      <pubDate>Sun, 12 Aug 2012 11:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21555/1344772774825872</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/image.php#L9"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;The function&lt;/a&gt; is basically just a wrapper for &lt;code&gt;image_resize()&lt;/code&gt; with a filter.
It hasn't been used since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4274" title="Uploader improvements from mdawaffe. fixes #3191"&gt;[4274]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21546 (Site Settings page is a hot mess) updated</title>
      
        <dc:creator>Mamaduka</dc:creator>

      <pubDate>Sun, 12 Aug 2012 11:46:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21546#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21546#comment:1/1344771984291452</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>sepster</dc:creator>

      <pubDate>Sun, 12 Aug 2012 11:29:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:22/1344770941298269</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21554 (Problem with determining e-mail charset in wp-mail.php) created</title>
      
        <dc:creator>mighty_mt</dc:creator>

      <pubDate>Sun, 12 Aug 2012 11:06:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21554</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21554/1344769612045926</guid>
      <description>&lt;p&gt;
In wp-mail.php the charset of the incoming e-mail message is determined on line 77 by taking the string between the second "=" in the line and the end of line/second ";" respectively.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The problem&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
If the header line in question looks like any of the following that method is perfectly fine:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Content-Type: text/plain; charset=UTF-8; format=flowed; delsp=yes
Content-Type: multipart/alternative;
&lt;/pre&gt;&lt;p&gt;
However in messages sent from e.g. Gmail or Goolge Reader this header line usually looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Content-Type: multipart/alternative; boundary=f46d044516dd9cd71f04c70e55e8
&lt;/pre&gt;&lt;p&gt;
I this case "f46d044516dd9cd71f04c70e55e8" is determined as the charset and the iconv function further down on line 187 returns false which causes the post content to be emptied.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Suggested solution&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I personally think that it is better to have the post published with an "incorrect" charset than with no content at all.
&lt;/p&gt;
&lt;p&gt;
Therefore I suggest that on line 76 in wp-mail.php...
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $content_type[1] ) ) {
&lt;/pre&gt;&lt;p&gt;
...is replaced by...
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $content_type[1] ) &amp;amp;&amp;amp; stripos( $content_type[1], 'charset' ) !== FALSE ) {
&lt;/pre&gt;&lt;p&gt;
...in order to check if there is actually a charset definded.
&lt;/p&gt;
&lt;p&gt;
Alternatively/additionally the return value of the iconv function on line 187 should be checked and the $content variable only modified if the return value doesn't equal FALSE.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21553 (Remove dupe/deprecated code from sites.php) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Sun, 12 Aug 2012 10:29:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21553#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21553#comment:3/1344767366430046</guid>
      <description>&lt;p&gt;
Any reason to be using strict comparison in the &lt;code&gt;$doaction&lt;/code&gt; comparisons? Switches use loose comparison (&lt;a class="ext-link" href="http://php.net/manual/en/control-structures.switch.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://php.net/manual/en/control-structures.switch.php&lt;/a&gt;), so you could have an action argument that was capitalised and would go to the correct case, but fail in the strict comparison.
&lt;/p&gt;
&lt;p&gt;
Being slightly pedantic, but still seems odd.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21432 (Deprecate *_blog_option()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 12 Aug 2012 07:02:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21432#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21432#comment:12/1344754939621118</guid>
      <description>&lt;p&gt;
I, for one, agree with the deprecation; having two ways of doing essentially the same thing is confusing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>mitchoyoshitaka</dc:creator>

      <pubDate>Sun, 12 Aug 2012 05:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:40/1344749360734948</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:39" title="Comment 39"&gt;mitchoyoshitaka&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think the action &lt;code&gt;head_request&lt;/code&gt; and triggering it in the tests is the best way to test this. Why not simply set &lt;code&gt;$_SERVER['REQUEST_METHOD'] = 'HEAD'&lt;/code&gt; and check that it ends with no input?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sorry, nevermind. That is essentially what you're doing. I spoke too early.
&lt;/p&gt;
&lt;p&gt;
Is wrapping this code in an action in order to check just its behavior necessary for the test? This isn't a realistic test for checking that no output is printed, then, as it doesn't actually run all the code that would happen in a normal request before getting to the &lt;code&gt;head_request&lt;/code&gt; point. Or maybe I'm missing something?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>mitchoyoshitaka</dc:creator>

      <pubDate>Sun, 12 Aug 2012 05:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:39/1344749050980342</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:38" title="Comment 38"&gt;kurtpayne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Take a look at the updated patch and associated unit test.
&lt;/p&gt;
&lt;p&gt;
This also has the side effect of creating an action (head_request) that can be reused in plugins.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks Kurt! Two thoughts:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;I don't think the action &lt;code&gt;head_request&lt;/code&gt; and triggering it in the tests is the best way to test this. Why not simply set &lt;code&gt;$_SERVER['REQUEST_METHOD'] = 'HEAD'&lt;/code&gt; and check that it ends with no input? The semantics of &lt;code&gt;head_request&lt;/code&gt; are also odd: it's triggered even if it's not a HEAD request?
&lt;/li&gt;&lt;li&gt;Using &lt;code&gt;wp_die&lt;/code&gt;, again, means that unwanted output will be printed, in this case for AJAX and API requests. (&lt;code&gt;wp_die_handler&lt;/code&gt; filter is only used if it's not AJAX or API request.) Again, simply using &lt;code&gt;exit()&lt;/code&gt; (and catching right before it for tests) is the right approach, as I explained above.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21547 (Enable 'delocalization' of scripts) updated</title>
      
        <dc:creator>evansolomon</dc:creator>

      <pubDate>Sun, 12 Aug 2012 02:30:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21547#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21547#comment:4/1344738613320514</guid>
      <description>&lt;p&gt;
An idea that I think is somewhat behind this ticket is that there should be an API for passing data to Javascript that isn't intertwined with localization.  In that context "delocalizing" a script might make more sense, like removing an action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>emiluzelac</dc:creator>

      <pubDate>Sun, 12 Aug 2012 02:19:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:11/1344737970385737</guid>
      <description>&lt;p&gt;
When I said think about it, that wasn't implied that you guys don't do that, it was referring only logic and nothing bad at all, if that sounded differently, please forgive me.
&lt;/p&gt;
&lt;p&gt;
-ms-filter was introduced in IE8, however -ms-filter and filter are basically the same thing and yes IE9 gradients can't work without filters if we're relying strictly on stylesheets.
&lt;/p&gt;
&lt;p&gt;
I can't agree more about Opera, browser is basically "dead" but everyone* still use Opera specific prefixes. filter: is "hacky" as much as anything else that's prefixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 12 Aug 2012 02:10:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:10/1344737435461317</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
IE7, IE8, IE9 all have way more usage than Opera.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think the original intention comes down to browser usage, rather, it comes down to browser support. &lt;br /&gt;
If a browser supports the CSS3 "standard" in use, even if through prefixed rules, then the support was added, knowing that those browsers which don't support it natively will fallback to a more ugly, but still not-broken interface.
&lt;/p&gt;
&lt;p&gt;
The Microsoft filter CSS stuff isn't following any kind of standard, and newer versions are upgrading to support standards, We could simply use Images to get rounded corners and gradients, but it was chosen to stick to standards, giving web browser manufacturers a reason to upgrade their stuff.
&lt;/p&gt;
&lt;p&gt;
We already have a &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/css/ie.dev.css"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;ie.css&lt;/a&gt; file in wp-admin which we &lt;em&gt;could&lt;/em&gt; leverage for adding hacks such as filters if we wanted to keep it out of the main stylesheets.
&lt;/p&gt;
&lt;p&gt;
also worth noting, that I believe IE7, 8, and 9 all require different values for filter: as well as filter being prefixed in at least one of those browsers. I recently pushed someone to use &lt;a class="ext-link" href="http://css3pie.com/documentation/supported-css3-features/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;CSS3Pie&lt;/a&gt; for IE CSS3 stuff after attempting to get rounded corners and background gradients working consistently in IE.. it was a pain in this case, but that may have been specific to the site as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 12 Aug 2012 01:59:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:9/1344736746876202</guid>
      <description>&lt;p&gt;
IE7, IE8, IE9 all have way more usage than Opera. Like, Opera isn't in the top 10 browsers used, but IE7 is. If those browsers can be supported by filter:progid:DXImageTransform.Microsoft.gradient(), however ghetto it might make you feel, why not do it? An extra line of CSS here or there to support another browser is not code bloat.
&lt;/p&gt;
&lt;p&gt;
If anyone wants to argue:  &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Usage_share_of_web_browsers"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://en.wikipedia.org/wiki/Usage_share_of_web_browsers&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sun, 12 Aug 2012 01:57:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:8/1344736643266059</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19233#comment:7" title="Comment 7"&gt;emiluzelac&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Anyways, things don't add up here, "we" want to avoid stylesheet bloating and "switch" over to new syntax and standard-compliant browsers by removing only what's IE related, correct?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I looked into this some more - I thought IE9 was using the -ms- prefix but apparently uses the filters instead. It is the current, but won't be as of the anticipated release date of 3.5. However, because of their upgrade path, I have the same conflicted feeling as azaozz. I'm not always correct, hence only the suggested close from me :)
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So does this mean that we can safely remove support for older versions of Safari, Chrome and Opera as well?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We discussed why we have to keep the old -webkit- syntax in IRC (basically, Kindle Fire, since it's a targeted device): &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2012-07-31&amp;amp;sort=asc#m430274"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2012-07-31&amp;amp;sort=asc#m430274&lt;/a&gt; . Do you see something else that should be removed after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21459" title="Replace last remaining gradients with css, standardize the gradient ..."&gt;[21459]&lt;/a&gt;?
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please think about it just for a sec :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think about it plenty, thanks. No need for that kind of commentary. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>emiluzelac</dc:creator>

      <pubDate>Sun, 12 Aug 2012 01:43:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:7/1344735812593641</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I personally don't like or use IE, but it's still on my VirtualBox for design/development purposes.
&lt;/p&gt;
&lt;p&gt;
Anyways, things don't add up here, "we" want to avoid stylesheet bloating and "switch" over to new syntax and standard-compliant browsers by removing only what's IE related, correct?
&lt;/p&gt;
&lt;p&gt;
So does this mean that we can safely remove support for older versions of Safari, Chrome and Opera as well?
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;background-image: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#000));
&lt;/pre&gt;&lt;p&gt;
and/or all other prefixed and deprecated syntax's?
&lt;/p&gt;
&lt;p&gt;
Let's either support this equally or take down all that's prefixed completely.
&lt;/p&gt;
&lt;p&gt;
Please think about it just for a sec :)
&lt;/p&gt;
&lt;p&gt;
Thanks,
Emil
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21553 (Remove dupe/deprecated code from sites.php) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 12 Aug 2012 01:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21553#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21553#comment:2/1344734617803650</guid>
      <description>&lt;p&gt;
updated the patch, matureblog/unmatureblog restored
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>sites-bloat.diff attached to Ticket #21553</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 12 Aug 2012 01:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21553/sites-bloat.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21553/sites-bloat.diff/1344734529122729</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21553 (Remove dupe/deprecated code from sites.php) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sun, 12 Aug 2012 00:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21553#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21553#comment:1/1344732851855110</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The matureblog and unmatureblog handlers are there in case plugins add simple mature/unmature action links. We do actually support "mature" blogs in core, just not in the UI.
&lt;/p&gt;
&lt;p&gt;
Otherwise, looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21553 (Remove dupe/deprecated code from sites.php) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 12 Aug 2012 00:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21553</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21553/1344731050374982</guid>
      <description>&lt;p&gt;
&lt;code&gt;current_user_can( 'manage_sites' )&lt;/code&gt; is called at the top of &lt;code&gt;sites.php&lt;/code&gt;, so it doesn't need to be present in every single &lt;code&gt;case&lt;/code&gt; in the &lt;code&gt;switch&lt;/code&gt; statement.
&lt;/p&gt;
&lt;p&gt;
The "updated" message is currently being output in the middle of an H2, I moved that below it.
&lt;/p&gt;
&lt;p&gt;
The form handler is looking at every action and then passing a different action to the redirect that is only read by the message &lt;code&gt;switch&lt;/code&gt; statement. This is weird, so I moved the action name to the "updated" query arg, since updated having a value is the same thing as &lt;code&gt;updated=true&amp;amp;action=non-colliding-name&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
There is no row action for &lt;code&gt;matureblog&lt;/code&gt; and &lt;code&gt;unmatureblog&lt;/code&gt; (I scanned the whole codebase), so I removed them.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21552 (Move option sanitization in network/settings.php to sanitize_option) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 22:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21552#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21552#comment:1/1344723455463082</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21552 (Move option sanitization in network/settings.php to sanitize_option) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 11 Aug 2012 22:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21552/1344723147123380</guid>
      <description>&lt;p&gt;
When Networks settings are saved in &lt;code&gt;wp-admin/network/settings.php&lt;/code&gt;, the sanitization is done inline. This code needs to be moved to &lt;code&gt;sanitize_option()&lt;/code&gt; where all of the other options are sanitized. This also combines duplicated code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15401 (Twenty Ten sidebars should have helpful descriptions) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:43:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15401#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15401#comment:6/1344721408480765</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15401#comment:5" title="Comment 5"&gt;lancewillett&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15401#comment:4" title="Comment 4"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
So you say we shouldn't maintain Twenty Ten anymore? If newer default themes have better explanatory text why not using that text also in Twenty Ten?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We'll maintain it for important bug fixes and security issues. This is a minor enhancement in my opinion.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think Twenty Ten should be updated for new core features (and has been, as recently as 3.4), and that enhancements â€” provided they do not come with compatibility concerns, including styling changes â€” should be considered.
&lt;/p&gt;
&lt;p&gt;
We should borrow the improved language used in Twenty Eleven and add them here.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19734 (Default theme (twentyeleven) missing styles for select) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19734#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19734#comment:8/1344721283852316</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19734#comment:4" title="Comment 4"&gt;skylarsutton&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
a) Have you seen it? It looks awful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A screenshot could go a long way to justify something like this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21432 (Deprecate *_blog_option()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:25:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21432#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21432#comment:11/1344720356428433</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21432 (Deprecate *_blog_option()) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21432#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21432#comment:10/1344720348442564</guid>
      <description>&lt;p&gt;
ryan and I would still lean toward deprecating _blog_option(). We'd just have to leave them in ms-blogs.php, which is fine with me.
&lt;/p&gt;
&lt;p&gt;
Deprecating them emphasizes that they are not more performant than switch_to_blog() (which they were, hypothetically, under earlier versions, albeit with caching issues), and that switch_to_blog() should be used if you have more than one operation.
&lt;/p&gt;
&lt;p&gt;
I'm willing to suggest a deprecation of current_user_can_for_blog() as well, for the same reasons.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19448 (Encoding errors in AJAX responses) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:22:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19448#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19448#comment:8/1344720171331397</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14519 (Random Twenty Ten Default Header) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:15:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14519#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14519#comment:12/1344719751543333</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21485 (Exclude current post from Recent Posts widget) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21485#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21485#comment:3/1344719588674620</guid>
      <description>&lt;p&gt;
If I had to guess, one reason why not to do this would be it would make caching harder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21481 (Optimize image_resize to prevent re-opening image every time) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:11:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21481#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21481#comment:3/1344719488350497</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19629 (return option for media_sideload_image) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 21:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19629#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19629#comment:7/1344719296607730</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 to wp_sideload_image().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21479 (Twenty Twelve: hide category and tag output in post meta if only 1 term) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 20:58:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21479#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21479#comment:9/1344718700711854</guid>
      <description>&lt;p&gt;
&lt;code&gt;! empty( $categories_list )&lt;/code&gt; can simply be &lt;code&gt;$categories_list&lt;/code&gt;. Also, count() is unnecessary when empty() is already there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21479 (Twenty Twelve: hide category and tag output in post meta if only 1 term) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 20:57:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21479#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21479#comment:8/1344718635796754</guid>
      <description>&lt;p&gt;
This looks like it would be running extra queries on the frontend. We should be sure they are necessary.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>21551.2.diff attached to Ticket #21551</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Sat, 11 Aug 2012 20:38:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21551/21551.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21551/21551.2.diff/1344717495706988</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>21551.diff attached to Ticket #21551</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Sat, 11 Aug 2012 20:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21551/21551.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21551/21551.diff/1344715221093731</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21551 (Press This Structural Rewrite) created</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Sat, 11 Aug 2012 19:59:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21551/1344715194250362</guid>
      <description>&lt;p&gt;
This is a ticket to tidy up and abstract some of the Press This code into wp-admin/includes/press-this.php to make it simpler to work with and use functionality in plugins and such.
&lt;/p&gt;
&lt;p&gt;
Once this structural change is done, I've got a couple enhancements coming down the pipes including reading OG/Twitter/Meta tags from the source page, simpler upgrades to the JS (jorbin's suggestion) better image pulling, etc.
&lt;/p&gt;
&lt;p&gt;
This patch below, however, is merely structural, not adding in any new functionality, merely tidying up what we've got so far.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Sat, 11 Aug 2012 19:42:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:38/1344714131629735</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:37" title="Comment 37"&gt;mitchoyoshitaka&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
kurtpayne, mbijon: I'm really really confused by this approach:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
add_filter( 'wp_die_ajax_handler', '_scalar_wp_die_handler' );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a typo.  Good catch!
&lt;/p&gt;
&lt;p&gt;
Take a look at the updated patch and associated unit test.
&lt;/p&gt;
&lt;p&gt;
This also has the side effect of creating an action (head_request) that can be reused in plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14348-unit-test.diff attached to Ticket #14348</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Sat, 11 Aug 2012 19:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14348/14348-unit-test.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14348/14348-unit-test.diff/1344713881637820</guid>
      <description>&lt;p&gt;
Unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14348-7.diff attached to Ticket #14348</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Sat, 11 Aug 2012 19:35:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14348/14348-7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14348/14348-7.diff/1344713714573618</guid>
      <description>&lt;p&gt;
Alternate patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 11 Aug 2012 19:26:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:6/1344713209525149</guid>
      <description>&lt;p&gt;
I'm 50/50 on this. Adding
&lt;/p&gt;
&lt;pre class="wiki"&gt;filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000', GradientType=0 ); /* IE 6-9, no shorthand colors */
&lt;/pre&gt;&lt;p&gt;
works in (the current) IE9 as well as 8 and 7.
&lt;/p&gt;
&lt;p&gt;
On the other hand IE10 (and Windows 8) will be released on October 26 (&lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Windows_8"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;more info&lt;/a&gt;). So when 3.5 is released IE9 will be "old IE" :)
&lt;/p&gt;
&lt;p&gt;
However IE10 will only be available for win7+, meaning a lot of IE users would not be able to upgrade...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 11 Aug 2012 19:04:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:5/1344711897930932</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21549 (Typo in WP_Theme::get_template_directory_uri) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 11 Aug 2012 18:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21549#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21549#comment:2/1344711112810367</guid>
      <description>&lt;p&gt;
Unit tests?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 11 Aug 2012 17:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:11/1344706618914352</guid>
      <description>&lt;p&gt;
I use API's a lot so I can see your perspective. I do value feature as some kind of live preview but I also see the issues with it.
But the question is do you see how difficult it is to integrate something like this. When you dealing with a CMS a lot of things can change when the content change like with a shortcode. That is hard maybe even impossible to get it right.
&lt;/p&gt;
&lt;p&gt;
Also thinking about future implementations like post types supports doesn't make it easier to handle everything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sat, 11 Aug 2012 17:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:10/1344704847825883</guid>
      <description>&lt;p&gt;
I can only offer my perspective as a developer who has been using the API for many years and experienced use cases you may not be familiar with. If you don't value features like preview updates every second, then you can discard my feedback as you see fit. Suffice to say, "hundreds of refreshes" is not a big issue when you don't have to query the web for every single one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 11 Aug 2012 16:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:9/1344704050879551</guid>
      <description>&lt;p&gt;
Update the preview within a second after the user stops typing is something really unwanted and I can believe it leads to hundreds of refreshed. Specially when you are on a mobile device. That said on a mobile you are not going to do this. Maybe on a tablet
&lt;/p&gt;
&lt;p&gt;
I don't think the API is in a position to do a dry run. We can make it happen but with a lot of time and most likely after that it is still buggy.
&lt;/p&gt;
&lt;p&gt;
About offline, yes I would love to get it in to but being realistic I don't see that happening soon. But if you got the time to get it working really well go for it and I'm happy to look into it and get it in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21549 (Typo in WP_Theme::get_template_directory_uri) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 16:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21549#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21549#comment:1/1344703546248649</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We don't use this method in core, so it was never caught.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21550 (Plugin changelog truncation can break WordPress.org site layout) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 11 Aug 2012 16:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21550#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21550#comment:1/1344702941690234</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21550 (Plugin changelog truncation can break WordPress.org site layout) created</title>
      
        <dc:creator>JohnLamansky</dc:creator>

      <pubDate>Sat, 11 Aug 2012 16:32:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21550</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21550/1344702779211572</guid>
      <description>&lt;p&gt;
WordPress.org appears to truncate plugin changelogs after a certain number of characters. However, if the truncation occurs in an inconvenient place -- such as the middle of an HTML tag -- it can cause browser rendering issues in other parts of the page.
&lt;/p&gt;
&lt;p&gt;
For example, on the &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/seo-ultimate/changelog/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;changelog page&lt;/a&gt; for my plugin SEO Ultimate, the plugin page sidebar is currently showing up below the changelog (&lt;a class="ext-link" href="http://img405.imageshack.us/img405/7557/brokenchangelogscreen.png"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;screenshot&lt;/a&gt;). This is because the changelog is being truncated in the middle of an &amp;lt;li&amp;gt; tag, apparently leading my browser (Chrome) to fail to recognize a &amp;lt;/div&amp;gt; closing tag:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;l&amp;lt;/div&amp;gt;&amp;lt;!-- block-content--&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
I would suggest that the easiest and perhaps best solution would be simply to stop truncating plugin changelogs. Layout breakage possibilities aside, I would prefer it if my plugin's changelog were not cut off after a certain point.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sat, 11 Aug 2012 16:00:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:8/1344700858830282</guid>
      <description>&lt;p&gt;
markoheijnen: Isn't the API in a position to do a dry run through the render process the same way it would for presentation? Then it would get all the "different templates, stylesheets, shortcodes and what a theme loads more."
&lt;/p&gt;
&lt;p&gt;
As I said I update the preview within a second after the user stops typing, which can lead to hundreds of refreshes in a typical session. It's a lot of bandwidth to do a full request to the server for each of those, and would provide a poor user experience, to do all of those through the server.
&lt;/p&gt;
&lt;p&gt;
Finally, without some way of templating this offline, the app becomes useless for preview unless there is a current internet connection. I don't know if the official WordPress iOS app prioritizes offline functionality, but it's a beloved feature of mine and other apps.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:7/1344700528647025</guid>
      <description>&lt;p&gt;
Hey Daniel, That doesn't make sense to do because of different templates, stylesheets, shortcodes and what a theme loads more. We want an exact copy how it shows on the site.
&lt;/p&gt;
&lt;p&gt;
Also this isn't a major bandwidth it. Unless you reload the screen after every word you type.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21509 (Enable XML-RPC by default and remove the option) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21509#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21509#comment:2/1344700327574740</guid>
      <description>&lt;p&gt;
*applause*
&lt;/p&gt;
&lt;p&gt;
It might be worth considering removing the off-by-default choice for AtomPub too, assuming anybody can attest to its security.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21398 (Live preview of new post/page via XML-RPC for mobile clients.) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:50:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21398#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21398#comment:6/1344700257468237</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Ideally this would be solved in a way that allows the client to download a reusable template for the current theme. You don't want to be sending changes up to the server every time you want to get an update for how the post is going to look. In my Mac desktop client, MarsEdit, I update the live preview within a second or so after the user ever pauses typing. If this was hitting the network every time it would not only be agonizingly slow, but it would be a major bandwidth hit. The bandwidth hit is, of course, especially undesirable on mobile devices.
&lt;/p&gt;
&lt;p&gt;
Ideally we would get a call like wp.getPresentationTemplate with parameters for whether the template will be applied to a post or a page, and perhaps further options to allow different templates based on the new post formats.
&lt;/p&gt;
&lt;p&gt;
Essentially if the API could do a dry-run through the render loop for the pertinent type of post, supplying dummy template placeholders wherever the theme asks for e.g. post content, it would be ideal for clients who want to offer an accurate, highly efficient preview of how the post will look on the blog.
&lt;/p&gt;
&lt;p&gt;
Daniel
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21397 (Expose post revisions on the XML-RPC Endpoint) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:48:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21397#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21397#comment:15/1344700126977024</guid>
      <description>&lt;p&gt;
About the functionality. We don't want to save a post but we want to create a new revision for a specific post. That can be put live when needed. It's for loading the content into the site without needing it to be saved. A little bit what core does now when you writing a post for a long time and it saves when you are writing.
&lt;/p&gt;
&lt;p&gt;
I will dive into the code later but if I'm correct the hook is already loaded. With your code it's probably getting loaded twice.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21397 (Expose post revisions on the XML-RPC Endpoint) updated</title>
      
        <dc:creator>redsweater</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:42:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21397#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21397#comment:14/1344699757403892</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21549.diff attached to Ticket #21549</title>
      
        <dc:creator>batmoo</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21549/21549.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21549/21549.diff/1344699586884069</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21549 (Typo in WP_Theme::get_template_directory_uri) created</title>
      
        <dc:creator>batmoo</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:39:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21549</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21549/1344699553415550</guid>
      <description>&lt;p&gt;
&lt;code&gt;$theme_root&lt;/code&gt; should be &lt;code&gt;$theme_root_uri&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Looks like a copy-paste error :)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sat, 11 Aug 2012 15:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:4/1344697773115714</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My feeling here is that we shouldn't be bloating stylesheets (even IE-specific ones) just to support non-crucial visual enhancements in outdated browsers. We're only supporting browser prefixes for current browsers / specifically targeted devices - I don't think it's an equivalent situation. Graceful degradation or progressive enhancement is perfectly acceptable, especially IE7/8. Suggest that we not do these gradient filters and close the ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>mitchoyoshitaka</dc:creator>

      <pubDate>Sat, 11 Aug 2012 13:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:37/1344693221493064</guid>
      <description>&lt;p&gt;
kurtpayne, mbijon: I'm really really confused by this approach:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
add_filter( 'wp_die_ajax_handler', '_scalar_wp_die_handler' );
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
a) The filter will only run if we're testing in AJAX mode, but we wouldn't want this to only be testable as an AJAX request. This should be for all kinds of requests.
&lt;/p&gt;
&lt;p&gt;
b) When &lt;code&gt;wp_die()&lt;/code&gt; runs and hits the filter (assuming this is in AJAX mode) it'll run &lt;code&gt;_scalar_wp_die_handler&lt;/code&gt; which will immediately &lt;code&gt;die&lt;/code&gt;. I don't think this is what's intended in order to make this testable.
&lt;/p&gt;
&lt;p&gt;
Moreover, by calling &lt;code&gt;wp_die()&lt;/code&gt; instead of &lt;code&gt;exit()&lt;/code&gt;, it will by default print out the standard &lt;code&gt;wp_die()&lt;/code&gt; message HTML (and may even try to return status 500), which is precisely *not* what we want to do when dying early on a &lt;code&gt;HEAD&lt;/code&gt; request. If you want to use &lt;code&gt;wp_die()&lt;/code&gt; for some reason, you'd need to modify &lt;code&gt;wp_die()&lt;/code&gt; to set a handler precisely for this case or somesuch.
&lt;/p&gt;
&lt;p&gt;
In conclusion: I think using &lt;code&gt;exit()&lt;/code&gt; is the right approach. You can use 14348-5.diff and hook against &lt;code&gt;exit_on_http_head&lt;/code&gt; for tests. &lt;code&gt;exit_on_http_head&lt;/code&gt; will only be triggered if you're testing a &lt;code&gt;HEAD&lt;/code&gt; request. You could make sure no output is queued at that point and that the return value is set up to be true.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21539 (category_description filter not applied to Description field on ...) updated</title>
      
        <dc:creator>StephenCronin</dc:creator>

      <pubDate>Sat, 11 Aug 2012 12:58:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21539#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21539#comment:4/1344689896182309</guid>
      <description>&lt;p&gt;
Thanks guys for your feedback. Much appreciated. I hadn't considered backwards compatibility, but can (now) see that's a huge issue.
&lt;/p&gt;
&lt;p&gt;
Sergey, thanks for the workaround - it looks good and I'll try it out. That should take care of my need.
&lt;/p&gt;
&lt;p&gt;
Does that mean we don't need to progress anything and we can close this ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21359 (htmlspecialchars() in wp-db.php is a small vulnerability) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 11 Aug 2012 12:11:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21359#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21359#comment:3/1344687098014453</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21548 (Wrong mysql_set_charset() params order in wp-db.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 11 Aug 2012 12:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21548#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21548#comment:3/1344686973653257</guid>
      <description>&lt;p&gt;
Also, you might have seen this when creating the ticket:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do not report potential security vulnerabilities here. Read the &lt;a class="ext-link" href="http://codex.wordpress.org/FAQ_Security"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Security FAQ&lt;/a&gt; and email us at security@â€¦.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21548 (Wrong mysql_set_charset() params order in wp-db.php) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 11 Aug 2012 10:50:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21548#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21548#comment:2/1344682217666631</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21548 (Wrong mysql_set_charset() params order in wp-db.php) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 11 Aug 2012 10:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21548#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21548#comment:1/1344682097821912</guid>
      <description>&lt;p&gt;
as per the &lt;a class="ext-link" href="http://au.php.net/mysql_set_charset"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;PHP Docs&lt;/a&gt;, the order is correct:
&lt;/p&gt;
&lt;pre class="wiki"&gt;bool mysql_set_charset ( string $charset [, resource $link_identifier = NULL ] )
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21548 (Wrong mysql_set_charset() params order in wp-db.php) created</title>
      
        <dc:creator>gubnota</dc:creator>

      <pubDate>Sat, 11 Aug 2012 10:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21548</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21548/1344681464011900</guid>
      <description>&lt;p&gt;
Potential SQL injection vulnerability found in wp-includes/wp-db.php where mysql_set_charset() execution in class wpdb-&amp;gt;set_charset() has wrong param order.
Whereas it should be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;mysql_set_charset( $dbh, $charset );
&lt;/pre&gt;&lt;p&gt;
It is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;mysql_set_charset( $charset, $dbh );
&lt;/pre&gt;&lt;p&gt;
In some cases it causes MySQL to use default latin1 encoding.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21531 (Twenty Twelve: Stop the navigation slide animation when clicking the ...) updated</title>
      
        <dc:creator>Jayjdk</dc:creator>

      <pubDate>Sat, 11 Aug 2012 09:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21531#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21531#comment:2/1344677032839522</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19233 (When using CSS Background Gradients in the Admin UI, begin to use IE ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 11 Aug 2012 09:09:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19233#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19233#comment:3/1344676198863552</guid>
      <description>&lt;p&gt;
Since more and more browsers are accepting properties without a prefix, even IE 10, I vote for yes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14348-6.diff attached to Ticket #14348</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Sat, 11 Aug 2012 08:42:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14348/14348-6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14348/14348-6.diff/1344674544744837</guid>
      <description>&lt;p&gt;
Updated to be phpunit compatible
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>mbijon</dc:creator>

      <pubDate>Sat, 11 Aug 2012 08:41:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:36/1344674493091872</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:34" title="Comment 34"&gt;mitchoyoshitaka&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think adding another hook there is the right approach to testing this...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
it testing
Given the recent push to improve WordPress' unit tests, &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/automated-testing/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://make.wordpress.org/core/handbook/automated-testing/&lt;/a&gt;, Kurt's suggestion makes a lot of sense.
&lt;/p&gt;
&lt;p&gt;
I still prefer your/my method that adds a filter, but wp_die() makes sense. Uploading a blended patch next (testing using Mitcho's manual method &amp;amp; Fiddler).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21547 (Enable 'delocalization' of scripts) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 11 Aug 2012 07:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21547#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21547#comment:3/1344671228631337</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21547#comment:2" title="Comment 2"&gt;gkb6891&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21547#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That patch looks fine.
&lt;/p&gt;
&lt;p&gt;
The question is: why would you need to 'delocalize' a script?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not necessarily for internationalization. In my case, at Automattic, the WordPress.com plugin I was working on uses wp_localize_script to pass dynamic properties to a static javascript file.
&lt;/p&gt;
&lt;p&gt;
Here's the specific scenario: we run multiple a/b tests each of which needs some dynamic parameters passed to a static javascript file. Each of these a/b tests enqueues the static javascript file if it's not already been enqueued.
&lt;/p&gt;
&lt;p&gt;
The current implementation of wp_localize_script simply creates a new JS object each time it's called. This often leads to duplicate objects or overwriting existing objects. A developer (like me in this case) might want to modify the existing JS object instead of creating a new one. It's easy to simply delocalize the script by passing the handle and calling wp_localize_script one more time.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not yet convinced this is a good justification for doing this.
&lt;/p&gt;
&lt;p&gt;
I'm pretty sure we can re-work your code to make it not need this, we can talk about it later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21547 (Enable 'delocalization' of scripts) updated</title>
      
        <dc:creator>gkb6891</dc:creator>

      <pubDate>Sat, 11 Aug 2012 07:22:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21547#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21547#comment:2/1344669741252735</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21547#comment:1" title="Comment 1"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That patch looks fine.
&lt;/p&gt;
&lt;p&gt;
The question is: why would you need to 'delocalize' a script?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's not necessarily for internationalization. In my case, at Automattic, the WordPress.com plugin I was working on uses wp_localize_script to pass dynamic properties to a static javascript file.
&lt;/p&gt;
&lt;p&gt;
Here's the specific scenario: we run multiple a/b tests each of which needs some dynamic parameters passed to a static javascript file. Each of these a/b tests enqueues the static javascript file if it's not already been enqueued.
&lt;/p&gt;
&lt;p&gt;
The current implementation of wp_localize_script simply creates a new JS object each time it's called. This often leads to duplicate objects or overwriting existing objects. A developer (like me in this case) might want to modify the existing JS object instead of creating a new one. It's easy to simply delocalize the script by passing the handle and calling wp_localize_script one more time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21547 (Enable 'delocalization' of scripts) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 11 Aug 2012 07:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21547#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21547#comment:1/1344668610928676</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That patch looks fine.
&lt;/p&gt;
&lt;p&gt;
The question is: why would you need to 'delocalize' a script?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Sat, 11 Aug 2012 05:52:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:35/1344664334156726</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:34" title="Comment 34"&gt;mitchoyoshitaka&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Given the spirit of this ticket, the correct way to test this would be to send a head request against the install and verifying that the content body sent back is 0 bytes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The unit tests all run within phpunit and do not actually send requests through a web server*.  This won't work as a unit test.
&lt;/p&gt;
&lt;p&gt;
*Exception: the remote HTTP tests use api.wordpress.org, but this isn't the WordPress install that's being tested
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>mitchoyoshitaka</dc:creator>

      <pubDate>Sat, 11 Aug 2012 05:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:34/1344662047031762</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:33" title="Comment 33"&gt;kurtpayne&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can we make this testable?  'exit' is not catchable.  Something like this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think adding another hook there is the right approach to testing this. Given the spirit of this ticket, the correct way to test this would be to send a head request against the install and verifying that the content body sent back is 0 bytes.
&lt;/p&gt;
&lt;p&gt;
This can even be done right within WP using &lt;code&gt;wp_remote_head()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>script_changes.diff attached to Ticket #21547</title>
      
        <dc:creator>gkb6891</dc:creator>

      <pubDate>Sat, 11 Aug 2012 04:04:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21547/script_changes.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21547/script_changes.diff/1344657887375839</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21547 (Enable 'delocalization' of scripts) created</title>
      
        <dc:creator>gkb6891</dc:creator>

      <pubDate>Sat, 11 Aug 2012 04:04:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21547</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21547/1344657867213013</guid>
      <description>&lt;p&gt;
I created a patch to enable developers to 'delocalize' a script they added. Currently if somebody localizes a script with wp_localize_script() there's no going back.
&lt;/p&gt;
&lt;p&gt;
Can someone look at it and offer feedback? I'm not a regular WordPress contributor, so there may be stylistic issues.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21309 (Introduce WP_Post class) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 11 Aug 2012 03:10:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21309#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21309#comment:30/1344654634864715</guid>
      <description>&lt;p&gt;
We don't need a filter() method, since get_object_vars() works now. I just needed to add back the sanitize_post() call at the end of get_post: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21309/21309.6.diff" title="Attachment '21309.6.diff' in Ticket #21309"&gt;21309.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21309/21309.6.diff" title="Download"&gt;â€‹&lt;/a&gt; and &lt;a class="ext-link" href="https://unit-tests.trac.wordpress.org//intertrac/changeset%3A961" title="changeset:961 in WordPress Unit Tests Trac (old)"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;[UT961]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21309.6.diff attached to Ticket #21309</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 11 Aug 2012 03:08:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21309/21309.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21309/21309.6.diff/1344654523569161</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset in tests [961]: test if the post is actually filtered</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 11 Aug 2012 03:07:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/961/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/961/tests/1344654456144876</guid>
      <description>&lt;p&gt;
test if the post is actually filtered
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [21499]: Compress scripts/styles: 3.5-alpha-21499.</title>
      
        <dc:creator>bumpbot</dc:creator>

      <pubDate>Sat, 11 Aug 2012 02:58:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/21499</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/21499/1344653899052961</guid>
      <description>&lt;p&gt;
Compress scripts/styles: 3.5-alpha-21499.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #20980 (Remove unused images) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 11 Aug 2012 02:36:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20980#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20980#comment:22/1344652562209069</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21498" title="Remove unused images, props helenyhou, coffee2code, ocean90, fixes #20980"&gt;[21498]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove unused images, props helenyhou, coffee2code, ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20980" title="#20980: defect (bug): Remove unused images (closed: fixed)"&gt;#20980&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [21498]: Remove unused images, props helenyhou, coffee2code, ocean90, fixes #20980</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 11 Aug 2012 02:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/21498</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/21498/1344652561273685</guid>
      <description>&lt;p&gt;
Remove unused images, props helenyhou, coffee2code, ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20980" title="#20980: defect (bug): Remove unused images (closed: fixed)"&gt;#20980&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item>
   </channel>
</rss>