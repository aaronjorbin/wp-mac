<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 21:11:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:16/1534540312659494</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@netweb In core today, there is no unminified version of the &lt;code&gt;zxcvbn&lt;/code&gt; library. The change you suggested would result in an unminified version of the library being added to core at about &lt;code&gt;~850kb&lt;/code&gt;. I think that would be ok, but it would add nearly &lt;code&gt;1MB&lt;/code&gt; to the package.
&lt;/p&gt;
&lt;p&gt;
But, just wanted to call that addition out to make sure the decision to add the unminified version of the library is clear.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44708 (Coding consistency, seeing both $request and $request_data) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 21:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44708#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44708#comment:1/1534539967372395</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44084 (Privacy: The personal data export file should be generated in the ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 21:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44084#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44084#comment:15/1534539822425241</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff" title="Attachment '44084.diff' in Ticket #44084"&gt;44084.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44084/44084.diff" title="Download"&gt;​&lt;/a&gt; is a different approach than &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44084/file.diff" title="Attachment 'file.diff' in Ticket #44084"&gt;file.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44084/file.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
It utilizes the user ID stored in the &lt;code&gt;WP_User_Request&lt;/code&gt; object to prevent an unnecessary database query in &lt;code&gt;get_user_by()&lt;/code&gt;. It also switches to the site's default locale if the current user is using a different locale, and switches back after the file is done generating.
&lt;/p&gt;
&lt;p&gt;
There are a few strings not included in the actual file that are still not translated:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the stripped email, which has &lt;code&gt;@&lt;/code&gt; replaced with &lt;code&gt;-at-&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;the file basename, which is &lt;code&gt;wp-personal-data-file-$stripped_email&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
These two strings should probably be translated as well. But proper sanitization will need to be added for filenames with non-English characters.
&lt;/p&gt;
&lt;p&gt;
Another situation to consider. An administrator can click a link to download the data export file in the admin. When that is clicked, a fresh file is generated. With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff" title="Attachment '44084.diff' in Ticket #44084"&gt;44084.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44084/44084.diff" title="Download"&gt;​&lt;/a&gt;, the file will always be in the user's selected locale. Should the file ever be generated in the administrator's locale instead?
&lt;/p&gt;
&lt;p&gt;
Tests for this change should be added to the test class being worked on in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/44233" title="#44233: enhancement: Add missing unit tests for exporting personal data by username or ... (reviewing)"&gt;#44233&lt;/a&gt;. I can add those once that is committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44084.diff attached to Ticket #44084</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:53:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44084/44084.diff/1534539234706474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44721 (The privacy data erase fulfillment email should be in the user's language) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:44:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44721#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44721#comment:2/1534538647157452</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unit tests are blocked by the class being introduced in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/44234" title="#44234: enhancement: Add missing unit tests for erasing personal data by username or email ... (assigned)"&gt;#44234&lt;/a&gt;. I can write them once that is committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44721.diff attached to Ticket #44721</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44721/44721.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44721/44721.diff/1534538579052413</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44234 (Add missing unit tests for erasing personal data by username or email ...) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44234#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44234#comment:9/1534537961330312</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44234.diff attached to Ticket #44234</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 20:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44234/44234.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44234/44234.diff/1534537953790343</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44558 (Unable to add new items to menu) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44558#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44558#comment:2/1534532116905880</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44558 (Unable to add new items to menu) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44558#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44558#comment:1/1534531156875931</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @kundan1255 ! Thanks for the ticket and welcome to trac!
&lt;/p&gt;
&lt;p&gt;
Can you reproduce this error with a default install of WordPress running a standard theme? This may be caused by 3rd party code.
&lt;/p&gt;
&lt;p&gt;
If you have any kind of error log output that will help to diagnose the issues as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43714 (remove_menu_page(): E_WARNING: Invalid argument supplied for foreach()) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43714#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43714#comment:1/1534530836297784</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@conner_bw thanks for the ticket! It looks like you're calling &lt;code&gt;remove_menu_item()&lt;/code&gt; via a custom framework. Are you able to reproduce this error with a clean install of WordPress without any third-party code?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:8/1534530399945971</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41801#comment:6" title="Comment 6"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It also adds a call to &lt;code&gt;wp_get_image_extensions()&lt;/code&gt; in &lt;code&gt;populate_network()&lt;/code&gt; to go along with the existing calls to &lt;code&gt;wp_get_audio_extensions()&lt;/code&gt; and &lt;code&gt;wp_get_video_extensions()&lt;/code&gt; there.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The following question probably deserves a ticket of its own but I'll ask it here: why does &lt;code&gt;populate_network()&lt;/code&gt; add a number of audio and video extensions to &lt;code&gt;upload_filetypes&lt;/code&gt; that aren't included in the default &lt;code&gt;wp_get_[audio|video]_extensions()&lt;/code&gt; return values?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:23:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:7/1534530239458879</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:6/1534530226647858</guid>
      <description>&lt;p&gt;
I now remember why my original patch didn't include unit tests: there were no unit tests for &lt;code&gt;wp_get_audio_extensions()&lt;/code&gt; and &lt;code&gt;wp_get_video_extensions()&lt;/code&gt;, so I figured they weren't needed for the new &lt;code&gt;wp_get_image_extensions()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/41801/41801.2.diff"&gt;41801.2.diff&lt;/a&gt; adds unit tests for all 3 &lt;code&gt;wp_get_xxx_extensions()&lt;/code&gt; funcs.
&lt;/p&gt;
&lt;p&gt;
It also adds a call to &lt;code&gt;wp_get_image_extensions()&lt;/code&gt; in &lt;code&gt;populate_network()&lt;/code&gt; to go along with the existing calls to &lt;code&gt;wp_get_audio_extensions()&lt;/code&gt; and &lt;code&gt;wp_get_video_extensions()&lt;/code&gt; there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41801.2.diff attached to Ticket #41801</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:23:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41801/41801.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41801/41801.2.diff/1534530192465196</guid>
      <description>&lt;p&gt;
revised patch: add unit tests, add call to  wp_get_image_extensions() in populate_network()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39122 (REST API: Add Term Meta Unit Test Coverage) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:22:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39122#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39122#comment:9/1534530146830912</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39122#comment:7" title="Comment 7"&gt;pento&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nevermind, I accidentally committed the &lt;code&gt;wp-api-generated.js&lt;/code&gt; update in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
@birgire: If you wouldn't mind refreshing your patch since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; auto-fixed a bunch of coding standards issues, we can get that committed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
yes sure, it looks like the WPCS has been fixed, so I updated the patch with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39122/39122.3.diff" title="Attachment '39122.3.diff' in Ticket #39122"&gt;39122.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39122/39122.3.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
When I was preparing the previous &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39122/39122.2.diff" title="Attachment '39122.2.diff' in Ticket #39122"&gt;39122.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39122/39122.2.diff" title="Download"&gt;​&lt;/a&gt;, I almost patched the changes to the auto generated &lt;code&gt;wp-api-generated.js&lt;/code&gt; too :-) I suspect we will see more of such patches in the future :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39122.3.diff attached to Ticket #39122</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 18:15:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39122/39122.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39122/39122.3.diff/1534529722844070</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44589 (password reset email link faulty in some email clients) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 17 Aug 2018 17:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44589#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44589#comment:9/1534527873088549</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44589.diff attached to Ticket #44589</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Fri, 17 Aug 2018 17:44:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44589/44589.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44589/44589.diff/1534527861208011</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44589 (password reset email link faulty in some email clients) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Aug 2018 17:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44589#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44589#comment:8/1534526960995153</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by otto42. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1534526960000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28212 (determine_current_user filter with priority &lt;10 gets overridden) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28212#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28212#comment:5/1534524611443997</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm moving this old ticket into the REST API component on the basis that fixing this would be necessary for alternative authentication. If a client is setting credentials be it basic auth, a bearer token, what have you, that should go before cookie authentication.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:48:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:13/1534524508098300</guid>
      <description>&lt;p&gt;
The patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44215/44215.2.diff" title="Attachment '44215.2.diff' in Ticket #44215"&gt;44215.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44215/44215.2.diff" title="Download"&gt;​&lt;/a&gt; is based on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44215/44215.diff" title="Attachment '44215.diff' in Ticket #44215"&gt;44215.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44215/44215.diff" title="Download"&gt;​&lt;/a&gt; and additionally:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds the &lt;code&gt;@group privacy&lt;/code&gt; annotation.
&lt;/li&gt;&lt;li&gt;Uses &lt;code&gt;assertCount(...)&lt;/code&gt; instead of &lt;code&gt;assertSame(..., count(...) )&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Moves the cleanup before assertions, so it runs also on failures.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
ps: I hope you don't mind that I used the opportunity to do similar minor adjustments
on few other privacy test methods + removed unused &lt;code&gt;$c&lt;/code&gt; variables. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44809 (Safeguard `has_errors()` check in extra Customizer validation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:46:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44809#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44809#comment:2/1534524415580348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good change. Feel free to commit!
&lt;/p&gt;
&lt;p&gt;
Introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37638" title="#37638: enhancement: Allow plugins to do comprehensive late validation of settings (closed: fixed)"&gt;#37638&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44215.2.diff attached to Ticket #44215</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44215/44215.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44215/44215.2.diff/1534524229622284</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>danielbachhuber</dc:creator>

      <pubDate>Fri, 17 Aug 2018 16:17:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:23/1534522634807929</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I don't love the name &lt;code&gt;date_floating&lt;/code&gt;, but I don't see another way around the problem at this point. My preferred naming would denote its boolean nature (and it would be explicitly defined a read-only field too).
&lt;/p&gt;
&lt;p&gt;
Filing against WordPress 5.0 milestone because we need to sort this out one way or another by then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44215.diff attached to Ticket #44215</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 15:57:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44215/44215.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44215/44215.diff/1534521458297032</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44215 (Personal data exports - Empty values are included in the report) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Fri, 17 Aug 2018 15:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44215#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44215#comment:12/1534521371170515</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Did some testing. Here are my findings of the current behaviors in core.
&lt;/p&gt;
&lt;p&gt;
The fields currently included in a data export are core user fields, a few core user meta fields, and core comment fields. All of these are either varchars, int/bigints, or text types.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Passing &lt;code&gt;false&lt;/code&gt; as a meta value results in an empty string being stored.
&lt;/li&gt;&lt;li&gt;Passing a &lt;code&gt;0&lt;/code&gt; integer as a meta value results in a &lt;code&gt;0&lt;/code&gt; string being stored.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
All values for these fields are passed through &lt;code&gt;if ( ! empty( $value ) )&lt;/code&gt; before adding the data to the export. This means that in the current state, any empty field (which indicates an absence of data) will always be removed from the export. This should probably be changed.
&lt;/p&gt;
&lt;p&gt;
If the meta key exists, it potentially means something and should be displayed in the export, even if empty. Users, for example, may have an empty description, last name, or nickname field. Comments may have an empty author URL or Author IP. It could be important for the user to know that those fields are present and are in fact empty.
&lt;/p&gt;
&lt;p&gt;
If a core user meta field has been deleted, a PHP notice is currently thrown. Example: A plugin deletes the &lt;code&gt;last_name&lt;/code&gt; meta field for a user. When this happens, the field can be excluded from the report because it does not exist.
&lt;/p&gt;
&lt;p&gt;
Incoming patch with these changes.
&lt;/p&gt;
&lt;p&gt;
Worth noting, only the behavior in core's data exporters can be controlled. Plugins with custom data exporters will have their own logic about what to include and why. I think that the plugin handbook pages about creating data exporters should be updated to include a section about the differences between no data and empty data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44340 (Make use of sprintf function while translating strings) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Fri, 17 Aug 2018 14:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44340#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44340#comment:2/1534517036384445</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @saimonh,
&lt;/p&gt;
&lt;p&gt;
Congrats on creating your first ticket :-)
&lt;/p&gt;
&lt;p&gt;
In this case, I'd say that the change is unnecessary.
&lt;/p&gt;
&lt;p&gt;
It's fine for strings to have basic HTML in them. In some cases, it's necessary, so that the translator can choose what word has the strong emphasis, or which words are the link text, etc.
&lt;/p&gt;
&lt;p&gt;
In this case, you've split the strings up into multiple strings, which doesn't help with understanding context - they might be a different word for "ERROR", depending on what the issue is, but after your patch, that wouldn't be easy to adjust for, without also adding context (&lt;code&gt;_x()&lt;/code&gt;) which then results in the same string having to be translated mutliple times.
&lt;/p&gt;
&lt;p&gt;
Also, you've left the colon (&lt;code&gt;:&lt;/code&gt;) in the sprintf template, meaning other punctuation can't be used if other locales use something different to a colon.
&lt;/p&gt;
&lt;p&gt;
If markup is only at the ends of a string, then that's more likely to be a good candidate for pulling the markup out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44808 (Creating subsite with un-trimmed space results in "Missing or invalid ...) updated</title>
      
        <dc:creator>dharmin16</dc:creator>

      <pubDate>Fri, 17 Aug 2018 13:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44808#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44808#comment:1/1534512163717476</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>44808.patch attached to Ticket #44808</title>
      
        <dc:creator>dharmin16</dc:creator>

      <pubDate>Fri, 17 Aug 2018 13:20:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44808/44808.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44808/44808.patch/1534512000563056</guid>
      <description>&lt;p&gt;
Add domain into trim function to trim spaces if added by mistake.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44781 (Filter for Bypass or customize admin notification email after site creation) updated</title>
      
        <dc:creator>dharmin16</dc:creator>

      <pubDate>Fri, 17 Aug 2018 13:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44781#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44781#comment:4/1534511282639960</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41956 (Errno in $wpdb) updated</title>
      
        <dc:creator>hywan</dc:creator>

      <pubDate>Fri, 17 Aug 2018 12:09:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41956#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41956#comment:15/1534507782893661</guid>
      <description>&lt;p&gt;
This patch is useful! Keep going :-).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44809 (Safeguard `has_errors()` check in extra Customizer validation) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:45:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44809#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44809#comment:1/1534502747578255</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/44809/44809.diff" title="Attachment '44809.diff' in Ticket #44809"&gt;44809.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/44809/44809.diff" title="Download"&gt;​&lt;/a&gt; fixes the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44809.diff attached to Ticket #44809</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:45:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44809/44809.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44809/44809.diff/1534502732798694</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44809 (Safeguard `has_errors()` check in extra Customizer validation) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44809/1534502629043686</guid>
      <description>&lt;p&gt;
The &lt;code&gt;customize_validate_{$setting_id}&lt;/code&gt; filter is run in both the &lt;code&gt;WP_Customize_Setting&lt;/code&gt; class, but then again in &lt;code&gt;WP_Customize_Manager&lt;/code&gt;, to account for cases where someone might have overridden that method without maintaining the filter.
&lt;/p&gt;
&lt;p&gt;
I ran into an issue earlier causing a fatal error: While the documentation for &lt;code&gt;customize_validate_{$setting-&amp;gt;id}&lt;/code&gt; states that the parameter is a &lt;code&gt;WP_Error&lt;/code&gt;, several plugins and themes have been returning true in case of success. This is correctly taken care of in &lt;code&gt;WP_Customize_Setting&lt;/code&gt;, but not when the filter is executed again in &lt;code&gt;WP_Customize_Manager::validate_setting_values()&lt;/code&gt;. &lt;code&gt;has_errors()&lt;/code&gt; is called on the filter result, which however (unfortunately) may not always be a &lt;code&gt;WP_Error&lt;/code&gt; object. We should add a &lt;code&gt;is_wp_error()&lt;/code&gt; check to be safe.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 10:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:8/1534500068004127</guid>
      <description>&lt;p&gt;
@swissspidy thanks for your feedback and sorry for the mistake.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 17 Aug 2018 08:58:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:7/1534496301800293</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@audrasjb Note that the version field indicates the version where the issue was first reported or introduced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 07:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:6/1534491537245733</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi, Welcome to WordPress Trac @mihaivalentin :)
&lt;/p&gt;
&lt;p&gt;
Thanks for the issue, it's a good catch!
&lt;/p&gt;
&lt;p&gt;
I tested removing the CSS declaration you quoted, and it seems to work fine.
&lt;/p&gt;
&lt;p&gt;
I'd say we can remove that line since WordPress Admin doesn't support IE8 anymore.
&lt;/p&gt;
&lt;p&gt;
Cheers,
&lt;/p&gt;
&lt;p&gt;
Jb
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39738.gif attached to Ticket #39738</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 07:36:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39738/39738.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39738/39738.gif/1534491397277169</guid>
      <description>&lt;p&gt;
Removing that line seems to solve the issue
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39738.diff attached to Ticket #39738</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 07:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39738/39738.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39738/39738.diff/1534491331221581</guid>
      <description>&lt;p&gt;
Drop support for IE8 since it's not supported anymore by WordPress Admin and this line is breaking image resizing
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17737 (Be better at forcing data types for query vars) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Aug 2018 06:16:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17737#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17737#comment:31/1534486571449178</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Instead of &lt;code&gt;! is_array()&lt;/code&gt;, it's probably better to check &lt;code&gt;is_string()&lt;/code&gt; specifically, see the patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44652" title="#44652: defect (bug): Lack of proper type checking in parse_query leads to PHP warnings (closed: duplicate)"&gt;#44652&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #17737,​44652 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 17 Aug 2018 06:14:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=17737%2C44652</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=17737%2C44652/1534486443474290</guid>
      <description>duplicate: &lt;p&gt;
Hi @sfasfsafds, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/17737" title="#17737: defect (bug): Be better at forcing data types for query vars (reviewing)"&gt;#17737&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
@arcturusink, thanks for the patch! Could you please upload it to &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/17737" title="#17737: defect (bug): Be better at forcing data types for query vars (reviewing)"&gt;#17737&lt;/a&gt;?
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39122 (REST API: Add Term Meta Unit Test Coverage) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 04:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39122#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39122#comment:8/1534479109179870</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43572" title="Tests: Revert `wp-api-generated.js` change added in [43571].
The ..."&gt;43572&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Tests: Revert &lt;code&gt;wp-api-generated.js&lt;/code&gt; change added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The fixtures file was accidentally included in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;, but that caused other tests to fail.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39122" title="#39122: enhancement: REST API: Add Term Meta Unit Test Coverage (closed: fixed)"&gt;#39122&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [43572]: Tests: Revert `wp-api-generated.js` change added in [43571].  The ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 04:11:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43572</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43572/1534479108151154</guid>
      <description>&lt;p&gt;
Tests: Revert &lt;code&gt;wp-api-generated.js&lt;/code&gt; change added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The fixtures file was accidentally included in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt;, but that caused other tests to fail.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39122" title="#39122: enhancement: REST API: Add Term Meta Unit Test Coverage (closed: fixed)"&gt;#39122&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:21/1534471048005733</guid>
      <description>&lt;p&gt;
Let's schedule a Core CS chat, we can mention that it's happening in the Core chat, so folks are aware.
&lt;/p&gt;
&lt;p&gt;
I agree that it'd be valuable to go through &lt;code&gt;WordPress-Extra&lt;/code&gt; and see what we can move to &lt;code&gt;WordPress-Core&lt;/code&gt;, as well as any other discussion that comes up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:15/1534470976917335</guid>
      <description>&lt;p&gt;
Looking good, I see one issue, the following can be removed:
&lt;/p&gt;
&lt;pre class="wiki"&gt; //.min files that still need to be minified.
 'wp-includes/js/zxcvbn.min.js'
&lt;/pre&gt;&lt;p&gt;
And instead, change the &lt;code&gt;dest&lt;/code&gt; on line 1060 to &lt;code&gt;dest: 'build/wp-includes/js/zxcvbn.js'&lt;/code&gt; (Remove the &lt;code&gt;.min&lt;/code&gt;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:52:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:20/1534470723926872</guid>
      <description>&lt;p&gt;
Would it be an idea to put WPCS on the agenda for a core chat in the near future ? And if so, which core chat would be the best one to use ?
Or should there maybe be a dedicated bi-monthly Core CS chat ?
&lt;/p&gt;
&lt;p&gt;
Aside from the above mentioned ruleset changes - which are basically a foregone conclusion -, there are a number of other sniffs in the &lt;code&gt;WordPress-Extra&lt;/code&gt; ruleset which are good candidates to be moved to the &lt;code&gt;WordPress-Core&lt;/code&gt; ruleset and some issues which could use some more discussion before a sniff can be written for them.
&lt;/p&gt;
&lt;p&gt;
We could also discuss how to bring the non-autofixable issues down further in such a chat.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39122 (REST API: Add Term Meta Unit Test Coverage) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:51:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39122#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39122#comment:7/1534470678121820</guid>
      <description>&lt;p&gt;
Nevermind, I accidentally committed the &lt;code&gt;wp-api-generated.js&lt;/code&gt; update in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; 🙂.
&lt;/p&gt;
&lt;p&gt;
@birgire: If you wouldn't mind refreshing your patch since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;[43571]&lt;/a&gt; auto-fixed a bunch of coding standards issues, we can get that committed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) closed</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:50:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:19/1534470628822834</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/43571" title="Coding Standards: Upgrade WPCS to 1.0.0
WPCS 1.0.0 includes a bunch ..."&gt;43571&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Upgrade WPCS to 1.0.0&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
WPCS 1.0.0 includes a bunch of new auto-fixers, which drops the number of coding standards issues across WordPress significantly. Prior to running the auto-fixers, there were 15,312 issues detected. With this commit, we now drop to 4,769 issues.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This change includes three notable additions:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Multiline function calls must now put each parameter on a new line.
&lt;/li&gt;&lt;li&gt;Auto-formatting files is now part of the &lt;code&gt;grunt precommit&lt;/code&gt; script.
&lt;/li&gt;&lt;li&gt;Auto-fixable coding standards issues will now cause Travis failures.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44600" title="#44600: task (blessed): Update WPCS to 1.0.0, and enforce coding standards (closed: fixed)"&gt;#44600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [43571]: Coding Standards: Upgrade WPCS to 1.0.0  WPCS 1.0.0 includes a bunch ...</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/43571</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/43571/1534470626855384</guid>
      <description>&lt;p&gt;
Coding Standards: Upgrade WPCS to 1.0.0
&lt;/p&gt;
&lt;p&gt;
WPCS 1.0.0 includes a bunch of new auto-fixers, which drops the number of coding standards issues across WordPress significantly. Prior to running the auto-fixers, there were 15,312 issues detected. With this commit, we now drop to 4,769 issues.
&lt;/p&gt;
&lt;p&gt;
This change includes three notable additions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Multiline function calls must now put each parameter on a new line.
&lt;/li&gt;&lt;li&gt;Auto-formatting files is now part of the &lt;code&gt;grunt precommit&lt;/code&gt; script.
&lt;/li&gt;&lt;li&gt;Auto-fixable coding standards issues will now cause Travis failures.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/44600" title="#44600: task (blessed): Update WPCS to 1.0.0, and enforce coding standards (closed: fixed)"&gt;#44600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 17 Aug 2018 01:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:18/1534468909033872</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-committers by pento. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-committers/p1534468908000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Fri, 17 Aug 2018 00:47:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:17/1534466844282483</guid>
      <description>&lt;p&gt;
@pento
&lt;/p&gt;
&lt;p&gt;
Let's move the implementation discussion to the WPCS ticket please.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be possible to write a sniff for param line count &amp;gt; 1? It seems like that would take care of the cases where inline comments or blank lines exist inside the function call.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The determination is not a problem, the "should an error/warning be thrown" bit, is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Fri, 17 Aug 2018 00:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:16/1534465943061225</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:14" title="Comment 14"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Correct, this is impossible to auto-fix, though it will be relatively easy to write a sniff to warn against multi-line parameters (&lt;code&gt;line count &amp;gt; param count&lt;/code&gt;), but how to handle function calls with inline comments ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would it be possible to write a sniff for &lt;code&gt;param line count &amp;gt; 1&lt;/code&gt;? It seems like that would take care of the cases where inline comments or blank lines exist inside the function call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44805 (Resurrecting post from trash reverts its slug) updated</title>
      
        <dc:creator>ajmccluskey</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44805#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44805#comment:2/1534459843731423</guid>
      <description>&lt;p&gt;
Thanks for the quick reply @JPry.
&lt;/p&gt;
&lt;p&gt;
As a user who is not familiar with WordPress' codebase, this seems like quite strange behaviour to me. I would generally expect that whenever I change content, especially anything user facing, the change sticks.
&lt;/p&gt;
&lt;p&gt;
I agree that editing a trashed post might happen less frequently than other scenarios, however that doesn't alter my expectations. Given the size of WordPress' user base, I doubt that I'm the first or last person to do this either.
&lt;/p&gt;
&lt;p&gt;
This behaviour is also seen when you update the post to published and change its slug in the same update. This might be a more likely scenario, and I would argue that a user's expectations in taking this action are very likely "publish this post with the changes that I'm making".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:43:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:6/1534459405589394</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8234" title="#8234: enhancement: Users with upload_files capability should be able to edit and delete ... (closed: duplicate)"&gt;#8234&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:5/1534458810406507</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #30991,​44807 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:26:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=30991%2C44807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=30991%2C44807/1534458402627790</guid>
      <description>duplicate: &lt;p&gt;
Hi @papazetis, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/30991" title="#30991: defect (bug): Post type object capability 'delete_posts' is referenced in the posts ... (accepted)"&gt;#30991&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:24:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:7/1534458246963943</guid>
      <description>&lt;p&gt;
Re-reading &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/25275" title="#25275: enhancement: Checking if attachment is audio/video (closed: fixed)"&gt;#25275&lt;/a&gt;, deprecating &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; was indeed suggested, but I don't think switching to a more generic function is a strong enough reason to do that.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_attachment_is()&lt;/code&gt; was introduced as an alternative to duplicating the same code in three different functions.
&lt;/p&gt;
&lt;p&gt;
Since duplication is no longer a concern here, I don't have any objections to adding these wrappers (maybe without replacing the existing &lt;code&gt;wp_attachment_is()&lt;/code&gt; usage though).
&lt;/p&gt;
&lt;p&gt;
That said, introducing them means that any new formats added to &lt;code&gt;wp_attachment_is()&lt;/code&gt; in the future (e.g. &lt;code&gt;pdf&lt;/code&gt;) would probably need a corresponding &lt;code&gt;wp_attachment_is_*()&lt;/code&gt; function for consistency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44808 (Creating subsite with un-trimmed space results in "Missing or invalid ...) created</title>
      
        <dc:creator>aubreypwd</dc:creator>

      <pubDate>Thu, 16 Aug 2018 22:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44808/1534457092647790</guid>
      <description>&lt;p&gt;
When adding a site:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://aubrey.pw/d/2018/t96dsz13Kd.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://aubrey.pw/d/2018/t96dsz13Kd.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If the Site Address contains a space at the end (which is easily noticeable) it can result in "Missing or invalid site address.":
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://aubrey.pw/d/2018/b9zBWfACwV.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://aubrey.pw/d/2018/b9zBWfACwV.png&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We can improve this by sanitizing/trimming whitespace from the input.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44475 (wp_trim_excerpt does not trim text if you pass text in.) updated</title>
      
        <dc:creator>aubreypwd</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:57:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44475#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44475#comment:2/1534456647771957</guid>
      <description>&lt;p&gt;
This was a little dismissive. I'm not questioning if documentation is wrong or right, I'm saying that the expectation behind this function is misleading and inefficient. I would expect if I passed a function called &lt;code&gt;wp_trim_excerpt&lt;/code&gt; some text it would trim what I sent it, or it would always, at least, return a trimmed something. Why pass text to a function that simply returns it back to me? It just makes no sense.
&lt;/p&gt;
&lt;p&gt;
Maybe it should return the generated text (trimmed) and the parameter should be deprecated since it does nothing except filter it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:33:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:14/1534455235621588</guid>
      <description>&lt;p&gt;
+1 @flixos90.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding serialization, I consider this problematic for the above workaround, passing serialized or JSON-encoded strings to the API. Once we actually support proper objects and arrays, this will happen internally
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don’t understand what you mean here though. Are you just saying we shouldn’t pass serialized data or json encoded data for meta values (over the REST API and  the &lt;code&gt;*_post_meta&lt;/code&gt; functions). If so I think I agree.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:5/1534454492561453</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41801#comment:4" title="Comment 4"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks @pbiron. This seems like a nice addition and the patch looks good at first glance. It would be great to include a simple unit test on this function.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My bad...I thought I had included unit test(s).  I'll get to those tomorrow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:5/1534454393181097</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I want to take a hard look at the capabilities changes to make sure there aren't any issues with this change, but seems sensible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:19:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:6/1534454366810981</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41802#comment:5" title="Comment 5"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a particular reason it'd be helpful to have functions for these, specifically?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I said, the reason is consistency...why have &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; but not these others?
&lt;/p&gt;
&lt;p&gt;
I'd be fine with deprecating &lt;code&gt;wp_attachment_is_image()&lt;/code&gt;, but if it's not going to be deprecated then I think the others should be added.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are currently 8 uses of &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; in core...so if it does get deprecated those uses would need to be changed to &lt;code&gt;wp_attachment_is( 'image' )&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:18:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:4/1534454311630114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @pbiron. This seems like a nice addition and the patch looks good at first glance. It would be great to include a simple unit test on this function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>pbiron</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:5/1534454202165630</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41802#comment:4" title="Comment 4"&gt;mikeschroder&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I personally prefer the generic nature of &lt;code&gt;wp_attachment_is()&lt;/code&gt; (it looks like this was an intentional move) to having a separate function each of many eventual file types.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I think the introduction of &lt;code&gt;wp_attachment_is()&lt;/code&gt; was intentional in 4.2.0...and &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; was changed to be a simple wrapper around that in 4.2.0.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a particular reason it'd be helpful to have functions for these, specifically?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I said, the reason is consistency...why have &lt;code&gt;wp_attachment_is_image()&lt;/code&gt; but not these others?
&lt;/p&gt;
&lt;p&gt;
I'd be fine with deprecating &lt;code&gt;wp_attachment_is_image()&lt;/code&gt;, but if it's not going to be deprecated then I think the others should be added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:06:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:4/1534453601384822</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by rdall. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1534453600000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:3/1534453551989970</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by rdall. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1534453550000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22810 (Support for theme changelogs) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22810#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22810#comment:16/1534453536086690</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1534453534000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39738 (Twenty Seventeen: Cannot resize image in the post editor due to a css rule) updated</title>
      
        <dc:creator>RDall</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:01:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39738#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39738#comment:2/1534453317451751</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I reported this on the WordPress Forms and can confirm the bug.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/topic/can-not-adjust-image-size-without-caption/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/topic/can-not-adjust-image-size-without-caption/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Using WordPress 4.7.4
Twenty Seventeen Version: 1.6
PHP 7.2.7
Tried both Chrome &amp;amp; FireFox, three different installs and two different hosting providers. All resulted in the same issue.
&lt;/p&gt;
&lt;p&gt;
See Screencast:
&lt;a class="ext-link" href="https://cloudup.com/ieWsxqRouvq"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/ieWsxqRouvq&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 16 Aug 2018 21:01:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:4/1534453284034955</guid>
      <description>&lt;p&gt;
I personally prefer the generic nature of &lt;code&gt;wp_attachment_is()&lt;/code&gt; (it looks like this was an intentional move) to having a separate function each of many eventual file types.
&lt;/p&gt;
&lt;p&gt;
Is there a particular reason it'd be helpful to have functions for these, specifically?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44807 (Undefined property: stdClass::$delete_posts	 on custom post type) created</title>
      
        <dc:creator>papazetis</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44807</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44807/1534452995720158</guid>
      <description>&lt;p&gt;
Hi.
&lt;/p&gt;
&lt;p&gt;
I created a custom post type with
&lt;code&gt;map_meta_cap=false&lt;/code&gt;
and I got this php notice
&lt;code&gt;Undefined property: stdClass::$delete_posts&lt;/code&gt; on &lt;code&gt;wp-admin/includes/class-wp-posts-list-table.php:400&lt;/code&gt; when I click on this post type.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41802 (add wp_attachment_is_audio() and wp_attachment_is_video()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41802#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41802#comment:3/1534452986347941</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534452985000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41801 (add wp_get_image_extensions() and wp_image_extensions filter) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41801#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41801#comment:3/1534452986267347</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534452985000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44581 (users without 'edit_posts' capability never get informed that their ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:56:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44581#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44581#comment:4/1534452986193528</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pbiron. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534452985000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35094 (Replace static with Dynamic Image Sizes for inserted images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35094#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35094#comment:10/1534451781703666</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mor10. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534451781000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42920 (Add support for the picture element) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 20:23:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42920#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42920#comment:5/1534451034346948</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by desrosj. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1534451032000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43857 (Show the comment / awaiting moderation message even without opt-in) updated</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43857#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43857#comment:43/1534448870820309</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@desrosj  Any chance we can get this into 4.9.9?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43857.5.patch attached to Ticket #43857</title>
      
        <dc:creator>tomdxw</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:46:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43857/43857.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43857/43857.5.patch/1534448769243168</guid>
      <description>&lt;p&gt;
Refreshed patch ( &lt;a class="ext-link" href="https://github.com/dxw/WordPress-1/commit/8790643c0a62b8a0806094eb1e622e40a7f33582"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/dxw/WordPress-1/commit/8790643c0a62b8a0806094eb1e622e40a7f33582&lt;/a&gt; )
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17246 (Handling of HTTP 404 errors for non-existing files) reopened</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:37:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17246#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17246#comment:8/1534448279571446</guid>
      <description>&lt;p&gt;
Aborting execution with a die() is not the answer, young Padawan, as that will kill the entire request.
I only want to abort execution of my plugin code if I know the request is for a script, image, or stylesheet, because my plugin doesn't provide any useful functionality for those types of files.
&lt;/p&gt;
&lt;p&gt;
I have submitted proposed code for adding a highly-extensible wp_is_bad_request() function to the core, thus making such checks an easy matter for all plugin and theme creators. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41934" title="#41934: enhancement: Update load.php with wp_is_bad_request function (new)"&gt;#41934&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17246#comment:7" title="Comment 7"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm re-closing this as &lt;code&gt;maybelater&lt;/code&gt; as I don't think anything has changed here that gives any reason to look at it again.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I propose that we add a wp_abort_execution filter to the core, which would allow developers to tell Wordpress whether or not to load their plugin.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you wish to abort a request, you can simply call &lt;code&gt;die()&lt;/code&gt; upon plugin inclusion if certain criteria are met, or you could delay it until WordPress is fully loaded (&lt;code&gt;init&lt;/code&gt;) to allow other plugins to handle the request if they wish (Such as a stats plugin which wants to record all 404's).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Personally, I am now including a check in all of my plugins, after realizing the Wordpress process executes for all missing files referenced in client-side mark-up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd be very careful about doing that - It's expected that &lt;code&gt;/blah/blah/filename.jpg&lt;/code&gt; be a request that's routed to WordPress and handled sometimes by plugins.
&lt;/p&gt;
&lt;p&gt;
Personally I see the bug being that either the server is routing file-requests to WordPress when you don't want it to, or that markup is being used which references invalid paths.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41934 (Update load.php with wp_is_bad_request function) updated</title>
      
        <dc:creator>rpayne7264</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41934#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41934#comment:3/1534447196233545</guid>
      <description>&lt;p&gt;
After nearly one year, and still no movement on this. Bummer!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44416 (`compact()` will throw notice for undefined variables in PHP 7.3) updated</title>
      
        <dc:creator>pross</dc:creator>

      <pubDate>Thu, 16 Aug 2018 19:08:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44416#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44416#comment:6/1534446515123589</guid>
      <description>&lt;p&gt;
Same issue php 7.4 (master) tested patch works fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>mnelson4</dc:creator>

      <pubDate>Thu, 16 Aug 2018 18:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:22/1534442840801977</guid>
      <description>&lt;p&gt;
This was discussed today in Slack: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQC26G/p1534439759000200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQC26G/p1534439759000200&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Takeaways: @kadamwhite and  @nerrad (maybe @timothybjacobs too?) were opposed to adding a new field, because
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I’m 👎 on the flag, feels like we shouldn’t need it. Looking for prior art from other API’s :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(from @kadamwhite)and
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don’t think the flag is self-explanatory enough
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And it feels like we’re exposing WP insufficiencies in the endpoint with a flag.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
(from @nerrad)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>43749.6.diff attached to Ticket #43749</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 16 Aug 2018 18:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43749/43749.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43749/43749.6.diff/1534442838367686</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43749 (Update zxcvbn to 4.4.2) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 16 Aug 2018 18:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43749#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43749#comment:14/1534442814861696</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@omarreiss Thanks for the update! This is looking good. Checked the generated file and it is now appropriate for bedtime story time.
&lt;/p&gt;
&lt;p&gt;
I am attaching an updated patch that has the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixed indentation and alignment, replacing space indentation with tabs.
&lt;/li&gt;&lt;li&gt;Removing a commented out line in the &lt;code&gt;rot13:zxcvbn&lt;/code&gt; task.
&lt;/li&gt;&lt;li&gt;Explicitly adding &lt;code&gt;wp-includes/js/zxcvbn.min.js&lt;/code&gt; to the list of files to minify.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The resulting &lt;code&gt;zxcvbn.min.js&lt;/code&gt; file in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43749/43749.5.diff" title="Attachment '43749.5.diff' in Ticket #43749"&gt;43749.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43749/43749.5.diff" title="Download"&gt;​&lt;/a&gt; created the file, but did not minify it. This is actually the current behavior in core. Instead of adding the file as &lt;code&gt;zxcvbn.js&lt;/code&gt;, minifying it, and then having to add an additional task to remove the&lt;code&gt;.js&lt;/code&gt; file, the &lt;code&gt;.min.js&lt;/code&gt; file can be specified in the &lt;code&gt;src&lt;/code&gt; option for the &lt;code&gt;uglify&lt;/code&gt; task. It does have to be listed _after_ the &lt;code&gt;!**/*.min.js&lt;/code&gt; exclusion, though. Otherwise it will not be be processed because the exclusion rule comes after.
&lt;/p&gt;
&lt;p&gt;
I tested the edit profile screen and the passwords reset screens. Both successfully returned expected results in the password strength meter!
&lt;/p&gt;
&lt;p&gt;
@netweb do you mind giving &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/43749/43749.6.diff" title="Attachment '43749.6.diff' in Ticket #43749"&gt;43749.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/43749/43749.6.diff" title="Download"&gt;​&lt;/a&gt;  a second round of testing/review? Otherwise, I think it is good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:38:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:13/1534441105602155</guid>
      <description>&lt;p&gt;
@flixos90 you're absolutely right about moving the discussion away from associative arrays and split the types between &lt;code&gt;object&lt;/code&gt; and &lt;code&gt;array&lt;/code&gt;. I just changed the ticket summary to reflect this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:37:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:12/1534441020883962</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:11/1534440530028290</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we need to differentiate here a bit more: The way we use associative arrays is typically no different from using objects. They have properties and values. This becomes more obvious when looking at JavaScript where associative arrays do not exist.
&lt;/p&gt;
&lt;p&gt;
The REST API already supports both objects and arrays in the settings controller. It doesn't actually make it easy to use those, but you can without problems specify a schema for an object or array, and even nest it. There is no harm in doing the same for metadata, at least for objects (as in equal to associative arrays). Arrays might be a little more complicated to figure out with meta, due to the &lt;code&gt;$single&lt;/code&gt; vs not-&lt;code&gt;$single&lt;/code&gt; caveat that settings do not have.
&lt;/p&gt;
&lt;p&gt;
This is not unknown territory, the REST API already supports it elsewhere. Note that, when looking at JSON schema, the proper definition for an object would look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
    type: 'object',
    properties: {
        my_prop1: {
            type: 'string',
            enum: [ 'Hello', 'Bye' ]
        },
        my_prop2: {
            type: 'integer'
        }
    }
}
&lt;/pre&gt;&lt;p&gt;
For arrays, it would look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
    type: 'array',
    items: {
        type: 'string',
        enum: [ 'Hello', 'Bye' ]
    }
}
&lt;/pre&gt;&lt;p&gt;
Again, we need to be careful about arrays. If you specified the above schema for an array while setting &lt;code&gt;$single&lt;/code&gt; to false, it would result in each meta value for the key being an array in the above format, so the full metadata returned would actually be an array of arrays.
&lt;/p&gt;
&lt;p&gt;
Regarding serialization, I consider this problematic for the above workaround, passing serialized or JSON-encoded strings to the API. Once we actually support proper objects and arrays, this will happen internally. Developers have been saving arrays and objects as both metadata and settings for years without significant issues.
&lt;/p&gt;
&lt;p&gt;
Let's think about this further, but I recommend drifting away from talking about associative arrays and rather talk about objects and "real" arrays, which have a clear differentiation and exist in that form in the majority of programming languages.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39953 (REST API: Do not update date when preparing post if date is known to ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39953#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39953#comment:21/1534439760492001</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by kadamwhite. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1534439759000200"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 17:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:10/1534439393085045</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by flixos90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1534439392000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44806 (If commenter doesn't check (cookie) consent checkbox, don't use Gravatar.) created</title>
      
        <dc:creator>lakenh</dc:creator>

      <pubDate>Thu, 16 Aug 2018 15:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44806</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44806/1534432058308145</guid>
      <description>&lt;p&gt;
I think it would be a safe assumption that if a user doesn't want cookies, they most likely don't want their image or a hash of their email to be publicly facing.
If this is done, I propose we change the string for the checkbox, to specify this in particular.
&lt;/p&gt;
&lt;p&gt;
Related to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/44067" title="#44067: enhancement: Refactor get_avatar and related functions to make Gravatar a Hook ... (new)"&gt;#44067&lt;/a&gt;, &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/14682" title="#14682: defect (bug): Privacy leakage: gravatars leak identity information (reopened)"&gt;#14682&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 14:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:15/1534429933491144</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:14" title="Comment 14"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Disregard lines which only contain whitespace and a comment completely ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, think so.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What about completely blank lines in function calls ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thinking there shouldn't be any blank lines there, generally. Perhaps in some edge cases (a "monster" functions with ten parameters each on a new line) blank lines followed by inline comments may be acceptable. But don't see a problem to warn about these as well.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Things like will need to be discussed in the WPCS issue before such a sniff could be written.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Of course. Lets look at that after the core coding standards are amended.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 14:16:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:14/1534428998253163</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I understand this is difficult (impossible?) to fix with the parser. Thinking to amend the core coding standards to strongly discourage such code, even only as a recommendation.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct, this is impossible to auto-fix, though it will be relatively easy to write a sniff to warn against multi-line parameters (&lt;code&gt;line count &amp;gt; param count&lt;/code&gt;), but how to handle function calls with inline comments ?
&lt;/p&gt;
&lt;p&gt;
Think:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nb"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="cm"&gt;/* translators: 1: explanation; 2: explanation. */&lt;/span&gt;
    &lt;span class="nx"&gt;esc_html__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Text %1$s with %2$s replacements'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nv"&gt;$replacement1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nv"&gt;$replacement2&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Disregard lines which only contain whitespace and a comment completely ?
&lt;/p&gt;
&lt;p&gt;
What about completely blank lines in function calls ?
&lt;/p&gt;
&lt;p&gt;
Things like this will need to be discussed in the WPCS issue before such a sniff could be written.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 14:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:13/1534428061178739</guid>
      <description>&lt;p&gt;
Just pointing out that I'm (still) very much against encouraging multi-line parameters that are multi-line themselves. The above example looks "cute":
&lt;/p&gt;
&lt;pre class="wiki"&gt;do_action(
        'upgrader_process_complete',
        $this,
        array(
                'action' =&amp;gt; 'update',
                'type'   =&amp;gt; 'core',
        )
);
&lt;/pre&gt;&lt;p&gt;
But in reality we are "approving" stuff like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$content = apply_filters(
        'wp_comment_no_reply',        // First arg.
        '',                           // Second arg.
        array(                        // Third arg.
                'position' =&amp;gt; $position,
                'checkbox' =&amp;gt; $checkbox,
                'mode'     =&amp;gt; $mode,
        ),
        esc_html(                     // Forth arg.
                sprintf(              // Forth.one arg.
                        __( 'This is a long piece of text that should never be inside of a function call. Even worse: it might end up in a nested multi-line function call. %s, %s.' ),
                        add_query_arg(   // Forth.one.two arg.
                                array(   // Forth.one.two.one arg.
                                        'bah_where_am_i'     =&amp;gt; 'undefined', // Forth.one.two.one.one arg.
                                        'how_did_i_get_here' =&amp;gt; 'who-knows', // Forth.one.two.one.two arg.
                                ),
                                remove_query_arg( // Ughhh, getting worse and worse. Forth.one.three arg.
                                        array(
                                                '_wp_http_referer', // Forth.one.three.one.one arg.
                                                '_wpnonce', // I give up :)
                                                'error',
                                                'message',
                                                'paged',
                                        ),
                                        wp_unslash( $_SERVER['REQUEST_URI'] )
                                 )
                        ),
                        '&amp;lt;p&amp;gt;' . __( 'This is another long piece of text that should never be inside of a function call...' ) . '&amp;lt;/p&amp;gt;'
                )
        )
);
&lt;/pre&gt;&lt;p&gt;
IMHO this is bad/ugly way to write. It is hard to read with many readability problems:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Many levels of unneeded indentation.
&lt;/li&gt;&lt;li&gt;No (good) way to add inline docs. Adding few docblocks will make this even harder to read.
&lt;/li&gt;&lt;li&gt;No good way to even add simple inline comments, see above.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I understand this is difficult (impossible?) to fix with the parser. Thinking to amend the core coding standards to strongly discourage such code, even only as a recommendation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39638 (Reset Password Page UX) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Thu, 16 Aug 2018 13:47:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39638#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39638#comment:24/1534427273409914</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design by pixelverbieger. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design/p1534427272000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44805 (Resurrecting post from trash reverts its slug) updated</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Thu, 16 Aug 2018 13:43:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44805#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44805#comment:1/1534427031588539</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This isn't unique to the REST API. You can observe the same behavior by using &lt;code&gt;wp_update_post()&lt;/code&gt; directly with PHP.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_insert_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'post_status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'publish'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_name'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_title'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'ID'&lt;/span&gt;          &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'ID'&lt;/span&gt;        &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_name'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;wp_update_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'ID'&lt;/span&gt;          &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'post_status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'publish'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// $post-&amp;gt;post_name will be 'a' instead of 'foo'.
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
This is caused by this block within &lt;code&gt;wp_insert_post()&lt;/code&gt;:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="cm"&gt;/*
         * If the post is being untrashed and it has a desired slug stored in post meta,
         * reassign it.
         */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$previous_status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$post_status&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$desired_post_slug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_desired_post_slug'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$desired_post_slug&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;delete_post_meta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'_wp_desired_post_slug'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="nv"&gt;$post_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$desired_post_slug&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
When the slug is changed for a trashed post, the &lt;code&gt;_wp_desired_post_slug&lt;/code&gt; meta is never updated to match the new slug. This is a bit of an edge case, because once a post is trashed, the slug is modified, as seen just a few lines below the previous snippet:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
        &lt;span class="c1"&gt;// When trashing an existing post, change its slug to allow non-trashed posts to use it.
&lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$post_status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'trash'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$previous_status&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="s1"&gt;'new'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$previous_status&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$post_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_add_trashed_suffix_to_post_name_for_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post_ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
In the case of this example, it will be set to &lt;code&gt;a__trashed&lt;/code&gt;. The expectation is that a trashed post's slug is not canonical, and the slug is able to be used by other posts and is not blocked from reuse by a trashed post.
&lt;/p&gt;
&lt;p&gt;
With that in mind, I'm not convinced that this is actually a bug. But I think it's still worth some discussion to determine what should be the correct behavior for this edge case.
&lt;/p&gt;
&lt;p&gt;
Out of curiosity, why would you want to change the slug of a trashed post in the first place?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44550 (The confirmaction page should also be in the user language) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Thu, 16 Aug 2018 13:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44550#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44550#comment:7/1534426079025846</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44550#comment:6" title="Comment 6"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
An edge cases for 2): A registered user changes to locale Y, after receiving an email containing the confirmation url with a previous locale X.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't think that can be prevented unless we look up the locale for the request's user when the page is visited. But because the user would not be logged in at that point, I don't know that it should.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 16 Aug 2018 08:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:12/1534407278609729</guid>
      <description>&lt;p&gt;
Okay, partially addresses &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1330"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1330&lt;/a&gt;, then. 🙂
&lt;/p&gt;
&lt;p&gt;
I don't know if the docs parser will handle this change, I asked on &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/43644" title="#43644: task (blessed): Revert multiline calls to actions and filters (accepted)"&gt;#43644&lt;/a&gt;, but didn't get a response.
&lt;/p&gt;
&lt;p&gt;
@johnbillion: Can you please confirm if the docs parser can manage multi-line action calls, where each parameter is on a new line? eg:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;do_action(
        'upgrader_process_complete',
        $this,
        array(
                'action' =&amp;gt; 'update',
                'type'   =&amp;gt; 'core',
        )
);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 08:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:11/1534406934252676</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Cool, let's try and get a release out with the customisations we currently have in phpcs.xml.dist.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For now, that would just mean adding the &lt;code&gt;WordPress.CodeAnalysis.EmptyStatement&lt;/code&gt; sniff to &lt;code&gt;WordPress-Core&lt;/code&gt; and the additional property for the &lt;code&gt;PEAR.Functions.FunctionCallSignature&lt;/code&gt; sniff.
&lt;/p&gt;
&lt;p&gt;
All the excludes should stay in the custom ruleset.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't mind a process where we make tweaks in Core's phpcs.xml.dist, then remove them when they're moved to WPCS, instead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's fine by me, but let's make sure that for each tweak in the custom ruleset an issue is opened in the WPCS repo to keep WPCS moving along.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1323"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1323&lt;/a&gt; sufficient?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1323"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1323&lt;/a&gt; actually argues *against* adding the property. It also highlights a problem in the documentation generator which needs to be fixed (or maybe it has been since ?).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:10/1534406222919221</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:9" title="Comment 9"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's what the &lt;code&gt;composer.lock&lt;/code&gt; file is for.... or am I missing something ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm a dummy, I forgot why we had to do that in Gutenberg: we were working with versions of &lt;code&gt;npm&lt;/code&gt; that didn't support &lt;code&gt;package-lock.json&lt;/code&gt;, so had to lock the versions ourselves. We can use &lt;code&gt;composer.lock&lt;/code&gt; here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Now 1.0.0 has been released, it is my intention to release more regularly, especially when there are notable changes. What with WPCS using semantic versioning, releasing new versions should be easier now as the versioning communicates the impact of the release.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Cool, let's try and get a release out with the customisations we currently have in &lt;code&gt;phpcs.xml.dist&lt;/code&gt;. I don't mind a process where we make tweaks in Core's &lt;code&gt;phpcs.xml.dist&lt;/code&gt;, then remove them when they're moved to WPCS, instead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would you mind opening an issue in WPCS for this ? This is a significant change, so I'd like to see some responses from the community before making it, though I personally fully support this change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is &lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/issues/1323"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS#1323&lt;/a&gt; sufficient?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:39:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:9/1534405142483744</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Solely for reproducibility. I'm not concerned about new sniffs, but if a sniff bugfix changed the behaviour, it would cause problems for anything relying on that behaviour to not change.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For consistency. Whilst building Gutenberg, we've found it to be far safer to use exact version numbers for all packages, as behaviour can unexpectedly change, even in bugfix releases. Rather than choose packages that can be safely allowed to use the latest version, it's better to fix all version numbers, and upgrade as we need.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's what the &lt;code&gt;composer.lock&lt;/code&gt; file is for.... or am I missing something ?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can WPCS releases move a bit faster than they have previously?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Now 1.0.0 has been released, it is my intention to release more regularly, especially when there are notable changes. What with WPCS using semantic versioning, releasing new versions should be easier now as the versioning communicates the impact of the release.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sure, it should probably throw there, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would you mind opening an issue in WPCS for this ? This is a significant change, so I'd like to see some responses from the community before making it, though I personally fully support this change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40030 (Pass User and Comment Objects to rest_get_avatar_urls) updated</title>
      
        <dc:creator>pputzer</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40030#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40030#comment:6/1534403303785151</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40030#comment:3" title="Comment 3"&gt;joehoyle&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I wish avatars had a different design, but we're stuck with it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's kinda my point, we are _not_ stuck with it in this case, we have the oppurtinty to make something like &lt;code&gt;rest_get_avatar_urls_for_user&lt;/code&gt; if we wanted to; I think.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Having implemented a &lt;a class="ext-link" href="https://github.com/mundschenk-at/avatar-privacy/blob/master/includes/avatar-privacy/components/class-rest-api.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;workaround in Avatar Privacy&lt;/a&gt;, you will then also need a &lt;code&gt;rest_get_avatar_urls_for_comment&lt;/code&gt; to handle a similar issue in &lt;code&gt;WP_REST_Comments_Controller::prepare_item_for_response&lt;/code&gt;. As is, these functions would each have to reimplement the looping logic. I'm not sure this is worth the duplication.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44786 (Autosave: Conditionally allow revisions to be saved) updated</title>
      
        <dc:creator>jblz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 07:01:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44786#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44786#comment:5/1534402904884516</guid>
      <description>&lt;p&gt;
Gutenberg autosaves usage patch in progress here: &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/pull/9043"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/gutenberg/pull/9043&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Thu, 16 Aug 2018 06:55:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:8/1534402555736653</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44600#comment:7" title="Comment 7"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can understand fixing WPCS to a certain version, though as WPCS will be using semantic versioning, I think &lt;code&gt;~1.0.0&lt;/code&gt; can safely be used instead of &lt;code&gt;1.0.0&lt;/code&gt; as - if there will be a 1.0.x release, it will only contain bug fixes. New sniffs will not be introduced in patch releases, only in minors/majors.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Solely for reproducibility. I'm not concerned about new sniffs, but if a sniff bugfix changed the behaviour, it would cause problems for anything relying on that behaviour to not change.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't understand why the DealerDirect Composer should be fixed to a certain version. This is a plugin to handle setting the PHPCS &lt;code&gt;installed_paths&lt;/code&gt;, so it should be fine to always use the latest version available.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For consistency. Whilst building Gutenberg, we've found it to be far safer to use exact version numbers for all packages, as behaviour can unexpectedly change, even in bugfix releases. Rather than choose packages that can be safely allowed to use the latest version, it's better to fix all version numbers, and upgrade as we need.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;PEAR.Functions.FunctionCallSignature&lt;/code&gt; config: The &lt;code&gt;requiredSpaces&lt;/code&gt; properties are already set to &lt;code&gt;1&lt;/code&gt; in the &lt;code&gt;WordPress-Core&lt;/code&gt; WPCS ruleset, so you don't need to set them in the custom ruleset.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Huh, I thought it broke something when I tried to do that, but it works fine. Guess I must've messed something else up in earlier testing. 🙂
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;As for the &lt;code&gt;allowMultipleArguments&lt;/code&gt; property for that same sniff, I have two questions:
&lt;ul&gt;&lt;li&gt;Should that configuration be set in the custom ruleset or in the &lt;code&gt;WordPress-Core&lt;/code&gt; ruleset ?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yah, it can be moved to &lt;code&gt;WordPress-Core&lt;/code&gt;. Can WPCS releases move a bit faster than they have previously? Waiting weeks for a new release to make a config change is not ideal.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;And is that configuration only needed for correctly *fixing* things or should the related error also be thrown when running &lt;code&gt;phpcs&lt;/code&gt; ?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Sure, it should probably throw there, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44600 (Update WPCS to 1.0.0, and enforce coding standards) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Thu, 16 Aug 2018 06:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44600#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44600#comment:7/1534400781094537</guid>
      <description>&lt;p&gt;
@pento
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Re: patch &lt;code&gt;44600.2.diff&lt;/code&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I can understand fixing WPCS to a certain version, though as WPCS will be using semantic versioning, I think &lt;code&gt;~1.0.0&lt;/code&gt; can safely be used instead of &lt;code&gt;1.0.0&lt;/code&gt; as - if there will be a 1.0.x release, it will only contain bug fixes. New sniffs will not be introduced in patch releases, only in minors/majors.
&lt;/li&gt;&lt;li&gt;I don't understand why the DealerDirect Composer should be fixed to a certain version. This is a plugin to handle setting the PHPCS &lt;code&gt;installed_paths&lt;/code&gt;, so it should be fine to always use the latest version available.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;PEAR.Functions.FunctionCallSignature&lt;/code&gt; config: The &lt;code&gt;requiredSpaces&lt;/code&gt; properties are already set to &lt;code&gt;1&lt;/code&gt; in the &lt;code&gt;WordPress-Core&lt;/code&gt; WPCS ruleset, so you don't need to set them in the custom ruleset.
&lt;/li&gt;&lt;li&gt;As for the &lt;code&gt;allowMultipleArguments&lt;/code&gt; property for that same sniff, I have two questions:
&lt;ul&gt;&lt;li&gt;Should that configuration be set in the custom ruleset or in the &lt;code&gt;WordPress-Core&lt;/code&gt; ruleset ?
&lt;/li&gt;&lt;li&gt;And is that configuration only needed for correctly *fixing* things or should the related error also be thrown when running &lt;code&gt;phpcs&lt;/code&gt; ?
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Re: fixing the non-autofixable issues:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/pull/1450"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WPCS PR 1450&lt;/a&gt; takes care of 119 issues which could be regarded as false positives.
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/squizlabs/PHP_CodeSniffer/pull/2121"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PHPCS PR 2121&lt;/a&gt; which has been merged and will be included in the PHPCS 3.3.2 release, takes care of another 24 false positives.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44805 (Resurrecting post from trash reverts its slug) created</title>
      
        <dc:creator>ajmccluskey</dc:creator>

      <pubDate>Thu, 16 Aug 2018 06:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44805</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44805/1534400773080181</guid>
      <description>&lt;h3 id="Stepstoreproduce"&gt;Steps to reproduce&lt;/h3&gt;
&lt;p&gt;
Using the REST API:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a post
&lt;/li&gt;&lt;li&gt;Delete the post (not forced)
&lt;/li&gt;&lt;li&gt;Update the post's slug
&lt;/li&gt;&lt;li&gt;Update the post's status to &lt;code&gt;publish&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;h4 id="Create"&gt;Create&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;POST wp-json/wp/v2/posts&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"publish"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"a"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4 id="Delete"&gt;Delete&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;DELETE wp-json/wp/v2/posts/&amp;lt;id&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;h4 id="Updateslug"&gt;Update slug&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;POST wp-json/wp/v2/posts/&amp;lt;id&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"slug"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"foo"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h4 id="Updatestatus"&gt;Update status&lt;/h4&gt;
&lt;p&gt;
&lt;code&gt;POST wp-json/wp/v2/posts/&amp;lt;id&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"publish"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;h3 id="Expected"&gt;Expected&lt;/h3&gt;
&lt;p&gt;
Post should be published with a slug of &lt;code&gt;foo&lt;/code&gt; (the updated value)
&lt;/p&gt;
&lt;h3 id="Actual"&gt;Actual&lt;/h3&gt;
&lt;p&gt;
Post is published with a slug of &lt;code&gt;a&lt;/code&gt; (the old value)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39418 (Improve "Empty Spam" and "Empty Trash" user experience) updated</title>
      
        <dc:creator>cfinke</dc:creator>

      <pubDate>Thu, 16 Aug 2018 05:17:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39418#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39418#comment:4/1534396638737414</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Instead of actually doing the work of deleting all of the spam messages when "Empty Spam" is clicked, what about updating the &lt;code&gt;comment_approved&lt;/code&gt; field of all spam comments to be something like &lt;code&gt;spam-pending-delete&lt;/code&gt;, and then have the WP cron delete any comments with &lt;code&gt;comment_approved=spam-pending-delete&lt;/code&gt; in batches.
&lt;/p&gt;
&lt;p&gt;
That should reduce the delay significantly from the time when the user clicks the button to when their Spam folder appears to be empty, and it wouldn't require any new UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44786 (Autosave: Conditionally allow revisions to be saved) updated</title>
      
        <dc:creator>jblz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:58:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44786#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44786#comment:4/1534388320145472</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for taking a look, @adamsilverstein &amp;amp; for pointing me at &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43316" title="#43316: enhancement: REST API: Support autosaves (reopened)"&gt;#43316&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it would be great to have something like this built into the core autosave endpoint.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1.  It looks like &lt;code&gt;WP_REST_Autosaves_Controller::create_item&lt;/code&gt; is in sync w/ Gutenberg -- I'll follow up w/ a PR there so we can see the usage in action a bit.
&lt;/p&gt;
&lt;p&gt;
The &lt;a href="https://core.trac.wordpress.org/attachment/ticket/44786/44786.withtests.patch"&gt;latest patch&lt;/a&gt; introduces a new test to cover the filter.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
@jorbin Thanks for &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1534365403000100"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the suggestions&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I inverted the filter, chose a different filter name that is more in line with the rest of the surrounding code, &amp;amp; included the &lt;code&gt;$post_id&lt;/code&gt; in the filter application.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>44786.withtests.patch attached to Ticket #44786</title>
      
        <dc:creator>jblz</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/44786/44786.withtests.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/44786/44786.withtests.patch/1534387700761113</guid>
      <description>&lt;p&gt;
Inverts the semantics of the filter (block vs. allow), pass $autosave as the default value, pass $post_id, include unit test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #44782 (4.9.8 has broken user roles - Shop_Manager not able to add new items ...) updated</title>
      
        <dc:creator>pedramm</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:19:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44782#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44782#comment:4/1534385953618376</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44782#comment:2" title="Comment 2"&gt;itowhid06&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've tested with WP 4.9.8 and WC 3.4.4 and everything seems OK. Seems most likely a theme-plugin conflict issue.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It seems like a caching issue, but clearing cache wouldn't fix it so I have deactivated the plugin.
&lt;/p&gt;
&lt;p&gt;
Thank you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #44782 (4.9.8 has broken user roles - Shop_Manager not able to add new items ...) updated</title>
      
        <dc:creator>pedramm</dc:creator>

      <pubDate>Thu, 16 Aug 2018 02:17:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/44782#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/44782#comment:3/1534385860553466</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/44782#comment:1" title="Comment 1"&gt;pbiron&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @pedramm, welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
I can't reproduce the problem you describe with WP 4.9.8 and WC 3.4.3.
&lt;/p&gt;
&lt;p&gt;
Can you please let us know which version of WC you're using, as well as the theme and any other plugins you have active?
&lt;/p&gt;
&lt;p&gt;
You might also try to disable all plugins other than WC (and any WC extension plugins you're using) and activate the Twenty Seventeen theme...to determine if the problem is related to your theme or other plugins.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @pbiron
&lt;/p&gt;
&lt;p&gt;
Thanks for your response.
&lt;/p&gt;
&lt;p&gt;
Following your advice I checked the active plugins and turns out W3 Total Cache was the causing the issues. A bit strange since it was only affecting users in the Shop_manager role.  I have deactivated it for now.
&lt;/p&gt;
&lt;p&gt;
Thanks and cheers,
&lt;/p&gt;
&lt;p&gt;
Pedram
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>