<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #40676 (wpautop adds opening &amp; closing p tags around the opening a tag and ...) updated</title>
      
        <dc:creator>diegocanal</dc:creator>

      <pubDate>Sun, 21 May 2017 21:27:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40676#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40676#comment:1/1495402047909037</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #32417,​39993,​39994,​39995 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 21 May 2017 20:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32417%2C39993%2C39994%2C39995</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32417%2C39993%2C39994%2C39995/1495399416519206</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40812" title="Widgets: clarify some context information for translators.
Props ..."&gt;40812&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: clarify some context information for translators.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Italian polyglots team.&lt;br /&gt;
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40640" title="Widgets: Introduce media widgets for images, audio, and video with ..."&gt;[40640]&lt;/a&gt;.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;#32417&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39993" title="#39993: enhancement: Introduce Core Widget: Image (closed: fixed)"&gt;#39993&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39994" title="#39994: enhancement: Introduce Core Widget: Video (closed: fixed)"&gt;#39994&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39995" title="#39995: enhancement: Introduce Core Widget: Audio (closed: fixed)"&gt;#39995&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40812]: Widgets: clarify some context information for translators.  Props ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 21 May 2017 20:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40812</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40812/1495399416040300</guid>
      <description>&lt;p&gt;
Widgets: clarify some context information for translators.
&lt;/p&gt;
&lt;p&gt;
Props Italian polyglots team.
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40640" title="Widgets: Introduce media widgets for images, audio, and video with ..."&gt;[40640]&lt;/a&gt;.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32417" title="#32417: feature request: Add new core media widget (closed: fixed)"&gt;#32417&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39993" title="#39993: enhancement: Introduce Core Widget: Image (closed: fixed)"&gt;#39993&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39994" title="#39994: enhancement: Introduce Core Widget: Video (closed: fixed)"&gt;#39994&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39995" title="#39995: enhancement: Introduce Core Widget: Audio (closed: fixed)"&gt;#39995&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38666 (Reassure users when the customizer is doing a full reload) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 21 May 2017 19:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38666#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38666#comment:10/1495396662436379</guid>
      <description>&lt;p&gt;
@celloexpressions well yes the text should be available when un-hidden, but maybe users won't have a clue they should explore the content to understand what is happening.
In this kind of scenario, an option could be trying to use &lt;a class="ext-link" href="https://www.w3.org/TR/wai-aria/states_and_properties#aria-busy"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;aria-busy&lt;/a&gt; but that should be tested, not sure it's supported by all browsers/screen readers combos. Also, screen readers would announce just "busy".
&lt;/p&gt;
&lt;p&gt;
A simpler option would be just using the same strings &lt;code&gt;Downloading your theme...&lt;/code&gt; and &lt;code&gt;Setting up your live preview. This might take a little bit.&lt;/code&gt; for &lt;code&gt;wp.a11y.speak()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40199 (Customize: collapse suggested and previously uploaded header images ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 21 May 2017 17:36:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40199#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40199#comment:2/1495388167785425</guid>
      <description>&lt;p&gt;
Sure, it doesn't necessarily need to be an accordion. The key is making it take up less space by default. My initial though it that the titles can become &lt;code&gt;button&lt;/code&gt; elements with arrow icons, and on click the contents &lt;code&gt;slideToggle&lt;/code&gt;. Something simple that can be done in the interim until the header image control is brought back into the cropped image control and previous images are available to other control instances.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36175 (Simplify the Customizer Image Control action buttons) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 21 May 2017 17:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36175#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36175#comment:20/1495388010943872</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm leaning toward not making any changes here beyond the styling adjustments in 4.8, to preserve consistency across control types and keep better accessibility. @melchoyce if you agree, please close.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Sun, 21 May 2017 17:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:177</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:177/1495387599578630</guid>
      <description>&lt;p&gt;
I do believe we should have a discussion about dynamic content blocks as it can be used in the Gutenberg editor as well as the customizer. We should also bring in the design group when discussing these things.
&lt;/p&gt;
&lt;p&gt;
As I see it.
Dynamic = something that changes. This seems to be posts. But can one broaden this concept to also include global blocks?
&lt;/p&gt;
&lt;p&gt;
Global block = something that is used through the full site (or perhaps just some of the site). Could be the header, footer, sidebar, menu etc.
&lt;/p&gt;
&lt;p&gt;
Again this is a discussion we need to have. To brain storm ideas and concepts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 21 May 2017 17:23:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:81/1495387419846451</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd suggest re-using the hacks in the available menu items panel to do accordions there. Each accordion has its own scrolling region when expanded, and the heights are set so that all of the accordion section headings are always visible. There's additional logic there to break out to a secondary scroll region if there are too many menu item type headings (since custom post types and taxonomies can also show up there).
&lt;/p&gt;
&lt;p&gt;
It sounds like this design is mostly worked out here, but we need a new patch.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27404#comment:72" title="Comment 72"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27404#comment:70" title="Comment 70"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I will point out that the delete icon styling should match the menu item bulk-delete mode (larger, centered, and red).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Where in the Customizer can I find this?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If there are items in a menu and you click on the add items button, the bulk delete mode is also exposed for items in the menu, with a red X on the right of each item. I wouldn't go any smaller than that for touch accessibility, but that can always be redesigned along with something else happening here as long as it's kept consistent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38666 (Reassure users when the customizer is doing a full reload) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 21 May 2017 17:12:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38666#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38666#comment:9/1495386777831334</guid>
      <description>&lt;p&gt;
@afercia in the current approach here, is the text not available to screen readers? Should we add speak() calls? MY understanding is that the text will be ready when it becomes un-hidden, but if that's not the case it should be a straightforward fix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 21 May 2017 17:10:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:157</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:157/1495386651972151</guid>
      <description>&lt;p&gt;
@melchoyce your message in Slack implied that &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37661#comment:150" title="Comment 150"&gt;150&lt;/a&gt; provides a path forward, but I'm still waiting for direction here. I see the current iteration of the GitHub branch as ready to be merged at any time. If anyone disagrees with that assesment, please provide the following so that we can proceed with potential changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Analysis of the previously-published usability testing identifying areas needing improvement, OR new usability testing identifying problems with the current design approach
&lt;/li&gt;&lt;li&gt;Specific problems with the current UX design based on theoretical concepts, and proposed changes
&lt;/li&gt;&lt;li&gt;Ideas for improving the theme browsing model within the capabilities of the API (meaning, we work with the tags we have/that are managed by the theme review team, but we can explore alternate sorting and other capabilities that theme-install.php doesn't use)
&lt;/li&gt;&lt;li&gt;Alternate design concepts that rethink the layout/design entirely, with reasoning for why we should consider moving in that direction. We previously did this, but I probably still prefer the initial design concept - if we want to do another full redesign we need some certainty that the end result represents an improvement.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Personally, I'd prefer a design approach that filters themes first by subjects, then by features, and also prioritizes search. The latest and popular views could become sort options rather than distinct views (which the API supports). The separate favorites and featured views would be removed, as they provide little value to a majority of users (featured is just random themes currently). I'm skeptical of the concept to preserve the customize pane as a sidebar when browsing themes. I don't know that making these sorts of changes is necessary at this point, since ultimately we need to get something functional into the core experience and can iterate from there as the customizer evolves as a whole. But if the above points can be explored by those that don't think the current approach is viable, we could have a path forward here.
&lt;/p&gt;
&lt;p&gt;
Important considerations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;This project represents a significant performance improvement for the entire customizer on every load, by only loading theme data when it's needed.
&lt;/li&gt;&lt;li&gt;Accessibility and the mobile experience are carefully refined in the current approach, and have been documented with extensive team reviews and on make/flow.
&lt;/li&gt;&lt;li&gt;New users that start their experience in the customizer currently may not be aware of the variety of themes available to them. This can result in users giving up on WordPress far earlier than they should.
&lt;/li&gt;&lt;li&gt;This project introduces the infrastructure necessary to offer theme functionality within the live preview framework regardless of what the feature looks like, and can easily adapt to different design concepts within that technical framework over time.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37974 (Add multi-panel feature to pages through add_theme_support) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 21 May 2017 16:42:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37974#comment:176</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37974#comment:176/1495384973614038</guid>
      <description>&lt;p&gt;
The proposal that I mentioned previously to re-use the menus API has been fully implemented for the Twenty Seventeen theme in the Dynamic Seventeen child theme: &lt;a class="ext-link" href="https://wordpress.org/themes/dynamic-seventeen/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/themes/dynamic-seventeen/&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
My broader thoughts on this subject are here: &lt;a class="ext-link" href="http://celloexpressions.com/blog/building-and-managing-dynamic-multi-part-pages-with-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://celloexpressions.com/blog/building-and-managing-dynamic-multi-part-pages-with-wordpress/&lt;/a&gt;. It would be valuable to explore both that approach and the latest patches here with parallel user testing, etc. There are several menus tickets that would make that approach more viable for usability while also improving things like social menus (&lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38957" title="#38957: enhancement: Customize Menus: Menu locations should be able to opt-out of menu item ... (new)"&gt;#38957&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38956" title="#38956: enhancement: Customize Menus: menus assigned to locations with limited depths ... (new)"&gt;#38956&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18584" title="#18584: enhancement: Nav menus need more hooks for extensibility (on admin page &amp;amp; in customizer) (new)"&gt;#18584&lt;/a&gt;). Dynamic content blocks could also accomplish similar results within the context of a single page's content, or via some other global block-based API. Again, this points to encouraging simpler solutions in the meantime rather than building an entirely new feature that could become obsolete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39461 (default-preset option for custom background cannot be set by default) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 21 May 2017 16:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39461#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39461#comment:18/1495383898012060</guid>
      <description>&lt;p&gt;
&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39461#comment:9" title="Comment 9"&gt;9&lt;/a&gt; and &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39461/39561.diff" title="Attachment '39561.diff' in Ticket #39461"&gt;39561.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39461/39561.diff" title="Download"&gt;​&lt;/a&gt; needs a review still; it's been long enough since I've dug into this that it would probably be most effective if a committer can do it. It looks pretty good to me at a glance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40832 (Mediaelement fails to load videos when page has 50+ videos) updated</title>
      
        <dc:creator>urtuk</dc:creator>

      <pubDate>Sun, 21 May 2017 16:19:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40832#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40832#comment:1/1495383551517139</guid>
      <description>&lt;p&gt;
note: it bug with firefox and chrome, but not microsoft edge or internet explorer. all works if the page have only ~20 videos.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40832 (Mediaelement fails to load videos when page has 50+ videos) created</title>
      
        <dc:creator>urtuk</dc:creator>

      <pubDate>Sun, 21 May 2017 16:18:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40832</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40832/1495383481252410</guid>
      <description>&lt;p&gt;
mediaelement bug and fails to load video when the webpage have 50+ videos in the same page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38869 (Change "Site Default" in User Profile Options for Language to "Site ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 21 May 2017 11:35:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38869#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38869#comment:7/1495366528435676</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by presskopp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1495366526541485"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34972 (Permalink for unattached media same as a post) updated</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sun, 21 May 2017 11:26:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34972#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34972#comment:7/1495366012227389</guid>
      <description>&lt;p&gt;
There's 4 solutions I can think of.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Allow the slug of unattached media to be editable
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Prepend a hard "base" to the URL. For example /media/media-item
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Allow the permalink structure for unattached media to be set in the admin area
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Check if the media item's slug is unique across both media items and pages before assigning it. If not unique, append something.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40700 (Select an existing media accessibility with NVDA 2017.1) updated</title>
      
        <dc:creator>juliemoynat</dc:creator>

      <pubDate>Sun, 21 May 2017 10:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40700#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40700#comment:3/1495363290949658</guid>
      <description>&lt;p&gt;
@afercia Yes, you're right, it works in "forms mode".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sun, 21 May 2017 07:23:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:37/1495351408155218</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, see discussion at &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RP4WU5/p1495224872995687"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RP4WU5/p1495224872995687&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I saw the discussion. I would have in this case not made any changes to &lt;code&gt;@access&lt;/code&gt; as in &lt;a href="https://core.trac.wordpress.org/changeset/40804"&gt;https://core.trac.wordpress.org/changeset/40804&lt;/a&gt; it is not consistent.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There will always be need for more docs tickets :-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Here is the new ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40831" title="#40831: defect (bug): Customize: Further improve JS inline documentation (new)"&gt;#40831&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40831 (Customize: Further improve JS inline documentation) created</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sun, 21 May 2017 07:22:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40831/1495351353364924</guid>
      <description>&lt;p&gt;
We need to do another pass on the customizer code to ensure that inline documentation is added to JS. This is building on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27534" title="#27534: defect (bug): Review inline docs/coding standards for ... (closed: fixed)"&gt;#27534&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27065" title="#27065: enhancement: Improve Customizer API documentation (closed: fixed)"&gt;#27065&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21303" title="#21303: enhancement: class-wp-customize-*.php files inline documentation (closed: fixed)"&gt;#21303&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39671" title="#39671: defect (bug): Customize: Further improve inline documentation (closed: fixed)"&gt;#39671&lt;/a&gt; among others.
&lt;/p&gt;
&lt;p&gt;
The main files that need to looked at are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;customize-base.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;customize-loader.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;customize-models.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;customize-preview.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;customize-preview-nav-menus.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;customize-preview-widgets.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;customize-selective-refresh.js&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;customize-views.js&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39930" title="#39930: task (blessed): Adding documentation for wp.customize properties (closed: fixed)"&gt;#39930&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Sun, 21 May 2017 05:20:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:35/1495344046267002</guid>
      <description>&lt;p&gt;
Personally I would appreciate the allowance for setting script tag attributes when the script itself is registered but I can also see the need for allowing filtering of it. For that reason I put together this little bit of code to append to (and rewrite) the section of do_item in &lt;code&gt; class.wp-scripts.php&lt;/code&gt; that does the actual generation of the tag.
&lt;/p&gt;
&lt;p&gt;
My thinking is that the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; is the actual tag, and everything else including the src and type are attributes. We should be treating attributes similarly and thus I felt it best to generate all of the attributes at the same time. This could also allow plugins to filter the order in which they are output.
&lt;/p&gt;
&lt;p&gt;
It is somewhat of a combination of the methods suggested in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22249" title="#22249: enhancement: Add ability to set or remove attributes on enqueued scripts and styles. (assigned)"&gt;#22249&lt;/a&gt; and @Otto42 's suggestions
&lt;/p&gt;
&lt;p&gt;
I didn't have access to my dev environment to create a diff patch file, but here is the code concepts in a multi-site gist with the appropriate file names listed alone with the general line number where the code would go.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/LinzardMac/dc951d7fabf3fbeb1f10794c3130fecc"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/LinzardMac/dc951d7fabf3fbeb1f10794c3130fecc&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39665 (Customize: nav menu fallbacks don't get edit shortcuts) updated</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 21 May 2017 04:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39665#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39665#comment:17/1495340836469278</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39665/39665.4.diff" title="Attachment '39665.4.diff' in Ticket #39665"&gt;39665.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39665/39665.4.diff" title="Download"&gt;​&lt;/a&gt; refactors the previous patch so that it doesn't use a closure.
&lt;/p&gt;
&lt;p&gt;
One observation about the change to &lt;code&gt;customize-preview-nav-menus.js&lt;/code&gt;: It seems to cause the fallback to potentially display in the preview when it wouldn't otherwise. You can see this by previewing Twenty Seventeen after applying the patch.
&lt;/p&gt;
&lt;p&gt;
In Twenty Seventeen, when no menu is assigned to the Top Menu location, the fallback doesn't display because &lt;code&gt;header.php&lt;/code&gt; checks &lt;code&gt;has_nav_menu()&lt;/code&gt; before calling &lt;code&gt;wp_nav_menu()&lt;/code&gt;. But with the change to the JS &lt;code&gt;refresh()&lt;/code&gt; function, the fallback still displays in the Customizer.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39665.4.diff attached to Ticket #39665</title>
      
        <dc:creator>dlh</dc:creator>

      <pubDate>Sun, 21 May 2017 04:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39665/39665.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39665/39665.4.diff/1495340786798082</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40432 (Customizer: Should we stop contextually hiding features?) updated</title>
      
        <dc:creator>ahortin</dc:creator>

      <pubDate>Sun, 21 May 2017 03:56:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40432#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40432#comment:38/1495339012234083</guid>
      <description>&lt;ul&gt;&lt;li&gt;Removed original comment. Misread it as 5.0, thinking it was referring to the WP version.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40432 (Customizer: Should we stop contextually hiding features?) updated</title>
      
        <dc:creator>ahortin</dc:creator>

      <pubDate>Sun, 21 May 2017 03:54:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40432#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40432#comment:37/1495338850968263</guid>
      <description>&lt;p&gt;
@celloexpressions This is completely wrong. Regardless of whether people navigate within the preview window or not, hiding options from them is horrible usability. In previous comments I've made, I've mentioned where companies like Microsoft (who literally spend hundreds of thousands of dollar on investigating usability), and leading usability expects both agree that hiding options from end users is extremely poor usability. Even if you have edit shortcuts in the live preview, if a sidebar is not visible on the current page being previewed, they're not going to see those edit shortcuts, which makes them absolutely useless.
&lt;/p&gt;
&lt;p&gt;
By hiding options you're expecting the user to navigate to every single page in the live preview, just so they can find all their sidebars. That's just ridiculous! If a theme is showing a different sidebar on a Single Post page, as an example, the only way they're going to find it currently is if they actually navigate to the single post in the live preview. Not only does it force people to make unnecessary clicks, it clearly slows down their workflow as they have to navigate throughout their whole site just to find every single sidebar.
&lt;/p&gt;
&lt;p&gt;
You shouldn't be determining how people choose to update their theme options. By hiding options from them and forcing them to navigate their whole site just so they can edit them, that's what you're doing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40828 (JavaScript Standard Style) updated</title>
      
        <dc:creator>jhabdas</dc:creator>

      <pubDate>Sun, 21 May 2017 03:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40828#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40828#comment:5/1495337288860255</guid>
      <description>&lt;p&gt;
If anyone is interested in a constructive debate, I'm willing to put in some research and justification I feel may help adjust your opinions. Status quo as a rationale falls flat as an argument, and though there's something to be said of consistency within a codebase we are talking about two different programming languages with two converging movements towards procedural programming.
&lt;/p&gt;
&lt;p&gt;
To quote Rob Pike, father of Go, “Object-oriented design is the roman numerals of computing.”
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40828 (JavaScript Standard Style) closed</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 21 May 2017 03:01:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40828#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40828#comment:4/1495335672255807</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40828 (JavaScript Standard Style) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 May 2017 00:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40828#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40828#comment:3/1495327112774539</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Agree with @jdgrimes. The WordPress coding standards are fairly well established and have been around for quite some time, about three times longer than Standardjs :)
&lt;/p&gt;
&lt;p&gt;
There is no compelling reason to change them, and making the JS standards different from the PHP standards (where they overlap) is unthinkable. Another reason is that the most important function of coding standards, especially for a big open source project, is readability. The WordPress standards were created with that in mind. Changing some of these rules wouldn't be good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40810 (wp_mail fails to send email on WP auto update when wp-cron is called ...) updated</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Sat, 20 May 2017 20:51:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40810#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40810#comment:1/1495313463158537</guid>
      <description>&lt;p&gt;
I can confirm the issue, I have the same problem on one webhost that runs WP Cron via PHP CLI. Also, because of this issue, &lt;code&gt;debug.log&lt;/code&gt; gets populated with &lt;code&gt;Undefined index: SERVER_NAME&lt;/code&gt; notices.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40829 (Improve wp_dropdown_languages() so it doesn't print out empty attributes) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 20 May 2017 20:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40829#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40829#comment:1/1495312861974104</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/40829/40829.diff"&gt;40829.diff&lt;/a&gt; proposes the following changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Set &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; to &lt;code&gt;locale&lt;/code&gt; by default instead of empty, to circumvent the issue proposed here. This also promotes the use of &lt;code&gt;locale&lt;/code&gt; for future usages by core and plugins.
&lt;/li&gt;&lt;li&gt;Bail early if ID or name are intentionally forced to be empty.
&lt;/li&gt;&lt;li&gt;Move the beginning of the &lt;code&gt;$output&lt;/code&gt; string creation to the end of the function with the other concatenation
&lt;/li&gt;&lt;li&gt;Switch &lt;code&gt;$args&lt;/code&gt; replacement to use the &lt;code&gt;$r&lt;/code&gt; variable approach, as per most other &lt;code&gt;wp_parse_args()&lt;/code&gt; usages in core. This prevents stomping the original &lt;code&gt;$args&lt;/code&gt; array, in the event a filter is introduced into this function later.
&lt;/li&gt;&lt;li&gt;Add some more inline documentation where blocks of code perform separate things.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Tests are passing. No further changes are needed to any usages of &lt;code&gt;wp_dropdown_languages()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40829.diff attached to Ticket #40829</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Sat, 20 May 2017 20:35:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40829/40829.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40829/40829.diff/1495312546226766</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39980 (Improve handling of image previews for non-image files) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 20 May 2017 20:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39980#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39980#comment:9/1495311378273408</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>28163.patch attached to Ticket #28163</title>
      
        <dc:creator>binarygary</dc:creator>

      <pubDate>Sat, 20 May 2017 20:15:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/28163/28163.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/28163/28163.patch/1495311357113594</guid>
      <description>&lt;p&gt;
Unit Test for 28163
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>39883.2.diff attached to Ticket #39883</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 20 May 2017 20:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39883/39883.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39883/39883.2.diff/1495311064285543</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39883 (Code hooking on `image_downsize` can no longer assume the file is an image) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 20 May 2017 20:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39883#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39883#comment:23/1495310410621898</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
[Update: fixed link to correct patch]
&lt;/p&gt;
&lt;p&gt;
As I understand it, there were essentially two main problems introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38949" title="Media: Add support for rendering PDF thumbnails.
When support for ..."&gt;r38949&lt;/a&gt;:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Non-image attachment IDs are now passed to the &lt;code&gt;image_downsize&lt;/code&gt; filter, where they previously weren't.
&lt;/li&gt;&lt;li&gt;Non-supported attachment types trigger unnecessary DB calls when attempting to get &lt;code&gt;_wp_attached_file&lt;/code&gt; and &lt;code&gt;_wp_attachment_metadata&lt;/code&gt; types.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Of those two, the second seems to be the most important to address, since there's no way for a developer to avoid this on their own, as @stephdau helpfully explained in the description of this issue.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39883/39883.2.diff" title="Attachment '39883.2.diff' in Ticket #39883"&gt;39883.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39883/39883.2.diff" title="Download"&gt;​&lt;/a&gt; resolves the second problem and partially addresses the first by only passing supported types to the filter. Here are my current assumptions:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp_get_attachment_image_src()&lt;/code&gt; (and related functions) should be able to take a post ID for a PDF and produce image attributes (Since 4.7).
&lt;/li&gt;&lt;li&gt;Only supported attachment types (i.e., image and pdf) should pass to &lt;code&gt;image_downsize&lt;/code&gt; filter.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;image_downsize()&lt;/code&gt; should bail early when the attachment type isn't a supported type so we can avoid extra DB hits when getting post meta for &lt;code&gt;_wp_attached_file&lt;/code&gt; or &lt;code&gt;_wp_attachment_metadata&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
For now, I think it makes sense to continue passing PDFs to the &lt;code&gt;image_downsize&lt;/code&gt; filter so integrators can still rewrite URLs for PDF previews with CDN addresses (which seems to be a common use case for this filter). In the future, It makes sense to consider splitting all PDF functionality into a separate set of functions to avoid confusion with the image functions, as described in &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39980" title="#39980: defect (bug): Improve handling of image previews for non-image files (assigned)"&gt;#39980&lt;/a&gt;. Additionally, we should avoid adding additional filters for PDF handling until we can consider approaches to &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/39980" title="#39980: defect (bug): Improve handling of image previews for non-image files (assigned)"&gt;#39980&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40817 (WordCounter removeRegExp maybe broken) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 20 May 2017 19:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40817#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40817#comment:1/1495308921208825</guid>
      <description>invalid: &lt;p&gt;
I think you're mixing the character class shortcuts &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, etc. with the UTF character escape sequences &lt;code&gt;\u####&lt;/code&gt; (where #### are four hexadecimal digits). Also, note that the UTF chars are in an array that is joined before used as a string in the regex.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>39883.diff attached to Ticket #39883</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 20 May 2017 19:35:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39883/39883.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39883/39883.diff/1495308913221909</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40451 (Customizer: Introduce plugin management) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 19:27:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40451#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40451#comment:1/1495308464731325</guid>
      <description>&lt;p&gt;
Themes should be managed within the customizer because they are the most fundamental aspect of a site's appearance. Plugins are much less likely to be so prominently relevant that it makes sense to install them from the customizer. Is the preview useful for installing/managing plugins?
&lt;/p&gt;
&lt;p&gt;
I'd think that this is lowest priority and potentially not something we should consider at all unless we're looking to eliminate a separate administration interface entirely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40278 (Customizer: Introduce theme uploading) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 19:24:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40278#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40278#comment:5/1495308240885379</guid>
      <description>&lt;p&gt;
This would be most appropriate as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;. As I mentioned in Slack, upload support without the ability to install themes directly undermines the WordPress.org repository and promotes a poor user experience. Additionally, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt; integrates shiny updates/installs into the customizer and provides a much more robust themes framework than what currently exists; there are significant technical advantages to building this as a part of that project or following its inclusion in core. The next step is to build out the shiny upload functionality and implement the previously-approved theme uploads design in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40254 (Customize: Eliminate customize-loader fullscreen iframe method for ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 19:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40254#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40254#comment:1/1495307863335934</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think it's time to retire this functionality. For back-compat, and easy maintenance for any core uses, we can adjust the customize-loader script to navigate the browser to the customizer (acting as a link) rather than opening it in an iframe.
&lt;/p&gt;
&lt;p&gt;
The more important long-term replacement will be a similar script that loads the customizer directly on the frontend.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40243 (Allow Manual Hue input for the HSL Color Picker) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 19:15:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40243#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40243#comment:1/1495307711415154</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good idea. First step is probably a design solution that incorporates this functionality without adding complexity for the majority of users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40432 (Customizer: Should we stop contextually hiding features?) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 19:13:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40432#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40432#comment:36/1495307628562233</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this ticket is asking the wrong question and approaching the issue in what may not be the most effective way. When there are too many options, users are overwhelmed. When users can't find options, they are overwhelmed. Contextually hiding options solves one problem but makes the other worse, and removing the current functionality does the opposite. The experience still isn't great either way.
&lt;/p&gt;
&lt;p&gt;
To actually fix both problems, we need to look beyond the current assumptions. It was mentioned above that users don't think/know to click around to preview different aspects of their site. That's the point of the customizer, and something that we should work to encourage more actively. If user's aren't actually using the preview, there is of course no reason for them to be using the customizer. And they would of course be annoyed that it only takes up a small part of the screen because they aren't using the preview that takes up most of their screen. If we show options that aren't shown in the preview, we work against the whole purpose of the customization/live preview experience.
&lt;/p&gt;
&lt;p&gt;
We've already started placing more emphasis on the preview. Visual edit shortcuts are the first step there, and inline editing should follow soon. If we turn the approach to the experience the other way around - encouraging interaction primarily within the preview/on the site and treating the customize pane as secondary, the question of whether controls should be contextual within the pane is much less important. If control navigation is more fundamentally rooted in the preview, pane-based navigation could potentially be greatly simplified to only focus on global elements that aren't contextual to specific parts of a site. Pane-based navigation for widget areas doesn't really make sense because it's very disconnected from where those areas actually are on the site.
&lt;/p&gt;
&lt;p&gt;
I think it would be more productive to rethink this issue by focusing on the preview first, and then circle back to reworking how global contextuality should work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40828 (JavaScript Standard Style) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 20 May 2017 19:05:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40828#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40828#comment:2/1495307140257811</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40828 (JavaScript Standard Style) updated</title>
      
        <dc:creator>jdgrimes</dc:creator>

      <pubDate>Sat, 20 May 2017 19:05:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40828#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40828#comment:1/1495307108035064</guid>
      <description>&lt;p&gt;
Standard is probably great for many JS projects, but I'm not sure that it is right for WordPress. WordPress is not a single-language project, it uses PHP in addition to JS. We try to keep many of the code style rules fairly similar across languages to simplify things. Standard uses some rules that are very different from our long-established PHP standards, and as such it would create a disunity of code styles throughout the project (since I don't see any chance of changing our PHP styles to match).
&lt;/p&gt;
&lt;p&gt;
I think that the bike shed has been painted, and we'll probably want to keep it the same color that it already is for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40830 (Widgets: add a warning that changes are published instantly on the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 18:45:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40830#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40830#comment:1/1495305912403675</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40830.png attached to Ticket #40830</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 18:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40830/40830.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40830/40830.png/1495305896668120</guid>
      <description>&lt;p&gt;
With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40830/40830.diff" title="Attachment '40830.diff' in Ticket #40830"&gt;40830.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40830/40830.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>40830.diff attached to Ticket #40830</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 18:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40830/40830.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40830/40830.diff/1495305874942423</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40830 (Widgets: add a warning that changes are published instantly on the ...) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 18:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40830</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40830/1495305829697639</guid>
      <description>&lt;p&gt;
Every change made on the widgets admin screen is published instantly, making it live on the user's site. This includes adding a widget without configuring any settings and other things that probably shouldn't go live before they're ready. For this reason, we added a "manage with live preview" link to this screen previously.
&lt;/p&gt;
&lt;p&gt;
To further emphasize the usability problems with this screen and the availability of an alternative, particularly for new users that may find themselves here, we should add a warning to the widgets admin screen that clearly states that changes are published immediately and deep-links to the live preview version. This could also reduce confusion here and elsewhere, as this may be the only place in wp-admin where changes are saved without clicking any sort of publish/submit button.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38796 (Customize media control button labels should automatically reflect the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 18:04:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38796#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38796#comment:5/1495303481239316</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38796/38796.1.diff" title="Attachment '38796.1.diff' in Ticket #38796"&gt;38796.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38796/38796.1.diff" title="Download"&gt;​&lt;/a&gt; builds on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38796/38796.0.diff" title="Attachment '38796.0.diff' in Ticket #38796"&gt;38796.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38796/38796.0.diff" title="Download"&gt;​&lt;/a&gt; to remove the type-specific label overwrites for WP_Customize_Image_Control and add translator comments for placeholders. This should be ready for commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38796.1.diff attached to Ticket #38796</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 20 May 2017 18:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38796/38796.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38796/38796.1.diff/1495303366543787</guid>
      <description>&lt;p&gt;
Add translator comments for placeholders and reuse automatic labels for image controls
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40829 (Improve wp_dropdown_languages() so it doesn't print out empty attributes) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 20 May 2017 17:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40829</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40829/1495301528822441</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_dropdown_languages()&lt;/code&gt; takes an array of arguments with some defaults. Among them, the arguments related to the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; HTML attributes &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/l10n.php?rev=40362#L1119"&gt;default to empty string&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Later on, these attributes are printed out without any check if they're empty or not:
&lt;code&gt;$output = sprintf( '&amp;lt;select name="%s" id="%s"&amp;gt;', esc_attr( $args['name'] ), esc_attr( $args['id'] ) );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
The final output might print out empty &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; attributes if the related arguments are not explicitly passed: &lt;code&gt;&amp;lt;select name="" id=""&amp;gt;&lt;/code&gt;, which doesn't look right to me.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40828 (JavaScript Standard Style) created</title>
      
        <dc:creator>jhabdas</dc:creator>

      <pubDate>Sat, 20 May 2017 16:22:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40828</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40828/1495297328003968</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://standardjs.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://standardjs.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
ESLint adds a lot of complexity and causes an incredible amount of churn in projects managing JavaScript. Moving towards a Standard JS ESLint configuration will help you port away from bike shedding and enjoy the simple life many of us try to do.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 20 May 2017 16:11:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:36/1495296689949093</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39671#comment:35" title="Comment 35"&gt;grapplerulrich&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@westonruter Is there a reason why &lt;code&gt;@access&lt;/code&gt; was removed in a few places, left in others and added too?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, see discussion at &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RP4WU5/p1495224872995687"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RP4WU5/p1495224872995687&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Do we need to create a new issue for the JS documentation?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There will always be need for more docs tickets :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40819 (Audio widget in WP 4.8 - unsupported audio files (eliminate support ...) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sat, 20 May 2017 15:54:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40819#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40819#comment:17/1495295654413244</guid>
      <description>&lt;p&gt;
Based on MediaElement.js dropping support for these filetypes, I think it makes sense for us to remove embed support since the current behavior creates confusing user expectations.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40654 (Undefined offset: 1 in /wp-admin/includes/dashboard.php on line 1227) closed</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Sat, 20 May 2017 14:38:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40654#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40654#comment:10/1495291131558299</guid>
      <description>invalid: &lt;p&gt;
The entire &lt;code&gt;wp_dashboard_plugins_output()&lt;/code&gt; function has been removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40607" title="Dashboard: Update the existing WordPress News dashboard widget to also ..."&gt;[40607]&lt;/a&gt;, so this issue will be gone with 4.8.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39920 (Empty if-statement) updated</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Sat, 20 May 2017 13:46:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39920#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39920#comment:7/1495287975612945</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
This could be solved with a patch I just submitted for &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/26829" title="#26829: defect (bug): Use of strpos() in extract_from_markers() and insert_with_markers() ... (new)"&gt;#26829&lt;/a&gt; (comes with unit tests too).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26829 (Use of strpos() in extract_from_markers() and insert_with_markers() ...) updated</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Sat, 20 May 2017 13:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26829#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26829#comment:8/1495287745202159</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I run into this issue too and subsequently found this old ticket.
&lt;/p&gt;
&lt;p&gt;
I propose a slightly different fix in my patch. Since both &lt;code&gt;extract_from_markers()&lt;/code&gt; and &lt;code&gt;insert_with_markers()&lt;/code&gt; functions need to split input lines in the same way, I re-factored the splitting part into separate function. Benefits are consistency and easier unit testing.
&lt;/p&gt;
&lt;p&gt;
Btw. this is the first time I submit unit tests for WordPress, so I'd be glad for any comments on what could be done better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26829.tests.refreshed.diff attached to Ticket #26829</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Sat, 20 May 2017 13:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26829/26829.tests.refreshed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26829/26829.tests.refreshed.diff/1495287327011237</guid>
      <description>&lt;p&gt;
Tests for refreshed patch (also covering new function)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>26829.refreshed.diff attached to Ticket #26829</title>
      
        <dc:creator>chesio</dc:creator>

      <pubDate>Sat, 20 May 2017 13:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26829/26829.refreshed.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26829/26829.refreshed.diff/1495287275441428</guid>
      <description>&lt;p&gt;
Refreshed patch using new split_by_markers() function to consistently handle lines splitting
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40827 (WP Regular post categories bug also affects Woocommerce products categories) updated</title>
      
        <dc:creator>raykaii</dc:creator>

      <pubDate>Sat, 20 May 2017 11:18:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40827#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40827#comment:1/1495279109900750</guid>
      <description>&lt;p&gt;
the devs mikejolley and justinshreve from woocommerce might be able to explain this bug better.
&lt;/p&gt;
&lt;p&gt;
see &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/13040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/13040&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40827 (WP Regular post categories bug also affects Woocommerce products categories) created</title>
      
        <dc:creator>raykaii</dc:creator>

      <pubDate>Sat, 20 May 2017 11:12:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40827</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40827/1495278739889387</guid>
      <description>&lt;p&gt;
HI,
&lt;/p&gt;
&lt;p&gt;
i have found a bug that is causing me lot of frustration when doing menus using categories.
&lt;/p&gt;
&lt;p&gt;
There is a bug with the categories nesting/child categories on the menu create page. When having many sub-nesting/child categories when the category list has over 50 nested categories and the category small menu auto creates a second page then it messes up the categories nesting.
&lt;/p&gt;
&lt;p&gt;
This is hard to explain.
&lt;/p&gt;
&lt;p&gt;
On this 1st image, is when some sub-nesting/child categories fit on one page. this is good.
Note:I had to remove the menu box height to show what i mean.
&lt;a style="padding:0; border:none" href="https://image.ibb.co/eTgfav/nesting_on_one_page.jpg"&gt;&lt;img src="https://image.ibb.co/eTgfav/nesting_on_one_page.jpg" alt="https://image.ibb.co/eTgfav/nesting_on_one_page.jpg" crossorigin="anonymous" title="https://image.ibb.co/eTgfav/nesting_on_one_page.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
but when a sub-nesting/child categories have too many sub-nesting/child (about 50) that gets chopped on 2 or more pages then the tree of the categories then the tree bugs.
&lt;a style="padding:0; border:none" href="https://image.ibb.co/jjwfav/bug.jpg"&gt;&lt;img src="https://image.ibb.co/jjwfav/bug.jpg" alt="https://image.ibb.co/jjwfav/bug.jpg" crossorigin="anonymous" title="https://image.ibb.co/jjwfav/bug.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is Tab/page:2
It brakes the tree here too plus it adds the rest of the sub-nesting/child categories at the bottom of the page why? it should be at the top as its the continuing of tab/page 1 of the categories.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://image.ibb.co/hDiUJF/page_2.jpg"&gt;&lt;img src="https://image.ibb.co/hDiUJF/page_2.jpg" alt="https://image.ibb.co/hDiUJF/page_2.jpg" crossorigin="anonymous" title="https://image.ibb.co/hDiUJF/page_2.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This bugs also affects Woocommerce products categories as we sometimes need many sub products categories.
&lt;/p&gt;
&lt;p&gt;
i 1st found this bug when doing a menu with Woocommerce products categories i opened a bug report here:
&lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues/13040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues/13040&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
here or some screen shots of that bug ticket.
&lt;/p&gt;
&lt;p&gt;
woocommerce Product Categories tree.jpg:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://image.ibb.co/hNZmyF/6db82992_e7fd_11e6_8090_5631505dd16d.jpg"&gt;&lt;img src="https://image.ibb.co/hNZmyF/6db82992_e7fd_11e6_8090_5631505dd16d.jpg" alt="https://image.ibb.co/hNZmyF/6db82992_e7fd_11e6_8090_5631505dd16d.jpg" crossorigin="anonymous" title="https://image.ibb.co/hNZmyF/6db82992_e7fd_11e6_8090_5631505dd16d.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://image.ibb.co/ckkFsa/762fb7fc_e7fd_11e6_81a2_7e00aa1b8432.jpg"&gt;&lt;img src="https://image.ibb.co/ckkFsa/762fb7fc_e7fd_11e6_81a2_7e00aa1b8432.jpg" alt="https://image.ibb.co/ckkFsa/762fb7fc_e7fd_11e6_81a2_7e00aa1b8432.jpg" crossorigin="anonymous" title="https://image.ibb.co/ckkFsa/762fb7fc_e7fd_11e6_81a2_7e00aa1b8432.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://image.ibb.co/fyVFsa/a496612c_e7fd_11e6_8c69_028e8ea6891d.jpg"&gt;&lt;img src="https://image.ibb.co/fyVFsa/a496612c_e7fd_11e6_8c69_028e8ea6891d.jpg" alt="https://image.ibb.co/fyVFsa/a496612c_e7fd_11e6_8c69_028e8ea6891d.jpg" crossorigin="anonymous" title="https://image.ibb.co/fyVFsa/a496612c_e7fd_11e6_8c69_028e8ea6891d.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After talking with some Woocommerce devs they told me this was a WP core bug.
&lt;/p&gt;
&lt;p&gt;
i note "It looks like the problem has to do with the nesting / child categories. The second page starts with the categories that are top-level and their children. Then at the end it has the miscellaneous categories whose parents are on page 1."
&lt;/p&gt;
&lt;p&gt;
" But it's not something we should be fixing as it's generated and rendered by WP core (all hierarchical categories output in the same way). We don't control that code."
&lt;/p&gt;
&lt;p&gt;
"If that's broken because of WP core's handling (looks like it is), yeah I think we should raise it."
&lt;/p&gt;
&lt;p&gt;
So this is why i am opening this ticket with WP.
&lt;strong&gt;BUG:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
How to replicate this bug with WP.
create a root Categorie with 2 or more Parent Categories in it.
then add say 50 subcategories in a parent so on the create menu page the category menu box splits the subcategories on a second page. &lt;strong&gt;Note:&lt;/strong&gt; it needs to split the subcategories. if the subcategories fits on one page it will not work)
&lt;/p&gt;
&lt;p&gt;
EXP:
&lt;/p&gt;
&lt;pre class="wiki"&gt;root cat 1
root cat 2
root cat 3
          - Parent Lv 1
          -- Parent lv 2
          ---  Parent lv 3 - category 01
          --- (ADD 50 other category in this parent)
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40819 (Audio widget in WP 4.8 - unsupported audio files (eliminate support ...) updated</title>
      
        <dc:creator>Guido07111975</dc:creator>

      <pubDate>Sat, 20 May 2017 09:46:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40819#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40819#comment:16/1495273593099238</guid>
      <description>&lt;p&gt;
@westonruter I'm having the same experience as @vijustin describes:
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;On a positive note after applying the patch locally the Audio Widget no longer offers .wma files as an option and adding media during post editing no longer offers the 'embedded media player' as an option and instead defaults to 'link to media file".&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Besides this I'm wondering whether it's possible to do a filetype check upon upload. I can upload all supported filetypes while adding the (audio/video/image) widget.
&lt;/p&gt;
&lt;p&gt;
Guido
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39994 (Introduce Core Widget: Video) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 20 May 2017 09:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39994#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39994#comment:8/1495273481635772</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40811" title="Widgets: Remove unused JS variable to fix JSHint error introduced in ..."&gt;40811&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Remove unused JS variable to fix JSHint error introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40640" title="Widgets: Introduce media widgets for images, audio, and video with ..."&gt;[40640]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39994" title="#39994: enhancement: Introduce Core Widget: Video (closed: fixed)"&gt;#39994&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [40811]: Widgets: Remove unused JS variable to fix JSHint error introduced in ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 20 May 2017 09:44:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40811</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40811/1495273481139918</guid>
      <description>&lt;p&gt;
Widgets: Remove unused JS variable to fix JSHint error introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40640" title="Widgets: Introduce media widgets for images, audio, and video with ..."&gt;[40640]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39994" title="#39994: enhancement: Introduce Core Widget: Video (closed: fixed)"&gt;#39994&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sat, 20 May 2017 07:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:35/1495265759699202</guid>
      <description>&lt;p&gt;
@westonruter Is there a reason why &lt;code&gt;@access&lt;/code&gt; was removed in a few places, left in others and added too?
&lt;/p&gt;
&lt;p&gt;
Do we need to create a new issue for the JS documentation?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40784 (WP_HTTP_IXR_Client constructor needs to check that $server is valid) updated</title>
      
        <dc:creator>drebbits.web</dc:creator>

      <pubDate>Sat, 20 May 2017 06:25:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40784#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40784#comment:1/1495261548021129</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Welcome @chrispecoraro. Thanks for reporting.
&lt;/p&gt;
&lt;p&gt;
Although in the example code block, I'm seeing &lt;code&gt;$pingback_server_url&lt;/code&gt; is being checked out around this line &lt;code&gt;if ( $pingback_server_url ) {...}&lt;/code&gt;, I'm still convince that we need a check on the &lt;code&gt;$server&lt;/code&gt; if it's the type of data we expect it to be here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>slugs-patch.diff attached to Ticket #40826</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 20 May 2017 06:08:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40826/slugs-patch.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40826/slugs-patch.diff/1495260487265762</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40826 (Allow items queried in batch via "slug" to maintain order) created</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sat, 20 May 2017 06:07:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40826</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40826/1495260470349961</guid>
      <description>&lt;p&gt;
When querying endpoints that have items, it is possible to pass an array of values to the &lt;code&gt;slug&lt;/code&gt; param. This will filter the result set to only include slugs that match. This works for posts, pages, media, users, categories, and tags.
&lt;/p&gt;
&lt;p&gt;
Often, the reason this is happening is so that a remote system can collect all relevant queries before sending one HTTP request that contains them all. This was formalized in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40027" title="#40027: enhancement: Tags and Categories should have a &amp;#34;slugs&amp;#34; parameter for batch fetching (closed: fixed)"&gt;#40027&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
One caveat: the endpoints do not currently have a proper &lt;code&gt;orderby&lt;/code&gt; value that ensures the items are returned in the same order they requested.
&lt;/p&gt;
&lt;p&gt;
The best convention I could come up with is: &lt;code&gt;orderby=slugs&lt;/code&gt;. Patch incoming.
This is essential for tools like Dataloader &lt;a class="ext-link" href="https://github.com/facebook/dataloader#batching"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/facebook/dataloader#batching&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39671 (Customize: Further improve inline documentation) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sat, 20 May 2017 05:45:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39671#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39671#comment:34/1495259118060777</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39671#comment:32" title="Comment 32"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also just came across this:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Incidentally, the @access tag has no context with regard to a class itself. Visibility scope of public/protected/private only applies to class methods and class properties, not to a class itself. Further, it was added to phpDocumentor 1.x back in the PHP4 days, before such visibility scope was available in PHP at all (that was added in PHP5). Therefore, it's not actually useful anymore. Even in 1.x, if run using PHP5 against code written for PHP5, the code scope keywords would override whatever an @access tag said. I don't believe that phpDocumentor 2.x even bothered implementing the @access tag, and rightly so.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://stackoverflow.com/a/20148459/93579"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/a/20148459/93579&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm going to commit &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39671/39671.9.diff" title="Attachment '39671.9.diff' in Ticket #39671"&gt;39671.9.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39671/39671.9.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Great! I think we can address the &lt;code&gt;@access&lt;/code&gt; tag along with JS files in WordPress 4.9 then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>patch-add-hook.v3.diff attached to Ticket #40545</title>
      
        <dc:creator>DaveFX</dc:creator>

      <pubDate>Sat, 20 May 2017 04:48:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40545/patch-add-hook.v3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40545/patch-add-hook.v3.diff/1495255722132809</guid>
      <description>&lt;p&gt;
New version of the patch, now renaming the filter name, according to what @rachelbaker suggested
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #39994,​40808 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 20 May 2017 04:17:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39994%2C40808</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39994%2C40808/1495253854124690</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40810" title="Widgets: Introduce `isHostedVideo` method on `VideoWidgetControl` to ..."&gt;40810&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Widgets: Introduce &lt;code&gt;isHostedVideo&lt;/code&gt; method on &lt;code&gt;VideoWidgetControl&lt;/code&gt; to allow plugins to extend for recognizing services beyond YouTube and Vimeo.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also update jshint configuration in Gruntfile to include the widget scripts among the JS files linted.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props timmydcrawford.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39994" title="#39994: enhancement: Introduce Core Widget: Video (closed: fixed)"&gt;#39994&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40808" title="#40808: defect (bug): Media Widgets: VideoPress Uploads Not Functioning Correctly (closed: fixed)"&gt;#40808&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40810]: Widgets: Introduce `isHostedVideo` method on `VideoWidgetControl` to ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 20 May 2017 04:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40810</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40810/1495253853659135</guid>
      <description>&lt;p&gt;
Widgets: Introduce &lt;code&gt;isHostedVideo&lt;/code&gt; method on &lt;code&gt;VideoWidgetControl&lt;/code&gt; to allow plugins to extend for recognizing services beyond YouTube and Vimeo.
&lt;/p&gt;
&lt;p&gt;
Also update jshint configuration in Gruntfile to include the widget scripts among the JS files linted.
&lt;/p&gt;
&lt;p&gt;
Props timmydcrawford.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39994" title="#39994: enhancement: Introduce Core Widget: Video (closed: fixed)"&gt;#39994&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40808" title="#40808: defect (bug): Media Widgets: VideoPress Uploads Not Functioning Correctly (closed: fixed)"&gt;#40808&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40808 (Media Widgets: VideoPress Uploads Not Functioning Correctly) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 20 May 2017 04:14:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40808#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40808#comment:12/1495253669430967</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40819 (Audio widget in WP 4.8 - unsupported audio files (eliminate support ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 20 May 2017 03:21:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40819#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40819#comment:15/1495250460406603</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40819 (Audio widget in WP 4.8 - unsupported audio files (eliminate support ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 20 May 2017 03:19:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40819#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40819#comment:14/1495250397052365</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40819 (Audio widget in WP 4.8 - unsupported audio files (eliminate support ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 20 May 2017 03:19:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40819#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40819#comment:13/1495250375419867</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This will probably need a dev note.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39955 (Media details: HTML character shown as code) closed</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 20 May 2017 02:23:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39955#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39955#comment:18/1495246980538992</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40809" title="Media: Decode HTML entities in `author_name` before sending to JS.
In ..."&gt;40809&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Decode HTML entities in &lt;code&gt;author_name&lt;/code&gt; before sending to JS.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Normalize behavior when author does not exist by returning '(no author)' for &lt;code&gt;authorName&lt;/code&gt; in these cases.
&lt;/li&gt;&lt;li&gt;Decode HTML entities in &lt;code&gt;author_name&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Add tests for both of the above.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props arshidkv12, ocean90, sloisel, mikeschroder.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39955" title="#39955: defect (bug): Media details: HTML character shown as code (closed: fixed)"&gt;#39955&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40809]: Media: Decode HTML entities in `author_name` before sending to JS.  In ...</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 20 May 2017 02:23:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40809</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40809/1495246980053201</guid>
      <description>&lt;p&gt;
Media: Decode HTML entities in &lt;code&gt;author_name&lt;/code&gt; before sending to JS.
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;wp_prepare_attachment_for_js()&lt;/code&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Normalize behavior when author does not exist by returning '(no author)' for &lt;code&gt;authorName&lt;/code&gt; in these cases.
&lt;/li&gt;&lt;li&gt;Decode HTML entities in &lt;code&gt;author_name&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Add tests for both of the above.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props arshidkv12, ocean90, sloisel, mikeschroder.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39955" title="#39955: defect (bug): Media details: HTML character shown as code (closed: fixed)"&gt;#39955&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #40825 (Re-addressing validation/sanitization of IDs to allow filtering before ...) updated</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Sat, 20 May 2017 01:23:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40825#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40825#comment:2/1495243427459198</guid>
      <description>&lt;p&gt;
Wanted to drop a reference/link to this related ticket: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/39053" title="#39053: enhancement: Add function `wp_validate_integer` (new)"&gt;#39053&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A point was made that filter_var() is not required in a PHP build for WordPress to compile therefore I added a fallback for that case that uses preg_match() to look for a collection of digits that is not 0 and does not start with 0 (since an ID will/should never meet those conditions)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40808 (Media Widgets: VideoPress Uploads Not Functioning Correctly) updated</title>
      
        <dc:creator>timmydcrawford</dc:creator>

      <pubDate>Sat, 20 May 2017 00:58:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40808#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40808#comment:11/1495241908268861</guid>
      <description>&lt;p&gt;
Jetpack PR &lt;a class="ext-link" href="https://github.com/Automattic/jetpack/pull/7215"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/Automattic/jetpack/pull/7215&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40825 (Re-addressing validation/sanitization of IDs to allow filtering before ...) updated</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Sat, 20 May 2017 00:43:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40825#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40825#comment:1/1495241015938754</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40808 (Media Widgets: VideoPress Uploads Not Functioning Correctly) updated</title>
      
        <dc:creator>timmydcrawford</dc:creator>

      <pubDate>Sat, 20 May 2017 00:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40808#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40808#comment:10/1495238516364025</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yep that looks about right... I was thinking of flipping the logic and seeing if the &lt;code&gt;isHostedVideo&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; first, but 6 one way half dozen the other way :) - I'll get a Jetpack PR up soon and drop a link here when it is ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40825 (Re-addressing validation/sanitization of IDs to allow filtering before ...) created</title>
      
        <dc:creator>LindsayBSC</dc:creator>

      <pubDate>Sat, 20 May 2017 00:00:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40825</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40825/1495238404954656</guid>
      <description>&lt;p&gt;
The following ticket spawned from a desire to import content from outside of the WordPress database but have it treated as a native content type. A concept that has a clear audience that desires this functionality (see ticket: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/12955" title="#12955: feature request: Add get_post filter (new)"&gt;#12955&lt;/a&gt;) and has been addressed in a number of different ways. I believe the least impactful way to address this &lt;em&gt;without&lt;/em&gt; removing the 'final' keyword from the WP_Post class that  also improves standards for validation and sanitization of the ID value typically passed to get_posts() is to use the ID as a sort-of 'decorator' unto itself.
&lt;/p&gt;
&lt;p&gt;
When merging the content from multiple sources to be displayed in a theme the biggest conflict to arise is duplication of IDs. Since the remote source is ignorant to the ID numbers already in use in the wp_posts table, a requirement for a "decorated" ID determined.
&lt;/p&gt;
&lt;p&gt;
WordPress currently does not have a standard method for validating the format of the variable that will ultimately be passed to get_post() to create a new WP_Post object. The following methods are implemented in core files to attempt to sanitize &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; validate the value passed as an ID &lt;sup&gt;(*see links for pro/cons of usage in WP)&lt;/sup&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://gist.github.com/LinzardMac/b27e738aee52cb3e45c1909fb555cec5"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;(int) Typecast / intval()&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://gist.github.com/LinzardMac/0d1915dfe78fc68f0b3c64d50cf2cb41"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;is_numeric()&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://gist.github.com/LinzardMac/31ed99f8faa34ffad6e666f213e99870"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;absint()&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="MySuggestion"&gt;&lt;strong&gt;My Suggestion&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;
I recommend creating a new function that will standardize the validation and sanitization of ID numbers that are being passed to a database query. All instances of is_numeric, (int), intval(), and absint() that are used as a way to validate or sanitize (or both validate and sanitize) an ID number that is passed to a query from an external function should be replaces with a new function that will serve both purposes. The new function will return a falsey response OR throw an exception when validation fails or if validation passes, will sanitize the value to a format compatible with the typical MYSQL type for the ID column (bigint).
&lt;/p&gt;
&lt;p&gt;
Inside of this new function we can include a filter that will allow developers to override certain restrictions, specifically for allowing external content to be treated as a WP_Post object or some other native content that commonly would exist in WordPress’ database.
&lt;/p&gt;
&lt;p&gt;
Since WP_Post will always look for a cached version of the object before querying the database, we make sure to store all necessary values in the cache before the template is loaded after we run our remote_get. We utilize the concatenated ID which is formatted like 12345-REMOTE as the ID in the cache so as to avoid conflicts w/ existing post IDs that are also stored in the memory cache. The only hurdle to this was the fact that core files were forcibly casting IDs as integers long before a query of any sort were to be made.
&lt;/p&gt;
&lt;p&gt;
The argument for sanitizing early was to catch malformations early, but all it seemed to do was force the type early and never truly "caught" a bad value passed as an ID. A true “early catch” would either sanitize early w/ a falsey response or Exception and/or find the cached version as early as the sanitization so as to avoid the rest of the process of getting the WP_Post instance anyways.
&lt;/p&gt;
&lt;p&gt;
Available in the following gist is my suggestion for a better validation function I called &lt;code&gt;&lt;/code&gt;&lt;code&gt;is_valid_id()&lt;/code&gt;&lt;code&gt;&lt;/code&gt;, an example of how filters can be used on this sanitization function to allow external content to be treated as if it was a WP_Post object, and it's usage within a core file that previously used one of the subpar validation functions ( in this case meta.php using is_numeric() )
&lt;/p&gt;
&lt;p&gt;
*comments in the file are just opinions and alternative thoughts I had while crafting this
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://gist.github.com/LinzardMac/38bbe22feb0b0a3fbabfcf64d797cd80"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/LinzardMac/38bbe22feb0b0a3fbabfcf64d797cd80&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
** It could be worthy of note that I have been using some version of this code in a live production site for the last 4 months without any changes needed to plugins or template files to account for this "non native" content.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>