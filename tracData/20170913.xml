<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:51:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:156</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:156/1505346675602066</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
We have been experimenting with decorators, exploring slot &amp;amp; fill patterns, and dabbled with middlewares. There are some great points in these to build from. We do need some more tangible examples to define and implement any solution. Gutenberg gives us a good place to try them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@matveb do you feel that decorators, slot and fill patterns or middleware would be applicable to extending our existing core JavaScript, especially our single page Backbone Apps?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd want to see something using a modern library (Be that React, Vue, Angular, Whatever) using this pattern before we add it as-is to WordPress, if it proves to be useful in that context then I'd be all for this, but only after a reasonably complex application had tried it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@dd32 I'm happy to see Gutenberg &lt;a class="ext-link" href="https://github.com/WordPress/gutenberg/issues/2474#issuecomment-327875802"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;exploring wp.hooks as a possible api for adding extensibility&lt;/a&gt;. At the same time, I am trying to forward the ongoing effort  to make our existing JavaScript more accessible and extendable - especially our single page apps - the media modal, the media grid, the new theme browser, the installed theme browser, the customizer, the editor and the revisions screen (i may have missed some). &lt;code&gt;wp.hooks&lt;/code&gt; seems like a great fit make these components more extendable, 'modern' JavaScript approaches may not be as good a fit.  How would you propose we work on making our existing JavaScript more extendable in core? Wait until the Gutenberg project decides how to approach extendability, then see if we can retroactively apply that approach to our legacy JavaScript?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41852 (Fix UN flag test by returning the correct value.) updated</title>
      
        <dc:creator>peterwilsoncc</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41852#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41852#comment:3/1505346240382927</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41852#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not really following. Could you provide some steps to replicate the issue and why it doesn't apply to the England flag?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The tests are considered to fail (return false) if both flags look the same.
&lt;/p&gt;
&lt;p&gt;
The UN test is effectively returning &lt;code&gt;flag === flag2&lt;/code&gt;, ie true if identical.
&lt;/p&gt;
&lt;p&gt;
The English flag returns &lt;code&gt;flag !== flag2&lt;/code&gt;, ie false if identical.
&lt;/p&gt;
&lt;p&gt;
The way the tests are written means the affect is minimal as users are more likely to get a false negative than a false positive.
&lt;/p&gt;
&lt;p&gt;
I've put together a reduced test case at &lt;a class="ext-link" href="https://jsbin.com/palagay/2/edit?js,output"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://jsbin.com/palagay/2/edit?js,output&lt;/a&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Visit the &lt;a class="ext-link" href="https://jsbin.com/palagay/2/edit?js,output"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;test case&lt;/a&gt; to see if your browser supports the UN flag (Chrome 61/MacOS Sierra will not)
&lt;/li&gt;&lt;li&gt;The outcome will display the images.
&lt;/li&gt;&lt;li&gt;To test in core, change the UN flag test to end:
&lt;/li&gt;&lt;/ol&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;flag&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;flag2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'fail'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'pass'&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41806 (Use get_network_by_path in get_admin_users_for_domain) updated</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:12:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41806#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41806#comment:3/1505344330931532</guid>
      <description>&lt;p&gt;
@jeremyfelt The reason for the patch is simple, there are only 2 other places in core that run raw sql queries on  the sites table. I already for a patch for &lt;code&gt;ms_load_current_site_and_network&lt;/code&gt; (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41762" title="#41762: enhancement: Use WP_Network_Query in ms_load_current_site_and_network (closed: fixed)"&gt;#41762&lt;/a&gt;) and it is pointless change &lt;code&gt;network_domain_check&lt;/code&gt; as it only used installation process.
&lt;/p&gt;
&lt;p&gt;
For the sake of completely and the simply nature of this patch, I would make the change.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41806.2.diff attached to Ticket #41806</title>
      
        <dc:creator>spacedmonkey</dc:creator>

      <pubDate>Wed, 13 Sep 2017 23:01:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41806/41806.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41806/41806.2.diff/1505343685009887</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41879 (Code Editors: Weird scrolling/click behavior in Additional CSS) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41879</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41879/1505342000892749</guid>
      <description>&lt;p&gt;
When I was testing the Additional CSS panel in trunk, I noticed that clicking into the textarea moves my whole screen down, which I found surprising and kind of alarming. Then, when I try to scroll back up to read, it snaps back up instead of naturally scrolling, which felt even more alarming. We should not make any sort of scroll/movement assumptions here.
&lt;/p&gt;
&lt;p&gt;
Video: &lt;a class="ext-link" href="https://cloudup.com/cvJbKNaZ6yg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cloudup.com/cvJbKNaZ6yg&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41878 (No way to change the order of fields for taxonomy meta) created</title>
      
        <dc:creator>ralphonz</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41878</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41878/1505341646863010</guid>
      <description>&lt;p&gt;
There is currently no way to position any fields inserted with {$taxonomy}_add_form_fields or {$taxonomy}_edit_form_fields.  Any fields added always appear after the description field with no way to insert them anywhere else in the form.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40931 (Warning: Division by zero in ...) updated</title>
      
        <dc:creator>Abigailm</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:18:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40931#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40931#comment:7/1505341132499060</guid>
      <description>&lt;p&gt;
I saw no pattern and have seen this error on multiple sites. It seems to be something that was triggered by bots or spiders -- that is, when I have been able to trace the error in site logs, it often was triggered by a bot such as baidu.   It did seem to help to add this line to the robots.txt for the site:
&lt;/p&gt;
&lt;p&gt;
User-agent: *
Disallow: */embed/
&lt;/p&gt;
&lt;p&gt;
Though that was simply taking a step to discourage the triggering event, rather than actually addressing the underlying problem.
&lt;/p&gt;
&lt;p&gt;
And the reason that I was only seeing this with bots may simply reflect that my site content is not commonly embedded elsewhere, so real human users wouldn't ordinarily be viewing the embeds.
&lt;/p&gt;
&lt;p&gt;
But the better solution for me was simply to follow the recommendation of @aegis123 and put the modified/corrected embed-content.php file in my theme's directory.
&lt;/p&gt;
&lt;p&gt;
I actually am using this code on line 33:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ($data['height'] &amp;gt; 0) &amp;amp;&amp;amp; $data['width'] / $data['height'] &amp;gt; $aspect_ratio ) {
&lt;/pre&gt;&lt;p&gt;
(Since it is only the missing height value that causes the divide by 0 error, I didn't see a need to validate the width value.  If width is 0, but height is an integer, then width / height would simply produce a 0 value, which would always be &amp;lt; $aspect_ratio. But that's just my personal coding preference for simplicity - nothing wrong with checking both values.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>matveb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 22:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:155</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:155/1505340791130293</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
[...] as well as from members of the Gutenberg team [...] Are you working on a new approach to extensibility that will be applicable to core that we should be waiting for?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We have been experimenting with decorators, exploring slot &amp;amp; fill patterns, and dabbled with middlewares. There are some great points in these to build from. We do need some more tangible examples to define and implement any solution. Gutenberg gives us a good place to try them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41875 (Wordpress has some fundamental flaws in its structure) updated</title>
      
        <dc:creator>Soean</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:53:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41875#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41875#comment:2/1505339581259964</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:47:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:8/1505339224169778</guid>
      <description>&lt;p&gt;
Yeah, I was hesitant to address also the focus issue, because, ideally, that should work out of the box :( I've also quickly tried that and it triggers some weird behaviors:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;in Firefox, the page scrolls and the editor area first line goes under the WP toolbar
&lt;/li&gt;&lt;li&gt;in both Chrome and Firefox, if one line in the editor area was previously focused, clicking the label puts focus on that line because I guess CodeMirror remembers the previous insertion point; this behaviour is confusing when the focused line is outside of the visible editor area portion (which doesn't scroll)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
About the Help text, see also the &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1505329202000457"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;discussion on Slack&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37757 (Add `allowed_classes` to `maybe_unserialize` When WordPress is running ...) updated</title>
      
        <dc:creator>seuser</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:39:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37757#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37757#comment:9/1505338767039565</guid>
      <description>&lt;p&gt;
Nice, thanks for the info.
&lt;/p&gt;
&lt;p&gt;
Your arguments make sense to me - once a plugin is installed, regardless of whether it interacts with WP, it would need to be trusted as you say.
&lt;/p&gt;
&lt;p&gt;
A compromise could be to pass through the option name from the get_option function as a third argument to this. That could allow the developer to modify the unserialise options only for a specific option.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;get_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...
&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;"option_&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$option&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maybe_unserialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;maybe_unserialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$option&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// ...
&lt;/span&gt;        &lt;span class="nv"&gt;$options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'unserialization_options'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$options&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$original&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$key&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="c1"&gt;// ...
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But in that case, in the pre filter in get_option could similarly be used to target a specific option, albeit with a bit more effort. For that reason, I'd be happy to leave as is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:7/1505338359138102</guid>
      <description>&lt;p&gt;
An additional change needed for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff" title="Attachment '41872.2.diff' in Ticket #41872"&gt;41872.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.2.diff" title="Download"&gt;​&lt;/a&gt;. When clicking on the label it should focus on the CodeMirror editor.
&lt;/p&gt;
&lt;p&gt;
In other words:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'click'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;codemirror&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:29/1505338298735820</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39165#comment:18" title="Comment 18"&gt;zodiac1978&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it be useful to collect plugins which already do this? There are plenty of those in the plugin directory ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Maybe this list is useful to find some more approaches on this topic:
&lt;a class="ext-link" href="https://wordpress.org/plugins/server-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/server-info/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/rs-system-diagnostic/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/rs-system-diagnostic/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/easy-debug-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/easy-debug-info/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/system-report-and-phpinfo/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/system-report-and-phpinfo/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/debug-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/debug-info/&lt;/a&gt;
&lt;a class="ext-link" href="https://wordpress.org/plugins/wp-system-info/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-system-info/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41877.patch attached to Ticket #41877</title>
      
        <dc:creator>viliamkopecky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:31:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41877/41877.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41877/41877.patch/1505338266095086</guid>
      <description>&lt;p&gt;
adding and using of $is_caddy global variable
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41877 (Caddy server support) created</title>
      
        <dc:creator>viliamkopecky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41877</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41877/1505338196049915</guid>
      <description>&lt;p&gt;
Caddy behaves mostly as nginx. But unknown &lt;code&gt;$_SERVER['SERVER_SOFTWARE']&lt;/code&gt; caused default permalinks options to include &lt;code&gt;index.php&lt;/code&gt;. This patch replicates global &lt;code&gt;$is_nginx&lt;/code&gt; variable to Caddy's context.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41852 (Fix UN flag test by returning the correct value.) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41852#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41852#comment:2/1505338108704918</guid>
      <description>&lt;p&gt;
I'm not really following. Could you provide some steps to replicate the issue and why it doesn't apply to the England flag?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:26:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:28/1505338006494681</guid>
      <description>&lt;p&gt;
What would IPv6 support look like, the only thing I could think of here is if you are browsing the site over IPv6 your self?
&lt;/p&gt;
&lt;p&gt;
The other three points are very valid, adding those now.
&lt;/p&gt;
&lt;p&gt;
As for expiring links, that doesn't help over time, having the copy and paste field at the top is better here when users can put information right into their support topic or whatnot without the support giver being tied in to a time limit (if you post on the forums looking for help for example, there's no guarantee someone will click your link in the next X hours for it to remain valid).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:154</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:154/1505337502785796</guid>
      <description>&lt;p&gt;
I am going to jump out on the limb and cut it right off. One of the great things about WordPress is that it is not on the cutting edge.
&lt;/p&gt;
&lt;p&gt;
You can use the same old code year after year and it still works. Sure we add new features when we can but if the old way isn't blocking a feature why not keep it around?
&lt;/p&gt;
&lt;p&gt;
Hooks have served us well for years, and can keep working for another ten years. By then maybe we will have an all new WordPress that is 100% JS or some language that is even better. Then we can write a migration script to move everything to the new system. As long as the UI is similar to what writers are used to and gets as much attention to excellence as the current UI that will be fair play. But, I digress.
&lt;/p&gt;
&lt;p&gt;
For right now, this ticket is the best solution. Maybe a year from now we will come up with an idea we like better, but then we will spend five years getting it ready and this solution will have kept us going all that time.
&lt;/p&gt;
&lt;p&gt;
Maybe part of the api will need to change and ten plugins will need to refactor, but that is better than the current state where we are having to constantly work around stuff or fork a whole file just to get something to work.
&lt;/p&gt;
&lt;p&gt;
As a nearly perfect perfectionist, this is hard for me to say, but it is time to just ship this thing.
&lt;/p&gt;
&lt;p&gt;
"Give them the third best to go on with; the second best comes too late, the best never comes."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:11:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:27/1505337101321541</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40894/40894.5.diff" title="Attachment '40894.5.diff' in Ticket #40894"&gt;40894.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40894/40894.5.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Address feedback from @aduth -
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;whitespace fixes
&lt;/li&gt;&lt;li&gt;remove unused options-&amp;gt;stats
&lt;/li&gt;&lt;li&gt; add missing trailing semicolons
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40894.5.diff attached to Ticket #40894</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 21:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40894/40894.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40894/40894.5.diff/1505336969398462</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:56:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876#comment:3/1505336183249977</guid>
      <description>&lt;p&gt;
Custom widgets :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:54:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876#comment:2/1505336051527687</guid>
      <description>&lt;p&gt;
As suggested by @afercia, this can be generalized so that when you construct &lt;code&gt;WP_Widget&lt;/code&gt; there can be an optional &lt;code&gt;help&lt;/code&gt; parameter for &lt;code&gt;control_options&lt;/code&gt; which, when supplied, would automatically be inserted into the widget control. In that way it wouldn't be something ad hoc for the Custom HTML widget alone but could be re-used by other widgets. I am not aware of other widgets that need help text, however.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:6/1505335772394335</guid>
      <description>&lt;p&gt;
or maybe just a little highlight
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>home_blog_yellow.jpg attached to Ticket #39666</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:48:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39666/home_blog_yellow.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39666/home_blog_yellow.jpg/1505335733482120</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41875 (Wordpress has some fundamental flaws in its structure) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:46:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41875#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41875#comment:1/1505335561158900</guid>
      <description>&lt;p&gt;
Can you give a list of problems to solve? This is pretty vague.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:43:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:27/1505335383887802</guid>
      <description>&lt;p&gt;
Such a page would be hugely beneficial.
&lt;/p&gt;
&lt;p&gt;
Some additional information I would love to see:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;IPv6 support
&lt;/li&gt;&lt;li&gt;active mysqli driver
&lt;/li&gt;&lt;li&gt;active drop-ins
&lt;/li&gt;&lt;li&gt;maybe permissions for the main folders?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also, I was thinking it might be better still if the page could generate an expiring link that will display this at the frontend. This would allow you to copy this link and provide it to the support rep you're talking to. If the link contains an expiring token, the security risk should be minimal.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876#comment:1/1505335300340562</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1505335298000557"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:150/1505335283811500</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41876" title="#41876: defect (bug): Add inline help to Custom HTML widget (new)"&gt;#41876&lt;/a&gt; (Add inline help to Custom HTML widget)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:40:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:6/1505335238859394</guid>
      <description>&lt;p&gt;
For adding inline help to Custom HTML widget, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41876" title="#41876: defect (bug): Add inline help to Custom HTML widget (new)"&gt;#41876&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41876 (Add inline help to Custom HTML widget) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41876</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41876/1505335205200112</guid>
      <description>&lt;p&gt;
There is no inline help in the Custom HTML widget for how to interact with the code editor. While the widget will add this to the help text on the widgets admin screen, this is not easily discoverable. Additionally, this help tab text is not displayed in the Customizer at all. Just like the Additional CSS section description in the Customizer, there could be a (?) icon in the widget, and once expanded it could reveal the same help text to guide usage of the widget. I suggest the icon could be placed in the top-right corner of the widget with the help text then appearing at the top when expanded, similar to the Customizer section description.
&lt;/p&gt;
&lt;p&gt;
See also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41872" title="#41872: defect (bug): Code Editor: Minor accessibility improvements to the CodeMirror ... (closed: fixed)"&gt;#41872&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/36"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/36&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/64"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/64&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RP4X03/p1503940071000037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RP4X03/p1503940071000037&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://wordpress.slack.com/archives/C0381N237/p1505323129000204"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C0381N237/p1505323129000204&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Builds off of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41875 (Wordpress has some fundamental flaws in its structure) created</title>
      
        <dc:creator>peterhsbi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:38:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41875</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41875/1505335115612335</guid>
      <description>&lt;p&gt;
In way I am happy that Wordpress works. Of sorts. It is a versatile piece of software. It is amazing how many things you can create with it.
&lt;/p&gt;
&lt;p&gt;
But the process of making anything more complex work in Wordpress is excrutiatingly painful.
&lt;/p&gt;
&lt;p&gt;
The concept of plugins is wonderful. But currently the plugins have full access to the browser. They need to run inside Wordpress. Wordpress would need to provide the environment for as much code as possible. It's the only chance of minimizing js and and css conflicts.
&lt;/p&gt;
&lt;p&gt;
Currently everybody can submit a plugin and the only hope of making all components work together is hoping that progammers are sticking to at least some conventions. Bottomline: it is down to luck.
&lt;/p&gt;
&lt;p&gt;
I'd love to get involved. But to be quite honest, I have tried making some contributions with another browser based software before. It didn't go anywhere. My general impression of the age of browser based software: the only thing that matters is implementing features. The more the better.
&lt;/p&gt;
&lt;p&gt;
Minimizing pain on getting things to run together is an art. But it doesn't seem to rank very highly on the list of priorities.
&lt;/p&gt;
&lt;p&gt;
I'd love to get involved. But these are not cosmetic changes. So I don't know where to start and if there's a chance of anything changing on that level in the first place.
&lt;/p&gt;
&lt;p&gt;
So. There it is.
&lt;/p&gt;
&lt;p&gt;
Thanks for listening,
Peter
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:29:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:32/1505334549397815</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38707#comment:31" title="Comment 31"&gt;mrahmadawais&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@westonruter I have added a patch that makes the info in Add CSS section look better by adding &lt;code&gt;kbd&lt;/code&gt; elements. It looks like this now.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please follow &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41872" title="#41872: defect (bug): Code Editor: Minor accessibility improvements to the CodeMirror ... (closed: fixed)"&gt;#41872&lt;/a&gt; for this as the text may get rewritten into a single paragraph. Note also the overlapping &lt;code&gt;kbd&lt;/code&gt; elements cause an undesirable darker gray line where they overlap. So the padding would need to be reduced in this element.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39681 (Add RGBA to Customizer color picker) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:21:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39681#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39681#comment:8/1505334117642842</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is not getting any traction, so punting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38900 (Customize: Add REST API endpoints for changesets) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38900#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38900#comment:15/1505334016606753</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Work on this will continue in feature plugin and be tested during the development of a planned Customizer v2 feature plugin. No need to get this merged into core before feature plugin fully utilizes it in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6531 (Recursively search for files in theme and plugin editors) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:18:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6531#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6531#comment:41/1505333935834446</guid>
      <description>&lt;p&gt;
I'm interested in tackling this for 4.9.
&lt;/p&gt;
&lt;p&gt;
I'd like to investigate using proper PHP iterator objects, and provide some custom magic so that they can transparently cache into transients/object cache.
&lt;/p&gt;
&lt;p&gt;
The main benefit is that you don't pull in all files and folders into memory just to pass them around, but rather you prepare an iterator object and pass that on. In some cases, the actual iteration will never happen as it is not needed, and in some cases you'll only end up with a partial iteration, which saves IO and memory as well.
&lt;/p&gt;
&lt;p&gt;
Once the iterators are built, they can easily be adapted to replace the above functions.
&lt;/p&gt;
&lt;p&gt;
Is there anything that would speak against such an approach?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:16:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:31/1505333819490288</guid>
      <description>&lt;p&gt;
@westonruter I have added a patch that makes the info in Add CSS section look better by adding &lt;code&gt;kbd&lt;/code&gt; elements. It looks like this now.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/HbsbQ6x.png"&gt;&lt;img src="https://i.imgur.com/HbsbQ6x.png" alt="https://i.imgur.com/HbsbQ6x.png" crossorigin="anonymous" title="https://i.imgur.com/HbsbQ6x.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38707.diff attached to Ticket #38707</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38707/38707.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38707/38707.diff/1505333691143802</guid>
      <description>&lt;p&gt;
ADD: Use KBD to show User Keyboard Input Keys
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:26/1505333331286848</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>philmcdonnell</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:07:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:5/1505333226868457</guid>
      <description>&lt;p&gt;
I like the idea, but perhaps delineate those two pages from the rest with an &amp;lt;hr&amp;gt; or something also.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41629 (Widgets: Default to "custom URL" in the image widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:06:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41629#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41629#comment:7/1505333193613779</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505333191000311"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:05:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:25/1505333147270259</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by clorith. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505333143000022"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:04:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:149/1505333072879706</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505333070000480"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24579 (Add Drag'n'Drop UI to plugin and theme manual uploaders) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24579#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24579#comment:30/1505332992707543</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:79/1505332992588625</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41078 (Detect if someone’s site is under version control, and suggest better ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41078#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41078#comment:6/1505332992493964</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31779 (Warn users before using a built-in file editor for the first time) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31779#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31779#comment:61/1505332992380422</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6531 (Recursively search for files in theme and plugin editors) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 20:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6531#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6531#comment:40/1505332992251190</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332989000198"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:4/1505332498261181</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37757 (Add `allowed_classes` to `maybe_unserialize` When WordPress is running ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37757#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37757#comment:8/1505332447704113</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37757#comment:5" title="Comment 5"&gt;seuser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
added specific documentation to the docblocks - will that automatically get picked up by the documentation pages?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, developer.wordpress.org/reference is built automatically from the inline docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39666 (Put front page on top of "All pages" list) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:52:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39666#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39666#comment:3/1505332350868534</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by presskopp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505332348000647"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40921 (Inconsistent Handling of mp4 by Audio Widget) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40921#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40921#comment:18/1505331459236823</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24776 (Need Filter Hooks on Creating Slug - Check Availability of Slug if ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:35:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24776#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24776#comment:4/1505331329470443</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by onetarek. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505331327000134"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40921 (Inconsistent Handling of mp4 by Audio Widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:35:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40921#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40921#comment:17/1505331303271104</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by toddhalfpenny. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505331300000385"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40931 (Warning: Division by zero in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40931#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40931#comment:6/1505331253019738</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505331250000218"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:31:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:24/1505331094016964</guid>
      <description>&lt;p&gt;
Excellent feedback there.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Table headers I'm not super fond of, since the data is very varied in a listing such as this.
&lt;/li&gt;&lt;li&gt;Multisite already does add a new table if enabled :)
&lt;/li&gt;&lt;li&gt;Closing the copy-field again was left out to avoid having multiple actionable items at once (much like WooCommerce does it as well)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/39165.5.patch" title="Attachment '39165.5.patch' in Ticket #39165"&gt;39165.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/39165.5.patch" title="Download"&gt;​&lt;/a&gt; addresses the changes I am on board with:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Striped tables are a must for distinguishing rows, that's going right in there.
&lt;/li&gt;&lt;li&gt;I agree that &lt;code&gt;Undefined&lt;/code&gt; sounds better, so replacing those strings.
&lt;/li&gt;&lt;li&gt;I also like your inclusion here of a ToC like quick-link bar along the top, I was a bit skeptical at first but they actually seem rather useful and your concept image really helped nail that down.
&lt;/li&gt;&lt;li&gt;Back to top links, if a ToC is added there will definitely need to be one of those to help with navigation.
&lt;/li&gt;&lt;li&gt;Moved the memory limit field, it was shown in the &lt;code&gt;WordPress&lt;/code&gt; section still
&lt;/li&gt;&lt;li&gt;The &lt;code&gt;TEMPLATEPATH&lt;/code&gt; constant we can use the function for instead, as it's filterable it makes sense, but   &lt;code&gt;WP_PLUGIN_DIR&lt;/code&gt; doesn't have a similarly associated function (unless I'm missing something)
&lt;/li&gt;&lt;li&gt;Active theme should be filtered out from the general list of available themes, I agree, good catch.
&lt;/li&gt;&lt;li&gt;I've added a little section outlining that some information may not be included in the copy-field as it is considered private and should not be posted on public forums, but I'm not the best at using my words. It has the string &lt;code&gt;Some information may be filtered out from the list you are about to copy, this is information we consider private, and is not meant to be shared in a public forum&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39165.5.patch attached to Ticket #39165</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/39165.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/39165.5.patch/1505330891618694</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41828 (Customizer: Rename "Static Front Page" to "Homepage Settings") updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Wed, 13 Sep 2017 19:20:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41828#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41828#comment:18/1505330440418240</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41828#comment:7" title="Comment 7"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41828#comment:6" title="Comment 6"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Current sites with a made up word doesn't mean much. There are a lot of sites with misspellings and bad grammar and made up words. Why promote it?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because people recognize it. Would still like input from a copy editor, though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can put on my old copy editor hat for a moment. :)
&lt;/p&gt;
&lt;p&gt;
I'd lean toward "home page" simply because it'd be clear to both people new to the Web and those familiar with the lingo.  If for no other reason than this clarity, I'd use two words.
&lt;/p&gt;
&lt;p&gt;
While "homepage" has been in use for many years, it'd probably look like a misspelling (thus, unprofessional) to many.
&lt;/p&gt;
&lt;p&gt;
I don't have an updated copy of The AP Stylebook on hand. I'm guessing it'd push for "home page."  However, the stylebook tends to change with usage and never sets anything in stone.
&lt;/p&gt;
&lt;p&gt;
If I were editing for a tech magazine, I'd allow for "homepage."  For a general newspaper, I'd go with "home page."
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
FWIW, it wouldn't hurt for core WP to adopt a particular stylebook or create its own.  It'd help with these types of discussions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:5/1505328733755016</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
and label additions
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Worth noting the label for the Custom HTML widget is not an addition :) actually, in 4.8 there's a label and it was removed in the CodeMirror patch, which is an a11y regression.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40187 (The tag cloud should output a list) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:49:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40187#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40187#comment:19/1505328543240091</guid>
      <description>&lt;p&gt;
@SergeyBiryukov okay, i'm working on another patch but I think parts of 40187.diff can be easily reused on most used tags as well. Let's try.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:4/1505328310296250</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
accessing &lt;code&gt;control.editor.codemirror.display.lineDiv&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, good to know, thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:37:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:153</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:153/1505327838463679</guid>
      <description>&lt;p&gt;
To get right to the point, I have to mostly agree with @pento here - I don't think it's quite the right moment in time for this.
&lt;/p&gt;
&lt;p&gt;
5 years ago, I think this would've been a great addition to the state of Javascript in WordPress - taking a concept WordPress developers were familiar with and providing a similar mechanism for the jumbled random pieces of Javascript inserted by all sorts of things, and actually getting it to all work together cohesively.
But it's not 5 years ago, it's now 2017 and WordPress is behind the curve on modern Javascript adoption, we're playing catch up and we need to be looking at what will be useful over the coming 10 years, and not just what has proved reliable in the past.
&lt;/p&gt;
&lt;p&gt;
The good news is that I don't think this patch/approach is incorrect or bad at all - Hooks &amp;amp; filters have certainly proved to be reliable in PHP, I just don't want us to run forward into adopting something which is based on historical JS usage in WordPress rather than future JS usage.
I'd want to see something using a modern library (Be that React, Vue, Angular, Whatever) using this pattern before we add it as-is to WordPress, if it proves to be useful in that context then I'd be all for this, but only after a reasonably complex application had tried it.
Gutenberg is the current obvious choice and if using it in Gutenberg didn't show up some shortcomings of the API as-is I'd be extremely surprised.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:3/1505327800060705</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@afercia the code changes look good, other than the jQuery for obtaining &lt;code&gt;.CodeMirror-code&lt;/code&gt;. This can be simplified by just accessing &lt;code&gt;editor.codemirror.display.lineDiv&lt;/code&gt;. Done in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff" title="Attachment '41872.2.diff' in Ticket #41872"&gt;41872.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Otherwise, for the text changes and label additions, I'll defer to @melchoyce, @michelleweber, and @mizejewski.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:34:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:2/1505327671809415</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Visual changes introduced in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff" title="Attachment '41872.diff' in Ticket #41872"&gt;41872.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/pB1BYCoY2d.png"&gt;&lt;img src="https://cldup.com/pB1BYCoY2d.png" alt="https://cldup.com/pB1BYCoY2d.png" crossorigin="anonymous" title="https://cldup.com/pB1BYCoY2d.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/GUoRBtLqSo.png"&gt;&lt;img src="https://cldup.com/GUoRBtLqSo.png" alt="https://cldup.com/GUoRBtLqSo.png" crossorigin="anonymous" title="https://cldup.com/GUoRBtLqSo.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/b45nB46t8V.png"&gt;&lt;img src="https://cldup.com/b45nB46t8V.png" alt="https://cldup.com/b45nB46t8V.png" crossorigin="anonymous" title="https://cldup.com/b45nB46t8V.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40187 (The tag cloud should output a list) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:33:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40187#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40187#comment:18/1505327598356233</guid>
      <description>&lt;p&gt;
@audrasjb Thanks for the patch! Sorry it took a few weeks to get back to you.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40187/40187.diff" title="Attachment '40187.diff' in Ticket #40187"&gt;40187.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40187/40187.diff" title="Download"&gt;​&lt;/a&gt; replaces the &lt;code&gt;.tagchecklist&lt;/code&gt; div for adding tags to a post with a list, but that's not what this ticket is about.
&lt;/p&gt;
&lt;p&gt;
As far as I can tell, the ticket is about the tag cloud that appears when clicking the &lt;code&gt;Choose from the most used tags&lt;/code&gt; link in the same meta box. With the patch, the tag cloud still outputs standalone &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags instead of a list.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41872.2.diff attached to Ticket #41872</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41872/41872.2.diff/1505327532400940</guid>
      <description>&lt;p&gt;
Use editor.codemirror.display.lineDiv for obtaining .CodeMirror-code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>41872.diff attached to Ticket #41872</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff/1505327187199577</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:24:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872#comment:1/1505327073161528</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41872/41872.diff" title="Attachment '41872.diff' in Ticket #41872"&gt;41872.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41872/41872.diff" title="Download"&gt;​&lt;/a&gt; is a first pass to try to address the points above.
&lt;/p&gt;
&lt;p&gt;
Also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;in the Customizer, all the "help-toggle" buttons are now buttons with a &lt;code&gt;type="button"&lt;/code&gt; attribute, so there's no need to prevent the default action, use a keydown event, and filter the keys. They just need a click event
&lt;/li&gt;&lt;li&gt;prevents a focus loss when closing the Additional CSS help
&lt;/li&gt;&lt;li&gt;in the Plugin editor page: changes a &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; element to &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; for consistency with the Theme editor page
&lt;/li&gt;&lt;li&gt;removes some translation domain leftovers ('better-code-editing')
&lt;/li&gt;&lt;li&gt;changes the Help text list to a paragraph with an ID so it can be targeted by &lt;code&gt;aria-describedby&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;standardises the Help text wherever it is used, see new text below: suggestions for better wording welcome
&lt;/li&gt;&lt;li&gt;fixes a typo "plan text mode" to "plain text mode"
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
About the new Help text, I'd say it's important that is always the same everywhere to avoid confusion for users and make translators happy. New text:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
When using a keyboard: In the editing area the Tab key enters a tab character. To move away from this area by pressing Tab, press the Esc key followed by the Tab key. Screen reader users: you may need to press the Esc key twice to exit forms mode and then to allow the Tab key to move away from the editing area.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@westonruter I'd greatly appreciate your feedback and review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41870 (Code Editor: Add grunt task for building new CodeMirror bundles from ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41870#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41870#comment:2/1505326896343692</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:148</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:148/1505326716976327</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12423#comment:145" title="Comment 145"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;I'm aware that it would be ideal if the CodeMirror bundling logic (via browserify) could be added as part of core. For now, just the minified bundles are being included.
&lt;/li&gt;&lt;li&gt;The linters are being included as separate assets. They are not being minified, other than they are already minified as distributed. These could either benefit from additional uglification or bundling with codemirror if they are not going to be enqueued separately.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41870" title="#41870: task (blessed): Code Editor: Add grunt task for building new CodeMirror bundles from ... (assigned)"&gt;#41870&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;PHPUnit tests should be added for &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; and &lt;code&gt;WP_Widget_Custom_HTML&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41871" title="#41871: defect (bug): Code Editor: Add unit tests (closed: fixed)"&gt;#41871&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;There is no PHP linter yet. This would be a good enhancement. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41873" title="#41873: enhancement: Code Editor: Add PHP linter (new)"&gt;#41873&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;While there is an HTMLHint rule which checks for Kses violations, this does not extend to CSSLint and &lt;code&gt;safecss_filter_attr()&lt;/code&gt;. It would be a nice enhancement to get illegal style properties flagged as lint errors as well. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/60"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/60&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/41874" title="#41874: enhancement: Code Editor: Extend CSS linter to check for safecss-forbidden properties (new)"&gt;#41874&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41874 (Code Editor: Extend CSS linter to check for safecss-forbidden properties) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41874</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41874/1505326686895525</guid>
      <description>&lt;p&gt;
While there is a custom HTMLHint rule which checks for Kses violations, this does not extend to CSSLint and &lt;code&gt;safecss_filter_attr()&lt;/code&gt;. It would be a nice enhancement to get illegal style properties flagged as lint errors as well.
&lt;/p&gt;
&lt;p&gt;
Originally &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/60"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/60&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The &lt;code&gt;safecss_filter_attr()&lt;/code&gt; function is used by KSES to filter HTML &lt;code&gt;style&lt;/code&gt; attributes, removing any properties that are illegal. This should be applied to CSS and &lt;code&gt;style&lt;/code&gt; attributes in HTML, so that any illegal properties are flagged as such.
&lt;/p&gt;
&lt;p&gt;
It seems that HTMLHint is not currently applying CSSLint to &lt;code&gt;style&lt;/code&gt; attributes, but if it did, then a &lt;code&gt;kses&lt;/code&gt; rule added to CSSLint could then apply to both HTML and CSS.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is for the code editor introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41873 (Code Editor: Add PHP linter) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41873</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41873/1505326518717150</guid>
      <description>&lt;p&gt;
There is no PHP linter yet when editing PHP in the code editor (powered by CodeMirror, from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;). This would be a good enhancement, PHP syntax errors are the most critical thing to catch prior to saving in order to prevent whitescreening a site. Currently there are linters only for HTML, JS, CSS, and JSON.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48#issuecomment-327963921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48#issuecomment-327963921&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Props to @rheinardkorf for finding &lt;a class="ext-link" href="http://glayzzle.com/php-parser/#demo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://glayzzle.com/php-parser/#demo&lt;/a&gt; !!
&lt;/p&gt;
&lt;p&gt;
On GitHub: &lt;a class="ext-link" href="https://github.com/glayzzle/php-parser"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/glayzzle/php-parser&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I had previously stumbled across the &lt;a class="ext-link" href="https://github.com/glayzzle/php-linter"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/glayzzle/php-linter&lt;/a&gt; project but it is empty. I didn't see the other project.
&lt;/p&gt;
&lt;p&gt;
This holds great promise. The only icing on the cake here would be if the parser could be told which PHP version to use, but we could get a list of language features that are added after PHP 5.2 and mark them as errors when the version of PHP on the server is not new enough. Amazing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See more background on the original GitHub issue: &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41872 (Code Editor: Minor accessibility improvements to the CodeMirror ...) created</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41872</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41872/1505326340434123</guid>
      <description>&lt;p&gt;
The CodeMirror-powered code editor areas recently introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; can be improved a bit with some minor accessibility enhancements.
&lt;/p&gt;
&lt;p&gt;
First of all, the CodeMirror editing area needs a proper ARIA role and &lt;code&gt;aria-multiline&lt;/code&gt; attribute to be exposed to assistive technologies as equivalent to a native HTML textarea. This was mentioned in the original ticket, see &lt;a href="https://core.trac.wordpress.org/ticket/12423#comment:49"&gt;https://core.trac.wordpress.org/ticket/12423#comment:49&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Further improvements:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;all the editing areas need to be labeled, whether using a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element, an &lt;code&gt;aria-label&lt;/code&gt;, or an &lt;code&gt;aria-labelledby&lt;/code&gt; attribute.
&lt;/li&gt;&lt;li&gt;all the underlying textarea elements need to be labeled, this is particularly important when CodeMirror is disabled in the user profile and the textarea are actually used
&lt;/li&gt;&lt;li&gt;worth noting the Custom HTML widget used to have a "Content:" label that was removed, it should be restored also for consistency with all the other widgets
&lt;/li&gt;&lt;li&gt;the Additional CSS textarea in the Customizer needs a label
&lt;/li&gt;&lt;li&gt;the Plugin and Theme editors miss a label since forever (I guess), this is a good opportunity to add it
&lt;/li&gt;&lt;li&gt;the help text with instructions to escape from the keyboard trap related to the Tab key needs to be consistently used as target for &lt;code&gt;aria-describedby&lt;/code&gt; on both the textarea elements and the CodeMirror editing areas
&lt;/li&gt;&lt;li&gt;this is a nice opportunity to improve the help text and make it consistent, users and translators will be happy
&lt;/li&gt;&lt;li&gt;the Additional CSS help toggle and panel &lt;code&gt;aria-expanded&lt;/code&gt; attribute needs to be fixed, see &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/89"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/89&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37629 (is_sticky filter hook) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:11:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37629#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37629#comment:2/1505326307543764</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37629#comment:1" title="Comment 1"&gt;tdmalone&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
How about the &lt;code&gt;pre_option_sticky_posts&lt;/code&gt; filter?
&lt;/p&gt;
&lt;p&gt;
There are other dynamic filters available in &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_option/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`get_option()`&lt;/a&gt; as well, which &lt;code&gt;is_sticky()&lt;/code&gt; calls.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By running a filter on that hook, you're filtering an option that's storing sticky posts of the &lt;code&gt;post&lt;/code&gt; post type, not the result of the &lt;code&gt;is_sticky()&lt;/code&gt; function.  There's potential for some unintended consequences here when other code is calling &lt;code&gt;get_option( 'sticky_posts' )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
While the option and the conditional are related by default, this is not necessarily true with custom sticky post implementations.  Sticky posts can be stored in a variety of ways.  A filter hook for the conditional function makes more sense in those scenarios.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41871 (Code Editor: Add unit tests) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41871</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41871/1505326232783264</guid>
      <description>&lt;p&gt;
PHPUnit tests should be added for &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; and &lt;code&gt;WP_Widget_Custom_HTML&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:26/1505326086175198</guid>
      <description>&lt;p&gt;
A follow-up ticket to build on the work being done here: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41870" title="#41870: task (blessed): Code Editor: Add grunt task for building new CodeMirror bundles from ... (assigned)"&gt;#41870&lt;/a&gt; (Code Editor: Add grunt task for building new CodeMirror bundles from external dependencies)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41870 (Code Editor: Add grunt task for building new CodeMirror bundles from ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:07:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41870#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41870#comment:1/1505326028012356</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41870 (Code Editor: Add grunt task for building new CodeMirror bundles from ...) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 18:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41870</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41870/1505325968556241</guid>
      <description>&lt;p&gt;
After &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;[41376]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, it would be ideal if the CodeMirror bundling logic (via browserify) could be added as part of core. In this way, the external dependencies (CodeMirror and the linter linraries) can be managed by NPM. For now, just the minified bundles are being included.
&lt;/p&gt;
&lt;p&gt;
The logic used in the Better Code Editing plugin for creating the bundles can be seen here: &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/pull/92/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/pull/92/files&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Depends on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40894" title="#40894: task (blessed): Use Webpack instead of Browserify for build process (closed: fixed)"&gt;#40894&lt;/a&gt; which replaces Browserify with Webpack in core.
&lt;/p&gt;
&lt;p&gt;
See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42424" title="#42424: defect (bug): Codemirror: Unify line endings in csslint.js (closed: fixed)"&gt;#42424&lt;/a&gt;, where we need to fix line-endings for CSSLint.
&lt;/p&gt;
&lt;p&gt;
Additionally, the linters are currently being included as separate assets. They are not being minified, other than they are already minified as distributed. These could either benefit from additional uglification or bundling with codemirror if they are not going to be enqueued separately. The same goes for the &lt;code&gt;htmlhint-kses&lt;/code&gt; script.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41866 (REST API throws error when displaying an unlimited number of posts in ...) closed</title>
      
        <dc:creator>JPry</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41866#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41866#comment:1/1505325087451371</guid>
      <description>invalid: &lt;p&gt;
Hi @dpsjfveloso1,
&lt;/p&gt;
&lt;p&gt;
Thanks for taking the time to make this report, and welcome to Trac! This particular behavior is by design. As described in &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/issues/2759#issuecomment-251809005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this comment&lt;/a&gt; from the WP-API GitHub repo, querying for all posts should be done via iteration, rather than a single massive query.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:25/1505324976424671</guid>
      <description>&lt;p&gt;
@aduth
&lt;/p&gt;
&lt;p&gt;
Thanks for the review, feedback and questions.
&lt;/p&gt;
&lt;p&gt;
I don't think we need to add minification here, we already handle that in our main build process which we run to package releases. For development, the unminified version is preferable and this approach fits nicely with our existing build tool chain.
&lt;/p&gt;
&lt;p&gt;
One additional use I imagine for webpack is importing/building our &lt;a class="ext-link" href="https://www.npmjs.com/org/wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;npm packages&lt;/a&gt; in the wp namespace for inclusion in core.
&lt;/p&gt;
&lt;p&gt;
Regarding splitting the configuration files, I had originally tried a single file and split it up based on &lt;a href="https://core.trac.wordpress.org/ticket/40894#comment:17"&gt;this comment&lt;/a&gt; and thinking it may help optimize the production/dev builds down the road.
&lt;/p&gt;
&lt;p&gt;
I will try to clean up the configs, removing stats and maybe moving watch:true as well as fixing your other noted format items.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What does this configuration look like when it scales to accommodate building both media and Gutenberg?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats a great question we need to figure out the answer to - hopefully we can port over much of what exists in the project. Having webpack in our core toolset will be a prerequisite.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34115 (oEmbed not working on author page without posts) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:47:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34115#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34115#comment:36/1505324864983882</guid>
      <description>&lt;p&gt;
Good progress by @swissspidy on a patch. Anyone, please review: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/254/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/254/files&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41857 (Walker_PageDropdown doesn't set correct selected value when using ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 17:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41857#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41857#comment:4/1505323035409696</guid>
      <description>&lt;p&gt;
Thanks for the example.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What do you think?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it's a cool idea, worth exploring ;-)
&lt;/p&gt;
&lt;p&gt;
But with this callback power, comes a great responsibility, like being sure that it's an injective map ;-)
&lt;/p&gt;
&lt;p&gt;
Alternative (smaller step) approach, would be to add a support for a &lt;code&gt;post_name&lt;/code&gt; selection.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 16:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869#comment:2/1505318733467032</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 16:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868#comment:2/1505318709881628</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30829 (I want to add the list table views in edit-tags.php) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 15:19:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30829#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30829#comment:12/1505315943058172</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41378" title="Taxonomy: Allow for adding custom list table views to taxonomy ..."&gt;41378&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Allow for adding custom list table views to taxonomy screens.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props eventualo, mariovalney, riddhiehta02, llemurya.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30829" title="#30829: enhancement: I want to add the list table views in edit-tags.php (closed: fixed)"&gt;#30829&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41378]: Taxonomy: Allow for adding custom list table views to taxonomy ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 15:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41378/1505315942556877</guid>
      <description>&lt;p&gt;
Taxonomy: Allow for adding custom list table views to taxonomy screens.
&lt;/p&gt;
&lt;p&gt;
Props eventualo, mariovalney, riddhiehta02, llemurya.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30829" title="#30829: enhancement: I want to add the list table views in edit-tags.php (closed: fixed)"&gt;#30829&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>firebird75</dc:creator>

      <pubDate>Wed, 13 Sep 2017 15:05:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:2/1505315120481638</guid>
      <description>&lt;p&gt;
Wow, what a great and fast reply!!!
&lt;/p&gt;
&lt;p&gt;
The query you are showing up is the second one. There is one before that. You won't be able to see it with the last_query. You need to install a plugin like blackbox to see all the queries and so the one throwing the error.
&lt;/p&gt;
&lt;p&gt;
Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41851 (Avoid more test skipping for situations that are actually errors or ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:54:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41851#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41851#comment:2/1505314476699170</guid>
      <description>&lt;p&gt;
@johnbillion The changes to &lt;code&gt;Tests_Image_Meta&lt;/code&gt; seem too strong to me. WordPress can run in environments without the &lt;code&gt;gd&lt;/code&gt; or &lt;code&gt;exif&lt;/code&gt; extensions. If we want the tests to be portable - especially for cases where hosts want to run them in their own environments - then we should not make them fail because of non-essential PHP modules. (That's what &lt;code&gt;phpunit --strict&lt;/code&gt; is for.)
&lt;/p&gt;
&lt;p&gt;
If, on the other hand, we're going to decide that we want the tests to be maximally broad, and thus to have system requirements more stringent than WordPress itself, we should establish this as policy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:47:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:7/1505314028081906</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41377" title="Taxonomy: Force a `DISTINCT` term query when result count matters.
 ..."&gt;41377&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Taxonomy: Force a &lt;code&gt;DISTINCT&lt;/code&gt; term query when result count matters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Generally, duplicate terms returned by a term query are eliminated in PHP,&lt;br /&gt;
after the database query takes place. This technique doesn't work properly&lt;br /&gt;
when the query parameters specify the &lt;code&gt;number&lt;/code&gt; of results, since the results&lt;br /&gt;
of a &lt;code&gt;SELECT ... LIMIT x...&lt;/code&gt; query may be deduplicated to a count less than&lt;br /&gt;
&lt;code&gt;x&lt;/code&gt;. In these cases, we force the original query to be &lt;code&gt;DISTINCT&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props elvishp2006.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41796" title="#41796: defect (bug): WP_Term_Query problem using object_ids and number attributes (closed: fixed)"&gt;#41796&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41377]: Taxonomy: Force a `DISTINCT` term query when result count matters.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41377/1505314027603266</guid>
      <description>&lt;p&gt;
Taxonomy: Force a &lt;code&gt;DISTINCT&lt;/code&gt; term query when result count matters.
&lt;/p&gt;
&lt;p&gt;
Generally, duplicate terms returned by a term query are eliminated in PHP,
after the database query takes place. This technique doesn't work properly
when the query parameters specify the &lt;code&gt;number&lt;/code&gt; of results, since the results
of a &lt;code&gt;SELECT ... LIMIT x...&lt;/code&gt; query may be deduplicated to a count less than
&lt;code&gt;x&lt;/code&gt;. In these cases, we force the original query to be &lt;code&gt;DISTINCT&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props elvishp2006.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41796" title="#41796: defect (bug): WP_Term_Query problem using object_ids and number attributes (closed: fixed)"&gt;#41796&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869#comment:1/1505313121193088</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868#comment:1/1505313097361341</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41869.patch attached to Ticket #41869</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41869/41869.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41869/41869.patch/1505313028762811</guid>
      <description>&lt;p&gt;
Add static keyword in functions descriptions and add missing functions descriptions.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41869 (Documentations was not proper.) created</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:28:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41869</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41869/1505312907610580</guid>
      <description>&lt;p&gt;
Add static keyword and add functions Descriptions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36325 (Move #wpadminbar above #page) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:25:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36325#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36325#comment:6/1505312741104493</guid>
      <description>wontfix: &lt;p&gt;
As noted above, it should be possible to adjust the styling as needed without changing the current markup.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40931 (Warning: Division by zero in ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:22:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40931#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40931#comment:5/1505312574532033</guid>
      <description>&lt;p&gt;
The warning is displayed when the post has a featured image with corrupted metadata: the image has a particular size, but its &lt;code&gt;height&lt;/code&gt; attribute is empty.
&lt;/p&gt;
&lt;p&gt;
I have no objections to checking the value to avoid the warning, but it would be nice to find out what causes the metadata to become corrupted like that, as it could cause other issues elsewhere.
&lt;/p&gt;
&lt;p&gt;
@aegis123, @Abigailm: Were you able to identify any pattern in the affected posts? What kind of a featured image (format, size) they have?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41823 (Text on web site during update of plugins and at login page is always ...) updated</title>
      
        <dc:creator>dragy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:03:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41823#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41823#comment:10/1505311389378210</guid>
      <description>&lt;p&gt;
Sergey is gone, anyone else ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41868.patch attached to Ticket #41868</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41868/41868.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41868/41868.patch/1505311355566119</guid>
      <description>&lt;p&gt;
documentations improve
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41868 (Documentations was not proper.) created</title>
      
        <dc:creator>adnan.limdi</dc:creator>

      <pubDate>Wed, 13 Sep 2017 14:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41868</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41868/1505311262729053</guid>
      <description>&lt;p&gt;
dot missing in documentation
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:152</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:152/1505310080245166</guid>
      <description>&lt;p&gt;
@flixos90 Thanks for bringing up async support. We discussed this &lt;a class="ext-link" href="https://github.com/WordPress/packages/pull/13#issuecomment-319958109"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;briefly on the PR&lt;/a&gt; and decided it was out of scope for 1.0.0 of wp.hooks. I would love to explore in a future version. One possible approach to explore for async with the current implementation for developers is to run a hook before the async action, and run another once the async action completed. Another option would be to return a promise from the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:35:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:151</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:151/1505309740009995</guid>
      <description>&lt;p&gt;
@pento I respectfully disagree with your conclusion here. As a note, I committed this code after careful discussion and several public comments affirming the commit by &lt;em&gt;WordPress Lead developer @azaozz&lt;/em&gt; as well as feedback and contributions from some of core's most experienced JavaScript contributors.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unfortunately, this was committed with a blocker not being addressed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;em&gt;Your blocker seems contrived&lt;/em&gt;: we can't add a library to core until it is already used?  Just last week, our project leader @matt was telling us to have &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1504729788000192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;more iteration happening in trunk&lt;/a&gt;. Having this in trunk means we can build off it, using it in core itself and we have plans to do just that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Even not considering modern practices, wp.hooks has no usage in Core, some parts of Core's legacy JS should be making use of it when it's committed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What? We can't add usage in core until hooks is in core. And indeed, now that it is in core, the plan is to move forward by adding extensibility to core JavaScript via &lt;code&gt;wp.hooks&lt;/code&gt;. For example, one common need extending the media modal and &lt;code&gt;wp.hooks&lt;/code&gt; would be perfect to add &lt;a href="https://core.trac.wordpress.org/ticket/40427#comment:5"&gt;these capabilities&lt;/a&gt; we are discussing on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40427" title="#40427: enhancement: Expose a JavaScript API to extend the Media Manager (new)"&gt;#40427&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For example, I recently worked to help introduce the image widget to core. &lt;a class="ext-link" href="https://github.com/xwp/wp-core-media-widgets/pull/46/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;In this PR&lt;/a&gt;, you can see the (huge amount of) code  needed to the get the 'Insert Media' button working (all we wanted was to remove the add gallery/playlist options). &lt;strong&gt;Having filters in place in wp.media would &lt;em&gt;greatly&lt;/em&gt; simplify these types of customizations.&lt;/strong&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
it's not necessarily the way forward, and making it the "WordPress way" limits our options.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I disagree. Sure, it may not be the way forward with Gutenberg for example, why does that limit our options? We have needed a way to provide more JS extensibility for 5+ years, and &lt;code&gt;wp.hooks&lt;/code&gt; addresses that need. I haven't heard a final extensibility approach articulated by Gutenberg (or Calypso for that matter), and whatever they choose may not be applicable to our 35k lines of legacy JavaScript and Backbone code.
&lt;/p&gt;
&lt;p&gt;
It seems like &lt;em&gt;you are afraid to include hooks because it may lock us into something outdated&lt;/em&gt;. Please consider that this is a proven, well tested library that will let us make our existing JS more extensible. Sure - it may not work for our future needs - that shouldn't stop it from solving our current needs with a proven approach. Also, it is a tiny library that hasn't changed much in years, so the maintenance burden will be small.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once the modern practices are settled, backport to work with legacy JS. Add it into some of Core's legacy JS, so we get practical usage there, too.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is fanciful. We don't know what these practices will be or whether they will even work with our legacy JavaScript.  Why are we discarding a proven approach we know we can use now for some imaginary approach that may arrive at some time in the future? Many smart people worked very hard on this library and getting in core for good reason - they want to use it in their development work. It seems like you are saying we should not add it to core because its not yet used or because some new approach may work better. This hinders our progress in core JavaScript instead of forwarding it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If we haven't already, have a better way of importing modules into Core. Committing the webpack-ed version of the module to the SVN repo is unsustainable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree. We are planning to include this from npm directly once its published, as part of our build process once we switch to webpack from browserify we will have what we need (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/40894" title="#40894: task (blessed): Use Webpack instead of Browserify for build process (closed: fixed)"&gt;#40894&lt;/a&gt;). This can still happen in 4.9.
&lt;/p&gt;
&lt;p&gt;
I would be interested to hear more feedback from @azaozz or other lead developers, as well as from members of the Gutenberg team such as @aduth or @jnylen0. Does &lt;code&gt;wp.hooks&lt;/code&gt; seem like something that would be genuinely useful for WordPress core and plugin/theme developers or in your project? Are you working on a new approach to extensibility that will be applicable to core that we should be waiting for? Also, @westonruter have you looked at wp.hooks, is it something you think would be useful in making the &lt;em&gt;Customizer more extensible?&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41865 (Have not received response at Hackerone) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:31:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41865#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41865#comment:2/1505309501844819</guid>
      <description>&lt;p&gt;
Hey @zhk,
&lt;/p&gt;
&lt;p&gt;
I appreciate your help in keeping WordPress secure. I looked at the HackerOne report and, while you're right that it hasn't had a response in five days, there had been responses from people on our team eight days ago. It is being looked at.
&lt;/p&gt;
&lt;p&gt;
However, the WordPress core Trac is not the place to get updates on HackerOne reports. Security issues shouldn't be discussed or referenced in public places until they have been resolved and disclosed. Please keep the questions, even ones for updates, on the HackerOne report. Each comment you make there is piped into our security slack channel and gets in front of the eyes of our whole team.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Aaron
WordPress Security Team Lead
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41865 (Have not received response at Hackerone) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:23:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41865#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41865#comment:1/1505309020164207</guid>
      <description>invalid: &lt;p&gt;
Hi @zhk, thank you for the report! It's being looked into, the security team will reply when they have a chance.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41823 (Text on web site during update of plugins and at login page is always ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:17:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41823#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41823#comment:9/1505308635571297</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41823#comment:8" title="Comment 8"&gt;dragy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
actually I see this message in english even on clean installation of wordpress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which locale are you using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38922 (Use REST API for ajax tag search) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38922#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38922#comment:26/1505308616549304</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1505308614000579"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41823 (Text on web site during update of plugins and at login page is always ...) reopened</title>
      
        <dc:creator>dragy</dc:creator>

      <pubDate>Wed, 13 Sep 2017 13:09:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41823#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41823#comment:8/1505308191073122</guid>
      <description>&lt;p&gt;
actually I see this message in english even on clean installation of wordpress, who can look at this with me on slack?
&lt;/p&gt;
&lt;p&gt;
thanks
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 13 Sep 2017 12:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867#comment:1/1505307422763147</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I created a custom post type (movie) and custom taxonomy (genre, associated with movie). The taxonomy has only one term "Comedy" and it has no parent.
&lt;/p&gt;
&lt;p&gt;
I also have a post under movie which where I have associated the only taxonomy term.
&lt;/p&gt;
&lt;p&gt;
Here is my code:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'taxonomy'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'movies_taxonomy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'depth'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'exclude'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'echo'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'hierarchical'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'hide_empty'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'show_count'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'title_li'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;wp_list_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$wpdb&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;last_query&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
As expected &lt;code&gt;wp_list_categories($args)&lt;/code&gt; does not come up with any taxonomy item since I have only one (ID = 16) and that has been excluded in the query.
&lt;/p&gt;
&lt;p&gt;
And here is the output of &lt;code&gt;$wpdb-&amp;gt;last_query&lt;/code&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT t.*, tt.* FROM wp_terms AS t INNER JOIN wp_term_taxonomy AS tt ON t.term_id = tt.term_id WHERE tt.taxonomy IN ('genre') AND t.term_id NOT IN (16) ORDER BY t.name ASC, which is different from yours.
&lt;/pre&gt;&lt;p&gt;
Can you please tell me the steps to reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:33:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:30/1505302415865507</guid>
      <description>&lt;p&gt;
@grapplerulrich the fact that one language did not do it in this case is not grounds for not including the ability to change word order. Remember, with translations, you're preparing the code so it can be translated into ANY of the languages, even ones you don't even know about.
&lt;/p&gt;
&lt;p&gt;
I'd highly recommend you include numbered placeholders so the order can be moved around.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41155 (WordPress 4.8 Admin Sidebar Sub Menu Navigation Issue) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41155#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41155#comment:8/1505301776491530</guid>
      <description>&lt;p&gt;
Thank you for the patch! I tested it (on 4.8.1) and it is working perfectly.
Also big thanks to @codexdemon for pointing out the issue!
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41155#comment:6" title="Comment 6"&gt;chintanmachhi207&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt; &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/41155" title="#41155: defect (bug): WordPress 4.8 Admin Sidebar Sub Menu Navigation Issue (assigned)"&gt;#41155&lt;/a&gt;.3 added to fixed this issue. &lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:150</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:150/1505301032819690</guid>
      <description>&lt;p&gt;
I'd also like to throw in another suggestion (which might be out of scope for the initial set of functions, but is worth considering IMO):
&lt;/p&gt;
&lt;p&gt;
Due to a lot of processes in JS being asynchronous, I've been thinking about asynchronous hooks. The currently suggested API monitors pretty much how the API works in PHP, however there may be cases in JS where none of these functions work, such as the following:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Imagine there's a JS filter for some data.
&lt;/li&gt;&lt;li&gt;Someone wants to use that filter and override that data with content from an AJAX call, like to the WP REST API.
&lt;/li&gt;&lt;li&gt;This is currently not possible since the AJAX call is asynchronous while the filter is synchronous and expects an immediate result.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A possible approach to make something like the above work would be something like &lt;code&gt;doActionAsync( 'hook', callback, arg1, arg2, moreArgs, finalArg )&lt;/code&gt;, where &lt;code&gt;callback&lt;/code&gt; is the callback that should fire after all hooks attached to the action have been fired (should always be parameter-less). Internally, &lt;code&gt;doActionAsync()&lt;/code&gt; would work like this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If no hooks are attached, immediately call the callback.
&lt;/li&gt;&lt;li&gt;Otherwise call the first hook and pass a callback to it which will call the next hook (the attached hook would be responsible for calling the callback after it has been completed).
&lt;/li&gt;&lt;li&gt;If there is no more next hook, all attached hooks have been run and the original callback passed to &lt;code&gt;doActionAsync()&lt;/code&gt; would be called to proceed with the original logic.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Note that the above approach basically waits for each hook's completion until calling the next one. An alternative approach could be to call all hooks immediately and only wait more generally until every one has completed until calling the original callback.
&lt;/p&gt;
&lt;p&gt;
There could also be a &lt;code&gt;applyFiltersAsync( 'hook', callback, content, arg1, arg2, moreArgs, finalArg )&lt;/code&gt; which would work almost the same like the above, with the exception that the &lt;code&gt;callback&lt;/code&gt; would always require one parameter, which should be the &lt;code&gt;content&lt;/code&gt;. This would be passed on from attached hook to hook.
&lt;/p&gt;
&lt;p&gt;
Due to the complexity of this ticket already it may be better to think about the above later and deal with it in a separate ticket after the foundation is set in stone. I just wanted to leave this here for now. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41858 (Improve the list table pagination links color contrast) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 13 Sep 2017 11:09:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41858#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41858#comment:2/1505300974397726</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@subrataemfluence I think there are no other UI controls in WordPress that change their background to blue on hover/focus, so these links design seems inconsistent to me and I don't see why they should be an exception.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41858 (Improve the list table pagination links color contrast) updated</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:54:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41858#comment:1/1505300071810757</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The following color contrast meets WCGA level AA (4.5:1) &lt;a class="ext-link" href="https://www.joedolson.com/tools/color-contrast.php?type=hex&amp;amp;color=%230066c5&amp;amp;color2=%23e5e5e5&amp;amp;alpha=1#hex"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.joedolson.com/tools/color-contrast.php?type=hex&amp;amp;color=%230066c5&amp;amp;color2=%23e5e5e5&amp;amp;alpha=1#hex&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However the color &lt;code&gt;#0066c5&lt;/code&gt; does not fall inside the list WordPress official colors.
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"Also on hover/focus the colors could be improved a bit, since UI controls that change their background to blue on hover/focus are a bit out of the design patterns used in WordPress:"&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
Would you mind explaining &lt;strong&gt;"out of the design pattern used in WordPress"&lt;/strong&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41529 (Twenty Seventeen: Add social icon for Dockerhub) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:53:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41529#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41529#comment:2/1505299992876111</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by xkon. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1505299991000140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41722 (wpdb::db_connect() does not connect to IPv6 address of mysql server) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:44:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41722#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41722#comment:12/1505299477007016</guid>
      <description>&lt;p&gt;
Thanks for the update @schlessera
&lt;/p&gt;
&lt;p&gt;
Glad to hear it worked for you @fierevere
&lt;/p&gt;
&lt;p&gt;
Just few notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If we want to take this in smaller steps, we could keep the same non-ipv6 code, to be absolutely sure that we're not exluding anything with the new patch.
&lt;/li&gt;&lt;li&gt;Would it make sense and be helpful for the developers reading the code, to match the most used db host strings, like localhost, 127.0.0.1 etc, before parsing with regex?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here's a list of db host strings from the &lt;a class="ext-link" href="https://codex.wordpress.org/Editing%20wp-config.php#Set_Database_Host"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Codex&lt;/a&gt;, maybe helpful in tests?:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Hosting Company					DB_HOST Value Guess
1and1						db12345678
A2 Hosting					localhost
AN Hosting					localhost
Aruba.it					localhost or real IP provided with activation mail.
A Small Orange					localhost
AT&amp;amp;T						xxxxxxxx.carrierzone.com full server name found in PHP MyAdmin.
BlueHost					localhost
DreamHost					mysql.example.com
GoDaddy - Shared and 4GH Hosting		In the Databases menu go to MySQL. To the right of the database name click on Actions and Details. The hostname is at the bottom of the window.
GoDaddy - cPanel Hosting			localhost
GoDaddy - Plesk Hosting				Use the IP address shown in the Databases Section in Plesk. Do not include :3306
HostGator					localhost
ICDSoft						localhost:/tmp/mysql5.sock
Infomaniak (old admin)				mysql.yourdomain
Infomaniak					In the Dashboard of your Web Hosting, go to Databases. The host server is at the top of the window (example: xxxx.myd.sharedbox.com)
InMotion Hosting				localhost
iPage						username.ipagemysql.com
IPower						username.ipowermysql.com
Laughing Squid					localhost
MediaTemple Grid				internal-db.s00000.gridserver.com - (Replace "00000" with the actual site number)
MediaTemple DV					localhost
MegaHost					localhost
NearlyFreeSpeech.Net				username.db
NetworkSolutions				mysqlv5
one.com						example.com.mysql
pair Networks					dbnnnx.pair.com
QTH.com						localhost
Rackspace Cloud					localhost for unmanaged servers, variable for Cloud Sites like mysqlXY-AB.wcN.dfQ.stabletransit.com where X,Y,A,B,N,Q are variables
SysFix.eu Power Hosting				datapower.sysfix.eu
Site5						localhost
SiteGround					localhost
Vevida.com					mysql.example.com, where example.com is your own domain name
Yahoo						mysql
Hosts with cPanel				localhost
Hosts with Plesk				localhost
Hosts with DirectAdmin				localhost
Tophost.it					sql.your-domain-name.it
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>toc.jpg attached to Ticket #39165</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:08:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/toc.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/toc.jpg/1505297337404137</guid>
      <description>&lt;p&gt;
Example screenshot: table of content (by default the notice-box is using javascript for top position)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Wed, 13 Sep 2017 10:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:149</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:149/1505296810943826</guid>
      <description>&lt;p&gt;
In my modest and little opinion this implementation is very cool and I don't think that can create issues on WordPress but yes implementing and not using inside the core is not very useful.
The hook system in WordPress is cool because is integrated in the core so the developers can alter the behaviour so have the API and not using is not very useful, because developers can implement on their own a similar api in case.
&lt;/p&gt;
&lt;p&gt;
In any case the NPM package is interesting and probably is the case to evaluate where can be useful this API inside the core (also for Gutenberg). I think inside where there is an huge use of JavaScript like in the media picker, Tinymce, Widget Admin View etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 13 Sep 2017 08:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:29/1505292604291508</guid>
      <description>&lt;p&gt;
@javorszky Yea, Japanese do that to sometimes but it seems like the translations that I checked did not change the order of the term and taxonomy. &lt;a class="ext-link" href="https://translate.wordpress.org/projects/wp/dev/hu/default?filters%5Bstatus%5D=either&amp;amp;filters%5Boriginal_id%5D=202084&amp;amp;filters%5Btranslation_id%5D=9661611"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://translate.wordpress.org/projects/wp/dev/hu/default?filters%5Bstatus%5D=either&amp;amp;filters%5Boriginal_id%5D=202084&amp;amp;filters%5Btranslation_id%5D=9661611&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>javorszky</dc:creator>

      <pubDate>Wed, 13 Sep 2017 08:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:28/1505291108337868</guid>
      <description>&lt;p&gt;
Bear in mind that some LTR languages might have different word orders. English language has a hierarchy of &lt;strong&gt;thing:&lt;/strong&gt; member things, ie "Category: cats"
&lt;/p&gt;
&lt;p&gt;
Hungarian on the other hand (my mothertongue) would potentially display the same as "'macskák' kategória", which translated would be "(the) cats category".
&lt;/p&gt;
&lt;p&gt;
Control over word / concept order is important.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41867 (wp_list_categories throws SQL error if list is empty) created</title>
      
        <dc:creator>firebird75</dc:creator>

      <pubDate>Wed, 13 Sep 2017 08:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41867</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41867/1505289949847072</guid>
      <description>&lt;p&gt;
If via the args, we exclude the only category available in the list, then the SQL query will end up wrongly formated (empty : IN() statement).
&lt;/p&gt;
&lt;p&gt;
See full query here :
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT object_id, term_taxonomy_id FROM wp_term_relationships INNER JOIN wp_posts ON object_id = ID WHERE term_taxonomy_id IN () AND post_type IN
('post') AND post_status = 'publish';
&lt;/pre&gt;&lt;p&gt;
Sample php code :
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'taxonomy'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'category'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'child_of'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$queried_object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;category_parent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'depth'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'exclude'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$queried_object&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;cat_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'echo'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'hierarchical'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'hide_empty'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'show_count'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="s1"&gt;'title_li'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;wp_list_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The solution would be to check if there are other categories to be displayed and if not, then just return the empty result.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:41:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:24/1505284885078928</guid>
      <description>&lt;p&gt;
I guess the obvious response to my own question about scope of Webpack is that if Gutenberg is to be merged with its proposed build tooling (Webpack-based), taking steps in core to accommodate this would ease such a transition. A more interesting question to eventually consider then might be: What does this configuration look like when it scales to accommodate building both media and Gutenberg?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:147</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:147/1505284561937368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>aduth</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:27:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:23/1505284057892120</guid>
      <description>&lt;p&gt;
A higher level question:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Maybe not in the scope of what's intended here (simply replacing Browserify), but eventually what role would Webpack seek to serve? For example, the Grunt task for uglification is one which Webpack has built-in support (&lt;code&gt;webpack.optimize.OptimizeJsPlugin&lt;/code&gt;). The devil's advocate question is: if it's just for basic bundling, are we gaining much over Browserify (+Babelify)?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A couple thoughts on the configuration:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;At some point if we start to observe significant overlap between development and production configurations, we might want a more scalable approach to sharing common properties (like a common configuration). Conversely, if this is not something we want to aim for early on, we may not even need the file split right now. Gutenberg, for example, has a single &lt;code&gt;webpack.config.js&lt;/code&gt; which switches on the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to add/modify configuration values. This could help with avoiding redundancy on assigning &lt;code&gt;mediaConfig&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Should &lt;code&gt;watch: true&lt;/code&gt; be assigned into the configuration from &lt;code&gt;Gruntfile.js&lt;/code&gt;, or does that make more sense within the configuration itself?
&lt;/li&gt;&lt;li&gt;We specify &lt;code&gt;stats&lt;/code&gt; dependant on the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; but it doesn't appear we set this &lt;code&gt;NODE_ENV&lt;/code&gt; anywhere, so it seems unnecessary. And even if it did work as expected, would we want nothing to be output for production builds?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A few minor styling quibbles (in Webpack config files):
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should we bother with space aligning variable and object property assignment? Especially with comma-delimited variable declarations, it makes the incorrect assumption that a tab occupies four spaces (in Trac patch, it's obvious with the misalignment since it previews tabs at 8 spaces). Also that we have two spaces following the longest variable name in the respective Webpack configurations.
&lt;/li&gt;&lt;li&gt;Should be spaces between array square brackets (&lt;code&gt;mediaBuilds&lt;/code&gt;) and in require calls, and not after function keyword
&lt;/li&gt;&lt;li&gt;&lt;code&gt;module.exports&lt;/code&gt; object should be concluded with a semi-colon.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38545 (Add span element to get_the_archive_title()) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:18:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38545#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38545#comment:27/1505283501918831</guid>
      <description>&lt;p&gt;
Here are some of the changes that I made:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;changes with the spacing
&lt;/li&gt;&lt;li&gt;fixed a few alignment issues
&lt;/li&gt;&lt;li&gt;improved part of the documentation
&lt;/li&gt;&lt;li&gt;Replaced the large if statement with a smaller one
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@javorszky The order does not need to be able to be changed for RTL. That is automatically done by the browser. Though there maybe some other languages where that may be necessary but I am not sure which ones.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #12423,​38707,​39892 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:07:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=12423%2C38707%2C39892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=12423%2C38707%2C39892/1505282869028686</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41376" title="Editor: Add CodeMirror-powered code editor with syntax highlighting, ..."&gt;41376&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Editor: Add CodeMirror-powered code editor with syntax highlighting, linting, and auto-completion.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Code editor is integrated into the Theme/Plugin Editor, Additional CSS in Customizer, and Custom HTML widget. Code editor is not yet integrated into the post editor, and it may not be until accessibility concerns are addressed.
&lt;/li&gt;&lt;li&gt;The CodeMirror component in the Custom HTML widget is integrated in a similar way to TinyMCE being integrated into the Text widget, adopting the same approach for integrating dynamic JavaScript-initialized fields.
&lt;/li&gt;&lt;li&gt;Linting is performed for JS, CSS, HTML, and JSON via JSHint, CSSLint, HTMLHint, and JSONLint respectively. Linting is not yet supported for PHP.
&lt;/li&gt;&lt;li&gt;When user lacks &lt;code&gt;unfiltered_html&lt;/code&gt; the capability, the Custom HTML widget will report any Kses-invalid elements and attributes as errors via a custom Kses rule for HTMLHint.
&lt;/li&gt;&lt;li&gt;When linting errors are detected, the user will be prevented from saving the code until the errors are fixed, reducing instances of broken websites.
&lt;/li&gt;&lt;li&gt;The placeholder value is removed from Custom CSS in favor of a fleshed-out section description which now auto-expands when the CSS field is empty. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;The CodeMirror library is included as &lt;code&gt;wp.CodeMirror&lt;/code&gt; to prevent conflicts with any existing &lt;code&gt;CodeMirror&lt;/code&gt; global.
&lt;/li&gt;&lt;li&gt;An &lt;code&gt;wp.codeEditor.initialize()&lt;/code&gt; API in JS is provided to convert a &lt;code&gt;textarea&lt;/code&gt; into CodeMirror, with a &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; function in PHP to manage enqueueing the assets and settings needed to edit a given type of code.
&lt;/li&gt;&lt;li&gt;A user preference is added to manage whether or not "syntax highlighting" is enabled. The feature is opt-out, being enabled by default.
&lt;/li&gt;&lt;li&gt;Allowed file extensions in the theme and plugin editors have been updated to include formats which CodeMirror has modes for: &lt;code&gt;conf&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;htm&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;jsx&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;md&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;phtml&lt;/code&gt;, &lt;code&gt;php3&lt;/code&gt;, &lt;code&gt;php4&lt;/code&gt;, &lt;code&gt;php5&lt;/code&gt;, &lt;code&gt;php7&lt;/code&gt;, &lt;code&gt;phps&lt;/code&gt;, &lt;code&gt;scss&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;svg&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;yml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;txt&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props westonruter, georgestephanis, obenland, melchoyce, pixolin, mizejewski, michelleweber, afercia, grahamarmfield, samikeijonen, rianrietveld, iseulde.&lt;br /&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38707" title="#38707: enhancement: Customizer: Additional CSS highlight, revisions, selection, per-page, ... (new)"&gt;#38707&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [41376]: Editor: Add CodeMirror-powered code editor with syntax highlighting, ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:07:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41376/1505282868024685</guid>
      <description>&lt;p&gt;
Editor: Add CodeMirror-powered code editor with syntax highlighting, linting, and auto-completion.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Code editor is integrated into the Theme/Plugin Editor, Additional CSS in Customizer, and Custom HTML widget. Code editor is not yet integrated into the post editor, and it may not be until accessibility concerns are addressed.
&lt;/li&gt;&lt;li&gt;The CodeMirror component in the Custom HTML widget is integrated in a similar way to TinyMCE being integrated into the Text widget, adopting the same approach for integrating dynamic JavaScript-initialized fields.
&lt;/li&gt;&lt;li&gt;Linting is performed for JS, CSS, HTML, and JSON via JSHint, CSSLint, HTMLHint, and JSONLint respectively. Linting is not yet supported for PHP.
&lt;/li&gt;&lt;li&gt;When user lacks &lt;code&gt;unfiltered_html&lt;/code&gt; the capability, the Custom HTML widget will report any Kses-invalid elements and attributes as errors via a custom Kses rule for HTMLHint.
&lt;/li&gt;&lt;li&gt;When linting errors are detected, the user will be prevented from saving the code until the errors are fixed, reducing instances of broken websites.
&lt;/li&gt;&lt;li&gt;The placeholder value is removed from Custom CSS in favor of a fleshed-out section description which now auto-expands when the CSS field is empty. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;The CodeMirror library is included as &lt;code&gt;wp.CodeMirror&lt;/code&gt; to prevent conflicts with any existing &lt;code&gt;CodeMirror&lt;/code&gt; global.
&lt;/li&gt;&lt;li&gt;An &lt;code&gt;wp.codeEditor.initialize()&lt;/code&gt; API in JS is provided to convert a &lt;code&gt;textarea&lt;/code&gt; into CodeMirror, with a &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; function in PHP to manage enqueueing the assets and settings needed to edit a given type of code.
&lt;/li&gt;&lt;li&gt;A user preference is added to manage whether or not "syntax highlighting" is enabled. The feature is opt-out, being enabled by default.
&lt;/li&gt;&lt;li&gt;Allowed file extensions in the theme and plugin editors have been updated to include formats which CodeMirror has modes for: &lt;code&gt;conf&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;htm&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;jsx&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;md&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;phtml&lt;/code&gt;, &lt;code&gt;php3&lt;/code&gt;, &lt;code&gt;php4&lt;/code&gt;, &lt;code&gt;php5&lt;/code&gt;, &lt;code&gt;php7&lt;/code&gt;, &lt;code&gt;phps&lt;/code&gt;, &lt;code&gt;scss&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;sh&lt;/code&gt;, &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;svg&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;yml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;txt&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props westonruter, georgestephanis, obenland, melchoyce, pixolin, mizejewski, michelleweber, afercia, grahamarmfield, samikeijonen, rianrietveld, iseulde.
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38707" title="#38707: enhancement: Customizer: Additional CSS highlight, revisions, selection, per-page, ... (new)"&gt;#38707&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12423" title="#12423: feature request: Include default code editor (closed: fixed)"&gt;#12423&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39892" title="#39892: enhancement: Default value in Additional CSS (closed: fixed)"&gt;#39892&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>38545.6.patch attached to Ticket #38545</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Wed, 13 Sep 2017 06:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38545/38545.6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38545/38545.6.patch/1505282814460433</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:52:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:22/1505281967316717</guid>
      <description>&lt;p&gt;
Patch &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40894/40894.4.diff" title="Attachment '40894.4.diff' in Ticket #40894"&gt;40894.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40894/40894.4.diff" title="Download"&gt;​&lt;/a&gt; is a refresh &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40894/40894.3.diff" title="Attachment '40894.3.diff' in Ticket #40894"&gt;40894.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40894/40894.3.diff" title="Download"&gt;​&lt;/a&gt; to apply cleanly against trunk (no changes) 👍🏼
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>40894.4.diff attached to Ticket #40894</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40894/40894.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40894/40894.4.diff/1505281879995064</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12423 (Include default code editor) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12423#comment:145</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12423#comment:145/1505281510805137</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I have here a core patch in a PR that is now awaiting finalization of the Travis build. Once the jobs finish and it passes, I'm going to commit this to core: &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/255/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/255/files&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please open any defects in new tickets.
&lt;/p&gt;
&lt;p&gt;
A few possible things to follow up on:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I'm aware that it would be ideal if the CodeMirror bundling logic (via browserify) could be added as part of core. For now, just the minified bundles are being included.
&lt;/li&gt;&lt;li&gt;The linters are being included as separate assets. They are not being minified, other than they are already minified as distributed. These could either benefit from additional uglification or bundling with codemirror if they are not going to be enqueued separately.
&lt;/li&gt;&lt;li&gt;PHPUnit tests should be added for &lt;code&gt;wp_enqueue_code_editor()&lt;/code&gt; and &lt;code&gt;WP_Widget_Custom_HTML&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;There is no PHP linter yet. This would be a good enhancement. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/48"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/48&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;While there is an HTMLHint rule which checks for Kses violations, this does not extend to CSSLint and &lt;code&gt;safecss_filter_attr()&lt;/code&gt;. It would be a nice enhancement to get illegal style properties flagged as lint errors as well. See &lt;a class="ext-link" href="https://github.com/WordPress/better-code-editing/issues/60"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/better-code-editing/issues/60&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Again, these should get opened as separate tickets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41866 (REST API throws error when displaying an unlimited number of posts in ...) created</title>
      
        <dc:creator>dpsjfveloso1</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:24:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41866</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41866/1505280283248684</guid>
      <description>&lt;p&gt;
Hi there,
&lt;/p&gt;
&lt;p&gt;
The REST API posts/pages endpoints fails when using a filter to set the &lt;em&gt;posts_per_page&lt;/em&gt; as &lt;em&gt;-1&lt;/em&gt;, it throws a WP_Error, rest_post_invalid_page_number, as the number of max pages, &lt;em&gt;$max_pages&lt;/em&gt;, is negative as the &lt;em&gt;posts_per_page&lt;/em&gt; has a negative value (-1).
&lt;/p&gt;
&lt;p&gt;
The error can be reproduced by applying a filter for the &lt;em&gt;rest_page_query&lt;/em&gt; filter, setting the posts_per_page argument as -1:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_posts_limits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;\WP_REST_Request&lt;/span&gt; &lt;span class="nv"&gt;$restApiRequest&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Let's suppose that we want to remove the number of posts per page as unlimited under certain conditions, and this is the reason why we use this filter
&lt;/span&gt;    &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rest_page_query'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'remove_posts_limits'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The issue is caused due to the way that &lt;em&gt;$max_pages&lt;/em&gt; is set (file /wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php, starts at line 326):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$posts_query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query_vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;WP_Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'rest_post_invalid_page_number'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'The page number requested is larger than the number of pages available.'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'status'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The simplest solution here would be to use the &lt;em&gt;abs()&lt;/em&gt; after casting &lt;em&gt;posts_per_page&lt;/em&gt; value:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$posts_query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query_vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But the &lt;em&gt;$max_pages&lt;/em&gt; could also be set inside of an if clause, as the value of $max_pages should be one in all cases (this would be a better solution):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;span class="nv"&gt;$posts_per_page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$posts_query&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;query_vars&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'posts_per_page'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$total_posts&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nv"&gt;$posts_per_page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$posts_per_page&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// It's an unlimited number of posts per page, which means that $max_pages must be 1
&lt;/span&gt;    &lt;span class="nv"&gt;$max_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/*
.
.
.
*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Thanks,
Jorge
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39679 (Redirect loop on attachment pages) updated</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Wed, 13 Sep 2017 05:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39679#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39679#comment:5/1505280232841680</guid>
      <description>&lt;p&gt;
@OPunWide, somewhere in either WordPress or your server setting, you‘ve inadvertently used upper case characters in your domain (YourFriendPaul.com should be yourfriendpaul.com everywhere.) From your server headers, it looks like it’s somewhere in WordPress’ configuration. (The following header is produced by WordPress.)
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Location: &lt;a class="ext-link" href="http://YourFriendPaul.com/wp/the-illusion-of-control.html/placebo-like-icon"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://YourFriendPaul.com/wp/the-illusion-of-control.html/placebo-like-icon&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The infinite redirects here are caused by a WordPress bug when comparing an upper-case domain to a lower-case domain. I’m trying to narrow down exactly where this comparison takes place.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
For my own situation, I have a reverse proxying server in front of WordPress. Files are fetched from origin.example.com and served as www.example.com. Every other WordPress page gets the correct www.example.com page in every URL. However, for attachment pages there is some strange URL magic going on in redirect_canonical() that reads the server hostname from $_SERVER instead of WP_HOME. This is also a bug. There are a lot of assumptions and mistakes in this code that differs from the rest of Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39679 (Redirect loop on attachment pages) updated</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Wed, 13 Sep 2017 04:46:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39679#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39679#comment:4/1505277997709558</guid>
      <description>&lt;p&gt;
Same exact issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41857 (Walker_PageDropdown doesn't set correct selected value when using ...) updated</title>
      
        <dc:creator>it4life</dc:creator>

      <pubDate>Wed, 13 Sep 2017 04:11:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41857#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41857#comment:3/1505275896133078</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41857#comment:1" title="Comment 1"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not all fields have unique values, like &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;post_name&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
How should non-unique fields be handled?
&lt;/p&gt;
&lt;p&gt;
If the first match is selected, then that would depend on the order - that might be problematic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
About unique field, I have idea to pass &lt;code&gt;selected&lt;/code&gt; and &lt;code&gt;value_field&lt;/code&gt; as callback:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Custom_Walker_PageDropdown&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Walker_PageDropdown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="sd"&gt;/**
         * Starts the element output.
         * @param array|string $args {
         *
         *    @type int|string|callable $selected     Value of the option that should be selected.
         *                                            Default 0.
         *                                            Or a callback that return true/false.
         *    @type string|callable     $value_field  Post field or a callback used to populate
         *                                            the 'value' attribute of the option elements.
         *                                            Default 'ID'.
         *
         * @see Walker_PageDropdown
         */&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;start_el&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;$output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$depth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$pad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str_repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;amp;nbsp;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$depth&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'value_field'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$value_field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'value_field'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value_field&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value_field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;elseif&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$value_field&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$value_field&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;option class=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;level-&lt;/span&gt;&lt;span class="si"&gt;$depth&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; value=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;esc_attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'selected'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nv"&gt;$selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'selected'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                        &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;is_callable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;call_user_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nv"&gt;$selected&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$is_selected&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;' selected="selected"'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                        &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="cm"&gt;/* translators: %d: ID of a post */&lt;/span&gt;
                        &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'#%d (no title)'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="sd"&gt;/**
                 * Filters the page title when creating an HTML drop-down list of pages.
                 *
                 * @since 3.1.0
                 *
                 * @param string $title Page title.
                 * @param object $page  Page data object.
                 */&lt;/span&gt;
                &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;apply_filters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'list_pages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="nv"&gt;$pad&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;esc_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$title&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="nv"&gt;$output&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;/option&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Usage:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_dropdown_pages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'value_field'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;' - '&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'selected'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$page&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;post_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'blog'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s1"&gt;'walker'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Custom_Walker_PageDropdown&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
What do you think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41857 (Walker_PageDropdown doesn't set correct selected value when using ...) updated</title>
      
        <dc:creator>it4life</dc:creator>

      <pubDate>Wed, 13 Sep 2017 03:24:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41857#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41857#comment:2/1505273048259923</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/41857#comment:1" title="Comment 1"&gt;birgire&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Welcome to WordPress Trac, @it4life
&lt;/p&gt;
&lt;p&gt;
Can you give an example?
&lt;/p&gt;
&lt;p&gt;
Not all fields have unique values, like &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;post_name&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
How should non-unique fields be handled?
&lt;/p&gt;
&lt;p&gt;
If the first match is selected, then that would depend on the order - that might be problematic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, an example is using with &lt;code&gt;value_field&lt;/code&gt; = &lt;code&gt;post_name&lt;/code&gt; and it doesn't show selected value, as you see the code is only checking selected value by &lt;code&gt;ID&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 02:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:23/1505268851577323</guid>
      <description>&lt;p&gt;
Thanks for the update @Clorith
&lt;/p&gt;
&lt;p&gt;
just few additional ideas/remarks that come to mind:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Table header (optional) ? See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG" title="Attachment 'table-striped.JPG' in Ticket #39165"&gt;table-striped.JPG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/table-striped.JPG" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Striped table for easier read, i.e. alternating odd/even background? See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG" title="Attachment 'table-striped.JPG' in Ticket #39165"&gt;table-striped.JPG&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/table-striped.JPG" title="Download"&gt;​&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;"Not defined" vs "Undefined" (I like the latter more)
&lt;/li&gt;&lt;li&gt;If multisite is active then what about an extra multisite table?
&lt;/li&gt;&lt;li&gt;Table Of Contents - for easier navigation? (horizontal or vertical)
&lt;/li&gt;&lt;li&gt;"Go to the top of the document" links?
&lt;/li&gt;&lt;li&gt;How to close the copy&amp;amp;paste field again?
&lt;/li&gt;&lt;li&gt;Mention that the private info is excluded in the copy&amp;amp;paste field?
&lt;/li&gt;&lt;li&gt;Add WP_MEMORY_LIMIT ?
&lt;/li&gt;&lt;li&gt;Could we avoid constants like TEMPLATEPATH and WP_PLUGIN_DIR in favor of functions?
&lt;/li&gt;&lt;li&gt;The "Active theme" is included in "Other themes" (exclude it there?)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>table-striped.JPG attached to Ticket #39165</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Wed, 13 Sep 2017 01:58:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/table-striped.JPG/1505267917329523</guid>
      <description>&lt;p&gt;
Example screenshot: striped + header
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41865 (Have not received response at Hackerone) created</title>
      
        <dc:creator>zhk</dc:creator>

      <pubDate>Wed, 13 Sep 2017 00:51:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41865</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41865/1505263907532689</guid>
      <description>&lt;p&gt;
Hi team,
I've submit a security at Hackerone, 5 days passed, but I have not received any response again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Wed, 13 Sep 2017 00:11:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:12/1505261497221483</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Wed, 13 Sep 2017 00:11:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:11/1505261482626780</guid>
      <description>&lt;p&gt;
@jbpaul17, sure. It's good to go as soon as someone can commit it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) reopened</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Tue, 12 Sep 2017 23:58:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:148</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:148/1505260705513354</guid>
      <description>&lt;p&gt;
Unfortunately, this was committed with a blocker not being addressed.
&lt;/p&gt;
&lt;p&gt;
I only had a brief chance to bring this up in &lt;a class="ext-link" href="https://github.com/WordPress/packages/pull/13#issuecomment-327041088"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the PR&lt;/a&gt;, but there are several problems with this going into Core now.
&lt;/p&gt;
&lt;p&gt;
Primarily, it's mostly unused in real situations (ACF being the notable exception), and entirely unused (to my knowledge) in a JS project using modern practices. While &lt;code&gt;wp.hooks&lt;/code&gt; would potentially help with our legacy JS, new APIs need to be thinking about the future of WordPress' JS development. We're in a huge amount of flux at the moment, so focussing on new JS practices, then working on making those APIs available to legacy JS, gives us much more flexibility for the next 10 years of WordPress development. Locking ourselves into a thing built with WordPress' JS development of 5 years ago in mind is best case limiting our potential, worst case causing significant backwards compatibility issues that we'll need to deal with in 6-12 months.
&lt;/p&gt;
&lt;p&gt;
Even not considering modern practices, &lt;code&gt;wp.hooks&lt;/code&gt; has no usage in Core, some parts of Core's legacy JS should be making use of it when it's committed.
&lt;/p&gt;
&lt;p&gt;
While the pub/sub model has worked really well for WordPress' PHP pluggable interfaces, and has been historically used with JavaScript's event model, it's not necessarily the way forward, and making it the "WordPress way" limits our options.
&lt;/p&gt;
&lt;p&gt;
So, here's what I suggest:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Revert &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41375" title="Add `wp.hooks` - JavaScript actions and filters.
Add a JavaScript ..."&gt;[41375]&lt;/a&gt; for now, with the explicit aim of committing &lt;code&gt;wp.hooks&lt;/code&gt; in the future.
&lt;/li&gt;&lt;li&gt;Publish &lt;code&gt;wp.hooks&lt;/code&gt; on NPM as 1.0.0.
&lt;/li&gt;&lt;li&gt;Try using the &lt;code&gt;wp.hooks&lt;/code&gt; module in Gutenberg. What works? What doesn't?
&lt;/li&gt;&lt;li&gt;Iterate.
&lt;/li&gt;&lt;li&gt;If needed, release &lt;code&gt;wp.hooks&lt;/code&gt; 2.0, 3.0, however many API-breaking releases we need.
&lt;/li&gt;&lt;li&gt;Once the modern practices are settled, backport to work with legacy JS. Add it into some of Core's legacy JS, so we get practical usage there, too.
&lt;/li&gt;&lt;li&gt;If we haven't already, have a better way of importing modules into Core. Committing the webpack-ed version of the module to the SVN repo is unsustainable.
&lt;/li&gt;&lt;li&gt;Commit &lt;code&gt;wp.hooks&lt;/code&gt; to Core.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This gives &lt;code&gt;wp.hooks&lt;/code&gt; some usage based on modern practices, it gives the upheaval in WordPress' JS development practices some time to settle, and it gives us a chance to build something that will work in the modern JS world, and in the legacy world. Maybe that thing will look quite similar to what &lt;code&gt;wp.hooks&lt;/code&gt; currently looks like, maybe it won't. But now is a particularly bad time to be making that bet.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #39165 (Add page to assist with debugging and support) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Tue, 12 Sep 2017 23:47:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39165#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39165#comment:22/1505260033685084</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39165/39165.4.patch" title="Attachment '39165.4.patch' in Ticket #39165"&gt;39165.4.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39165/39165.4.patch" title="Download"&gt;​&lt;/a&gt; implements proper keyed arrays, translatable strings (let's leave it up to the various languages to determine how to display technical terms and such).
&lt;/p&gt;
&lt;p&gt;
It also includes the key count from @birgire, and the fields mentioned by others in the ticket as useful to include.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;is_super_admin()&lt;/code&gt; check has also been replaced with a capability check, in our case &lt;code&gt;update_core&lt;/code&gt;, as a very reliable rule for someone who has the access expected when being privy to any technical information about the site setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39165.4.patch attached to Ticket #39165</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Tue, 12 Sep 2017 23:42:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39165/39165.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39165/39165.4.patch/1505259747237037</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Tue, 12 Sep 2017 23:40:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:14/1505259647715066</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40764 (Multisite theme update not showing new version number) updated</title>
      
        <dc:creator>desrosj</dc:creator>

      <pubDate>Tue, 12 Sep 2017 23:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40764#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40764#comment:22/1505259275598870</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested this on a subdomain and subdirectory install. Both fixed the issue for me. I think this is good to go.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41864 (Separate items with commas) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Sep 2017 22:52:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41864#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41864#comment:2/1505256729257017</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think the existing string fits better in that context.
&lt;/p&gt;
&lt;p&gt;
On the first screenshot, the meta box has a clear Tags label, so the hint simply says how the tags should be separated (because "Tags, separated by commas" would be redundant).
&lt;/p&gt;
&lt;p&gt;
On the second screenshot, it's not immediately clear what should be entered, so the hint starts with "Page IDs". The suggested "Separate page IDs with commas" string would be less clear.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38545.5.patch attached to Ticket #38545</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Tue, 12 Sep 2017 22:06:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38545/38545.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38545/38545.5.patch/1505253990106094</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41864 (Separate items with commas) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41864#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41864#comment:1/1505253318469456</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>41864.patch attached to Ticket #41864</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:54:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41864/41864.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41864/41864.patch/1505253291883544</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>pages-widget.png attached to Ticket #41864</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:54:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41864/pages-widget.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41864/pages-widget.png/1505253255722389</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>tags-meta-box.png attached to Ticket #41864</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41864/tags-meta-box.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41864/tags-meta-box.png/1505253221015142</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>41864.png attached to Ticket #41864</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:53:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41864/41864.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41864/41864.png/1505253205160920</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41864 (Separate items with commas) created</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41864</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41864/1505253119009101</guid>
      <description>&lt;p&gt;
Text change in "Page Widget" to match similar translation strings.
&lt;/p&gt;
&lt;p&gt;
See the attached patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #33045 (New conditional tags for child/parent pages) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:15:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33045#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33045#comment:14/1505250937322182</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39451 (Javascript error when link_manager_enabled ( WP_Widget_Links) and ...) updated</title>
      
        <dc:creator>greenshady</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39451#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39451#comment:5/1505250827597599</guid>
      <description>&lt;p&gt;
I've run into this problem too with users.  I've also seen it within a plugin of mine that creates a more robust links widget.
&lt;/p&gt;
&lt;p&gt;
I think this is because the links widget creates "fake" widgets on output.  Each category of links is wrapped into its own widget markup.  And, the customizer JS is looking to match actual widgets.
&lt;/p&gt;
&lt;p&gt;
Even disabling the &lt;code&gt;customize_selective_refresh&lt;/code&gt; for the Links widget doesn't address the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33045 (New conditional tags for child/parent pages) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33045#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33045#comment:13/1505250725389071</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505250723000175"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Sep 2017 21:03:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:10/1505250222378158</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>40462.2.patch attached to Ticket #40462</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 20:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40462/40462.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40462/40462.2.patch/1505249594447571</guid>
      <description>&lt;p&gt;
phpDocs alignment
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>jbpaul17</dc:creator>

      <pubDate>Tue, 12 Sep 2017 19:17:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:9/1505243821657375</guid>
      <description>&lt;p&gt;
@voldemortensen are you ok with setting you as owner and milestone to 4.9 then?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41862 ("Attach to Existing Content" popup search box pulling up records that ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Sep 2017 19:09:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41862#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41862#comment:1/1505243359230876</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It's likely that the found posts contain &lt;code&gt;thing&lt;/code&gt; somewhere in content.
&lt;/p&gt;
&lt;p&gt;
The search is supposed to return all the relevant results, not just strict matches, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7394" title="#7394: task (blessed): Search: order results by relevance (closed: fixed)"&gt;#7394&lt;/a&gt; for details. I don't see anything wrong here at a glance.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) updated</title>
      
        <dc:creator>elvishp2006</dc:creator>

      <pubDate>Tue, 12 Sep 2017 18:01:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:6/1505239286474568</guid>
      <description>&lt;p&gt;
@boonebgorges I applied the patch and it worked perfectly, the bug was solved.
Thank you very much for your attention :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>voldemortensen</dc:creator>

      <pubDate>Tue, 12 Sep 2017 17:50:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:8/1505238602707182</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch looks good to me, the only nitpick would be a little alignment issue in the docblock.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Sep 2017 17:35:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:7/1505237737145834</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1505237735000181"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41796 (WP_Term_Query problem using object_ids and number attributes) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 12 Sep 2017 17:05:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41796#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41796#comment:5/1505235955540339</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @elvishp2006 - Thanks for the ticket and for the patch. I've reproduced the bug.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;DISTINCT&lt;/code&gt; keyword can have big performance implications, so ideally we would avoid it when possible. In addition, there are cases where duplicate term IDs should be preserved - specifically, when &lt;code&gt;fields=all_with_object_id&lt;/code&gt;. See &lt;a href="https://core.trac.wordpress.org/browser/tags/4.8.1/src/wp-includes/class-wp-term-query.php?marks=747-765#L747"&gt;https://core.trac.wordpress.org/browser/tags/4.8.1/src/wp-includes/class-wp-term-query.php?marks=747-765#L747&lt;/a&gt;. We use PHP to filter out duplicates based on this criterion.
&lt;/p&gt;
&lt;p&gt;
As such, I'd recommend a more modest approach: Only add the &lt;code&gt;DISTINCT&lt;/code&gt; keyword when a lack of distinctness affects 'number' or 'offset', and when &lt;code&gt;fields != all_with_object_id&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Have a look at &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41796/41796.diff" title="Attachment '41796.diff' in Ticket #41796"&gt;41796.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41796/41796.diff" title="Download"&gt;​&lt;/a&gt; and see if it makes sense to you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41796.diff attached to Ticket #41796</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Tue, 12 Sep 2017 17:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41796/41796.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41796/41796.diff/1505235927606922</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41459 (Introduce a REST API endpoint for networks / network options) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Sep 2017 16:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41459#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41459#comment:5/1505232341040283</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by spacedmonkey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1505232338000521"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37181 (Use metadata api in *_network_options) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Sep 2017 16:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37181#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37181#comment:32/1505232290606712</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1505232288000497"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29684 (Add get_main_site_id() function) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Sep 2017 16:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29684#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29684#comment:43/1505232290424111</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1505232288000497"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 12 Sep 2017 15:42:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:126/1505230967374251</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Tue, 12 Sep 2017 15:38:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:29/1505230700157711</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38707#comment:28" title="Comment 28"&gt;folletto&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Separate browser window, as it allows the maximum flexibility.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, +1 for what @folletto's said.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38707 (Customizer: Additional CSS highlight, revisions, selection, per-page, ...) updated</title>
      
        <dc:creator>folletto</dc:creator>

      <pubDate>Tue, 12 Sep 2017 15:36:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38707#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38707#comment:28/1505230579039590</guid>
      <description>&lt;p&gt;
Separate browser window, as it allows the maximum flexibility.
&lt;/p&gt;
&lt;p&gt;
See the design i2 at the top of this thread for design reference (the rightmost part). :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29684 (Add get_main_site_id() function) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Tue, 12 Sep 2017 15:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29684#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29684#comment:42/1505229890526590</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/29684#comment:41" title="Comment 41"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;get_main_site_for_network()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;is_main_site_for_network()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I prefer these over &lt;code&gt;get_main_site_id()&lt;/code&gt; which, similar to &lt;code&gt;get_main_network_id()&lt;/code&gt; insinuates that it's the single-one-and-only primary main omega site ID for the entire installation, not for any specific network. Put another way, it's the main site for the main network, and that's it. If you want the main site for a network, use the functions above.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can see these names being more precise than what the patches so far do. A possible issue I see is that &lt;code&gt;is_main_site()&lt;/code&gt; already exists. We could of course introduce &lt;code&gt;get_main_site_for_network()&lt;/code&gt; and &lt;code&gt;is_main_site_for_network()&lt;/code&gt; (or, another idea, &lt;code&gt;get_network_main_site()&lt;/code&gt; and &lt;code&gt;is_network_main_site()&lt;/code&gt;) and then defer &lt;code&gt;is_main_site()&lt;/code&gt; to the new function, passing the ID of the &lt;code&gt;$current_site&lt;/code&gt; global as &lt;code&gt;$network_id&lt;/code&gt; parameter.
&lt;/p&gt;
&lt;p&gt;
I personally don't think the names we've been working with so far are really worse. In a regular multisite, they feel more straightforward, as the "which network is it?" thing only matters for multi-network. My take is for the most part that we should support multi-network as good as possible, but still focus on common multisite for things like that.
&lt;/p&gt;
&lt;p&gt;
An interesting observation is that core so far (what a surprise) doesn't have a standard on this:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We have &lt;code&gt;get_user_count()&lt;/code&gt; and &lt;code&gt;get_blog_count()&lt;/code&gt; which should rather be called &lt;code&gt;get_network_user_count()&lt;/code&gt; (yeah, it's a global count, but it's still a network option) and &lt;code&gt;get_network_site_count()&lt;/code&gt; ("site" only because "blog" is obsolete) if following your suggestion.
&lt;/li&gt;&lt;li&gt;Other functions like &lt;code&gt;wp_update_network_user_counts()&lt;/code&gt; or &lt;code&gt;wp_update_network_site_counts()&lt;/code&gt; are following your suggestion.
&lt;/li&gt;&lt;li&gt;Something to consider is that the functions discussed here would be available on non-multisite as well. Having a term like "network" in the function name may feel weird for these setups.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41689 (Retire Press This) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Tue, 12 Sep 2017 15:00:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41689#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41689#comment:8/1505228429319693</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Put up a first pass at retiring PT from the Core side.
&lt;/p&gt;
&lt;p&gt;
Still needed:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Clean up documentation (press-this.php, remove the logic tree, add proper inline docs).
&lt;/li&gt;&lt;li&gt;Whitespace cleanup -- looks like something on my end slipped when editing the ajax array.
&lt;/li&gt;&lt;li&gt;postbox.js has a reference to PT -- need to determine best way to remove.
&lt;/li&gt;&lt;li&gt;l10n.css has reference to PT that needs to be removed.
&lt;/li&gt;&lt;li&gt;Publish the replacement plugin.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Publishing this now so @stephdau can have a look.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41863 (Need to improve condition) closed</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Tue, 12 Sep 2017 14:57:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41863#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41863#comment:1/1505228266771785</guid>
      <description>invalid: &lt;p&gt;
Thanks for opening this ticket. Please note that we generally do not change coding standards for external libraries like the ID3 one.
&lt;/p&gt;
&lt;p&gt;
Besides that, coding standards are going to be addressed in one go in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41057" title="#41057: task (blessed): Update PHP codebase per WordPress PHP Coding Standards (closed: fixed)"&gt;#41057&lt;/a&gt; instead of file by file.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>41689.diff attached to Ticket #41689</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Tue, 12 Sep 2017 14:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41689/41689.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41689/41689.diff/1505228086870851</guid>
      <description>&lt;p&gt;
First pass at removing Press This
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18565 (Scheduled or Published. Still confuses us.) reopened</title>
      
        <dc:creator>DBJ</dc:creator>

      <pubDate>Tue, 12 Sep 2017 14:54:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18565#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18565#comment:13/1505228072625485</guid>
      <description>&lt;p&gt;
It is now 2017. 6 years has passed. Are we absolutely certain this issue is fixed?
&lt;/p&gt;
&lt;p&gt;
There is no perceived time of publishing on the post editing UI. It is just a good old "Immediate" which in our case (it seems) publishes at the post creation time.
&lt;/p&gt;
&lt;p&gt;
So if I started a post in July and I hit the publish button in August, "Immediate" will be date in July.
&lt;/p&gt;
&lt;p&gt;
Why this button economy? Why not having two buttons: "Publish NOW" and "Schedule LATER"
&lt;/p&gt;
&lt;p&gt;
I am sure this is hotly debated in some forum, but I have no time to look it up.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>41863.patch attached to Ticket #41863</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Tue, 12 Sep 2017 14:30:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41863/41863.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41863/41863.patch/1505226617778561</guid>
      <description>&lt;p&gt;
Add Yoda condition
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41863 (Need to improve condition) created</title>
      
        <dc:creator>mitraval192</dc:creator>

      <pubDate>Tue, 12 Sep 2017 14:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41863/1505226508594370</guid>
      <description>&lt;p&gt;
Need to improve all the condition statement with proper space and Yoda conditions in ID3 directory files.
&lt;/p&gt;
&lt;pre class="wiki"&gt;\src\wp-includes\ID3
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>search-result.jpg attached to Ticket #41862</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 12 Sep 2017 14:03:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41862/search-result.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41862/search-result.jpg/1505224993349128</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41862 ("Attach to Existing Content" popup search box pulling up records that ...) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Tue, 12 Sep 2017 14:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41862</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41862/1505224959745991</guid>
      <description>&lt;p&gt;
I am not very sure whether this is really a bug in WordPress core but today I  encountered it accidentally.
&lt;/p&gt;
&lt;p&gt;
I was Attach-ing an image from media library to an existing post. I typed in a search query (&lt;strong&gt;10 thing&lt;/strong&gt;) in the search box and hit submit. Multiple records came up, while I was expecting only one which has the phrase in its title and content body. None of the other posts which appear along with, is associated with the search phrase. I checked title, body, and meta values for this post.
&lt;/p&gt;
&lt;p&gt;
But when I searched with &lt;strong&gt;10 things&lt;/strong&gt; (added an "s"), I got the desired result, i.e. only a single post.
&lt;/p&gt;
&lt;p&gt;
I have no third party plugin installed in my system. It is a clean install and everything is up to date.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41860 (Unit test for wp_auth_check()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 12 Sep 2017 13:20:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41860#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41860#comment:5/1505222428859894</guid>
      <description>&lt;p&gt;
@pbearne great to see a video of the patch coding, thanks for sharing
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41815 (switch_to_blog() docs incorrectly state that autoloaded options aren't ...) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 12 Sep 2017 13:17:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41815#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41815#comment:6/1505222276743546</guid>
      <description>&lt;p&gt;
@pbearne great to see a video of the patch coding, thanks for sharing
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40894 (Use Webpack instead of Browserify for build process) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Sep 2017 13:07:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40894#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40894#comment:21/1505221623198820</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-js by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-js/p1505221621000375"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21170 (JavaScript actions and filters) closed</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 12 Sep 2017 12:53:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21170#comment:147</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21170#comment:147/1505220802132811</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41375" title="Add `wp.hooks` - JavaScript actions and filters.
Add a JavaScript ..."&gt;41375&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add &lt;code&gt;wp.hooks&lt;/code&gt; - JavaScript actions and filters.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Add a JavaScript hooks library with an API that mirrors the WordPress Plugin API; provides similar functionality and API to PHP hooks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Called via the global &lt;code&gt;wp.hooks&lt;/code&gt;, eg: &lt;code&gt;wp.hooks.addAction()&lt;/code&gt;, etc. Adds:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;addAction( 'hook', 'vendor/plugin/function', callback, priority )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;addFilter( 'hook', 'vendor/plugin/function', callback, priority )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeAction( 'hook', 'vendor/plugin/function' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeFilter( 'hook',  'vendor/plugin/function' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeAllActions( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeAllFilters( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;doAction( 'hook', arg1, arg2, moreArgs, finalArg )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;applyFilters( 'hook', content, arg1, arg2, moreArgs, finalArg )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;doingAction( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;doingFilter( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;didAction( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;didFilter( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;hasAction( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;hasFilter( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props adamsilverstein, jnylen0, aduth, kadamwhite, youknowriad, schlessera, mikeschinkel, azaozz, vhauri, CaptainN, scribu, carldanley, chetanchauhan, mgibbs189, stephenharris, justnorris, koopersmith, gcorne, TV productions, atimmer.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21170" title="#21170: feature request: JavaScript actions and filters (closed: fixed)"&gt;#21170&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41375]: Add `wp.hooks` - JavaScript actions and filters.  Add a JavaScript ...</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Tue, 12 Sep 2017 12:53:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41375/1505220801623980</guid>
      <description>&lt;p&gt;
Add &lt;code&gt;wp.hooks&lt;/code&gt; - JavaScript actions and filters.
&lt;/p&gt;
&lt;p&gt;
Add a JavaScript hooks library with an API that mirrors the WordPress Plugin API; provides similar functionality and API to PHP hooks.
&lt;/p&gt;
&lt;p&gt;
Called via the global &lt;code&gt;wp.hooks&lt;/code&gt;, eg: &lt;code&gt;wp.hooks.addAction()&lt;/code&gt;, etc. Adds:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;addAction( 'hook', 'vendor/plugin/function', callback, priority )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;addFilter( 'hook', 'vendor/plugin/function', callback, priority )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeAction( 'hook', 'vendor/plugin/function' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeFilter( 'hook',  'vendor/plugin/function' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeAllActions( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;removeAllFilters( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;doAction( 'hook', arg1, arg2, moreArgs, finalArg )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;applyFilters( 'hook', content, arg1, arg2, moreArgs, finalArg )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;doingAction( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;doingFilter( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;didAction( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;didFilter( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;hasAction( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;hasFilter( 'hook' )&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props adamsilverstein, jnylen0, aduth, kadamwhite, youknowriad, schlessera, mikeschinkel, azaozz, vhauri, CaptainN, scribu, carldanley, chetanchauhan, mgibbs189, stephenharris, justnorris, koopersmith, gcorne, TV productions, atimmer.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21170" title="#21170: feature request: JavaScript actions and filters (closed: fixed)"&gt;#21170&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41861 (Wordpress.com URL linking takes too long) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 12 Sep 2017 12:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41861#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41861#comment:2/1505218825928155</guid>
      <description>invalid</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #41861 (Wordpress.com URL linking takes too long) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Tue, 12 Sep 2017 12:15:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41861#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41861#comment:1/1505218513622905</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey @aatayyab, this is the Core Trac for self-hosted WordPress.org sites.
&lt;/p&gt;
&lt;p&gt;
If you need help with WordPress.com, you should go here where you can chat to WordPress.com support: &lt;a class="ext-link" href="https://en.support.wordpress.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.support.wordpress.com/&lt;/a&gt;. They'll be able to get things sorted for you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ddd.jpg attached to Ticket #41861</title>
      
        <dc:creator>aatayyab</dc:creator>

      <pubDate>Tue, 12 Sep 2017 12:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41861/ddd.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41861/ddd.jpg/1505218195952417</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41861 (Wordpress.com URL linking takes too long) created</title>
      
        <dc:creator>aatayyab</dc:creator>

      <pubDate>Tue, 12 Sep 2017 12:09:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41861</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41861/1505218172741409</guid>
      <description>&lt;p&gt;
In the Google Chrome, using WORDPRESS.COM, Whenever I mark a link with the command Ctrl+K as a link and press "Add a link", it takes like forever and disables any sort of clicks anywhere on the webpage. Screenshot it attached.
&lt;a class="ext-link" href="https://imgur.com/a/kzpSn"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://imgur.com/a/kzpSn&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://imgur.com/a/kzpSn"&gt;&lt;img src="https://imgur.com/a/kzpSn" alt="https://imgur.com/a/kzpSn" crossorigin="anonymous" title="https://imgur.com/a/kzpSn" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41815 (switch_to_blog() docs incorrectly state that autoloaded options aren't ...) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 12 Sep 2017 11:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41815#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41815#comment:5/1505216649364667</guid>
      <description>&lt;p&gt;
This ticket patch as patch of Virtual Contrib 2 core Meetup
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.youtube.com/watch?v=xoQkp_aZzfE"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=xoQkp_aZzfE&lt;/a&gt;
&lt;a class="ext-link" href="https://www.meetup.com/The-Ottawa-WordPress-Group/events/242253849/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.meetup.com/The-Ottawa-WordPress-Group/events/242253849/&lt;/a&gt;
&lt;a class="ext-link" href="https://www.meetup.com/WPToronto/events/243121890/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.meetup.com/WPToronto/events/243121890/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41860 (Unit test for wp_auth_check()) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 12 Sep 2017 11:44:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41860#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41860#comment:4/1505216640635877</guid>
      <description>&lt;p&gt;
This ticket patch as patch of Virtual Contrib 2 core Meetup
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.youtube.com/watch?v=xoQkp_aZzfE"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=xoQkp_aZzfE&lt;/a&gt;
&lt;a class="ext-link" href="https://www.meetup.com/The-Ottawa-WordPress-Group/events/242253849/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.meetup.com/The-Ottawa-WordPress-Group/events/242253849/&lt;/a&gt;
&lt;a class="ext-link" href="https://www.meetup.com/WPToronto/events/243121890/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.meetup.com/WPToronto/events/243121890/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41860 (Unit test for wp_auth_check()) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 12 Sep 2017 11:39:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41860#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41860#comment:3/1505216341607873</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41860 (Unit test for wp_auth_check()) updated</title>
      
        <dc:creator>pbearne</dc:creator>

      <pubDate>Tue, 12 Sep 2017 11:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41860#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41860#comment:2/1505216329059970</guid>
      <description>&lt;p&gt;
@birgire that looks better :-)
&lt;/p&gt;
&lt;p&gt;
Good catches
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41860.3.patch attached to Ticket #41860</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 12 Sep 2017 11:11:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41860/41860.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41860/41860.3.patch/1505214667041207</guid>
      <description>&lt;p&gt;
This should be the correct file ;-)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41860 (Unit test for wp_auth_check()) updated</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 12 Sep 2017 11:07:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41860#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41860#comment:1/1505214472131178</guid>
      <description>&lt;p&gt;
Hi @pbearne
&lt;/p&gt;
&lt;p&gt;
It looks good to me.
&lt;/p&gt;
&lt;p&gt;
Just two remarks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Missing @ticket annotation for each method? ... or is that only for bug referencing?
&lt;/li&gt;&lt;li&gt;as the modified global state can affect other test methods, shouldn't we restore it, if we modify it?
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I updated the patch with this in mind in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41860/41860.2.patch" title="Attachment '41860.2.patch' in Ticket #41860"&gt;41860.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41860/41860.2.patch" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41860.2.patch attached to Ticket #41860</title>
      
        <dc:creator>birgire</dc:creator>

      <pubDate>Tue, 12 Sep 2017 11:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41860/41860.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41860/41860.2.patch/1505214418152619</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #41026 (Copy &amp; Paste doesn't copy color styling issue in Wordpress 4.8) updated</title>
      
        <dc:creator>xdizzy12</dc:creator>

      <pubDate>Tue, 12 Sep 2017 08:16:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41026#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41026#comment:7/1505204198967839</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
For many users a major bug in the WYSIWYG functionality which is now very much broken.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34893,​39896,​31582,​35210,​37269,​37727 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 12 Sep 2017 07:02:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34893%2C39896%2C31582%2C35210%2C37269%2C37727</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34893%2C39896%2C31582%2C35210%2C37269%2C37727/1505199770286202</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41374" title="Customize: Add global notifications area.
* Displays an error ..."&gt;41374&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Add global notifications area.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Displays an error notification in the global area when a save attempt is rejected due to invalid settings. An error notification is also displayed when saving fails due to a network error or server error.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Notifications&lt;/code&gt; subclass of &lt;code&gt;wp.customize.Values&lt;/code&gt; to contain instances of &lt;code&gt;wp.customize.Notification&lt;/code&gt; and manage their rendering into a container.
&lt;/li&gt;&lt;li&gt;Exposes the global notification area as &lt;code&gt;wp.customize.notifications&lt;/code&gt; collection instance.
&lt;/li&gt;&lt;li&gt;Updates the &lt;code&gt;notifications&lt;/code&gt; object on &lt;code&gt;Control&lt;/code&gt; to use &lt;code&gt;Notifications&lt;/code&gt; rather than &lt;code&gt;Values&lt;/code&gt; and to re-use the rendering logic from the former. The old &lt;code&gt;Control#renderNotifications&lt;/code&gt; method is deprecated.
&lt;/li&gt;&lt;li&gt;Allows notifications to be dismissed by instantiating them with a &lt;code&gt;dismissible&lt;/code&gt; property.
&lt;/li&gt;&lt;li&gt;Allows &lt;code&gt;wp.customize.Notification&lt;/code&gt; to be extended with custom templates and &lt;code&gt;render&lt;/code&gt; functions.
&lt;/li&gt;&lt;li&gt;Triggers a &lt;code&gt;removed&lt;/code&gt; event on &lt;code&gt;wp.customize.Values&lt;/code&gt; instances _after_ a value has been removed from the collection.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props delawski, westonruter, karmatosed, celloexpressions, Fab1en, melchoyce, Kelderic, afercia, adamsilverstein.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39896" title="#39896: enhancement: Customizer: Allow users to Draft changes before Publishing (closed: fixed)"&gt;#39896&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35210" title="#35210: enhancement: Add notification area to Customizer (closed: fixed)"&gt;#35210&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31582" title="#31582: defect (bug): Catching PHP Fatal Errors on WordPress Theme Customizer (closed: fixed)"&gt;#31582&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37727" title="#37727: enhancement: Allow for customize control notifications to have extensible templates (closed: fixed)"&gt;#37727&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37269" title="#37269: enhancement: Introduce removed event for wp.customize.Values collection (closed: fixed)"&gt;#37269&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [41374]: Customize: Add global notifications area.  * Displays an error ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Tue, 12 Sep 2017 07:02:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41374/1505199769776967</guid>
      <description>&lt;p&gt;
Customize: Add global notifications area.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Displays an error notification in the global area when a save attempt is rejected due to invalid settings. An error notification is also displayed when saving fails due to a network error or server error.
&lt;/li&gt;&lt;li&gt;Introduces &lt;code&gt;wp.customize.Notifications&lt;/code&gt; subclass of &lt;code&gt;wp.customize.Values&lt;/code&gt; to contain instances of &lt;code&gt;wp.customize.Notification&lt;/code&gt; and manage their rendering into a container.
&lt;/li&gt;&lt;li&gt;Exposes the global notification area as &lt;code&gt;wp.customize.notifications&lt;/code&gt; collection instance.
&lt;/li&gt;&lt;li&gt;Updates the &lt;code&gt;notifications&lt;/code&gt; object on &lt;code&gt;Control&lt;/code&gt; to use &lt;code&gt;Notifications&lt;/code&gt; rather than &lt;code&gt;Values&lt;/code&gt; and to re-use the rendering logic from the former. The old &lt;code&gt;Control#renderNotifications&lt;/code&gt; method is deprecated.
&lt;/li&gt;&lt;li&gt;Allows notifications to be dismissed by instantiating them with a &lt;code&gt;dismissible&lt;/code&gt; property.
&lt;/li&gt;&lt;li&gt;Allows &lt;code&gt;wp.customize.Notification&lt;/code&gt; to be extended with custom templates and &lt;code&gt;render&lt;/code&gt; functions.
&lt;/li&gt;&lt;li&gt;Triggers a &lt;code&gt;removed&lt;/code&gt; event on &lt;code&gt;wp.customize.Values&lt;/code&gt; instances _after_ a value has been removed from the collection.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props delawski, westonruter, karmatosed, celloexpressions, Fab1en, melchoyce, Kelderic, afercia, adamsilverstein.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34893" title="#34893: enhancement: Improve Customizer setting validation model (closed: fixed)"&gt;#34893&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39896" title="#39896: enhancement: Customizer: Allow users to Draft changes before Publishing (closed: fixed)"&gt;#39896&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35210" title="#35210: enhancement: Add notification area to Customizer (closed: fixed)"&gt;#35210&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/31582" title="#31582: defect (bug): Catching PHP Fatal Errors on WordPress Theme Customizer (closed: fixed)"&gt;#31582&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37727" title="#37727: enhancement: Allow for customize control notifications to have extensible templates (closed: fixed)"&gt;#37727&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37269" title="#37269: enhancement: Introduce removed event for wp.customize.Values collection (closed: fixed)"&gt;#37269&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37629 (is_sticky filter hook) updated</title>
      
        <dc:creator>tdmalone</dc:creator>

      <pubDate>Tue, 12 Sep 2017 06:41:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37629#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37629#comment:1/1505198476497542</guid>
      <description>&lt;p&gt;
How about the &lt;code&gt;pre_option_sticky_posts&lt;/code&gt; filter?
&lt;/p&gt;
&lt;p&gt;
There are other dynamic filters available in &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/get_option/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;`get_option()`&lt;/a&gt; as well, which &lt;code&gt;is_sticky()&lt;/code&gt; calls.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41684 (Replace $wpdb-&gt;blogid with get_current_blog_id()) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Sep 2017 04:48:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41684#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41684#comment:7/1505191716724910</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for your work on this, @bnap00.
&lt;/p&gt;
&lt;p&gt;
In cases where value is used more than once in a function, and where extra clarity is not needed, I think it's safe to store locally for reuse (&lt;code&gt;$site_id = get_current_blog_id()&lt;/code&gt;) instead of calling the function multiple times. The best (maybe the only) example is probably &lt;code&gt;src/wp-admin/includes/upgrade.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
And, less important, &lt;code&gt;return $blogs[get_current_blog_id()]; &lt;/code&gt; can be updated to &lt;code&gt;return $blogs[ get_current_blog_id() ];&lt;/code&gt; for coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41285 (Remove $site_id and $public multisite globals that are no longer used) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Sep 2017 04:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41285#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41285#comment:8/1505190659233274</guid>
      <description>&lt;p&gt;
Thanks for the patch, @tejas5989!
&lt;/p&gt;
&lt;p&gt;
It looks like we need to be careful with &lt;code&gt;$site_id&lt;/code&gt;. &lt;a class="ext-link" href="https://github.com/Automattic/vip-go-mu-plugins/blob/98cdea08397ce37764ec50ced45dbc65b0c94501/vaultpress/vp-scanner.php#L78-L82"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;VaultPress is using it&lt;/a&gt; for something, likely in the WPCOM environment. If anyone has details on the safeness of removing that, please chime in. :)
&lt;/p&gt;
&lt;p&gt;
I've poked around quite a bit and can't find anyone using &lt;code&gt;$public&lt;/code&gt;. I feel pretty comfortable about removing that one, but will keep digging.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41285 (Remove $site_id and $public multisite globals that are no longer used) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 12 Sep 2017 04:27:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41285#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41285#comment:7/1505190463386624</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by jeremyfelt. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1505190462000020"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39419 (Explicitly globalize global variables in ms-settings.php) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Sep 2017 03:45:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39419#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39419#comment:11/1505187916339011</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like we can do a bit more with the patch. A couple notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We'll need documentation next to each global that describes its purpose.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;$table_prefix&lt;/code&gt; should be documented in &lt;code&gt;wp-settings.php&lt;/code&gt; instead of &lt;code&gt;ms-settings.php&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;We can remove &lt;code&gt;$site_id&lt;/code&gt; and &lt;code&gt;$public&lt;/code&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41285" title="#41285: defect (bug): Remove $site_id and $public multisite globals that are no longer used (closed: invalid)"&gt;#41285&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
@csloisel - if you are interested, please feel free to update the ticket with a new patch. I'm going to reassign the ticket to you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41815 (switch_to_blog() docs incorrectly state that autoloaded options aren't ...) closed</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Sep 2017 03:33:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41815#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41815#comment:4/1505187239481652</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/41373" title="Multisite: Update docs for `switch_to_blog()`.
As of [21403], ..."&gt;41373&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Multisite: Update docs for &lt;code&gt;switch_to_blog()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21403" title="Introduce wp_cache_switch_to_blog() and ..."&gt;[21403]&lt;/a&gt;, autoload options are switched along with the cache key prefix.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props stevepuddick.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41815" title="#41815: defect (bug): switch_to_blog() docs incorrectly state that autoloaded options aren't ... (closed: fixed)"&gt;#41815&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [41373]: Multisite: Update docs for `switch_to_blog()`.  As of [21403], ...</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Sep 2017 03:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/41373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/41373/1505187238964481</guid>
      <description>&lt;p&gt;
Multisite: Update docs for &lt;code&gt;switch_to_blog()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
As of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21403" title="Introduce wp_cache_switch_to_blog() and ..."&gt;[21403]&lt;/a&gt;, autoload options are switched along with the cache key prefix.
&lt;/p&gt;
&lt;p&gt;
Props stevepuddick.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/41815" title="#41815: defect (bug): switch_to_blog() docs incorrectly state that autoloaded options aren't ... (closed: fixed)"&gt;#41815&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #41815 (switch_to_blog() docs incorrectly state that autoloaded options aren't ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Sep 2017 03:32:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41815#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41815#comment:3/1505187167282193</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Good catch, as of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21403" title="Introduce wp_cache_switch_to_blog() and ..."&gt;[21403]&lt;/a&gt;, the blog ID was added to the cache key for multisite installs.
&lt;/p&gt;
&lt;p&gt;
Thanks for the patch @stevepuddick!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41806 (Use get_network_by_path in get_admin_users_for_domain) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Tue, 12 Sep 2017 03:13:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41806#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41806#comment:2/1505186015309502</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd prefer ignoring it. We shouldn't spend much time maintaining deprecated functions unless there's a noticeable benefit. Also, &lt;code&gt;WP_Network::get_by_path()&lt;/code&gt; and &lt;code&gt;get_network_by_path()&lt;/code&gt; are intended for bootstrap use. For something like this, I think a straight &lt;code&gt;get_networks()&lt;/code&gt; would make more sense. I'm going to suggest we close this as a wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37757 (Add `allowed_classes` to `maybe_unserialize` When WordPress is running ...) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Tue, 12 Sep 2017 01:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37757#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37757#comment:7/1505179159377995</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This would allow an arbitrary plugin or theme to basically 'reset' the allowed classes to accept all classes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not really tracking with that line of thinking. A plugin could also also &lt;code&gt;add_filter( 'has_cap', '__return_true' )&lt;/code&gt; or &lt;code&gt;add_filter( 'authenticate', function() { return get_user_by( 'id', 1 ); } )&lt;/code&gt;, but that doesn't mean we shouldn't have those filters. Is there something about this particular case that makes it more likely to be misused than those?
&lt;/p&gt;
&lt;p&gt;
I don't think of installed plugins and themes as being arbitrary, since they were intentionally chosen and installed, and by their nature have root access to WP and the database. A site owner has the responsibility to only install plugins that they trust with that access. The owner could also &lt;code&gt;add_filter( 'unserialization_options', 'whitelist_unserialize_classes', 100000000 )&lt;/code&gt;, if they wanted to override unwanted behavior from a plugin.
&lt;/p&gt;
&lt;p&gt;
There are 16 calls to &lt;code&gt;maybe_unserialize()&lt;/code&gt; across the codebase, so, if I understand it correctly, an approach like &lt;code&gt;unserialization_options_{$option}&lt;/code&gt; would require a different variation of the filter to be added and maintained for each of them, as opposed to just a single filter inside &lt;code&gt;maybe_unserialize()&lt;/code&gt; itself. Is that right? So far I'm not personally seeing a benefit to the approach that would outweigh that added complexity.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>