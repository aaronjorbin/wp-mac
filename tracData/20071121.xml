<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #5375 (wp_update_term_count cleans the cache for all taxonomies) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Nov 2007 23:26:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5375#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5375#comment:1/1195687594000000</guid>
      <description>&lt;p&gt;
wp_update_term_count() is passing term_taxonomy_ids to clean_term_cache(), not term_ids.  Taxonomy shouldn't be needed.  Passing a taxonomy to clean_term_cache() when tt_ids are passed in $ids will result in the wrong IDs being cleaned.  clean_term_cache() shouldn't clean any taxonomies not represented in the tt_ids being passed.  I think something else is broken if we're cleaning extra taxonomies.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Wed, 21 Nov 2007 23:07:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:13/1195686420000000</guid>
      <description>&lt;p&gt;
Another way is to leave &lt;code&gt;md5(md5(pass))&lt;/code&gt; in the cookie and store triple-md5-ed pass in the DB. Thus we cover the following cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;if the attacker gets the cookie it's almost unbreakable, just as it is now
&lt;/li&gt;&lt;li&gt;if the attacker gets the DB, she can't generate a cookie
&lt;/li&gt;&lt;li&gt;if the attacker gets the DB, she can't use rainbow to get the password
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
And the logic is pretty simple and foolproof. Of course one day the rainbow databases may include many md5 strings hashes, or even triple hashes, but I think it would suffice for now.
&lt;/p&gt;
&lt;p&gt;
The only disadvantage of all the techniques proposed above is that the cookie value cannot be generated using the information. Now this functionality is used to update the cookies, when the URL of the blog changes. The code is in &lt;a class="source" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/misc.php?rev=6025#L142"&gt;wp-admin/includes/misc.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/6025/trunk/wp-admin/includes/misc.php#L142" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>rss.php attached to Ticket #5378</title>
      
        <dc:creator>chmac</dc:creator>

      <pubDate>Wed, 21 Nov 2007 22:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5378/rss.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5378/rss.php/1195685881000000</guid>
      <description>&lt;p&gt;
Suggested replacement for wp-includes/rss.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5378 (Replace existing wp-includes/rss.php) created</title>
      
        <dc:creator>chmac</dc:creator>

      <pubDate>Wed, 21 Nov 2007 22:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5378/1195685280000000</guid>
      <description>&lt;p&gt;
The current rss.php file is somewhat out of date and doesn't include a number of functions. For example, it doesn't support multiple categories. I'll attach a modified version that is distributed with &lt;a class="ext-link" href="http://wpmudev.org/project/wp-autoblog"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;wp-autoblog&lt;/a&gt; which is significantly better. I haven't tested it extensively, but it does provide a number of useful features which the current file doesn't. Plus, it's a single-file, drop-in replacement.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5377 (Defer term counts during multiple inserts) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Wed, 21 Nov 2007 16:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5377#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5377#comment:3/1195664369000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Wed, 21 Nov 2007 13:51:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:12/1195653113000000</guid>
      <description>&lt;p&gt;
Eduardo Tongson posted a helpful &lt;a class="ext-link" href="http://lists.grok.org.uk/pipermail/full-disclosure/2007-November/058611.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;message to full-disclosure&lt;/a&gt; pointing to two papers on cookie authentication. I strongly recommend reading these before implementing any changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5377 (Defer term counts during multiple inserts) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 11:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5377#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5377#comment:2/1195644644000000</guid>
      <description>&lt;p&gt;
The second patch defers counting when importing a wxr file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>import-deferred-counts-r6340.patch attached to Ticket #5377</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 11:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5377/import-deferred-counts-r6340.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5377/import-deferred-counts-r6340.patch/1195644591000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5377 (Defer term counts during multiple inserts) updated</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 11:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5377#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5377#comment:1/1195644252000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>defer-taxonomy-counts-r6340.patch attached to Ticket #5377</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 11:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5377/defer-taxonomy-counts-r6340.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5377/defer-taxonomy-counts-r6340.patch/1195644203000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5377 (Defer term counts during multiple inserts) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 11:23:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5377/1195644185000000</guid>
      <description>&lt;p&gt;
wp_update_term_count() gets called any time a post is inserted with tags or categories.  It can cause several queries and cache invalidations per post insert, which adds up quickly during an import.
&lt;/p&gt;
&lt;p&gt;
The enclosed patch provides a wp_defer_term_counting() function that can be used to temporarily disable term counts when inserting multiple posts:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_defer_term_counting(true);
do_many_inserts();
wp_defer_term_counting(false);
&lt;/pre&gt;&lt;p&gt;
Any deferred counts will be automatically updated when wp_defer_term_counting(false) is called.  My testing shows this saves about 6500 queries on a 500 post import.
&lt;/p&gt;
&lt;p&gt;
The patch doesn't touch the import code yet, I wanted to post it for separate review first because it's probably useful elsewhere.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5376 (rules added via mod_rewrite_rules should be in IfModule section) created</title>
      
        <dc:creator>mastermind</dc:creator>

      <pubDate>Wed, 21 Nov 2007 10:25:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5376/1195640707000000</guid>
      <description>&lt;p&gt;
When mod_rewrite rules are added via the filter &lt;code&gt;mod_rewrite_rules&lt;/code&gt;, the rules should be inserted within the &lt;code&gt;&amp;lt;IfModule mod_rewrite.c&amp;gt;&amp;lt;/IfModule&amp;gt;&lt;/code&gt; tags. At the moment, this is not the case, instead they are appended outside this section.
&lt;/p&gt;
&lt;p&gt;
This shouldn't be a problem on most hosts. Still, it's ugly, and it should be easy to fix by putting the line &lt;code&gt;$rules .= "&amp;lt;/IfModule&amp;gt;\n";&lt;/code&gt; just before the return argument in the &lt;code&gt;function mod_rewrite_rules()&lt;/code&gt; in &lt;code&gt;wp-includes/rewrite.php&lt;/code&gt; (i.e. after the filters are applied).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset in tests [88]: import test fixes &amp; improvements</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 05:35:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/88/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/88/tests/1195623308492246</guid>
      <description>&lt;p&gt;
import test fixes &amp;amp; improvements
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>tax-term-count-fix-r6340.patch attached to Ticket #5375</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 02:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5375/tax-term-count-fix-r6340.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5375/tax-term-count-fix-r6340.patch/1195613957000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5375 (wp_update_term_count cleans the cache for all taxonomies) created</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Wed, 21 Nov 2007 02:58:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5375/1195613911000000</guid>
      <description>&lt;p&gt;
wp_update_term_count() doesn't pass the taxonomy name on to clean_term_cache().  This causes clean_term_cache() to run some unnecessary queries and clear the cache for all taxonomies, not just the one with the updated count.
&lt;/p&gt;
&lt;p&gt;
The enclosed patch fixes this.  It reduces import queries by a few percent and might help speed up post saving slightly.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5374 ("Write page/post" &gt;  "code" textarea is to right) created</title>
      
        <dc:creator>cacycleworks</dc:creator>

      <pubDate>Wed, 21 Nov 2007 02:40:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5374/1195612840000000</guid>
      <description>&lt;p&gt;
This seems similar to Ticket #s &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/3684"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;3684&lt;/a&gt; and &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/3540"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;3540&lt;/a&gt; however it's not exactly like them.
&lt;/p&gt;
&lt;p&gt;
On the "Write page/post" the "code" textarea is far to the right of the center working pane, so that a portion gets cut off. The box's left edge is perfectly aligned to the end of the "code" tool buttons. I thought it was a touch odd with the out-of-box install, but the problem made the page unusable when I applied a theme.
&lt;/p&gt;
&lt;p&gt;
I'm certain my methodology goes against the WP coding style/ ethos, as I found a quick CSS &amp;lt;DIV&amp;gt; hack that changed the behavior in wp-includes/general-template.php ...
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;original source:&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-includes/general-template.php
906   &amp;lt;/script&amp;gt;
907   &amp;lt;?php
908
909   $the_editor = apply_filters('the_editor', "&amp;lt;div&amp;gt;&amp;lt;textarea class='mceEditor' $rows cols='40' name='$id' tabindex='2' id='$id'&amp;gt;%s&amp;lt;/textarea&amp;gt;&amp;lt;/div&amp;gt;\n");
910   $the_editor_content = apply_filters('the_editor_content', $content);
911
912   printf($the_editor, $the_editor_content);
913
914   ?&amp;gt;
915   &amp;lt;script type="text/javascript"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
&lt;em&gt;a workaround I used which fixed the symptom:&lt;/em&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp-includes/general-template.php
907   &amp;lt;div style="float:left; width:100%;"&amp;gt;
908   &amp;lt;?php
909
910   $the_editor = apply_filters('the_editor', "&amp;lt;textarea class='mceEditor' $rows cols='40' name='$id' tabindex='2' id='$id'&amp;gt;%s&amp;lt;/textarea&amp;gt;\n");
911   $the_editor_content = apply_filters('the_editor_content', $content);
912
913   printf($the_editor, $the_editor_content);
914
915   ?&amp;gt;&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Note that I did try to change &lt;code&gt; apply_filters('the_editor', "&amp;lt;div&amp;gt;&amp;lt;textarea &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
to: &lt;code&gt; apply_filters('the_editor', "&amp;lt;div&lt;/code&gt; &lt;strong&gt;&lt;code&gt;style=\"float:left; width:100%;\"&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;&amp;gt;&amp;lt;textarea &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
and: &lt;code&gt; apply_filters('the_editor', "&amp;lt;div&lt;/code&gt; &lt;strong&gt;&lt;code&gt;style='float:left; width:100%;'&lt;/code&gt;&lt;/strong&gt; &lt;code&gt;&amp;gt;&amp;lt;textarea &lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
however these caused errors as print_r complained about the numbers of arguments passed. I did initially try only &lt;code&gt;'style='float:left'&lt;/code&gt; and that worked, but then the text area was only about 100px wide, so I wanted to add the width, too.
&lt;/p&gt;
&lt;p&gt;
I figure someone familiar with the code and the CSS of this area may be able to incorporate the change or implement a more simple solution. :)
&lt;/p&gt;
&lt;p&gt;
version: wordpress-2.3.1.tar.gz
OS: kubuntu gutsy 7.10 amd64
browser: FF
served by LAMP install on same machine.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5369 (jQuery should be used to fade alerts) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Wed, 21 Nov 2007 01:51:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5369#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5369#comment:2/1195609879000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2394 (Passwords are stored in an insecure un-salted form) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Wed, 21 Nov 2007 00:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2394#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2394#comment:16/1195604891000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>5373.diff attached to Ticket #5373</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Nov 2007 00:22:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5373/5373.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5373/5373.diff/1195604536000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [6342]: Debug backtrace for queries. Props tellyworth.  fixes #5218</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Nov 2007 00:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6342</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6342/1195604098344274</guid>
      <description>&lt;p&gt;
Debug backtrace for queries. Props tellyworth.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5218" title="#5218: enhancement: SAVEQUERIES: log calling function name (closed: fixed)"&gt;#5218&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5218 (SAVEQUERIES: log calling function name) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Nov 2007 00:14:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5218#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5218#comment:7/1195604098000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6342" title="Debug backtrace for queries. Props tellyworth.  fixes #5218"&gt;[6342]&lt;/a&gt;) Debug backtrace for queries. Props tellyworth.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5218" title="#5218: enhancement: SAVEQUERIES: log calling function name (closed: fixed)"&gt;#5218&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #3780 (gettext fails to determine byteorder on 64bit systems with php5.2.1) updated</title>
      
        <dc:creator>madsjensen</dc:creator>

      <pubDate>Tue, 20 Nov 2007 23:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3780#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3780#comment:25/1195603145000000</guid>
      <description>&lt;p&gt;
This works !!! thanks ... I have tested many other hacks but only this seems to works.
&lt;/p&gt;
&lt;p&gt;
Apache version        2.0.61
PHP version        5.2.4
MySQL version        5.0.45
Architecture        amd64
Operating system: FreeBSD
&lt;/p&gt;
&lt;p&gt;
Danish localization
&lt;/p&gt;
&lt;p&gt;
cheers mads
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3780#comment:23" title="Comment 23"&gt;nyuwec&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/3780#comment:21" title="Comment 21"&gt;nbachiyski&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could everybody, please, try the both patches and report if any is working.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have a gentoo linux on a 64 bit AMD processor, described in: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5356" title="#5356: defect (bug): gettext cannot parse mo files on 64bit systems (closed: duplicate)"&gt;#5356&lt;/a&gt;, fighting with the above described problem. PHP using PHP_INT_SIZE=8.
&lt;/p&gt;
&lt;p&gt;
Apply 3780.diff: FAILS.
Apply gettext-64-without-bitwise-ops.diff: WORKS!
&lt;/p&gt;
&lt;p&gt;
As I can see the gettext-64-without-bitwise-ops.diff patches the gettext to the format described in: &lt;a class="ext-link" href="http://wordpress.org/support/topic/63038"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/63038&lt;/a&gt; That patch also works on both 64bit and on 32 bit systems I can test!
&lt;/p&gt;
&lt;p&gt;
If only the 3780.diff applied to a 32 bit system it still works, applying the gettext-64-without-bitwise-ops.diff: still works!
&lt;/p&gt;
&lt;p&gt;
So this code in the gettext.php (starting at line 105) works for me on both 32 and 64 bit systems:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		// Caching can be turned off
		$this-&amp;gt;enable_cache = $enable_cache;
		// $MAGIC1 = (int)0x950412de; //bug in PHP 5.0.2, see https://savannah.nongnu.org/bugs/?func=detailitem&amp;amp;item_id=10565
		$MAGIC1 = (int) - 1794895138;
		// $MAGIC2 = (int)0xde120495; //bug
		$MAGIC2 = (int) - 569244523;
		// 64-bit fix
		$MAGIC3 = (int) 2500072158;
		$this-&amp;gt;STREAM = $Reader;
		$magic = $this-&amp;gt;readint();
		if ($magic == $MAGIC1 || $magic == $MAGIC3) { // to make sure it works for 64-bit platforms
			$this-&amp;gt;BYTEORDER = 0;
		} elseif ($magic == ($MAGIC2 &amp;amp; 0xFFFFFFFF)) {
			$this-&amp;gt;BYTEORDER = 1;
		} else {
			$this-&amp;gt;error = 1; // not MO file
			return false;
		}
&lt;/pre&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5372 (Wrong category on post insertion) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 20 Nov 2007 23:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5372#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5372#comment:1/1195600869000000</guid>
      <description>&lt;p&gt;
Current trunk adds an is_wp_error() check on $id.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://trac.wordpress.org/browser/trunk/wp-includes/taxonomy.php#L1141"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.wordpress.org/browser/trunk/wp-includes/taxonomy.php#L1141&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
2.3.1 lacks this check, which could explain the bad id.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Tue, 20 Nov 2007 23:18:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:11/1195600693000000</guid>
      <description>&lt;p&gt;
@dougal
&lt;/p&gt;
&lt;p&gt;
I didn't pick WordPress arbitrarily, or because it is popular, but rather because my WordPress blog (and probably a large number of others) was hacked using precisely this vulnerability.
&lt;/p&gt;
&lt;p&gt;
And no, just because an attacker has &lt;strong&gt;had&lt;/strong&gt; read access to your database does not mean you've lost the battle. Using security measures that have been standard since the 1970s (password hashing and salting), it is quite easy to recover from such compromises, by restoring the database. Then there is the well established principle of "defence in depth".
&lt;/p&gt;
&lt;p&gt;
There are a variety of ways an attacker could get read access to the database, while not being able to do anything more. For example, certain SQL injection flaws can only read but not modify tables, or the attacker could simply find a backup. Before I went public with this vulnerability, I trawled Google for people who had left database backups online and recommended that they remove the files.
&lt;/p&gt;
&lt;p&gt;
Regarding fixes, I think it is possible to improve the security without affecting user convenience at all. Salting passwords and hashing cookies in the right direction would be a good start. Protecting data on the wire (with SSL or otherwise) is nice, but a much less important issue than the one raised here and in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2394" title="#2394: defect (bug): Passwords are stored in an insecure un-salted form (closed: fixed)"&gt;#2394&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5371 (Smart quotes broken when surrounding links) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 20 Nov 2007 23:11:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5371#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5371#comment:1/1195600318000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5369 (jQuery should be used to fade alerts) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 20 Nov 2007 23:10:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5369#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5369#comment:1/1195600243000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>dougal</dc:creator>

      <pubDate>Tue, 20 Nov 2007 22:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:10/1195598992000000</guid>
      <description>&lt;p&gt;
On the one hand, this is yet another case of "Let's take some generic, lame, bad security scenario, slap the name 'WordPress' on it (for no apparent reason other than the fact that WP is popular), and release a security announcement!" As has already been noted, if an attacker already has read access to your database, then you've probably lost the battle, regardless of anything else.
&lt;/p&gt;
&lt;p&gt;
On the other hand, we could definitely stand to improve the security of the cookie authentication. Things are the way they are now to make it convenient for the user. But it's really hard to provide convenient persistent authentication in a secure fashion without some external method of security (e.g. SSL). We probably need to provide better support for SSL (when it's available), or lose the persistence in most cases. There might be situations where we can provide persistence more securely, but probably not in all server setups.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5373 (wp_list_pages - set 'hierarchical' to 0 on 'include') updated</title>
      
        <dc:creator>Kafkaesqui</dc:creator>

      <pubDate>Tue, 20 Nov 2007 22:06:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5373#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5373#comment:1/1195596403000000</guid>
      <description>&lt;p&gt;
Real world ref:
&lt;a class="ext-link" href="http://wordpress.org/support/topic/144403#post-651718"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/144403#post-651718&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5373 (wp_list_pages - set 'hierarchical' to 0 on 'include') created</title>
      
        <dc:creator>Kafkaesqui</dc:creator>

      <pubDate>Tue, 20 Nov 2007 22:00:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5373/1195596053000000</guid>
      <description>&lt;p&gt;
Using wp_list_pages() with the 'include' argument, the included Page(s) list will not appear if they have been assigned a parent.
&lt;/p&gt;
&lt;p&gt;
I traced this down to the 'hierarchical'
parameter, which is set to 1 by default. It should added to the "ignore" list of variables in the &lt;code&gt;if ( !empty($include) )&lt;/code&gt;  statement under the get_pages() function (wp-includes/post.php).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5372 (Wrong category on post insertion) created</title>
      
        <dc:creator>malaiac</dc:creator>

      <pubDate>Tue, 20 Nov 2007 21:41:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5372</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5372/1195594896000000</guid>
      <description>&lt;p&gt;
in wp-includes/taxonomy.php
&lt;/p&gt;
&lt;p&gt;
function = wp_set_object_terms
&lt;/p&gt;
&lt;p&gt;
around lines 1013,1014
&lt;/p&gt;
&lt;p&gt;
&amp;lt;?php
&lt;/p&gt;
&lt;p&gt;
$term_ids[] = $id&lt;a class="missing wiki"&gt;term_id?&lt;/a&gt;;
&lt;/p&gt;
&lt;p&gt;
$id = $id&lt;a class="missing wiki"&gt;term_taxonomy_id?&lt;/a&gt;;
&lt;/p&gt;
&lt;p&gt;
?&amp;gt;
&lt;/p&gt;
&lt;p&gt;
bug : when $id is not an array, it resets $id to 1 (i can't figure why)... and the post is assigned to the wrong (1) category, instead of the legit category.
&lt;/p&gt;
&lt;p&gt;
Happens when the post category is new (has just been created)
&lt;/p&gt;
&lt;p&gt;
Found when doing a custom import
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5365 (Still getting cookie error messages) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Tue, 20 Nov 2007 18:49:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5365#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5365#comment:2/1195584586000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I guess this issue is caused by a plugin but we still need to fix it in the core (2.4 first and then backport to branches/2.3).
&lt;/p&gt;
&lt;p&gt;
I have seen this with Ryan Duff's contact form plugin which sets up stuff in $_POST without checking for a POST request.
&lt;/p&gt;
&lt;p&gt;
Other plugins may do the same.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5371 (Smart quotes broken when surrounding links) created</title>
      
        <dc:creator>glesik</dc:creator>

      <pubDate>Tue, 20 Nov 2007 17:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5371</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5371/1195578414000000</guid>
      <description>&lt;p&gt;
if I put a link in quotes, e.g.
&lt;/p&gt;
&lt;pre class="wiki"&gt;"&amp;lt;a href="http://mysite.com"&amp;gt;mysite&amp;lt;/a&amp;gt;"
&lt;/pre&gt;&lt;p&gt;
WordPress doesn't put the proper 'curly' quote after the link text. So the result looks like “mysite“ instead of “mysite”.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5308 (continued cookie error after upgrade to 2.3.1) closed</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 20 Nov 2007 17:04:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5308#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5308#comment:7/1195578265000000</guid>
      <description>duplicate: &lt;p&gt;
Assuming this relates either to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5076" title="#5076: defect (bug): Cookie testing prevents login (closed: fixed)"&gt;#5076&lt;/a&gt; mentioned by pishmishy or &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5365" title="#5365: defect (bug): Still getting cookie error messages (closed: fixed)"&gt;#5365&lt;/a&gt;. Closing as duplicate.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Tue, 20 Nov 2007 16:37:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:9/1195576632000000</guid>
      <description>&lt;p&gt;
Question: Would not having the username and password in the cookie fix this and not break anything else?
&lt;/p&gt;
&lt;p&gt;
I'm not sure why sessions aren't used instead to store this information (always confused about this). Which you'll have another problem with session hijacking, but there are measures that can easily be used to correct that problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Tue, 20 Nov 2007 16:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:8/1195576340000000</guid>
      <description>&lt;p&gt;
In case I wasn't clear, I should point out that MD5 is &lt;strong&gt;not&lt;/strong&gt; the problem here. Switching to SHA-1 will leave Wordpress vulnerable to precisely the same issues. Although MD5 is vulnerable to collisions from carefully crafted input, this is not an issue for Wordpress's use.
&lt;/p&gt;
&lt;p&gt;
I think the optimum solution would be to use an existing scheme, and preferably a well-audited library for handling authentication and cookie management. Is there really nothing out these which does the job. I'm not a PHP programmer, but it seems that what Wordpress needs is a very common requirement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>jhodgdon</dc:creator>

      <pubDate>Tue, 20 Nov 2007 16:26:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:7/1195575991000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There are some interesting comments on secure hashing on this page: &lt;a class="ext-link" href="http://us.php.net/sha1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://us.php.net/sha1&lt;/a&gt; ; lots of links to alternatives for old versions of PHP, though none of them looks all that great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5370 (No confirmation on deleting posts in Manage, Posts) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Tue, 20 Nov 2007 16:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5370#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5370#comment:2/1195574434000000</guid>
      <description>&lt;p&gt;
Thank you!
&lt;/p&gt;
&lt;p&gt;
I thought of the plugins just after submitting the "bug". :-)
&lt;/p&gt;
&lt;p&gt;
I just disabled all of them, I reverted to the default theme, and also re-enabled the visual editor, but I'm not seeing any difference. The problem persists.
&lt;/p&gt;
&lt;p&gt;
The blog is this: &lt;a class="ext-link" href="http://op111.net/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://op111.net/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It is a test site, mostly vanilla, and the only changes I can remember making are in index.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/* Short and sweet */
define('WP_USE_THEMES', true);
require('./wp/wp-blog-header.php');
?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and also chaning the name of Blogroll in the database, from Blogroll to Links.
&lt;/p&gt;
&lt;p&gt;
I'll look into it again later.
&lt;/p&gt;
&lt;p&gt;
Greetings,
Demetris
&lt;/p&gt;
&lt;p&gt;
NOTE. The problem only appears when I click Delete in Manage, Posts, i.e. in: wp-admin/edit.php
&lt;/p&gt;
&lt;p&gt;
If I first click Edit (in Manage, Posts or in the post page) and then Delete, I DO get the confirmation dialog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Tue, 20 Nov 2007 14:53:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:6/1195570403000000</guid>
      <description>&lt;p&gt;
Also, the fact that 4.3 totally eclipsed 4.2 &lt;a class="ext-link" href="http://www.nexen.net/chiffres_cles/phpversion/17756-php_stats_evolution_for_october_2007.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;since 2005&lt;/a&gt;, and 4.2 stands at less than 5%.
&lt;/p&gt;
&lt;p&gt;
I'm just throwing this out there, but is it still worth it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Tue, 20 Nov 2007 14:47:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:5/1195570022000000</guid>
      <description>&lt;p&gt;
If someone is still running PHP 4.2, they have even more security issues to worry about than this one. I would suggest not caring for them based on that fact, but since I'm not a security expert, I'll leave it at that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5370 (No confirmation on deleting posts in Manage, Posts) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 20 Nov 2007 13:50:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5370#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5370#comment:1/1195566650000000</guid>
      <description>&lt;p&gt;
Demetris, thanks for the bug report, but I'm unable to reproduce this. I get a nice little confirmation dialog. Have you tried disabling all your plugins and trying again? A plugin may be interfering.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5087 (WYSIWYG Insert/Edit Image button issues) updated</title>
      
        <dc:creator>mzeecedric</dc:creator>

      <pubDate>Tue, 20 Nov 2007 10:59:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5087#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5087#comment:22/1195556379000000</guid>
      <description>&lt;p&gt;
Is there any patch or hack to this yet?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5370 (No confirmation on deleting posts in Manage, Posts) created</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Tue, 20 Nov 2007 10:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5370</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5370/1195555287000000</guid>
      <description>&lt;p&gt;
Posts are deleted immediately in Manage, Posts, without any confirmation dialog.
&lt;/p&gt;
&lt;p&gt;
Tried with two different accounts, admin and editor.
&lt;/p&gt;
&lt;p&gt;
Tested on Windows XP SP2 with Firefox 3, Opera 9.5 and Internet Explorer 6.
&lt;/p&gt;
&lt;p&gt;
I don't know what the previous behaviour was, before 2.3.1.
&lt;/p&gt;
&lt;p&gt;
Greetings,
Demetris
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5369 (jQuery should be used to fade alerts) created</title>
      
        <dc:creator>JeremyVisser</dc:creator>

      <pubDate>Tue, 20 Nov 2007 01:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5369</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5369/1195523419000000</guid>
      <description>&lt;p&gt;
jQuery has the ability to perform fades now, I believe. Doing fades with jQuery should simplify code, and would also give us the ability to drop &lt;code&gt;fat.js&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Additionally, FAT will only fade an alert if it contains an &lt;code&gt;id="something"&lt;/code&gt;, not just &lt;code&gt;class="fade alert"&lt;/code&gt;, which is a pain in the butt for debugging, IMO. jQuery doesn't suffer from that limitation.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Tue, 20 Nov 2007 01:07:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:4/1195520858000000</guid>
      <description>&lt;p&gt;
That scheme sounds good to me, but since we currently support PHP back to 4.2 we have to be aware of portability problems.  I don't think we can count on sha1() or the hash module, for example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5368 (It's not possible to replace the RSS parser (MagpieRSS) via a plugin) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Tue, 20 Nov 2007 01:04:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5368#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5368#comment:3/1195520683000000</guid>
      <description>invalid: &lt;p&gt;
Closing as invalid because you can in fact declare the functions in &lt;code&gt;wp-includes/rss.php&lt;/code&gt; with a plugin by using the &lt;code&gt;load_feed_engine&lt;/code&gt; hook. I was staring right at it but wasn't using it.
&lt;/p&gt;
&lt;p&gt;
Thanks technosailor!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5368 (It's not possible to replace the RSS parser (MagpieRSS) via a plugin) updated</title>
      
        <dc:creator>technosailor</dc:creator>

      <pubDate>Tue, 20 Nov 2007 00:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5368#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5368#comment:2/1195517907000000</guid>
      <description>&lt;p&gt;
On the flip side, I'm using a homemade plugin to replace magpie using the load_feed_engine hook perfectly fine...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5368 (It's not possible to replace the RSS parser (MagpieRSS) via a plugin) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Tue, 20 Nov 2007 00:10:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5368#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5368#comment:1/1195517457000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>