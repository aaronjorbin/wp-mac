<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #23911 (Post Format UI Bar always displays "Standard Post" instead of correct ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 21:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23911#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23911#comment:1/1364765654605430</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23911/23911.patch" title="Attachment '23911.patch' in Ticket #23911"&gt;23911.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23911/23911.patch" title="Download"&gt;​&lt;/a&gt; is not localizable.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23911/23911.2.patch" title="Attachment '23911.2.patch' in Ticket #23911"&gt;23911.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23911/23911.2.patch" title="Download"&gt;​&lt;/a&gt; copies the actual post format button title.
&lt;/p&gt;
&lt;p&gt;
Noticed some more i18n issues in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23843" title="Post Format UI.
* Icons
* Selection
* Prompt text
* Special fields
* ..."&gt;[23843]&lt;/a&gt;, added to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23503" title="#23503: defect (bug): Post Formats: i18n issues (closed: fixed)"&gt;#23503&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23503 (Post Formats: i18n issues) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 21:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23503#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23503#comment:1/1364765634224687</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23911.2.patch attached to Ticket #23911</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 21:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23911/23911.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23911/23911.2.patch/1364765173042342</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 18:33:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:132</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:132/1364754803553833</guid>
      <description>&lt;p&gt;
Thinking more about this: a post format is (should be?) something the user chooses once at the beginning of creating new post. What would be the user expectation if that post format is changed later while editing the post?
&lt;/p&gt;
&lt;p&gt;
Currently any extra fields "disappear" from the UI together with any data that the user has entered there. Shouldn't we be marking the extra fields as "unused". We can keep the current data for the current editing session so the user can change his mind and revert back, but not save it or remove it on saving the post or publishing as it is irrelevant.
&lt;/p&gt;
&lt;p&gt;
Also, would it make sense to "reduce" the formats UI after selecting a post format or when opening a post for editing. At the moment all the nice buttons are quite inviting to click which is good when starting a new post but doesn't make much sense when opening a post to edit. Perhaps we can hide them behind a "Change post format" button or similar. That would suggest the format is something to be decided once at starting the post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:37:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:131</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:131/1364751446440356</guid>
      <description>&lt;p&gt;
Agreed, it makes sense to keep all post formats meta on the main post when it's non-empty. However for revisions (incl. autosaves) we should probably be saving only the current post format meta when it has changed and is non-empty. Copying all existing meta to each revision doesn't make sense as we end up with a ton of identical meta values.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914#comment:3/1364751109670084</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
my bad, inline docs.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914#comment:2/1364750924020061</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 31 Mar 2013 17:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914#comment:1/1364750902401746</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can you re-upload the svn patch in the proper format with either a .diff or .patch extension?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 31 Mar 2013 16:39:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:130</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:130/1364747959457892</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19570#comment:128" title="Comment 128"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why not one meta field that keeps all needed data? What happens when more than one format meta is set on a post? Do we need to keep all unused meta for the main post in addition to having it in the revisions?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it makes sense to keep all non-empty post format meta.  That way switching to a different post format and back again doesn't have the appearance of losing data (even if that data could be retrieved from a revision).  They could all be put in one post meta field as a serialized array, but they you couldn't query based on them (such as "give me all quotes from xyz source" which could be easily accomplished with a postmeta query using _wp_format_quote_source that also specifies the quote term).  Still, adding empty keys seems pointless.
&lt;/p&gt;
&lt;p&gt;
As for what happens if more than one format meta is set...nothing.  The ones that aren't used for the current format are just...not used.  The format itself is determined based on a term from the post format taxonomy.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17626 (image_get_intermediate_size() may return wrong thumbnail size) updated</title>
      
        <dc:creator>carstenbach</dc:creator>

      <pubDate>Sun, 31 Mar 2013 16:26:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17626#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17626#comment:17/1364747172452434</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Sun, 31 Mar 2013 15:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:5/1364743897711736</guid>
      <description>&lt;p&gt;
I prefer '*_glyph' versus '*_mark' as I relate glyph to symbol (read: asterisk, hash, etc.) but either term is fine as they would both be used to accomplish the same goal of implementing this enhancement. I can also envision this to be used for much more than simply changing the character displayed so the naming convention may not be vitally important as is.
&lt;/p&gt;
&lt;p&gt;
As to an argument rather than a filter ... I would probably think to look for a filter first (as I actually did) versus digging into the function to find the specific argument to address, but again either method is fine as both work. The argument method may be more inline with the rest of the function code even if I actually would prefer the filter myself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 11:14:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:4/1364728474097023</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'd suggest &lt;code&gt;'comment_form_required_field_mark'&lt;/code&gt; as the filter name, seems more obvious: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23870/23870.patch" title="Attachment '23870.patch' in Ticket #23870"&gt;23870.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23870/23870.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This could also probably be an additional &lt;code&gt;comment_form()&lt;/code&gt; argument rather than a filter: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23870/23870.2.patch" title="Attachment '23870.2.patch' in Ticket #23870"&gt;23870.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23870/23870.2.patch" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23870.2.patch attached to Ticket #23870</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 11:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.2.patch/1364728309575464</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>23870.patch attached to Ticket #23870</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 31 Mar 2013 11:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23870/23870.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23870/23870.patch/1364728304086428</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>wp-dependencies-patch.txt attached to Ticket #23914</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 31 Mar 2013 06:01:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23914/wp-dependencies-patch.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23914/wp-dependencies-patch.txt/1364709709498350</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23914 (Document WP_Dependencies) created</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 31 Mar 2013 05:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23914</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23914/1364709522034047</guid>
      <description>&lt;p&gt;
The code in &lt;code&gt;wp-includes/class.wp-dependencies.php&lt;/code&gt; needs better documentation. Three confusions in particular:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;$args has a different meaning in WP_Dependencies and _WP_Dependency. In the first, it is a way to append query strings to the URL's. In the second it is a generic 5th parameter used by the API functions wp_register_*() and wp_enqueue_*(). In class WP_Styles it stands for $media. In class WP_Scripts it stands for $in_footer.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;&lt;code&gt;$handle&lt;/code&gt; sometimes means the registered &lt;code&gt;handle&lt;/code&gt;, and other times means &lt;code&gt;handle?args&lt;/code&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;&lt;code&gt;$group&lt;/code&gt; stands for page placement in WP_Styles (0=header, 1=footer), and is unused in WP_Scripts (false). But a prominent comment uses the word "Groups" to describe something entirely different, a registered item with dependencies but no src. In my proposed documentation I use the word "Alias" for this meaning. An example of an alias is in wp-includes/script-loader.php:
&lt;pre class="wiki"&gt;add( 'scriptaculous', false, array('scriptaculous-dragdrop', 'scriptaculous-slider', 'scriptaculous-controls') );
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Patch attached. No code changes.
&lt;/p&gt;
&lt;p&gt;
An example of contributors not knowing about Confusion 2 is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/13078" title="#13078: defect (bug): Make wp_register_style and wp_enqueue_style consistent (new)"&gt;#13078&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13078 (Make wp_register_style and wp_enqueue_style consistent) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sun, 31 Mar 2013 05:06:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13078#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13078#comment:6/1364706416708553</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16856 (When registering custom post type, menu_position isn't honored if it's ...) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16856#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16856#comment:15/1364698335092875</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16856 (When registering custom post type, menu_position isn't honored if it's ...) updated</title>
      
        <dc:creator>sc0ttkclark</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:52:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16856#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16856#comment:14/1364698320664439</guid>
      <description>&lt;p&gt;
This one is really bothering me, really wish it could handle floats like 20.1 etc.. which would be covered by is_numeric() vs a strict is_int() check.
&lt;/p&gt;
&lt;p&gt;
Can someone who could bless this for 3.7 explain what it would take for this ticket to move forward? Updated patch is one thing, but I wouldn't want to update it and then it not move forward.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23913.patch attached to Ticket #23913</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:35:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23913/23913.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23913/23913.patch/1364697347416285</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23913 (Revisions: remove the new _wp_last_revision_matches_current_post()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23913#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23913#comment:1/1364695618486851</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In 23913.patch​:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove _wp_last_revision_matches_current_post() and replace it with revision version check in &lt;code&gt;wp_list_post_revisions()&lt;/code&gt; (the only place it's used).
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23913 (Revisions: remove the new _wp_last_revision_matches_current_post()) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 02:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23913</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23913/1364695398280329</guid>
      <description>&lt;p&gt;
As the title. That function is not needed, can be replaced with simple revision version check as we add a copy of the current post while fixing revisions post_author fields.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Sun, 31 Mar 2013 01:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:43/1364693011176938</guid>
      <description>&lt;p&gt;
its the &lt;code&gt;if ( false === $meta_values )&lt;/code&gt; line I think
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23883]: Compress scripts/styles: 3.6-alpha-23883.</title>
      
        <dc:creator>bumpbot</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23883</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23883/1364691515013637</guid>
      <description>&lt;p&gt;
Compress scripts/styles: 3.6-alpha-23883.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:56:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:129</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:129/1364691408386245</guid>
      <description>&lt;p&gt;
I would describe that as "awful" - I doubt it was intended, I think we need to switch on format and only add format meta that is relevant
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20564 (Framework for storing revisions of Post Meta) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:54:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20564#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20564#comment:42/1364691297429458</guid>
      <description>&lt;p&gt;
Been seeing this lately in the postmeta table, post IDs 9212, 9213 and 9214 are revisions and all meta is empty (no values):
&lt;/p&gt;
&lt;pre class="wiki"&gt;4040 	9214 	_wp_format_video
4039 	9214 	_wp_format_audio
4038 	9214 	_wp_format_image
4037 	9214 	_wp_format_quote_source
4036 	9214 	_wp_format_quote
4035 	9214 	_wp_format_url
4032 	9213 	_wp_format_video
4031 	9213 	_wp_format_audio
4030 	9213 	_wp_format_image
4029 	9213 	_wp_format_quote_source
4028 	9213 	_wp_format_quote
4027 	9213 	_wp_format_url
4022 	9212 	_wp_format_video
4021 	9212 	_wp_format_audio
4020 	9212 	_wp_format_image
4019 	9212 	_wp_format_quote_source
4018 	9212 	_wp_format_quote
4017 	9212 	_wp_format_url
&lt;/pre&gt;&lt;p&gt;
Seems we are doing &lt;code&gt;isset()&lt;/code&gt; and should be doing &lt;code&gt;! empty()&lt;/code&gt; somewhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 31 Mar 2013 00:37:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:128</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:128/1364690251149185</guid>
      <description>&lt;p&gt;
I may be missing something but a post can only have one post format, right? Why do we have all the different formats related post meta:
&lt;/p&gt;
&lt;pre class="wiki"&gt;'_wp_format_url',
'_wp_format_quote',
'_wp_format_quote_source',
'_wp_format_image',
'_wp_format_gallery',
'_wp_format_audio',
'_wp_format_video',
&lt;/pre&gt;&lt;p&gt;
And then we update them &lt;a href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/post.php#L205"&gt;all at once&lt;/a&gt; and add all on every revision and autosave? That would make the postmeta table "explode" :)
&lt;/p&gt;
&lt;p&gt;
Why not one meta field that keeps all needed data? What happens when more than one format meta is set on a post? Do we need to keep all unused meta for the main post in addition to having it in the revisions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23216 (Create "WP Heartbeat" API) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 30 Mar 2013 23:32:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23216#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23216#comment:54/1364686333544975</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23882" title="Heartbeat: improve setting the errorstate, add ajaxurl to the settings ..."&gt;23882&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Heartbeat: improve setting the errorstate, add ajaxurl to the settings object when loading on the front-end, some code cleanup, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23216" title="#23216: task (blessed): Create &amp;#34;WP Heartbeat&amp;#34; API (closed: fixed)"&gt;#23216&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23882]: Heartbeat: improve setting the errorstate, add ajaxurl to the settings ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 30 Mar 2013 23:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23882</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23882/1364686332616094</guid>
      <description>&lt;p&gt;
Heartbeat: improve setting the errorstate, add ajaxurl to the settings object when loading on the front-end, some code cleanup, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23216" title="#23216: task (blessed): Create &amp;#34;WP Heartbeat&amp;#34; API (closed: fixed)"&gt;#23216&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #13078 (Make wp_register_style and wp_enqueue_style consistent) updated</title>
      
        <dc:creator>kitchin</dc:creator>

      <pubDate>Sat, 30 Mar 2013 23:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13078#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13078#comment:5/1364685104499858</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="missing ticket" title="ticket comment does not exist"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yeah both functions should be propagated for theme and plugin authors. A user does not expect a difference in handling the URLs here, so this should be streamlined.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The URL parameter is treated the same. The '?' parameter at issue is in the handle, not the URL. The intended use (documented anywhere?) seems to be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_register_style( 'mystyle', plugins_url( 'style.css', __FILE__) );
wp_enqueue_style( 'mystyle?foo=bar');
&lt;/pre&gt;&lt;p&gt;
or
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_style( 'mystyle?foo=bar', plugins_url( 'style.css', __FILE__) );
&lt;/pre&gt;&lt;p&gt;
Either way produces:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;link rel='stylesheet' id='mystyle'
 href='http://domain.tld/wp-content/plugins/my/style.css?ver=3.5.1&amp;amp;#038;foo=bar'
 type='text/css' media='all' /&amp;gt;
&lt;/pre&gt;&lt;p&gt;
However this does not work at all:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_register_style( 'mystyle?foo=bar', plugins_url( 'style.css', __FILE__) );
wp_enqueue_style( 'mystyle?foo=bar');
&lt;/pre&gt;&lt;p&gt;
Changing this behavior would break any themes or styles using it.
&lt;/p&gt;
&lt;p&gt;
Also when reading the code, be sure to note the difference between "$handle" and "$_handle". Function wp_enqueue_style() only strips the '?' argument so it can register the plain handle. Then it enqueues the handle with the argument. That's why the first two snippets above are equivalent.
&lt;/p&gt;
&lt;p&gt;
Finally, if anyone rewrites the code, it would be great to comment the two different uses of &lt;strong&gt;$args&lt;/strong&gt; in &lt;code&gt;class.wp-dependencies.php&lt;/code&gt;. The one we're talking about is part of the &lt;code&gt;WP_Dependencies&lt;/code&gt; class. But the &lt;code&gt;$args&lt;/code&gt; in the &lt;code&gt;_WP_Dependency&lt;/code&gt; class is unrelated and serves as a placeholder for the fifth parameter in the functions used by authors, &lt;code&gt;wp_register_*()&lt;/code&gt; and &lt;code&gt;wp_enqueue_*()&lt;/code&gt;. So it's &lt;strong&gt;$media&lt;/strong&gt; in &lt;code&gt;functions.wp-styles.php&lt;/code&gt; and &lt;strong&gt;$in_footer&lt;/strong&gt; in &lt;code&gt;functions.wp-scripts.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I'll add a note to Codex about the first two snippets above.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18614 (post_type_archive_title doesn't work when tax_query is added to wp_query) updated</title>
      
        <dc:creator>styledev</dc:creator>

      <pubDate>Sat, 30 Mar 2013 21:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18614#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18614#comment:26/1364680525129201</guid>
      <description>&lt;p&gt;
Since this is taking a while to get fixed here is a function you can put in your functions.php file to turn of the is_tax on these types of queries. &lt;a class="ext-link" href="https://gist.github.com/styledev/5278527"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/styledev/5278527&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23912 (Add Composer package description) created</title>
      
        <dc:creator>Rarst</dc:creator>

      <pubDate>Sat, 30 Mar 2013 20:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23912</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23912/1364676256109027</guid>
      <description>&lt;p&gt;
WordPress, as software download, lacks machine-readable source of meta information about it. For PHP projects de-facto standard for such is Composer via &lt;code&gt;composer.json&lt;/code&gt; file in project root.
&lt;/p&gt;
&lt;p&gt;
While WP currently doesn't use or need Composer dependency functionality, it will help provide information to developers and improve WP usage &lt;em&gt;as&lt;/em&gt; dependency in projects that make use of Composer.
&lt;/p&gt;
&lt;p&gt;
Suggested &lt;code&gt;composer.json&lt;/code&gt; draft:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{
	"name"        : "wordpress/wordpress",
	"description" : "WordPress is web software you can use to create a beautiful website or blog.",
	"keywords"    : ["blog", "cms"],
	"homepage"    : "http://wordpress.org/",
	"license"     : "GPL-2.0+",
	"authors"     : [
		{
			"name"    : "WordPress Community",
			"homepage": "http://wordpress.org/about/"
		}
	],
	"support"     : {
		"issues": "http://core.trac.wordpress.org/",
		"forum" : "http://wordpress.org/support/",
		"wiki"  : "http://codex.wordpress.org/",
		"irc"   : "irc://irc.freenode.net/wordpress",
		"source": "http://core.trac.wordpress.org/browser"
	},
	"require"     : {
		"php": "&amp;gt;=5.2.4"
	}
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Sat, 30 Mar 2013 20:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:127</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:127/1364674457099941</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The "version" field should be used for the version where an issue was first raised -- in this case, 3.3
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Sat, 30 Mar 2013 20:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:3/1364673641639670</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23870#comment:1" title="Comment 1"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This seems to work for me:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To reach a point closer to my OP I would change your snippet to the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function required_fields_glyph_23870() {
	$glyph = apply_filters( 'comment_required_glyph_23870', '*' );
	return $glyph;
}
function change_required_fields_glyph_23870( $defaults ) {
	$defaults['fields']['author']     = str_replace( '*', required_fields_glyph_23870(), $defaults['fields']['author'] );
	$defaults['fields']['email']      = str_replace( '*', required_fields_glyph_23870(), $defaults['fields']['email'] );
	$defaults['comment_notes_before'] = str_replace( '*', required_fields_glyph_23870(), $defaults['comment_notes_before'] );
	return $defaults;
}
add_filter( 'comment_form_defaults', 'change_required_fields_glyph_23870' );
&lt;/pre&gt;&lt;p&gt;
Usable but still not as clean as having the filter in core. Perhaps this can be cleaned up but that would be continuing even further off the idea I was suggesting originally of adding one line (the filtered variable) and modifying three others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>nickbohle</dc:creator>

      <pubDate>Sat, 30 Mar 2013 19:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:126</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:126/1364672533894022</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
I really like the idea of pulling the post format more into the focus of the user. By playing around with the new post format selector, I may have found a small bug:
&lt;/p&gt;
&lt;p&gt;
I guess that the main icon of the "new post" page should change according to the selected post format. In WordPress 3.6-alpha &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23875" title="Compress scripts/styles: 3.6-alpha-23875."&gt;r23875&lt;/a&gt; this is not the case, actually only half icons or even different icons are shown. It seems to me the sprite position / reference to the post format icon is not correct.
&lt;/p&gt;
&lt;p&gt;
Side note( I am not sure if it is relevant), I was testing on a notebook with Retina display.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sat, 30 Mar 2013 19:41:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:29/1364672516477581</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23880#comment:27" title="Comment 27"&gt;bpetty&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This doesn't have to be in core to be efficient and optimized, you can cache this in your plugin too. In fact, there's really nothing that needs to be cached, just check the PHP version like you would anywhere else you needed a fallback because a new PHP function wasn't available to you.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, then please elaborate how you'd efficiently do that check. Especially compared to the efficiency reading the header comment.
&lt;/p&gt;
&lt;p&gt;
Or even better: Tell me (or show with code) how you'd do the check for the following plugin.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Plugin: Foo
 * Description: Bar
 */
namespace foo;
// Some functionality
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23911.patch attached to Ticket #23911</title>
      
        <dc:creator>c3mdigital</dc:creator>

      <pubDate>Sat, 30 Mar 2013 19:29:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23911/23911.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23911/23911.patch/1364671763363040</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23911 (Post Format UI Bar always displays "Standard Post" instead of correct ...) created</title>
      
        <dc:creator>c3mdigital</dc:creator>

      <pubDate>Sat, 30 Mar 2013 19:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23911</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23911/1364671485450785</guid>
      <description>&lt;p&gt;
When loading an existing post with a selected post format the format in the selector bar UI will always display "Standard Post" until the various formats are hovered over which it will then default back to the correct format after hovering.
&lt;/p&gt;
&lt;p&gt;
This patch checks for the current post format and fills the .post-format-tip span with the correct current post format in post-formats.js
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23295 (Improved login expiration warning) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 30 Mar 2013 19:17:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23295#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23295#comment:41/1364671029910040</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23881" title="Logged out warnings: by default, load only in the admin. Plugins and ..."&gt;23881&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Logged out warnings: by default, load only in the admin. Plugins and themes can load on the front-end when needed, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23295" title="#23295: task (blessed): Improved login expiration warning (closed: fixed)"&gt;#23295&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23881]: Logged out warnings: by default, load only in the admin. Plugins and ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 30 Mar 2013 19:17:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23881</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23881/1364671029131871</guid>
      <description>&lt;p&gt;
Logged out warnings: by default, load only in the admin. Plugins and themes can load on the front-end when needed, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23295" title="#23295: task (blessed): Improved login expiration warning (closed: fixed)"&gt;#23295&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23625 (Add function to extract or parse chat as structured data) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 30 Mar 2013 17:04:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23625#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23625#comment:39/1364663049813957</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/23880" title="Avoid PHP notice on blank chat lines. props SergeyBiryukov. see #23625"&gt;23880&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Avoid PHP notice on blank chat lines. props SergeyBiryukov. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23625" title="#23625: feature request: Add function to extract or parse chat as structured data (closed: fixed)"&gt;#23625&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [23880]: Avoid PHP notice on blank chat lines. props SergeyBiryukov. see #23625</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sat, 30 Mar 2013 17:04:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/23880</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/23880/1364663048725893</guid>
      <description>&lt;p&gt;
Avoid PHP notice on blank chat lines. props SergeyBiryukov. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23625" title="#23625: feature request: Add function to extract or parse chat as structured data (closed: fixed)"&gt;#23625&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #23907 (Scandinavian ligatures transcribed wrong in remove_accents()) updated</title>
      
        <dc:creator>dnusim</dc:creator>

      <pubDate>Sat, 30 Mar 2013 16:32:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23907#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23907#comment:4/1364661128406049</guid>
      <description>&lt;p&gt;
Yes, these characters are letters in their own right (though they have developed as semi-ligatures). Precisely because Å is a letter in it's own right, and not simply 'A' with a diacritical mark, it makes more sense to transliterate to 'aa' instead of 'a'. The same goes for 'Ø': Since it is a character by itself, and not merely an 'O' with a dash through it, it should be translitereted properly – that is to 'oe'.
&lt;/p&gt;
&lt;p&gt;
Correct scandinavian alphabetization would treat 'aa' like 'å', because they denote the same letter, so that "Knut Ås" and "Knut Aass" would appear next to each other in places like phonebooks. (It is perhaps more common in Denmark than in Norway to use old fashioned spelling of names with 'aa' in them.)
&lt;/p&gt;
&lt;p&gt;
English wikipedia has a couple of sections on the subject in &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/%C3%85#Transcription"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;their article on the letter Å&lt;/a&gt;.
Airlines recommend transliterating to 'aa' and 'oe' in &lt;a class="ext-link" href="http://www.dagbladet.no/2011/12/30/tema/reise/reiseeksperter/forbrukerrettigheter/19494227/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this article&lt;/a&gt; (norwegian).
&lt;/p&gt;
&lt;p&gt;
(Norwegian speaking myself, btw.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 30 Mar 2013 16:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:28/1364660729426680</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23880#comment:25" title="Comment 25"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Performance wise, doing it in Core would be better. Instead of every plugin checking itself, repeating the check over and over again, Core should do it all at once, giving the following benefits:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Saves plugin developers time
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
There are many things people request be included in core that get denied yet all of them save developers time, so not a winning justification.  Believe me, I've had many requests denied.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Provides a means of warning users before they go through the hassle of uploading and installing the plugin
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Is that really that such a hassle? Not ideal I know, but so bad we have to fix it?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Can be cached in the database, so no checks may be needed at all if the plugins don't change version
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Version checks are very lightweight.  If the plugin is disabled when it's found to be on PHP 5.2.x then the check is not done over and over. Or the plugin can cache in the database too.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To force every plugin to do this check and have an unnecessary level of indirection is to encourage bad design, and demonstrates poor architecture that's fixable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There any many other things plugins are forced to do on their own, many of which I'd like to see implemented, so line forms in the rear if "bad design" is the justification. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's all this talk about plugins in wordpress.org should be 5.2 compatible just as WordPress is, but:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Nobody actually justified this
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Maybe you missed it or misread but &lt;a class="ext-link" href="http://wordpress.org/about/stats/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;62.3% of the current user base in on 5.2.x&lt;/a&gt;. There's the justification.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Not all WordPress installs run the latest version, and thus not all installs have the 5.2 min req yet ( though this is a problem in its own right )
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Currently 2.3% are on &amp;lt; 5.2.x so while a problem it's a small problem and IMO many of those sites have likely not been touched in years thus not likely to run into a problem with plugins.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Everyone talks about WordPress being more than just a blog, if that's the case we should ask responsibly and professionally and expand our scope beyond the limited usecase of a new user loading plugins off of wordpress.org. A lot of client work goes on, and we can't anticipate all the end cases, so lets take care of the basics and at least fail gracefully rather than showing a white screen of death in various cases
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
If you are doing client work aren't you operating a higher level?  Can't you validate this on your own? Don't you build sites on a test domain before deploying to a live server? Don't you make sure that your clients are running on PHP 5.3 or later?  For professional work, I think this is a non-issue.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;NOTE:&lt;/strong&gt; I have absolutely zero authority over what gets included in core so I'm just voicing my opinion, same as you are voicing yours.  One thing that might help would be for you to explain why this has caused such an issue for you?  Clearly you are passionate about it, maybe there is some explicit real world problem it as caused for you (vs. an abstract problem) that if we understood we could better appreciate?
&lt;/p&gt;
&lt;p&gt;
P.S. If your request was to instead have WordPress.org scan the files for PHP 5.3 features and automatically mark them as PHP 5.3 required I would think it a better idea.  By adding a Minimum PHP required tag you would be creating a trinary state: know good, known bad and unknown. If you can't make it known good vs. known bad I think this proposal has less value.
&lt;/p&gt;
&lt;p&gt;
P.P.S. This is likely my last comment on this because I don't actually feel that strongly about it, it just seemed that nobody else was mentioning the perspective I was seeing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Sat, 30 Mar 2013 16:22:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:27/1364660526427572</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23880#comment:25" title="Comment 25"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Performance wise, doing it in Core would be better. Instead of every plugin checking itself, repeating the check over and over again, Core should do it all at once
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This doesn't have to be in core to be efficient and optimized, you can cache this in your plugin too. In fact, there's really nothing that needs to be cached, just check the PHP version like you would anywhere else you needed a fallback because a new PHP function wasn't available to you.
&lt;/p&gt;
&lt;p&gt;
Besides, in reality, most plugins do support PHP 5.2. It's actually a rare few that have decided they can't handle the same requirements that WordPress has chosen to work with.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Nobody actually justified this
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Nobody has to. WordPress has chosen to support PHP 5.2 because that's what most people are still using, and it's not hard to support. That choice was already made for you when you decided to write a plugin for WordPress. If you want to call your plugin a "WordPress plugin", it should support the same requirements WordPress supports. Core shouldn't have to go out of it's way to ensure that plugins can implement additional server requirements that WordPress doesn't require itself. That's the very definition of an "extended" feature - which should be implemented in your plugin.
&lt;/p&gt;
&lt;p&gt;
No one is saying you have to support 5.2, just that WordPress does (and would obviously recommend you do too), and as such, this isn't something we actually want to implement in core because we don't want to encourage plugin developers like yourself to write incompatible plugins if you don't actually have to.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Not all WordPress installs run the latest version, and thus not all installs have the 5.2 min req yet ( though this is a problem in its own right )
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
That, on the other hand, is exactly why plugins do have "minimum WP version required" and "tested up to" header fields. It should be enough for users of your plugin to know that they have the correct version of WordPress, and not have to look up anything else (since they should have already done so when they installed or upgraded WordPress).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Not everyone is aware fo what PHP is capable of and which version introduced what. We're not all experts, and developer X may have used namespaces not knowing they required 5.3
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
On the contrary, all PHP developers are very aware of this, and if not, they shouldn't be calling themselves a PHP developer. In fact, every single feature and function in PHP very clearly states what version of PHP it is available in from the documentation.
&lt;/p&gt;
&lt;p&gt;
Besides, if they don't know, how are they supposed to know that they should be marking their plugin as 5.3+ anyway?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23910 (Ajaxify All Admin Dashboard Widgets) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sat, 30 Mar 2013 16:11:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23910#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23910#comment:1/1364659894928205</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23910 (Ajaxify All Admin Dashboard Widgets) created</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sat, 30 Mar 2013 16:10:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23910</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23910/1364659828929160</guid>
      <description>&lt;p&gt;
Hi, It seems that the back-end dashboard page needs some updating, This ticket about some widgets needs to be done using AJAX
&lt;/p&gt;
&lt;p&gt;
WP Right Now &lt;br /&gt;
WP Network Right Now &lt;br /&gt;
WP Quick Press &lt;br /&gt;
WP Recent Drafts &lt;br /&gt;
WP Recent Comments &lt;br /&gt;
... etc
&lt;/p&gt;
&lt;p&gt;
When the widget is hidden from the dashboard by "Screen Options" the widget content shouldn't be fetched only if the user show the widget from the "Scrren Options" .
&lt;/p&gt;
&lt;p&gt;
This is possible using AJAX , and It will increase the performance !
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23909 (Widgets settings loaded and instances registered unnecessarily) created</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sat, 30 Mar 2013 16:02:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23909</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23909/1364659325027928</guid>
      <description>&lt;p&gt;
The settings for all registered multi-widgets get loaded with each request in &lt;code&gt;widgets_init&lt;/code&gt;, and all widgets get registered even if they are never used (e.g. inactive ones). As the total number of inactive widgets tend to grow over time, the result is slower and slower page loads across all of a WordPress install.
&lt;/p&gt;
&lt;p&gt;
Ideally only the widgets returned by &lt;code&gt;wp_get_sidebars_widget()&lt;/code&gt; would only get loaded and registered, though this would have an impact on how the widgets in the Customizer work.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sat, 30 Mar 2013 15:56:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:26/1364659005831028</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sat, 30 Mar 2013 15:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:125</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:125/1364658926405921</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19744 (Custom post types doesn't receive pingbacks - url_to_postid() doesn't ...) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sat, 30 Mar 2013 15:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19744#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19744#comment:19/1364658910929268</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23862 (Clean up old WP-&gt;public_query_vars and WP-&gt;private_query_vars) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sat, 30 Mar 2013 15:54:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23862#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23862#comment:3/1364658858271494</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23907 (Scandinavian ligatures transcribed wrong in remove_accents()) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Sat, 30 Mar 2013 15:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23907#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23907#comment:3/1364658616708448</guid>
      <description>&lt;p&gt;
Æ (æ) Ø (ø) Å (å) are &lt;strong&gt;letters&lt;/strong&gt; in the Norwegian, Danish and (Å in Finnish) alphabets. They are not ligatures in these languages.
&lt;/p&gt;
&lt;p&gt;
The letter Ø (ø) does not exist in the Swedish alphabet. Swedish (and Finnish) uses Ö (ö), which is a separate letter written as an accented character. Swedish has Æ, Ö and Å in its alphabet.
&lt;/p&gt;
&lt;p&gt;
I would prefer these transcriptions:
Æ -&amp;gt; ae (like a ligature)
Ø -&amp;gt; o (like for ö, not to oe)
Å -&amp;gt; a (not aa)
&lt;/p&gt;
&lt;p&gt;
Transcribing to a two letter sequence, like for a true ligature, gives longer strings and no better readability, imo. (Norwegian speaking)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Sat, 30 Mar 2013 15:32:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:25/1364657553240587</guid>
      <description>&lt;p&gt;
WordPress loads the first 8Kib bytes of the plugin file as it would a text file, so the syntax of the file is irrelevant as far as the PHP version used is concerned at that point because no PHP parsing or execution of the plugin has taken place yet. How else do you explain how WordPress knows to execute the file with the header in and not the other files?
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach ( (array) $plugins as $plugin ) {
    if ( '.' == dirname($plugin) ) {
        if( $data = get_plugin_data(WP_PLUGIN_DIR . '/' . $plugin) ) {
&lt;/pre&gt;&lt;p&gt;
And get_plugin_data() does uses get_file_data() which does:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    // Pull only the first 8kiB of the file in.
    $file_data = fread( $fp, 8192 );
&lt;/pre&gt;&lt;p&gt;
Performance wise, doing it in Core would be better. Instead of every plugin checking itself, repeating the check over and over again, Core should do it all at once, giving the following benefits:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Saves plugin developers time
&lt;/li&gt;&lt;li&gt;Provides a means of warning users before they go through the hassle of uploading and installing the plugin
&lt;/li&gt;&lt;li&gt;Can be cached in the database, so no checks may be needed at all if the plugins don't change version
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
To force every plugin to do this check and have an unnecessary level of indirection is to encourage bad design, and demonstrates poor architecture that's fixable.
&lt;/p&gt;
&lt;p&gt;
There's all this talk about plugins in wordpress.org should be 5.2 compatible just as WordPress is, but:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Nobody actually justified this
&lt;/li&gt;&lt;li&gt;Not all WordPress plugins come from the repository
&lt;/li&gt;&lt;li&gt;Not all WordPress installs run the latest version, and thus not all installs have the 5.2 min req yet ( though this is a problem in its own right )
&lt;/li&gt;&lt;li&gt;Not everyone is aware fo what PHP is capable of and which version introduced what. We're not all experts, and developer X may have used namespaces not knowing they required 5.3
&lt;/li&gt;&lt;li&gt;Everyone talks about WordPress being more than just a blog, if that's the case we should ask responsibly and professionally and expand our scope beyond the limited usecase of a new user loading plugins off of wordpress.org. A lot of client work goes on, and we can't anticipate all the end cases, so lets take care of the basics and at least fail gracefully rather than showing a white screen of death in various cases
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Implementation Notes&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
We already define the minimum requirement for WordPress here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/version.php#L28"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/version.php#L28&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We check for WordPress min PHP&amp;amp;MySQL version on install here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-admin/install.php#L150"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-admin/install.php#L150&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and there's a function to do the same here:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/load.php#L103"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/load.php#L103&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Here is the check wp_get_active_and_valid_plugins that determines the plugins to load:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/master/wp-includes/load.php#L479"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/master/wp-includes/load.php#L479&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The first step would be to modify the get_plugin_data function to look for the minimum version:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/1c816c795b0030a91f9bfa212da894575b090db6/wp-admin/includes/plugin.php#L72"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/1c816c795b0030a91f9bfa212da894575b090db6/wp-admin/includes/plugin.php#L72&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is called here in the plugins page:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/55fb020e84fd46bd56668facd1f3a74be1776cbf/wp-admin/plugins.php#L238"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/55fb020e84fd46bd56668facd1f3a74be1776cbf/wp-admin/plugins.php#L238&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and here in the upgrader class:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/9890179bce40df7ede22ca18e5b5900825915221/wp-admin/includes/class-wp-upgrader.php#L496"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/9890179bce40df7ede22ca18e5b5900825915221/wp-admin/includes/class-wp-upgrader.php#L496&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
We'll want to change wp_get_active_and_valid_plugins to check the PHP version accordingly and remove such plugins, preventing white screens of death, failures to load, and other issues that could arise.
&lt;/p&gt;
&lt;p&gt;
The rest is informing the user via a notice bar if an active plugin is removed in the above check, disabling the activate link, and adding a note in the plugin listings that the plugin hasn't met its minimum requirements. It could even have the activate link still available, albeit with the warning showing
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23880 (Minimum PHP version in Plugins) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sat, 30 Mar 2013 14:51:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23880#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23880#comment:24/1364655087344790</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23880#comment:23" title="Comment 23"&gt;bpetty&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regardless of what API WordPress provides for doing this, you obviously still need to make sure your main plugin file is fully syntax compatible with 5.2, and can't include anything 5.3+ until after checking requirements, so you still have nearly the same amount of work you would have to do no matter what.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not true. You can add comments like &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/**/&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; you add the &lt;code&gt;namespace foo&lt;/code&gt; statement. So checking this from core would be much easier as your plugin could be fully PHP 5.3+ compliant and wouldn't require a bootstrap file.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>cais</dc:creator>

      <pubDate>Sat, 30 Mar 2013 14:48:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:2/1364654883429268</guid>
      <description>&lt;p&gt;
Yes, that seems to work just fine. Although I still think the introduction of a direct filter for the glyph would be more inline with how the function was written and using a &lt;code&gt;str_replace&lt;/code&gt; kluge doesn't look as pretty as would a more obviously named filter.
&lt;/p&gt;
&lt;p&gt;
Either way, this solution or adding the filter would work (thus the reason for type: enhancement). Thanks for the snippet!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23908 (wp_nav_menu generates wrong classes for li elements) created</title>
      
        <dc:creator>anyname2</dc:creator>

      <pubDate>Sat, 30 Mar 2013 13:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23908</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23908/1364650966430138</guid>
      <description>&lt;p&gt;
Function &lt;strong&gt;wp_nav_menu&lt;/strong&gt; generates 2 different classes for &lt;strong&gt;&amp;lt;li&amp;gt;&lt;/strong&gt; with exactly the same meaning: e.g. &lt;strong&gt;current-page-parent&lt;/strong&gt; and &lt;strong&gt;current_page_parent&lt;/strong&gt;. It sometimes generates one of them, but sometimes both.
&lt;/p&gt;
&lt;p&gt;
Also this coresponds to &lt;strong&gt;current-page-ancestor&lt;/strong&gt; and &lt;strong&gt;current_page_ancestor&lt;/strong&gt; classes.
&lt;/p&gt;
&lt;p&gt;
I think there should be one of them, but to preserve compatibility with older websites, it is better to leave both but generate both at the same time, so that user could use either "&lt;strong&gt;-&lt;/strong&gt;" or "&lt;strong&gt;_&lt;/strong&gt;" as separators.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23867 (add_rewrite_endpoint causes front-page.php template to be ignored) updated</title>
      
        <dc:creator>lumpysimon</dc:creator>

      <pubDate>Sat, 30 Mar 2013 11:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23867#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23867#comment:3/1364644266849327</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;pre class="wiki"&gt;add_action( 'init', 'my_add_rewrite_endpoint' );
function my_add_rewrite_endpoint() {
	add_rewrite_endpoint( 'nl', EP_ALL );
}
&lt;/pre&gt;&lt;p&gt;
that's pretty much it. if there's a front-page.php template in the theme folder it then gets ignored when visiting &lt;a class="ext-link" href="http://domain.com/nl"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://domain.com/nl&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23907 (Scandinavian ligatures transcribed wrong in remove_accents()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 11:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23907#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23907#comment:2/1364642717985381</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23897 (Revisions UI: RTL support) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 30 Mar 2013 10:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23897#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23897#comment:4/1364638842572160</guid>
      <description>&lt;p&gt;
The string will be handled in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23901" title="#23901: defect (bug): Revisions: revisions.js clean up (closed: fixed)"&gt;#23901&lt;/a&gt;. So use this ticket only for the CSS parts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On a side note we should really fix the id selectors and class names in revision.php
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Definitely! But after the main things works. And in a separated ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23907 (Scandinavian ligatures transcribed wrong in remove_accents()) updated</title>
      
        <dc:creator>dnusim</dc:creator>

      <pubDate>Sat, 30 Mar 2013 08:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23907#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23907#comment:1/1364633637071420</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23907.patch attached to Ticket #23907</title>
      
        <dc:creator>dnusim</dc:creator>

      <pubDate>Sat, 30 Mar 2013 08:53:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23907/23907.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23907/23907.patch/1364633616206047</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23907 (Scandinavian ligatures transcribed wrong in remove_accents()) created</title>
      
        <dc:creator>dnusim</dc:creator>

      <pubDate>Sat, 30 Mar 2013 08:52:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23907</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23907/1364633576534120</guid>
      <description>&lt;p&gt;
remove_accents() is transcribing old scandinavian ligatures wrong: ÆØÅøå should be transcribed as 'Ae', 'Oe', 'Aa', 'oe' and 'aa' respectively.
&lt;/p&gt;
&lt;p&gt;
Transcribation rules are the same in swedish, danish and norwegian. In trunk they are transcribed as 'AE', 'O', 'A', 'o', 'a'.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4739" title="#4739: defect (bug): Some icelandic/Norwegian/Danish letters do not work in page slugs (closed: duplicate)"&gt;#4739&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9591" title="#9591: defect (bug): remove_accents() improvements for i18n permalinks (closed: fixed)"&gt;#9591&lt;/a&gt; for history.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4739 (Some icelandic/Norwegian/Danish letters do not work in page slugs) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 08:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4739#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4739#comment:26/1364632359606623</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4739#comment:25" title="Comment 25"&gt;dnusim&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9591" title="#9591: defect (bug): remove_accents() improvements for i18n permalinks (closed: fixed)"&gt;#9591&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That ticket was closed on a completed milestone, please open a new one if there's still a problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #4739,​9591 batch updated</title>
      
        <dc:creator>dnusim</dc:creator>

      <pubDate>Sat, 30 Mar 2013 08:26:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=4739%2C9591</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=4739%2C9591/1364631983747124</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4739" title="#4739: defect (bug): Some icelandic/Norwegian/Danish letters do not work in page slugs (closed: duplicate)"&gt;#4739&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #23905 (Add_post_meta strips slashes) updated</title>
      
        <dc:creator>kovshenin</dc:creator>

      <pubDate>Sat, 30 Mar 2013 05:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23905#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23905#comment:3/1364621521233822</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23897 (Revisions UI: RTL support) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 30 Mar 2013 05:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23897#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23897#comment:3/1364621258938237</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23897 (Revisions UI: RTL support) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 30 Mar 2013 05:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23897#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23897#comment:2/1364620565089133</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23897/23897.2.diff" title="Attachment '23897.2.diff' in Ticket #23897"&gt;23897.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23897/23897.2.diff" title="Download"&gt;​&lt;/a&gt; takes a stab at adding some context, also combined two strings into one.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;EDIT: Disregard this patch and carry on from 23897.diff per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23897#comment:4" title="Comment 4"&gt;comment:4&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
On a side note we should really fix the id selectors and class names in revision.php to bring them more in line with recommendations in the &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/coding-standards/css/#selectors"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;CSS Coding Standards&lt;/a&gt;. Selectors like &lt;code&gt;removedandadded&lt;/code&gt;, &lt;code&gt;backbonerevisionsinteract&lt;/code&gt;, etc aren't going to cut it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23897.2.diff attached to Ticket #23897</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 30 Mar 2013 05:07:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23897/23897.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23897/23897.2.diff/1364620043978130</guid>
      <description>&lt;p&gt;
adds some context
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23155 (Fire update_blog_public action from update_blog_status()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 04:22:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23155#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23155#comment:5/1364617344529547</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23449 (Refactor customizer accordion to work anywhere in admin) updated</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Sat, 30 Mar 2013 03:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23449#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23449#comment:22/1364615036267976</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed 23449.4.diff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23449.5.diff attached to Ticket #23449</title>
      
        <dc:creator>JustinSainton</dc:creator>

      <pubDate>Sat, 30 Mar 2013 03:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23449/23449.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23449/23449.5.diff/1364615016192508</guid>
      <description>&lt;p&gt;
Refresh
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #23178,​23859 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 03:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=23178%2C23859</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=23178%2C23859/1364614791852181</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23178" title="#23178: defect (bug): Screen reader shortcut links generated by _render() from WP_Admin_Bar ... (closed: fixed)"&gt;#23178&lt;/a&gt; has a patch.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #23862 (Clean up old WP-&gt;public_query_vars and WP-&gt;private_query_vars) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 03:06:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23862#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23862#comment:2/1364612783912532</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23867 (add_rewrite_endpoint causes front-page.php template to be ignored) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 03:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23867#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23867#comment:2/1364612476578914</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could you provide a piece of code to reproduce the issue?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23449 (Refactor customizer accordion to work anywhere in admin) reopened</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 02:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23449#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23449#comment:21/1364611769764637</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23449/23449.4.diff" title="Attachment '23449.4.diff' in Ticket #23449"&gt;23449.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23449/23449.4.diff" title="Download"&gt;​&lt;/a&gt; still seems valid. Needs a refresh.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #23857 (Delete User Should Delete Comments) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 02:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23857#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23857#comment:1/1364611534559264</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15644" title="#15644: defect (bug): When deleting a user, corresponding comment user IDs aren't reset (closed: wontfix)"&gt;#15644&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19710" title="#19710: enhancement: Deleting a user does not update Comments. (closed: duplicate)"&gt;#19710&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23870 (Filter Glyph for Comment Required Fields) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 02:42:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23870#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23870#comment:1/1364611333101989</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
This glyph is not easily manipulated without having to essentially over-write the entire &lt;code&gt;comment_form()&lt;/code&gt; function.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This seems to work for me:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function change_required_fields_glyph_23870( $defaults ) {
	$defaults['fields']['author']     = str_replace( '*', '#', $defaults['fields']['author'] );
	$defaults['fields']['email']      = str_replace( '*', '#', $defaults['fields']['email'] );
	$defaults['comment_notes_before'] = str_replace( '*', '#', $defaults['comment_notes_before'] );
	return $defaults;
}
add_filter( 'comment_form_defaults', 'change_required_fields_glyph_23870' );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23868 (Twenty Eleven: Multiple search forms should increment ids) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 02:13:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23868#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23868#comment:3/1364609616869569</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23906 (post_save callback is passed post instead of revision, breaking back-compat) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 02:07:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23906#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23906#comment:1/1364609242517921</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19744 (Custom post types doesn't receive pingbacks - url_to_postid() doesn't ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 02:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19744#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19744#comment:18/1364609157920214</guid>
      <description>&lt;p&gt;
We could probably use &lt;code&gt;get_post_types()&lt;/code&gt; instead of &lt;code&gt;$GLOBALS['wp_post_types']&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Could also create a separate ticket to replace &lt;code&gt;$GLOBALS['wp_post_types']&lt;/code&gt; with &lt;code&gt;get_post_types()&lt;/code&gt; and &lt;code&gt;$GLOBALS['wp_taxonomies']&lt;/code&gt; with &lt;code&gt;get_taxonomies()&lt;/code&gt; in &lt;code&gt;WP::parse_request()&lt;/code&gt; and &lt;code&gt;WP_Query::parse_tax_query()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23906 (post_save callback is passed post instead of revision, breaking back-compat) created</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Sat, 30 Mar 2013 02:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23906</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23906/1364608997869591</guid>
      <description>&lt;p&gt;
Running the following snippet on 3.5.1 and 3.6-alpha-23875 produces different results, and the change can break backwards compatibility for plugins that have logic that targets the revision rather than the canonical post.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function print_revision_parent( $revision_id, $revision ) {
	var_dump( $revision-&amp;gt;post_type );
	var_dump( $revision-&amp;gt;post_parent );
	wp_die( '' );
}
add_action( 'save_post', 'print_revision_parent', 10, 2 );
&lt;/pre&gt;&lt;p&gt;
In 3.5.1, the output is:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'revision' (length=8)
int 324
&lt;/pre&gt;&lt;p&gt;
In 3.6-alpha-23875, it's:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string 'post' (length=4)
int 0
&lt;/pre&gt;&lt;p&gt;
I wasn't able to find the changeset that caused it, but I'm assuming it's related to all the work around revisions for 3.6.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14634 (Add $args to get_the_terms()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 01:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14634#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14634#comment:7/1364607266430852</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23905 (Add_post_meta strips slashes) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 01:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23905#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23905#comment:2/1364607041129112</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6240" title="Forget about 4th update() param -- only accept named array.  Roll out ..."&gt;[6240]&lt;/a&gt;. Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5249" title="Stripslashes post meta values before handing off to add_post_meta.  ..."&gt;[5249]&lt;/a&gt; (for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4028" title="#4028: defect (bug): Importing WXR breaks serialized postmeta value (closed: fixed)"&gt;#4028&lt;/a&gt;), &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/14755" title="add_metadata() already stripslashes &amp;amp; unserializes metadata, fixes #12860"&gt;[14755]&lt;/a&gt; (for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12860" title="#12860: defect (bug): Stripslashes_deep doesn't handle arrays of objects well. (closed: fixed)"&gt;#12860&lt;/a&gt;), &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12416" title="#12416: defect (bug): *_option() and *_transient() functions should expect unslashed data. (closed: fixed)"&gt;#12416&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21767" title="#21767: task (blessed): Remove stripslashes from API functions (closed: fixed)"&gt;#21767&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23883 (Add Media 'Title' box does not update html title attribute) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 01:05:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23883#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23883#comment:2/1364605539875766</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
This bug is reproduced when going to the edit page / post screen, and clicking the "Add Media" button. If a Title is saved for the image, it will not create a title html attribute when navigating to the site.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was an intentional change in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22409" title="Stop adding title attributes to images (in the old media uploader). ..."&gt;[22409]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22747" title="Stop inserting title attributes for images inserted into the editor by ..."&gt;[22747]&lt;/a&gt; (for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18984" title="#18984: defect (bug): Accessibility: Title attribute should not be added to image markup by ... (closed: fixed)"&gt;#18984&lt;/a&gt;).
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, if the 'Edit Image' dialog is opened for the image that was just inserted into the post / page, the Title can be saved from this screen and it will add the title attribute in the html.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This was specifically mentioned in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18984#comment:40" title="Comment 40 for #18984: defect (bug): Accessibility: Title attribute should not be added to image markup by ... (closed: fixed)"&gt;ticket:18984:40&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19570 (Post Formats: admin UI + fallbacks for themes that don't support them) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:40:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19570#comment:124</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19570#comment:124/1364604007114054</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/19570/19570.27.diff" title="Attachment '19570.27.diff' in Ticket #19570"&gt;19570.27.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/19570/19570.27.diff" title="Download"&gt;​&lt;/a&gt; adds alt attribute for the selected image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19570.27.diff attached to Ticket #19570</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:38:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19570/19570.27.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19570/19570.27.diff/1364603881072405</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23625 (Add function to extract or parse chat as structured data) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:28:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23625#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23625#comment:38/1364603325774278</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23625#comment:35" title="Comment 35"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Managed to get:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Notice: Undefined offset: 1 in .../trunk/wp-includes/post-formats.php on line 534&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed with your example. Appears to be caused by an empty line between the messages.
&lt;/p&gt;
&lt;p&gt;
In current trunk, the notice comes from line 527: &lt;br /&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/post-formats.php?rev=23876#L527"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/post-formats.php?rev=23876#L527&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23625/23625.13.diff" title="Attachment '23625.13.diff' in Ticket #23625"&gt;23625.13.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23625/23625.13.diff" title="Download"&gt;​&lt;/a&gt; fixes this for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23905 (Add_post_meta strips slashes) updated</title>
      
        <dc:creator>Looimaster</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:28:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23905#comment:1/1364603307056750</guid>
      <description>&lt;p&gt;
I think that it happens in:
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/meta.php#L0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/tags/3.5.1/wp-includes/meta.php#L0&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When it performs:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// expected_slashed ($meta_key)
46 $meta_key = stripslashes($meta_key);
47 $meta_value = stripslashes_deep($meta_value);
48 $meta_value = sanitize_meta( $meta_key, $meta_value, $meta_type );
&lt;/pre&gt;&lt;p&gt;
So, it is there for a reason but it is conflicting my strings by removing slashes from them... Shouldn't a string always remain an intact string?
&lt;/p&gt;
&lt;p&gt;
And one more update: if you go over to Posts &amp;gt; Add New and put this code there and hit "Update" then slashes will not be stripped. It works differently for sure.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23625.13.diff attached to Ticket #23625</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23625/23625.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23625/23625.13.diff/1364603269363091</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23897 (Revisions UI: RTL support) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23897#comment:1/1364602998675377</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23897/23897.diff" title="Attachment '23897.diff' in Ticket #23897"&gt;23897.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23897/23897.diff" title="Download"&gt;​&lt;/a&gt; is a first pass on fixing floats. I didn't touch the translatable strings yet. With this patch:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://f.cl.ly/items/3w113R2P0D0y1Z1d2x1J/Screen%20Shot%202013-03-29%20at%206.18.30%20PM.png"&gt;&lt;img src="http://f.cl.ly/items/3w113R2P0D0y1Z1d2x1J/Screen%20Shot%202013-03-29%20at%206.18.30%20PM.png" alt="http://f.cl.ly/items/3w113R2P0D0y1Z1d2x1J/Screen%20Shot%202013-03-29%20at%206.18.30%20PM.png" crossorigin="anonymous" title="http://f.cl.ly/items/3w113R2P0D0y1Z1d2x1J/Screen%20Shot%202013-03-29%20at%206.18.30%20PM.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, I'd argue that it's not worth it/possible/realistic to change directions in the UI in terms of Previous/Next in the comparison view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>23897.diff attached to Ticket #23897</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:22:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23897/23897.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23897/23897.diff/1364602932078848</guid>
      <description>&lt;p&gt;
First-pass.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #23905 (Add_post_meta strips slashes) created</title>
      
        <dc:creator>Looimaster</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:20:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23905/1364602829694025</guid>
      <description>&lt;p&gt;
Let's assume that JS generated an object that I want to store in custom field. Everything goes smooth when I convert it back and forth from JS to PHP and from PHP to JS (using json_encode() and json_decode()) and it even works when I do update_post_meta() manually in my file but this stops working as soon as WordPress Importer tries to load it from XML file (in XML it's still valid object) using add_post_meta().
&lt;/p&gt;
&lt;p&gt;
This is the code from importer from the bottom of process_posts() function:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $key ) {
	// export gets meta straight from the DB so could have a serialized string
	if ( ! $value )
		$value = maybe_unserialize( $meta['value'] );
		$value = '{"0":{"type":"text","text":""},"1":{"type":"html","html":"&amp;lt;div class=\"cssclass\" style=\"margin-top: 3em;\"&amp;gt;&amp;lt;p&amp;gt;here goes html&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;","css_class":""}}'; // I added this for test purposes
	add_post_meta( $post_id, $key, $value );
	do_action( 'import_post_meta', $post_id, $key, $value );
&lt;/pre&gt;&lt;p&gt;
This is an object:
&lt;/p&gt;
&lt;pre class="wiki"&gt;{"0":{"type":"text","text":""},"1":{"type":"html","html":"&amp;lt;div class=\"cssclass\" style=\"margin-top: 3em;\"&amp;gt;&amp;lt;p&amp;gt;here goes html&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;","css_class":""}}
&lt;/pre&gt;&lt;p&gt;
It strips slashes from HTML tags (before each double quote sign) from objects that are stored as strings. I bet it shouldn't happen. Why would add_post_meta strip slashes or anything if XML explicitly says:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;wp:meta_value&amp;gt;&amp;lt;![CDATA[{"0":{"type":"text","text":""},"1":{"type":"html","html":"&amp;lt;div class=\"cssclass\" style=\"margin-top: 3em;\"&amp;gt;&amp;lt;p&amp;gt;here goes html&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;","css_class":""}}]]&amp;gt;&amp;lt;/wp:meta_value&amp;gt;
&lt;/pre&gt;&lt;p&gt;
which in XML language is considered "use as is. Do not modify". I think that it might be a bug.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23625 (Add function to extract or parse chat as structured data) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:16:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23625#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23625#comment:37/1364602574958676</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/23625/23625.12.diff" title="Attachment '23625.12.diff' in Ticket #23625"&gt;23625.12.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/23625/23625.12.diff" title="Download"&gt;​&lt;/a&gt; fixes an issue with some UTF-8 characters (previously &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12499" title="Fix sanitize_text_field() issue with some UTF-8 characters, fixes ..."&gt;[12499]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19866" title="Use [\r\n\t ], not [\s], to prevent issues with some UTF-8 characters. ..."&gt;[19866]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21862" title="Split tag names by [\r\n\t ] rather than \s to avoid that character ..."&gt;[21862]&lt;/a&gt;, and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22306" title="Split by [\r\n\t ] rather than \s to avoid UTF-8 issues. props ..."&gt;[22306]&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a chat post, paste this into content:
&lt;pre class="wiki"&gt;Scott: Hey, let's chat!
Роман: No.
&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;View the post. The second message will not be recognized properly:
&lt;pre class="wiki"&gt;Scott:
Hey, let's chat! Роман: No.
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>23625.12.diff attached to Ticket #23625</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 30 Mar 2013 00:11:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/23625/23625.12.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/23625/23625.12.diff/1364602264379151</guid>
      <description></description>
      <category>attachment</category>
    </item>
   </channel>
</rss>