<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #16968 (Plugin Search for empty string can hide all Plugins) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:37:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16968#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16968#comment:2/1301096259375053</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:19/1301096234868298</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
As for unit testing,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Very simple to do. Filter the ::test() methods to select which transport you wish to test, test, remove filters, rinse repeat.
&lt;/p&gt;
&lt;p&gt;
My suggestion here is to push the changes needed through &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16870" title="#16870: enhancement: consider disabling HTTP transport after multiple failed requests (closed: maybelater)"&gt;#16870&lt;/a&gt;, specifically, when a transport fails, progressivly mark it as unusable.
&lt;/p&gt;
&lt;p&gt;
The alternative is to adding an extra parameter similar to the block of code &lt;a class="ext-link" href="http://core.trac.wordpress.org/attachment/ticket/8622/8622.4.diff"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;starting line 206 in this patch&lt;/a&gt;, which would be purely for a plugins usage.
&lt;/p&gt;
&lt;p&gt;
In core we're striving for a HTTP API which just works, plugin authors shouldn't have to do anything more than request it, and handle an error condition being returned, but at the same time, it shouldn't cause unnecessary slowdowns for the user, failing over to the next transport over and over on a plugin's request should not be possible.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16968.diff attached to Ticket #16968</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16968/16968.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16968/16968.diff/1301096234594096</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:8/1301095885070585</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:7" title="Comment 7"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Come again? Perhaps you should review the existing code and this patch again. If I was unclear in the summary, then please ask where you need further information.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then perhaps you should point out where I'm wrong in my comment.
&lt;/p&gt;
&lt;p&gt;
I've read the ticket, I've read the patch, and other than consolidating the Arguement processing int oa separate class, I cannot see any benefits.
&lt;/p&gt;
&lt;p&gt;
After reading your comment, The only other option I could understand is that you're suggesting moving all the processing to a separate class so that you can call WP_HTTP directly OR call a subclass directly?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:5/1301095498175560</guid>
      <description>&lt;p&gt;
makes a bit more sense there.
&lt;/p&gt;
&lt;p&gt;
Also related, and I'll probably fix at the same time: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16483" title="#16483: defect (bug): Visibility: password-protected exposes multiple pages (new)"&gt;#16483&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>greuben</dc:creator>

      <pubDate>Fri, 25 Mar 2011 23:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:2/1301094936153869</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Can't reproduce it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16511 (Incorrect dependencies for some jQuery UI components) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 22:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16511#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16511#comment:1/1301093942422230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) reopened</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Fri, 25 Mar 2011 22:47:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:18/1301093278979622</guid>
      <description>&lt;p&gt;
The point of this and the patch was not getTransport() and postTransport(), it was the ability to allow fail-over to a transport when the transport itself has a problem. True, given the small amount who have problems with, it is safe to ignore this as a personal problem for those edge cases. However, it is nothing to add support for this since it has always been the original intention for even having the foreach in the code.
&lt;/p&gt;
&lt;p&gt;
As for unit testing, well, you can't really unit test WP_Test::request(), functional testing or acceptance testing, sure, however unit testing has to be done for each individual class and well, they weren't written for unit testing in mind, so you are still going to have issues unit testing the transports.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) reopened</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Fri, 25 Mar 2011 22:23:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:7/1301091781797723</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13777#comment:5" title="Comment 5"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see any need for this.
&lt;/p&gt;
&lt;p&gt;
The WP_HTTP::request() method takes care of the incoming request and can handle processing the args. The processing of the args in each transport is specific to it's needs, to abstract the minimal code duplication will introduce more code and increase the churn rate of the existing code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Come again? Perhaps you should review the existing code and this patch again. If I was unclear in the summary, then please ask where you need further information.
&lt;/p&gt;
&lt;p&gt;
Perhaps you should look at the transports again and see how they in fact do not duplicate the code in WP_HTTP::request() since it would lengthen the methods unnecessary. It has been a point of contention that you really can't call individual transports, because the majority of the processing in WP_HTTP::request() is not found in any of the other transports.
&lt;/p&gt;
&lt;p&gt;
I mean, I'm not going to update the patch, so if you wish to close it for that reason, then go ahead. However, it is advised in case someone else wishes to support this to give proper explanation. Also performance will be negligible or at least normal overhead given using objects.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;TL;DR&lt;/strong&gt; Reopening ticket because reason for closing is not supported by fact.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:52:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:4/1301089969976895</guid>
      <description>&lt;p&gt;
For a work-around, wrapping the #wrapper in another element, you can set:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;div style="
position: fixed;
top: 28px;
bottom: 0pt;
left: 0pt;
right: 0pt;
overflow: auto;"&amp;gt;
&amp;lt;div id="wrapper"&amp;gt;...&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Or using an id and a style element via the callback for &lt;code&gt;add_theme_support( 'admin-bar', array( 'callback' =&amp;gt; 'admin_bar_bump_callback') );&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16917 (Bump PHP and MySQL required versions) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:21:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16917#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16917#comment:8/1301088076372840</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17562" title="Bump readme system requirements. props duck_, see #16917."&gt;[17562]&lt;/a&gt;) Bump readme system requirements. props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16917" title="#16917: defect (bug): Bump PHP and MySQL required versions (closed: fixed)"&gt;#16917&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17562]: Bump readme system requirements. props duck_, see #16917.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:21:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17562</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17562/1301088074282493</guid>
      <description>&lt;p&gt;
Bump readme system requirements. props duck_, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16917" title="#16917: defect (bug): Bump PHP and MySQL required versions (closed: fixed)"&gt;#16917&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16917 (Bump PHP and MySQL required versions) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:19:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16917#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16917#comment:7/1301087989227580</guid>
      <description>&lt;p&gt;
Readme "System Requirements" need bumping too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16917.readme.diff attached to Ticket #16917</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:19:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16917/16917.readme.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16917/16917.readme.diff/1301087965978474</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [17561]: Bump update-core and readme for 3.2.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17561/1301087686100324</guid>
      <description>&lt;p&gt;
Bump update-core and readme for 3.2.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset [17560]: 3.1.1 beta 1.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 21:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17560/1301087618544025</guid>
      <description>&lt;p&gt;
3.1.1 beta 1.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16917 (Bump PHP and MySQL required versions) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16917#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16917#comment:6/1301086421454744</guid>
      <description>fixed: &lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16917" title="#16917: defect (bug): Bump PHP and MySQL required versions (closed: fixed)"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
To-do: update WP.org API to not offer WP &amp;gt;= 3.2 to anyone who doesn't meet the requirements.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Done: &lt;a class="ext-link" href="http://api.wordpress.org/core/version-check/1.5/?version=3.2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://api.wordpress.org/core/version-check/1.5/?version=3.2&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16892 (make_clickable segfault) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16892#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16892#comment:17/1301086280079640</guid>
      <description>&lt;p&gt;
16892.5.patch has been soaking on wp.com for a couple days.  Looking good so far. We probably need to @ silence ini_set() like we do everywhere else.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:41:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:10/1301085707847333</guid>
      <description>&lt;p&gt;
Perhaps we can handle/review/fix the improvements from 16846-2.patch later.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:22/1301085604475107</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16667#comment:19" title="Comment 19"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Agree, not sure why in my test it didn't show the first time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13662 (Admin Menu Generation - Speedup, Cleanup) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:37:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13662#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13662#comment:6/1301085464275049</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed.
&lt;/p&gt;
&lt;p&gt;
Changes to original patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Check &lt;code&gt;$submenu[$item[2]]&lt;/code&gt; before assigning it to &lt;code&gt;$submenu_items&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Don't use &lt;code&gt;$menu_file&lt;/code&gt; for the menu links as query string may have been stripped (though the branch that was changed to use this is never executed in core from inspection)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
However, I would be surprised if this actually gives any noticeable performance enhancement.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13662.diff attached to Ticket #13662</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:34:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13662/13662.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13662/13662.diff/1301085266811741</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:33:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:21/1301085213387787</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17559" title="Fix position of submenus when showing avatar, props johnjamesjacoby, ..."&gt;[17559]&lt;/a&gt;) Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17559]: Fix position of submenus when showing avatar, props johnjamesjacoby, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:33:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17559/1301085210782432</guid>
      <description>&lt;p&gt;
Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:20/1301085129994469</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17558" title="Fix position of submenus when showing avatar, props johnjamesjacoby, ..."&gt;[17558]&lt;/a&gt;) Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17558]: Fix position of submenus when showing avatar, props johnjamesjacoby, ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17558/1301085127278027</guid>
      <description>&lt;p&gt;
Fix position of submenus when showing avatar, props johnjamesjacoby, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16667" title="#16667: defect (bug): Admin Bar CSS Override Bugs (closed: fixed)"&gt;#16667&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:13:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:9/1301084035623853</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17557" title="Fix discrepancy in the nested loop in the Recent Comments dashboard ..."&gt;[17557]&lt;/a&gt;) Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for 3.1.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17557]: Fix discrepancy in the nested loop in the Recent Comments dashboard ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17557</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17557/1301084033291576</guid>
      <description>&lt;p&gt;
Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for 3.1.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:8/1301083954706592</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17556" title="Fix discrepancy in the nested loop in the Recent Comments dashboard ..."&gt;[17556]&lt;/a&gt;) Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17556]: Fix discrepancy in the nested loop in the Recent Comments dashboard ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:12:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17556</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17556/1301083952429183</guid>
      <description>&lt;p&gt;
Fix discrepancy in the nested loop in the Recent Comments dashboard widget, props ocean90, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16846" title="#16846: defect (bug): wp_dashboard_recent_comments can generate hundreds of queries (closed: fixed)"&gt;#16846&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 20:02:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:3/1301083336498677</guid>
      <description>&lt;p&gt;
It would make sense to have the admin bar always visible if it was dynamically updated with the number of comments awaiting moderation, for example, but since it's static, it doesn't make sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:59:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:2/1301083174157163</guid>
      <description>&lt;p&gt;
Yes, it started from the url hashes drawback.
&lt;/p&gt;
&lt;p&gt;
But also, I don't think this particular implementation detail was seriously discussed. I would love to be proven wrong, though.
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Rare side effect, that won't be much alleviated with our own absolutely positioned div.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It doesn't have to be absolutely positioned: &lt;code&gt;$('body').prepend('#wpadminbar');&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is by design, so "you don't have to scroll to the top of the page"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I see it, the major goal is to have a series of useful links always &lt;em&gt;available&lt;/em&gt; on every page, in a consistent place, not necessarily &lt;em&gt;visible&lt;/em&gt; at all time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:6/1301082934060289</guid>
      <description>&lt;p&gt;
Not to forget that unrolled code always has the better performance. ;)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969#comment:1/1301082737658889</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
PS: The fact that this is how it worked on wp.com is not a valid argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sure it is.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
other absolutely possitioned elements can be misaligned
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Rare side effect, that won't be much alleviated with our own absolutely positioned div.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
less vertical space for content
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For logged in users only. This is by design, so "you don't have to scroll to the top of the page"
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
url hashes don't work properly
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please report problems, not solutions. This is the problem you're trying to report, isn't it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:50:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:19/1301082612518629</guid>
      <description>&lt;p&gt;
While &lt;code&gt;avatar &amp;gt; ul &amp;gt; ul&lt;/code&gt; would not be enough to cover an additional level of submenus, &lt;code&gt;ul ul&lt;/code&gt; should be enough.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16969 (Stick admin bar to the top of the page, not the window) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:50:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16969/1301082600520034</guid>
      <description>&lt;p&gt;
I would like to contend that having the admin bar visible at all times, even when scrolling down the page has more drawbacks than benefits:
&lt;/p&gt;
&lt;p&gt;
Benefits:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;you don't have to scroll to the top of the page
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Drawbacks:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;less vertical space for content
&lt;/li&gt;&lt;li&gt;url hashes don't work properly
&lt;/li&gt;&lt;li&gt;other absolutely possitioned elements can be misaligned
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
If there are other benefits that I'm not seeing please mention them, or add a link to a discussion where they were mentioned.
&lt;/p&gt;
&lt;p&gt;
PS: The fact that this is how it worked on wp.com is not a valid argument.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #8833 (extract pluggable.php function logic into separate functions) updated</title>
      
        <dc:creator>dmeiser</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:49:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8833#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8833#comment:21/1301082561731248</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:18/1301082505423671</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16667#comment:17" title="Comment 17"&gt;johnjamesjacoby&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Patch looks good. I would even add another &lt;code&gt;ul&lt;/code&gt; in there in case a plugin adds another level of submenus:
&lt;/p&gt;
&lt;pre class="wiki"&gt;#wpadminbar .quicklinks li#wp-admin-bar-my-account-with-avatar ul ul,
#wpadminbar .quicklinks li#wp-admin-bar-my-account-with-avatar ul ul ul {
 	left: 0;
}
&lt;/pre&gt;&lt;p&gt;
BTW without support for IE6 that would have been a lot simpler, but we are on the front end so... :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16842 (class-wp-list-table.php on line 140) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:48:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16842#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16842#comment:5/1301082498031692</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16968 (Plugin Search for empty string can hide all Plugins) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:46:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16968#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16968#comment:1/1301082370986642</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16968 (Plugin Search for empty string can hide all Plugins) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:44:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16968</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16968/1301082296742912</guid>
      <description>&lt;p&gt;
I'm seeing something weird on trunk, I have checked against 3.0.5, it does not have that problem:
&lt;/p&gt;
&lt;p&gt;
Searching for a plugin that does not exists (e.g. "new version") will create an empty listing. Searching again with an empty search will remove the search and keep the empty listing.
&lt;/p&gt;
&lt;p&gt;
I would have expected the behavior that the list of plugins is visible again.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Go to the "Plugins" page (Plugins -&amp;gt; Plugins)
&lt;/li&gt;&lt;li&gt;Enter "new version" into the search box and press the "Search Plugins" button right next to it.
&lt;/li&gt;&lt;li&gt;The page is requested again now displaying an empty plugins list.
&lt;/li&gt;&lt;li&gt;Delete "new version" from that search box (empty the search box) and press the "Search Plugins" button right next to it.
&lt;/li&gt;&lt;li&gt;The page is requested again now displaying an empty plugins list.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
It should not display an empty plugins list in (5.).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:6/1301081050835710</guid>
      <description>invalid: &lt;p&gt;
After some back-and-forth with the reporter, we determined that it's not the query itself that's causing the spike.
&lt;/p&gt;
&lt;p&gt;
Probably some faulty plugin or combination.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Fri, 25 Mar 2011 19:01:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:7/1301079671475692</guid>
      <description>&lt;p&gt;
Tested 16846-2.patch with counts &amp;lt; 5, &amp;gt; 5, and 5.  It eliminates the extra queries and produces the same results.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16846 (wp_dashboard_recent_comments can generate hundreds of queries) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:59:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16846#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16846#comment:6/1301079588920726</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:36:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:5/1301078210038663</guid>
      <description>&lt;p&gt;
Erm, if you're running it from the shell, you need to log into mysql first, using something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;mysql -uYourMySQLUserName -pYourPassWord -D YourDataBaseName
&lt;/pre&gt;&lt;p&gt;
If you need more help, I'm in the #wordpress-dev IRC channel on freenode.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>user65</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:4/1301077815695805</guid>
      <description>&lt;p&gt;
Thought so, thanks.
&lt;/p&gt;
&lt;p&gt;
I ran it from the Command Shell in Webmin.
&lt;/p&gt;
&lt;p&gt;
This is what I got back:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;gt; SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) INNER JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id)  WHERE 1=1  AND wp_term_taxonomy.taxonomy = 'category' AND wp_term_taxonomy.term_id IN ('34') AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10
bash: -c: line 0: syntax error near unexpected token `('
bash: -c: line 0: `SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) INNER JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id)  WHERE 1=1  AND wp_term_taxonomy.taxonomy = 'category' AND wp_term_taxonomy.term_id IN ('34') AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10'
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:18:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:3/1301077124088182</guid>
      <description>&lt;p&gt;
No, don't edit query.php.
&lt;/p&gt;
&lt;p&gt;
Easiest would be to run it using phpMyAdmin. There's a little "Profiling" checkbox that you should check.
&lt;/p&gt;
&lt;p&gt;
Of course, you can also run it through the command line, if you have shell access.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>user65</dc:creator>

      <pubDate>Fri, 25 Mar 2011 18:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:2/1301076720056490</guid>
      <description>&lt;p&gt;
First, thanks very much Scribu.
&lt;/p&gt;
&lt;p&gt;
Man I'm a newbie when it comes to this stuff, I just do php and minor sql stuff... Like setting up, restoring, and exporting db's and such. I am very bad when it comes to running queries.
&lt;/p&gt;
&lt;p&gt;
Now that is over with... I need to run this from mysql? or should I replace this in the query.php?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:51:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966#comment:1/1301075497072148</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here is the equivalent query from WP 3.0:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  INNER JOIN wp_term_relationships ON (wp_posts.ID = wp_term_relationships.object_id) INNER JOIN wp_term_taxonomy ON (wp_term_relationships.term_taxonomy_id = wp_term_taxonomy.term_taxonomy_id)  WHERE 1=1  AND wp_term_taxonomy.taxonomy = 'category' AND wp_term_taxonomy.term_id IN ('34') AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private') GROUP BY wp_posts.ID ORDER BY wp_posts.post_date DESC LIMIT 0, 10
&lt;/pre&gt;&lt;p&gt;
Could you run it and see if it's substantially faster?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:19/1301075174941162</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:40:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967#comment:1/1301074801439326</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16967 (Adding cat=-# removes sorting) created</title>
      
        <dc:creator>jdingman</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16967</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16967/1301074625261097</guid>
      <description>&lt;p&gt;
When adding in cat=-20, it stops sorting
&lt;/p&gt;
&lt;pre class="wiki"&gt;$my_query = new WP_Query('cat=-20&amp;amp;posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
&lt;/pre&gt;&lt;p&gt;
when I run it like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$my_query = new WP_Query('posts_per_page=10&amp;amp;orderby=date&amp;amp;order=DESC');
&lt;/pre&gt;&lt;p&gt;
it works like I expect it will.
&lt;/p&gt;
&lt;p&gt;
I tested it in the array format as well, and adding &lt;code&gt;category__not_in&lt;/code&gt; removes the sorting I add to it
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:4/1301074230863633</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16482#comment:3" title="Comment 3"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ideally, the best way to do this would be to POST the post_id along to wp-pass.php as well, and redirect to &lt;code&gt;get_permalink($post_id);&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Taken a slightly different approach by forcing _wp_http_referer to be the permalink. Was unable to quickly reproduce the problem for testing, but this should work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16482._wp_http_referer.diff attached to Ticket #16482</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Fri, 25 Mar 2011 17:29:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16482/16482._wp_http_referer.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16482/16482._wp_http_referer.diff/1301074147227031</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16966 (Query Causing MySQL to use all resources / crashes server) created</title>
      
        <dc:creator>user65</dc:creator>

      <pubDate>Fri, 25 Mar 2011 16:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16966</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16966/1301070516230873</guid>
      <description>&lt;p&gt;
Hello, I have the following posts for information and resources:
&lt;a class="ext-link" href="http://wordpress.org/support/topic/database-maxing-cpu-usage-after-upgrade-to-31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/database-maxing-cpu-usage-after-upgrade-to-31&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/mysql-slow-queries-wordpress-31"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/mysql-slow-queries-wordpress-31&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My issue is that my host is telling me to move the wp-posts table to a different server, or different database... or SOMETHING. I dunno.
&lt;/p&gt;
&lt;p&gt;
There is a query that is eating up all of my resources, This only happened since upgrading to 3.1. This query is available in the post I started - Database Maxing CPU Usage after Upgrade to 3.1.
&lt;/p&gt;
&lt;p&gt;
I was thinking about using the modified query.php, but the ticket is a mess! &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10964"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/10964&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16885 (Warning emited in Header parsing when server does not specify a ...) updated</title>
      
        <dc:creator>azizur</dc:creator>

      <pubDate>Fri, 25 Mar 2011 15:34:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16885#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16885#comment:13/1301067288759047</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Not sure if this related and if it could be address at the time.
&lt;/p&gt;
&lt;p&gt;
When the fetching a url for rss which is unreachable you also get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Warning: Invalid argument supplied for foreach() in {path-to}/wp-includes/class-http.php on line 362
RSS Error: A feed could not be found at http://my-disfunctional-url.org/news/feed/
&lt;/pre&gt;&lt;p&gt;
This is not helpful to average users/subscribers when they see this once they are re-directed to dashboard after login.
&lt;/p&gt;
&lt;p&gt;
Want to re-produce it?
Go to Dashboard and change the "WordPress Blog" or "Dashboard Primary" widget url to something that does not work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14760 (wp_get_shortlink not working on pages) updated</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Fri, 25 Mar 2011 14:57:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14760#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14760#comment:4/1301065034056860</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Updated patch removes some cruft and makes sure shortlinks are generated only for public post types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_get_shortlink-2.diff attached to Ticket #14760</title>
      
        <dc:creator>sillybean</dc:creator>

      <pubDate>Fri, 25 Mar 2011 14:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14760/wp_get_shortlink-2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14760/wp_get_shortlink-2.diff/1301064938998077</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16885 (Warning emited in Header parsing when server does not specify a ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:47:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16885#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16885#comment:12/1301060827434370</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16491 (Automatically backup database before updating) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16491#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16491#comment:4/1301060329742166</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16492 (Improvements to the Wordpress Update Process) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:37:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16492#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16492#comment:1/1301060252933723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:3/1301060195141121</guid>
      <description>&lt;p&gt;
This is caused by wp-post.php using &lt;code&gt;wp_safe_redirect(wp_get_referer());&lt;/code&gt; for the redirection.
&lt;/p&gt;
&lt;p&gt;
Since the referer is set to &lt;a class="ext-link" href="http://127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://127&lt;/a&gt;... instead of &lt;a class="ext-link" href="http://localhost"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost&lt;/a&gt;.. and i'm logged in, it'll redirect me to the WordPress admin.
&lt;/p&gt;
&lt;p&gt;
Ideally, the best way to do this would be to POST the post_id along to wp-pass.php as well, and redirect to &lt;code&gt;get_permalink($post_id);&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16482 (Visibility: password-protected breaks with redirected domains) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:33:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16482#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16482#comment:2/1301059988225162</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Visited &lt;a class="ext-link" href="http://127.0.0.1/wordpress/password-protected-post/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://127.0.0.1/wordpress/password-protected-post/&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Entered password, Form submitted to &lt;a class="ext-link" href="http://localhost/wordpress/wp-pass.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/wordpress/wp-pass.php&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;Redirected to &lt;a class="ext-link" href="http://localhost/wordpress/wp-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://localhost/wordpress/wp-admin/&lt;/a&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16842 (class-wp-list-table.php on line 140) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:26:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16842#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16842#comment:4/1301059566138750</guid>
      <description>worksforme: &lt;p&gt;
Tracing &lt;code&gt;$args['total_items']&lt;/code&gt; back, it is set by &lt;code&gt;get_comments( ..count = true );&lt;/code&gt; the only way I can see this happening is with an out of date wp-includes/comment.php (Or of course, a plugin messing with things it shouldn't).
&lt;/p&gt;
&lt;p&gt;
Feel free to re-open this ticket with extra details to reproduce it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16700 (Add a button for embedding flash videos) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:18:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16700#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16700#comment:14/1301059115636462</guid>
      <description>wontfix: &lt;p&gt;
Sounds like a good idea for a plugin.
&lt;/p&gt;
&lt;p&gt;
When the licensing issue was raised, it was decided we should simply remove it, rather than replace it, because so few used it.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16625 (wp_dropdown_categories reqs (consistent) option_none_value) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16625#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16625#comment:6/1301058940094910</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16887 (Increase the default number of maximum redirects to 20) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:14:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16887#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16887#comment:8/1301058870380698</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16855 (HTTP API No Follow Redirection) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16855#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16855#comment:37/1301058861727434</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 13:13:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965#comment:3/1301058823890148</guid>
      <description>&lt;p&gt;
The $meta_key is not optional at present with the function as-is. You can however pass a blank string to it to retrieve all meta.
&lt;/p&gt;
&lt;p&gt;
Setting a default on $key would however allow that.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_comment_meta($comment_id, $key, $single = false) {
   return get_metadata('comment', $comment_id, $key, $single);
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:37:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965#comment:2/1301053037483363</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14648 (Flash Uploader security error in IDN domains) updated</title>
      
        <dc:creator>codestyling</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:02:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14648#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14648#comment:9/1301050932553877</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IDN handling is different related to Browsers! WebKit based browser like Safari and Chrome work with PunyCode URL's but others like IE, Firefox and Opera doesn't.
This is a problem of Cross Site Scripting detection and can be realize and tested, if the Blog is configured to an PunyCode Url. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
example out of a case I did investigate: &lt;br /&gt;
IDN: &lt;a class="ext-link" href="http://с-проект.рф"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://с-проект.рф&lt;/a&gt; &lt;br /&gt;
PunyCode: &lt;a class="ext-link" href="http://xn----jtbpoegeo.xn--p1ai"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://xn----jtbpoegeo.xn--p1ai&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you  try to call a JSON request like this example with the generated admin_url() out of WordPress, which would become the PunyCode one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://xn----jtbpoegeo.xn--p1ai/wp-admin/admin-ajax.php' ?&amp;gt;',
		{
			parameters: {
				action: 'get_download_section'
			},
			onSuccess: function(transport) {
				elem.title=transport.responseJSON.title;
			},
			onFailure: function(transport) {
				alert('JSON security bug')
			}
		}
	);
&lt;/pre&gt;&lt;p&gt;
and the answer is correct 'application/json' with correct JSON content, than this fails on all browsers except WebKit based! &lt;br /&gt;
If you try it with the original IDN Url like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://с-проект.рф/wp-admin/admin-ajax.php' ?&amp;gt;',
&lt;/pre&gt;&lt;p&gt;
it works now for all other browsers but fails now on WebKit based.
&lt;/p&gt;
&lt;p&gt;
My suggestion will be a conditional convertion back to IDN, if browser is &lt;strong&gt;not&lt;/strong&gt; WebKit based.
I did this inside my WordPress plugin "Codestyling Localization" and it works now in any case. I did use the class &lt;strong&gt;idna_convert&lt;/strong&gt; from Matthias Sommerfeld for easy decode of PunyCode admin url's in such a case.
&lt;/p&gt;
&lt;p&gt;
Please check it also in relation to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; / &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10690" title="#10690: defect (bug): WordPress does not support non-ascii characters in the domain name (reopened)"&gt;#10690&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14648" title="#14648: defect (bug): Flash Uploader security error in IDN domains (closed: wontfix)"&gt;#14648&lt;/a&gt; because this may also affect the flash uploader feeded with PunyCode url's instead of IDN for some browser!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10690 (WordPress does not support non-ascii characters in the domain name) reopened</title>
      
        <dc:creator>codestyling</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10690#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10690#comment:18/1301050896063724</guid>
      <description>&lt;p&gt;
IDN handling is different related to Browsers! WebKit based browser like Safari and Chrome work with PunyCode URL's but others like IE, Firefox and Opera doesn't.
This is a problem of Cross Site Scripting detection and can be realize and tested, if the Blog is configured to an PunyCode Url. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
example out of a case I did investigate: &lt;br /&gt;
IDN: &lt;a class="ext-link" href="http://с-проект.рф"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://с-проект.рф&lt;/a&gt; &lt;br /&gt;
PunyCode: &lt;a class="ext-link" href="http://xn----jtbpoegeo.xn--p1ai"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://xn----jtbpoegeo.xn--p1ai&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you  try to call a JSON request like this example with the generated admin_url() out of WordPress, which would become the PunyCode one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://xn----jtbpoegeo.xn--p1ai/wp-admin/admin-ajax.php' ?&amp;gt;',
		{
			parameters: {
				action: 'get_download_section'
			},
			onSuccess: function(transport) {
				elem.title=transport.responseJSON.title;
			},
			onFailure: function(transport) {
				alert('JSON security bug')
			}
		}
	);
&lt;/pre&gt;&lt;p&gt;
and the answer is correct 'application/json' with correct JSON content, than this fails on all browsers except WebKit based! &lt;br /&gt;
If you try it with the original IDN Url like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://с-проект.рф/wp-admin/admin-ajax.php' ?&amp;gt;',
&lt;/pre&gt;&lt;p&gt;
it works now for all other browsers but fails now on WebKit based.
&lt;/p&gt;
&lt;p&gt;
My suggestion will be a conditional convertion back to IDN, if browser is &lt;strong&gt;not&lt;/strong&gt; WebKit based.
I did this inside my WordPress plugin "Codestyling Localization" and it works now in any case. I did use the class &lt;strong&gt;idna_convert&lt;/strong&gt; from Matthias Sommerfeld for easy decode of PunyCode admin url's in such a case.
&lt;/p&gt;
&lt;p&gt;
Please check it also in relation to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; / &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10690" title="#10690: defect (bug): WordPress does not support non-ascii characters in the domain name (reopened)"&gt;#10690&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14648" title="#14648: defect (bug): Flash Uploader security error in IDN domains (closed: wontfix)"&gt;#14648&lt;/a&gt; because this may also affect the flash uploader feeded with PunyCode url's instead of IDN for some browser!
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11734 (trackback_rdf() for IDN (xn--) Domains produces invalid HTML) updated</title>
      
        <dc:creator>codestyling</dc:creator>

      <pubDate>Fri, 25 Mar 2011 11:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11734#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11734#comment:5/1301050830247139</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
IDN handling is different related to Browsers! WebKit based browser like Safari and Chrome work with PunyCode URL's but others like IE, Firefox and Opera doesn't.
This is a problem of Cross Site Scripting detection and can be realize and tested, if the Blog is configured to an PunyCode Url. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
example out of a case I did investigate: &lt;br /&gt;
IDN: &lt;a class="ext-link" href="http://с-проект.рф"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://с-проект.рф&lt;/a&gt; &lt;br /&gt;
PunyCode: &lt;a class="ext-link" href="http://xn----jtbpoegeo.xn--p1ai"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://xn----jtbpoegeo.xn--p1ai&lt;/a&gt; &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you  try to call a JSON request like this example with the generated admin_url() out of WordPress, which would become the PunyCode one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://xn----jtbpoegeo.xn--p1ai/wp-admin/admin-ajax.php' ?&amp;gt;',
		{
			parameters: {
				action: 'get_download_section'
			},
			onSuccess: function(transport) {
				elem.title=transport.responseJSON.title;
			},
			onFailure: function(transport) {
				alert('JSON security bug')
			}
		}
	);
&lt;/pre&gt;&lt;p&gt;
and the answer is correct 'application/json' with correct JSON content, than this fails on all browsers except WebKit based! &lt;br /&gt;
If you try it with the original IDN Url like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	new Ajax.Request('http://с-проект.рф/wp-admin/admin-ajax.php' ?&amp;gt;',
&lt;/pre&gt;&lt;p&gt;
it works now for all other browsers but fails now on WebKit based.
&lt;/p&gt;
&lt;p&gt;
My suggestion will be a conditional convertion back to IDN, if browser is &lt;strong&gt;not&lt;/strong&gt; WebKit based.
I did this inside my WordPress plugin "Codestyling Localization" and it works now in any case. I did use the class &lt;strong&gt;idna_convert&lt;/strong&gt; from Matthias Sommerfeld for easy decode of PunyCode admin url's in such a case.
&lt;/p&gt;
&lt;p&gt;
Please check it also in relation to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/11734" title="#11734: defect (bug): trackback_rdf() for IDN (xn--) Domains produces invalid HTML (new)"&gt;#11734&lt;/a&gt; / &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/10690" title="#10690: defect (bug): WordPress does not support non-ascii characters in the domain name (reopened)"&gt;#10690&lt;/a&gt; / &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14648" title="#14648: defect (bug): Flash Uploader security error in IDN domains (closed: wontfix)"&gt;#14648&lt;/a&gt; because this may also affect the flash uploader feeded with PunyCode url's instead of IDN for some browser!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16862 (Eliminating the reinstall-on-core-upgrade behavior (for Akismet and ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16862#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16862#comment:7/1301050760236204</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14484#comment:20" title="Comment 20 for #14484: task (blessed): Make WordPress core updates only update the core (closed: fixed)"&gt;scribu&lt;/a&gt; noted:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The blessing: &lt;a class="ext-link" href="https://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/#comment-17295"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/#comment-17295&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14466 (Widget position uses footer position styling) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:57:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14466#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14466#comment:14/1301050629274497</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14466#comment:13" title="Comment 13"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Crazy idea: rename the admin #footer to #wpfooter, to match #wphead.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8847 (Odd "Older Entries" link problem) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:55:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8847#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8847#comment:13/1301050526967510</guid>
      <description>&lt;p&gt;
-1 - HTTP URI paths are case-sensitive as well as many file-systems, especially server preferred ones.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:51:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:14/1301050302715929</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can easily picture a plugin overriding headers after an output buffer gets started or something similar. The patch exits too early.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True output buffers will flush on exit.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I suspect anything short of output buffering, running the full WP, and discarding the output, will introduce potential issues. Alternatively we could close as wontfix or worksforme, since that would be what apache does already.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Confirmed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16960 (Problems with plugin readme.txt and update date) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:34:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16960#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16960#comment:4/1301049291818095</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16960#comment:3" title="Comment 3"&gt;oferwald&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, added whitespace and the description got updated, however the updated date is still wrong and is dating three versions back
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Re-tag the whole plugin in both the .php, the readme and the SVN tags. That should refresh.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16606.4.patch attached to Ticket #16606</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:27:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16606/16606.4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16606/16606.4.patch/1301048869214466</guid>
      <description>&lt;p&gt;
All checks, result truly filterable line in WP_Http_Curl::test() and WP_Http_ExtHttp::test()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16606 (WP_Http_Streams::test doesn't check enough to confirm if it can do HTTPS) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Fri, 25 Mar 2011 10:21:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16606#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16606#comment:5/1301048496461431</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16606#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The Streams class only accepts &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; and &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; scheme's:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		if ( 'http' != $arrURL['scheme'] &amp;amp;&amp;amp; 'https' != $arrURL['scheme'] )
			$url = preg_replace('|^' . preg_quote($arrURL['scheme'], '|') . '|', 'http', $url);
&lt;/pre&gt;&lt;p&gt;
That renders most of the content of these patches moot.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hm?
&lt;/p&gt;
&lt;p&gt;
As this is the public test() function, it should return false if you test it with a URL with a scheme that is not supported, than that function should first of all return false for that tested URL.
&lt;/p&gt;
&lt;p&gt;
If the class can technically not support the scheme of the URL because there is no stream wrapper for that scheme registered, it should return false. Existing wrappers are available via stream_get_wrappers().
&lt;/p&gt;
&lt;p&gt;
If you want to check for SSL transport, my stance is to make use of stream_get_transports() to check for SSL. That check is more generic than checking for the openssl extension in specific.
&lt;/p&gt;
&lt;p&gt;
I'll attach an updated patch that takes care of all of those.
&lt;/p&gt;
&lt;p&gt;
For your suggested fopen exists + ini_get exists + allow_url_fopen check I suggest we create a function in either a base class for all transports or into WP_HTTP as this is used more and more often.
&lt;/p&gt;
&lt;p&gt;
We could add some for SSL as well because until now, it's checked against the open_ssl library only. A -&amp;gt;has($what) like wpdb::has_cap() probably. Or on both classes, so that WP_Http can check on all supported transports. Could be added to blocking as well, just an idea.
&lt;/p&gt;
&lt;p&gt;
For what reason does the http stream transport class not support other wrappers btw?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14992 (When Object Caching is enabled switch_to_blog causes issues with some ...) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Fri, 25 Mar 2011 09:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14992#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14992#comment:16/1301044999285981</guid>
      <description>&lt;p&gt;
With a persistent Object Cache (i.e. a memcached implementation):
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a post ID 10 in blog 2
&lt;/li&gt;&lt;li&gt;From site 2, switch to blog 1
&lt;/li&gt;&lt;li&gt;Get post 10
&lt;/li&gt;&lt;li&gt;Restore current blog
&lt;/li&gt;&lt;li&gt;Go to site 2 and amend post 10
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
WP will have automatically flushed the post 10 in the object cache for blog 2, but it is persisting in it's previous state in the object cache for blog 1.
&lt;/p&gt;
&lt;p&gt;
I can't think of a sane solution to this problem, I think we just have to wait for the cache in blog 1 to expire. Caveat Auctor, I guess.
&lt;/p&gt;
&lt;p&gt;
Separately: There is a way to add the &lt;code&gt;$blog_id&lt;/code&gt; to W3TC Object Cache using the built in W3TC hooks, see &lt;a class="ext-link" href="http://wordpress.org/support/topic/plugin-w3-total-cache-w3-total-cache-multisite-setup-featured-posts-on-main-site-from-sub-sites/page/2?replies=33#post-2024407"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this forum post&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 07:06:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965#comment:1/1301036762050434</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:55:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:12/1301036124509186</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
P.S - i,m nt getting any updates about this ticket via email. how can i do that
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ensure your email is listed in the &lt;a class="ext-link" href="http://core.trac.wordpress.org/prefs"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;preferences&lt;/a&gt; and check the CC box when making a reply.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) reopened</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:49:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:11/1301035780637656</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) closed</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:47:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:10/1301035643235492</guid>
      <description>fixed: &lt;p&gt;
THe documentation for get_comment_meta is not complete as the key value and the boolean is optional.
i created a ticket for that here
&lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/16965"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/ticket/16965&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also i normally test with a java client and print to see whether i,m
getting the expected results
should i removed needs testing??
&lt;/p&gt;
&lt;p&gt;
P.S - i,m nt getting any updates about this ticket via email. how can i do that
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16125 (Tag cloud widget: hide dropdown when there's only one taxonomy) updated</title>
      
        <dc:creator>GautamGupta</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:41:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16125#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16125#comment:7/1301035290911955</guid>
      <description>&lt;p&gt;
Attached another patch based on nacin's recommendations.
&lt;/p&gt;
&lt;p&gt;
Should we return &lt;code&gt;'post_tag'&lt;/code&gt; in &lt;code&gt;_get_current_taxonomy()&lt;/code&gt; if no taxonomy was found saved in the options?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment_meta_doc.diff attached to Ticket #16965</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:39:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16965/comment_meta_doc.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16965/comment_meta_doc.diff/1301035175322591</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>tag_cloud.diff attached to Ticket #16125</title>
      
        <dc:creator>GautamGupta</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:35:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16125/tag_cloud.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16125/tag_cloud.diff/1301034943194379</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16965 (Additional documentation for get_comment_meta) created</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Fri, 25 Mar 2011 06:34:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16965</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16965/1301034870960886</guid>
      <description>&lt;p&gt;
the documentation for get_comment_meta in comment.php can be improved.
The metakey and the single value are optional.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13777 (Consolidate WP_Http argument processing into a single class) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 05:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13777#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13777#comment:5/1301031285803185</guid>
      <description>wontfix: &lt;p&gt;
I don't see any need for this.
&lt;/p&gt;
&lt;p&gt;
The WP_HTTP::request() method takes care of the incoming request and can handle processing the args. The processing of the args in each transport is specific to it's needs, to abstract the minimal code duplication will introduce more code and increase the churn rate of the existing code.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16606 (WP_Http_Streams::test doesn't check enough to confirm if it can do HTTPS) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 05:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16606#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16606#comment:4/1301030959054128</guid>
      <description>&lt;p&gt;
The Streams class only accepts &lt;a class="ext-link" href="http://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://&lt;/a&gt; and &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt; scheme's:
&lt;/p&gt;
&lt;pre class="wiki"&gt;		if ( 'http' != $arrURL['scheme'] &amp;amp;&amp;amp; 'https' != $arrURL['scheme'] )
			$url = preg_replace('|^' . preg_quote($arrURL['scheme'], '|') . '|', 'http', $url);
&lt;/pre&gt;&lt;p&gt;
That renders most of the content of these patches moot.
&lt;/p&gt;
&lt;p&gt;
Suggested:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	function test($args = array()) {
		$use = function_exists('fopen');
		if ( function_exists('ini_get') &amp;amp;&amp;amp; true != ini_get('allow_url_fopen') )
			$use = false;
		if ( !empty($args['ssl']) &amp;amp;&amp;amp; !extension_loaded('openssl') )
			$use = false;
		return apply_filters('use_streams_transport', $use, $args);
	}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 05:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:13/1301030403601411</guid>
      <description>&lt;p&gt;
In the case of the Streams transport, do we need to be good citizens and close the file handle when it times out?
&lt;/p&gt;
&lt;p&gt;
There's code such as this being mentioned on php.net:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    while (!feof($sock) &amp;amp;&amp;amp; !$info['timed_out']) {
         $file .= fgets($sock, 4096);
         $info = stream_get_meta_data($sock);
     }
     fclose($sock);
&lt;/pre&gt;&lt;p&gt;
Do you have some form of reference for the / 2 timeout as well? It'd be useful to have something to point to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16947 (Author role should have "Stick this post to the front page" hidden) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 25 Mar 2011 04:56:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16947#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16947#comment:1/1301029006855108</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Side note, it seems a bit weird that an author isn't allowed to unstick a public post, but can unstick it by making it private/protected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16947.diff attached to Ticket #16947</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Fri, 25 Mar 2011 04:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16947/16947.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16947/16947.diff/1301028525043512</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 02:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:37/1301020942491001</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17555" title="First run of introducing Stream-To-File for the WP_HTTP API. Reduces ..."&gt;[17555]&lt;/a&gt;) First run of introducing Stream-To-File for the WP_HTTP API. Reduces memory consumption during file downloads. Implemented in download_url() for upgraders. Props sivel. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17555]: First run of introducing Stream-To-File for the WP_HTTP API. Reduces ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 02:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17555</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17555/1301020940189895</guid>
      <description>&lt;p&gt;
First run of introducing Stream-To-File for the WP_HTTP API. Reduces memory consumption during file downloads. Implemented in download_url() for upgraders. Props sivel. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10646 (Admin Menus Shouldn't Jump Around on Pageload) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 01:31:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10646#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10646#comment:16/1301016685055406</guid>
      <description>&lt;p&gt;
10646-3.patch is almost identical to 10646.2.diff except it uses only CSS to initially open/close the menus so it doesn't require any JS to run on DOM ready.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10646-3.patch attached to Ticket #10646</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 25 Mar 2011 01:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10646/10646-3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10646/10646-3.patch/1301016517926062</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>stencil</dc:creator>

      <pubDate>Fri, 25 Mar 2011 01:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:7/1301015880407218</guid>
      <description>&lt;p&gt;
@dd32 I understand the behaviour you mention, and yes it does differ from my 'issue' which is relating to text selected which matches the post title.
&lt;/p&gt;
&lt;p&gt;
Sorry, perhaps this is trivial. I'm just not keen on automatically adding title attributes to &lt;em&gt;every&lt;/em&gt; link.  I imagine most users will leave the assigned title text because it's been filled in for them.
&lt;/p&gt;
&lt;p&gt;
Perhaps a conditional in the JavaScript that if selection == post title don't auto fill the field?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:6/1301014782076464</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Auto-filling the title attribute with the exact (duplicate) content of the post name is the issue. The field should be left blank until the user enters useful information.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Correct me if I'm wrong here, But the only way to insert a link is to select some text (In this case, I selected "See what I said about myself") click the link button, Find a object to link to (In this case I linked to "About"), The result is that the Title attribute contains what the link is actually linking to which is in most cases going to be different from the selected text.
&lt;/p&gt;
&lt;p&gt;
Of course, If the text you're linking is exactly the same as the page title of the page you want to link to, you'll get your experienced duplicate title.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [344]: Mark the WPHTTP baseclass as hidden to prevent it being run when all ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:52:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/344/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/344/tests/1301014379154092</guid>
      <description>&lt;p&gt;
Mark the WPHTTP baseclass as hidden to prevent it being run when all test cases are run; Add a file streaming testcase.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16631 (Internal linking feature is not available when rich text editing is ...) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16631#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16631#comment:5/1301014325725888</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16631 (Internal linking feature is not available when rich text editing is ...) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:51:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16631#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16631#comment:4/1301014298989160</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What I would actually like to see, and have talked about with @koopersmith (who did the internal linking feature, to answer @jsternberg's question), is not replicating internal linking in the html view, but putting linking up on the level of media insertion, so the same thing is available to both. Not in scope for 3.2, but would love for 3.3, and a plugin in the meantime would be great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) reopened</title>
      
        <dc:creator>stencil</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:46:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:5/1301014000559231</guid>
      <description>&lt;p&gt;
When the Insert/edit link dialog box appears I see this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Enter the destination URL
URL [ http:// ]
Title [       ]
&lt;/pre&gt;&lt;p&gt;
I click on a post to link to eg. "Friday Travel Adventure", I get this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;URL [ http://mysite.com/friday-travel-adventure/ ]
Title [ Friday Travel Adventure ]
&lt;/pre&gt;&lt;p&gt;
Auto-filling the title attribute with the exact (duplicate) content of the post name is the issue.  The field should be left blank until the user enters useful information.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;See also&lt;/strong&gt;
&lt;a class="ext-link" href="http://www.456bereastreet.com/archive/200903/dont_duplicate_link_text_in_the_title_attribute/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.456bereastreet.com/archive/200903/dont_duplicate_link_text_in_the_title_attribute/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.w3.org/TR/WCAG20-TECHS/H33"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.w3.org/TR/WCAG20-TECHS/H33&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:30:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:4/1301013014495956</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If you click a post (as part of internal linking), the post title gets filled, but I'm really not sure what the report here is referring to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:27:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:3/1301012840337550</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) closed</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:2/1301012828564034</guid>
      <description>worksforme: &lt;p&gt;
Where are you seeing that? When I use internal linking it does not pre-fill the title field.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:6/1301012439263734</guid>
      <description>wontfix: &lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems to me that the onus should be on the plugin developers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It really can't be though. Not at the scale that multisite can operate on.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The onus shouldn't be on plugin developers, or on super admins.
&lt;/p&gt;
&lt;p&gt;
It should be on WP Core, just like it is when a database upgrade is required.
&lt;/p&gt;
&lt;p&gt;
Yes, it might take two weeks to finish, but at least the super admin doesn't have to go running around for custom scripts to get the job done.
&lt;/p&gt;
&lt;p&gt;
Anyway, as nacin said, the approach provided in this ticket doesn't scale. Closing as wontfix.
&lt;/p&gt;
&lt;p&gt;
PS: Nacin can reply even with the ticket closed.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) updated</title>
      
        <dc:creator>philipwalton</dc:creator>

      <pubDate>Fri, 25 Mar 2011 00:02:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:5/1301011359229493</guid>
      <description>&lt;p&gt;
Nacin, I guess that's true about sites with a very large number of blogs. Excellent point.
&lt;/p&gt;
&lt;p&gt;
When you say "This function isn't doing that either, mind you", what are you saying it's not doing? I'm not following you.
&lt;/p&gt;
&lt;p&gt;
Finally, do you advise -- as a general rule -- to not spend much time worrying about plugin cleanup on a multisite setup? If that is a general operating principle, it would certainly give me a lot less to worry about. (At least until network activation/uninstall hooks don't "suck")
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 23:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:4/1301011180975209</guid>
      <description>&lt;p&gt;
Similar discussion: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14170" title="#14170: enhancement: Problems with network activation (closed: fixed)"&gt;#14170&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I should probably update my &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/proper-network-activation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Proper Network Activation&lt;/a&gt; plugin to handle uninstalls too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 23:42:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:36/1301010125390574</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking back over the results it seems that the cURL transport is setting the body as true instead of ""
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch!
&lt;/p&gt;
&lt;p&gt;
I was aware of the list_pluck changes, Was intending on striping them out of the patch but forgot!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 23:40:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:3/1301010045438745</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16964#comment:2" title="Comment 2"&gt;philipwalton&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nacin, thanks for the feedback.
&lt;/p&gt;
&lt;p&gt;
I don't know if this matters, but where I'm currently using this function is not in a deactivation hook, but rather in the uninstall.php file. I've tested it on my multisite blog, and it does seem to work well. Are you recommending not running the code I've posted?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, on any site with a real number of blogs. Whether that's 18.6 million or even a few hundred.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As far as putting the onus on super admins to clean up options, while it would be nice, it doesn't seem reliable. How are they to know specifically what options each plugin they activate is saving to the database?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This function isn't doing that either, mind you.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems to me that the onus should be on the plugin developers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It really can't be though. Not at the scale that multisite can operate on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) updated</title>
      
        <dc:creator>philipwalton</dc:creator>

      <pubDate>Thu, 24 Mar 2011 23:36:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:2/1301009771848938</guid>
      <description>&lt;p&gt;
Nacin, thanks for the feedback.
&lt;/p&gt;
&lt;p&gt;
I don't know if this matters, but where I'm currently using this function is not in a deactivation hook, but rather in the uninstall.php file. I've tested it on my multisite blog, and it does seem to work well. Are you recommending not running the code I've posted?
&lt;/p&gt;
&lt;p&gt;
As far as putting the onus on super admins to clean up options, while it would be nice, it doesn't seem reliable. How are they to know specifically what options each plugin they activate is saving to the database?
&lt;/p&gt;
&lt;p&gt;
It seems to me that the onus should be on the plugin developers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 23:16:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964#comment:1/1301008576820711</guid>
      <description>&lt;p&gt;
This doesn't scale.
&lt;/p&gt;
&lt;p&gt;
Uninstall hooks (and activation hooks) suck on networks. For an activation hook you'd want to leverage an upgrade function instead. For uninstall hooks, the super admin will be the one triggering this, so the onus is on them to ensure fat options are cleaned up. Nothing else we can really do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ms-functions.diff attached to Ticket #16964</title>
      
        <dc:creator>philipwalton</dc:creator>

      <pubDate>Thu, 24 Mar 2011 23:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16964/ms-functions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16964/ms-functions.diff/1301007862016046</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16964 (New function network_delete_option($option) to help keep option ...) created</title>
      
        <dc:creator>philipwalton</dc:creator>

      <pubDate>Thu, 24 Mar 2011 23:03:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16964</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16964/1301007813231153</guid>
      <description>&lt;p&gt;
When I create uninstall.php files for plugins I always delete the options I created using &lt;code&gt;delete_option()&lt;/code&gt;. However, recently I realized that if anyone is using my plugins on a multisite installation, &lt;code&gt;delete_option()&lt;/code&gt; would only delete that option from the options table of the main site; not any of the subsites.
&lt;/p&gt;
&lt;p&gt;
I believe a function should be created to make removing options as easy as possible, so I created a function called &lt;code&gt;network_delete_option()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The patch I've included is to the ms-functions.php file. Perhaps it is more appropriate somewhere else, but I just want to get the discussion started.
&lt;/p&gt;
&lt;p&gt;
Here is the code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Deletes the option from all options tables
 *
 * @uses delete_option()
 *
 * @param mixed $options a string or array of strings which correspond to the option names to be deleted
 */
function network_delete_option( $options ) {
	// convert an option passed as a single string to an array
	if ( is_string( $options ) ) {
		$options = array( $options );
	}
	if ( is_multisite() ) {
		global $wpdb;
		$blogs = $wpdb-&amp;gt;get_results( "SELECT blog_id FROM {$wpdb-&amp;gt;blogs}", ARRAY_A );
		if ( $blogs ) {
			// loop through each subsite ( blog )
			foreach( $blogs as $blog ) {
				switch_to_blog( $blog['blog_id'] );
				foreach( $options as $option ) {
					delete_option( $option );
				}
			}
		}
	} else {
		// loop through each subsite ( blog )
		foreach( $options as $option ) {
			delete_option( $option );
		}
	}
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 21:53:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:9/1301003632352266</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13835#comment:8" title="Comment 8"&gt;ericmann&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Considering this is a feature request and not a bug fix, should we be patching and reporting against trunk?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, always patch against trunk.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's not an error ... but a requested API enhancement for a feature introduced in 2.9.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The version field is for the earliest applicable version of a report. Generally for bugs, but works for enhancements just fine too. Version 2.9 is appropriate here as that's when commentmeta came into play.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 21:46:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:35/1301003165623184</guid>
      <description>&lt;p&gt;
The updated patch removes the wp_list_pluck code and fixes the body contents for cURL when streaming to a file since curl_exec will return true in such a case over writing the empty body.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 24 Mar 2011 21:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:8/1301003041007814</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13835#comment:7" title="Comment 7"&gt;aaroncampbell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The version is used to track the version when the error first occurred.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Considering this is a feature request and not a bug fix, should we be patching and reporting against trunk?  It's not an error ... but a requested API enhancement for a feature introduced in 2.9.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16236.14.diff attached to Ticket #16236</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 21:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16236/16236.14.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16236/16236.14.diff/1301002922358916</guid>
      <description>&lt;p&gt;
Remove wp_list_pluck code, and fix body contents for cURL when streaming to a file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 21:30:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:34/1301002230418039</guid>
      <description>&lt;p&gt;
Looking back over the results it seems that the cURL transport is setting the body as true instead of ""
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 24 Mar 2011 21:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:7/1301001946744360</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please don't change the version on the ticket.  The version is used to track the version when the error first occurred.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16963 (wp_enqueue_script bug in ie8) updated</title>
      
        <dc:creator>jkmassel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16963#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16963#comment:4/1300999555720046</guid>
      <description>&lt;p&gt;
No, calling wp_enqueue_script('jquery') alone should always return the latest (1.4.4 in 3.1), correct? There are no plugins or methods to change the version.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16963 (wp_enqueue_script bug in ie8) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16963#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16963#comment:3/1300999399102752</guid>
      <description>&lt;p&gt;
Are you overriding jQuery with an earlier version?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16963 (wp_enqueue_script bug in ie8) updated</title>
      
        <dc:creator>jkmassel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16963#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16963#comment:2/1300999272942210</guid>
      <description>&lt;p&gt;
indeed. and that does seem logical, but that order breaks in ie8. This seems to be a somewhat common issue. Quick google search: &lt;a class="ext-link" href="http://stackoverflow.com/questions/2830510/jquery-noconflict-not-working-in-ie8-only"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://stackoverflow.com/questions/2830510/jquery-noconflict-not-working-in-ie8-only&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16963 (wp_enqueue_script bug in ie8) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:33:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16963#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16963#comment:1/1300998819827112</guid>
      <description>&lt;p&gt;
wp_prototype_before_jquery() seems to indicate that the proper loading order is prototype, then jQuery.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16963 (wp_enqueue_script bug in ie8) created</title>
      
        <dc:creator>jkmassel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:30:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16963</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16963/1300998633667142</guid>
      <description>&lt;p&gt;
In IE 8, if you enqueue jQuery and scriptaculous, the prototype library will be included before jQuery. Because of this, jQuery will overwrite the $ method, and even though it runs noConflict() the variable is broken for both libraries. WP should be aware of this and sort the libraries for this situation. (jQuery should be first, then prototype)
&lt;/p&gt;
&lt;p&gt;
Tested on WP 3.1 in IE 8 build 8.0.7601.17514
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16962 (Post-type item for menus (and widgets also)) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:28:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16962#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16962#comment:1/1300998514940095</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16075" title="#16075: task (blessed): Add Post Type Archives support in Nav Menus (closed: fixed)"&gt;#16075&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/16784" title="#16784: enhancement: Introduce post_type_archive_description() (new)"&gt;#16784&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16962 (Post-type item for menus (and widgets also)) created</title>
      
        <dc:creator>Dianakc</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:24:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16962</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16962/1300998284471641</guid>
      <description>&lt;p&gt;
Most people use direct link such
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://example.com/?post_type=books
&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;
in menus for make use of archive-{post_type}.php, why not just add an item for custom types show up?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think a box for every post_type is too much, maybe a box with all post_types instead, just like when adding categories or pages in menus.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 24 Mar 2011 20:01:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:6/1300996878053256</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Scratch that, apparently you can leave &lt;code&gt;$key&lt;/code&gt; blank to have the function return everything.  Looks good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:51:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:5/1300996276174644</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That patch won't work.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;get_comment_meta()&lt;/code&gt; takes in more than just the comment id.  You also need to specify the key you're retrieving.  Here's the full function from the source:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function get_comment_meta($comment_id, $key, $single = false) {
    return get_metadata('comment', $comment_id, $key, $single);
}
&lt;/pre&gt;&lt;p&gt;
&lt;code&gt;$single&lt;/code&gt; is optional (and not needed in this case), but &lt;code&gt;$key&lt;/code&gt; is not.  At the very minimum, you'd have to loop through and get all the keys so you could retrieve all the comment meta.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16892 (make_clickable segfault) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:50:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16892#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16892#comment:16/1300996203670290</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16960 (Problems with plugin readme.txt and update date) updated</title>
      
        <dc:creator>oferwald</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:41:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16960#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16960#comment:3/1300995703980138</guid>
      <description>&lt;p&gt;
Ok, added whitespace and the description got updated, however the updated date is still wrong and is dating three versions back
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16090 (_close_comments_for_old_posts should not close pages) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:41:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16090#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16090#comment:7/1300995674139216</guid>
      <description>&lt;p&gt;
Here's a simple whitelist + filter solution.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16090.2.diff attached to Ticket #16090</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16090/16090.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16090/16090.2.diff/1300995634343255</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13835 (XML-RPC API should return commentmeta values) updated</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13835#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13835#comment:4/1300995344545994</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>getcommentmeta.diff attached to Ticket #13835</title>
      
        <dc:creator>nprasath002</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:33:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13835/getcommentmeta.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13835/getcommentmeta.diff/1300995201190059</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16960 (Problems with plugin readme.txt and update date) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:31:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16960#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16960#comment:2/1300995118196638</guid>
      <description>&lt;p&gt;
Maybe it makes sense that in the plugin admin an author can request a refresh.
&lt;/p&gt;
&lt;p&gt;
Often you do a commit and then you need to wait and you have no control / status and can only wait until changes get applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16522 (WordPress repository not refreshing) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16522#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16522#comment:5/1300995032255459</guid>
      <description>&lt;p&gt;
Duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15794" title="#15794: defect (bug): wordpress.org plugins pages not updating when readme.txt changes (closed: duplicate)"&gt;#15794&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15794 (wordpress.org plugins pages not updating when readme.txt changes) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:30:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15794#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15794#comment:7/1300995019227738</guid>
      <description>duplicate: &lt;p&gt;
Closing as dup of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16522" title="#16522: defect (bug): WordPress repository not refreshing (closed: fixed)"&gt;#16522&lt;/a&gt;, since it's clearer.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:25:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:12/1300994739566286</guid>
      <description>&lt;p&gt;
This should likely go in after &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16236" title="#16236: task (blessed): Method to stream file downloads in HTTP API, to reduce update memory ... (closed: fixed)"&gt;#16236&lt;/a&gt;.  At which point it will require another refresh, since a fairly large amount of code changes will happen to the transports in that commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:22:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:11/1300994573738081</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Same patch, just refreshed for current trunk.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13841.3.diff attached to Ticket #13841</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:21:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13841/13841.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13841/13841.3.diff/1300994500110026</guid>
      <description>&lt;p&gt;
Re-refreshed patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16960 (Problems with plugin readme.txt and update date) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:13:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16960#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16960#comment:1/1300993998239519</guid>
      <description>duplicate: &lt;p&gt;
Try bumping the readme.txt in trunk by adding some trailing whitespace.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16522" title="#16522: defect (bug): WordPress repository not refreshing (closed: fixed)"&gt;#16522&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15794" title="#15794: defect (bug): wordpress.org plugins pages not updating when readme.txt changes (closed: duplicate)"&gt;#15794&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The number of times this is being reported recently suggests that there has been some change in how the repo updates.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16961 (Custom Background Color Input/Dialog in Twenty Ten) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:08:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16961#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16961#comment:2/1300993694314890</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16961 (Custom Background Color Input/Dialog in Twenty Ten) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:07:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16961#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16961#comment:1/1300993641494314</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Screenshot of the problem:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/16961/hakre.png"&gt;&lt;img src="http://core.trac.wordpress.org/raw-attachment/ticket/16961/hakre.png" alt="Screenshot of the problem" crossorigin="anonymous" title="Screenshot of the problem" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
From my UI coding: elements that have not enough room to bottom / right can move more to the top / left to be available fully on screen.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>hakre.png attached to Ticket #16961</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16961/hakre.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16961/hakre.png/1300993551507638</guid>
      <description>&lt;p&gt;
Screenshot of the problem
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16961 (Custom Background Color Input/Dialog in Twenty Ten) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:05:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16961</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16961/1300993527493721</guid>
      <description>&lt;p&gt;
I'm running into a UI/UX issue when I want to modify the background image and color.
&lt;/p&gt;
&lt;p&gt;
If the background preview is that height that the page needs scrolling, the background color selector does not work any longer.
&lt;/p&gt;
&lt;p&gt;
It's hidden in part and scrolling does not work for scrolling further down because if you want to scroll the element looses the focus and closes, so the scrollbar shortens again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16960 (Problems with plugin readme.txt and update date) created</title>
      
        <dc:creator>oferwald</dc:creator>

      <pubDate>Thu, 24 Mar 2011 19:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16960</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16960/1300993340159478</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
Looking at my plugin page on wordpress.org, I see that the readme.txt information has not been updated, (The changelog is from an older version)
&lt;/p&gt;
&lt;p&gt;
Further more, the last updated date shows the date of three versions before (1-11) while it has been updated today (and twice more since that date)
&lt;/p&gt;
&lt;p&gt;
Take a look at
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/transposh-translation-filter-for-wordpress/changelog/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/transposh-translation-filter-for-wordpress/changelog/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks in advance, if this is not the correct place to report, I would appreciate a nod towards the right place.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:54:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:33/1300992840845854</guid>
      <description>&lt;p&gt;
The results of my testing look good.  GET and HEAD requests using cURL seem to populate headers correctly.  Here are my results from streaming the wordpress-3.1.zip directly to a file:
&lt;/p&gt;
&lt;p&gt;
Testing curl:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(5) {
  ["headers"]=&amp;gt;
  array(8) {
    ["server"]=&amp;gt;
    string(5) "nginx"
    ["date"]=&amp;gt;
    string(29) "Thu, 24 Mar 2011 18:43:50 GMT"
    ["content-type"]=&amp;gt;
    string(15) "application/zip"
    ["connection"]=&amp;gt;
    string(5) "close"
    ["pragma"]=&amp;gt;
    string(8) "no-cache"
    ["cache-control"]=&amp;gt;
    string(7) "private"
    ["content-description"]=&amp;gt;
    string(13) "File Transfer"
    ["content-disposition"]=&amp;gt;
    string(38) "attachment; filename=wordpress-3.1.zip"
  }
  ["body"]=&amp;gt;
  bool(true)
  ["response"]=&amp;gt;
  array(2) {
    ["code"]=&amp;gt;
    int(200)
    ["message"]=&amp;gt;
    string(2) "OK"
  }
  ["cookies"]=&amp;gt;
  array(0) {
  }
  ["filename"]=&amp;gt;
  string(34) "/Users/matt/tmp/wordpress/curl.zip"
}
Calculated MD5 (76904d048685a5642fe322e450abb388) matches MD5 (76904d048685a5642fe322e450abb388) of ZIP
Max Memory Usage: 16.821MB
&lt;/pre&gt;&lt;p&gt;
Testing streams:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(5) {
  ["headers"]=&amp;gt;
  array(8) {
    ["server"]=&amp;gt;
    string(5) "nginx"
    ["date"]=&amp;gt;
    string(29) "Thu, 24 Mar 2011 18:44:04 GMT"
    ["content-type"]=&amp;gt;
    string(15) "application/zip"
    ["connection"]=&amp;gt;
    string(5) "close"
    ["pragma"]=&amp;gt;
    string(8) "no-cache"
    ["cache-control"]=&amp;gt;
    string(7) "private"
    ["content-description"]=&amp;gt;
    string(13) "File Transfer"
    ["content-disposition"]=&amp;gt;
    string(38) "attachment; filename=wordpress-3.1.zip"
  }
  ["body"]=&amp;gt;
  string(0) ""
  ["response"]=&amp;gt;
  array(2) {
    ["code"]=&amp;gt;
    string(3) "200"
    ["message"]=&amp;gt;
    string(2) "OK"
  }
  ["cookies"]=&amp;gt;
  array(0) {
  }
  ["filename"]=&amp;gt;
  string(37) "/Users/matt/tmp/wordpress/streams.zip"
}
Calculated MD5 (76904d048685a5642fe322e450abb388) matches MD5 (76904d048685a5642fe322e450abb388) of ZIP
Max Memory Usage: 16.821MB
&lt;/pre&gt;&lt;p&gt;
Testing fsockopen:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(5) {
  ["headers"]=&amp;gt;
  array(8) {
    ["server"]=&amp;gt;
    string(5) "nginx"
    ["date"]=&amp;gt;
    string(29) "Thu, 24 Mar 2011 18:44:21 GMT"
    ["content-type"]=&amp;gt;
    string(15) "application/zip"
    ["connection"]=&amp;gt;
    string(5) "close"
    ["pragma"]=&amp;gt;
    string(8) "no-cache"
    ["cache-control"]=&amp;gt;
    string(7) "private"
    ["content-description"]=&amp;gt;
    string(13) "File Transfer"
    ["content-disposition"]=&amp;gt;
    string(38) "attachment; filename=wordpress-3.1.zip"
  }
  ["body"]=&amp;gt;
  string(0) ""
  ["response"]=&amp;gt;
  array(2) {
    ["code"]=&amp;gt;
    string(3) "200"
    ["message"]=&amp;gt;
    string(2) "OK"
  }
  ["cookies"]=&amp;gt;
  array(0) {
  }
  ["filename"]=&amp;gt;
  string(39) "/Users/matt/tmp/wordpress/fsockopen.zip"
}
Calculated MD5 (76904d048685a5642fe322e450abb388) matches MD5 (76904d048685a5642fe322e450abb388) of ZIP
Max Memory Usage: 16.821MB
&lt;/pre&gt;&lt;p&gt;
Testing http_extension:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array(5) {
  ["headers"]=&amp;gt;
  array(9) {
    ["server"]=&amp;gt;
    string(5) "nginx"
    ["date"]=&amp;gt;
    string(29) "Thu, 24 Mar 2011 18:44:40 GMT"
    ["content-type"]=&amp;gt;
    string(15) "application/zip"
    ["transfer-encoding"]=&amp;gt;
    string(7) "chunked"
    ["connection"]=&amp;gt;
    string(5) "close"
    ["pragma"]=&amp;gt;
    string(8) "no-cache"
    ["cache-control"]=&amp;gt;
    string(7) "private"
    ["content-description"]=&amp;gt;
    string(13) "File Transfer"
    ["content-disposition"]=&amp;gt;
    string(38) "attachment; filename=wordpress-3.1.zip"
  }
  ["body"]=&amp;gt;
  string(0) ""
  ["response"]=&amp;gt;
  array(2) {
    ["code"]=&amp;gt;
    int(200)
    ["message"]=&amp;gt;
    string(2) "OK"
  }
  ["cookies"]=&amp;gt;
  array(0) {
  }
  ["filename"]=&amp;gt;
  string(44) "/Users/matt/tmp/wordpress/http_extension.zip"
}
Calculated MD5 (76904d048685a5642fe322e450abb388) matches MD5 (76904d048685a5642fe322e450abb388) of ZIP
Max Memory Usage: 25.63MB
&lt;/pre&gt;&lt;p&gt;
As expected exthttp shows higher memory usage.
&lt;/p&gt;
&lt;p&gt;
As mentioned in a previous comment your latest patch has some extra code changes for wp_list_pluck, that should probably be stripped before commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:15/1300991904842281</guid>
      <description>&lt;p&gt;
Ok, well you din't mention that anywhere. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16888 (WP HTTP Curl transport is only handling some but not all redirect ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:22:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16888#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16888#comment:14/1300990962579230</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:14/1300990542386823</guid>
      <description>&lt;p&gt;
There IS a point. It's there to support multiple instances of quicktags toolbar (Quick edit comment in Post edit page, for example). Actually, it might be preferable if I restore its old name (QTags). So technically I'm just extending the old class, but with better structure and more possibilities.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8847 (Odd "Older Entries" link problem) updated</title>
      
        <dc:creator>jakbob</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:11:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8847#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8847#comment:12/1300990319831488</guid>
      <description>&lt;p&gt;
Hi. I've done some digging, the problem seams to appear when the Site URL is set to say lowercase, but the user tries to access the site with uppercase. Since many servers are case-insensitive it will work, but WordPress wont recognize the uppercase part as part of the Site URL and will treat it like a query, which is wrong.
My patch makes WordPress match the url case-insensitively, which should remove the problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>8847.patch attached to Ticket #8847</title>
      
        <dc:creator>jakbob</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:10:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8847/8847.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8847/8847.patch/1300990232075316</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:13/1300990014160079</guid>
      <description>&lt;p&gt;
Ok, what I'm trying to say is: Since you can't get rid of edButtons and edButton, there's no point in exposing a new QuickTags class.
&lt;/p&gt;
&lt;p&gt;
In general, it's better to extend the existing API than to deprecate it. And yes, edButtons and edButton are API.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 24 Mar 2011 18:03:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:12/1300989817079215</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16695#comment:11" title="Comment 11"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would you still be able to manipulate the button list array (remove, re-order)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes you would after I provide back compat.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Having two methods of doing the exact same thing is not a good idea.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Which 2 methods, and which same thing?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think a better approach would be to wrap everything in a closure and just expose edButtons and edButton, with an additional callback argument.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In my patch, all the things that should be private are already in a closure. Only QuickTags class and public classes that belong to that namespace are exposed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:11/1300989099238007</guid>
      <description>&lt;p&gt;
Would you still be able to manipulate the button list array (remove, re-order)?
&lt;/p&gt;
&lt;p&gt;
Having two methods of doing the exact same thing is not a good idea.
&lt;/p&gt;
&lt;p&gt;
I think a better approach would be to wrap everything in a closure and just expose edButtons and edButton, with an additional callback argument.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13841 (Some HTTP Transports do not respect transfer timeouts) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:48:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13841#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13841#comment:10/1300988900440166</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:46:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:10/1300988816398399</guid>
      <description>&lt;p&gt;
OK, perhaps I should have explained a bit more.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Providing backward-compatibility is not hard. I already made enough room in this patch to support backward compat. I'll update the patch in a couple of days.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Creating a new tag button (equivalent to &lt;code&gt;new ed_button()&lt;/code&gt; in the old approach) is basically similar function call, just replace edButton() with QuickTags.TagButton(). The argument order is the same.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
So in short, when you look at it from outside, the interface is basically the same. Only difference is proper namespaces.
&lt;/p&gt;
&lt;p&gt;
I shouldn't have chosen the word "harder", but instead  "more advanced", since this new API allows devs to create new button classes that suit their needs. For example, custom buttons that have a custom callback that displays a lightbox etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16525 (Clarification of license for phpatomlib / AtomLib) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:36:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16525#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16525#comment:18/1300988202652539</guid>
      <description>invalid: &lt;p&gt;
Stop already.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Atomlib was originally written for WordPress and contributed under the GPL. The original contributor later added it to Google Code and offered it under the Apache License. It shouldn't even be considered an external package, but come 3.2, it's going to be replaced anyway. Considering this one as fixed.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:33:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:9/1300988008559274</guid>
      <description>&lt;p&gt;
I don't see how being harder to extend makes it better. We need to keep back compat here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16525 (Clarification of license for phpatomlib / AtomLib) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:32:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16525#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16525#comment:17/1300987957073914</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16525#comment:16" title="Comment 16"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16525#comment:15" title="Comment 15"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Next that this is plain wrong[, is this your personal opinion or are you speaking as someone from wordpress.org?]
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Simple little finger pointing tidbits like this without actual logical discussion are not useful nor productive.
&lt;/p&gt;
&lt;p&gt;
So, please explain your reasoning why that you think it's "plain wrong".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps, e.g. if you could explain me if that is wordpress.org opinion or not. I beg your pardon if this seems a bit reserved it's just because what happened in other discussions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>garyc40</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:8/1300987688382170</guid>
      <description>&lt;p&gt;
Providing backward compatibility is not hard. I was thinking about including it in my patch, but didn't have time to get around to it. We can always restore the global variables edButtons, as well as the edButton class (which will be a wrapper of the TagButton class).
&lt;/p&gt;
&lt;p&gt;
Also, personally, I didn't consider the current way of adding quick tag button as in the article above an API. It's more like a hack.
&lt;/p&gt;
&lt;p&gt;
I actually don't think this is over-engineering. Big change, yes. A bit harder to inherit and extend, yes. But if we have a chance to refactor it this time, why don't we do it right?
&lt;/p&gt;
&lt;p&gt;
To make it easier for devs to inherit and extend base classes, we can always provide another abstraction layer like prototype does with &lt;code&gt;Class.create()&lt;/code&gt; or &lt;code&gt;Object.extend()&lt;/code&gt;. But that would make quicktags less lightweight.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 24 Mar 2011 17:09:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:13/1300986551557202</guid>
      <description>&lt;p&gt;
Just thinking out loud here, but it seems to me that you should be able to stop the process at the point of template_include for a HEAD request. Everything that is going to set a header should have set it by this point, because once you include the template, you're in producing-output territory and headers can't be sent any more.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16742 (Meta query doesn't work with $wp_query-&gt;set()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:52:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16742#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16742#comment:22/1300985579785324</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16742#comment:21" title="Comment 21"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looking at the current solution, I think it might have been safer to go with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16742/16742.class.diff" title="Attachment '16742.class.diff' in Ticket #16742"&gt;16742.class.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16742/16742.class.diff" title="Download"&gt;​&lt;/a&gt; after all. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yeah, the little fix wasn't so little.  Though the hash cleanup should benefit further meta query work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16742 (Meta query doesn't work with $wp_query-&gt;set()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:26:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16742#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16742#comment:21/1300983999885460</guid>
      <description>&lt;p&gt;
Looking at the current solution, I think it might have been safer to go with &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16742/16742.class.diff" title="Attachment '16742.class.diff' in Ticket #16742"&gt;16742.class.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16742/16742.class.diff" title="Download"&gt;​&lt;/a&gt; after all. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16742 (Meta query doesn't work with $wp_query-&gt;set()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:16:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16742#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16742#comment:20/1300983364732435</guid>
      <description>&lt;p&gt;
I went ahead with the hash cleanup. Please review thoroughly.  The hash is now computed at the end of parse_query() right before the parse_query action.   It is computed again in get_posts() after pre_get_posts and fill_query_vars() have run.  If the query vars hash changed via the parse_query or pre_get_posts actions then the query_vars_changed flag is set to true so that the tax and meta parsers know to do their thing again. There are no other filters or actions that run between when the hash is recomputed and when the taxonomy and meta queries are parsed again.
&lt;/p&gt;
&lt;p&gt;
Tested with init, pre_get_posts, and parse_query hooks that exercised a variety of meta and tax queries via set() and get_posts() calls on the main query and newly instantiated queries.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16125 (Tag cloud widget: hide dropdown when there's only one taxonomy) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:15:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16125#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16125#comment:6/1300983321829067</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would love to hide the dropdown (make it input:hidden so it still saves) when there is only one taxonomy that supports a tag cloud. Less UI for the win.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Would like a patch to implement this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16806 (Duplicate strings in XML-RPC) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:13:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16806#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16806#comment:7/1300983234556710</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16806 (Duplicate strings in XML-RPC) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:12:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16806#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16806#comment:6/1300983169847372</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17554" title="Change this string to one that already exists. props ericmann, fixes ..."&gt;[17554]&lt;/a&gt;) Change this string to one that already exists. props ericmann, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16806" title="#16806: defect (bug): Duplicate strings in XML-RPC (closed: fixed)"&gt;#16806&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17554]: Change this string to one that already exists. props ericmann, fixes ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17554</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17554/1300983167707793</guid>
      <description>&lt;p&gt;
Change this string to one that already exists. props ericmann, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16806" title="#16806: defect (bug): Duplicate strings in XML-RPC (closed: fixed)"&gt;#16806&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16742 (Meta query doesn't work with $wp_query-&gt;set()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:08:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16742#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16742#comment:19/1300982884032335</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17553" title="Parse the meta query again if query vars change.  Set a global ..."&gt;[17553]&lt;/a&gt;) Parse the meta query again if query vars change.  Set a global query_vars_changed flag instead of doing multiple hash creation calls. Props greuben. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16742" title="#16742: defect (bug): Meta query doesn't work with $wp_query-&amp;gt;set() (closed: fixed)"&gt;#16742&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17553]: Parse the meta query again if query vars change.  Set a global ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:08:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17553</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17553/1300982882124959</guid>
      <description>&lt;p&gt;
Parse the meta query again if query vars change.  Set a global query_vars_changed flag instead of doing multiple hash creation calls. Props greuben. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16742" title="#16742: defect (bug): Meta query doesn't work with $wp_query-&amp;gt;set() (closed: fixed)"&gt;#16742&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16742 (Meta query doesn't work with $wp_query-&gt;set()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16742#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16742#comment:18/1300982847523536</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17552" title="Parse the meta query again if query vars change.  Set a global ..."&gt;[17552]&lt;/a&gt;) Parse the meta query again if query vars change.  Set a global query_vars_changed flag instead of doing multiple hash creation calls. Props greuben. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16742" title="#16742: defect (bug): Meta query doesn't work with $wp_query-&amp;gt;set() (closed: fixed)"&gt;#16742&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17552]: Parse the meta query again if query vars change.  Set a global ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:07:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17552</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17552/1300982844985859</guid>
      <description>&lt;p&gt;
Parse the meta query again if query vars change.  Set a global query_vars_changed flag instead of doing multiple hash creation calls. Props greuben. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16742" title="#16742: defect (bug): Meta query doesn't work with $wp_query-&amp;gt;set() (closed: fixed)"&gt;#16742&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 16:05:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365#comment:13/1300982757091548</guid>
      <description>&lt;p&gt;
A few of us have expressed interest in this ticket (for 3.2), but I don't think we know how we want to implement it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16525 (Clarification of license for phpatomlib / AtomLib) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 24 Mar 2011 14:45:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16525#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16525#comment:16/1300977948605946</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16525#comment:15" title="Comment 15"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Next that this is plain wrong...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Simple little finger pointing tidbits like this without actual logical discussion are not useful nor productive.
&lt;/p&gt;
&lt;p&gt;
So, please explain your reasoning why that you think it's "plain wrong".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16525 (Clarification of license for phpatomlib / AtomLib) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 14:43:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16525#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16525#comment:15/1300977796762693</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16525#comment:14" title="Comment 14"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Therefore there is no actual conflict. &lt;strong&gt;A GPLv1 package can legitimately contain GPLv2 code and vice-versa&lt;/strong&gt; [emphasis added], as there's no extra restrictions on GPLv2 code under the GPLv1 definition.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Next to that this is just plain wrong, is this your personal opinion or are you speaking as someone from wordpress.org?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16525 (Clarification of license for phpatomlib / AtomLib) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 24 Mar 2011 14:20:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16525#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16525#comment:14/1300976445106851</guid>
      <description>&lt;p&gt;
Also, it is worth pointing out that the GPLv2 is fully cross-compatible with the GPLv1. The change in v2 was to add section 7 which basically clarifies that if you cannot fulfill the license terms, you have no right to distribute the software. This is not a new restriction in the sense of the GPLv1's no-extra-restrictions clause, and therefore v2 and v1 are completely cross-compatible (which is not the case with the GPLv3).
&lt;/p&gt;
&lt;p&gt;
Therefore there is no actual conflict. A GPLv1 package can legitimately contain GPLv2 code and vice-versa, as there's no extra restrictions on GPLv2 code under the GPLv1 definition.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16525 (Clarification of license for phpatomlib / AtomLib) updated</title>
      
        <dc:creator>Otto42</dc:creator>

      <pubDate>Thu, 24 Mar 2011 14:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16525#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16525#comment:13/1300975940080183</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16525#comment:12" title="Comment 12"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I see a conflict in putting a GPL v2 licensed code into a package that grants usage under GPL v1 from 2007-01-24 ongooing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
But as you yourself just pointed out, WordPress is now GPLv2+, not GPLv1+.
&lt;/p&gt;
&lt;p&gt;
So again, where's the conflict?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16525 (Clarification of license for phpatomlib / AtomLib) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 14:09:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16525#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16525#comment:12/1300975781463286</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16525#comment:10" title="Comment 10"&gt;Otto42&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't understand your response. How is that a conflict?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I see a conflict in putting a GPL v2 licensed code into a package that grants usage under GPL v1 from 2007-01-24 ongoing.
&lt;/p&gt;
&lt;p&gt;
A similar conflict between the Wordpress licensing and KSES licensing resulted in &lt;a class="ext-link" href="http://hakre.wordpress.com/2011/01/15/wordpress-changes-gpl-license-text-again/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;changing Wordpress licensing terms&lt;/a&gt;. Wordpress.org did put code licensed under GPL v2+ into it's GPL package that by it's own license granted usage under GPL v1 as well. You find the related issue here: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16039" title="#16039: defect (bug): Copyright Problem: Original Copyright Statement, Licensing Information ... (closed: fixed)"&gt;#16039&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 14:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365#comment:12/1300975420863105</guid>
      <description>&lt;p&gt;
It's because we're focusing on something else for this release:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Also, as ryan hinted at, a larger cleanup is required.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14466 (Widget position uses footer position styling) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 14:01:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14466#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14466#comment:13/1300975292250166</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Crazy idea: rename the admin #footer to #wpfooter, to match #wphead.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:32/1300975018515726</guid>
      <description>&lt;p&gt;
@dd32, I'll try and test soon.  I am not in a place where I can test currently.  I am however looking over the refreshed patch and see code changes for wp_list_pluck, which I assume should not have made it into this patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) updated</title>
      
        <dc:creator>maorb</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365#comment:11/1300974998103233</guid>
      <description>&lt;p&gt;
:(
Why not? Is it too complicated to achieve for the 3.2 timeline?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14484 (Make WordPress core updates only update the core) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14484#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14484#comment:20/1300974817248782</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The blessing: &lt;a class="ext-link" href="https://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/#comment-17295"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wpdevel.wordpress.com/2011/03/18/wordpress-3-2-the-plan-faster-lighter/#comment-17295&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:52:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365#comment:10/1300974771998784</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Seems 3.2 is not be the right time for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:50:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:6/1300974634331045</guid>
      <description>&lt;p&gt;
I would just like to mention that the widgets screen doesn't exhibit this behaviour.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:12/1300974512858305</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16889 (Having a location header does not mean that there should be a redirection.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:47:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16889#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16889#comment:7/1300974462651299</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16889 (Having a location header does not mean that there should be a redirection.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:47:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16889#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16889#comment:6/1300974456770480</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16889#comment:4" title="Comment 4"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Unfortunately, I don't think it's going to be possible to adhere to this specification.
&lt;/p&gt;
&lt;p&gt;
cURL(CURLOPT_FOLLOWLOCATION), HTTP Extension, and Streams (therefor PHP Internally) all follow redirects on 200 (ie. non-3xx) responses, this seems to be done (From what I can understand) for compatibility reasons with older web servers (unsure of which ones specifically)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Most certainly by &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc2616#section-6.2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;6.2 Response Header Fields&lt;/a&gt; and &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc2616#section-14.30"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;14.30 Location&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's probably best to standardise on following location regardless of the response code as we're currently doing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I now think so as well now. Thanks for your support so far.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16888 (WP HTTP Curl transport is only handling some but not all redirect ...) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 13:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16888#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16888#comment:13/1300974142970172</guid>
      <description>wontfix: &lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16888#comment:12" title="Comment 12"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
on the back of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16889" title="#16889: defect (bug): Having a location header does not mean that there should be a redirection. (closed: fixed)"&gt;#16889&lt;/a&gt;, it might be best to consider handling a location header being present instead of handling it by response code.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For 201 this makes sense. We didn't cover it before as well, right.
&lt;/p&gt;
&lt;p&gt;
Let's consider this done for the moment.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16606 (WP_Http_Streams::test doesn't check enough to confirm if it can do HTTPS) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 12:50:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16606#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16606#comment:3/1300971009446550</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16959#comment:3" title="Comment 3 for #16959: defect (bug): Core HTTP Transports implementation can support $url in test(). (closed: maybelater)"&gt;3:ticket:16959&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16606.3.patch attached to Ticket #16606</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 12:16:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16606/16606.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16606/16606.3.patch/1300969017639131</guid>
      <description>&lt;p&gt;
Test streams transport HTTP? (correct Scheme specified by URL) and SSL support
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16959 (Core HTTP Transports implementation can support $url in test().) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 12:09:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16959#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16959#comment:4/1300968560444648</guid>
      <description>&lt;p&gt;
My Backstory: I didn't know it's passed to there as it was hidden in code. But it's good to know as &lt;code&gt;test()&lt;/code&gt; implementations still can actually benefit from it.
&lt;/p&gt;
&lt;p&gt;
Actually I was looking for it earlier today in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16606" title="#16606: defect (bug): WP_Http_Streams::test doesn't check enough to confirm if it can do HTTPS (closed: fixed)"&gt;#16606&lt;/a&gt;, passing of the URL allows to check for the actual stream transport. So I've added another patch: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16606/16606.3.patch" title="Attachment '16606.3.patch' in Ticket #16606"&gt;16606.3.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16606/16606.3.patch" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16858 (Usage of HTTP_HOST in the administration) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:35:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16858#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16858#comment:13/1300966527172901</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16858#comment:12" title="Comment 12"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't see a need for these links to be absolute url's, most links in the WordPress admin are relative (ie. just &lt;code&gt;edit.php?..&lt;/code&gt;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see it either, had running this quite fine: &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16932/16932-hotfix-path-mapping.patch" title="Attachment '16932-hotfix-path-mapping.patch' in Ticket #16932"&gt;16932-hotfix-path-mapping.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16932/16932-hotfix-path-mapping.patch" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We should be able to just call add_query_arg() / remove_query_arg() without the $url parameter first.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like the idea and the &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16858/16858.diff" title="Attachment '16858.diff' in Ticket #16858"&gt;patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16858/16858.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, Looking at the other uses of HTTP_HOST in WordPress, if it's not being corrected afterwards, a lot of login related redirections will fail as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
They mostly do absolute URIs already as far as I know, the ones which do not, I put on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16909" title="#16909: defect (bug): some Location headers are using relative url's (2) (closed: wontfix)"&gt;#16909&lt;/a&gt;. Absolute URIs normally resolves through the _site_url() which are bound to the setting, not the environment variable and therefore safe.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16954 (Set "min-width" for textareas) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:29:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16954#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16954#comment:9/1300966160067885</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16954#comment:6" title="Comment 6"&gt;Simek&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Remember that normal text inputs are not resizeable, so even the user resize textarea to fit small resolution, the rest of inputs will remain with standard width and cause vertical scroll.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but these controls are accessibe by tabbing and they fit usually on a single page. But writing in a textarea that is wider than the page is a pain. I’m asking for the user’s benefits of such a restriction to understand the issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16959 (Core HTTP Transports implementation can support $url in test().) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16959#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16959#comment:3/1300965596789491</guid>
      <description>&lt;p&gt;
Backstory: It was originally added for the purpose of proxy-blocking in the streams or fopen transport, but since we now require PHP5.2.4, it was no longer needed (And I forgot to remove it from the called location)
&lt;/p&gt;
&lt;p&gt;
Since it neither adds, or removes functionality/need, theres no need for a change  here
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16954 (Set "min-width" for textareas) updated</title>
      
        <dc:creator>Simek</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16954#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16954#comment:8/1300965583506380</guid>
      <description>&lt;p&gt;
You've got right - there should be horizontal scroll mentioned in first paragraph and vertical value for CSS "reset" attribute.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16932 (Media Upload top navigation producing wrong URLs when WordPress is run ...) updated</title>
      
        <dc:creator>tploch</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:19:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16932#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16932#comment:16/1300965558337685</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16932#comment:15" title="Comment 15"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Once you start to use another ReverseProxy/Load balancer setup you'll find that they can also use different fieldnames, for example, HTTP_X_ORIGINAL_HOST (Which is what a IIS-based setup uses IIRC)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One could use &lt;code&gt;$_SERVER['SERVER_SOFTWARE']&lt;/code&gt; to determine which headers/variables to inspect. Well, I hope the HTTP_HOST issue will be fixed in some time, so thanks to all for your help :)
&lt;/p&gt;
&lt;p&gt;
Best regards
Thomas
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16959 (Core HTTP Transports implementation can support $url in test().) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16959#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16959#comment:2/1300965461722686</guid>
      <description>maybelater: &lt;p&gt;
When it's needed, or is useful, it's available.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16959 (Core HTTP Transports implementation can support $url in test().) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:16:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16959#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16959#comment:1/1300965413888105</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11613 (HTTP API may make a request on an unsupporting transport) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:16:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11613#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11613#comment:17/1300965392326900</guid>
      <description>&lt;p&gt;
Follow-Up; Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16959" title="#16959: defect (bug): Core HTTP Transports implementation can support $url in test(). (closed: maybelater)"&gt;#16959&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16954 (Set "min-width" for textareas) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:15:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16954#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16954#comment:7/1300965352291429</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Remember that normal text inputs are not resizeable, so even the user resize textarea to fit small resolution, the rest of inputs will remain with standard width and cause vertical scroll.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How would a fixed width cause vertical scroll? You mean horizontal scroll, right?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I made some test with this and I must say that "none" value is a problem because when I set resize to "horizontal" all browsers interpreted it in a good way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, shouldn't you be testing "resize: vertical"?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16959.patch attached to Ticket #16959</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16959/16959.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16959/16959.patch/1300965343840387</guid>
      <description>&lt;p&gt;
adding $url
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16959 (Core HTTP Transports implementation can support $url in test().) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16959</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16959/1300965284602821</guid>
      <description>&lt;p&gt;
A sort of Follow-Up: With &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17550" title="Fix WP_HTTP to only make a request upon a working transport, as well ..."&gt;[17550]&lt;/a&gt;, those functions are called with the addiotnal $url parameter. I think the change is useful.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:12:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:9/1300965139026849</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16954 (Set "min-width" for textareas) updated</title>
      
        <dc:creator>Simek</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:11:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16954#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16954#comment:6/1300965109208997</guid>
      <description>&lt;p&gt;
Remember that normal text inputs are not resizeable, so even the user resize textarea to fit small resolution, the rest of inputs will remain with standard width and cause vertical scroll.
&lt;/p&gt;
&lt;p&gt;
According to resize:none in wp-admin.css - FF 4 (Gecko based) ignore this setting completely, Safari and Chrome (Webkit based) ignores this setting partial (don't allow to shrink areas but allow to resize).
&lt;/p&gt;
&lt;p&gt;
I made some test with this and I must say that "none" value is a problem because when I set resize to "horizontal" all browsers interpreted it in a good way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16858.diff attached to Ticket #16858</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16858/16858.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16858/16858.diff/1300964987501160</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16858 (Usage of HTTP_HOST in the administration) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:08:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16858#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16858#comment:12/1300964896126375</guid>
      <description>&lt;p&gt;
I don't see a need for these links to be absolute url's, most links in the WordPress admin are relative (ie. just &lt;code&gt;edit.php?..&lt;/code&gt;)
&lt;/p&gt;
&lt;p&gt;
We should be able to just call add_query_arg() / remove_query_arg() without the $url parameter first.
&lt;/p&gt;
&lt;p&gt;
However, Looking at the other uses of HTTP_HOST in WordPress, if it's not being corrected afterwards, a lot of login related redirections will fail as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16958 (Dead Code in WP_Http::processResponse()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 11:05:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16958#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16958#comment:1/1300964712583395</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Is this an actual bug? &lt;a class="ext-link" href="http://wpdevel.wordpress.com/2011/03/23/code-refactoring/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wpdevel.wordpress.com/2011/03/23/code-refactoring/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16954 (Set "min-width" for textareas) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:58:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16954#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16954#comment:5/1300964283346297</guid>
      <description>&lt;p&gt;
Ah, I see that &lt;code&gt;resize: none&lt;/code&gt; is actually done in wp-admin.css not a plugin.
&lt;/p&gt;
&lt;p&gt;
toscho asked a good question.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16954 (Set "min-width" for textareas) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:55:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16954#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16954#comment:4/1300964151103859</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Why is resizing to a smaller size a problem? Users may do that to make the textarea fit into a small window.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16958.patch attached to Ticket #16958</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:54:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16958/16958.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16958/16958.patch/1300964099400176</guid>
      <description>&lt;p&gt;
first member of array will always be set by the explode command.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16958 (Dead Code in WP_Http::processResponse()) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16958</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16958/1300963904314444</guid>
      <description>&lt;p&gt;
See patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16932 (Media Upload top navigation producing wrong URLs when WordPress is run ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:48:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16932#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16932#comment:15/1300963724893157</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
the pagination uses the wrong domain &lt;a class="ext-link" href="http://example.com/blog/wp-admin/upload.php?paged=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/blog/wp-admin/upload.php?paged=1&lt;/a&gt; while it should be &lt;a class="ext-link" href="http://otherdomain.com/blog/wp-admin/upload.php?paged=1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://otherdomain.com/blog/wp-admin/upload.php?paged=1&lt;/a&gt;, so fixing REQUEST_URI did not fix the general problem
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
sounds like that's because of the usage of HTTP_HOST &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/16858" title="#16858: defect (bug): Usage of HTTP_HOST in the administration (reviewing)"&gt;#16858&lt;/a&gt; (HTTP_HOST should have never been used) - That'll be getting fixed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Probably this setup is beyond the scope of what WordPress should be able to do
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Once you start to use another ReverseProxy/Load balancer setup you'll find that they can also use different fieldnames, for example, HTTP_X_ORIGINAL_HOST (Which is what a IIS-based setup uses IIRC)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16932 (Media Upload top navigation producing wrong URLs when WordPress is run ...) updated</title>
      
        <dc:creator>tploch</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:37:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16932#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16932#comment:14/1300963060513979</guid>
      <description>&lt;p&gt;
Well, I changed the routing now by basically passing the whole URI containing the &lt;code&gt;/blog&lt;/code&gt; part to the proxy rewrite, and on the target server have another rewrite rewriting it from &lt;code&gt;/blog/foo/bar.php&lt;/code&gt; to &lt;code&gt;/foo/bar.php&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;REQUEST_URI&lt;/strong&gt; now reads &lt;code&gt;/blog/wp-admin/media-upload.php?post_id=1116&lt;/code&gt;, but stuff still breaks.
&lt;/p&gt;
&lt;p&gt;
i.E. When being on the media dashboard, the pagination uses the wrong domain &lt;code&gt;http://example.com/blog/wp-admin/upload.php?paged=1&lt;/code&gt; while it should be &lt;code&gt;http://otherdomain.com/blog/wp-admin/upload.php?paged=1&lt;/code&gt;, so fixing REQUEST_URI did not fix the general problem, which is inconsistent usage of hosts throughout the app.
&lt;/p&gt;
&lt;p&gt;
This time the &lt;code&gt;HTTP_X_FORWARDED_HOST&lt;/code&gt; header, if this is existent, it should take precedence over the configured home url.
&lt;/p&gt;
&lt;p&gt;
For me is another problem, there is no way that HTTP_X_FORWARDED headers tell you the protocol of the original request, and in my case i Proxy through SSL, so just inspecting this header is not enough.
&lt;/p&gt;
&lt;p&gt;
Probably this setup is beyond the scope of what WordPress should be able to do, but if the HTTP_X_FORWARDED_HOST header was sent, you could inspect the referer protocol (which will be set to the proxy domain).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16950.patch attached to Ticket #16950</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:21:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16950/16950.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16950/16950.patch/1300962114353981</guid>
      <description>&lt;p&gt;
Example Filter on curl_exec in transport
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16957 (wptexturize - problem with numbers and non-breaking spaces) created</title>
      
        <dc:creator>pavelevap</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:21:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16957</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16957/1300962093291868</guid>
      <description>&lt;p&gt;
1) Insert following code into HTML editor and publish.
&lt;/p&gt;
&lt;pre class="wiki"&gt;New &amp;lt;strong&amp;gt;Year "2011" will be&amp;lt;/strong&amp;gt; fantastic.
&lt;/pre&gt;&lt;p&gt;
Then look at website:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;New &amp;lt;strong&amp;gt;Year &amp;amp;#8221;2011&amp;amp;#8243; will be&amp;lt;/strong&amp;gt; fantastic.&amp;lt;/p&amp;gt;
&lt;/pre&gt;&lt;p&gt;
You can see wrong html quotes.
&lt;/p&gt;
&lt;p&gt;
2) I also worked with TinyMCE editor (only writing simple text, paragraphs, strong, moving some parts of text by CTRL+C and CTRL+V). But after publishing, there were hidden non-breaking spaces in text. There were on different places, for example before "(" and after characters ".", "í", "é", etc. But they were random. I am not sure how it can be caused? Non-breaking strings were not visible and also not transformed into &amp;amp;nbsp; HTML entity on website. I noticed them only in HEX editor, when examining HTML source code (C2 A0).
&lt;/p&gt;
&lt;p&gt;
Of course, when these non-breaking spaces were before (or after) quotes, then quotes were not recognized regurarly by wpuntexturize, example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Nemám žádné "úžasné" schopnosti.
&lt;/pre&gt;&lt;p&gt;
Is transformed by wpuntexturize into:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p&amp;gt;Nemám žádné &amp;amp;#8221;úžasné&amp;amp;#8221 schopnosti&amp;lt;/p&amp;gt;.
&lt;/pre&gt;&lt;p&gt;
You can see wrong open quote:
&lt;/p&gt;
&lt;pre class="wiki"&gt;instead of &amp;amp;#8220 there is &amp;amp;#8221;
&lt;/pre&gt;&lt;p&gt;
But only when hidden non-breaking space (C2 A0) is between žádné a "úžasné".
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16950 (Provide a redirected-to URI) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:19:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16950#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16950#comment:5/1300961995747137</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
think the creator of the ticket asks to introduce a new HOOK
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The original problem/causation is in the other ticket, and now changed, rendering this other approach moot.
&lt;/p&gt;
&lt;p&gt;
Such a hook cannot be added reliably to the other transports, and adding a per-transport filter/action is asking for trouble.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16950 (Provide a redirected-to URI) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 10:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16950#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16950#comment:4/1300961695239951</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16950#comment:1" title="Comment 1"&gt;cogmios&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
do_action( 'http_api_curl_info', $handle) is not correct it should be do_action('http_api_curl_info', $location) where $location is the new URL if supplied (since I see now that on non-empty-basepath systems the URL in curl_info does not contain the proposed new location.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Probably you should provide a patch so it's more clear what this is about.
&lt;/p&gt;
&lt;p&gt;
Keep in mind that for hooks, a general use should be supported, e.g. why not passing more than one variable to it? So the $handle, $location, $args.
&lt;/p&gt;
&lt;p&gt;
I'll write a short patch.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16950#comment:2" title="Comment 2"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
closing as duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16855" title="#16855: defect (bug): HTTP API No Follow Redirection (closed: fixed)"&gt;#16855&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the creator of the ticket asks to introduce a new HOOK after curl_exec() has been run on a $handle.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16606 (WP_Http_Streams::test doesn't check enough to confirm if it can do HTTPS) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16606#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16606#comment:2/1300960783704636</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16606#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Should investigate &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/class-http.php#L652"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WP_HTTP_Fsockopen()&lt;/a&gt; as well here
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
WP_Http_Fsockopen::test() tests for openssl library; Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/10864" title="Proxy support. Props DD32. see #4011"&gt;[10864]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:51:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:31/1300960310645619</guid>
      <description>&lt;p&gt;
would've helped if I used the right function (memory_get_peak_usage())
&lt;/p&gt;
&lt;p&gt;
results are similar, &amp;lt;2000 extra bytes used for all transports aside for the HTTP Extension:
&lt;/p&gt;
&lt;pre class="wiki"&gt;exthttp consumed 9,314,240 Bytes of memory to download 3,096.07kB, took 8 seconds, @ 387.01 K/s
&lt;/pre&gt;&lt;p&gt;
That's the difference between the peak memory usage before a wp_remote_request() and after it completed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16606.2.patch attached to Ticket #16606</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:47:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16606/16606.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16606/16606.2.patch/1300960044870139</guid>
      <description>&lt;p&gt;
Test streams transport HTTP and SSL support
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16606.patch attached to Ticket #16606</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:44:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16606/16606.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16606/16606.patch/1300959841469367</guid>
      <description>&lt;p&gt;
Test streams transport SSL support
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:36:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:30/1300959411618064</guid>
      <description>&lt;p&gt;
Added a unit test to verify the download sizes, seems right, Headers are parsed correctly still too.
&lt;/p&gt;
&lt;p&gt;
Just tested on 2 systems: (Note, this is not a unit test output, a functional benchmark output instead)
&lt;/p&gt;
&lt;pre class="wiki"&gt; exthttp had an error: There are no HTTP transports available which can complete the requested request.
 curl consumed 7856 Bytes of memory to download 3,096.07kB, took 6 seconds, @ 516.01 K/s
 streams consumed 584 Bytes of memory to download 3,096.07kB, took 7 seconds, @ 442.3 K/s
 fsockopen consumed 608 Bytes of memory to download 3,096.07kB, took 6 seconds, @ 516.01 K/s
 exthttp consumed 14352 Bytes of memory to download 3,096.07kB, took 9 seconds, @ 344.01 K/s
 curl consumed 544 Bytes of memory to download 3,096.07kB, took 90 seconds, @ 34.4 K/s (Note: This slow request couldn't be duplicated, probably some local bottleneck)
 streams had an error: There are no HTTP transports available which can complete the requested request.
 fsockopen consumed 2976 Bytes of memory to download 3,096.07kB, took 6 seconds, @ 516.01 K/s
&lt;/pre&gt;&lt;p&gt;
Those numbers seem off, So i've re-run it with the 'real_memory' param of memory_get_usage() enabled, and all of them aside from HTTP extension returned 0 bytes used:
&lt;/p&gt;
&lt;pre class="wiki"&gt;exthttp consumed 262144 Bytes of memory to download 3,096.07kB, took 8 seconds, @ 387.01 K/s
&lt;/pre&gt;&lt;p&gt;
Overall, we're going to expect the HTTP Extension to use the most memory due to the implementation, however my testing systems don't seem to be able to give me actual memory usage figures..
&lt;/p&gt;
&lt;p&gt;
Will test on another system tomorrow and commit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:18/1300958288789338</guid>
      <description>&lt;p&gt;
Some more details: I think the issue is caused by changes to &lt;code&gt;jQuery.find()&lt;/code&gt; (Sizzle).
&lt;/p&gt;
&lt;p&gt;
The folks at Twitter encountered similar problems and have reverted back to jQuery 1.4.2 for the time being: see &lt;a class="ext-link" href="http://www.dustindiaz.com/about-that-slowness-on-twitter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; and &lt;a class="ext-link" href="http://ejohn.org/blog/learning-from-twitter/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;here&lt;/a&gt; for details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16956 (Comments Being Pulled from Non-Existent Post Types) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:13:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16956#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16956#comment:1/1300958026266292</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15986 (Consistent TinyMCE icons) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15986#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15986#comment:13/1300957988270421</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15986#comment:12" title="Comment 12"&gt;chexee&lt;/a&gt;: There's no need for a patch. The new icons seem to be exactly the same size as the current, so we just need to replace the image.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16932 (Media Upload top navigation producing wrong URLs when WordPress is run ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 09:03:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16932#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16932#comment:13/1300957402561453</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Erm, how is this a server configuration issue if you are not even checking for X-Forwarded-For and X-Forwarded-Host headers?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In this case, it doesnt sound like those headers make a difference. REQUEST_URI only contains the path being requested, ie. on your system it *should* be &lt;code&gt;/blog/wp-admin/media-upload.php?post_id=1116&lt;/code&gt; but seems to be set to &lt;code&gt;/wp-admin/media-upload.php?post_id=1116&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Dump out $_SERVER and check the paths, see if they all match up as they should.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11136 (Media upload tabs broken if not deployed in root) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 08:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11136#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11136#comment:7/1300956869493075</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16932" title="#16932: defect (bug): Media Upload top navigation producing wrong URLs when WordPress is run ... (closed: invalid)"&gt;#16932&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That ticket also has a hotfix patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15782 (Consolidate header Javascript) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 24 Mar 2011 08:48:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15782#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15782#comment:6/1300956523050524</guid>
      <description>&lt;p&gt;
At first look the patch seems right, it removes few duplicate lines of HTML and replaces them with two PHP functions. However at closer look it actually adds more code instead of reducing it.
&lt;/p&gt;
&lt;p&gt;
It also seems to loose the &lt;code&gt;$hook_suffix&lt;/code&gt; global which seems to be redundant in the first place as only the &lt;code&gt;$admin_body_class&lt;/code&gt; global is needed in the script. Another weakness is that the patch allows defaults to be overwritten. These JS globals should be consistent and exactly the same as the PHP globals.
&lt;/p&gt;
&lt;p&gt;
Perhaps a better approach is to just output the script as it is in the admin head at the moment, without much PHP processing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 24 Mar 2011 08:18:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:5/1300954713390582</guid>
      <description>&lt;p&gt;
Most likely caused by updated jQuery and jQuery UI in 3.1. We seem to be fast to update the JS libraries with little testing. It took many many hours to get this to work properly when we first introduced it, don't think it would make it in 3.1.1 if we have to redo it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 24 Mar 2011 08:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:17/1300954468240794</guid>
      <description>&lt;p&gt;
The only way I can fix this is to completely disable sorting on the &lt;code&gt;side-sortables&lt;/code&gt; div (for IE7/8) - trying to just exclude the parent page div doesn't work. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16643/this-works.diff" title="Attachment 'this-works.diff' in Ticket #16643"&gt;this-works.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16643/this-works.diff" title="Download"&gt;​&lt;/a&gt; does this, and then the dropdown works fine.
&lt;/p&gt;
&lt;p&gt;
I'm not saying we should do this - just putting it there because it works. I personally am quite happy to ask people to switch to a friendlier browser :).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>this-works.diff attached to Ticket #16643</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 24 Mar 2011 08:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16643/this-works.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16643/this-works.diff/1300954009644936</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16950 (Provide a redirected-to URI) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 24 Mar 2011 07:54:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16950#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16950#comment:3/1300953289191267</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17551" title="Allow for array('redirection' =&amp;gt; 0) to bypass WP_Error on redirects ..."&gt;[17551]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16125 (Tag cloud widget: hide dropdown when there's only one taxonomy) updated</title>
      
        <dc:creator>GautamGupta</dc:creator>

      <pubDate>Thu, 24 Mar 2011 07:53:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16125#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16125#comment:5/1300953207089365</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 24 Mar 2011 07:28:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:16/1300951738960388</guid>
      <description>&lt;p&gt;
Right, I've narrowed it further. The issue is with jQuery-ui-sortable (which operates on the parent page div - see &lt;code&gt;postbox.dev.js&lt;/code&gt;). For some reason it is really, really slow and it causes IE7/8 to fall over. There is a bug report over on &lt;a class="ext-link" href="http://bugs.jqueryui.com/ticket/5681"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;jQuery-ui trac&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
As for how to mitigate - only option seems to be to disable ui-sortable on that particular div for IE7/8. I'm working on a patch now to see whether it will work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16125 (Tag cloud widget: hide dropdown when there's only one taxonomy) updated</title>
      
        <dc:creator>kcssm</dc:creator>

      <pubDate>Thu, 24 Mar 2011 07:23:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16125#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16125#comment:4/1300951398306330</guid>
      <description>&lt;p&gt;
This ticket is 3 months old and its way before wordpress-3.1 was released, still this issue is not addressed in this new version. Hope this gets addressed in the next update to come.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16954 (Set "min-width" for textareas) updated</title>
      
        <dc:creator>Simek</dc:creator>

      <pubDate>Thu, 24 Mar 2011 07:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16954#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16954#comment:3/1300950791372396</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16954#comment:2" title="Comment 2"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you set resize: none, why not also add the CSS you wrote in the patch?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure that I understood you, but this patch is prepared to be applied and fixes shrinking issue for browsers which ignores resize: none.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 06:25:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:29/1300947923393330</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is going in once it's been fully tested and benchmarked.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16236 (Method to stream file downloads in HTTP API, to reduce update memory ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 06:24:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16236#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16236#comment:28/1300947891811873</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 16236.13.diff  added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Patch refresh after the latest class-http.php changes.
&lt;/p&gt;
&lt;p&gt;
The change to using CURLOPT_HEADERFUNCTION was causing the HEAD request unit tests to fail, so I re-worked the curl logic.
&lt;/p&gt;
&lt;p&gt;
sivel, can you test that to make sure it still works as expected?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16236.13.diff attached to Ticket #16236</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 06:22:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16236/16236.13.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16236/16236.13.diff/1300947760535249</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16840 (add_rewrite_rule() should accept an array for the $redirect parameter) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Thu, 24 Mar 2011 06:21:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16840#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16840#comment:1/1300947704553353</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16888 (WP HTTP Curl transport is only handling some but not all redirect ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 05:27:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16888#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16888#comment:12/1300944467249260</guid>
      <description>&lt;p&gt;
on the back of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16889" title="#16889: defect (bug): Having a location header does not mean that there should be a redirection. (closed: fixed)"&gt;#16889&lt;/a&gt;, it might be best to consider handling a location header being present instead of handling it by response code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16889 (Having a location header does not mean that there should be a redirection.) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 05:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16889#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16889#comment:5/1300944438771769</guid>
      <description>invalid: &lt;p&gt;
based on my previous comment, and further research into if it's possible, I'm closing as invalid. It's simply not possible to adhere to it whilst relying on any current-generation HTTP API offered by PHP.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16855 (HTTP API No Follow Redirection) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 05:24:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16855#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16855#comment:36/1300944250817791</guid>
      <description>&lt;p&gt;
You can find the current unit tests for the WP_HTTP class here: &lt;a class="ext-link" href="http://unit-tests.svn.wordpress.org/wp-testcase/test_http.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://unit-tests.svn.wordpress.org/wp-testcase/test_http.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Unit test results before:
&lt;/p&gt;
&lt;pre class="wiki"&gt;......F........FF..F...F........FFF......FF..F...F..
&lt;/pre&gt;&lt;p&gt;
Unit test results after: (Tested with, and without safe_mode)
&lt;/p&gt;
&lt;pre class="wiki"&gt;....................................................
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16855 (HTTP API No Follow Redirection) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 05:18:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16855#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16855#comment:35/1300943916197798</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17551" title="Allow for array('redirection' =&amp;gt; 0) to bypass WP_Error on redirects ..."&gt;[17551]&lt;/a&gt;) Allow for array('redirection' =&amp;gt; 0) to bypass WP_Error on redirects being encountered; Allows HEAD requests WITH 'redirection' &amp;gt; 0 specified at call time to follow redirections; Standardises on return values from all transports to act the same based on the Unit Tests. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16855" title="#16855: defect (bug): HTTP API No Follow Redirection (closed: fixed)"&gt;#16855&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17551]: Allow for array('redirection' =&gt; 0) to bypass WP_Error on redirects ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 05:18:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17551/1300943914027376</guid>
      <description>&lt;p&gt;
Allow for array('redirection' =&amp;gt; 0) to bypass WP_Error on redirects being encountered; Allows HEAD requests WITH 'redirection' &amp;gt; 0 specified at call time to follow redirections; Standardises on return values from all transports to act the same based on the Unit Tests. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16855" title="#16855: defect (bug): HTTP API No Follow Redirection (closed: fixed)"&gt;#16855&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16950 (Provide a redirected-to URI) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 05:08:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16950#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16950#comment:2/1300943301734653</guid>
      <description>duplicate: &lt;p&gt;
closing as duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16855" title="#16855: defect (bug): HTTP API No Follow Redirection (closed: fixed)"&gt;#16855&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset in tests [343]: Clarify requirements for WPHTTP tests; Document issues;</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 04:48:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/343/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/343/tests/1300942115931155</guid>
      <description>&lt;p&gt;
Clarify requirements for WPHTTP tests; Document issues;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 24 Mar 2011 04:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:15/1300941560474679</guid>
      <description>&lt;p&gt;
It would be great to corner this and, if necessary, report this upstream.
&lt;/p&gt;
&lt;p&gt;
Any enhancements we can make to our JS to make this go away?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16889 (Having a location header does not mean that there should be a redirection.) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 04:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16889#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16889#comment:4/1300941496299775</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Unfortunately, I don't think it's going to be possible to adhere to this specification.
&lt;/p&gt;
&lt;p&gt;
cURL(CURLOPT_FOLLOWLOCATION), HTTP Extension, and Streams (therefor PHP Internally) all follow redirects on 200 (ie. non-3xx) responses, this seems to be done (From what I can understand) for compatibility reasons with older web servers (unsure of which ones specifically)
&lt;/p&gt;
&lt;p&gt;
It's probably best to standardise on following location regardless of the response code as we're currently doing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16643 (Page Parent Dropdown in IE8) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 24 Mar 2011 04:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16643#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16643#comment:14/1300940918899846</guid>
      <description>&lt;p&gt;
Tracked this down - it is being caused by jQuery 1.4.4. Switching back to 1.4.2 removes the problem.
&lt;/p&gt;
&lt;p&gt;
PS jQuery 1.5.1 seems to have the same issue as 1.4.4.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15986 (Consistent TinyMCE icons) updated</title>
      
        <dc:creator>chexee</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:54:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15986#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15986#comment:12/1300938843415786</guid>
      <description>&lt;p&gt;
These look great. empireoflight: are you writing the patch for this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15887 (Capital letters for writing the word "Error") updated</title>
      
        <dc:creator>chexee</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15887#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15887#comment:7/1300938618209282</guid>
      <description>&lt;p&gt;
+1 marcoceppi. Error notices should be captalized for emphasis.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-bar-my-account-image.png attached to Ticket #16667</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:43:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16667/admin-bar-my-account-image.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16667/admin-bar-my-account-image.png/1300938207703430</guid>
      <description>&lt;p&gt;
Screen shot of problem that 'admin-bar-my-account.diff' fixes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16540 (Unnecessary use of global in admin-bar.php) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16540#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16540#comment:5/1300938005758348</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch refreshed
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16540.2.diff attached to Ticket #16540</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:39:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16540/16540.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16540/16540.2.diff/1300937962306945</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16667 (Admin Bar CSS Override Bugs) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:36:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16667#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16667#comment:17/1300937809866139</guid>
      <description>&lt;p&gt;
Note: Above 'admin-bar-my-account.diff' patch is for when the my-account menu includes an avatar, and a plugin has added an additional second level menu. Planning on using this technique in BuddyPress/bbPress (unless a better solution is out there.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>admin-bar-my-account.diff attached to Ticket #16667</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:33:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16667/admin-bar-my-account.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16667/admin-bar-my-account.diff/1300937626054029</guid>
      <description>&lt;p&gt;
Fixes issue where second level menus on my-account menu have 30px left gap
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15458 (Lazy-load usermeta into the user object) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:18:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15458#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15458#comment:12/1300936739782506</guid>
      <description>&lt;p&gt;
A more conservative approach would be to load everything by default, but have a blacklist, populated by a register_heavy_user_custom_field() function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8622 (HTTP API Fallover &amp; non-blocking order doesnt appear to be working) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 03:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8622#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8622#comment:17/1300935642291846</guid>
      <description>invalid: &lt;p&gt;
as of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt; being closed, this is mostly fixed.
&lt;/p&gt;
&lt;p&gt;
The non-blocking order is no longer important, as the other ticket takes care of it.
&lt;/p&gt;
&lt;p&gt;
The only remaining issue is that if a transport fails, thats it, end of story. The only place this causes problems is cases where the transport itself has a problem, ie &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16870" title="#16870: enhancement: consider disabling HTTP transport after multiple failed requests (closed: maybelater)"&gt;#16870&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm closing this as invalid now that &lt;code&gt;_getTransport()&lt;/code&gt; and &lt;code&gt;_postTransport()&lt;/code&gt; have been removed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt; and we can track the failures in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16870" title="#16870: enhancement: consider disabling HTTP transport after multiple failed requests (closed: maybelater)"&gt;#16870&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #16870 (consider disabling HTTP transport after multiple failed requests) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:59:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16870#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16870#comment:4/1300935547325360</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like a configuration issue on a host and not a defect with wordpress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, That is the exact problem. The transports are designed that it uses what is available on the host, If WordPress does not take into account a transport failing, we end up in a situation where Updates Notices do not flow through amongst other things. It's in the best interests of WordPress users to protect ourselves against these issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [342]: Add first set of WP_HTTP test cases; Covers Redirections and sending ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:53:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/342/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/342/tests/1300935186186094</guid>
      <description>&lt;p&gt;
Add first set of WP_HTTP test cases; Covers Redirections and sending extra headers.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16075 (Add Post Type Archives support in Nav Menus) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:35:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16075#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16075#comment:13/1300934145712768</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16075 (Add Post Type Archives support in Nav Menus) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16075#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16075#comment:12/1300934134734073</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11613 (HTTP API may make a request on an unsupporting transport) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:16:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11613#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11613#comment:16/1300932975617777</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17550" title="Fix WP_HTTP to only make a request upon a working transport, as well ..."&gt;[17550]&lt;/a&gt;) Fix WP_HTTP to only make a request upon a working transport, as well as to allow Unit Testing. Removes the getTransport() &amp;amp; postTransport() methods as they're no longer needed, replaces them with a single _dispatch_request() method. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [17550]: Fix WP_HTTP to only make a request upon a working transport, as well ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17550</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17550/1300932973413184</guid>
      <description>&lt;p&gt;
Fix WP_HTTP to only make a request upon a working transport, as well as to allow Unit Testing. Removes the getTransport() &amp;amp; postTransport() methods as they're no longer needed, replaces them with a single _dispatch_request() method. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/11613" title="#11613: defect (bug): HTTP API may make a request on an unsupporting transport (closed: fixed)"&gt;#11613&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14856 (Add an $args parameter to comment_text filter) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:15:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14856#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14856#comment:4/1300932903527392</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm getting a "malformed patch" error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15458 (Lazy-load usermeta into the user object) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:06:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15458#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15458#comment:11/1300932398550184</guid>
      <description>&lt;p&gt;
I can take a stab at this if no one has already started.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15458 (Lazy-load usermeta into the user object) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:05:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15458#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15458#comment:10/1300932309886114</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11613 (HTTP API may make a request on an unsupporting transport) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11613#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11613#comment:15/1300932216038880</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
With the removal of the fopen transport (Which only supported GET requests), there is no longer a requirement for a difference in the GET/POST transport orders.
&lt;/p&gt;
&lt;p&gt;
This in addition to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/8622" title="#8622: defect (bug): HTTP API Fallover &amp;amp; non-blocking order doesnt appear to be working (closed: maybelater)"&gt;#8622&lt;/a&gt; is preventing unit testing of the HTTP API as well.
&lt;/p&gt;
&lt;p&gt;
The following commit replaces _getTransport() &amp;amp; _postTransport() and adds a _dispatch_request() private method, the simple purpose of _dispatch_request() is to take the $args and determine a transport which the request can be made on, and then dispatch the request to that transport worker. (In addition, it clarifys the PHPDoc on the return of WP_HTTP::request() that it can return a WP_Error instance upon failure)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16105 (Add info re mobile apps to admin) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 02:00:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16105#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16105#comment:3/1300932041099253</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16181 (Hide Personal Options section via CSS) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:59:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16181#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16181#comment:2/1300931972926431</guid>
      <description>&lt;p&gt;
Even better than CSS would be to hide it in PHP.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16216 (Hide core updater if running an svn checkout) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:57:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16216#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16216#comment:2/1300931851578573</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
What koop said.
&lt;/p&gt;
&lt;p&gt;
Also, we should do the same per plugin/theme at some point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16540 (Unnecessary use of global in admin-bar.php) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:54:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16540#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16540#comment:4/1300931695182472</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Since we're on PHP5, we don't need to pass by reference anymore.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16695 (quicktags needs some refactoring) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16695#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16695#comment:7/1300931358907879</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I agree with everything, except the API change.
&lt;/p&gt;
&lt;p&gt;
The new API is over-engineered and breaks backwards compatibility:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://scribu.net/wordpress/right-way-to-add-custom-quicktags.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://scribu.net/wordpress/right-way-to-add-custom-quicktags.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16653 ("Class" dropdown box in link editor gone) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:41:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16653#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16653#comment:3/1300930894489497</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10461 (Multiple php notices from dashboard) updated</title>
      
        <dc:creator>sterlo</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10461#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10461#comment:9/1300930329061657</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10461#comment:8" title="Comment 8"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please leave a short note with the number of the new ticket in this ticket.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16956" title="#16956: defect (bug): Comments Being Pulled from Non-Existent Post Types (closed: fixed)"&gt;#16956&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16956 (Comments Being Pulled from Non-Existent Post Types) created</title>
      
        <dc:creator>sterlo</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16956</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16956/1300930232503469</guid>
      <description>&lt;p&gt;
Originally on: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10461" title="#10461: defect (bug): Multiple php notices from dashboard (closed: worksforme)"&gt;#10461&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I'm running standard LAMP on the latest trunk.
&lt;/p&gt;
&lt;p&gt;
Just viewing the dashboard with no plugins activated:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 918 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 918 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 918 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 918 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 918 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 918 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 919 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922 Notice: Trying to get property of non-object in /Users/grok/Projects/Local Development/wordpress/trunk/wp-includes/capabilities.php on line 922
&lt;/pre&gt;&lt;p&gt;
It's not recognizing "$post_type-&amp;gt;cap" as valid.
&lt;/p&gt;
&lt;p&gt;
And...here's why - I added this (/wp-includes/capabilities.php):
&lt;/p&gt;
&lt;pre class="wiki"&gt; 918 echo "POST TYPE: Y U NO OBJECT?\n";
 919 var_dump($post_type);
&lt;/pre&gt;&lt;p&gt;
And got:
&lt;/p&gt;
&lt;pre class="wiki"&gt;POST TYPE: Y U NO OBJECT?
NULL
&lt;/pre&gt;&lt;p&gt;
So in this context...the post type is null and the code was not expecting that.
&lt;/p&gt;
&lt;p&gt;
Opening the actual $post object:
&lt;/p&gt;
&lt;pre class="wiki"&gt;stdClass Object
(
    [ID] =&amp;gt; 60
    [post_author] =&amp;gt; 1
    [post_date] =&amp;gt; 2011-01-28 19:46:23
    [post_date_gmt] =&amp;gt; 2011-01-28 19:46:23
    [post_content] =&amp;gt; CONTENT!
    [post_title] =&amp;gt; I have it all!
    [post_excerpt] =&amp;gt;
    [post_status] =&amp;gt; publish
    [comment_status] =&amp;gt; open
    [ping_status] =&amp;gt; open
    [post_password] =&amp;gt;
    [post_name] =&amp;gt; i-have-it-all
    [to_ping] =&amp;gt;
    [pinged] =&amp;gt;
    [post_modified] =&amp;gt; 2011-01-28 19:46:28
    [post_modified_gmt] =&amp;gt; 2011-01-28 19:46:28
    [post_content_filtered] =&amp;gt;
    [post_parent] =&amp;gt; 0
    [guid] =&amp;gt; http://dev.wordpress.local/?post_type=staff_listing&amp;amp;p=60
    [menu_order] =&amp;gt; 0
    [post_type] =&amp;gt; staff_listing
    [post_mime_type] =&amp;gt;
    [comment_count] =&amp;gt; 6
    [ancestors] =&amp;gt; Array
        (
        )
    [filter] =&amp;gt; raw
)
&lt;/pre&gt;&lt;p&gt;
I think the problem might be custom post types or custom taxonomies...
&lt;/p&gt;
&lt;p&gt;
So my custom post type in another plugin is creating: "?post_type=staff_listing".
And this post does show "[post_type] =&amp;gt; staff_listing". BUT the plugin that had created these comments...is de-activated.
&lt;/p&gt;
&lt;p&gt;
Activating the plugin resolves this issue.
&lt;/p&gt;
&lt;p&gt;
So, whats a viable solution? Telling a developer to clean up after the plugin (removing content just because of deactivation), OR having WordPress not pull data (e.g. comments) that are assigned to other data (e.g. post types) that don't exist?
&lt;/p&gt;
&lt;p&gt;
Old Code: Give me all comments.
&lt;/p&gt;
&lt;p&gt;
New Code: Give me all comments that are tied to existing objects.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:4/1300930229513284</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:30:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:3/1300930215334312</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:2/1300930191317054</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This doesn't happen in WP 3.0, so it's a regression.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:28:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955#comment:1/1300930105943440</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16955 (It's tricky to drag metaboxes) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16955</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16955/1300930077766567</guid>
      <description>&lt;p&gt;
As you move the box over it, the droppable area flickers, making it hard to release it in the desired position.
&lt;/p&gt;
&lt;p&gt;
Reproduced in Chrome 10 and Firefox 4.
&lt;/p&gt;
&lt;p&gt;
Possibly related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15542" title="#15542: defect (bug): meta-box-sortables min-height causes display issues (closed: invalid)"&gt;#15542&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #16627 (Rewrite query vars are stripped from custom taxonomy page URLs via ...) updated</title>
      
        <dc:creator>automattor</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:18:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16627#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16627#comment:15/1300929525373995</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17549" title="Reinstate [15462] for 3.1; Prevents canonical redirects for custom ..."&gt;[17549]&lt;/a&gt;) Reinstate &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15462" title="Temp fix for canonical redirects of taxonomy links containing ..."&gt;[15462]&lt;/a&gt; for 3.1; Prevents canonical redirects for custom rewrite rules for taxonomies. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16627" title="#16627: defect (bug): Rewrite query vars are stripped from custom taxonomy page URLs via ... (closed: fixed)"&gt;#16627&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [17549]: Reinstate [15462] for 3.1; Prevents canonical redirects for custom ...</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 01:18:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/17549</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/17549/1300929521021087</guid>
      <description>&lt;p&gt;
Reinstate &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15462" title="Temp fix for canonical redirects of taxonomy links containing ..."&gt;[15462]&lt;/a&gt; for 3.1; Prevents canonical redirects for custom rewrite rules for taxonomies. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16627" title="#16627: defect (bug): Rewrite query vars are stripped from custom taxonomy page URLs via ... (closed: fixed)"&gt;#16627&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #13915 (WP_Http_Fopen is PHP4 only) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 24 Mar 2011 00:30:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13915#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13915#comment:23/1300926621807028</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Looks like in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/17535" title="Prune PHP5 compat checks in WP_Http, WP_Http_Curl &amp;amp; WP_Http_Streams. ..."&gt;[17535]&lt;/a&gt; you removed the SSL proxy
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thats correct. The block was disabling HTTPS requests throgh proxies on PHP older than 5.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>