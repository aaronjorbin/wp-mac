<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10758 (Code Improvements (hakre's session)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Sep 2009 23:46:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10758#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10758#comment:9/1254095197000000</guid>
      <description>&lt;p&gt;
There are few places that seem wrong. If some variables are not set we should be returning errors not give them default values. For example creating a nonce for user ID of 0 is not going to happen :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7262 (Use Firefox 3.5 native offline cache to add "turbo" functionality) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Sep 2009 23:15:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7262#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7262#comment:53/1254093337000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7262#comment:52" title="Comment 52"&gt;miken32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would it work to have a hidden iframe load with the manifest attribute on the subdocument's html element?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Unfortunately no. Tried that too but the resources (js, css, etc.) that are cached in the iframe are not used in the main window. This is actually the largest shortcoming of the HTML 5 implementation: cached resources are not used for other pages on the same domain.
&lt;/p&gt;
&lt;p&gt;
This works good for 'static' web sites but is kind of useless for dynamic sites where the same page can be slightly different on every load and the number of pages is different depending on what the user is doing.
&lt;/p&gt;
&lt;p&gt;
For example Gears works in exactly the opposite way: requests for cached resources for the same domain are always served from the cache, automatically. So once all resources of a web site are stored in the offline cache, they are never requested from the server (not even HEAD requests) making the site run faster and eliminating useless traffic. Of course the resources can be updated when needed through the manifest.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8841 (Threaded comments display out of order if conditions are met.) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Sep 2009 22:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8841#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8841#comment:10/1254089331000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8841 (Threaded comments display out of order if conditions are met.) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Sep 2009 22:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8841#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8841#comment:9/1254089066000000</guid>
      <description>&lt;p&gt;
This also happens if the comment is a reply to a pingback (or other special comment type) that is not included in the query.  When I stopped displaying pingbacks on my page I ended up with a bunch of these.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 27 Sep 2009 21:28:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:9/1254086904000000</guid>
      <description>fixed: &lt;p&gt;
-1 to adding a default argument.
&lt;/p&gt;
&lt;p&gt;
We don't need this - the function already had clear defined behaviour and it didn't conform to it.
&lt;/p&gt;
&lt;p&gt;
The example code shared above relied on a bug in the code.
&lt;/p&gt;
&lt;p&gt;
You asked the function to return you an array of results and it didn't instead it returned you the result you would have got for a request of a single value if one had not been set.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10864 (Add replace method to wpdb) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Sep 2009 19:51:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10864#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10864#comment:3/1254081088000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
$type isn't validated against allowed values.  The main reason is because this should be considered a private method only used by other wpdb methods (Until we move to PHP 5 though, I can't actually make it private).  Also &lt;code&gt;__checked_selected_helper&lt;/code&gt;, which does the same basic thing, doesn't do any validation.
&lt;/p&gt;
&lt;p&gt;
I suppose it could do some minor validation, but I don't see it being necessary (just my opinion).  I doesn't really add any additional security, since anything able to use that method would also be able to use &lt;code&gt;query&lt;/code&gt; directly and avoid the validation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10867 (next_post_link() and previous_post_link() should be allowed in the ...) updated</title>
      
        <dc:creator>jobjorn</dc:creator>

      <pubDate>Sun, 27 Sep 2009 19:05:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10867#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10867#comment:1/1254078354000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>patch for not able to use next_post_link and previous_post_link on index page.diff attached to Ticket #10867</title>
      
        <dc:creator>jobjorn</dc:creator>

      <pubDate>Sun, 27 Sep 2009 19:03:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10867/patch%20for%20not%20able%20to%20use%20next_post_link%20and%20previous_post_link%20on%20index%20page.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10867/patch%20for%20not%20able%20to%20use%20next_post_link%20and%20previous_post_link%20on%20index%20page.diff/1254078229000000</guid>
      <description>&lt;p&gt;
patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10867 (next_post_link() and previous_post_link() should be allowed in the ...) created</title>
      
        <dc:creator>jobjorn</dc:creator>

      <pubDate>Sun, 27 Sep 2009 19:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10867</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10867/1254078212000000</guid>
      <description>&lt;p&gt;
I'm building a custom theme where the front page (example.org) is essentially an exact duplicate of a single post (example.org/2009/09/post-title/). Imagine my confusion when I copied the contents of single.php over to index.php and finding that the navigation links had disappeared.
&lt;/p&gt;
&lt;p&gt;
I promptly tracked down the culprit, and it turned out to be a requirement in get_adjacent_post: if !is_single, it returns null.
&lt;/p&gt;
&lt;p&gt;
I see no reason as to why these links should not be allowed everywhere in the loop. The codex page even states it is allowed in the loop, not telling of the extra limitations. Unless there is some reason of which I am not aware, I suggest that the attached patch be applied.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [11979]: Hide "Attach" link for media (which requires JS) if no JS available. ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 27 Sep 2009 18:54:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11979</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11979/1254077657204165</guid>
      <description>&lt;p&gt;
Hide "Attach" link for media (which requires JS) if no JS available. (BUGS ON A PLANE!)
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10866 (mysql2date: wrong parameter order in wp-admin/includes/media.php) created</title>
      
        <dc:creator>fabifott</dc:creator>

      <pubDate>Sun, 27 Sep 2009 17:59:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10866</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10866/1254074379000000</guid>
      <description>&lt;p&gt;
In &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/media.php#L1185"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;wp-admin/includes/media.php:1185 function get_media_item&lt;/a&gt; the parameters of mysql2date are in the wrong order:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;" . mysql2date($post-&amp;gt;post_date, get_option('time_format')) . "&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>avatar-nonce.diff attached to Ticket #10863</title>
      
        <dc:creator>thecodepro</dc:creator>

      <pubDate>Sun, 27 Sep 2009 17:32:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10863/avatar-nonce.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10863/avatar-nonce.diff/1254072735000000</guid>
      <description>&lt;p&gt;
Same as before, but using the NONCE key to obsucre the IP from rainbow reading
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8592 (Private Pages not listed in the Parent dropdown) updated</title>
      
        <dc:creator>Yves</dc:creator>

      <pubDate>Sun, 27 Sep 2009 17:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8592#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8592#comment:49/1254072193000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Very much interested in the resolution of this bug. This is one more step to a proper CMS like management of content in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10863 (Gravatars without email all end up looking generic) updated</title>
      
        <dc:creator>thecodepro</dc:creator>

      <pubDate>Sun, 27 Sep 2009 17:21:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10863#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10863#comment:3/1254072065000000</guid>
      <description>&lt;p&gt;
Yes, I suppose you could use a rainbow table to reverse the IP address for anonymous posters.
&lt;/p&gt;
&lt;p&gt;
Could probably salt this with on of those constants defined in wp-config.php if you wanted to make it UBER secure.
&lt;/p&gt;
&lt;p&gt;
I'll look into that real quick...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>get_post_by_title.patch attached to Ticket #10865</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10865/get_post_by_title.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10865/get_post_by_title.patch/1254070219000000</guid>
      <description>&lt;p&gt;
Patch with get_post_by_title() function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10865 (Function to get posts based on post title) updated</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10865#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10865#comment:3/1254070192000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10865#comment:2" title="Comment 2"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
please add a description of the possible return values to the docblock comment.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Updated the patch with description of the possible return values to the docblock comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10865 (Function to get posts based on post title) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:44:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10865#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10865#comment:2/1254069874000000</guid>
      <description>&lt;p&gt;
please add a description of the possible return values to the docblock comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10864 (Add replace method to wpdb) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10864#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10864#comment:2/1254069742000000</guid>
      <description>&lt;p&gt;
the $type parameter needs to be optional as well (because the one before it is).
&lt;/p&gt;
&lt;p&gt;
is $type validated against all allowed input values?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10863 (Gravatars without email all end up looking generic) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:39:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10863#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10863#comment:2/1254069572000000</guid>
      <description>&lt;p&gt;
Isn't it possible to reverse-engeneer the comment's authors IP-address then? Some hashing needed?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:36:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862#comment:3/1254069414000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just asking: bobrik how can you say for shure WordPress uses iso-8859-1 as email codepage? Did you find a definition / documnetation of that somewhere? I would love to know more, because I remember a similar ticket.
&lt;/p&gt;
&lt;p&gt;
Your patch modifies the phpmailer classes which is bad practise. Please find the location in the code where it's instances need to be configured. Next to this, there isn't any chance to update the PHP4 version of the phpmailer class any longer because the current project leader closed that branch.
&lt;/p&gt;
&lt;p&gt;
So -1 for the current patch from my side.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:22:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:14/1254068554000000</guid>
      <description>&lt;p&gt;
I see many maintenance issues with the current code but not with the proposed changes. &lt;code&gt;parent::WP_Dependencies()&lt;/code&gt; is pretty straight forward and since the extending class always is aware of the parent class (it's hardcoded), there is no need to have that with a variable call. It's just useless.
&lt;/p&gt;
&lt;p&gt;
The "variable" code looks pretty much copied over from some other project without propper checking wether it is useable here or not. It might be that the other project needs such a flexibility but it's perfectly unfitting in these cases here in WP.
&lt;/p&gt;
&lt;p&gt;
There is just no need to put hacks in where no hack is needed. Each extending class knows exactly it's parent and can call without any problems the PHP4 constructor. We do not need any PHP5 &lt;code&gt;__construct&lt;/code&gt; functions at all, PHP5 handles the PHP4 constructors just properly.
&lt;/p&gt;
&lt;p&gt;
This will also help to migrate the code more properly to PHP5 some day. There is no need of a mix of PHP4 and PHP5 constructors. That's just overhead. In those cases where this can be corrected without changing much code I've made that. I have not checked the &lt;code&gt;*_Walker&lt;/code&gt; classes until now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10865 (Function to get posts based on post title) updated</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:15:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10865#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10865#comment:1/1254068132000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10758 (Code Improvements (hakre's session)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10758#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10758#comment:8/1254067848000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Session is closed now. Any feedback on the patches? Should those be combined? Should I or the committer do it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10860 (wpdb::escape_by_ref() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 16:09:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10860#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10860#comment:3/1254067749000000</guid>
      <description>&lt;p&gt;
The question is wether or not such a function a) makes sense at all and b) if it should be there wether or not this is a pair to the -&amp;gt;escape() function.
&lt;/p&gt;
&lt;p&gt;
The plus of escape_by_ref() over escape() is that it uses mysql_real_escape_string. -&amp;gt;escape() fails to properly escape data to be used with the databse "because it makes problems" (that comment isn't in there any longer but the escaping problem is). so escape_by_ref() does indeed what it is documented for.
&lt;/p&gt;
&lt;p&gt;
so a) and b) should be answered, I can update the functions comments.
&lt;/p&gt;
&lt;p&gt;
then I would like to know if this function was created to save some memory.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10008 (var pagenow in js not supporting plugins !) closed</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:38:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10008#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10008#comment:11/1254065930000000</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>10758-wp-admin-admin-footer.patch attached to Ticket #10758</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:34:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-admin-admin-footer.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-admin-admin-footer.patch/1254065641000000</guid>
      <description>&lt;p&gt;
Missing checks for set variables.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10758-wp-comments-post.patch attached to Ticket #10758</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:29:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-comments-post.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-comments-post.patch/1254065399000000</guid>
      <description>&lt;p&gt;
Missing checks for set variables.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10309 (Publish Date (Schedule) does not handle inputs properly.) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:29:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10309#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10309#comment:11/1254065367000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>#10309.diff attached to Ticket #10309</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10309/%2310309.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10309/%2310309.diff/1254065225000000</guid>
      <description>&lt;p&gt;
A completely different approach, handles leap years
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10758 (Code Improvements (hakre's session)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10758#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10758#comment:7/1254065224000000</guid>
      <description>&lt;p&gt;
as reference for the last one:
&lt;/p&gt;
&lt;pre class="wiki"&gt;PHP Notice: Trying to get property of non-object in /is/htdocs/wp1055410_Q291LS7NBM/www/wp-includes/pluggable.php on line 1227
&lt;/pre&gt;&lt;p&gt;
(that entry is reduced, I had that multiple times on a production site)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10309 (Publish Date (Schedule) does not handle inputs properly.) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:25:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10309#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10309#comment:10/1254065141000000</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
A completely different approach using select for touch_time function,
Handles leap years.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10758-wp-includes-pluggable.patch attached to Ticket #10758</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:24:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-includes-pluggable.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-includes-pluggable.patch/1254065089000000</guid>
      <description>&lt;p&gt;
That global variable is not always an object of class WP_User + global and variable hints
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>checked-test.php attached to Ticket #10556</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:23:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10556/checked-test.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10556/checked-test.php/1254065026000000</guid>
      <description>&lt;p&gt;
Sample Plugin to demonstrate checked array function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10556 (Add a checked_array() to compare arrays like checked()) updated</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10556#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10556#comment:2/1254064911000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here is a scenario which explains what I am try to do.
&lt;/p&gt;
&lt;p&gt;
Let's say I am writing a Plugin, which is displaying all top level pages (as checkboxes) and the user will be selecting some of them. I will have the name of the checkboxes as an array (eg: selected_pages[]), so that I can easily handle the post variables when the form is submitted.
&lt;/p&gt;
&lt;p&gt;
Now the next time, when the page is displayed, I have to keep the checkboxes that were already selected as checked. I will have the selected pages as an array, and instead of looping through every time to find out whether the current page is there in the array or not, I can pass the current id and the array to the checked function which can print checked='checked', if the current page id is present in the array.
&lt;/p&gt;
&lt;p&gt;
I have attached a small Plugin to demonstrate this.
&lt;/p&gt;
&lt;p&gt;
(sorry for the delay in reply, I didn't noticed the status change)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7262 (Use Firefox 3.5 native offline cache to add "turbo" functionality) updated</title>
      
        <dc:creator>miken32</dc:creator>

      <pubDate>Sun, 27 Sep 2009 15:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7262#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7262#comment:52/1254064131000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Would it work to have a hidden iframe load with the manifest attribute on the subdocument's html element? Kind of a hack, but would get around the problem of the master entry always getting cached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10758-wp-includes-comment.patch attached to Ticket #10758</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 27 Sep 2009 14:51:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-includes-comment.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10758/10758-wp-includes-comment.patch/1254063105000000</guid>
      <description>&lt;p&gt;
Missing checks for set variables.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10865 (Function to get posts based on post title) created</title>
      
        <dc:creator>sudar</dc:creator>

      <pubDate>Sun, 27 Sep 2009 07:57:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10865</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10865/1254038246000000</guid>
      <description>&lt;p&gt;
Right now we don't have a template function to get posts based on the post title.
&lt;/p&gt;
&lt;p&gt;
We have a function called get_page_by_title (in wp-includes/post.php) which retrieves pages (but not posts) based on title.
&lt;/p&gt;
&lt;p&gt;
I propose a new function get_post_by_title() which could retrieve posts gives page titles.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Changeset [11978]: esc_sql() for wp-includes</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 27 Sep 2009 05:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11978</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11978/1254029636458779</guid>
      <description>&lt;p&gt;
esc_sql() for wp-includes
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sun, 27 Sep 2009 04:50:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:13/1254027043000000</guid>
      <description>&lt;p&gt;
That makes more sense, except it is not needed. The WP_Styles and WP_Scripts doesn't have any arguments, and putting the PHP4 constructors would not hinder readability in any way. It would make sense if the WP_Dependencies was going to be used in many more places, but it is specific container for redundant code, so that is unlikely.
&lt;/p&gt;
&lt;p&gt;
PS: I was thinking of the &lt;code&gt;*_Walker&lt;/code&gt; classes when I was talking about the iterators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Sun, 27 Sep 2009 03:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:39/1254023983000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #8964 (Allow adding headers to get_plugin_data) updated</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Sun, 27 Sep 2009 03:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8964#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8964#comment:38/1254023971000000</guid>
      <description>&lt;p&gt;
Just added a patch that fixes a bug in the previous patch.  No other changes, though it's nice to see it still applies clean. :)
&lt;/p&gt;
&lt;p&gt;
Westi, could you please take a look at this again?  I would really like this committed for 2.9.  Not sure if something particular is holding it up.
&lt;/p&gt;
&lt;p&gt;
This patch:
&lt;/p&gt;
&lt;p&gt;
1) adds extra_plugin_headers hook so plugins can add to the list of headers that are checked for in get_plugin_data().
&lt;/p&gt;
&lt;p&gt;
2) adds extra_theme_headers hook.  Same as above, but for themes.
&lt;/p&gt;
&lt;p&gt;
3) adds new function get_file_data() so that plugins can use a standard method to examine a particular file for plugin-like headers.  Function can even be used to add an arbitrary extra_XXX_headers hook.
&lt;/p&gt;
&lt;p&gt;
4) Both get_plugin_data() and get_theme_data() now use get_file_data() for their core functionality, removing some code repetition from core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wptrac_8964_patch5.diff attached to Ticket #8964</title>
      
        <dc:creator>strider72</dc:creator>

      <pubDate>Sun, 27 Sep 2009 03:48:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8964/wptrac_8964_patch5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8964/wptrac_8964_patch5.diff/1254023283000000</guid>
      <description>&lt;p&gt;
bugfix -- patch 4 didn't properly handle Author header in all cases
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 27 Sep 2009 02:48:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:12/1254019720000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10861#comment:11" title="Comment 11"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10861#comment:10" title="Comment 10"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think that code is to call the child classes that extend it perhaps? (Not sure its needed though.. Just checking)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That doesn't exactly make sense. The child classes can define their own arguments. Actually, the entire WP_Dependencies violates proper object-oriented practices, so it makes sense it would be ass backward. I think it tries too hard to be a Iterator, except without PHP5, it fails in its attempt.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;call_user_func_array( array(&amp;amp;$this, '__construct'), $args );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
is a hack to keep from having to specify the parent class as the constructor in PHP 4.
&lt;/p&gt;
&lt;p&gt;
WP_Scripts is the child of WP_Dependencies.  If WP_Scripts used the PHP 4 class-name constructor, WP_Scripts, it would have to call the PHP 4 parent constructor explicitly, like so: &lt;code&gt;parent::WP_Dependencies($args);&lt;/code&gt;, and then you have maintenance issues.
&lt;/p&gt;
&lt;p&gt;
Instead, the hack omits the PHP 4 child class-name constructors, so when WP_Scripts is instantiated, PHP 4 calls &lt;code&gt;WP_Dependencies()&lt;/code&gt; as its constructor, which in turn calls the child &lt;code&gt;__construct()&lt;/code&gt; constructors.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>meta-default.patch attached to Ticket #10803</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Sep 2009 00:54:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10803/meta-default.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10803/meta-default.patch/1254012892000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10864 (Add replace method to wpdb) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Sep 2009 00:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10864#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10864#comment:1/1254012752000000</guid>
      <description>&lt;p&gt;
In the attached patch I created a new method in wpdb called _insert_replace_helper, which is meant to be a private method.  Both wpdb::insert and the new wpdb::replace use it.  If whomever is in charge prefers it to be done another way, just let me know and I'd be happy to make a new patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 27 Sep 2009 00:52:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:8/1254012732000000</guid>
      <description>&lt;p&gt;
Yes, having a default return value that can be changed would make it more flexible like get_option(). Perhaps the same is needed for &lt;code&gt;get_usermeta()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Sun, 27 Sep 2009 00:51:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:11/1254012681000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10861#comment:10" title="Comment 10"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think that code is to call the child classes that extend it perhaps? (Not sure its needed though.. Just checking)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That doesn't exactly make sense. The child classes can define their own arguments. Actually, the entire WP_Dependencies violates proper object-oriented practices, so it makes sense it would be ass backward. I think it tries too hard to be a Iterator, except without PHP5, it fails in its attempt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10864 (Add replace method to wpdb) created</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sun, 27 Sep 2009 00:49:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10864</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10864/1254012558000000</guid>
      <description>&lt;p&gt;
The wpdb class has an insert method, but it would be really nice to have a replace method as well.  You can run them directly through the query method, but the added convenience would seem to be worth the minimal additional code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 23:47:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:10/1254008870000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 10861_wp-dependencies.patch added
WP_Dependencies was full of logic by doing nothing. After this patch it's therefore documented that this is done by intention (while reducing the code for doing nothing).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that code is to call the child classes that extend it perhaps? (Not sure its needed though.. Just checking)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10860 (wpdb::escape_by_ref() is broken) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 23:44:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10860#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10860#comment:2/1254008666000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
uhh... soo.. the issue is that wpdb::escape_by_ref() doesnt use wpdb::escape()?
&lt;/p&gt;
&lt;p&gt;
Or something else entirely..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:4/1254005647000000</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11977" title="Expose HTTP PUT when supported, props mdawaffe, fixes #10855"&gt;[11977]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11977]: Expose HTTP PUT when supported, props mdawaffe, fixes #10855</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:52:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11977</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11977/1254005562232127</guid>
      <description>&lt;p&gt;
Expose HTTP PUT when supported, props mdawaffe, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10855" title="#10855: defect (bug): Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ... (closed: fixed)"&gt;#10855&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10853 (improve get_page_hierarchy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:46:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10853#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10853#comment:4/1254005183000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10853 (improve get_page_hierarchy) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:45:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10853#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10853#comment:3/1254005155000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11976" title="Improve get_page_hierarchy, props hailin, fixes #10853"&gt;[11976]&lt;/a&gt;) Improve get_page_hierarchy, props hailin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10853" title="#10853: enhancement: improve get_page_hierarchy (closed: fixed)"&gt;#10853&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11976]: Improve get_page_hierarchy, props hailin, fixes #10853</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11976/1254005152160303</guid>
      <description>&lt;p&gt;
Improve get_page_hierarchy, props hailin, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10853" title="#10853: enhancement: improve get_page_hierarchy (closed: fixed)"&gt;#10853&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:31:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858#comment:3/1254004302000000</guid>
      <description>&lt;p&gt;
Seems better not to change the whole $comment object there, it's referenced.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:28:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858#comment:2/1254004106000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11975" title="Apply &amp;#34;comment_edit_pre&amp;#34; filter when quick-editing comments, props ..."&gt;[11975]&lt;/a&gt;) Apply "comment_edit_pre" filter when quick-editing comments, props Viper007Bond, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10858" title="#10858: defect (bug): Comment quick edit doesn't use &amp;#34;comment_edit_pre&amp;#34; filter (closed: fixed)"&gt;#10858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11975]: Apply "comment_edit_pre" filter when quick-editing comments, props ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 22:28:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11975</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11975/1254004102095292</guid>
      <description>&lt;p&gt;
Apply "comment_edit_pre" filter when quick-editing comments, props Viper007Bond, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10858" title="#10858: defect (bug): Comment quick edit doesn't use &amp;#34;comment_edit_pre&amp;#34; filter (closed: fixed)"&gt;#10858&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:53:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:5/1253994826000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10851#comment:4" title="Comment 4"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I experienced something maybe similar...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Does it still happen after svn up? Any way to consistently reproduce?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
(which is a misleading argument ...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The 'onpaste' event is supported in IE, Safari and Chrome, nearly there in FF 3.5, not supported in FF 2 and Opera (not sure about Opera 10) and partially supported in FF 3.0. Other browsers based on the same engines may support it too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10863 (Gravatars without email all end up looking generic) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10863#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10863#comment:1/1253994627000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862#comment:2/1253994613000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>avatar.diff attached to Ticket #10863</title>
      
        <dc:creator>thecodepro</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10863/avatar.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10863/avatar.diff/1253993227000000</guid>
      <description>&lt;p&gt;
adds code to use IP address if email is empty for gravatar handoff
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10863 (Gravatars without email all end up looking generic) created</title>
      
        <dc:creator>thecodepro</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10863/1253993196000000</guid>
      <description>&lt;p&gt;
When your blog has this option turned on
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
"Comment author must fill out name and e-mail"
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and multiple users leave comments, if these users do not provide email addresses it will appear that they are all the same user as the identicon/monsterid/etc icons will be the same.
&lt;/p&gt;
&lt;p&gt;
With two additional lines of code, you can substitute the IP address in place of the email to get a unique hash in order to distinguish one anonymous/non-emailed user from another.
&lt;/p&gt;
&lt;p&gt;
Patch is attached
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) updated</title>
      
        <dc:creator>bobrik</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:11:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862#comment:1/1253992283000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-mail-charset-fix.diff attached to Ticket #10862</title>
      
        <dc:creator>bobrik</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:10:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10862/wp-mail-charset-fix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10862/wp-mail-charset-fix.diff/1253992207000000</guid>
      <description>&lt;p&gt;
fix patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10862 (Incorrect encoding for non-ascii symbols in emails) created</title>
      
        <dc:creator>bobrik</dc:creator>

      <pubDate>Sat, 26 Sep 2009 19:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10862</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10862/1253992150000000</guid>
      <description>&lt;p&gt;
WordPress uses iso-8859-1 as email codepage. It's better to use UTF-8 instead. No changes for ascii users but so many profit for other world :)
&lt;/p&gt;
&lt;p&gt;
There's no any good way to hack around incorrect encoding now, so very annoying problem. Must be fixed in the next release.
&lt;/p&gt;
&lt;p&gt;
Patch included. You may use it or make PHPMailer $CharSet var static to make it possible to change it by plugin or any other way.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>8545.diff attached to Ticket #8545</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 26 Sep 2009 18:55:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/8545/8545.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/8545/8545.diff/1253991315000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #8545 (Incorrect background colour for 'Select Files' button (file uploader)) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 26 Sep 2009 18:54:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/8545#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/8545#comment:8/1253991298000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Found time to look at this again. SWFUpload takes the color attribute as a hex value rather than English words. Fix also applied to the HTML Upload button.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10758-admin-upload.patch attached to Ticket #10758</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 18:36:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10758/10758-admin-upload.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10758/10758-admin-upload.patch/1253990212000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 17:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:9/1253987768000000</guid>
      <description>&lt;p&gt;
Having one patch can be an option, but I would like to see more feedback first. I think it's important that some of the core coders take a look and comitters should signal wether or not such changes are welcomed.
&lt;/p&gt;
&lt;p&gt;
code quality related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10758" title="#10758: defect (bug): Code Improvements (hakre's session) (closed: fixed)"&gt;#10758&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10758 (Code Improvements (hakre's session)) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 17:54:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10758#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10758#comment:6/1253987686000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10758#comment:4" title="Comment 4"&gt;janeforshort&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Shouldn't these have individual tickets, so they can have descriptive titles and the ticket can be managed effectively by committers (thinking about the commit stream, and that loading up one ticket might slow down getting commits)?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, the title (summary) is infact not very descriptive. This was a session I've done while monitoring an application. I'll change the title accordingly now. I think many (if not all) of the patches are commit ready but a comitter should give feedback which form is preferred (single patch, more tickets etc.).
&lt;/p&gt;
&lt;p&gt;
maybe related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10861" title="#10861: defect (bug): Clean up constructors and destructors (closed: wontfix)"&gt;#10861&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10252.patch attached to Ticket #10252</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:58:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10252/10252.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10252/10252.patch/1253977097000000</guid>
      <description>&lt;p&gt;
(fixed patch after review by sivel)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10252.2.patch attached to Ticket #10252</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10252/10252.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10252/10252.2.patch/1253977088000000</guid>
      <description>&lt;p&gt;
(fixed patch after review by sivel)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:8/1253976229000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Perhaps you should wrap them up in a single patch for easier handling.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10859 (esc_url() does not escape and renders other functions buggy.) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10859#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10859#comment:2/1253975986000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:7/1253975741000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:35:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:6/1253975702000000</guid>
      <description>&lt;p&gt;
This one is nicer and more fitting to the first one. A uselesst destructor function that is not properly implemented in any case. In this case, this was already tagged as todo. So if this was already on someones list, take a peek.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_cache.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_cache.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_cache.patch/1253975624000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:27:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:5/1253975262000000</guid>
      <description>&lt;p&gt;
this ones more or less as a suggestion to document those functions that function for PHP4 and PHP5 (in contrast to those that manually call the PHP5 constructor in PHP4 which does not happen in PHP5 (verified)).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_wp-capabilities.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-capabilities.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-capabilities.patch/1253975155000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:4/1253974903000000</guid>
      <description>&lt;p&gt;
WP_Dependencies was full of logic by doing nothing. After this patch it's therefore documented that this is done by intention (while reducing the code for doing nothing).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_wp-dependencies.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:20:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-dependencies.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-dependencies.patch/1253974853000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:12:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:3/1253974372000000</guid>
      <description>&lt;p&gt;
While being in the topic, I stumbled over a little improvement to be made in WP_Text_Diff_Renderer_Table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861_wp-diff.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 14:10:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-diff.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861_wp-diff.patch/1253974201000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:2/1253973233000000</guid>
      <description>&lt;p&gt;
Added an improved patch that removes the obsolete destructor function. Next to this it is not necessary to have the PHP4 constructor return something explicitly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861.2.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861.2.patch/1253973170000000</guid>
      <description>&lt;p&gt;
Improved Patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:48:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861#comment:1/1253972907000000</guid>
      <description>&lt;p&gt;
The constructor (PHP 4, PHP 5) still might have errors. In case PHP 5 prefers the class names function instead of the &lt;code&gt;__construct()&lt;/code&gt; function (for example for backwards compability reasons, I was not able to clarify that in all details), the register_shutdown_function will be called with PHP 4 and PHP 5. It should only called with PHP 4.
&lt;/p&gt;
&lt;p&gt;
Additionally, having an empty function (&lt;code&gt;wpdb::__destruct()&lt;/code&gt;) does not make any sense. This leads to asking oneself: what is all the fuzz about? Constructor, Destructor, NIL. I assume this needs a cleanup.
&lt;/p&gt;
&lt;p&gt;
This would also lead to a solution for some other important point: Never register a &lt;code&gt;__destruct()&lt;/code&gt; function as a shutdown function. This will most often lead to problems (the function is called two times) and errors (the object is already destroyed when the shutdown function is (to be) executed).
&lt;/p&gt;
&lt;p&gt;
Therefore I suggest to remove this all from the object, I will provide a second patch for it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10861.patch attached to Ticket #10861</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:45:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10861/10861.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10861/10861.patch/1253972759000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10861 (Clean up constructors and destructors) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:43:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10861</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10861/1253972612000000</guid>
      <description>&lt;p&gt;
I assume this once was a try to have a descructor implementation for PHP 4 as well. But the way the destructor was registered in the constructor is broken. Even PHP 5 registeres a shutdown function (the destructor) while the &lt;em&gt;real&lt;/em&gt; implementation is already in there.
&lt;/p&gt;
&lt;p&gt;
Therefore register shutdown function is only needed in PHP 4. The provided patch reflects that (partially).
&lt;/p&gt;
&lt;p&gt;
Then it is plain wrong to have a PHP 5 destructor return a value. It returns void by definition. This is properly reflected in the patch now. BTW, having a return value on a shutdown function is pretty useless.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10252 (URL of original picture is not inserted into post - problem with filename) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10252#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10252#comment:13/1253971423000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thankfully there is another function calles esc_attr() that should do everything needed for the output.
&lt;/p&gt;
&lt;p&gt;
Tested for work/fix: OK.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10332 (Backdated pre-1st January 1970 post displayed as published on the ...) updated</title>
      
        <dc:creator>gosunatxrea</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:23:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10332#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10332#comment:14/1253971415000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10860 (wpdb::escape_by_ref() is broken) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10860#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10860#comment:1/1253971048000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10860 (wpdb::escape_by_ref() is broken) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:16:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10860/1253971011000000</guid>
      <description>&lt;p&gt;
Once upon a time there was established a function with parameters passed by reference to escape string data. The function was called escape_by_ref(). I assume this was done to save memory.
&lt;/p&gt;
&lt;p&gt;
Now the function looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	/**
	 * Escapes content by reference for insertion into the database, for security
	 *
	 * @since 2.3.0
	 *
	 * @param string $s
	 */
	function escape_by_ref(&amp;amp;$string) {
		$string = $this-&amp;gt;_real_escape( $string );
	}
&lt;/pre&gt;&lt;p&gt;
Additionally escape_by_ref() is not a pair with escape(). Maybe that was sometime?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10252 (URL of original picture is not inserted into post - problem with filename) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:06:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10252#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10252#comment:12/1253970360000000</guid>
      <description>&lt;p&gt;
I found the cause of this behaviour. WordPress right now is unable to properly escape URIs which leed to a total delete of URIs like those.
&lt;/p&gt;
&lt;p&gt;
The underlying bug is of a not working function called esc_url(). I opened a ticket for it: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10859" title="#10859: defect (bug): esc_url() does not escape and renders other functions buggy. (closed: fixed)"&gt;#10859&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10859 (esc_url() does not escape and renders other functions buggy.) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:03:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10859#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10859#comment:1/1253970203000000</guid>
      <description>&lt;p&gt;
related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10252" title="#10252: defect (bug): URL of original picture is not inserted into post - problem with filename (closed: fixed)"&gt;#10252&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10859 (esc_url() does not escape and renders other functions buggy.) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 13:02:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10859</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10859/1253970166000000</guid>
      <description>&lt;p&gt;
As written in the summary: get_image_send_to_editor() uses (as many other functions) the function esc_url() to escape (at least that is what the name suggests) and URI. But the function name is misleading. Because of the (no-) implementation of any kind of escaping in esc_url() but using clean_url() instead which filters out various characters by undocumented principles this deletes complete valid URIs instead of encoding them.
&lt;/p&gt;
&lt;p&gt;
Example URL: &lt;code&gt;http://192.168.2.106/wordpress-trunk/wp-content/uploads/2009/09/Auto-na-dÃ¡lkovÃ©-ovlÃ¡dÃ¡nÃ­.jpg&lt;/code&gt; is "escaped" into an empty string &lt;code&gt;string '' (length=0)&lt;/code&gt; when used in esc_url().
&lt;/p&gt;
&lt;p&gt;
This is a Blog with an output encoding set to UTF-8.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10341 (Upgrade TinyMCE to 3.2.7) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:52:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10341#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10341#comment:6/1253962336000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:18:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:7/1253960288000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:6/1253960022000000</guid>
      <description>&lt;p&gt;
that would work too, yeah. leaving &lt;em&gt; by default, to avoid breaking things.
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10825 (Flash Uploader Breaks with HTTP Authentication) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10825#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10825#comment:3/1253959428000000</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10825 (Flash Uploader Breaks with HTTP Authentication) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 10:03:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10825#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10825#comment:2/1253959380000000</guid>
      <description>&lt;p&gt;
But why doesn't the flash plugin support that? It should use the browser for doing the http requests, shouldn't it?
&lt;/p&gt;
&lt;p&gt;
False: "The SWF tried to upload a file to a server that requires authentication (such as a user name and password). During upload, Flash Player does not provide a means for users to enter passwords." &lt;a class="ext-link" href="http://livedocs.adobe.com/flash/9.0/main/00000320.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Flash CS3 (9.0) Documentation&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
So there is no way to integrate flash uploads with httpd auth properly. keep this in mind for security reasons.
&lt;/p&gt;
&lt;p&gt;
This is a snippet for a .htaccess to exclude &lt;code&gt;async-upload.php&lt;/code&gt; from requiering authentication:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# Exclude the file upload script from authentication
&amp;lt;FilesMatch "(async-upload\.php)$"&amp;gt;
Satisfy Any
Order allow,deny
Allow from all
Deny from none
&amp;lt;/FilesMatch&amp;gt;
&lt;/pre&gt;&lt;p&gt;
More information is available in the link posted by johnbillion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10836 (Several Importers call create_function() multiple times per imported post) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10836#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10836#comment:4/1253958368000000</guid>
      <description>&lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
the problem is in the patch mulitple times. just change the _normalize_tag() function.
&lt;/p&gt;
&lt;p&gt;
idea: what about having one parent import class that provides functions for all the importers which do only extend from that class.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10836 (Several Importers call create_function() multiple times per imported post) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10836#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10836#comment:3/1253958259000000</guid>
      <description>&lt;p&gt;
okay it's mdawaffe code, don't want to give false credits here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10836 (Several Importers call create_function() multiple times per imported post) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10836#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10836#comment:2/1253958178000000</guid>
      <description>&lt;p&gt;
ryan, please see the parameter is called $matches but you use $match later on. this is a minor bug I assume by copy/paste. please fix it.
&lt;/p&gt;
&lt;pre class="wiki"&gt; 	532	    function _normalize_tag( $matches ) {
 	533	        return '&amp;lt;' . strtolower( $match[1] );
 	534	    }
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10839 (Active plugins filtering for site wide plugin support) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:36:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10839#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10839#comment:4/1253957819000000</guid>
      <description>&lt;p&gt;
get_option already is filterable. I created a worm that uses that and which is still working as shiny well as on it's first day. I see no problem why wordpress mu plugins (global, hidden, injected, payload or however you like to call such plugins) shouldn't do the same. There is no need to actually change code for such a functionality. This is pretty much tested over various version steps.
&lt;/p&gt;
&lt;p&gt;
If this is done per every request (even such plugins not activated) it is a pretty much overhead for such a simple thing to do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:25:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:4/1253957131000000</guid>
      <description>&lt;p&gt;
I experienced something maybe simlar while testing the stuff for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10252" title="#10252: defect (bug): URL of original picture is not inserted into post - problem with filename (closed: fixed)"&gt;#10252&lt;/a&gt; .  I'm using the svn version and potential latest browsers (which is a misleading argument by azaozz imho anyway) and the stuff still sticks in. crap left befind. I did not care because I thought this is just how things are done these ways.... &lt;sup&gt;&lt;/sup&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10803 (get_post_meta doesn't return an array when requested if nothing with ...) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:15:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10803#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10803#comment:5/1253956521000000</guid>
      <description>&lt;p&gt;
or the ability to inject the default value on function call? then the calling code can configure the functions output in this case as needed. should make things more easy in any case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2659 (Comment meta) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:13:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2659#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2659#comment:56/1253956380000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/2659#comment:46" title="Comment 46"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've added the meta-testing.php plugin for testing.
&lt;/p&gt;
&lt;p&gt;
Feel free to expand it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought about tests in the testsuite working on blank data and therefore be re-produceable. your test does not reset the comments metadata after certain tests have been made and therefore it can influence each other and compromise the output.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:12:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:3/1253956344000000</guid>
      <description>&lt;p&gt;
I've never experienced it, myself, so I wouldn't know how to reliably reproduce.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 09:07:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:2/1253956048000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
dd32 is right, this is not a bug per definition. but keep in mind that the GUID in wordpress is pretty week (do not rely too much on it) because it has never been defined nor documented. It's only describben by the code that implements it.
&lt;/p&gt;
&lt;p&gt;
Please close as invalid.
&lt;/p&gt;
&lt;p&gt;
Maybe the reporter (ss44) can clearify why such a GUID is wrong from her/his point of view? Did this run into any errors?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10341 (Upgrade TinyMCE to 3.2.7) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:59:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10341#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10341#comment:5/1253955599000000</guid>
      <description>&lt;p&gt;
The patch also includes couple of changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Empty P tags are not stripped off and would show in the HTML editor as &amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;
&lt;/li&gt;&lt;li&gt;The paste and paste from Word cleanup removes spans and inline styles.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Full list of fixes is available in the changelog: &lt;a class="ext-link" href="http://tinymce.moxiecode.com/changelog.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://tinymce.moxiecode.com/changelog.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10252 (URL of original picture is not inserted into post - problem with filename) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:47:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10252#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10252#comment:11/1253954832000000</guid>
      <description>&lt;p&gt;
sivel had some ideas in irc
&lt;/p&gt;
&lt;pre class="wiki"&gt;sivel hakre: I think that JS might be what you are looking for | Sep 21 12:45:15 2009
sivel actually there is even some js output by that function | Sep 21 12:44:24 2009
sivel perhaps it keys off of the form submission | Sep 21 12:44:17 2009
sivel the media_upload_type_url_form function looks like where we need to start
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2009-09-21&amp;amp;sort=desc"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Source&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10851 (TinyMCE occasionally leaves junk behind when copy and pasting) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:45:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10851#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10851#comment:2/1253954737000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is a workaround in TinyMCE for (older) browsers that don't have the onpaste event. The div should be removed on cleanup, can you see if it still happens in current trunk (TinyMCE 3.2.7).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10341 (Upgrade TinyMCE to 3.2.7) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10341#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10341#comment:4/1253954553000000</guid>
      <description>fixed: &lt;p&gt;
TinyMCE 3.2.7 &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11974" title="TinyMCE 3.2.7"&gt;[11974]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [11974]: TinyMCE 3.2.7</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 08:33:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11974</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11974/1253953996896090</guid>
      <description>&lt;p&gt;
TinyMCE 3.2.7
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10852 (improve get_page_children) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 26 Sep 2009 06:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10852#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10852#comment:4/1253947749000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10852#comment:2" title="Comment 2"&gt;hailin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
unit tested and verified that it uses only 20% of the time used by the previous algorithm, even for a small data set.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Cool.
&lt;/p&gt;
&lt;p&gt;
Would you be able to share the test cases or even better write a patch for the WordPress unit tests repo to include this functionality and performance testing
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Sep 2009 05:21:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858#comment:1/1253942511000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>10858.patch attached to Ticket #10858</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Sep 2009 05:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10858/10858.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10858/10858.patch/1253942501000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10858 (Comment quick edit doesn't use "comment_edit_pre" filter) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 26 Sep 2009 05:14:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10858/1253942051000000</guid>
      <description>&lt;p&gt;
Drop this code in a plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'comment_edit_pre', 'viper_commenteditpre' );
function viper_commenteditpre( $content ) {
	return 'comment_edit_pre is working! ' . $content;
}
&lt;/pre&gt;&lt;p&gt;
Edit a comment. If you use the normal edit link, the text shows up. If you use Quick Edit, it does not.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 04:14:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857#comment:1/1253938458000000</guid>
      <description>&lt;p&gt;
The fact that the GUID's are URL's does not mean that the GUID should be used as a URL.
&lt;/p&gt;
&lt;p&gt;
A Guid is a "Globally Unique ID", Which shouldn't change when the location of the content has changed. As such, Moving between servers shouldnt change the GUID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10528 (Media rotating, cropping, resizing etc in 2.9.) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 04:07:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10528#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10528#comment:13/1253938052000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11973" title="Image Editor: fix preview size calculation when cropping small part of ..."&gt;[11973]&lt;/a&gt;) Image Editor: fix preview size calculation when cropping small part of a very large image, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10528" title="#10528: task (blessed): Media rotating, cropping, resizing etc in 2.9. (closed: fixed)"&gt;#10528&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11973]: Image Editor: fix preview size calculation when cropping small part of ...</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 26 Sep 2009 04:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11973</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11973/1253938047703367</guid>
      <description>&lt;p&gt;
Image Editor: fix preview size calculation when cropping small part of a very large image, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10528" title="#10528: task (blessed): Media rotating, cropping, resizing etc in 2.9. (closed: fixed)"&gt;#10528&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10857 (Invalid GUID) created</title>
      
        <dc:creator>ss44</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:19:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10857</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10857/1253935164000000</guid>
      <description>&lt;p&gt;
When importing pages from site A.com into site B.com using wordress's import / export, guids for pages remain those of site A.com rather then changing to be reflective of site B.com
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>comment_fields.diff attached to Ticket #10856</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10856/comment_fields.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10856/comment_fields.diff/1253934810000000</guid>
      <description>&lt;p&gt;
Saves new data to comment meta. Still needs code for migrating old data
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:11:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:6/1253934716000000</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10856" title="#10856: enhancement: Move unessential comment fields to the comment meta table (closed: maybelater)"&gt;#10856&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10856 (Move unessential comment fields to the comment meta table) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10856#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10856#comment:1/1253934675000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10747" title="#10747: defect (bug): comment_agent field is too small (closed: duplicate)"&gt;#10747&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10856 (Move unessential comment fields to the comment meta table) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 03:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10856</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10856/1253934467000000</guid>
      <description>&lt;p&gt;
The wp_comments table has 3 less-used fields that would be better placed in the new commentmeta table. These are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;comment_author_IP
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;comment_agent
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;comment_karma
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:36:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:5/1253932576000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:4/1253932558000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The best solution would be to move it to the new commentmeta table.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10747 (comment_agent field is too small) updated</title>
      
        <dc:creator>brianwhite</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:24:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10747#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10747#comment:3/1253931876000000</guid>
      <description>&lt;p&gt;
I am not sure that this can wait given the coming release of Windows 7 next month.  After I upgraded from windows Vista to Windows 7 I discovered that my user agent was too long.  Further investigation revealed that many installations of Internet Explorer on computers that have been in use for a period of time and have multiple versions of the .NET CLR, etc. installed have user agent strings which exceed 255 when the Windows 7 specific strings were added after the upgrade.  (The user agent sting is shorter and not problematical in fresh installations of Windows 7.)  The likely hood of this happening becomes even greater with the introduction of tools like the Google Chrome Frame which add to the user agent string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 02:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:3/1253930400000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10855#comment:2" title="Comment 2"&gt;mdawaffe&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
::test() doesn't check.  But as I understand it, all the methods we have that support POST can also support PUT.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah not to worry then :)
&lt;/p&gt;
&lt;p&gt;
removed dev-feedback, I dont really think any is needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) updated</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:31:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:2/1253928719000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10855#comment:1" title="Comment 1"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does the ::test() methods check for PUT ability? Would be best to return a not-available error rather than attempting a PUT request with a transport that cant do it..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
::test() doesn't check.  But as I understand it, all the methods we have that support POST can also support PUT.
&lt;/p&gt;
&lt;p&gt;
This patch is the bare minimum necessary to support PUT requests in these two methods.  Other methods supported PUT already.
&lt;/p&gt;
&lt;p&gt;
With this patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;WP_Http_Fsockopen: GET, HEAD, POST, PUT, (any)
&lt;/li&gt;&lt;li&gt;WP_Http_Fopen: GET
&lt;/li&gt;&lt;li&gt;WP_Http_Streams: GET, HEAD, POST, PUT, (any)
&lt;/li&gt;&lt;li&gt;WP_Http_ExtHTTP: GET, HEAD, POST, PUT, (could support more: would need more hardcoding)
&lt;/li&gt;&lt;li&gt;WP_Http_Curl: GET, HEAD, POST, PUT, (could support any: would need a default case in the switch)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:16:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855#comment:1/1253927767000000</guid>
      <description>&lt;p&gt;
Does the ::test() methods check for PUT ability? Would be best to return a not-available error rather than attempting a PUT request with a transport that cant do it..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10855.diff attached to Ticket #10855</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10855/10855.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10855/10855.diff/1253927329000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10855 (Some WP_HTTP methods support HTTP PUT, but WP doesn't expose that ...) created</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Sat, 26 Sep 2009 01:08:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10855</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10855/1253927309000000</guid>
      <description>&lt;p&gt;
The attached adds HTTP PUT support for WP_Http_ExtHTTP and WP_Http_Curl.
&lt;/p&gt;
&lt;p&gt;
WP_Http_Curl tests out OK.  WP_Http_ExtHTTP untested.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10854 (Can't post comments by XMLRPC using wp.newComment and having WP_DEBUG ...) created</title>
      
        <dc:creator>filipegiusti</dc:creator>

      <pubDate>Sat, 26 Sep 2009 00:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10854</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10854/1253925525000000</guid>
      <description>&lt;p&gt;
When posting a comment by XMLRPC with all errors enable you get
&lt;/p&gt;
&lt;p&gt;
&amp;lt;br /&amp;gt; Notice:  Undefined variable: comment_type in XXX/wordpress/wp-includes/comment.php on line 433&amp;lt;br /&amp;gt;
&amp;lt;br /&amp;gt; Notice:  Undefined index: comment_type in XXX/wordpress/wp-includes/comment.php on line 1006&amp;lt;br /&amp;gt;
&lt;/p&gt;
&lt;p&gt;
Some warnings about rewriting the header and then the right xml response.
&lt;/p&gt;
&lt;p&gt;
Tracking down the problem it seems that comment_type isn't set nowhere in XXX/wordpress/xmlrpc.php at wp_newComment (line 1253)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>