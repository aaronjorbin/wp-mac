<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #2863 (Option to make posts invisible to anonymous readers) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Mon, 26 Jun 2006 23:56:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2863/1151366201000000</guid>
      <description>&lt;p&gt;
I wrote a plugin that did this a while ago - I believe it was posted on the forums by the person I wrote it for, so do a quick search there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2848 (The RSSCache class should have a "clear" function) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Mon, 26 Jun 2006 23:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2848</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2848/1151364741000000</guid>
      <description>&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2864" title="#2864: enhancement: Magpie falling behind feed developments (closed: invalid)"&gt;#2864&lt;/a&gt; which includes a cache clearing function. It will need work before it operates on wp_object_cache-enabled sites.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2864 (Magpie falling behind feed developments) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Mon, 26 Jun 2006 23:30:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2864</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2864/1151364635000000</guid>
      <description>&lt;p&gt;
New rss.php uploaded.
&lt;/p&gt;
&lt;p&gt;
Incutio's HTTP client need not be used, but it does an efficient job and allows us to handle HTTP codes &amp;gt;200 ourselves. For instance, we can cache redirects. Proposals welcome.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2864 (Magpie falling behind feed developments) created</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Mon, 26 Jun 2006 23:27:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2864</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2864/1151364458000000</guid>
      <description>&lt;p&gt;
MagpieRSS doesn't know how to handle new elements in XML. It doesn't understand Atom 1.0 or RSS 2.0 very well. It is lossy. It doesn't use wp_object_cache. It needs an update.
&lt;/p&gt;
&lt;p&gt;
Rather than tweak Magpie to handle each new thing that comes along, I've put together an XML parser that handles Atom, RSS and RDF feeds and provides an way to add support for new kinds of XML elements. It has default logic to handle any XML data in a feed and can be extended via plugins to add logic for handling special elements. It uses wp_object_cache whenever possible; otherwise it falls back on the database.
&lt;/p&gt;
&lt;p&gt;
fetch_rss is emulated very well and much extra data is available in the array returned but some elements, such as Atom elements with both attributes and inner text, may lose some of their meaning. It may be best to start using a lossless format or tweak the array so that attributes are always preserved.
&lt;/p&gt;
&lt;p&gt;
This code is in use on wordpress.com right now. It needs scrutiny and testing on other platforms as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2821 (RBL used for comment spam check gone) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 26 Jun 2006 22:39:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2821</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2821/1151361584000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The first patch sounds good, and maybe we should change this to be off by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2821 (RBL used for comment spam check gone) updated</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Mon, 26 Jun 2006 21:38:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2821</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2821/1151357897000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've created 2 patches for this.
&lt;/p&gt;
&lt;p&gt;
One based on 2.0.3, which just replaces the old opm.blitzed.org to the suggested sbl-xbl.spamhaus.org.
&lt;/p&gt;
&lt;p&gt;
The second one is based on trunk and utilizes a new option called open_proxy_check_url, which contains sbl-xbl.spamhaus.org by default. This allows plug-ins to change this value if needed, without having to wait for a new official release.
&lt;/p&gt;
&lt;p&gt;
Maybe the second option could also be used for the 2.0.4 release, but I'm not entirely comfortable in changing this behaviour in a bug-fix release. What do you guys think?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2821_svn.diff attached to Ticket #2821</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Mon, 26 Jun 2006 21:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2821/2821_svn.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2821/2821_svn.diff/1151357343230000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>2821_203.diff attached to Ticket #2821</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Mon, 26 Jun 2006 21:28:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2821/2821_203.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2821/2821_203.diff/1151357326370000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #1941 (Default theme CSS causing footer 'pixel shift' in standards-compliant ...) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 26 Jun 2006 19:33:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1941/1151350423000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3925" title="Default theme updates.  fixes #1941"&gt;[3925]&lt;/a&gt;) Default theme updates.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1941" title="#1941: defect (bug): Default theme CSS causing footer 'pixel shift' in standards-compliant ... (closed: fixed)"&gt;#1941&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [3925]: Default theme updates.  fixes #1941</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 26 Jun 2006 19:33:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3925</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3925/1151350416702033</guid>
      <description>&lt;p&gt;
Default theme updates.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/1941" title="#1941: defect (bug): Default theme CSS causing footer 'pixel shift' in standards-compliant ... (closed: fixed)"&gt;#1941&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2863 (Option to make posts invisible to anonymous readers) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Mon, 26 Jun 2006 17:58:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2863/1151344719000000</guid>
      <description>&lt;p&gt;
Sounds like a plugin feature to me, everything could be handled by a plugin. One filter on posts_where to hide if the user isn't logged in or doesn't have caps, and a few modifications to the write page to handle the new post status, and just make up your own post status in the database.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1941 (Default theme CSS causing footer 'pixel shift' in standards-compliant ...) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 26 Jun 2006 17:41:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1941/1151343709000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Also needs backporting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1941 (Default theme CSS causing footer 'pixel shift' in standards-compliant ...) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 26 Jun 2006 17:41:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1941/1151343683000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe this is fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3924" title="Minor reorg, and this should also fix the pixel shift problems."&gt;[3924]&lt;/a&gt;, but needs browser testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [3924]: Minor reorg, and this should also fix the pixel shift problems.</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Mon, 26 Jun 2006 17:40:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/3924</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/3924/1151343618952724</guid>
      <description>&lt;p&gt;
Minor reorg, and this should also fix the pixel shift problems.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #2863 (Option to make posts invisible to anonymous readers) created</title>
      
        <dc:creator>raejae</dc:creator>

      <pubDate>Mon, 26 Jun 2006 17:09:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2863</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2863/1151341762000000</guid>
      <description>&lt;p&gt;
It would be appreciated if a way was added to make posts unreadable by people who are not registered users and/or have a certain privilege set. I haven't followed development in awhile, but if user levels still exist this would be a good way to handle it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2859 (Databasequeries of a static page using permalinks) updated</title>
      
        <dc:creator>skydrak</dc:creator>

      <pubDate>Mon, 26 Jun 2006 13:37:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2859</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2859/1151329042000000</guid>
      <description>&lt;p&gt;
Have approved the permissions of the folder "cache" but it doesn't take effect of the queries. But now Wordpress has permissions to write into cache, it was a SAFEMOD Restriction problem.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>fixedkubrickfix.diff attached to Ticket #1941</title>
      
        <dc:creator>spencerp</dc:creator>

      <pubDate>Mon, 26 Jun 2006 12:49:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/1941/fixedkubrickfix.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/1941/fixedkubrickfix.diff/1151326168810000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2831 (Gzip support in class-snoopy.php) updated</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Mon, 26 Jun 2006 10:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2831/1151317679000000</guid>
      <description>&lt;p&gt;
Ah yes, didn't see that. Sorry.
&lt;/p&gt;
&lt;p&gt;
The built in error handling isn't suited to reporting notices. The whole point of a notice-level error is that execution can continue despite it, so a WP-style error object can't be returned. You're totally right about silently using/not using it.
&lt;/p&gt;
&lt;p&gt;
What about something like this?
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( function_exists('gzinflate') ) {
	$headers .= "Accept-encoding: gzip\r\n";
	$this-&amp;gt;gzip_enabled = true;
}
// later ...
if ( $is_gzipped ) {
	if ( !$this-&amp;gt;gzip_enabled ) {
		// Handle the error properly, or just...
		return false;
	}
	// unzip
}
&lt;/pre&gt;&lt;p&gt;
The latter condition should never be true, but IMO it's important to check for it, since it actually happened to me a couple of months ago. (A site was sending everything gzipped even if the accept header wasn't sent.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2859 (Databasequeries of a static page using permalinks) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 26 Jun 2006 08:41:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2859</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2859/1151311278000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
If this is happening on every page load, that's because you've enabled WP's file system object cache, but something is wrong with the file permissions, so it can't write the data to the cache.  It's normal for this to happen once, to populate the cache.
&lt;/p&gt;
&lt;p&gt;
Still, this method of finding the correct subpage won't scale well, so it should probably change.  Maybe we just need to write the fullpath info to the page, or store it in post meta.  There has to be a better way that querying (whether from the cache or from the DB) every post and looping through them looking for the right one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2850 (Update permalinks not refreshing rewrite_rules in wp_options table) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Mon, 26 Jun 2006 08:13:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2850/1151309626000000</guid>
      <description>&lt;p&gt;
darkfate,
No, WordPress' rewrite rules are no longer stored in the .htaccess file.  All that is there is a generic (unchanging) rule that points all requests to WP's internal rewriter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2860 (Using wp_redirect when headers are sent) updated</title>
      
        <dc:creator>skeltoac</dc:creator>

      <pubDate>Mon, 26 Jun 2006 06:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2860/1151302803000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://us3.php.net/manual/en/function.headers-sent.php#59242"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This comment&lt;/a&gt; has the answer. It won't hurt anyone to patch this though. It'll only leave some IIS users right where they already are because it's a false negative (false returned falsely) which mimics prior logic.
&lt;/p&gt;
&lt;p&gt;
However, Meta tags don't belong anywhere but the head section and will invalidate xhtml if they appear elsewhere. I have tested this on the validator.w3.org
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2860 (Using wp_redirect when headers are sent) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sun, 25 Jun 2006 19:52:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2860/1151265171000000</guid>
      <description>&lt;p&gt;
I'm not sure and I'm afraid I don't have IIS to test. I'm pretty sure cookies will definitely be set, though, since it's making an entirely new request and not simply being redirected á la a &lt;code&gt;Header('Location: ');&lt;/code&gt; call.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2860 (Using wp_redirect when headers are sent) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 25 Jun 2006 18:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2860/1151261822000000</guid>
      <description>&lt;p&gt;
Right now we only call wp_redirect() when redirecting after sending a cookie.  wp_redirect() uses Refresh to work-around an IIS Set-Cookie bug. Does headers_sent() evaluateto true if cookies have been sent?  If so, does http-equiv='refresh' workaround the IIS set cookie bug?  Just want to make sure we don't break IIS users.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2862 (SQL formatting method for WPDB) updated</title>
      
        <dc:creator>DevaSatyam</dc:creator>

      <pubDate>Sun, 25 Jun 2006 16:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2862</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2862/1151253830000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wpdb_BuildSql.diff attached to Ticket #2862</title>
      
        <dc:creator>DevaSatyam</dc:creator>

      <pubDate>Sun, 25 Jun 2006 16:31:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2862/wpdb_BuildSql.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2862/wpdb_BuildSql.diff/1151253089990000</guid>
      <description>&lt;p&gt;
patch file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2862 (SQL formatting method for WPDB) created</title>
      
        <dc:creator>DevaSatyam</dc:creator>

      <pubDate>Sun, 25 Jun 2006 16:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2862</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2862/1151253056000000</guid>
      <description>&lt;p&gt;
Added a BuildSql method to wpdb.   It works, more or less, like a sprintf but oriented towards SQL and WordPress.  Escape character is ? followed by a letters indicating the type of data to be inserted and some options.  It includes a ?t which adds the contents of $table_prefix.  After the first argument, the SQL statement with the ?xxx placeholders, there can be any number of arguments which are inserted into the string as indicated by the datatype and options.
&lt;/p&gt;
&lt;pre class="wiki"&gt;echo BuildSql('Insert into ?ttable (?s,?ns,?mi,?d,?ni,?i)','Something','',5,time(),0,null);
&lt;/pre&gt;&lt;p&gt;
will return:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Insert into wp_table ('Something',null,5,'2006-05-15',null,0)
&lt;/pre&gt;&lt;p&gt;
It contains a PhpDocumenter-style heading with all the options.   I was not able to get this version of WP working so I copied the version I'm using on my production site and made some minor modifications to make it self-contained (not dependent on some other functions of mine) which I was unable to test, sorry.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2831 (Gzip support in class-snoopy.php) updated</title>
      
        <dc:creator>masquerade</dc:creator>

      <pubDate>Sun, 25 Jun 2006 15:49:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2831/1151250597000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;                        if ( function_exists(gzinflate) ) { &lt;/code&gt;
Undefined constant.
&lt;/p&gt;
&lt;p&gt;
As for triggering errors, at this point, I believe it better that we should be using WP's built in error handling, which is there for this reason. I really don't understand why an error is being triggered at all, especially since changing the option to use gzip requires modifying a core file, which is a Bad Thing. If anything, we should silently fail and disable gzip, disable the checks to see if its enabled, and those with gzip will silently use it, those without it will silently not use it, no harm done either way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2831 (Gzip support in class-snoopy.php) updated</title>
      
        <dc:creator>random</dc:creator>

      <pubDate>Sun, 25 Jun 2006 15:27:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2831/1151249252000000</guid>
      <description>&lt;p&gt;
masquerade, I don't understand the comment about undefined constants. The only one I see in the patch is E_USER_NOTICE, which is PHP core.
&lt;/p&gt;
&lt;p&gt;
Disagree about triggering the error, since reporting of E_NOTICE level errors is disabled by default (and not intended for production environments anyway). IIRC WordPress explicitly disables E_NOTICE, so the user will have already had to modify wp-settings.php in order to turn it on.
&lt;/p&gt;
&lt;p&gt;
+1 technical merits, -1 disapproval that it looks like the modifications have been taken without credit (comments and all) from Kellan Elliot-McCrea's MagpieRSS copy. Not good form.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Custom_tags_filter.patch attached to Ticket #2861</title>
      
        <dc:creator>DevaSatyam</dc:creator>

      <pubDate>Sun, 25 Jun 2006 13:56:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2861/Custom_tags_filter.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2861/Custom_tags_filter.patch/1151243811040000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2861 (Added filter to process custom tag fields) created</title>
      
        <dc:creator>DevaSatyam</dc:creator>

      <pubDate>Sun, 25 Jun 2006 13:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2861</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2861/1151243736000000</guid>
      <description>&lt;p&gt;
I added a picture gallery to WP and wanted to be able to add to my posts a reference to the related picture category.  I figured that adding custom tags to the post would be the best way to do it.  Then, I needed them processed so I added a filter to the the_meta() function.
&lt;/p&gt;
&lt;p&gt;
I followed the instructions on how to add a patch, but right now, I don't see a way to attach the patch, so here it goes in source form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Index: wp-includes/post-template.php
===================================================================
--- wp-includes/post-template.php	(revision 3923)
+++ wp-includes/post-template.php	(working copy)
@@ -212,7 +212,7 @@
 				continue;
 			$values = array_map('trim', get_post_custom_values($key));
 			$value = implode($values,', ');
-			echo "&amp;lt;li&amp;gt;&amp;lt;span class='post-meta-key'&amp;gt;$key:&amp;lt;/span&amp;gt; $value&amp;lt;/li&amp;gt;\n";
+			echo apply_filters('custom_tags',"&amp;lt;li&amp;gt;&amp;lt;span class='post-meta-key'&amp;gt;$key:&amp;lt;/span&amp;gt; $value&amp;lt;/li&amp;gt;\n",$key,$value);
 		}
 		echo "&amp;lt;/ul&amp;gt;\n";
 	}
&lt;/pre&gt;&lt;p&gt;
As for how it is used, this is the code that I added to my picture gallery.  I used Photopress as the basis for my gallery, but I modified it so the code as shown is unusable with the original distribution, it is just an example.
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('custom_tags','photopress_custom_tags_process',10,3);
function photopress_custom_tags_process($custom_tag,$key,$value) {
	// sample: &amp;lt;li&amp;gt;&amp;lt;span class='post-meta-key'&amp;gt;$key:&amp;lt;/span&amp;gt; $value&amp;lt;/li&amp;gt;\n
	switch($key) {
		case 'photopress_cat':
			return '&amp;lt;li&amp;gt;&amp;lt;a href="?pp_album=main&amp;amp;amp;pp_cat=' . intval($value) . '"&amp;gt;' . __('Photos','photopress') . '&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;';
		case 'photopress_image':
			$args=explode(',',$value);
			return '&amp;lt;li&amp;gt;&amp;lt;a href="?pp_album=main&amp;amp;amp;pp_cat=' . intval($args[0]) . '&amp;amp;amp;pp_image=' . intval($args[1]). '"&amp;gt;' . __('Photo','photopress') . '&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;';
		default:
			return $custom_tag;
	}
}
&lt;/pre&gt;&lt;p&gt;
Satyam
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2850 (Update permalinks not refreshing rewrite_rules in wp_options table) updated</title>
      
        <dc:creator>darkfate</dc:creator>

      <pubDate>Sun, 25 Jun 2006 12:37:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2850/1151239056000000</guid>
      <description>&lt;p&gt;
Could this be a permissions problem with his server? If it can't write the htaccess file, it won't work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2860 (Using wp_redirect when headers are sent) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sun, 25 Jun 2006 12:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2860/1151238859000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>2860.diff attached to Ticket #2860</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sun, 25 Jun 2006 12:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/2860/2860.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/2860/2860.diff/1151238834010000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #2860 (Using wp_redirect when headers are sent) created</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sun, 25 Jun 2006 12:33:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2860</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2860/1151238807000000</guid>
      <description>&lt;p&gt;
Currently &lt;code&gt;wp_redirect()&lt;/code&gt; redirects by sending a Refresh/Location header, making it unusable when the headers have already been sent (such as on an admin page).
&lt;/p&gt;
&lt;p&gt;
This patch checks if the headers are sent and if so &lt;code&gt;echo&lt;/code&gt;s a &lt;code&gt;meta&lt;/code&gt; refresh instead. What do people think about this?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2859 (Databasequeries of a static page using permalinks) created</title>
      
        <dc:creator>skydrak</dc:creator>

      <pubDate>Sun, 25 Jun 2006 11:39:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2859</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2859/1151235548000000</guid>
      <description>&lt;p&gt;
If I browse a static page by a permalink Wordpress the page and all before posted static pages were queryed.
&lt;/p&gt;
&lt;p&gt;
If I browse the page by the ID (?page_id=) Wordpress only query the specified page and not the static pages who were posted before.
&lt;/p&gt;
&lt;p&gt;
I've logged the queries: &lt;a class="ext-link" href="http://pastebin.com/727414"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://pastebin.com/727414&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #2858 (Problem with wp_get_referer()) updated</title>
      
        <dc:creator>robmiller</dc:creator>

      <pubDate>Sun, 25 Jun 2006 09:40:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2858/1151228412000000</guid>
      <description>&lt;p&gt;
Doesn't the unescaped full-stop defeat the entire regex?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2857 (WP_Scripts-&gt;_print_scripts and add_query_arg generate invalid links) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Sun, 25 Jun 2006 09:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2857</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2857/1151226140000000</guid>
      <description>&lt;p&gt;
Looks good to me.  The only potential concern is if wp_nonce_url is fed to a redirection script.  e.g. wp_redirect(wp_nonce_url($url, $action));
&lt;/p&gt;
&lt;p&gt;
Attn: Owen and Ryan, Is this a plausible scenario?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2858 (Problem with wp_get_referer()) updated</title>
      
        <dc:creator>matt</dc:creator>

      <pubDate>Sun, 25 Jun 2006 07:44:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2858/1151221447000000</guid>
      <description>&lt;p&gt;
Our approach in another part of the code is a whitelist of characters, which I believe is the safest approach as we never know what sort of weird unicode character + browser bug could make this an issue in the future.
&lt;/p&gt;
&lt;p&gt;
This is the code we have in wp-login, I assume it is a comprehensive regex and I see no reason we shouldn't apply it to all places we send Location headers:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$redirect_to = preg_replace('|[^a-z0-9-~+_.?#=&amp;amp;;,/:]|i', '', $_REQUEST['redirect_to']);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2858 (Problem with wp_get_referer()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 25 Jun 2006 02:54:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2858/1151204046000000</guid>
      <description>&lt;p&gt;
Note that wp_redirect already strip \r and \n.  I think we also need to strip %0d and %0a.
&lt;/p&gt;
&lt;p&gt;
Should we use wp_redirect() everywhere?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2858 (Problem with wp_get_referer()) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Sun, 25 Jun 2006 02:46:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2858</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2858/1151203578000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://www.webappsec.org/lists/websecurity/archive/2006-02/msg00040.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.webappsec.org/lists/websecurity/archive/2006-02/msg00040.html&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>