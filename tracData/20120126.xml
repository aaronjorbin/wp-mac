<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #18179 (WP_Meta_Box) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:55:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18179#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18179#comment:50/1327622158471776</guid>
      <description>&lt;p&gt;
Is this going to make it into 3.4? it would be great to get this in there.
&lt;/p&gt;
&lt;p&gt;
About adding form element rendering, as nacin mentions, this would be great to have. The &lt;a class="ext-link" href="http://www.farinspace.com/wpalchemy-metabox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| WPAlchemy MetaBox PHP Class&lt;/a&gt; seems to be the most mature in this respect, but maybe overkill as well. Do we pull the good stuff from there or write something new for form handling?
&lt;/p&gt;
&lt;p&gt;
A number of other custom field / meta box libraries and plugins exist also:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/advanced-custom-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Advanced Custom Fields&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/types/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Types&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://drupal.org/project/cck"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Content Construction Kit (CCK)&lt;/a&gt; for Drupal
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/custom-field-template/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Custom Field Template&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/more-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| More Fields Plugin&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="https://github.com/jaredatch/Custom-Metaboxes-and-Fields-for-WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Custom Metaboxes and Fields&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://www.deluxeblogtips.com/meta-box-script-for-wordpress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Meta Box Script&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://codecanyon.net/item/easy-custom-content-types-for-wordpress/234182"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Easy Custom Field Types&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/simple-fields/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Simple Fields&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="ext-link" href="http://svn.kingkool68.com/projects/metabox/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| another library&lt;/a&gt;, etc.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
A common need seems to be repeatable fields. It's such a common need it would be great if we could get that into the API. Beyond that repeatable field groups would be stellar, but maybe not for the first go.
&lt;/p&gt;
&lt;p&gt;
And what about front end display (ie. &lt;a class="ext-link" href="http://wp-types.com/home/views-create-elegant-displays-for-your-content/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| Views&lt;/a&gt; or &lt;a class="ext-link" href="https://github.com/sorich87/the-loops"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;| the loops&lt;/a&gt;) I'm guessing that is separate, but related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19904 (Trim Leading and Trailing White Space in a Post Title) updated</title>
      
        <dc:creator>greenspeakmedia</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:52:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19904#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19904#comment:1/1327621940475873</guid>
      <description>&lt;p&gt;
The trim of this should be on save.  That way it goes into the db correctly without the spaces.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19905 (Filtering the edit-comments.php screen results in incorrect Pending count) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:44:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19905#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19905#comment:1/1327621459843556</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19905 (Filtering the edit-comments.php screen results in incorrect Pending count) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19905</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19905/1327621437368462</guid>
      <description>&lt;ol&gt;&lt;li&gt;Go to edit-comments.php and view the comments for a single post (click the bubble, or do ?p=1234).
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Note the Pending comment number, say, 4, which would be lower than the total number of pending comments, say, 10.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Trash an unapproved (pending) comment.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;(Expected) The pending comment number in the toolbar and admin menu should reduce to 9. The Pending number on edit-comments.php should reduce to three.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Actual: All three numbers are set to 9.
&lt;/p&gt;
&lt;p&gt;
Tracked it down with ryan to delAfter getting the pending count from $('span.pending-count').eq(0). Three elements match span.pending-count -- the admin menu, Pending (0), and the toolbar, in that order. eq(0) means it pulls from the global pending #, from the admin menu.
&lt;/p&gt;
&lt;p&gt;
If you change it to eq(1), then the toolbar and admin menu are both updated to 3. All three values are linked no matter what. Normally, this is proper. But in the case of a filtered edit-comments.php, they must not be.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19904 (Trim Leading and Trailing White Space in a Post Title) created</title>
      
        <dc:creator>greenspeakmedia</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19904</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19904/1327621035674290</guid>
      <description>&lt;p&gt;
In working with clients today I realized that they were copying and pasting post titles but including a leading space in it by accident.  Because of this the orderby feature of the query wasn't appearing to work.  Turns out it was but the spaces where all correct so it was messing with the query.
&lt;/p&gt;
&lt;p&gt;
I think it would make sense that on a title field of a post/ page that any leading whitespaces and any trailing white spaces should be trimmed off.
&lt;/p&gt;
&lt;p&gt;
something like
&lt;/p&gt;
&lt;pre class="wiki"&gt;trim($post_title);
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>Japh</dc:creator>

      <pubDate>Thu, 26 Jan 2012 23:18:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:23/1327619902425788</guid>
      <description>&lt;p&gt;
Just to clarify, the multi-user stuff was from the patch on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18160" title="#18160: feature request: Auto-suggest usernames on views for adding user to site (closed: duplicate)"&gt;#18160&lt;/a&gt; which was used as a starting point. The main changes that are in the patch here are CSS and refreshing for compatibility with changes that have happened since.
&lt;/p&gt;
&lt;p&gt;
I will submit a new patch later today with the changes to simplify the functionality.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:21/1327617799627784</guid>
      <description>&lt;p&gt;
I just pinged @westi.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:22/1327617682551950</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19810#comment:21" title="Comment 21"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Let's lose the multi-user stuff. It is out of scope, and it will involve more UI work. Instead just fill the e-mail address into the field when they select.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, please. That can be a future improvement if desired. Let's keep initial passes focused, small, and in scope.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:8/1327616953436549</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:3" title="Comment 3"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins can set comment_status to anything. I think we'd need to introduce comment status registration, like we do with post status.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Even if there are alternative comment_status states, it shouldn't make much difference as those alternative states are not counted anyway in the core stats. But definitely it would be a better idea to have registration for comment_status.
&lt;/p&gt;
&lt;p&gt;
Alec
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:26:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903#comment:1/1327616774407731</guid>
      <description>&lt;p&gt;
Hi Mark,
&lt;/p&gt;
&lt;p&gt;
Wouldn't it make better sense to simply get rid of get_comment_count and make wp_count_comments count in the optimised way (see ticket &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/19901" title="#19901: enhancement: Speeding up Dashboard and Comment moderation SQL load (accepted)"&gt;#19901&lt;/a&gt;)?
&lt;/p&gt;
&lt;p&gt;
Keeping them both around is very confusing, especially as get_comment_count is not used in core. Duplicate functions have been a bit of a bugbear for us.
&lt;/p&gt;
&lt;p&gt;
Alec
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:13/1327616705960482</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19393#comment:11" title="Comment 11"&gt;dwenaus&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
there are many times when you have pictures of people, and cropping to the middle chops off their head. uncool. :) is this going to make it into 3.4?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thinking this would need more general solution. Currently users can crop the images (or just the thumbs) any way they like by using the image editing tab in the image settings.
&lt;/p&gt;
&lt;p&gt;
Similarly we have two sets of image manipulation functions: one "general" and another specific for the image editor. Imho it's worth merging them and making a nicer API for image manipulation in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19903 (wp_count_comments() and get_comments_count() both do SQL queries) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:16:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19903</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19903/1327616202524660</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_count_comments()&lt;/code&gt; and &lt;code&gt;get_comments_count()&lt;/code&gt; are similar functions, with a few differences:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Their results are returned in different formats:
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp_count_comments()&lt;/code&gt; returns an object of:
&lt;ul&gt;&lt;li&gt;spam
&lt;/li&gt;&lt;li&gt;approved
&lt;/li&gt;&lt;li&gt;moderated
&lt;/li&gt;&lt;li&gt;total_comments
&lt;/li&gt;&lt;li&gt;trash
&lt;/li&gt;&lt;li&gt;post-trashed
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_comment_count()&lt;/code&gt; returns an array of:
&lt;ul&gt;&lt;li&gt;spam
&lt;/li&gt;&lt;li&gt;approved
&lt;/li&gt;&lt;li&gt;awaiting_moderation
&lt;/li&gt;&lt;li&gt;total_comments
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp_count_comments()&lt;/code&gt; caches, but &lt;code&gt;get_comment_count()&lt;/code&gt; always hits the database.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_comment_count()&lt;/code&gt; is used nowhere in WordPress core.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I propose that we add 'trash' and 'post-trashed' reporting to &lt;code&gt;get_comment_count()&lt;/code&gt;, and then have &lt;code&gt;wp_count_comments()&lt;/code&gt;  use &lt;code&gt;get_comment_count()&lt;/code&gt; instead of doing its own SQL queries.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6884" title="#6884: enhancement: Have wp_count_comments() support per post counts and total comments number (closed: fixed)"&gt;#6884&lt;/a&gt; and &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/19901" title="#19901: enhancement: Speeding up Dashboard and Comment moderation SQL load (accepted)"&gt;#19901&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>coffee2code</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:14:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:7/1327616057426330</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:2" title="Comment 2"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I validated these results. The large dataset was 4.7 million comments. It's much, much faster to query the individual approval statuses. It seems that statuses with more members take longer, so inferring the "1" result by subtracting the other results from the total is a nice speedup.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Any performance difference in doing an &lt;code&gt;IN()&lt;/code&gt; as opposed to separate queries?
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved IN ( 'trash', 'spam', '0', 'post-trash' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Could then throw a filter on the comment statuses prior to inclusion in the &lt;code&gt;IN()&lt;/code&gt; so non-public comments can be omitted.  Which somewhat ties in with...
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:3" title="Comment 3"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Plugins can set comment_status to anything. I think we'd need to introduce comment status registration, like we do with post status.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+100
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>jane</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:09:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:12/1327615767811336</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would say this falls under editor/media improvements and should therefore be looked at by @azaozz.
&lt;/p&gt;
&lt;p&gt;
@bradt and everyone: Don't forget to add the has-patch keyword when you post a patch, or the appropriate leads won't know to look it over.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:03:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:6/1327615412463276</guid>
      <description>&lt;p&gt;
Also, a hack I've seen done for sites with millions of comments and high comment volume is to just not do the count queries.  Comment counts become rather meaningless for such sites.  Maybe worth a throttle or don't care switch. Maybe not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Thu, 26 Jan 2012 22:01:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:9/1327615290229504</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902#comment:3/1327615145442459</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:5/1327615073283333</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19901#comment:4" title="Comment 4"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this with myisam or innodb?  innodb will count the rows and possibly be slower.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
For the last query that doesn't have a WHERE.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902#comment:2/1327615023446137</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19902#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since we already have site_url(), let's try to pick a name that is less confusing. Perhaps blog_page_url() or something.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agree the nomenclature gets increasingly confusing. Possible permutations:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;get_/blog_url()
&lt;/li&gt;&lt;li&gt;get_/blog_link()
&lt;/li&gt;&lt;li&gt;get_/blog_permalink()
&lt;/li&gt;&lt;li&gt;get_/blog_page_url()
&lt;/li&gt;&lt;li&gt;get_/blog_page_link()
&lt;/li&gt;&lt;li&gt;get_/blog_page_permalink()
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:53:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:4/1327614793938757</guid>
      <description>&lt;p&gt;
Is this with myisam or innodb?  innodb will count the rows and possibly be slower.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902#comment:1/1327614652606261</guid>
      <description>&lt;p&gt;
Since we already have site_url(), let's try to pick a name that is less confusing. Perhaps blog_page_url() or something.
&lt;/p&gt;
&lt;p&gt;
This might be a duplicate of another ticket, but I'm not locating anything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:49:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:3/1327614565559034</guid>
      <description>&lt;p&gt;
Plugins can set comment_status to anything. I think we'd need to introduce comment status registration, like we do with post status.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19902.diff attached to Ticket #19902</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19902/19902.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19902/19902.diff/1327614304463990</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19902 (blog_url() and get_blog_url() template tags) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:44:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19902</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19902/1327614253724701</guid>
      <description>&lt;p&gt;
With usage of WordPress as a CMS increasing, the blog is not always the focal point. It would be great if there were template tags available to get the blog url, basically a wrapper for getting the options if it's set to a WordPress page, and defaulting to home_url( '/' ) if not.
&lt;/p&gt;
&lt;p&gt;
Patched against &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19759" title="Remove redundant logic from filter_SSL(). Props deltafactory. Fixes ..."&gt;r19759&lt;/a&gt; (trunk)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:38:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:2/1327613909188086</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I validated these results. The large dataset was 4.7 million comments. It's much, much faster to query the individual approval statuses. It seems that statuses with more members take longer, so inferring the "1" result by subtracting the other results from the total is a nice speedup.
&lt;/p&gt;
&lt;p&gt;
On a small site (50,000 comments), there was still a speedup, going from 50ms to 10ms. So I think we should do this for every site, not just sites with large numbers of comments.
&lt;/p&gt;
&lt;p&gt;
I'm going ahead with a patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901#comment:1/1327613831981861</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19901 (Speeding up Dashboard and Comment moderation SQL load) created</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:32:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19901</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19901/1327613563487058</guid>
      <description>&lt;p&gt;
The standard Wordpress function for counting the comments for Admin Bar and Dashboard named wp_count_comments is using a single SQL query with GROUP BY clause. That makes it slow on a large site with hundreds of thousands of comments.
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT comment_approved, COUNT(*) AS num_comments FROM wp_comments GROUP BY comment_approved;
&lt;/pre&gt;&lt;p&gt;
This takes 0.3 seconds on our site with 400,000 comments. When there are 10 editors logged in, we can see increasing server load.
&lt;/p&gt;
&lt;p&gt;
Our solution is to run 5 faster queries instead:
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = 'trash'
SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = 'spam'
SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = '0'
SELECT COUNT( comment_ID ) FROM wp_comments WHERE comment_approved = 'post-trash'
SELECT COUNT( comment_ID ) FROM wp_comments
&lt;/pre&gt;&lt;p&gt;
Takes 0.042144 on the same site. The last query gets the number of all the comments, then we subtract the previous query totals to get number of approved comments.
&lt;/p&gt;
&lt;p&gt;
On a database of 4 million comments the difference is 1.52 seconds for the original wp_count_comments and 0.01 seconds for our alternative count with 5 queries.
&lt;/p&gt;
&lt;p&gt;
Here is a link to our quick piece of code which hooks to the required filter hook and replaces the original slow function wp_count_comments: &lt;a class="ext-link" href="http://foliovision.com/downloads/fv_wp_count_comments.php.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://foliovision.com/downloads/fv_wp_count_comments.php.txt&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
But this is a hack - it would be much better to fix this in core by replacing the existing slow queries with 5 fast ones and subtraction to get total approved comments.
&lt;/p&gt;
&lt;p&gt;
This speedup can be very important on large sites, as often there are 10 or more writers and moderators working at the same time. What can happen with the existing code is that the slow count comments query can back up MySQL and then writers can no longer save or open posts to edit. They get very, very frustrated and even angry.
&lt;/p&gt;
&lt;p&gt;
This fix will allow Wordpress to scale much larger on relatively modest hardware (no separate MySQL dual quad server).
&lt;/p&gt;
&lt;p&gt;
Thanks for listening.
&lt;/p&gt;
&lt;p&gt;
Martin
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:32/1327612890852854</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19762" title="Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327."&gt;[19762]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Make 0 the default status for admin-ajax.php. props TobiasBg. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15327" title="#15327: enhancement: Strip down admin-ajax.php to be a bare bones ajax handler. (closed: fixed)"&gt;#15327&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19762]: Make 0 the default status for admin-ajax.php. props TobiasBg. fixes #15327.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:21:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19762</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19762/1327612890269516</guid>
      <description>&lt;p&gt;
Make 0 the default status for admin-ajax.php. props TobiasBg. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15327" title="#15327: enhancement: Strip down admin-ajax.php to be a bare bones ajax handler. (closed: fixed)"&gt;#15327&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #18180,​19600 batch updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=18180%2C19600</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=18180%2C19600/1327612820163585</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19761" title="Docs for WP_Locale::is_locale_rtl( $locale ). see #18180, see #19600."&gt;[19761]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs for WP_Locale::is_locale_rtl( $locale ). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [19761]: Docs for WP_Locale::is_locale_rtl( $locale ). see #18180, see #19600.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19761</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19761/1327612819312092</guid>
      <description>&lt;p&gt;
Docs for WP_Locale::is_locale_rtl( $locale ). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>WraithKenny</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:13:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:31/1327612427188749</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19900 (Updating "Settings" criterea overrites htaccess file) created</title>
      
        <dc:creator>stinkykong</dc:creator>

      <pubDate>Thu, 26 Jan 2012 21:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19900</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19900/1327612373352459</guid>
      <description>&lt;p&gt;
When change settings in my new installation of 2011 (3.3.1), my htaccess file is overwritten and the blog falls into a redirect loop.  I had help getting my blog fixed, then downloaded the htaccess file (inside the WP folder) for safe keeping. Made another change in "Settings" and the issue happened again. Blog broken. Reuploaded htaccess and blog is fixed.
&lt;/p&gt;
&lt;p&gt;
url is &lt;a class="ext-link" href="http://southernserviceslandscape.com/media/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://southernserviceslandscape.com/media/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18180 (Missing i18n in setup-config.php) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 20:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18180#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18180#comment:23/1327610068516532</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19760" title="Introduce wp_load_translations_early(), which can be used before the ..."&gt;[19760]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce wp_load_translations_early(), which can be used before the locale is properly loaded in order to translate early error strings. Internationalize setup-config.php -- translators no longer have a reason to modify this file. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19760]: Introduce wp_load_translations_early(), which can be used before the ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 20:34:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19760</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19760/1327610067606059</guid>
      <description>&lt;p&gt;
Introduce wp_load_translations_early(), which can be used before the locale is properly loaded in order to translate early error strings. Internationalize setup-config.php -- translators no longer have a reason to modify this file. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18180" title="#18180: task (blessed): Missing i18n in setup-config.php (closed: fixed)"&gt;#18180&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #7294 (Minor changes checkbox for post revisions / possible new table for ...) updated</title>
      
        <dc:creator>FolioVision</dc:creator>

      <pubDate>Thu, 26 Jan 2012 20:22:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7294#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7294#comment:8/1327609322746591</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello ryan and everybody!
&lt;/p&gt;
&lt;p&gt;
Sorry to reopen the old ticket, but this is still a problem. Adding this feature would make Wordpress faster, more scalable, better for bigger sites and more professional.
&lt;/p&gt;
&lt;p&gt;
Our biggest site has 14,000 posts and 30,000 revisions right now. We are not storing any attachments in database. We had to delete revisions before to make the site faster.
&lt;/p&gt;
&lt;p&gt;
This site was using Wordpress for last 5 years. Why not improve the core to make it possible to use Wordpress for another 5 years as the site grows? I'm sure there are tons of sites like this which might even need to be migrated from Wordpress to something bigger to solve issues like this.
&lt;/p&gt;
&lt;p&gt;
Thanks,
Martin
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17902 (Add a "Plugin Details" link to installed plugins.) updated</title>
      
        <dc:creator>kurtpayne</dc:creator>

      <pubDate>Thu, 26 Jan 2012 19:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17902#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17902#comment:12/1327605238330916</guid>
      <description>&lt;p&gt;
scribu, I'd like to talk about this one a bit more interactively, but I haven't seen you on IRC.
&lt;/p&gt;
&lt;p&gt;
The markup between the readme display and the api display varies quite a bit.  The API has screenshots, download stats, rating stats, compatibility info, last updated, date added, download link, and author profile link.  These won't be contained in the readme / plugin header information.
&lt;/p&gt;
&lt;p&gt;
I'm not sure how to combine these together.
&lt;/p&gt;
&lt;p&gt;
I can't really change the element id that necessitates the CSS changes.  It cascades from the query string to wp-admin\plugin-install.php and is set as &lt;code&gt;$body_id&lt;/code&gt; where it's used in iframe_header to set the body id, then &lt;code&gt;$tab&lt;/code&gt; is used to control which hook gets called.
&lt;/p&gt;
&lt;p&gt;
I'm not sure how to cleanly break all of these apart.  It seems like it would cause a regression somewhere.
&lt;/p&gt;
&lt;p&gt;
Thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Thu, 26 Jan 2012 19:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:21/1327605218476989</guid>
      <description>&lt;p&gt;
Hi duck_
&lt;/p&gt;
&lt;p&gt;
Thanks for the feedback. I wrote this before the documentation update and missed that when I copy/pasted. BTW, thank you so much for updating the docs. This is a really cool feature and the doc helps make it available to more devs.
&lt;/p&gt;
&lt;p&gt;
I did see that add_rewrite_endpoint() adds the query_var but since I only need to call add_rewrite_endpoint() when rewrite rules are flushed and need the query var all the time, it almost makes sense to split them. The other option as you mentioned is to call add_rewrite_endpoint() all the time, on init. The function is light enough that it probably wouldn't hurt. I just had not decided yet... so I did half of both. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18180.6.diff attached to Ticket #18180</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:56:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18180/18180.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18180/18180.6.diff/1327604203635156</guid>
      <description>&lt;p&gt;
Introduces wp_load_translations_early() and leverages it.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19867 (wp_dropdown_users() still not scalable) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:56:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19867#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19867#comment:4/1327604164477346</guid>
      <description>&lt;p&gt;
+1 on the filter.
&lt;/p&gt;
&lt;p&gt;
Additional +1 on autocomplete after a certain number of users. Since we are doing autocomplete for sites/users in the network admin for 3.4, the bits can likely be shared quite nicely.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:47:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:30/1327603665209432</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15327#comment:28" title="Comment 28"&gt;sivel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I kind of like the multidimensional array with both GET and POST in it, using only a single if and single add_action.  Performance testing over 100 result sets, shows a slight performance increase.  The single array, with single if and single add_action reduces the execution time by 0.0000379703 seconds.  Small I know, but it all adds up.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The issue I found here is that it's actually a change in behavior.
&lt;/p&gt;
&lt;p&gt;
You could send a POST request to admin-ajax.php?action=test, and wp_ajax_test will fire, even though the request method is POST. I could see someone potentially doing this in an ajax request in JS, accidentally, or using wp_remote_post() instead of wp_remote_get().
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13839 (Configuration script does not allow apostrophes, blank prefixes) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 26 Jan 2012 18:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13839#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13839#comment:13/1327602370293850</guid>
      <description>&lt;p&gt;
Don't we need to run wp_magic_quotes() before doing unconditional adds and strips since setup-config.php is not loading wp-settings.php?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 17:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:20/1327599171805805</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16303#comment:19" title="Comment 19"&gt;lgedeon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Here is another example that might help with documenting end-points:
&lt;/p&gt;
&lt;p&gt;
This code adds an endpoint of the form /embed/xxxx/ to the end of any post. We then load a separate template to render the article in one of several embeddable formats.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just a couple of notes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;You shouldn't pass an array as $places to add_rewrite_endpoint(). AFAIK the binary representation of an array is "1" so it works for EP_PERMALINK, but try the same code but with EP_PAGES and it will still add the endpoint to post permalinks. This was a documentation error previously.
&lt;/li&gt;&lt;li&gt;WP_Rewrite::add_endpoint() will add the query var for you. I guess that since you're hooking into admin_init to add_rewrite_endpoint() it's not going to work unless you hook into init instead.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>wp.newPost.2.patch attached to Ticket #18429</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Thu, 26 Jan 2012 17:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18429/wp.newPost.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18429/wp.newPost.2.patch/1327597679918718</guid>
      <description>&lt;p&gt;
Redone the first patch to be a wrapper for wp_insert_post. Removed a lot of checks and replaced code by WordPres functionality
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>lgedeon</dc:creator>

      <pubDate>Thu, 26 Jan 2012 16:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:19/1327595564503547</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Here is another example that might help with documenting end-points:
&lt;/p&gt;
&lt;p&gt;
This code adds an endpoint of the form /embed/xxxx/ to the end of any post. We then load a separate template to render the article in one of several embeddable formats.
&lt;/p&gt;
&lt;pre class="wiki"&gt;
class plugin_embeddable_post {
	public function __construct() {
		add_action( 'admin_init', array( $this, 'admin_init' ) );
		add_filter( 'query_vars', array( $this, 'query_vars' ) );
		add_filter( 'template_include', array( $this, 'template_include' ) );
	}
	/**
	 * add_rewrite_endpoint just adds an endpoint to the pool of endpoints that
	 * will be used when generate_rewrite_rules is run. It does nothing on it's
	 * own but generate_rewrite_rules fires too late, so we use admin_init to
	 * make sure it is there when rules are flushed.
	 */
	public function admin_init() {
		add_rewrite_endpoint( 'embed', EP_PERMALINK  );
	}
	public function query_vars( $public_query_vars ) {
		$public_query_vars[] = 'embed';
		return $public_query_vars;
	}
	public function template_include( $template ) {
		if ( 'format1' == get_query_var( 'embed' ) )
			$template = locate_template( 'embed-format1.php' );
		// add additional embeddable formats here or use one template for all
		return $template;
	}
}
$plugin_embeddable_post = new plugin_embeddable_post;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15924 (Add 'media_default_link_type' option to parallel 'image_default_link_type') updated</title>
      
        <dc:creator>MadtownLems</dc:creator>

      <pubDate>Thu, 26 Jan 2012 15:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15924#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15924#comment:7/1327591855723820</guid>
      <description>&lt;p&gt;
A filter on this sounds great. Would core want to:
&lt;/p&gt;
&lt;p&gt;
a) just add a filter but not change any current functionality without a plugin
&lt;/p&gt;
&lt;p&gt;
or
&lt;/p&gt;
&lt;p&gt;
b) also change some defaults so that images are not links, but other documents are
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>dwenaus</dc:creator>

      <pubDate>Thu, 26 Jan 2012 15:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:11/1327591411684220</guid>
      <description>&lt;p&gt;
there are many times when you have pictures of people, and cropping to the middle chops off their head. uncool. :) is this going to make it into 3.4?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Thu, 26 Jan 2012 14:10:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:29/1327587011414346</guid>
      <description>&lt;p&gt;
To be honest, I don't really see that benefit of using a multidimensional array here.
Not only is this still making four conditional checks just as before, but it is much harder to read and understand - which opposes the initial intention of this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15086 (get_template_part() should let you specify a directory) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 14:00:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15086#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15086#comment:45/1327586410706241</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11214 (Improve get_themes() so that the size of the in-memory data is smaller) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 11:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11214#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11214#comment:6/1327578216549040</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/11214#comment:5" title="Comment 5"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This came up again so I took a quick look.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Really good idea for some memory usage reduction.
&lt;/p&gt;
&lt;p&gt;
From my reading of the patch I think there are two things still to do:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Page templates - get_page_templates() needs to have the same fix that was applied to the theme editor, i.e. prepend the path to the template file name.
&lt;/li&gt;&lt;li&gt;Child themes need testing. It looks like there could be an issue for template files added in the loop through $stylesheet_dir as their path would be &lt;code&gt;$themes[$theme]['Stylesheet Dir']&lt;/code&gt; and not &lt;code&gt;$themes[$theme]['Template Dir']&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19899 (Redundant logic in filter_SSL() function) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 09:21:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19899#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19899#comment:2/1327569705735441</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19759" title="Remove redundant logic from filter_SSL(). Props deltafactory. Fixes ..."&gt;[19759]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove redundant logic from filter_SSL(). Props deltafactory. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19899" title="#19899: enhancement: Redundant logic in filter_SSL() function (closed: fixed)"&gt;#19899&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19759]: Remove redundant logic from filter_SSL(). Props deltafactory. Fixes ...</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Thu, 26 Jan 2012 09:21:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19759</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19759/1327569704647121</guid>
      <description>&lt;p&gt;
Remove redundant logic from filter_SSL(). Props deltafactory. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19899" title="#19899: enhancement: Redundant logic in filter_SSL() function (closed: fixed)"&gt;#19899&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Changeset in tests [497]: Add a simple extra size test for the potential improvements of #WP11214. </title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:31:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/497/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/497/tests/1327566662534632</guid>
      <description>&lt;p&gt;
Add a simple extra size test for the potential improvements of &lt;a href="https://core.trac.wordpress.org//intertrac/ticket%3A11214" title="ticket:11214 in WordPress Trac"&gt;#WP11214&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11214 (Improve get_themes() so that the size of the in-memory data is smaller) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:26:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11214#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11214#comment:5/1327566387397057</guid>
      <description>&lt;p&gt;
This came up again so I took a quick look.
&lt;/p&gt;
&lt;p&gt;
Attached patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Reduces in memory storage by approx 50% compares to 2.9 post &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12226" title="Reduce the size of the data returned by get_themes() by ~30% by ..."&gt;[12226]&lt;/a&gt; for 87 themes (wpcom public themes repo &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2679" title="Fix ping status check."&gt;r2679&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Changes the data we store which may affect plugins / themes although fixing them would be trivial
&lt;/li&gt;&lt;li&gt;Fixes the theme editor to work with the new storage structure.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Not yet tested with:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Page Templates
&lt;/li&gt;&lt;li&gt;Multiple Themedirs (although the unit tests which gave me the size figure do use an alternate root)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>11214-first-pass.diff attached to Ticket #11214</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11214/11214-first-pass.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11214/11214-first-pass.diff/1327566161923841</guid>
      <description>&lt;p&gt;
A first pass at a simple implementation of this
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:14:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:20/1327565684649415</guid>
      <description>&lt;p&gt;
Agreed. The only thing I can think of is having the templates looking something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;lt;&amp;lt;&amp;lt;EOL
This is a template.
Here is a $variable
EOL;
&lt;/span&gt;
&lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'Something else'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But then we end up with magical naming, so I'm not a big fan of that either. The only other thing I can think of is using a filter for all of this instead, but that has problems too. I think that's probably the most WordPress-y way though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Thu, 26 Jan 2012 08:00:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:19/1327564852155863</guid>
      <description>&lt;p&gt;
Raw files with variable substitution are not a bad idea, but probably not for this project - I wanted to make them behave almost exactly like the standard templates would.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:47:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:18/1327564076561305</guid>
      <description>&lt;p&gt;
Ah yeah, I had the same issue with a project I was working on (which is actually where the multipart &lt;code&gt;wp_mail&lt;/code&gt; comes from).
&lt;/p&gt;
&lt;p&gt;
We ended up going with raw HTML/text templates, and using substitution (%TITLE%, e.g.) from memory. We tried using output buffering, but that can introduce extra problems, and it's not a good practise regardless.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if that would quite work with these templates though. Anything that has a loop won't really work, unless you use a subtemplate and handle the looping separately.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:44:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:17/1327563848442928</guid>
      <description>&lt;p&gt;
AFAIR I did, in Dec ;)
&lt;/p&gt;
&lt;p&gt;
Well one thing which was my main concern, is the way templates are handled. Most of the current plugins do it via output buffering and just having the template structure pretty similiar to the standard themes. However, it was suggested to me during development that the email contents should be kept in a variable (&amp;lt;read in Mr. Mackey's voice&amp;gt;because output buffering is bad, mkay?) - it's kind of a serious issue, because the variable solution is ugly and apparently output buffering is out of the table
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:16/1327563395199594</guid>
      <description>&lt;p&gt;
Sounds like it's time to ping westi some more. :)
&lt;/p&gt;
&lt;p&gt;
Are there any outstanding issues to work on (apart from wiping &lt;code&gt;$phpmailer&lt;/code&gt; afterwards)?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>wojtek.szkutnik</dc:creator>

      <pubDate>Thu, 26 Jan 2012 07:34:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:15/1327563242086143</guid>
      <description>&lt;p&gt;
Well I was willing to keep going with the project, but westi asked me to wait until he reviews it. Since it's clearly not a top priority for core developers, maybe we could wrap this up by ourselves and deliver something ready to merge ith the core without lots of improvements?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:21/1327560790055900</guid>
      <description>&lt;p&gt;
Let's lose the multi-user stuff. It is out of scope, and it will involve more UI work. Instead just fill the e-mail address into the field when they select.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19393 (Image crop position) updated</title>
      
        <dc:creator>tammyhart</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:27:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19393#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19393#comment:10/1327559243480517</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Besides on the fly cropping, this is the one thing that I hated about dropping Tim Thumb. Changing the position really helps with things like website screenshots where you want the logo/header to be in the crop, not a chunk out of the middle. The filter/hook hacks work great, but I would love to see this in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>editor_plugin.dev.js.patch attached to Ticket #16239</title>
      
        <dc:creator>dwright</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16239/editor_plugin.dev.js.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16239/editor_plugin.dev.js.patch/1327559122755051</guid>
      <description>&lt;p&gt;
&amp;lt;!--more--&amp;gt; is surrounded by a fully blank line above and a fully blank line below, representing a paragraph
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16239 (Improve switching between visual editor and html mode when text set ...) updated</title>
      
        <dc:creator>dwright</dc:creator>

      <pubDate>Thu, 26 Jan 2012 06:23:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16239#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16239#comment:5/1327559023988115</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16239#comment:4" title="Comment 4"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Seems we should be putting &amp;lt;!--more--&amp;gt; in a separate paragraph, that way the content above and below it will be formatted properly after we do the split.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
By 'separate paragraph', I assume you mean &amp;lt;p&amp;gt;&amp;lt;!--more--&amp;gt;&amp;lt;/p&amp;gt;, however, when switching from Visual to HTML mode in the TinyMCE editor, the &amp;lt;p&amp;gt; tags are stripped, it appears the way a paragraph is then represented in HTML mode is when content is surrounded by a fully blank line above and a fully blank line below.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This would also need a look at the back-end handling of &amp;lt;!--more--&amp;gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
why? with the new patch, after saving a post, &amp;lt;!--more--&amp;gt; maintains the paragraph format
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10318 (Improved generic menu item icon) updated</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 05:59:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10318#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10318#comment:13/1327557566337492</guid>
      <description>&lt;p&gt;
+1 to no circle.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16869 (Links from admin panel to site don't use HTTPS) closed</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 05:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16869#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16869#comment:4/1327555475545559</guid>
      <description>duplicate</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19869 (Formatting from code block during network setup doesn't match wp-config.php) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Thu, 26 Jan 2012 05:21:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19869#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19869#comment:11/1327555292170975</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19869#comment:9" title="Comment 9"&gt;MZAWeb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
wp-config-sample.php is also missing the ?&amp;gt; php closing tag at the end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It was intentionally removed in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6791" title="#6791: enhancement: Eliminate closing ?&amp;gt;'s from wp-config-sample.php (closed: fixed)"&gt;#6791&lt;/a&gt;. Also came up in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10106" title="#10106: defect (bug): wp-config-sample.php missing closing PHP tag (closed: invalid)"&gt;#10106&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19523 (Inaccurate Help text on the Tools screen) reopened</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 04:54:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19523#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19523#comment:6/1327553675172663</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19523 (Inaccurate Help text on the Tools screen) closed</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 04:53:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19523#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19523#comment:5/1327553585299589</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>tools.patch attached to Ticket #19523</title>
      
        <dc:creator>AJ Acevedo</dc:creator>

      <pubDate>Thu, 26 Jan 2012 04:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19523/tools.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19523/tools.patch/1327553537341093</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18493 (HTML emails) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Thu, 26 Jan 2012 03:07:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18493#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18493#comment:14/1327547220229170</guid>
      <description>&lt;p&gt;
Are there any plans to integrate this? If this needs updating, I'll take ownership and get it updated.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:28/1327545851618106</guid>
      <description>&lt;p&gt;
I kind of like the multidimensional array with both GET and POST in it, using only a single if and single add_action.  Performance testing over 100 result sets, shows a slight performance increase.  The single array, with single if and single add_action reduces the execution time by 0.0000379703 seconds.  Small I know, but it all adds up.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9175.3.diff attached to Ticket #9175</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:43:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9175/9175.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9175/9175.3.diff/1327545788674095</guid>
      <description>&lt;p&gt;
Updated 9175.2.diff for 19712
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>15327.7.diff attached to Ticket #15327</title>
      
        <dc:creator>sivel</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:40:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/15327/15327.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/15327/15327.7.diff/1327545659782447</guid>
      <description>&lt;p&gt;
Use multidimensional associative array for $core_actions instead of 2 arrays
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>18158.5.diff attached to Ticket #18158</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18158/18158.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18158/18158.5.diff/1327545274513978</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9175 (Admin Option Page lacks Infos about serialized Option Values) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9175#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9175#comment:27/1327544940859429</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19869 (Formatting from code block during network setup doesn't match wp-config.php) updated</title>
      
        <dc:creator>ryanduff</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19869#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19869#comment:10/1327544819942692</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19869#comment:9" title="Comment 9"&gt;MZAWeb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is really small and related, sorry if I should open a new ticket about this.
&lt;/p&gt;
&lt;p&gt;
wp-config-sample.php is also missing the ?&amp;gt; php closing tag at the end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There are various reasons for that. For starters, its optional. Secondly, it can help avoid whitespace issues that may cause the common white screen of death error.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19869 (Formatting from code block during network setup doesn't match wp-config.php) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 02:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19869#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19869#comment:9/1327544567180289</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is really small and related, sorry if I should open a new ticket about this.
&lt;/p&gt;
&lt;p&gt;
wp-config-sample.php is also missing the ?&amp;gt; php closing tag at the end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19899 (Redundant logic in filter_SSL() function) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:55:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19899#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19899#comment:1/1327542908712646</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, it is redundant.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>ms-functions.php.patch attached to Ticket #19899</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19899/ms-functions.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19899/ms-functions.php.patch/1327542518190466</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19899 (Redundant logic in filter_SSL() function) created</title>
      
        <dc:creator>deltafactory</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:48:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19899</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19899/1327542493665332</guid>
      <description>&lt;p&gt;
I'm not sure if there's a reason it's written this way, but the logic in this line seems redundant.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-includes/ms-functions.php#L1947"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-includes/ms-functions.php#L1947&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'http' === $arrURL['scheme'] &amp;amp;&amp;amp; 'https' !== $arrURL['scheme'] )
&lt;/pre&gt;&lt;p&gt;
In the interest of simplification, shouldn't this line be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'http' === $arrURL['scheme'] )
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:27/1327541378242792</guid>
      <description>&lt;p&gt;
With &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18158/18158.4.diff" title="Attachment '18158.4.diff' in Ticket #18158"&gt;18158.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18158/18158.4.diff" title="Download"&gt;​&lt;/a&gt;, 'compare' =&amp;gt; 'EXISTS' still works, but you can skip it altogether.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18158.4.diff attached to Ticket #18158</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:28:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18158/18158.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18158/18158.4.diff/1327541330415551</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:18:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:26/1327540680202605</guid>
      <description>&lt;p&gt;
Actually, 'compare' =&amp;gt; 'EXISTS' is totally unnecessary. Doing an INNER JOIN is enough to ensure that the value is not null.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:08:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:25/1327540105001622</guid>
      <description>&lt;p&gt;
Example usage:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$q = new WP_Query( array(
	'meta_query' =&amp;gt; array(
		array(
			'key' =&amp;gt; 'foo',
			'compare' =&amp;gt; 'EXISTS'
		),
		array(
			'key' =&amp;gt; 'bar',
			'compare' =&amp;gt; 'NOT EXISTS'
		)
	)
) );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18158 (Meta Query for posts with a meta key not set (IS NULL).) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18158#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18158#comment:24/1327540009385098</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/18158/18158.3.diff" title="Attachment '18158.3.diff' in Ticket #18158"&gt;18158.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/18158/18158.3.diff" title="Download"&gt;​&lt;/a&gt; is just some minor cleanup. I moved the if block before the original $join lines, to avoid a little extra work.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>18158.3.diff attached to Ticket #18158</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Thu, 26 Jan 2012 01:05:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/18158/18158.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/18158/18158.3.diff/1327539932241624</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19816 (Theme details should be able to include multiple screenshots) updated</title>
      
        <dc:creator>kwight</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:35:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19816#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19816#comment:6/1327538106664203</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:29:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:20/1327537771469325</guid>
      <description>&lt;p&gt;
UI Note:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;user-new labels/help tabs will probably need plural ambiguity since autocomplete actually allows for adding multiple users at once. This goes for anywhere we duplicate this functionality.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [19758]: It's L10n (or i18n). Not too sure what l18n stands for. (Typo from ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:16:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19758</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19758/1327536961520384</guid>
      <description>&lt;p&gt;
It's L10n (or i18n). Not too sure what l18n stands for. (Typo from &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12762" title="phpdoc for load.php, return some includes to global scope. Props ..."&gt;[12762]&lt;/a&gt;.)
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16840 (add_rewrite_rule() should accept an array for the $redirect parameter) updated</title>
      
        <dc:creator>MZAWeb</dc:creator>

      <pubDate>Thu, 26 Jan 2012 00:05:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16840#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16840#comment:2/1327536301416462</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19698 (Context for Welcome) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:34:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19698#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19698#comment:3/1327534497538114</guid>
      <description>&lt;p&gt;
I believe "Welcome" on the welcome panel is an interjection, and "Welcome" in screen options is an adjective ("a welcome panel"), or possibly an abstract noun.
&lt;/p&gt;
&lt;p&gt;
Either way, what about these for clearer contexts:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Welcome", "welcome panel"
&lt;/li&gt;&lt;li&gt;"Welcome", "hello"
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>Japh</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:32:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:19/1327534331030270</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>Japh</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:31:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:18/1327534306448255</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19810.3.patch attached to Ticket #19810</title>
      
        <dc:creator>Japh</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:31:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19810/19810.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19810/19810.3.patch/1327534279212524</guid>
      <description>&lt;p&gt;
Refreshed for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19738" title="Add 'ep_mask' as an argument to the 'rewrite' array for ..."&gt;[19738]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19739" title="Strip down admin-ajax.php to be a bare ajax handler. Move core ajax ..."&gt;[19739]&lt;/a&gt; as requested
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #18770 (Make repair.php fully translatable) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:27:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18770#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18770#comment:12/1327534064795292</guid>
      <description>&lt;p&gt;
I think I caught everything at this point.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18770 (Make repair.php fully translatable) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18770#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18770#comment:11/1327534034442328</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19757" title="Formatting and i18n cleanup of repair.php. props zeo for initial ..."&gt;[19757]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Formatting and i18n cleanup of repair.php. props zeo for initial patch. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18770" title="#18770: defect (bug): Make repair.php fully translatable (closed: fixed)"&gt;#18770&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19757]: Formatting and i18n cleanup of repair.php. props zeo for initial ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:27:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19757</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19757/1327534033305882</guid>
      <description>&lt;p&gt;
Formatting and i18n cleanup of repair.php. props zeo for initial patch. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18770" title="#18770: defect (bug): Make repair.php fully translatable (closed: fixed)"&gt;#18770&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:16:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:18/1327533403320347</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16303#comment:17" title="Comment 17"&gt;duck_&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I attached a new version of the improved functionality patch.
&lt;/p&gt;
&lt;p&gt;
However, there are a couple of issues:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should EP_ROOT be included in EP_ALL_ARCHIVES? It depends on the page_on_front option as to whether or not it's an archive.
&lt;/li&gt;&lt;li&gt;Is EP_CPT_ARCHIVE usable? This was alluded to in previous comments. register_post_type() uses WP_Rewrite::add_rule() when creating rewrites for CPT archives, and this means no endpoints.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I don't think that the ROOT of the site is ever an archive view really (and it people want to include it they can OR it in) I think have different behaviour for / not for page on front could be confusing and would mean we would need to flush and regen rules if the option changed.
&lt;/p&gt;
&lt;p&gt;
I'm not sure if EP_CPT_ARCHIVE is currently usable but it is something that I feel should be usable - use case something like the example JSON endpoint above would automatically get a JSON version of any CPT archive view if it works ( I can't remember how I tested at the time but I can probably dig the code out - I was working around the concepts of a Person CPT with the CPT Archives be "People")
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19898 (Create a is_login() function similar to is_admin()) created</title>
      
        <dc:creator>dcowgill</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:13:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19898</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19898/1327533223649965</guid>
      <description>&lt;p&gt;
It would be useful for developers to have better detection of being on the wp-login.php and wp-register.php pages. Sure, this can currently be done by using the $pagenow global variable but having a similar function like is_admin() would make things easier/cleaner.
&lt;/p&gt;
&lt;p&gt;
One use case:
&lt;/p&gt;
&lt;p&gt;
-Using a hosted javascript file but then requiring SSL (FORCE_SSL_LOGIN).
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function javascript_init() {
    if ( $pagenow == 'wp-login.php' || is_admin() )
        return;
    wp_deregister_script( 'jquery' );
    wp_register_script( 'jquery', 'http://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js');
    wp_enqueue_script( 'jquery' );
}
add_action( 'wp_print_scripts', 'javascript_init' );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Proposed solution:
Create a new function that does all the checking.
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function is_login() {
    return in_array( $GLOBALS['pagenow'], array( 'wp-login.php', 'wp-register.php' ) );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>Japh</dc:creator>

      <pubDate>Wed, 25 Jan 2012 23:08:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:17/1327532907298473</guid>
      <description>&lt;p&gt;
It would be good to add wp_is_large_network() in somewhere to test before running these queries. I thought perhaps in script-loader to determine whether or not to add the javascript for it at all, but wp_is_large_network() isn't available at that point at the moment. Any suggestions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19871 (add_rewrite_tag() should take same params as WP_Rewrite::add_rewrite_tag()) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:48:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19871#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19871#comment:3/1327531705563484</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19756" title="Add the $query parameter to add_rewrite_tag() so that it matches ..."&gt;[19756]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Add the $query parameter to add_rewrite_tag() so that it matches WP_Rewrite::add_rewrite_tag(). Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19871" title="#19871: enhancement: add_rewrite_tag() should take same params as WP_Rewrite::add_rewrite_tag() (closed: fixed)"&gt;#19871&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Also rename some other parameters so that they all match.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19756]: Add the $query parameter to add_rewrite_tag() so that it matches ...</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:48:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19756</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19756/1327531704443677</guid>
      <description>&lt;p&gt;
Add the $query parameter to add_rewrite_tag() so that it matches WP_Rewrite::add_rewrite_tag(). Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19871" title="#19871: enhancement: add_rewrite_tag() should take same params as WP_Rewrite::add_rewrite_tag() (closed: fixed)"&gt;#19871&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Also rename some other parameters so that they all match.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19600 (Core should know which locales are RTL) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19600#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19600#comment:5/1327531345519498</guid>
      <description>&lt;p&gt;
I have a strong feeling that &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19755" title="Initial support for RTL detection in core. props SergeyBiryukov for ..."&gt;[19755]&lt;/a&gt; will evolve more as 3.4 continues. We'll work with this for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19600 (Core should know which locales are RTL) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:41:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19600#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19600#comment:4/1327531316477169</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19755" title="Initial support for RTL detection in core. props SergeyBiryukov for ..."&gt;[19755]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Initial support for RTL detection in core. props SergeyBiryukov for compiling the list. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19755]: Initial support for RTL detection in core. props SergeyBiryukov for ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19755</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19755/1327531315621178</guid>
      <description>&lt;p&gt;
Initial support for RTL detection in core. props SergeyBiryukov for compiling the list. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:34:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:17/1327530897674742</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I attached a new version of the improved functionality patch.
&lt;/p&gt;
&lt;p&gt;
However, there are a couple of issues:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Should EP_ROOT be included in EP_ALL_ARCHIVES? It depends on the page_on_front option as to whether or not it's an archive.
&lt;/li&gt;&lt;li&gt;Is EP_CPT_ARCHIVE usable? This was alluded to in previous comments. register_post_type() uses WP_Rewrite::add_rule() when creating rewrites for CPT archives, and this means no endpoints.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>16303.2.diff attached to Ticket #16303</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:32:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16303/16303.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16303/16303.2.diff/1327530762547909</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19600 (Core should know which locales are RTL) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19600#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19600#comment:3/1327530573996213</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19754" title="Remove locale_vars from WP_Locale. Explicitly set the text_direction ..."&gt;[19754]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Remove locale_vars from WP_Locale. Explicitly set the text_direction property from a global, not from an arbitrary list. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [19754]: Remove locale_vars from WP_Locale. Explicitly set the text_direction ...</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19754</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19754/1327530573152404</guid>
      <description>&lt;p&gt;
Remove locale_vars from WP_Locale. Explicitly set the text_direction property from a global, not from an arbitrary list. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19600" title="#19600: task (blessed): Core should know which locales are RTL (closed: fixed)"&gt;#19600&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>19523.2.diff attached to Ticket #19523</title>
      
        <dc:creator>ajacommerce</dc:creator>

      <pubDate>Wed, 25 Jan 2012 22:01:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19523/19523.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19523/19523.2.diff/1327528915737605</guid>
      <description>&lt;p&gt;
Cleaned up text and corrected typo
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16303 (Improve documentation and usability of WP_Rewrite Endpoint support) updated</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 21:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16303#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16303#comment:16/1327528704067496</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19753" title="Improve the inline documentation of rewrite endpoints. See #16303.
"&gt;[19753]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Improve the inline documentation of rewrite endpoints. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16303" title="#16303: defect (bug): Improve documentation and usability of WP_Rewrite Endpoint support (closed: fixed)"&gt;#16303&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [19753]: Improve the inline documentation of rewrite endpoints. See #16303. </title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 21:58:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19753</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19753/1327528703271740</guid>
      <description>&lt;p&gt;
Improve the inline documentation of rewrite endpoints. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16303" title="#16303: defect (bug): Improve documentation and usability of WP_Rewrite Endpoint support (closed: fixed)"&gt;#16303&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19523 (Inaccurate Help text on the Tools screen) updated</title>
      
        <dc:creator>ajacommerce</dc:creator>

      <pubDate>Wed, 25 Jan 2012 21:45:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19523#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19523#comment:4/1327527938457044</guid>
      <description>&lt;p&gt;
Also the second instance of the word hierarchy is misspelled in the sentence "Tags do not have hierachy" on line 22.
&lt;/p&gt;
&lt;p&gt;
Original:
Categories have hierarchy, meaning that you can nest sub-categories. Tags do not have hierachy and cannot be nested. Sometimes people start out using one on their posts, then later realize that the other would work better for their content.
&lt;/p&gt;
&lt;p&gt;
The Categories and Tags Converter link on this screen will take you to the Import screen, where that Converter is one of the plugins you can install. Once that plugin is installed, return to this screen and the link will take you to a screen where you can choose to convert tags into categories or vice versa.
&lt;/p&gt;
&lt;p&gt;
Modified:
Categories have hierarchy, meaning that you can nest sub-categories. Tags do not have hierarchy and cannot be nested. Sometimes people start out using one on their posts, then later realize that the other would work better for their content.
&lt;/p&gt;
&lt;p&gt;
The Categories and Tags Converter link below will take you to the Import screen, where the Converter is one of the plugins you can install. Once installed and activated, return to this screen and the link will take you to the Import screen where you can choose to convert tags into categories or vice versa.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19897 (Improve documentation of WP_Rewrite) closed</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 21:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19897#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19897#comment:1/1327527842957833</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19752" title="Improve documentation of WP_Rewrite. Fixes #19897.
In particular ..."&gt;[19752]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Improve documentation of WP_Rewrite. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19897" title="#19897: enhancement: Improve documentation of WP_Rewrite (closed: fixed)"&gt;#19897&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In particular WP_Rewrite::$front, WP_Rewrite::$root, WP_Rewrite::$use_verbose_page_rules and WP_Rewrite::generate_rewrite_rules(). As well as some code indentation prettification.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19752]: Improve documentation of WP_Rewrite. Fixes #19897.  In particular ...</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 21:44:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19752</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19752/1327527842108499</guid>
      <description>&lt;p&gt;
Improve documentation of WP_Rewrite. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19897" title="#19897: enhancement: Improve documentation of WP_Rewrite (closed: fixed)"&gt;#19897&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In particular WP_Rewrite::$front, WP_Rewrite::$root, WP_Rewrite::$use_verbose_page_rules and WP_Rewrite::generate_rewrite_rules(). As well as some code indentation prettification.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #15384 (wp-login.php refactor) updated</title>
      
        <dc:creator>jeffstieler</dc:creator>

      <pubDate>Wed, 25 Jan 2012 21:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15384#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15384#comment:17/1327525690684726</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19337 (is_ssl() fails behind nginx proxy) updated</title>
      
        <dc:creator>niklasbr</dc:creator>

      <pubDate>Wed, 25 Jan 2012 21:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19337#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19337#comment:17/1327525328767128</guid>
      <description>&lt;p&gt;
Do you still need some sort of reporter-feedback?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17863 (HTML5 input type=number in admin settings) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 25 Jan 2012 20:59:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17863#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17863#comment:18/1327525153683181</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19810 (Autocomplete for users and sites in Network admin) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 25 Jan 2012 20:46:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19810#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19810#comment:16/1327524418357315</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch needs a refresh after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19738" title="Add 'ep_mask' as an argument to the 'rewrite' array for ..."&gt;[19738]&lt;/a&gt; and &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19739" title="Strip down admin-ajax.php to be a bare ajax handler. Move core ajax ..."&gt;[19739]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19897.diff attached to Ticket #19897</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 20:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19897/19897.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19897/19897.diff/1327522796230825</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19897 (Improve documentation of WP_Rewrite) created</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 20:19:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19897</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19897/1327522773322232</guid>
      <description>&lt;p&gt;
The WP_Rewrite class has several documentation issues in need of fixing. The larger changes in the attached patch are:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Corrections for WP_Rewrite::$front and WP_Rewrite::$root
&lt;/li&gt;&lt;li&gt;Improvement for WP_Rewrite::$use_verbose_page_rules
&lt;/li&gt;&lt;li&gt;Improvements to WP_Rewrite::generate_rewrite_rules() parameters
&lt;/li&gt;&lt;li&gt;Indentation fixes in code
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16303" title="#16303: defect (bug): Improve documentation and usability of WP_Rewrite Endpoint support (closed: fixed)"&gt;#16303&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15924 (Add 'media_default_link_type' option to parallel 'image_default_link_type') updated</title>
      
        <dc:creator>goldenapples</dc:creator>

      <pubDate>Wed, 25 Jan 2012 20:12:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15924#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15924#comment:6/1327522368283700</guid>
      <description>&lt;p&gt;
I agree a filter is much better than adding a new option. I would like to see it default to "link to file", though, whatever the &lt;code&gt;image_default_link_type&lt;/code&gt; setting is. Would this break much current usage?
&lt;/p&gt;
&lt;p&gt;
I'm trying to brainstorm mainstream cases where people might want to link non-image media to an attachment page, and I can't think of any offhand. Maybe podcasting? I'm not sure. In any case, I think the hassle caused to the everyday site owner who has to remember to check an additional box when inserting pdfs or .zip downloads into post content could be alleviated by treating media and image links separately.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>bare-category-redirect.2.diff attached to Ticket #19876</title>
      
        <dc:creator>duck_</dc:creator>

      <pubDate>Wed, 25 Jan 2012 19:59:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19876/bare-category-redirect.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19876/bare-category-redirect.2.diff/1327521584576585</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #15924 (Add 'media_default_link_type' option to parallel 'image_default_link_type') updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 19:21:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15924#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15924#comment:5/1327519318388548</guid>
      <description>&lt;p&gt;
Rather than adding a new option, we can just drop a filter on that value and ensure that $post gets passed to it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17242 (Themes: Allow flexible sizes for custom header uploads) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Wed, 25 Jan 2012 19:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17242#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17242#comment:35/1327518467594550</guid>
      <description>&lt;p&gt;
Ok, there are two issues that I'm concerned about and want feedback on:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;It seems like we should add a minimum width requirement for uploaded images so that we don't scale them up.  You can currently upload a 125x125 image, go through the JS crop, and get a horribly ugly header image that has stretched it to 7x it's original width. If we add flex width it won't matter for themes that support that, but it would still affect all the others.  Talked to both &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2012-01-23&amp;amp;sort=asc#m356139"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Rboren and Koop in irc&lt;/a&gt; and they both agreed.
&lt;/li&gt;&lt;li&gt;Additionally, the issue with &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17242#comment:32" title="Comment 32"&gt;getting the header image dimensions&lt;/a&gt; is nagging at me.  For the admin preview we could change to using an image tag instead of a background image, but the themes that layer site name over the top would have issues.  Additionally, as I pointed out above, I think it's common for a theme to need to know the dimensions, so I think we probably need a way to give those to them.  I could put the code above into a helper function of some kind (maybe even return an array like &lt;a class="ext-link" href="http://php.net/getimagesize"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;getimagesize()&lt;/a&gt;), but I don't like the weight of the function and was hoping someone else had a brilliant solution.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19853 (Theme description should be hidden by default and author should be shown) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 25 Jan 2012 19:01:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19853#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19853#comment:8/1327518061472465</guid>
      <description>&lt;pre class="wiki"&gt;&amp;lt;h3&amp;gt;&amp;lt;?php echo $name ?&amp;gt; &amp;lt;span&amp;gt;&amp;lt;?php _e('by') ?&amp;gt;&amp;lt;/strong&amp;gt; &amp;lt;?php echo $author ?&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/h3&amp;gt;
&lt;/pre&gt;&lt;p&gt;
That isn't very translator friendly. Probably need something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h3&amp;gt;&amp;lt;?php printf( __('%1$s &amp;lt;span&amp;gt;by %2$s&amp;lt;/span&amp;gt;', $name, $author); ?&amp;gt;&amp;lt;/h3&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Should that closing strong be there?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17242 (Themes: Allow flexible sizes for custom header uploads) updated</title>
      
        <dc:creator>sabreuse</dc:creator>

      <pubDate>Wed, 25 Jan 2012 18:55:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17242#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17242#comment:34/1327517754867792</guid>
      <description>&lt;p&gt;
This approach to resizing works really well for me on Linux (FF + Chrome) and Mac (FF + Chrome + Safari), but the switch to an img tag in the last patch messes with the UI on the Custom Header admin page.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 25 Jan 2012 18:39:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:16/1327516744855884</guid>
      <description>&lt;p&gt;
Next up is updating all of the potbot related scripts, creating new GlotPress projects for the new pots, and moving strings to the right projects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 25 Jan 2012 18:37:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:15/1327516625371957</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://i18n.trac.wordpress.org/changeset/19029"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://i18n.trac.wordpress.org/changeset/19029&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19896 (Non-WP rewrites not saved on a multisite install) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 25 Jan 2012 16:14:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19896</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19896/1327508060818284</guid>
      <description>&lt;p&gt;
The following code adds a rewrite rule which is classed as a non-WP rewrite rule because its redirect doesn't begin with &lt;code&gt;index.php&lt;/code&gt;, and is stored in the &lt;code&gt;non_wp_rules&lt;/code&gt; member variable of the &lt;code&gt;WP_Rewrite&lt;/code&gt; class.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function my_rewrite() {
	add_rewrite_rule( 'login/?$', 'wp-login.php', 'top' );
}
add_action( 'init', 'my_rewrite' );
&lt;/pre&gt;&lt;p&gt;
On a single site install, this rewrite rule gets saved directly to the .htaccess file rather than being added to WordPress' internal rewrite array.
&lt;/p&gt;
&lt;p&gt;
On a multisite install, this doesn't happen and the rewrite rule has no effect (probably because once a site is multisite-d WordPress no longer writes to .htaccess). The rule has to be manually added to .htaccess.
&lt;/p&gt;
&lt;p&gt;
Likely introduced in 3.0, reproduced in 3.3 and trunk.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 13:29:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:27/1327498177956423</guid>
      <description>&lt;p&gt;
0 implies failure, -1 implies an authentication issue.
&lt;/p&gt;
&lt;p&gt;
I'd be okay with making 0 the default status for both authenticated and non-authenticated actions.
&lt;/p&gt;
&lt;p&gt;
Nice catch!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19895 (Short domain name wrapped in "Add New Site" dialog) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Jan 2012 13:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19895#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19895#comment:1/1327497377985060</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>19895.patch attached to Ticket #19895</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Jan 2012 13:15:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19895/19895.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19895/19895.patch/1327497341672326</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19893 (get_comments_link() doesn't link properly if there are no responses) updated</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Wed, 25 Jan 2012 13:13:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19893#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19893#comment:2/1327497192345465</guid>
      <description>&lt;p&gt;
I was going by the code included in wp-includes/theme-compat/comments.php, which uses &lt;code&gt;#comments&lt;/code&gt; as an ID for the &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; tag at the top of the comment list. That &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; is only output when &lt;code&gt;have_comments()&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (it's not wrapping anything, and doesn't even exist if there are no comments).
&lt;/p&gt;
&lt;p&gt;
I realize that that file is deprecated, but if that's the way WordPress builds the comment area by default, that might be the way a lot of people are using it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18429 (Create custom post types via XMLRPC) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Wed, 25 Jan 2012 13:04:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18429#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18429#comment:4/1327496658195104</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Should we have a default post_status or do we really need to return an error
&lt;/li&gt;&lt;li&gt;Should we generate an error if page templates aren't supported
&lt;/li&gt;&lt;li&gt;Should we generate an error on invalid comment status or ping status
&lt;/li&gt;&lt;li&gt;Not sure about the implementation of post_more. Shouldn't the client handle this instead of the xml-rpc?
&lt;/li&gt;&lt;li&gt;Shouldn't the checks after wp_insert_post not be before it. Sounds like it can give weird situation
&lt;/li&gt;&lt;li&gt;Do we need the "handle enclosures" code in the end of the function. Shouldn't this be a separate function?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19884 (Unable to sort themes by language) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 25 Jan 2012 12:05:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19884#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19884#comment:4/1327493100744240</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19852 (Don't load admin strings on the frontend) updated</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Wed, 25 Jan 2012 12:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19852#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19852#comment:14/1327492834541743</guid>
      <description>&lt;p&gt;
The patch looks good to me, except the call to non-existant &lt;code&gt;$this-&amp;gt;wp_user_admin($dir, null);&lt;/code&gt; in &lt;code&gt;wp_core()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19895 (Short domain name wrapped in "Add New Site" dialog) created</title>
      
        <dc:creator>meglio</dc:creator>

      <pubDate>Wed, 25 Jan 2012 11:50:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19895</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19895/1327492255860445</guid>
      <description>&lt;p&gt;
Looks like the reason is css maximum width available for input and then "-" sign in domain name:
&lt;a style="padding:0; border:none" href="http://i54.tinypic.com/vecjfc.png"&gt;&lt;img src="http://i54.tinypic.com/vecjfc.png" alt="http://i54.tinypic.com/vecjfc.png" crossorigin="anonymous" title="http://i54.tinypic.com/vecjfc.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19889 (Image Editor doesn't apply changes to custom image sizes) updated</title>
      
        <dc:creator>skithund</dc:creator>

      <pubDate>Wed, 25 Jan 2012 11:43:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19889#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19889#comment:1/1327491786033723</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15327 (Strip down admin-ajax.php to be a bare bones ajax handler.) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 25 Jan 2012 11:41:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15327#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15327#comment:26/1327491670882936</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13757 (Passing functions as call by ref parameter should be avoided) closed</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 25 Jan 2012 11:38:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13757#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13757#comment:19/1327491535580951</guid>
      <description>fixed: &lt;p&gt;
Closing this as "fixed somewhere along the road".
&lt;/p&gt;
&lt;p&gt;
I grep'd again, and the only find was something like this in atomlib.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$tag = array_pop(split(":", $name));
&lt;/pre&gt;&lt;p&gt;
But since that's an external lib, I'm not sure if we'll mess with it at all. And as the split() (deprecated in PHP 5.3.0) would need to be replaced by explode() anyway, this can then be dealt with together.
&lt;/p&gt;
&lt;p&gt;
New occurances of PHP warnings/notices related to function calls being used as a call-by-ref parameter should get a new ticket.
&lt;/p&gt;
&lt;p&gt;
P.S.: Someone could change the Milestone again, if necessary, probably to 3.2. (I seem to lack permissions for that.)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19886 ([Bug] Custom Post Types don't parse base64 CSS image Icons properly) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Wed, 25 Jan 2012 11:28:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19886#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19886#comment:2/1327490901999062</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19354" title="#19354: defect (bug): wp_allowed_protocols() does not allow data URI scheme (closed: wontfix)"&gt;#19354&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19894 (Using image editor in admin doesn't generate custom sized thumbnails) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 25 Jan 2012 11:01:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19894#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19894#comment:1/1327489318154887</guid>
      <description>duplicate: &lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19889" title="#19889: defect (bug): Image Editor doesn't apply changes to custom image sizes (closed: fixed)"&gt;#19889&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19751]: Update the documentation of wp_set_comment_status to match current ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 25 Jan 2012 10:41:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19751</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19751/1327488112644181</guid>
      <description>&lt;p&gt;
Update the documentation of wp_set_comment_status to match current functionality props solarissmoke.
The 'delete' status was removed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11749" title="Trash status updates for posts, pages, comments and attachments, props ..."&gt;[11749]&lt;/a&gt; when the concept of a trash status was introduced for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19884 (Unable to sort themes by language) updated</title>
      
        <dc:creator>Tomer</dc:creator>

      <pubDate>Wed, 25 Jan 2012 10:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19884#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19884#comment:3/1327486468666640</guid>
      <description>&lt;p&gt;
(mid-air collision with yoavf comment above. The comment below might be less relevant as yoavf already suggested how to actually fix it)
&lt;/p&gt;
&lt;p&gt;
What hatul is asking for is an option to filter theme results by the theme supported language matrix. Imagine a French person who wants to theme his website but doesn't have the knowledge or time to spend in translating theme strings – currently he can't filter the themes and retrieve list of French-supported themes.
&lt;/p&gt;
&lt;p&gt;
In the case of Hebrew, we are very short in translated themes, and because it is complicated to filter the official themes repository there are third party theme repositories whose violate the GPL license by removing theme credits and claiming it as their own, and also attach malware code to themes in order to track usage and violations of their terms of use which require you not to change their code and not removing their SEO links, and also can do file manipulation on remote hosts which can be used to hack other WordPress sites which use their themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>list of available tags.png attached to Ticket #19884</title>
      
        <dc:creator>Tomer</dc:creator>

      <pubDate>Wed, 25 Jan 2012 10:08:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19884/list%20of%20available%20tags.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19884/list%20of%20available%20tags.png/1327486110433819</guid>
      <description>&lt;p&gt;
list of available tags
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19884 (Unable to sort themes by language) reopened</title>
      
        <dc:creator>yoavf</dc:creator>

      <pubDate>Wed, 25 Jan 2012 10:05:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19884#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19884#comment:2/1327485930681518</guid>
      <description>&lt;p&gt;
Translating a theme isn't something that everyone can easily do - and so aggregating the translation efforts for all the themes in Extend is, I think, something we all want to encourage.
&lt;/p&gt;
&lt;p&gt;
While eventually themes might get plugged in to GlotPress, they aren't right now.
&lt;/p&gt;
&lt;p&gt;
Some themes already come bundled with specific language files, but this information is not usually displayed unless the theme authors added it to the theme description.
&lt;/p&gt;
&lt;p&gt;
A relatively quick fix is to add meta information about existing translations to the readme.txt file and add this to front end.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #19893 (get_comments_link() doesn't link properly if there are no responses) updated</title>
      
        <dc:creator>solarissmoke</dc:creator>

      <pubDate>Wed, 25 Jan 2012 09:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19893#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19893#comment:1/1327483509390791</guid>
      <description>&lt;p&gt;
In the bundled themes (and I suspect most other themes as well), &lt;code&gt;#respond&lt;/code&gt; is a descendant of &lt;code&gt;#comments&lt;/code&gt; anyway, so this wouldn't make any difference?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19816 (Theme details should be able to include multiple screenshots) updated</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Wed, 25 Jan 2012 09:16:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19816#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19816#comment:5/1327483017955087</guid>
      <description>&lt;p&gt;
Those icons next to the links in my mocks should probably be aligned a bit more with standard WordPress icons. They were more for placement and style than actual usage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>arrows-slider-or-slideshow.jpg attached to Ticket #19816</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Wed, 25 Jan 2012 09:04:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19816/arrows-slider-or-slideshow.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19816/arrows-slider-or-slideshow.jpg/1327482266005665</guid>
      <description>&lt;p&gt;
Using arrows to toggle through the screenshots with a text indicator showing how many screenshots there are total and what image the user is looking at..
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>radio-button-slider-or-slideshow.jpg attached to Ticket #19816</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Wed, 25 Jan 2012 09:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19816/radio-button-slider-or-slideshow.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19816/radio-button-slider-or-slideshow.jpg/1327482076295485</guid>
      <description>&lt;p&gt;
Using radio buttons to toggle through the screenshots.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19894 (Using image editor in admin doesn't generate custom sized thumbnails) created</title>
      
        <dc:creator>skithund</dc:creator>

      <pubDate>Wed, 25 Jan 2012 08:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19894</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19894/1327480676148109</guid>
      <description>&lt;p&gt;
Editing post thumbnail using the built-in image editor and custom add_image_size() image sizes won't get generated when saving modified image.
&lt;/p&gt;
&lt;p&gt;
Problem seems to be in &lt;a class="missing source"&gt;source:trunk/wp-admin/includes/image-edit.php#L620&lt;/a&gt; as &lt;code&gt;$meta['sizes']&lt;/code&gt; doesn't contain information about additional image sizes. &lt;code&gt;$sizes&lt;/code&gt; array does contain those additional image size names.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19816 (Theme details should be able to include multiple screenshots) updated</title>
      
        <dc:creator>brandondove</dc:creator>

      <pubDate>Wed, 25 Jan 2012 07:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19816#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19816#comment:4/1327475091425532</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19892 (wp_fix_server_vars() mangles REQUEST_URI on some servers) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 25 Jan 2012 06:53:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19892#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19892#comment:3/1327474384156210</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
MS IIS to Linux, okay, but Linux to IIS...?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19859 ("Bulk Edit" Missing The Ability To Edit Tags) updated</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Wed, 25 Jan 2012 04:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19859#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19859#comment:7/1327467019245178</guid>
      <description>&lt;p&gt;
@ademos: This enhancement request is about editing tags (and categories) in the scope of posts. Renaming tags (and categories) should not be possible in this scope because this will affect every post that has this tag (or category). Such renaming should only be possible from the Tags (or Categories) screen.
&lt;/p&gt;
&lt;p&gt;
This ticket should be about adding and removing categories and tags to a set of posts in bulk editing, based on the existing set of categories and tags already found in the actual set of posts. It could be enhanced to work on any taxonomy.
&lt;/p&gt;
&lt;p&gt;
My advice is to change the description of this ticket to limit the task and to clarify. This will, in my view, increase the chance of getting someone to write such a patch in the first place, and getting it committed in the second phase.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18506 (Filter to allow pingback URLs to be added (from custom fields, etc.)) updated</title>
      
        <dc:creator>alexkingorg</dc:creator>

      <pubDate>Wed, 25 Jan 2012 04:47:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18506#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18506#comment:9/1327466875063851</guid>
      <description>&lt;p&gt;
Agreed, with the $post_ID added, that would be fine. I didn't know if it was preferable to change an existing hook or create a new one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment-template.php.no-responses.get_comments_link.patch attached to Ticket #19893</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Wed, 25 Jan 2012 03:36:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19893/comment-template.php.no-responses.get_comments_link.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19893/comment-template.php.no-responses.get_comments_link.patch/1327462595502605</guid>
      <description>&lt;p&gt;
get_comments_link() checks number of comments before generating link
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19893 (get_comments_link() doesn't link properly if there are no responses) created</title>
      
        <dc:creator>cgrymala</dc:creator>

      <pubDate>Wed, 25 Jan 2012 03:35:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19893</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19893/1327462553065599</guid>
      <description>&lt;p&gt;
Since the current implementation of get_comments_link() simply returns the permalink with &lt;code&gt;#comments&lt;/code&gt; appended to the end of it, and the HTML element with an ID of &lt;code&gt;comments&lt;/code&gt; only exists when existing comments are wrapped inside of it, it doesn't lead to anything when there are 0 comments on the post.
&lt;/p&gt;
&lt;p&gt;
I've attached a patch that checks whether there are any comments on the post or not; and, if not, it appends &lt;code&gt;#respond&lt;/code&gt; to the end of the link; otherwise it appends &lt;code&gt;#comments&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19892 (wp_fix_server_vars() mangles REQUEST_URI on some servers) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Wed, 25 Jan 2012 02:43:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19892#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19892#comment:2/1327459435483554</guid>
      <description>&lt;p&gt;
I totally agree that it's insane ;-)
&lt;/p&gt;
&lt;p&gt;
One host where I've noticed this happening is hosting.nl. For an example phpinfo() output from one of their servers, please check: &lt;a class="ext-link" href="http://test.verlaatverdriet.nu/phpinfo.htm"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://test.verlaatverdriet.nu/phpinfo.htm&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I've seen quite a number of support request topics in the support fora which seems to stem from this issue, so I presume that this is surely not the only host which seems to do this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16292 (Show theme path in ms-themes.php and ms-sites.php?action=editblog in ...) closed</title>
      
        <dc:creator>PeteMall</dc:creator>

      <pubDate>Wed, 25 Jan 2012 01:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16292#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16292#comment:18/1327456213156408</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #19892 (wp_fix_server_vars() mangles REQUEST_URI on some servers) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 01:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19892#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19892#comment:1/1327455774114557</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The issue is ultimately caused by (shared-)hosting companies which - for security reasons - set the $_SERVER&lt;a class="missing wiki"&gt;SERVER_SOFTWARE?&lt;/a&gt; variable to MS IIS when in reality the server runs on a Linux variant.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can we have an example host that does this? That is insane, though I've seen worse.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19892 (wp_fix_server_vars() mangles REQUEST_URI on some servers) created</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:58:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19892</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19892/1327453127858821</guid>
      <description>&lt;h2 id="Bugmanifestation:"&gt;Bug manifestation:&lt;/h2&gt;
&lt;p&gt;
On some server setups, saving settings on any settings page which uses options.php - including the twentyeleven theme options pages - results in a &lt;em&gt;You do not have sufficient permissions to access this page.&lt;/em&gt;-error page, even if you are the (super-)admin of the website.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The changed settings *are* however saved, but the bug obviously causes a usability issue.&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Thecauseoftheissue:"&gt;The cause of the issue:&lt;/h2&gt;
&lt;p&gt;
The issue is ultimately caused by (shared-)hosting companies which - for security reasons - set the &lt;code&gt;$_SERVER['SERVER_SOFTWARE']&lt;/code&gt; variable to MS IIS when in reality the server runs on a Linux variant.&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;$_SERVER['SERVER_SOFTWARE']&lt;/code&gt; variable being MS IIS causes &lt;em&gt;wp_fix_server_vars()&lt;/em&gt; to double the query vars resulting in a mangled &lt;code&gt;$_SERVER['REQUEST_URI']&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I.e.: &lt;em&gt;"/wp-admin/themes.php?page=theme_options"&lt;/em&gt; becomes &lt;em&gt;"/wp-admin/themes.php?page=theme_options?page=theme_options"&lt;/em&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As the &lt;code&gt;$_SERVER['REQUEST_URI']&lt;/code&gt; variable is used by the &lt;em&gt;settings_fields()&lt;/em&gt; function to generate the hidden form fields for the option pages, this then in turn results in a mangled &lt;em&gt;_wp_http_referer&lt;/em&gt; form value.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I.e.: &lt;code&gt;&amp;lt;input type="hidden" name="_wp_http_referer" value="/wp-admin/themes.php?page=theme_options?page=theme_options" /&amp;gt;&lt;/code&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As the &lt;strong&gt;&lt;em&gt;options.php&lt;/em&gt;&lt;/strong&gt; file, after saving the changed settings, uses the &lt;em&gt;_wp_http_referer&lt;/em&gt; field value to redirect the page - which it then can't - , the user ends up on the &lt;em&gt;You do not have sufficient permissions to access this page.&lt;/em&gt;-error page.&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Patchfixfortheissue:"&gt;Patch/fix for the issue:&lt;/h2&gt;
&lt;p&gt;
In file &lt;strong&gt;&lt;em&gt;wp-includes/load.php&lt;/em&gt;&lt;/strong&gt; change &lt;strong&gt;&lt;em&gt;line 75&lt;/em&gt;&lt;/strong&gt; from:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $_SERVER['QUERY_STRING'] ) ) {
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( ! empty( $_SERVER['QUERY_STRING'] ) &amp;amp;&amp;amp; strpos ( $_SERVER['REQUEST_URI'], '?' ) === false ) {
&lt;/pre&gt;&lt;p&gt;
N.B.: line number based on WP 3.3.1. trunk&lt;br /&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Additionalinfo:"&gt;Additional info:&lt;/h2&gt;
&lt;p&gt;
This bug has been in the WP code base for a while. It might be useful to add this issue to the FAQ in the documentation for those users/webmasters who do not always upgrade to the latest &amp;amp; greatest WP version.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A user/webmaster who encounters this issue should probably get advice along the following lines:&lt;br /&gt;
&lt;/p&gt;
&lt;ol class="loweralpha"&gt;&lt;li&gt;Determine that the problem is really caused by this issue by verifying that they really run on Linux and by checking that the &lt;code&gt;$_SERVER['SERVER_SOFTWARE']&lt;/code&gt; is a MS IIS variant - they can use &lt;em&gt;phpinfo()&lt;/em&gt; to do so.&lt;br /&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol class="loweralpha" start="2"&gt;&lt;li&gt;Upgrade to a WP version which includes the above patch once it has been released.&lt;br /&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol class="loweralpha" start="3"&gt;&lt;li&gt;Contact their webhost to see if they are willing to change the &lt;code&gt;$_SERVER['SERVER_SOFTWARE']&lt;/code&gt; variable to reflect reality.&lt;br /&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol class="loweralpha" start="4"&gt;&lt;li&gt;If neither of the above is possible/works and they are sure that this bug is the cause of their problems, they can apply the following quick &amp;amp; dirty fix to solve it without touching the core files:&lt;br /&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Add the following code to their wp-config.php file anywhere above the &lt;em&gt;/* That's all, stop editing! Happy blogging. */&lt;/em&gt; line.
&lt;/p&gt;
&lt;pre class="wiki"&gt;/**
 * Quick fix for server software bug
 */
$_SERVER['SERVER_SOFTWARE'] = 'Apache';
&lt;/pre&gt;&lt;p&gt;
&lt;br /&gt;
&lt;/p&gt;
&lt;h2 id="Relatedbugreportsfound:"&gt;Related bug reports found:&lt;/h2&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15209" title="#15209: defect (bug): $_SERVER['REQUEST_URI'] Doesn't always work correctly (closed: worksforme)"&gt;#15209&lt;/a&gt; &lt;code&gt;$_SERVER['REQUEST_URI']&lt;/code&gt; Doesn't always work correctly
&lt;/li&gt;&lt;li&gt;&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/12346" title="#12346: defect (bug): Saving settings in multiple plugins results in You do not have ... (closed: invalid)"&gt;#12346&lt;/a&gt; Saving settings in multiple plugins results in You do not have sufficient permissions to access this page.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This ticket has been opened as the previous two bug reports where too old to reopen.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #19804 (phpDoc for get_the_post_thumbnail()) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19804#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19804#comment:2/1327450862839271</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19750" title="s/thumbnail/post-thumbnail/. props PeteMall, fixes #19804."&gt;[19750]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
s/thumbnail/post-thumbnail/. props PeteMall, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19804" title="#19804: defect (bug): phpDoc for get_the_post_thumbnail() (closed: fixed)"&gt;#19804&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [19750]: s/thumbnail/post-thumbnail/. props PeteMall, fixes #19804.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:21:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19750</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19750/1327450862002916</guid>
      <description>&lt;p&gt;
s/thumbnail/post-thumbnail/. props PeteMall, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19804" title="#19804: defect (bug): phpDoc for get_the_post_thumbnail() (closed: fixed)"&gt;#19804&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19891 (get_most_recent_post_of_user() should use get_blog_prefix()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19891#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19891#comment:2/1327450247256043</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19749" title="Use get_blog_prefix() in another MU function. see #19891."&gt;[19749]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use get_blog_prefix() in another MU function. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19891" title="#19891: defect (bug): get_most_recent_post_of_user() should use get_blog_prefix() (closed: fixed)"&gt;#19891&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [19749]: Use get_blog_prefix() in another MU function. see #19891.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19749</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19749/1327450246412671</guid>
      <description>&lt;p&gt;
Use get_blog_prefix() in another MU function. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19891" title="#19891: defect (bug): get_most_recent_post_of_user() should use get_blog_prefix() (closed: fixed)"&gt;#19891&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19891 (get_most_recent_post_of_user() should use get_blog_prefix()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:09:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19891#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19891#comment:1/1327450171741912</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19748" title="Use get_blog_prefix() in get_most_recent_post_of_user(). see #19891."&gt;[19748]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Use get_blog_prefix() in get_most_recent_post_of_user(). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19891" title="#19891: defect (bug): get_most_recent_post_of_user() should use get_blog_prefix() (closed: fixed)"&gt;#19891&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [19748]: Use get_blog_prefix() in get_most_recent_post_of_user(). see #19891.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:09:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/19748</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/19748/1327450170862963</guid>
      <description>&lt;p&gt;
Use get_blog_prefix() in get_most_recent_post_of_user(). see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19891" title="#19891: defect (bug): get_most_recent_post_of_user() should use get_blog_prefix() (closed: fixed)"&gt;#19891&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #19891 (get_most_recent_post_of_user() should use get_blog_prefix()) created</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 25 Jan 2012 00:02:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19891</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19891/1327449765373604</guid>
      <description>&lt;p&gt;
Given the loop over multiple sites and the direct DB query against each post table, this function should probably be deprecated and killed.
&lt;/p&gt;
&lt;p&gt;
That said, it currently uses &lt;code&gt;{$wpdb-&amp;gt;base_prefix}{$blog-&amp;gt;userblog_id}&lt;/code&gt;, which won't work for the main site in 3.0+ multisite. That needs to change.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>