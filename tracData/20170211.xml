<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #39851 (WP_REST_Posts_Controller::get_items() has too many concerns) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39851#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39851#comment:1/1486856633053351</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's refactor this and split it up into multiple methods. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) updated</title>
      
        <dc:creator>charleslf</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:29:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850#comment:3/1486855744243884</guid>
      <description>&lt;p&gt;
I can confirm that the proposed solution works perfectly for overriding the embedded iframe url.
&lt;/p&gt;
&lt;p&gt;
The url in blockquote, however, is based on &lt;code&gt;get_permalink&lt;/code&gt; and can not be modified in the same manner.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39512 (has_header_video() should be filtered) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:28:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39512#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39512#comment:12/1486855718871269</guid>
      <description>&lt;p&gt;
This seems like an obvious 4.7.x candidate to me since it adds a filter on a function added in 4.7 that should have been filtered from the beginning.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39851.diff attached to Ticket #39851</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:21:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39851/39851.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39851/39851.diff/1486855299497106</guid>
      <description>&lt;p&gt;
Initial pass at abstracting response preparation from get_items() method
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39851 (WP_REST_Posts_Controller::get_items() has too many concerns) created</title>
      
        <dc:creator>Shelob9</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:20:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39851</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39851/1486855239050110</guid>
      <description>&lt;p&gt;
I've written a bunch of custom endpoints that return collections of posts of one or more post types. I'd like my responses to be the same formatting, body and header as the default post routes provide. This allows for a client designed to consume default routes to be more easily modified to use custom routes.
&lt;/p&gt;
&lt;p&gt;
Achieving this with a subclass of WP_REST_Posts_Controller still requires some cut and paste for collections of posts, since the get_items() method has way too many concerns. I'd like to break out the preparing of response body, as well as response header into separate methods, so that they can be used with different types of requests or ways to create arrays of WP_Post objects, while still providing a consistent response.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850#comment:2/1486855224490195</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:09:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850#comment:1/1486854544735815</guid>
      <description>&lt;p&gt;
Previous discussion on Slack about this: &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1486845896008270"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1486845896008270&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Passing the request URL to the &lt;code&gt;post_embed_url&lt;/code&gt; filter would mean adding it to the &lt;code&gt;get_post_embed_html()&lt;/code&gt; function and all functions using it, i.e. &lt;code&gt;print_embed_sharing_dialog()&lt;/code&gt;, &lt;code&gt;get_oembed_response_data_rich()&lt;/code&gt;, &lt;code&gt;wp_filter_pre_oembed_result()&lt;/code&gt;. At a quick glance, it seems doable, but it would also make everything more complex.
&lt;/p&gt;
&lt;p&gt;
My proposed (untested) workaround on Slack:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;add_filter( 'oembed_request_post_id', function( $post_id, $url ) {
  if ( $url === … ) {
    add_filter( 'post_embed_url', function( $embed_url ) use ( $url ) {
      remove_filter( current_filter(), __FUNCTION__ );
      // define $my_new_url based on $url
      return $my_new_url;
    } );
  }
  return $post_id;
}, 10, 2 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39850 (WordPress embedded links drop query vars from URL) created</title>
      
        <dc:creator>charleslf</dc:creator>

      <pubDate>Sat, 11 Feb 2017 23:02:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39850</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39850/1486854171438120</guid>
      <description>&lt;p&gt;
When embedding a WordPress page within another post, any query strings that are passed in the URL get dropped.
&lt;/p&gt;
&lt;p&gt;
For example, if embedding &lt;a class="ext-link" href="http://example.com/page-name/?foo=bar"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/?foo=bar&lt;/a&gt;, the actual URL that gets passed to the oEmbed function (and later on to the template files) is &lt;a class="ext-link" href="http://example.com/page-name/embed/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/embed/&lt;/a&gt;  (foo=bar gets dropped).
&lt;/p&gt;
&lt;p&gt;
The link inside the blockquote also drops the url query variable and links to &lt;a class="ext-link" href="http://example.com/page-name/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/&lt;/a&gt; instead of &lt;a class="ext-link" href="http://example.com/page-name/?foo=bar"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://example.com/page-name/?foo=bar&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As I see, this occurs because the &lt;code&gt;wp_filter_pre_oembed_result&lt;/code&gt; function in &lt;code&gt;embed.php&lt;/code&gt; uses &lt;code&gt;url_to_postid&lt;/code&gt; to get the embeded post's ID, and later &lt;code&gt;get_post_embed_url&lt;/code&gt; uses that ID to create the embed permalink. So naturally any url query vars are not preserved in the final URL construction.
Similarly in &lt;code&gt;get_post_embed_html&lt;/code&gt;, the function uses &lt;code&gt;esc_url( get_permalink( $post ) )&lt;/code&gt;, thus  reconstructing the permalink without knowledge of the initial url.
&lt;/p&gt;
&lt;p&gt;
I encountered this when embedded a specific photo gallery (from nextcellent plugin), but I assume some other plugins such as language/translation ones may also be affected.
&lt;/p&gt;
&lt;p&gt;
I don't think the URL's should be dropping any of the query variables.
However, if that is a requirement, it would be good to also pass on the original url in the &lt;code&gt;post_embed_url&lt;/code&gt; hook to allow plugin developers to make sure to add any parameters from the original url that got dropped off in the embedded url.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39848 (New filter 'the_title_wrap') updated</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sat, 11 Feb 2017 22:11:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39848#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39848#comment:1/1486851106290992</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39847 (force_balance_tags not properly balancing &lt; with &lt;strong&gt; and &lt;/strong&gt;) updated</title>
      
        <dc:creator>jpmerx</dc:creator>

      <pubDate>Sat, 11 Feb 2017 21:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39847#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39847#comment:1/1486847408128027</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;em&gt;I found an even simple string producing the error.&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
For following HMTL code which includes the &amp;lt; symbol:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt; &amp;lt;strong&amp;gt;We&amp;lt;/strong&amp;gt;
&lt;/pre&gt;&lt;p&gt;
the output of force_balance_tags is
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt; &amp;lt;strong&amp;gt;We
&lt;/pre&gt;&lt;p&gt;
which is not correct as the bold tags are unbalanced. Expected output should be the input string.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39849 (Filter `nav_menu_items_{$post_type_name}_recent` passes base args, not ...) created</title>
      
        <dc:creator>eclev91</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:50:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39849</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39849/1486846235828469</guid>
      <description>&lt;p&gt;
On line 434 of &lt;code&gt;nav-menu.php&lt;/code&gt;, the &lt;code&gt;nav_menu_items_{$post_type_name}_recent&lt;/code&gt; filter is passing the base &lt;code&gt;$args&lt;/code&gt; rather than the adjusted &lt;code&gt;$recent_args&lt;/code&gt; set on line 418. Could be expected, but seemed odd to me and I ended up reapplying those arguments in my filter function.
&lt;/p&gt;
&lt;p&gt;
If someone can confirm this is a bug and not as expected, I'd be happy to attach a patch.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>post-template.php attached to Ticket #39848</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39848/post-template.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39848/post-template.php/1486846035450500</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39848 (New filter 'the_title_wrap') created</title>
      
        <dc:creator>milana_cap</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39848</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39848/1486845981926054</guid>
      <description>&lt;h2 id="Problem:"&gt;Problem:&lt;/h2&gt;
&lt;p&gt;
In plugin I wish to add some markup after/before the post and page title so, naturally, I use &lt;code&gt;the_title&lt;/code&gt; filter. However, this filter is applied on &lt;code&gt;get_the_title()&lt;/code&gt; function which is used by all instances of post title all over the page (menus, edit links etc). On top of that, more and more themes are using &lt;code&gt;the_title()&lt;/code&gt; with before and after params which makes all my custom markup wrapped inside this before and after. So when theme is using &lt;code&gt;the_title( '&amp;lt;h1 class="entry-title"&amp;gt;', '&amp;lt;/h1&amp;gt;' )&lt;/code&gt;, and my markup in filter is, for example an image, then I get:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h1 class="entry-title"&amp;gt;The title &amp;lt;img src="image.jpg" &amp;gt;&amp;lt;/h1&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Or something even worse if my custom markup is more complex.
&lt;/p&gt;
&lt;h2 id="Proposalpossiblesolution:"&gt;Proposal (possible solution):&lt;/h2&gt;
&lt;p&gt;
I have tested another filter on &lt;code&gt;the_title()&lt;/code&gt; function &lt;strong&gt;(wp-includes/post-template.php)&lt;/strong&gt; and it gave me exactly what I needed:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;
/**
 * Display or retrieve the current post title with optional markup.
 *
 * @since 0.71
 *
 * @param string $before Optional. Markup to prepend to the title. Default empty.
 * @param string $after  Optional. Markup to append to the title. Default empty.
 * @param bool   $echo   Optional. Whether to echo or return the title. Default true for echo.
 * @return string|void Current post title if $echo is false.
 */
function the_title( $before = '', $after = '', $echo = true ) {
        $title = get_the_title();
        if ( strlen($title) == 0 )
                return;
        $title = $before . $title . $after;
        /**
         * Filters the post title after 'the_title' filter.
         *
         * @param string $title The post title.
         */
        $title = apply_filters( 'the_title_wrap', $title );
        if ( $echo )
                echo $title;
        else
                return $title;
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I named it &lt;code&gt;the_title_wrap&lt;/code&gt; because it wraps everything that comes with &lt;code&gt;the_title&lt;/code&gt; function and filter. This filter doesn't apply on menus, edit links etc. Tested on twenty* themes, it applies only on posts and pages title on singulars and on posts title inside the loop on archive pages. Also, my custom markup doesn't end up inside &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags. Now it looks like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;h1 class="entry-title"&amp;gt;The title&amp;lt;/h1&amp;gt;&amp;lt;img src="image.jpg" &amp;gt;
&lt;/pre&gt;&lt;p&gt;
This is, of course, somewhat uncertain because I'm counting on theme author to use &lt;code&gt;the_title()&lt;/code&gt; instead of &lt;code&gt;get_the_title()&lt;/code&gt; but I think it's worth of effort as sometimes it becomes nearly impossible to target only entry title on singular or inside loop on archives etc.
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>mrjarbenne</dc:creator>

      <pubDate>Sat, 11 Feb 2017 20:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:53/1486844973868042</guid>
      <description>&lt;p&gt;
I would worry that for each time that the inactive widget group can be quickly re-located to the new sidebar location, there are probably an equal number of times when the grouping that worked on one theme needs to be redistributed in a different fashion in a different theme. For example, a stack of four widgets may look great in the sidebar of theme A, but on theme B, where there is no sidebar, and 3 footer spaces, that single stack will need to be re-distributed.
&lt;/p&gt;
&lt;p&gt;
I like the way in which the patch organizes those pre-configured widgets under the type of widget they are, which is an improvement over the "inactive widget" bucket that currently exists under Appearance/Widgets.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39844 (Don't return anchor tag if link is empty in get_the_author_posts_link()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 19:55:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39844#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39844#comment:1/1486842959199143</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39847 (force_balance_tags not properly balancing &lt; with &lt;strong&gt; and &lt;/strong&gt;) created</title>
      
        <dc:creator>jpmerx</dc:creator>

      <pubDate>Sat, 11 Feb 2017 19:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39847</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39847/1486840324211454</guid>
      <description>&lt;p&gt;
Given following HMTL code which includes the &lt;em&gt;\[&lt;/em&gt; and &lt;em&gt;\]&lt;/em&gt; Latex delimiters:
&lt;/p&gt;
&lt;pre class="wiki"&gt;\[&amp;lt;\] &amp;lt;strong&amp;gt;We&amp;lt;/strong&amp;gt;
&lt;/pre&gt;&lt;p&gt;
the output of &lt;strong&gt;force_balance_tags&lt;/strong&gt; is
&lt;/p&gt;
&lt;pre class="wiki"&gt;\[&amp;lt;\] &amp;lt;strong&amp;gt;We
&lt;/pre&gt;&lt;p&gt;
which is not correct as the bold tags are unbalanced. Expected output should be the input string.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39843 (Allow a control to be displayed in multiple sections) updated</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 18:36:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39843#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39843#comment:2/1486838217391528</guid>
      <description>&lt;p&gt;
@westonruter yes, 2 different controls assigned to the same setting would do the same job. I agree, your solution is better. It adds a new control, but we can live with it. The most important is that it is simpler to implement and using the existing core.
&lt;/p&gt;
&lt;p&gt;
I knew it was something doable but I honestly totally did not think about it as a possible solution to solve this problem! This is probably because I am to much used to work with a one to one control - setting pair when developing in the js customize api.
&lt;/p&gt;
&lt;p&gt;
Thanks for this detailed feedback :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39843 (Allow a control to be displayed in multiple sections) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 18:12:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39843#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39843#comment:1/1486836747708232</guid>
      <description>wontfix: &lt;p&gt;
@nikeo thanks for the suggestion, but core supports adding a controls for the same setting to multiple sections already. You just have to add the control to each section you desire. I don't think that there is a need for a control to support multiple sections at once, since it is almost just as easy to just add multiple controls with the same configurations aside from the &lt;code&gt;section&lt;/code&gt;. Trying to add support for a multi-section control would have very little gain for the headaches involved in the API change.
&lt;/p&gt;
&lt;p&gt;
For example, given the current Site Title control:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'blogname'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'label'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Site Title'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'section'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'title_tagline'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
To add an additional control that also manipulates the &lt;code&gt;blogname&lt;/code&gt; setting but appears in the &lt;code&gt;colors&lt;/code&gt; section in addition to the &lt;code&gt;title_tagline&lt;/code&gt; section, all that is required is:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$wp_customize&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;add_control&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'blogname_in_colors_section'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'label'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'Site Title'&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s1"&gt;'section'&lt;/span&gt;    &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'colors'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'settings'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'blogname'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
In other words, since the control ID is no longer one-to-one with the control's setting ID, then you just have to give a unique control ID and explicitly specify the settings
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39637 (Wrong term taxonomy link in custom taxonomy admin column) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:39:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39637#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39637#comment:3/1486834768606868</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The issue: Term taxonomy link contains slug instead of term_id
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why exactly is this an issue?
&lt;/p&gt;
&lt;p&gt;
Links for the &lt;code&gt;category&lt;/code&gt; taxonomy look like this: &lt;code&gt;wp-admin/edit.php?category_name=uncategorized&lt;/code&gt;. For tags &lt;code&gt;wp-admin/edit.php?tag=foo&lt;/code&gt; and for the custom taxonomy &lt;code&gt;foo&lt;/code&gt; it is &lt;code&gt;wp-admin/edit.php?foo=baz&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Filtering seems to work as expected.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The behaviour is different from the dropdown which seems to work as expected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The category dropdown uses a &lt;code&gt;cat=&amp;lt;id&amp;gt;&lt;/code&gt; parameter, which also seems to work fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39237 (PHPunit coverage reports fail if the is out to the stdout or header) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39237#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39237#comment:4/1486834259625230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I noticed the same a while ago. It used to work, but perhaps something changed in PHPUnit.
&lt;/p&gt;
&lt;p&gt;
@jorbin @netweb Maybe you guys have some ideas?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39773 (Users Can Wrongly Set a Custom Page Template when front-page.php is in Use) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39773#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39773#comment:1/1486834066091231</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
The page template selection box doesn't show up in this case because setting a template when the front page is a static page and a theme has front-page.php isn't possible.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What if the page template was previously set, i.e. before the page was chosen as the static front page.
&lt;/p&gt;
&lt;p&gt;
While we're at it: what about the posts page?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:25:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831#comment:3/1486833902608503</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39846 (Protocol agnostic links like //foo.com produce login loop reporting ...) updated</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Sat, 11 Feb 2017 17:16:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39846#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39846#comment:1/1486833379062358</guid>
      <description>&lt;p&gt;
I use the following code (or similar) in &lt;code&gt;wp-config.php&lt;/code&gt; file to let a site to be served on both HTTP and HTTPS, depending on the request...
&lt;/p&gt;
&lt;pre class="wiki"&gt;if (isset($_SERVER['HTTPS']) &amp;amp;&amp;amp;
    ($_SERVER['HTTPS'] == 'on' || $_SERVER['HTTPS'] == 1) ||
    isset($_SERVER['HTTP_X_FORWARDED_PROTO']) &amp;amp;&amp;amp;
    $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') {
  $wplt_protocol = 'https://';
}
else {
  $wplt_protocol = 'http://';
}
$wplt_domain = 'example.com';
define('WP_HOME', $wplt_protocol . $wplt_domain);
define('WP_SITEURL', $wplt_protocol . $wplt_domain);
&lt;/pre&gt;&lt;p&gt;
Since the codex recommends to &lt;a class="ext-link" href="https://codex.wordpress.org/Editing_wp-config.php#WP_SITEURL"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;use a protocol&lt;/a&gt; for WP_SITEURL and WP_HOME, it can not be considered as a bug, IMO.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39846 (Protocol agnostic links like //foo.com produce login loop reporting ...) created</title>
      
        <dc:creator>dfavor</dc:creator>

      <pubDate>Sat, 11 Feb 2017 16:29:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39846</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39846/1486830546824608</guid>
      <description>&lt;p&gt;
If siteurl + home are changed to protocol agnostic links, site login loops... producing the dreaded...
&lt;/p&gt;
&lt;p&gt;
"ERROR: Cookies are blocked or not supported by your browser..." message.
&lt;/p&gt;
&lt;p&gt;
Easy way to reproduce this is to use wp-cli on command line...
&lt;/p&gt;
&lt;p&gt;
wp option set siteurl &lt;em&gt;foo.com
wp option set home &lt;/em&gt;foo.com
&lt;/p&gt;
&lt;p&gt;
After this, site login will loop forever, till siteurl + home are changed to include a protocol, either http: or https: will do.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #23148 (Add hook in wp_ajax_save_attachment for additional attachment fields) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 11 Feb 2017 16:10:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23148#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23148#comment:22/1486829415948578</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by pepe. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486829413001105"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) closed</title>
      
        <dc:creator>pothi</dc:creator>

      <pubDate>Sat, 11 Feb 2017 16:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:4/1486829279924204</guid>
      <description>invalid: &lt;p&gt;
Welcome to trac and thanks for filing a ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
what about the files compression to speed up website
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
File compression can be enabled by hosts. It's outside WordPress (core) territory, though. Some plugins enable compression on certain files (such as cached content), if supported by the host. Again, it is outside WP core. This trac is specially about core WordPress.
&lt;/p&gt;
&lt;p&gt;
You can learn how to optimize WordPress at &lt;a class="ext-link" href="https://codex.wordpress.org/WordPress_Optimization/WordPress_Performance"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/WordPress_Optimization/WordPress_Performance&lt;/a&gt; and there is a codex on optimizing high traffic WP sites too at &lt;a class="ext-link" href="https://codex.wordpress.org/High_Traffic_Tips_For_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/High_Traffic_Tips_For_WordPress&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
You may file a ticket particular to any bug in WordPress core. Anything in general can be posted in wp.org forum for a discussion.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 15:49:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842#comment:3/1486828187244185</guid>
      <description>&lt;p&gt;
Alright, thanks for testing the patch. Now, does it work when you deactivate all plugins and using one of the default themes like Twenty Seventeen?
&lt;/p&gt;
&lt;p&gt;
I'm asking because the checkboxes work fine here on my sites and I want to make sure it's really a bug in WordPress itself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) updated</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 15:25:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842#comment:2/1486826727099946</guid>
      <description>&lt;p&gt;
I read that one before and went to common.js  and changed that line of code. Nothing happened.
&lt;/p&gt;
&lt;p&gt;
My problem is not with a table I created I am talking about the actual admin side of wordpress. The checkbox for select all does not work. in any area of the website backend.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39842#comment:1" title="Comment 1"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Possible duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Have you tried disabling all plugins to see if it still occurs? Does it work with the patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt; applied?
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 15:14:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:3/1486826053489077</guid>
      <description>&lt;p&gt;
@Mista-Flo  ok fine , just leave about the CDN , what about the files compression to speed up website :)
&lt;/p&gt;
&lt;p&gt;
you can say that google is also wrong :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) updated</title>
      
        <dc:creator>Mista-Flo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:36:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:2/1486823780863705</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello, thank you for your ticket.
&lt;/p&gt;
&lt;p&gt;
I don't understand where is it related to multisite.
&lt;/p&gt;
&lt;p&gt;
Performances that you are pointing is more for theme territory since it's about the frontend loading of the webite. By the way, all the possible enhancements for performances in the frontend is not only linked to WordPress, it's for all websites of the world, like static cache, compress images, concatenate and minify assets, etc, so I don't really understand what possible enhancements you have in mind.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:31:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845#comment:1/1486823475761602</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
we should in following
&lt;/p&gt;
&lt;p&gt;
Eliminate render-blocking JavaScript and CSS in above-the-fold content
Enable compression
Leverage browser caching
Minify CSS
Minify JavaScript
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>2017-02-11 (3).png attached to Ticket #39845</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(3).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(3).png/1486823277184331</guid>
      <description>&lt;p&gt;
The Following Error's
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>2017-02-11 (5).png attached to Ticket #39845</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:27:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(5).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(5).png/1486823254120010</guid>
      <description>&lt;p&gt;
Another Test
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>2017-02-11 (2).png attached to Ticket #39845</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:27:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(2).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39845/2017-02-11%20(2).png/1486823226518831</guid>
      <description>&lt;p&gt;
WEB SITE TEST's
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39845 (Fasting Wordpress) created</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 14:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39845</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39845/1486823170170525</guid>
      <description>&lt;p&gt;
i think we should work on CDN to make wordpress more faster , i have noticed most of the wordpress are not enough to compete the static website's .
&lt;/p&gt;
&lt;p&gt;
what i am think is :-
1) we can load some js and css file from the wordpress CDN server , this my help other website to load up faster .
&lt;/p&gt;
&lt;p&gt;
2) removing some un wanted js file's as show by google , in the given pics.
&lt;/p&gt;
&lt;p&gt;
3) compressing the java files to load up website faster .
&lt;/p&gt;
&lt;p&gt;
4) you can go and check any wordpress site
&lt;a class="ext-link" href="https://testmysite.thinkwithgoogle.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://testmysite.thinkwithgoogle.com/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
and you will find the same.
&lt;/p&gt;
&lt;p&gt;
i have done more than 10 test's with all different website's
but i find the same
&lt;/p&gt;
&lt;p&gt;
i think we should do something regarding this :)
&lt;/p&gt;
&lt;p&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26268 (Add UI to Category page to indicate default category) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 13:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26268#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26268#comment:38/1486821067092499</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
yes this can be something new for wordpress , we should work on this :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32816 (No or inadequate Custom Link URL validation) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 13:31:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32816#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32816#comment:20/1486819888662928</guid>
      <description>&lt;p&gt;
@celloexpressions  i totally agree you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) updated</title>
      
        <dc:creator>thomasoriis</dc:creator>

      <pubDate>Sat, 11 Feb 2017 13:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840#comment:3/1486818490831518</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39840#comment:1" title="Comment 1"&gt;lukecavanagh&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@thomasoriis
&lt;/p&gt;
&lt;p&gt;
A better place would be to post as an issue on GitHub.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@lukecavanagh and @SergeyBiryukov
&lt;/p&gt;
&lt;p&gt;
Hello Guys,
&lt;/p&gt;
&lt;p&gt;
Okay I just thought that you could force the plugin developers to change things like that.
&lt;/p&gt;
&lt;p&gt;
Sorry to take some of you important time : )
&lt;/p&gt;
&lt;p&gt;
Best Regard Thomas Riis
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31476 (Semantic elements for non-link links: /wp-admin/includes/widgets.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 11 Feb 2017 12:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31476#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31476#comment:24/1486815828199836</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1486815825003219"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>author-template.php.patch attached to Ticket #39844</title>
      
        <dc:creator>SirkoSchindler</dc:creator>

      <pubDate>Sat, 11 Feb 2017 11:17:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39844/author-template.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39844/author-template.php.patch/1486811861328943</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39844 (Don't return anchor tag if link is empty in get_the_author_posts_link()) created</title>
      
        <dc:creator>SirkoSchindler</dc:creator>

      <pubDate>Sat, 11 Feb 2017 11:17:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39844</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39844/1486811848453764</guid>
      <description>&lt;p&gt;
If get_author_posts_url() returns an empty value, currently get_the_author_posts_link() creates an anchor tag with am empty target. If shown on the page this results in a link to the current page, which is not what is expected from an author link.
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/author-template.php#L252"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/author-template.php#L252&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The attached patch changes this, so that if no link is given, just the author name is returned with no anchor tag surrounding.
This is in line with the respective code for get_comment_author_link()
&lt;/p&gt;
&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/comment-template.php#L216"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/comment-template.php#L216&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 11 Feb 2017 10:45:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:46/1486809914487137</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31476 (Semantic elements for non-link links: /wp-admin/includes/widgets.php) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 11 Feb 2017 10:44:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31476#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31476#comment:23/1486809890248619</guid>
      <description>&lt;p&gt;
Now that the &lt;code&gt;.button-link&lt;/code&gt; class has been updated in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40052" title="Buttons: Improve the `.button-link` CSS class for link-like buttons.
 ..."&gt;[40052]&lt;/a&gt; it's time to move on and refresh the patch :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>control_ubiquity.gif attached to Ticket #39843</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 09:36:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39843/control_ubiquity.gif</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39843/control_ubiquity.gif/1486805790264325</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39843 (Allow a control to be displayed in multiple sections) created</title>
      
        <dc:creator>nikeo</dc:creator>

      <pubDate>Sat, 11 Feb 2017 09:36:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39843</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39843/1486805775771810</guid>
      <description>&lt;p&gt;
With the current customize API, a control can be assigned to only one section.
&lt;/p&gt;
&lt;p&gt;
The customization experience could be improved if a control could show up in multiple sections. Typically when the customizer has a lot of settings in many sections, it would partially solve the problem to have to navigate back and forth in the sections and panels.
&lt;/p&gt;
&lt;p&gt;
Theme authors need of coursee to organize their controls the most convenient and logical way. But they are cases when a setting is global by nature, and can be optionally setup in various location of the page.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Use case with the social links icons :&lt;/strong&gt;
I have set up my social links in the Social Links section, which is located in the Global Settings panel. It make sense to define the social links in Global Settings panel because they can be displayed in several locations of the website : header, top of sidebars and footer. The visibility of the social links in the page is set with a checkbox control for each location. I uncheck the control "Social links in header".
&lt;/p&gt;
&lt;p&gt;
Later, I go back to the customizer, and now I want to design my header. To do that I navigate to the Header panel &amp;gt; Header Design section. I would make sense to also see there the "Social links in header" check box.
&lt;/p&gt;
&lt;p&gt;
This "ubiquity" behaviour of a control is illustrated in the gif. In the example, the control "Social links in header" has been assigned to both the Social Links and the Header Design section.
&lt;/p&gt;
&lt;p&gt;
From a code standpoint, a possible approach is to add a new argument when declaring the customizer control. It can be an array with the section id and the priority. In the customizer js control panel, the section expansion / collapse will be listened to, and will trigger a control move back and forth when relevant with api.control('control_id').section( 'new_section_id').
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #27127 (Improve plugin search on installed plugins page) updated</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 09:08:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27127#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27127#comment:10/1486804113954023</guid>
      <description>&lt;p&gt;
hi guys , i found some thing , i think we can work on this to resolve  this
&lt;/p&gt;
&lt;p&gt;
www.yourwebsite.xyz/wp-admin/plugins.php?s=&lt;strong&gt;search-here&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&amp;amp;plugin_status=all
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;repacing search-here :- by name of plugin to be found&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21034 (Flyout Menu on Backend doesn't Load Until Whole Page is Loaded) closed</title>
      
        <dc:creator>arvindsinghu</dc:creator>

      <pubDate>Sat, 11 Feb 2017 08:59:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21034#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21034#comment:6/1486803558287476</guid>
      <description>invalid: &lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21034" title="#21034: enhancement: Flyout Menu on Backend doesn't Load Until Whole Page is Loaded (closed: invalid)"&gt;prionkor&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
i Have work on my website to see your case and i found your problem use less because
&lt;/p&gt;
&lt;p&gt;
in my website i found that the   flyout menu load's the  first  ,
&lt;/p&gt;
&lt;p&gt;
just try to clean all your browser caches :)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 11 Feb 2017 08:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842#comment:1/1486800008837951</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Possible duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Have you tried disabling all plugins to see if it still occurs? Does it work with the patch from &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39739" title="#39739: defect (bug): Select All Checkbox Not Working (closed: fixed)"&gt;#39739&lt;/a&gt; applied?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39797 (Customizer Preview JS Object triggers preview pane refresh on ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 07:48:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39797#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39797#comment:1/1486799331872823</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@brianjfleming great catch. Please test &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39797/39797.0.diff" title="Attachment '39797.0.diff' in Ticket #39797"&gt;39797.0.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39797/39797.0.diff" title="Download"&gt;​&lt;/a&gt;. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39797.0.diff attached to Ticket #39797</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 07:48:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39797/39797.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39797/39797.0.diff/1486799280194987</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39631 (Pagination prepareLinkPreview() Changesets Customizer) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 07:11:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39631#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39631#comment:5/1486797102415716</guid>
      <description>invalid: &lt;p&gt;
@nwp_developer This doesn't seem to be a problem with the customizer but rather is a problem with how you are using &lt;code&gt;get_pagenum_link()&lt;/code&gt;. Since it returns a URL which may have a query component, then to me it seems you need to account for this in where you decide to inject &lt;code&gt;%_%&lt;/code&gt;. Here's one possible solution:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$base&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_pagenum_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parse_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$base&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'%_%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$base_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'scheme'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'://'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'host'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;trailingslashit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'query'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$base_url&lt;/span&gt; &lt;span class="o"&gt;.=&lt;/span&gt; &lt;span class="s1"&gt;'?'&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$parsed_base_url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'query'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;paginate_links&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'base'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$base_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'format'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'page/%#%'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) updated</title>
      
        <dc:creator>grapplerulrich</dc:creator>

      <pubDate>Sat, 11 Feb 2017 06:43:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831#comment:2/1486795423075107</guid>
      <description>&lt;p&gt;
This change makes sense. The theme review team is planning on having a new look at the theme tags again and it would be best for this tag to removed then as we make other changes then just this on it's own.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:21:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:34/1486786902935434</guid>
      <description>&lt;p&gt;
+1 for add to core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>CropperCapture[1].png attached to Ticket #39842</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:20:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39842/CropperCapture%5B1%5D.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39842/CropperCapture%5B1%5D.png/1486786825137659</guid>
      <description>&lt;p&gt;
screenshot 1
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>checkbox-wordpress (2).png attached to Ticket #39842</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:20:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39842/checkbox-wordpress%20(2).png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39842/checkbox-wordpress%20(2).png/1486786813135957</guid>
      <description>&lt;p&gt;
screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39842 (Select All checkbox not working) created</title>
      
        <dc:creator>starlyns</dc:creator>

      <pubDate>Sat, 11 Feb 2017 04:19:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39842</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39842/1486786792899204</guid>
      <description>&lt;p&gt;
I have checked all around the internet and forums and seen few people with the same problem but never resolved it.
&lt;/p&gt;
&lt;p&gt;
I have installed several WP sites and when I click in Select ALL in the administration side it does not work.
Does not work for pages, comments, plugins nothing.
&lt;/p&gt;
&lt;p&gt;
I have changed themes, I use the latest WP, I changed the PHP version, I really have no idea why the select all is not working.
&lt;/p&gt;
&lt;p&gt;
I use different browsers too.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://flic.kr/p/QJECZo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://flic.kr/p/QJECZo&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://flic.kr/p/RQe6bX"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://flic.kr/p/RQe6bX&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please help meeeeeeeeeeeeeeeeeeeeee
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39353 (Customize: menu widgets lose edit shortcuts when added/refreshed) reopened</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:35:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39353#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39353#comment:11/1486784103217087</guid>
      <description>&lt;p&gt;
Re-opening for consideration in 4.7.3.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Tickets #39101,​39353 batch updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=39101%2C39353</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=39101%2C39353/1486784051352459</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40055" title="Customize: Ensure edit shortcuts get re-created for nested partials ..."&gt;40055&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Ensure edit shortcuts get re-created for nested partials when a parent partial is refreshed.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes issue where the edit shortcut for a nav menu gets dropped when the containing Custom Menu widget is updated.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39101" title="#39101: defect (bug): Customize: edit shortcuts for custom menu widgets do not work (closed: fixed)"&gt;#39101&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39353" title="#39353: defect (bug): Customize: menu widgets lose edit shortcuts when added/refreshed (closed: fixed)"&gt;#39353&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [40055]: Customize: Ensure edit shortcuts get re-created for nested partials ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40055</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40055/1486784050855713</guid>
      <description>&lt;p&gt;
Customize: Ensure edit shortcuts get re-created for nested partials when a parent partial is refreshed.
&lt;/p&gt;
&lt;p&gt;
Fixes issue where the edit shortcut for a nav menu gets dropped when the containing Custom Menu widget is updated.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39101" title="#39101: defect (bug): Customize: edit shortcuts for custom menu widgets do not work (closed: fixed)"&gt;#39101&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39353" title="#39353: defect (bug): Customize: menu widgets lose edit shortcuts when added/refreshed (closed: fixed)"&gt;#39353&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39353 (Customize: menu widgets lose edit shortcuts when added/refreshed) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:21:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39353#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39353#comment:9/1486783319391701</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39752 (Customize: add a post editing flow) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 03:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39752#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39752#comment:8/1486782618400276</guid>
      <description>&lt;p&gt;
@mattwiebe I gave your plugin a spin. I like the low profile, but I'm nervous about users getting used to the post changes being non-previewable and not-bundled with the changeset, like they're already perhaps used to with the media library modal (see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37887" title="#37887: enhancement: Make attachments atomic until a Customizer session is published (new)"&gt;#37887&lt;/a&gt;), though many are likely unaware of the details for how everything in the customizer should only be previewed/staged before an explicit saving. Maybe there is a better way to communicate, “hey, you're stepping outside the customizer so you are no longer previewing changes.” If the UX can be polished to communicate this to users, then I would endorse this as it could surely be ready before the customizer infrastructure for modeling posts/postmeta.
&lt;/p&gt;
&lt;p&gt;
I opened a &lt;a class="ext-link" href="https://github.com/Automattic/customize-edit-post-flow/pull/1"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;PR&lt;/a&gt; with some enhancements, including:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Show link back to customizer before an update is made, if they decide no change needs to be made.
&lt;/li&gt;&lt;li&gt;Hide admin bar, admin menu, and admin footer in edit post screen when editing post opened from customizer. The intention is to keep the user from navigating away from editing the post. This could be extended further, such as for the revisions link. In fact, &lt;code&gt;sessionStorage&lt;/code&gt; could be used to store the &lt;code&gt;customizer_return&lt;/code&gt; and injected in more places via JS.
&lt;/li&gt;&lt;li&gt;Show &lt;code&gt;cursor:progress&lt;/code&gt; once clicking link in preview to show while pending changes are written to changeset.
&lt;/li&gt;&lt;li&gt;Add notice about post changes made not being previewable nor being part of customizations.
&lt;/li&gt;&lt;li&gt;Add support for edit post links added via infinite scroll.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30720 (In editor, add a button to refresh/invalidate (oEmbed) embeds cache) updated</title>
      
        <dc:creator>mcdonna</dc:creator>

      <pubDate>Sat, 11 Feb 2017 02:55:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30720#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30720#comment:13/1486781709546804</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30720#comment:1" title="Comment 1"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Reloading/refreshing an individual embed is interesting to me, although I'm not sure it's a huge issue across the board for most users. I'd probably look at doing it within your plugin for the time being. Open to thoughts, though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I just spent 30 minutes trying to figure out why a video still overwrote half the page after installing the iFramely plugin, which has always worked well in the past. Thankfully I found the answer in one of the many support answers they've given to other people with the same problem. I was able to go into the database and delete _oembed_ postmeta to force WP to re-generate the embed code.
&lt;/p&gt;
&lt;p&gt;
I really appreciate the efforts to find a solution! :)
&lt;/p&gt;
&lt;p&gt;
Donna
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 11 Feb 2017 00:30:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:33/1486773056732524</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21666#comment:29" title="Comment 29"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@westonruter — how much of the code from Customize Snapshots can be adapted here?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite a bit. Well, essentially this is a new view for the revisions. Whereas the Customize Snapshots plugin currently only shows the revisions in the context of the admin, the mocks here are for adding them to the customizer UI itself. There are REST API endpoints that expose the snapshots (changesets) data which we can request to then display in this new panel revisions view. The feature seems like a good one to build on top of Customize Snapshots as its feature plugin for prototyping prior to core merge.
&lt;/p&gt;
&lt;p&gt;
What follows is a bunch of technical details for how I think revisions could be implemented, but also some specifics on their behavior. There is overlap here with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/31089" title="#31089: enhancement: Customize: Add revisions for changesets (new)"&gt;#31089&lt;/a&gt;.
&lt;/p&gt;
&lt;h2 id="PreviewingaRevision"&gt;Previewing a Revision&lt;/h2&gt;
&lt;p&gt;
For implementing what happens when you click on a previous revision: to preview the revision all that is needed is to sync the settings into the preview to trigger the selective refresh and JS-applied instant previews, along with any full refreshes as needed. The controls in the customizer will then also be populated with the previous revision's values at this point.
&lt;/p&gt;
&lt;p&gt;
If there are any settings contained in the loaded revision that do not previously exist, then this will probably necessitate a full refresh of the preview after the revision's settings have been populated into the changeset, in order to reliably ensure that the settings are all constructed properly. Likewise, once the user has closed the revisions view, the customizer would need to do a full refresh so that the sections and controls can be properly initialized. I should hope this refresh behavior would be temporary as it is certainly possible for plugins to listen for dynamically-created settings and create any required sections and controls for them dynamically. We'd need to add support for this hot loading of settings to widgets and nav menus first to provide theme and plugin authors a reference for how to implement. All this being said, most themes and plugins wouldn't be dynamically adding and removing settings with corresponding sections and controls.
&lt;/p&gt;
&lt;h2 id="UndoandRedoButtons"&gt;Undo and Redo Buttons&lt;/h2&gt;
&lt;p&gt;
Whenever a change is made in the customizer, it would need to push onto some history stack which can then be traversed to undo and redo changes. Similar to the above with previewing revisions, this gets complicated when a settings gets added or removed (as in the case of creating/deleting a widget or nav menu item). If I remove a widget, then I'd expect clicking Undo to cause the widget control I just removed to restored. So it seems that as part of this we &lt;em&gt;would&lt;/em&gt; need to add core support for widgets, nav menu items, and nav menus to dynamically add/remove their corresponding sections and controls when their settings are added and removed, respectively.
&lt;/p&gt;
&lt;h2 id="RevisionsofaChangesetvsPublishedChangesetsasRevisions"&gt;Revisions of a Changeset vs Published Changesets as Revisions&lt;/h2&gt;
&lt;p&gt;
A changeset can actually go through multiple revisions in and of itself. This is separate from the “revisions” recorded by successive publishing of customization changes (each of which is a separate changeset). In the case of revisions &lt;em&gt;inside&lt;/em&gt; a changeset, consider where a user starts making changes and then saves a draft or sends the URL off for someone else to iterate on; each time a user saves a draft of the changeset, a new revision can be made. These revisions are for changes that haven't been published yet, whereas the contents of previously published changesets are. All of this to say, it seems like perhaps the revision list should be broken into two lists: the top list can be the revisions &lt;em&gt;inside&lt;/em&gt; the changeset, and the bottom subsequent list can be for previously published changes.
&lt;/p&gt;
&lt;h2 id="ChallengesofRevertingtoaPreviously-publishedChangeset"&gt;Challenges of Reverting to a Previously-published Changeset&lt;/h2&gt;
&lt;p&gt;
Reverting to a revision of a changeset is easier than reverting to a previously-published changeset. When reverting to a revision of the current changeset, all this means basically is to reset the settings to match the state of the changeset at that revision. However, reverting to a previously-published changeset is more complicated/interesting. Take this changelog:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;January 1st: User changes site title to “Foo”.
&lt;/li&gt;&lt;li&gt;January 2nd: User changes site tagline.
&lt;/li&gt;&lt;li&gt;January 3rd: User changes site title to “Bar”.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Now, if the user clicks the changeset revision for January 1st, my assumption is that this will restore the site title of “Foo”. However, will it also include a revert of the change made to the tagline on January 2nd? Each changeset only contains the settings that were modified, so as it stands right now we would not know what to revert the tagline to since it's previous value is not captured. Whenever a changeset is about to be published, we could capture the current value for each setting prior to saving. This would allow us to roll back all of the changes made to the site between two published changesets. The process would involve walking over the previous changesets to gather up a list of the previous values and merge them and apply them to the current changeset for previewing.
&lt;/p&gt;
&lt;p&gt;
Complication: What about when a user makes a change to the tagline &lt;em&gt;outside&lt;/em&gt; of the customizer? In that case the tagline would not be referenced in any changeset, and reverting to the changeset on the 1st would only rollback the site title. Would this be expected behavior?
&lt;/p&gt;
&lt;h2 id="InspectingRevisions"&gt;Inspecting Revisions&lt;/h2&gt;
&lt;p&gt;
In addition to seeing the date and author for a given revision, and in addition to previewing the changes included in the revision, it seems that a user would also want to see a list of the changes contained within the revision so they can see what the revision entails. In the Customize Snapshots plugin when viewing a revision in the WP admin the user can see a list of all of the settings included in the changeset along with their values. It's not the most user friendly since the setting IDs are used as well as the raw setting values (e.g. an attachment ID as opposed to an &lt;code&gt;img&lt;/code&gt; element). Alternatively to listing out all of the settings, there could instead be some listing of the &lt;em&gt;controls&lt;/em&gt; that the modified settings are associated with. The controls with dirty settings could also be highlighted in some way (which ties back to there possibly being some per-control revert button).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39055 (REST API: order is ignored when orderby is set to include) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 10 Feb 2017 23:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39055#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39055#comment:17/1486769095086219</guid>
      <description>&lt;p&gt;
I think we are getting close here 😅
&lt;/p&gt;
&lt;p&gt;
However, these tests don't match the expected behavior discussed earlier in the ticket, and they also fail on my WP install.  It looks like you still have &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39055/39055.diff" title="Attachment '39055.diff' in Ticket #39055"&gt;39055.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39055/39055.diff" title="Download"&gt;​&lt;/a&gt; from earlier in the thread applied to your WP checkout.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Are there any resources I might have missed for guidance on where to place tests, or is just a matter of figuring it out on a case by case basis?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not aware of any - I noticed on a closer look that everything in &lt;code&gt;search.php&lt;/code&gt; was testing the &lt;code&gt;search&lt;/code&gt; parameter, and &lt;code&gt;results.php&lt;/code&gt; contained more generic tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:42:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:8/1486766531366800</guid>
      <description>invalid: &lt;p&gt;
Thanks for the follow-up!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:36:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:7/1486766189470554</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I tested with a fresh install of 4.7.2 and don't see this problem. I had previously deactivated all my plugins except those required for authorization thinking this would eliminate any plugin related issues. I've had a couple of different membership plugins installed in the past and I'm guessing one of these left something residual in place.
&lt;/p&gt;
&lt;p&gt;
Thanks for all the help in getting this resolved!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39830 (Unable to detect REST/rest_no_route) updated</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:15:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39830#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39830#comment:2/1486764910332617</guid>
      <description>&lt;p&gt;
Thank you for your guidance.
&lt;/p&gt;
&lt;p&gt;
I've chosen &lt;code&gt;rest_post_dispatch&lt;/code&gt; for status code inspection.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:33/1486764789519420</guid>
      <description>&lt;p&gt;
Seems like a solid core feature for 4.8.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9757 (Allow Plugin/Theme updates from a uploaded .zip file.) updated</title>
      
        <dc:creator>nimmolo</dc:creator>

      <pubDate>Fri, 10 Feb 2017 22:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9757#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9757#comment:32/1486764343493524</guid>
      <description>&lt;p&gt;
+1 for add to core. The plugin mentioned by @bfintal works great, but this seems like a necessary core feature. Sites hosted on servers without FTP access are too much of a chore to update.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 21:47:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:6/1486763258824900</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39839#comment:5" title="Comment 5"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
From a quick glance, it seems that you might not be passing the nonce with the request: &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you don't pass the nonce, the request will be treated as an unauthenticated request, and will give you the behaviour you're seeing here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the tip. I am using OAuth and researched it quite heavily to get it to work properly with the REST API. I definitely hit this issue at one point, but am able to both create and update a post with the same authentication routine now so the authentication appears to be working at this point. Additionally, I see the correct $user-&amp;gt;ID being checked in has_cap for this request.
&lt;/p&gt;
&lt;p&gt;
I also tested with Basic Auth and see the same behavior. I'm testing with a fresh install of 4.7.2 now to see if an old plugin has left something residual in place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 21:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841#comment:3/1486760751845405</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39841#comment:2" title="Comment 2"&gt;lukecavanagh&lt;/a&gt;:
2.0, I think. Not sure when they disappeared :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:57:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:5/1486760222152957</guid>
      <description>&lt;p&gt;
From a quick glance, it seems that you might not be passing the nonce with the request: &lt;a class="ext-link" href="https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/rest-api/using-the-rest-api/authentication/#cookie-authentication&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
If you don't pass the nonce, the request will be treated as an unauthenticated request, and will give you the behaviour you're seeing here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:52:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841#comment:2/1486759971111009</guid>
      <description>&lt;p&gt;
@johnbillion
&lt;/p&gt;
&lt;p&gt;
Which version of WP had those button options in it?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39693 (Fix missing assignment of widgets on theme switch) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:38:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39693#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39693#comment:12/1486759125055484</guid>
      <description>&lt;p&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/27404#comment:52"&gt;Comment&lt;/a&gt; on &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/27404" title="#27404: feature request: Widget Customizer: Allow adding inactive widgets to widget areas (assigned)"&gt;#27404&lt;/a&gt; (Widget Customizer: Allow adding inactive widgets to widget areas):
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm going to suggest that widgets most commonly get moved to inactive widget area as the result of a theme switch (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;). It would be very useful if widgets that were made inactive as part of a theme switch could be grouped in a way to easily batch-add them to a sidebar in the new theme. By grouping them I don't mean widget persistent groups (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19912" title="#19912: feature request: Add Widget Groups and Locations (closed: maybelater)"&gt;#19912&lt;/a&gt;), but rather transient groupings that essentially are pulling the grouping of widgets from another theme's widget-sidebar assignments. Being able to easily and intuitively re-assign widgets from the previous theme's sidebars to the new theme's sidebars, maintaining their ordering, would be a huge.
&lt;/p&gt;
&lt;p&gt;
If the old theme has 3 sidebars whereas the new theme as 2 sidebars, note that this could mean that 2 groupings of inactive widgets could be added to one sidebar on the new theme. Two additional questions then come to mind: should the best-guess re-assignment of widgets from the old sidebar's theme to a sidebar in the new theme be eliminated unless the sidebar IDs are exact matches (e.g. &lt;code&gt;sidebar-1&lt;/code&gt;)? If not, then it is likely that a re-assignment of widgets in the new theme will be wrong and need to be re-assigned. In that case, there should have to be a way to bulk move all widgets from one sidebar to another.
&lt;/p&gt;
&lt;p&gt;
It may be that this theme-switch grouping is out of scope for this ticket and should instead be addressed as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27404 (Widget Customizer: Allow adding inactive widgets to widget areas) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27404#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27404#comment:52/1486758893701371</guid>
      <description>&lt;p&gt;
I'm going to suggest that widgets most commonly get moved to inactive widget area as the result of a theme switch (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;). It would be very useful if widgets that were made inactive as part of a theme switch could be grouped in a way to easily batch-add them to a sidebar in the new theme. By grouping them I don't mean widget persistent groups (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/19912" title="#19912: feature request: Add Widget Groups and Locations (closed: maybelater)"&gt;#19912&lt;/a&gt;), but rather transient groupings that essentially are pulling the grouping of widgets from another theme's widget-sidebar assignments. Being able to easily and intuitively re-assign widgets from the previous theme's sidebars to the new theme's sidebars, maintaining their ordering, would be a huge.
&lt;/p&gt;
&lt;p&gt;
If the old theme has 3 sidebars whereas the new theme as 2 sidebars, note that this could mean that 2 groupings of inactive widgets could be added to one sidebar on the new theme. Two additional questions then come to mind: should the best-guess re-assignment of widgets from the old sidebar's theme to a sidebar in the new theme be eliminated unless the sidebar IDs are exact matches (e.g. &lt;code&gt;sidebar-1&lt;/code&gt;)? If not, then it is likely that a re-assignment of widgets in the new theme will be wrong and need to be re-assigned. In that case, there should have to be a way to bulk move all widgets from one sidebar to another.
&lt;/p&gt;
&lt;p&gt;
It may be that this theme-switch grouping is out of scope for this ticket and should instead be addressed as part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39693" title="#39693: enhancement: Fix missing assignment of widgets on theme switch (closed: fixed)"&gt;#39693&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
/cc @melchoyce
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39296 (Create new dashicons (4.8)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:22:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39296#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39296#comment:3/1486758131692727</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #design-dashicons by empireoflight. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/design-dashicons/p1486758129000262"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38702 (REST API: Add accessor functions for post_status and post_parent) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:08:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38702#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38702#comment:2/1486757332757126</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The first thing to do is to replace any current usages of &lt;code&gt;$post-&amp;gt;post_status&lt;/code&gt; with simply &lt;code&gt;get_post_status( $post-&amp;gt;ID )&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://github.com/xwp/wordpress-develop/pull/214"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wordpress-develop/pull/214&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The lesser-important change to core is to handle permission checks for a post/page that has an &lt;code&gt;inherit&lt;/code&gt; status when the &lt;code&gt;post_parent&lt;/code&gt; itself is modified in the customized state. In this case, there needs to be filters applied on the &lt;code&gt;post_parent&lt;/code&gt; value itself. However, there is no &lt;code&gt;get_post_parent()&lt;/code&gt; function with any filters currently in core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39830 (Unable to detect REST/rest_no_route) closed</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Fri, 10 Feb 2017 20:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39830#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39830#comment:1/1486757316112930</guid>
      <description>wontfix: &lt;p&gt;
The REST API routing system is independent of &lt;code&gt;template_redirect&lt;/code&gt;, since it's not part of the templating system. This is by design. &lt;code&gt;rest_post_dispatch&lt;/code&gt; or &lt;code&gt;rest_pre_serve_request&lt;/code&gt; can be used to catch errors from the API.
&lt;/p&gt;
&lt;p&gt;
(It's also possible for 404 errors to be generated inside controllers, not just by the routing. For example, a request to a nonexistent post ID will throw a 404.)
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>back-in-the-day.png attached to Ticket #39841</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:57:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39841/back-in-the-day.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39841/back-in-the-day.png/1486756656809663</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:42:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:4/1486755730498689</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39839#comment:2" title="Comment 2"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
the meta capability of “read” (mapped from “read_post”) is never present in the user’s capabilities in my testing, failing every request to read a draft post via the REST API. “read” is also never present when accessing this draft post from the UI, but processing continues as expected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, &lt;code&gt;read&lt;/code&gt; is the only basic capability available to &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/schema.php?marks=672,697,713,721,727#L692"&gt;all built-in user roles&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.7.2/src/wp-admin/includes/schema.php#L692" title="Download"&gt;​&lt;/a&gt;, including Subscriber.
&lt;/p&gt;
&lt;p&gt;
The user in your testing appears to have some custom capabilities created by plugins. Does the issue still happen on a clean install?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'll test with a clean install this afternoon and update with the results. Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:40:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:3/1486755656243740</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39839#comment:1" title="Comment 1"&gt;jnylen0&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've tested this using a few different test users with roles &lt;code&gt;administrator&lt;/code&gt;, &lt;code&gt;author&lt;/code&gt;, and &lt;code&gt;contributor&lt;/code&gt;.  All permissions to read my own or another user's post behave as I would expect in both the API and in wp-admin.
&lt;/p&gt;
&lt;p&gt;
Are you sure you're logged in as the same user account in both wp-admin and the REST API?  I'd suggest visiting your user profile in wp-admin and doing a request for &lt;code&gt;/users/me?context=edit&lt;/code&gt;, and comparing the results.
&lt;/p&gt;
&lt;p&gt;
There could also be a misbehaving plugin causing this issue.  Have you tried from a fresh install of WP?
&lt;/p&gt;
&lt;p&gt;
For future reference, it's really helpful to provide links to places in the WP code, rather than just files and line numbers.  Line numbers will change over time, making the ticket information invalid, and it is much easier to follow the flow of a ticket if I don't have to stop and look up lots of different places in the code.  For example:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think both of these checks in the API are correct... if a user is trying to read a post, then we need to perform the appropriate capabilities check.
&lt;/p&gt;
&lt;p&gt;
Neither of the wp-admin capabilities checks you referenced (for example &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289&lt;/a&gt;) appear to be relevant to the core flow of editing a post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm definitely logged in to the same account (verified the ID internally). I'll test with a clean install of 4.7.2 this afternoon and post the results.
&lt;/p&gt;
&lt;p&gt;
Thanks for the quick response!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38073 (Deprecate and replace wp_reset_vars()) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:17:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38073#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38073#comment:6/1486754266307186</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by lukecavanagh. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1486754263013086"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:2/1486754255435460</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
the meta capability of “read” (mapped from “read_post”) is never present in the user’s capabilities in my testing, failing every request to read a draft post via the REST API. “read” is also never present when accessing this draft post from the UI, but processing continues as expected.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, &lt;code&gt;read&lt;/code&gt; is the only basic capability available to &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/schema.php?marks=672,697,713,721,727#L692"&gt;all built-in user roles&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/4.7.2/src/wp-admin/includes/schema.php#L692" title="Download"&gt;​&lt;/a&gt;, including Subscriber.
&lt;/p&gt;
&lt;p&gt;
The user in your testing appears to have some custom capabilities created by plugins. Does the issue still happen on a clean install?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 10 Feb 2017 19:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839#comment:1/1486753428159389</guid>
      <description>&lt;p&gt;
I've tested this using a few different test users with roles &lt;code&gt;administrator&lt;/code&gt;, &lt;code&gt;author&lt;/code&gt;, and &lt;code&gt;contributor&lt;/code&gt;.  All permissions to read my own or another user's post behave as I would expect in both the API and in wp-admin.
&lt;/p&gt;
&lt;p&gt;
Are you sure you're logged in as the same user account in both wp-admin and the REST API?  I'd suggest visiting your user profile in wp-admin and doing a request for &lt;code&gt;/users/me?context=edit&lt;/code&gt;, and comparing the results.
&lt;/p&gt;
&lt;p&gt;
There could also be a misbehaving plugin causing this issue.  Have you tried from a fresh install of WP?
&lt;/p&gt;
&lt;p&gt;
For future reference, it's really helpful to provide links to places in the WP code, rather than just files and line numbers.  Line numbers will change over time, making the ticket information invalid, and it is much easier to follow the flow of a ticket if I don't have to stop and look up lots of different places in the code.  For example:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php?marks=1274#L1256&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-includes/rest-api/class-wp-rest-server.php?marks=902#L894&lt;/a&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I think both of these checks in the API are correct... if a user is trying to read a post, then we need to perform the appropriate capabilities check.
&lt;/p&gt;
&lt;p&gt;
Neither of the wp-admin capabilities checks you referenced (for example &lt;a href="https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289"&gt;https://core.trac.wordpress.org/browser/tags/4.7.2/src/wp-admin/includes/post.php?marks=1309#L1289&lt;/a&gt;) appear to be relevant to the core flow of editing a post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:59:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841#comment:1/1486753151061912</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:56:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840#comment:2/1486752968455167</guid>
      <description>invalid: &lt;p&gt;
Hi @thomasoriis, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac instance is intended for bugs and enhancements in WordPress core. For plugin issues, please report them to the plugin authors.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Static.png attached to Ticket #39841</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39841/Static.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39841/Static.png/1486751937175364</guid>
      <description>&lt;p&gt;
Static
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Active.png attached to Ticket #39841</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39841/Active.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39841/Active.png/1486751926946266</guid>
      <description>&lt;p&gt;
Active
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39841 (Additional Post Button Options) created</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:38:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39841</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39841/1486751904849205</guid>
      <description>&lt;p&gt;
Turn "Update"/"Publish" into a button with a dropdown. So if a user selects say Update &amp;amp; Return it will redirect the user back to the posts admin screen. If a users selects the Update &amp;amp; Add New option then it would update that existing post, then redirect to a new posts screen or return to the post list screen instead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39814 (wp_usermeta uses umeta_id instead of meta_id) updated</title>
      
        <dc:creator>1naveengiri</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:35:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39814#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39814#comment:1/1486751749094745</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the point.
It should be &lt;code&gt;meta_id&lt;/code&gt; as we already following same name for all meta-data tables.
It should considered as Bug. even it is not any issue with functionality but still for standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39647 (Make media upload "HTTP error." more user-helpful) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39647#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39647#comment:5/1486751492233365</guid>
      <description>&lt;p&gt;
As noted in the Slack mention above, @joemcgill and I met about this ticket a bit at Loopconf regarding what would be necessary for the first steps here.
&lt;/p&gt;
&lt;p&gt;
They look something like:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Improve JS handling of http error codes and body, to provide more detailed error messages
&lt;/li&gt;&lt;li&gt;Save progress of meta/&lt;code&gt;multi_resize&lt;/code&gt; during creation of the intermediate images (with save basic meta before starting resizing process)
&lt;/li&gt;&lt;li&gt;Resume &lt;code&gt;multi_resize&lt;/code&gt; without re-uploading the file
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've got a pretty good idea of what the latter two will look like, but any insights of the JS handling -- in particular, why we're not surfacing any error details -- would be appreciated. I remember that there were technical challenges (rather than deciding the information was not helpful) involved in resolving this, but do not remember all of the background.
&lt;/p&gt;
&lt;p&gt;
I don't think it necessarily needs to happen in this order, as making it so that thumbnail resizing resumes in any form will help more users be successful in getting their images uploaded (and eventually not having the HTTP Error show up).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) updated</title>
      
        <dc:creator>lukecavanagh</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:27:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840#comment:1/1486751244472885</guid>
      <description>&lt;p&gt;
@thomasoriis
&lt;/p&gt;
&lt;p&gt;
A better place would be to post as an issue on GitHub.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce/issues"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce/issues&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:19:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827#comment:5/1486750744366787</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35827#comment:4" title="Comment 4"&gt;voldemortensen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've also been working through some concepts for this. I don't have a patch yet, but I'll take a look at @celloexpressions to get some ideas.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just wanted to follow up here — have you had a chance to review?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39647 (Make media upload "HTTP error." more user-helpful) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:12:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39647#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39647#comment:4/1486750342957752</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486750340001090"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35126-ie11-postbox-underline.patch attached to Ticket #35126</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:12:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35126/35126-ie11-postbox-underline.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35126/35126-ie11-postbox-underline.patch/1486750325512576</guid>
      <description>&lt;p&gt;
Fixes stray underline in IE11 on postbox toggle arrows
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35126 (Improvements for the new .button-link CSS class) updated</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:11:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35126#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35126#comment:45/1486750282460440</guid>
      <description>&lt;p&gt;
It's slightly weird that IE11 would render that underline.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;text-decoration&lt;/code&gt; is being set to none on the &lt;code&gt;:before&lt;/code&gt; with an !important and everything, but I guess having &lt;code&gt;.button-link&lt;/code&gt; set it to underline is enough for it to render it on the button's content.
&lt;/p&gt;
&lt;p&gt;
Setting &lt;code&gt;text-decoration&lt;/code&gt; to none on the button seems to fix it. I'll upload a patch for that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:08:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838#comment:3/1486750129091661</guid>
      <description>&lt;p&gt;
@SergeyBiryukov
&lt;/p&gt;
&lt;p&gt;
Yes, we need to maintain compatibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39516 (Media grid upload errors display below the grid.) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:08:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39516#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39516#comment:19/1486750103215108</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486750100001078"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39840 (Performance issue / Woocommerce) created</title>
      
        <dc:creator>thomasoriis</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:06:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39840</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39840/1486750008124113</guid>
      <description>&lt;p&gt;
I have noticed that woocommerce checks every single filter if it has a wrong name to raise a deprecated notice. They could handle this in a better way.
&lt;/p&gt;
&lt;p&gt;
I add the ticket with you som you can give Woothemes a guideline. With a small site it is no problem but when you have a lot of trafic it's bad. Maybe it only runs during debug (i am not sure). But if they just search for woocommerce if this sting is present they can start doing their check or leave early.
&lt;/p&gt;
&lt;p&gt;
I hope you will handle this matter with woocommerce.
&lt;/p&gt;
&lt;p&gt;
Best Regards Thomas Riis
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37140 (Rotating images doesn't adjust orientation for imagick) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 18:05:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37140#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37140#comment:29/1486749941532107</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-media by mike. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-media/p1486749938001075"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:57:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838#comment:2/1486749426957565</guid>
      <description>&lt;p&gt;
Using &lt;code&gt;wp_enqueue_script()&lt;/code&gt; for &lt;code&gt;html5.js&lt;/code&gt; was previously suggested in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30810" title="#30810: enhancement: Twenty Fifteen: Enqueue html5.js (closed: wontfix)"&gt;#30810&lt;/a&gt;, but that was before conditional comments for JS became available (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16024" title="#16024: enhancement: Conditional Comments for JS (closed: fixed)"&gt;#16024&lt;/a&gt;), so we could probably take another look.
&lt;/p&gt;
&lt;p&gt;
There are backwards compatibility concerns though, conditional comments for JS are only available in WordPress 4.2+, and Twenty Fifteen should remain compatible with WordPress 4.1.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39764 ('pre_get_site_by_path' filter is called before plugin API is loaded) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:50:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39764#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39764#comment:1/1486749049300404</guid>
      <description>invalid: &lt;p&gt;
This filter is one of a few which are applied very early on during the bootstrap process of WordPress Multisite, before the current site has been determined.
&lt;/p&gt;
&lt;p&gt;
This filter fires before plugins are loaded, but it can be used within a custom &lt;code&gt;wp-content/sunrise.php&lt;/code&gt; file. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'pre_get_site_by_path', function( $site, $domain, $path, $segments, $paths ) {
	return WP_Site::get_instance( rand( 1, 10 ) );
}, 10, 5 );
&lt;/pre&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:49:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838#comment:1/1486748977176483</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The "One thought on ..." issue should be resolved in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39660" title="#39660: enhancement: Missing singular placeholder, needed for some languages on comments.php (closed: fixed)"&gt;#39660&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39839 (Permissions processed differently between REST API and UI access ...) created</title>
      
        <dc:creator>reldev</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:44:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39839</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39839/1486748658548823</guid>
      <description>&lt;p&gt;
I’m testing the REST API and have discovered a problem with how the REST API processes permissions. I am able to create a post or page successfully as well as update a post or page successfully, however, attempting to retrieve a draft post or page I had previously created fails with a 403 status from line 902 in class-wp-rest-server.php.
&lt;/p&gt;
&lt;p&gt;
For reference, I’m testing urls of the form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/wp-json/wp/v2/posts/&amp;lt;id&amp;gt;
&lt;/pre&gt;&lt;p&gt;
and
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/wp-json/wp/v2/posts/&amp;lt;id&amp;gt;?context=edit
&lt;/pre&gt;&lt;p&gt;
The reason for the failure is because the function get_item_permissions_check in class-wp-rest-posts-controller.php is returning false to class-wp-rest-server.php at the invocation on line 897. if $request[‘context’] is "edit", get_item_permissions_check makes a call to check_update_permission on line 395 (which always succeeds). It then makes a call to check_read_permission on line 412 and returns the return value of that function call to class-wp-rest-server.php. This return value is always false, causing class-wp-rest-server.php to fail the request with 403 on line 902.
&lt;/p&gt;
&lt;p&gt;
check_read_permission makes a call to current_user_can on line 1274 to check for the read_post capability. This call eventually invokes the has_cap function in class-wp-user.php on line 715. “read_post” is mapped to a meta capability of “read” on line 723. In the subsequent check for “read” in all the user’s capabilities ($capabilities) on line 750, “read” is not found, therefore the function returns false to check_read_permission, which in turn, returns false to get_item_permissions and back to class-wp-rest-server.php as well.
&lt;/p&gt;
&lt;p&gt;
The problem appears not to be in the evaluation of the permission by check_read_permission and subsequently called routines, but in the handling of the returned value by class-wp-rest-server.php. I verified this by analyzing these permission checks when viewing or editing the same draft post from the UI.
&lt;/p&gt;
&lt;p&gt;
In this case, I logged in as the same user I’m testing with from my REST API test program and clicked on Edit for the post I’ve been testing with which evaluates to a a url of the form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/wp-admin/post.php?post=&amp;lt;id&amp;gt;&amp;amp;action=edit
&lt;/pre&gt;&lt;p&gt;
In this case, there are a couple of calls to current_user_can for “read_post” from various locations in the code. admin-bar.php on line 593 makes a call to current_user_can for “read_post” and the evaluation of the permission from this point forward is identical to the REST-based request. “read_post” is mapped to a meta capability of “read” which is still not found in the full list of the user’s capabilities (wp-user.php line 750). The difference between the REST-based request and the UI request is how this false is ultimately handled. In the REST case, this false causes the request to fail with a 403. In this UI case, this false is returned to admin-bar.php on line 593 but processing continues. Likewise wp-admin-&amp;gt;includes-&amp;gt;post.php on line 1309 calls current_user_can for “read_post” and the evaluation of the permission occurs the same. In neither case, however, does the fact the check for the “read_post” capability returns false impact processing.
&lt;/p&gt;
&lt;p&gt;
In another instance, I tested from the UI with a url of the form:
&lt;/p&gt;
&lt;pre class="wiki"&gt;http://&amp;lt;domain&amp;gt;/?p=&amp;lt;id&amp;gt;
&lt;/pre&gt;&lt;p&gt;
Using this approach to preview the draft post (while logged in as the same user), the “read_post” capability is never checked, only “edit_post” and “read” in various places. In each case, “read” meta maps to “read” which is again never found in the user’s capabilities, however, processing continues and the page displays as expected.
&lt;/p&gt;
&lt;p&gt;
For reference, in either the UI or API case, the user’s full set of capabilities is identical as determined in has_cap on line 743 in class-wp-user.php:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    [switch_themes] =&amp;gt; 1
    [edit_themes] =&amp;gt; 1
    [activate_plugins] =&amp;gt; 1
    [edit_plugins] =&amp;gt; 1
    [edit_users] =&amp;gt; 1
    [edit_files] =&amp;gt; 1
    [manage_options] =&amp;gt; 1
    [moderate_comments] =&amp;gt; 1
    [manage_categories] =&amp;gt; 1
    [manage_links] =&amp;gt; 1
    [upload_files] =&amp;gt; 1
    [import] =&amp;gt; 1
    [unfiltered_html] =&amp;gt; 1
    [edit_posts] =&amp;gt; 1
    [edit_others_posts] =&amp;gt; 1
    [edit_published_posts] =&amp;gt; 1
    [publish_posts] =&amp;gt; 1
    [edit_pages] =&amp;gt; 1
    [edit_others_pages] =&amp;gt; 1
    [edit_published_pages] =&amp;gt; 1
    [publish_pages] =&amp;gt; 1
    [delete_pages] =&amp;gt; 1
    [delete_others_pages] =&amp;gt; 1
    [delete_published_pages] =&amp;gt; 1
    [delete_posts] =&amp;gt; 1
    [delete_others_posts] =&amp;gt; 1
    [delete_published_posts] =&amp;gt; 1
    [delete_private_posts] =&amp;gt; 1
    [edit_private_posts] =&amp;gt; 1
    [read_private_posts] =&amp;gt; 1
    [delete_private_pages] =&amp;gt; 1
    [edit_private_pages] =&amp;gt; 1
    [read_private_pages] =&amp;gt; 1
    [delete_users] =&amp;gt; 1
    [create_users] =&amp;gt; 1
    [unfiltered_upload] =&amp;gt; 1
    [edit_dashboard] =&amp;gt; 1
    [update_plugins] =&amp;gt; 1
    [delete_plugins] =&amp;gt; 1
    [install_plugins] =&amp;gt; 1
    [update_themes] =&amp;gt; 1
    [install_themes] =&amp;gt; 1
    [update_core] =&amp;gt; 1
    [list_users] =&amp;gt; 1
    [remove_users] =&amp;gt; 1
    [promote_users] =&amp;gt; 1
    [edit_theme_options] =&amp;gt; 1
    [delete_themes] =&amp;gt; 1
    [export] =&amp;gt; 1
    [frm_view_forms] =&amp;gt; 1
    [frm_edit_forms] =&amp;gt; 1
    [frm_delete_forms] =&amp;gt; 1
    [frm_change_settings] =&amp;gt; 1
    [frm_view_entries] =&amp;gt; 1
    [frm_delete_entries] =&amp;gt; 1
    [email_users_notify] =&amp;gt; 1
    [email_single_user] =&amp;gt; 1
    [email_multiple_users] =&amp;gt; 1
    [email_user_groups] =&amp;gt; 1
    [administrator] =&amp;gt; 1
    [edit_wp-rest-api-logs] =&amp;gt; 1
    [delete_wp-rest-api-logs] =&amp;gt; 1
    [read_wp-rest-api-log] =&amp;gt; 1
    [edit_wp-rest-api-log] =&amp;gt; 1
    [delete_wp-rest-api-log] =&amp;gt; 1
&lt;/pre&gt;&lt;p&gt;
In summary, I’m not sure what the call to check_read_permission in class-wp-rest-posts-controller.php is intended to accomplish, but the meta capability of “read” (mapped from “read_post”) is never present in the user’s capabilities in my testing, failing every request to read a draft post via the REST API. “read” is also never present when accessing this draft post from the UI, but processing continues as expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>39838#.patch attached to Ticket #39838</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:35:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39838/39838%23.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39838/39838%23.patch/1486748121955082</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39838 (Twenty Fifteen: Use wp_enqueue_script() for html5.js) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:34:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39838</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39838/1486748053918942</guid>
      <description>&lt;p&gt;
twentyfifteen: script file should use wp_enqueue_script and translation issue.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36882 (Add a reusable admin CSS class for destructive actions) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:34:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36882#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36882#comment:3/1486748050589855</guid>
      <description>&lt;p&gt;
Thinking at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35126" title="#35126: enhancement: Improvements for the new .button-link CSS class (closed: fixed)"&gt;#35126&lt;/a&gt; where a specific class &lt;code&gt;.button-link-delete&lt;/code&gt; was added for this purpose, it just makes sense to me to do the same thing for links too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39264 (Add WP-API JS Client unit tests to core) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:18:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39264#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39264#comment:21/1486747138521180</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486747133004231"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39683 (REST API JS Client: Should enable connecting to multiple endpoints at ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:18:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39683#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39683#comment:4/1486747087451026</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by adamsilverstein. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486747084004229"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39837 (Random blank spaces appearing at end of lines) updated</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:17:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39837#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39837#comment:2/1486747072398112</guid>
      <description>&lt;p&gt;
From a friend who knows coding a bit more than I:
&lt;/p&gt;
&lt;p&gt;
He says that there are five spaces in the broken code that are actually non-breaking spaces (C2A0). They seem to have been inserted before and after HTML tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39561 (REST API JavaScript client: Correct name route discovery for custom ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:17:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39561#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39561#comment:5/1486747045184734</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by ocean90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1486747042004227"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>repaired.txt attached to Ticket #39837</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:14:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39837/repaired.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39837/repaired.txt/1486746895419611</guid>
      <description>&lt;p&gt;
A sample of repaired HTML code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>broken.txt attached to Ticket #39837</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:14:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39837/broken.txt</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39837/broken.txt/1486746875804187</guid>
      <description>&lt;p&gt;
A sample of broken HTML code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39837 (Random blank spaces appearing at end of lines) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:05:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39837#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39837#comment:1/1486746331154656</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>blank.png attached to Ticket #39837</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:04:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39837/blank.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39837/blank.png/1486746290627644</guid>
      <description>&lt;p&gt;
Comparison of the broken HTML code and the repaired HTML code
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39837 (Random blank spaces appearing at end of lines) created</title>
      
        <dc:creator>maliktunga</dc:creator>

      <pubDate>Fri, 10 Feb 2017 17:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39837</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39837/1486746260050748</guid>
      <description>&lt;p&gt;
So far, I have encountered this issue only with the visual editor.
&lt;/p&gt;
&lt;p&gt;
When I write in the visual editor, it often adds "ghost formatting" that makes it so that I get blank spaces a bit everywhere at the end of lines, while the next word(s) in the paragraph would totally fit in that blank space.
&lt;/p&gt;
&lt;p&gt;
I have no knowledge in technical terms, so I will define those random blank spaces as "ghost formatting", since it seems to be integrated in the HTML code, yet it's invisible in the HTML editor.
&lt;/p&gt;
&lt;p&gt;
I can easily find examples from my blog. However I am not sure that I can really share the broken HTML code, since in most text boxes the "ghost formatting" gets lost in the process...
&lt;/p&gt;
&lt;p&gt;
This is the broken HTML code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;La &amp;lt;em&amp;gt;Kompleta Gramatiko&amp;lt;/em&amp;gt; adaptis frazi ek verko qua esis obsoleta &amp;lt;em&amp;gt;de la komenco&amp;lt;/em&amp;gt;! Beaufront adaptis la paragrafo por la nova verbi «mixita», ma semblas, ke lu ankore nesavis pri &amp;lt;b&amp;gt;ind&amp;lt;/b&amp;gt;... Nam yen ke on ja trovis &amp;lt;b&amp;gt;honorinda&amp;lt;/b&amp;gt;, &amp;lt;b&amp;gt;ridinda&amp;lt;/b&amp;gt; e &amp;lt;b&amp;gt;shaminda&amp;lt;/b&amp;gt; en la &amp;lt;em&amp;gt;Dictionnaire français-international&amp;lt;/em&amp;gt; (1908)!
&lt;/pre&gt;&lt;p&gt;
This is the fixed HTML code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;La &amp;lt;em&amp;gt;Kompleta Gramatiko&amp;lt;/em&amp;gt; adaptis frazi ek verko qua esis obsoleta &amp;lt;em&amp;gt;de la komenco&amp;lt;/em&amp;gt;! Beaufront adaptis la paragrafo por la nova verbi «mixita», ma semblas, ke lu ankore nesavis pri &amp;lt;b&amp;gt;ind&amp;lt;/b&amp;gt;... Nam yen ke on ja trovis &amp;lt;b&amp;gt;honorinda&amp;lt;/b&amp;gt;, &amp;lt;b&amp;gt;ridinda&amp;lt;/b&amp;gt; e &amp;lt;b&amp;gt;shaminda&amp;lt;/b&amp;gt; en la &amp;lt;em&amp;gt;Dictionnaire français-international&amp;lt;/em&amp;gt; (1908)!
&lt;/pre&gt;&lt;p&gt;
Fixing it is simple: I copy the paragraph, paste it in a text box that doesn't support the "ghost formatting" (e.g. Chromium's address bar) then copy and paste it back into the HTML editor. Somehow, the blank spaces disappear. However, that workaround easily gets tedious since I have to do it every time...
&lt;/p&gt;
&lt;p&gt;
I attached a screenshot that shows how the two codes looks like on my blog and in the visual editor.
&lt;/p&gt;
&lt;p&gt;
I use Chromium 55.0.2883.87 Built on Ubuntu , running on elementary 0.4 (64-bit).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39836 (Display maximum file upload size on theme upload page) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39836#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39836#comment:1/1486745767356136</guid>
      <description>&lt;p&gt;
Previously: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/28171" title="#28171: defect (bug): Uploading themes over the PHP upload file size limit throws a non user ... (closed: worksforme)"&gt;#28171&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21666 (Customizer reset/undo/revert) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:51:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21666#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21666#comment:32/1486745489549697</guid>
      <description>&lt;p&gt;
@melchoyce I do. Lets get that happening early next week.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39836#.patch attached to Ticket #39836</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39836/39836%23.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39836/39836%23.patch/1486745336712816</guid>
      <description>&lt;p&gt;
Core side changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>screenshot.png attached to Ticket #39836</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39836/screenshot.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39836/screenshot.png/1486745261897475</guid>
      <description>&lt;p&gt;
Screenshot
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39836 (Display maximum file upload size on theme upload page) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:47:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39836</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39836/1486745229025008</guid>
      <description>&lt;p&gt;
When we click on 'Upload Theme' button, WordPress displays "If you have a theme in a .zip format, you may install it by uploading it here." message on /wp-admin/theme-install.php
&lt;/p&gt;
&lt;p&gt;
If we can displays maximum file size in this message, it will really help WordPress users. They will consider increasing upload file size in php.ini instead starting upload and displaying a message "Are you sure want to do that?" and if debug is true, they will also see error message.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36281 (Importer Fails to import menu items in PHP7) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:43:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36281#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36281#comment:7/1486745016501052</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1486745013013040"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39793 (Scrolling up in the sticky post text editor does not scroll the page ...) updated</title>
      
        <dc:creator>bhargavbhandari90</dc:creator>

      <pubDate>Fri, 10 Feb 2017 16:17:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39793#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39793#comment:1/1486743431462550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20943 (Paragraphs get removed in table cells when Visual editor is refreshed) updated</title>
      
        <dc:creator>DarcPress</dc:creator>

      <pubDate>Fri, 10 Feb 2017 15:27:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20943#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20943#comment:54/1486740425005676</guid>
      <description>&lt;p&gt;
Still bugged the same way as of today.
&lt;/p&gt;
&lt;p&gt;
This is especially annoying when using ACF (Advanced Custom Fields) because sometimes the ACF takes time to load the TinyMCE and when it does, it behaves like moving from Text to Visual.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Screenshot from 2017-02-10 20:16:21.png attached to Ticket #39835</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39835/Screenshot%20from%202017-02-10%2020%3A16%3A21.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39835/Screenshot%20from%202017-02-10%2020%3A16%3A21.png/1486738268982712</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #16841 (Manually created user roles not showing in author dropdown regardless ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:36:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16841#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16841#comment:40/1486737399904544</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Just stumbled upon this whole user level handling now. Fun. I'll try to find some time to look into it properly.
&lt;/p&gt;
&lt;p&gt;
Even just using a role query in &lt;code&gt;post_author_meta_box()&lt;/code&gt; would already be a huge improvement, but I can see the benefits of capability queries.
&lt;/p&gt;
&lt;p&gt;
By the way, for anyone using the Members plugin, &lt;code&gt;add_filter( 'members_remove_old_levels', '__return_false' );&lt;/code&gt; should help there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38186 (Database Collations Bypassed by determine_charset() in wp-db.php) updated</title>
      
        <dc:creator>cimatti</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:32:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38186#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38186#comment:2/1486737175970583</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think this is a deep issue with many potential consequence, because even if WordPress changed the default result of $wpdb-&amp;gt;charset and $wpdb-&amp;gt;collate , charset and collations in databases of already existings installations are not updated.
&lt;/p&gt;
&lt;p&gt;
Even plugins are involved, because they should use $wpdb-&amp;gt;charset and $wpdb-&amp;gt;collate to create tables. So plugins that created tables with collation utf8mb4_unicode_ci with an older WordPress version, now may create new tables and columns with collation utf8mb4_unicode_520_ci
&lt;/p&gt;
&lt;p&gt;
I already noticed in an old WordPress installation that wordpress columns remained on collation utf8mb4_unicode_ci but a plugin created a table with utf8mb4_unicode_520_ci. I have a plugin that has to create a temporary table and join it to existing tables to do a task. This stopped to work because old tables uses utf8mb4_unicode_ci and the new temporary table uses utf8mb4_unicode_520_ci
&lt;/p&gt;
&lt;p&gt;
So the big problem is that if you make a join or an operation between two columns with collation utf8mb4_unicode_ci and utf8mb4_unicode_520_ci the query fails
&lt;/p&gt;
&lt;p&gt;
The passage from utf8 to utf8mb4 could be problematic, because MySQL normally has a limit of 1000 byte for keys, so with utf8 the key can't hold more than 333 characters, and with utf8mb4 the limit is 250 and if you have a key valid with utf8 it may be too long with utf8mb4
&lt;/p&gt;
&lt;p&gt;
Changing a collation may be problematic too if you change it on a column with an unique key, because values that were considered different before, may be considered equal with the new collation
&lt;/p&gt;
&lt;p&gt;
I propose to follow this path:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;default charset and collation should be chosen during installation, and you should stick with that
&lt;/li&gt;&lt;li&gt;you should define a standard procedure to change collation, and plugins should implement a callback to change it in their tables when called
&lt;/li&gt;&lt;li&gt;anyway migration to another collation should be discouraged, and if necessary it should be tested before on a copy of the site, and in any case a backup is strongly suggested
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>functions.php.patch attached to Ticket #39831</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39831/functions.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39831/functions.php.patch/1486736972556745</guid>
      <description>&lt;p&gt;
meta
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39296 (Create new dashicons (4.8)) updated</title>
      
        <dc:creator>EmpireOfLight</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:29:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39296#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39296#comment:2/1486736962682344</guid>
      <description>&lt;p&gt;
I used the icon posted here:
&lt;a class="ext-link" href="https://github.com/WordPress/dashicons/issues/152"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/issues/152&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
it's in the latest vs. of Dashicons now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24985 (Custom roles missing from post author dropdown) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:25:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24985#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24985#comment:5/1486736728393618</guid>
      <description>&lt;p&gt;
For anyone stumbling upon this ticket, using &lt;code&gt;add_filter( 'members_remove_old_levels', '__return_false' );&lt;/code&gt; should do the trick when using the Members plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36574 (Redesign term pages) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:18:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36574#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36574#comment:11/1486736307075108</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
There's a lot of data from the old one that seems to be missing.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36574/edit-term-new.png" title="Attachment 'edit-term-new.png' in Ticket #36574"&gt;edit-term-new.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36574/edit-term-new.png" title="Download"&gt;​&lt;/a&gt; looks good to me. I don't see anything missing there, except field descriptions maybe, but I think they belong more in the Help tab anyway, for consistency with other screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) updated</title>
      
        <dc:creator>yahil</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:15:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834#comment:3/1486736142958046</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
Not able to reproduce, please check your console, error logs otherways Once disable all plugins and try to delete.
&lt;/p&gt;
&lt;p&gt;
Yahil :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39835 (Category slug could be auto-generated with ability to update manually) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39835#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39835#comment:2/1486735989478589</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39835 (Category slug could be auto-generated with ability to update manually) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39835#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39835#comment:1/1486735940607857</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36574" title="#36574: enhancement: Redesign term pages (new)"&gt;#36574&lt;/a&gt;. The screenshots there suggest this possibility.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39835 (Category slug could be auto-generated with ability to update manually) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:10:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39835</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39835/1486735859918507</guid>
      <description>&lt;p&gt;
Like adding a post, when category is created from Post &amp;gt; Category, if a default slug could be auto generated from title here as well with the ability to edit that would be time saving and helpful.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834#comment:2/1486735766210507</guid>
      <description>&lt;p&gt;
Are there any warnings or notices in server error logs?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 14:02:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834#comment:1/1486735375842696</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hey there, thanks for your report and welcome!
&lt;/p&gt;
&lt;p&gt;
I cannot reproduce this locally. Does this still happen with all plugins disabled'
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39834 (Plugin Deletion does not auto refresh Plugin list in admin UI) created</title>
      
        <dc:creator>subrataemfluence</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:58:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39834</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39834/1486735091699232</guid>
      <description>&lt;p&gt;
When I delete a plugin after deactivating it the on screen message halts at "Deleting...". It does not auto remove the plugin row from the DOM.
&lt;/p&gt;
&lt;p&gt;
This started after I upgraded to 4.7.2. I tested with two separate plugins and got the same result. Cross checked by reinstalling and deleting them from different browsers to make sure it is not a browser specific JavaScript issue.
&lt;/p&gt;
&lt;p&gt;
Refreshing page removes the entry though.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39824 (Gallery doesn't show images being uploaded) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39824#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39824#comment:2/1486734539044391</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/39824/39824.diff" title="Attachment '39824.diff' in Ticket #39824"&gt;39824.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/39824/39824.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Media: Disable the &lt;code&gt;Insert/Update Gallery&lt;/code&gt; button while uploads are in progress.
&lt;/p&gt;
&lt;p&gt;
Is there a better approach to resolving this issue?
&lt;/p&gt;
&lt;p&gt;
@gonom9 can you give this a test and see if it resolves the issue for you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39824.diff attached to Ticket #39824</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39824/39824.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39824/39824.diff/1486734204767502</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39824 (Gallery doesn't show images being uploaded) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:35:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39824#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39824#comment:1/1486733711605547</guid>
      <description>&lt;p&gt;
@gonom9 thanks for the bug report.
&lt;/p&gt;
&lt;p&gt;
I verified this issue and captured a screencast to demonstrate the issue: &lt;a class="ext-link" href="https://cl.ly/3F0s1y0j021h"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://cl.ly/3F0s1y0j021h&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I have a potential solution I will upload shortly that disables the insert gallery button when you are in the process of uploading videos. I'm not certain this is the best approach, but it does prevent you from creating the broken condition you noted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>ivantipov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:32:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:5/1486733521447242</guid>
      <description>&lt;p&gt;
SEO would be an issue as we have legacy URL's already indexed, which had the canonicals set to multiple dashes. Not setting the redirects would create a mismatch, and setting old URL's in _wp_old_slug metas won't redirect them (since it accepts multiple dashes), so the only solution is setting up custom redirects, which I'd ideally like to avoid to prevent management/performance overhead.
&lt;/p&gt;
&lt;p&gt;
@SergeyBiryukov Thanks, couldn't find it via search.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14773 (Error in slug parsing leads to unlimited URLs for the same article = ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:17:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14773#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14773#comment:22/1486732650901584</guid>
      <description>&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/17653" title="#17653: enhancement: Canonical Redirect when space(s) are used instead of hyphens when ... (accepted)"&gt;#17653&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17653 (Canonical Redirect when space(s) are used instead of hyphens when ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:17:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17653#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17653#comment:12/1486732646703506</guid>
      <description>&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14773" title="#14773: defect (bug): Error in slug parsing leads to unlimited URLs for the same article = ... (reviewing)"&gt;#14773&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #14773,​39833 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:16:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=14773%2C39833</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=14773%2C39833/1486732601650472</guid>
      <description>duplicate: &lt;p&gt;
Hi @ivantipov, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/14773" title="#14773: defect (bug): Error in slug parsing leads to unlimited URLs for the same article = ... (reviewing)"&gt;#14773&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:15:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:3/1486732535629550</guid>
      <description>&lt;p&gt;
@swissspidy My misunderstanding. Seems it is an issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 13:10:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831#comment:1/1486732242371382</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33407" title="#33407: enhancement: Theme tags overhaul (closed: fixed)"&gt;#33407&lt;/a&gt;, &lt;a class="ext-link" href="https://meta.trac.wordpress.org//intertrac/ticket%3A1187" title="ticket:1187 in Making WordPress.org Trac"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;#meta1187&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:44:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:2/1486730686679390</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
SEO isn't a problem because of &lt;code&gt;&amp;lt;link rel="canonical"&lt;/code&gt; tags. Google will see it as 1 URL.
&lt;/p&gt;
&lt;p&gt;
@rinkuyadav999 The plugin is irrelevant.
&lt;/p&gt;
&lt;p&gt;
To reproduce:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Create a new post with title "Foo Bar". The slug will be "foo-bar"
&lt;/li&gt;&lt;li&gt;Visit &lt;code&gt;example.com/foo----bar/&lt;/code&gt;
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39832 (WooCommerce - Australia Post Shipping Calculator Help) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:43:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39832#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39832#comment:2/1486730613222113</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) updated</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:43:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833#comment:1/1486730585763804</guid>
      <description>&lt;p&gt;
Hi @ivantipov
&lt;/p&gt;
&lt;p&gt;
Which plugin are you using to migrating posts from another CMS ?
&lt;/p&gt;
&lt;p&gt;
Please provide more description.
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39833 (WP accepts multiple hyphens in URL's without redirecting) created</title>
      
        <dc:creator>ivantipov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39833</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39833/1486730311404417</guid>
      <description>&lt;p&gt;
This may be a feature, but there's something we've observed when migrating posts from another CMS - WordPress seems to accept URL's with multiple hyphens without redirecting them. Here's an example:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.com/2017/02/09/get-blog-goes-open-source/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.com/2017/02/09/get-blog-goes-open-source/&lt;/a&gt;
&lt;a class="ext-link" href="https://developer.wordpress.com/2017/02/09/get-blog-goes-open-----source/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.com/2017/02/09/get-blog-goes-open-----source/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This poses potential SEO problems as some of our indexed URL's will have multiple dashes and the internal WP links will be sanitized to single. We can set up redirects but I thought I'd flag it with you since this seems to be an error.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39832 (WooCommerce - Australia Post Shipping Calculator Help) closed</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 12:37:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39832#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39832#comment:1/1486730239797951</guid>
      <description>invalid: &lt;p&gt;
Hi @abhinavahuja35
&lt;/p&gt;
&lt;p&gt;
Seems it is related to woocommerce plugin. it is not part of core WordPress so you can ask here: &lt;a class="ext-link" href="https://github.com/woocommerce/woocommerce"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/woocommerce/woocommerce&lt;/a&gt; or &lt;a class="ext-link" href="https://wordpress.org/support/plugin/woocommerce"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/plugin/woocommerce&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39832 (WooCommerce - Australia Post Shipping Calculator Help) created</title>
      
        <dc:creator>abhinavahuja35</dc:creator>

      <pubDate>Fri, 10 Feb 2017 10:24:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39832</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39832/1486722247982223</guid>
      <description>&lt;p&gt;
Dear PAC User,
&lt;/p&gt;
&lt;p&gt;
As noted in our Postage Assessment Calculator (PAC) update in April 2016, we’ve now migrated the PAC API to a new host URL: &lt;a class="ext-link" href="https://digitalapi.auspost.com.au"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://digitalapi.auspost.com.au&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Next, we’re going to decommission the old PAC API URL: &lt;a class="ext-link" href="https://auspost.com.au/api"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://auspost.com.au/api&lt;/a&gt;
What you should do
Please update your websites and applications and migrate to the new URL as soon as possible. You can test the new URL directly at &lt;a class="ext-link" href="https://digitalapi.auspost.com.au"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://digitalapi.auspost.com.au&lt;/a&gt;.
What to expect
How you use the API won’t change. Your existing PAC API key, all of the API endpoints and the Service Codes will be the same. The API is fully documented on the Developer Centre.
Decommission date
We plan to decommission the old link by the end of 2016. We’ll monitor usage of the new and old URLs and will keep you updated on the final decommission date.
&lt;/p&gt;
&lt;p&gt;
I got this mail what should i do.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36882 (Add a reusable admin CSS class for destructive actions) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36882#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36882#comment:2/1486719829279706</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35126" title="#35126: enhancement: Improvements for the new .button-link CSS class (closed: fixed)"&gt;#35126&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>39831#.patch attached to Ticket #39831</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:26:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39831/39831%23.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39831/39831%23.patch/1486718810238697</guid>
      <description>&lt;p&gt;
Core side changes
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39831 (Theme Tag Translation Ready) created</title>
      
        <dc:creator>rinkuyadav999</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39831/1486718709421037</guid>
      <description>&lt;p&gt;
As i read, All theme text strings are to be translatable. &amp;gt; &lt;a class="ext-link" href="https://make.wordpress.org/themes/handbook/review/required/#language"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.wordpress.org/themes/handbook/review/required/#language&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In that case, seems it is compulsory and there is not any use of 'translation-ready' theme tag. Because all themes on directory should be translation ready. if we apply filter with 'translation-ready' checkbox, it will return all themes.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39830 (Unable to detect REST/rest_no_route) created</title>
      
        <dc:creator>szepe.viktor</dc:creator>

      <pubDate>Fri, 10 Feb 2017 09:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39830</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39830/1486717340131813</guid>
      <description>&lt;p&gt;
AFAIK dispatch() in WP_REST_Server replies &lt;code&gt;rest_no_route&lt;/code&gt; with HTTP status code 404 &lt;strong&gt;on its own&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
There is no way to detect a HTTP/404 which is elemental for my WAF
&lt;a class="ext-link" href="https://github.com/szepeviktor/wordpress-fail2ban/blob/master/mu-plugin/wp-fail2ban-mu-instant.php#L138-L140"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/szepeviktor/wordpress-fail2ban/blob/master/mu-plugin/wp-fail2ban-mu-instant.php#L138-L140&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please advise.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>password_version_4.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:59:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_4.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_4.JPG/1486713555367504</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>password_version_3.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:59:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_3.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_3.JPG/1486713545551117</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>password_version_2.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:58:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_2.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_2.JPG/1486713532596252</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>password_version_1.JPG attached to Ticket #39817</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39817/password_version_1.JPG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39817/password_version_1.JPG/1486713521992859</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39817 (Confusing password strength behavior) reopened</title>
      
        <dc:creator>mgriesde</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:56:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39817#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39817#comment:4/1486713366549549</guid>
      <description>&lt;p&gt;
Hi all,
&lt;/p&gt;
&lt;p&gt;
thanks for your investigation. I've just set up a new WordPress installation by my hoster. It's clean. No lifterLMS, just some pre-installed plugins. Just "Limit Login Attempts" is activated.
&lt;/p&gt;
&lt;p&gt;
When a directly administer a user in the core WordPress UI then I still get the same strange behavior. See attached screen shots.
&lt;/p&gt;
&lt;p&gt;
So for me it seems a "problem" of WordPress core. Please have a look.
&lt;/p&gt;
&lt;p&gt;
Kind regards
Matthias
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #38712 (Button "Choose from the most used tags" is centerd) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:48:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38712#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38712#comment:7/1486712903327943</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38712 (Button "Choose from the most used tags" is centerd) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Fri, 10 Feb 2017 07:48:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38712#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38712#comment:6/1486712894876916</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>skarabeq</dc:creator>

      <pubDate>Fri, 10 Feb 2017 06:43:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:7/1486709025009149</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39466.patch attached to Ticket #39466</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:44:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39466/39466.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39466/39466.patch/1486705498058134</guid>
      <description>&lt;p&gt;
Fix for this ticket
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>dhanendran</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:44:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:11/1486705457966375</guid>
      <description>&lt;p&gt;
@rachelbaker @jnylen0 Thanks for your input.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Status has a small set of possible values that can be filtered publicly, so this parameter is effectively already public (exposing it provides no new information that can't already be obtained elsewhere).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes I do agree with this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39829 (Missing Filter before user is created within "wp_insert_user" function) updated</title>
      
        <dc:creator>jaschaio</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:25:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39829#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39829#comment:2/1486704319015007</guid>
      <description>&lt;p&gt;
Hey @SergeyBiryukov, thanks for the fast reply. I have seen the other filters, but there is still no filter for the user &lt;code&gt;ID&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
As I explained: Within the &lt;code&gt;wp_insert_post_data&lt;/code&gt; function you have the ability to filter through all the &lt;code&gt;$data&lt;/code&gt; array. That means that you can modify the &lt;code&gt;$data[ID]&lt;/code&gt; and assign a different one before the post gets actually inserted into the database.
&lt;/p&gt;
&lt;p&gt;
Example:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;/**
 * Filter to use random 6 digit number as post ID
 **/
function create_random_unique_id( $data, $postarr ) {
    // Check if we are updating an existing post or importing with a suggested post ID
    if ( ! empty( $postarr['ID'] ) || ! isset( $postarr['import_id'] ) ) {
        return $data;
    } else {
        // Get Wordpress Database
        global $wpdb;
        // Create random 6 digit number
        $random   = substr( rand() * 900000 + 100000, 0, 6 );
        // Check if ID is unique in database
        while ( $wpdb-&amp;gt;get_var( $wpdb-&amp;gt;prepare("SELECT ID FROM $wpdb-&amp;gt;posts WHERE ID = %d", $random ) ) ) {
            // Generate new random ID
            $random   = substr( rand() * 900000 + 100000, 0, 8 );
        }
        // Assign new post id random number
        $data['ID'] = $random;
        return $data;
    }
}
add_action( 'wp_insert_post_data', 'create_random_unique_id', 10, 2 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
The &lt;code&gt;wp_insert_user&lt;/code&gt; function seems to work different, as it inserts the user first into the database based on the nickname (and not like the post based on the ID) and than works with the ID returned by the database going forward. Meaning that I can't hook in anywhere to change the ID of the to be created user. The only thing I can do is updating the database after the user is created with the &lt;code&gt;user_register&lt;/code&gt; action. Here is an example for that:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;function create_random_unique_user_id( $user_id ) {
    // Get global Wordpress Database Object
    global $wpdb;
    // Get newly created user ID
    $user_object = get_user_by( 'id', $user_id );
    // Create random 6 digit number
    $random   = substr( rand() * 900000 + 100000, 0, 6 );
    // Check if ID is unique in database
    while ( $wpdb-&amp;gt;get_var( $wpdb-&amp;gt;prepare("SELECT ID FROM $wpdb-&amp;gt;users WHERE ID = %d", $random ) ) ) {
        // Generate new random ID
        $random   = substr( rand() * 900000 + 100000, 0, 8 );
    }
    // Update all tables with new user ID
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;users, array( 'ID' =&amp;gt; $random ), array( 'ID' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;posts, array( 'ID' =&amp;gt; $random ), array( 'post_author' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;usermeta, array( 'ID' =&amp;gt; $random ), array( 'user_id' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;comments, array( 'ID' =&amp;gt; $random ), array( 'user_id' =&amp;gt; $user_id ) );
    $wpdb-&amp;gt;update( $wpdb-&amp;gt;links, array( 'ID' =&amp;gt; $random ), array( 'link_owner' =&amp;gt; $user_id ) );
}
add_action( 'user_register', 'create_random_unique_user_id', 10, 1 );
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
But this is problematic as the &lt;code&gt;user_id&lt;/code&gt; returned by &lt;code&gt;wp_insert_user&lt;/code&gt; is still the old one. As such other functions who depend on the return value of &lt;code&gt;wp_insert_user&lt;/code&gt; fail.
&lt;/p&gt;
&lt;p&gt;
I just wondered why there are filters available for every other field of the user, but no one for the ID. Especially if its possible within the "wp_insert_post_data" function. These two should work similar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39466 (Get list of post API request missing status) updated</title>
      
        <dc:creator>jnylen0</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39466#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39466#comment:10/1486703339990618</guid>
      <description>&lt;p&gt;
Status has a small set of possible values that can be filtered publicly, so this parameter is effectively already public (exposing it provides no new information that can't already be obtained elsewhere).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38323 (Reconsider $object_subtype handling in `register_meta()`) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:06:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38323#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38323#comment:18/1486703167418338</guid>
      <description>&lt;p&gt;
Just wanted to note that the Customize Posts plugin also wrestled with the problem of registering meta specifically to a dedicated post type. We came up with a &lt;code&gt;register_post_type_meta&lt;/code&gt; method which takes three arguments: &lt;code&gt;$post_type&lt;/code&gt;, &lt;code&gt;$meta_key&lt;/code&gt;, &lt;code&gt;$setting_args&lt;/code&gt;. The setting args includes the sanitize callback, default value, required capability, single vs multi, and other customizer-specific properties. Here is the method definition: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/blob/f7b62df6744eb3eb54eb1aec9d877d51ee94cfff/php/class-wp-customize-posts.php#L230-L274"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts/blob/f7b62df6744eb3eb54eb1aec9d877d51ee94cfff/php/class-wp-customize-posts.php#L230-L274&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Hopefully this provides helpful real world usage patterns for an enhanced &lt;code&gt;register_meta()&lt;/code&gt;, specifically here with the needs of the customizer in view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39815 (Format for the default image of WP_Customize_Media_Control and ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:00:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39815#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39815#comment:3/1486702842614628</guid>
      <description>wontfix: &lt;p&gt;
I think it might be rather a wontfix. While it would be possible to re-architect a setting to represent a URL or an ID, there could be a lot of problems for backwards compatibility for existing code that only expect attachment IDs.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #39829 (Missing Filter before user is created within "wp_insert_user" function) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 05:00:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39829#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39829#comment:1/1486702830794527</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jaschaio, welcome to WordPress Trac! Thanks for the ticket.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is a action called "user_register" that lets me do something once the user is created, but it doesn't let me modify the actual data the "wp_insert_user" function returns.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;code&gt;wp_insert_user()&lt;/code&gt; does not return user data though, just user ID on success or a &lt;code&gt;WP_Error&lt;/code&gt; object on failure.
&lt;/p&gt;
&lt;p&gt;
There are filters for individual fields and metadata, any reason they don't work for your use case?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;pre_user_login&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_nicename&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_url&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_email&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_nickname&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_first_name&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_last_name&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_display_name&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;pre_user_description&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;insert_user_meta&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39815 (Format for the default image of WP_Customize_Media_Control and ...) updated</title>
      
        <dc:creator>srikat</dc:creator>

      <pubDate>Fri, 10 Feb 2017 04:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39815#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39815#comment:2/1486702373549740</guid>
      <description>&lt;p&gt;
@westonruter Thanks, makes sense.
&lt;/p&gt;
&lt;p&gt;
Shall I set 'resolve as' of this ticket to 'invalid'? (I am new to trac)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39815 (Format for the default image of WP_Customize_Media_Control and ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 04:43:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39815#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39815#comment:1/1486701790045098</guid>
      <description>&lt;p&gt;
@srikat I don't think that it's feasible to supply a default image specifically in this way, given that the setting is expecting to model an integer attachment ID. The closest thing in core to what you want to do here I think is actually something seen in the starter content feature added in 4.7, where an image can be loaded into the customized state (changeset) and uploaded into the media library as an &lt;code&gt;attachment&lt;/code&gt; with the &lt;code&gt;auto-draft&lt;/code&gt; status. In this way, the attachment can be used as the default value for a given setting, but only after first uploading the image into the media library in that transitory state.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39829 (Missing Filter before user is created within "wp_insert_user" function) created</title>
      
        <dc:creator>jaschaio</dc:creator>

      <pubDate>Fri, 10 Feb 2017 04:21:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39829</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39829/1486700503458202</guid>
      <description>&lt;p&gt;
The "wp_insert_post" function has a filter called "wp_insert_post_data" that filters the post data right before the post is created.
&lt;/p&gt;
&lt;p&gt;
For me the "wp_insert_user" function should have as well a filter right before the user is created in the database.
&lt;/p&gt;
&lt;p&gt;
Unfortunately it doesn't exists. There is a action called "user_register" that lets me do something once the user is created, but it doesn't let me modify the actual data the "wp_insert_user" function returns.
&lt;/p&gt;
&lt;p&gt;
Background:
&lt;/p&gt;
&lt;p&gt;
I use the "wp_insert_post_data" filter to assign a random unique ID to each new post. This is helpful if you have a custom post type with sensitive data, where you don't want to make public how many exists or get created per day. (If the post ID is only auto increated each day, you could get this information by quering once in the morning and once in the night).
&lt;/p&gt;
&lt;p&gt;
But it's impossible to assign a random unique ID to a newly created user. Or actually, it is not possible, I can hook into the "user_register" action and udpate all database tables with a new user id. But I can not use that new information as the "wp_insert_user" function will still return the old ID.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39806 (Disable REST API by default, making it opt-in rather than always-on) updated</title>
      
        <dc:creator>pcarvalho</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:23:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39806#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39806#comment:16/1486696999772504</guid>
      <description>&lt;p&gt;
I believe REST API has a place within wp, and hopefully be useful in improving rewrites.
&lt;/p&gt;
&lt;p&gt;
With that said,
what we have done, at server level, was to block and ban ips requesting wp-json in our servers.
&lt;/p&gt;
&lt;p&gt;
It has been a though week.
&lt;/p&gt;
&lt;p&gt;
Lastly, I'm puzzled why this endpoint isn't protected by default:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="ext-link" href="https://news.microsoft.com/wp-json/wp/v2/users"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://news.microsoft.com/wp-json/wp/v2/users&lt;/a&gt; ( random site from showcase gallery )
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Why make it easier than ever to get all the usernames?
&lt;/p&gt;
&lt;p&gt;
thanks for reading,
p.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39828 (Multiple do_pings events shouldn't be scheduled) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39828#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39828#comment:2/1486696108686647</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40054" title="Pings/Trackbacks: Avoid scheduling multiple `do_pings` events in ..."&gt;40054&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Pings/Trackbacks: Avoid scheduling multiple &lt;code&gt;do_pings&lt;/code&gt; events in &lt;code&gt;_publish_post_hook()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ethitter.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39828" title="#39828: defect (bug): Multiple do_pings events shouldn't be scheduled (closed: fixed)"&gt;#39828&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40054]: Pings/Trackbacks: Avoid scheduling multiple `do_pings` events in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:08:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40054</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40054/1486696108213341</guid>
      <description>&lt;p&gt;
Pings/Trackbacks: Avoid scheduling multiple &lt;code&gt;do_pings&lt;/code&gt; events in &lt;code&gt;_publish_post_hook()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ethitter.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39828" title="#39828: defect (bug): Multiple do_pings events shouldn't be scheduled (closed: fixed)"&gt;#39828&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39828 (Multiple do_pings events shouldn't be scheduled) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 03:03:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39828#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39828#comment:1/1486695810673202</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>39828.diff attached to Ticket #39828</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/39828/39828.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/39828/39828.diff/1486694734007409</guid>
      <description>&lt;p&gt;
Only schedule an event if one doesn't exist
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #39828 (Multiple do_pings events shouldn't be scheduled) created</title>
      
        <dc:creator>ethitter</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:44:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39828</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39828/1486694691542459</guid>
      <description>&lt;p&gt;
Whenever &lt;code&gt;_publish_post_hook()&lt;/code&gt; is called, a new &lt;code&gt;do_pings&lt;/code&gt; event is scheduled in wp-cron. Since &lt;code&gt;do_all_pings()&lt;/code&gt; (the callback hooked to &lt;code&gt;do_pings&lt;/code&gt; by default) takes no arguments, and pings &lt;em&gt;everything&lt;/em&gt; that needs pinging each time it runs, there's no need to schedule multiple of these events.
&lt;/p&gt;
&lt;p&gt;
The potential for duplicate events has existed since its introduction in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3663" title="Future post pinging and cron fixups from masquerade. fixes #2469"&gt;r3663&lt;/a&gt;. As part of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/6966" title="#6966: defect (bug): cron: prevent duplicate events (closed: fixed)"&gt;#6966&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/9181" title="don't schedule a duplicate if there's already an identical event due ..."&gt;r9181&lt;/a&gt; aimed to reduce duplicate events. If a site's cron is backlogged, however, that workaround will fail as it only looks ahead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39827 (notice in wp-includes/canonical.php:392) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:34:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39827#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39827#comment:2/1486694093294771</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39827 (notice in wp-includes/canonical.php:392) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39827#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39827#comment:1/1486693753159427</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:28:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:6/1486693689903007</guid>
      <description>&lt;p&gt;
Related: &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36485" title="Allow `get_terms()` results to ordered by metadata.
The `$orderby` ..."&gt;[36485]&lt;/a&gt;, &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38337" title="Taxonomy: in `get_terms()`, do not assume that legacy args are being ..."&gt;[38337]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39827 (notice in wp-includes/canonical.php:392) created</title>
      
        <dc:creator>jakubbis</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39827</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39827/1486693683307705</guid>
      <description>&lt;p&gt;
Hello,
&lt;/p&gt;
&lt;p&gt;
We're getting notice in wp-includes/canonical.php:392, but it requires some specific steps to obtain it.
&lt;/p&gt;
&lt;p&gt;
Steps:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Setup a clean install of WPML
&lt;/li&gt;&lt;li&gt;Set permalinks to postname without ending slash: /%postname%
&lt;/li&gt;&lt;li&gt;Create a page in secondary language
&lt;/li&gt;&lt;li&gt;Set this page as Home Page (under Settings/Reading) but only in the secondary language
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
When you enter "home page", you get 404 because a page for original language does not exist.
In line 121, you get &lt;code&gt;$redirect_url = get_permalink($redirect_post);&lt;/code&gt; and value of $redirect_url is for instance "&lt;a class="ext-link" href="http://testsite.dev?lang=fr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://testsite.dev?lang=fr&lt;/a&gt;". As you see, there is no "/" before "?", that's why path is empty.
&lt;/p&gt;
&lt;p&gt;
You have already fixed  the similar issue in line:77-79
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;// Notice fixing
if ( !isset($redirect['path']) )
   $redirect['path'] = '';
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I suspect, we need the same fix before line: 392
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$redirect['path'] = preg_replace('|/' . preg_quote( $wp_rewrite-&amp;gt;index, '|' ) . '/*?$|', '/', $redirect['path']);
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:5/1486693656515511</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/40053" title="Docs: Add missing `meta_type` and `meta_compare` arguments to ..."&gt;40053&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add missing &lt;code&gt;meta_type&lt;/code&gt; and &lt;code&gt;meta_compare&lt;/code&gt; arguments to &lt;code&gt;WP_Term_Query::__construct()&lt;/code&gt; and &lt;code&gt;get_terms()&lt;/code&gt; docblocks.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props 1naveengiri.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39825" title="#39825: defect (bug): Documentation: Missing argument (meta_type and meta_compare) in the ... (closed: fixed)"&gt;#39825&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [40053]: Docs: Add missing `meta_type` and `meta_compare` arguments to ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/40053</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/40053/1486693656008461</guid>
      <description>&lt;p&gt;
Docs: Add missing &lt;code&gt;meta_type&lt;/code&gt; and &lt;code&gt;meta_compare&lt;/code&gt; arguments to &lt;code&gt;WP_Term_Query::__construct()&lt;/code&gt; and &lt;code&gt;get_terms()&lt;/code&gt; docblocks.
&lt;/p&gt;
&lt;p&gt;
Props 1naveengiri.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/39825" title="#39825: defect (bug): Documentation: Missing argument (meta_type and meta_compare) in the ... (closed: fixed)"&gt;#39825&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #39820 ([Resolved] Can't change header status code response) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 02:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39820#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39820#comment:6/1486692387912493</guid>
      <description>&lt;i&gt;Resolution&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39825 (Documentation: Missing argument (meta_type and meta_compare) in the ...) reopened</title>
      
        <dc:creator>knutsp</dc:creator>

      <pubDate>Fri, 10 Feb 2017 01:10:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39825#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39825#comment:4/1486689054083599</guid>
      <description>&lt;p&gt;
What was the reason to close this as invalid?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #36737 (Single site reachable on multiple subdomains always redirected to site_url) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 10 Feb 2017 01:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36737#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36737#comment:2/1486689004136941</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @jsoft, welcome to WordPress Trac!
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We run a site which is reachable by multiple subdomains (nb. not multisite) For example customer1.site.nl, customer2.site.nl.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you provide some more details of your setup? Are there any filters used to modify the site URL on the fly?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Since a recent update this stopped working. The visitor is always redirect to the site url www.site.nl.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's the exact purpose of canonical redirects, I don't see a bug here.
&lt;/p&gt;
&lt;p&gt;
Here's the snippet I generally use in &lt;code&gt;wp-config.php&lt;/code&gt; to make a site available from multiple domains and avoid unwanted redirects to the primary domain:
&lt;/p&gt;
&lt;pre class="wiki"&gt;define('WP_HOME',  "http://{$_SERVER['HTTP_HOST']}");
define('WP_SITEURL', "http://{$_SERVER['HTTP_HOST']}");
ob_start( 'ob_replace_home_url' );
function ob_replace_home_url( $content ) {
	$home_urls = array(
		'http://www.site.com',
		'http://subdomain1.site.com',
		'http://subdomain2.site.com',
	);
	$content = str_replace( $home_urls, WP_HOME, $content );
	return $content;
}
&lt;/pre&gt;&lt;p&gt;
Most of the time, just &lt;code&gt;WP_HOME&lt;/code&gt; and &lt;code&gt;WP_SITEURL&lt;/code&gt; would be enough to run the same install from multiple domains. The output buffering here just makes sure that URLs in content (images, etc.) always have the currently requested domain.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39822 (PHPUnit 6 compatibility) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Fri, 10 Feb 2017 00:21:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39822#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39822#comment:6/1486686064969991</guid>
      <description>&lt;p&gt;
There is also a deprecation error for the HHVM job: &lt;a class="ext-link" href="https://travis-ci.org/miya0001/WordPress/jobs/200084031"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/miya0001/WordPress/jobs/200084031&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Fatal error: Class already declared: PHPUnit_Framework_Error_Deprecated in phar://phpunit-5.7.7.phar/phpunit/Framework/Error/Deprecated.php on line 21&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>