<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #11282 (Bizarre Behavior When wp-content Missing) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:21:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11282#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11282#comment:30/1350948104171919</guid>
      <description>&lt;p&gt;
The OP describes problems very specific to the installation process here while &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21931" title="#21931: enhancement: White screen of death if theme can't be found (closed: fixed)"&gt;#21931&lt;/a&gt; is specific to the lack of notifications (yes, about the same problem mostly) in the admin after WordPress has been installed.
&lt;/p&gt;
&lt;p&gt;
They are similar tickets, but really do identify two different issues in two different workflows that will likely require two different patches (or maybe the second patch utilizing code in the first - but still two patches).
&lt;/p&gt;
&lt;p&gt;
I'm not saying one should be fixed without the other, just keeping the tickets separated since they are two different problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21197 (There are two diffrent full screen editors) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:20:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21197#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21197#comment:24/1350948037722015</guid>
      <description>&lt;p&gt;
Yes, added as Alt + W in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21266" title="TinyMCE: update the keyboard shortcuts: Alt + letter for Firefox and ..."&gt;[21266]&lt;/a&gt;, changed to Alt + Shift + W in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/21415" title="TinyMCE: revert Firefox shortcuts to match all other browsers ..."&gt;[21415]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21197 (There are two diffrent full screen editors) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:17:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21197#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21197#comment:23/1350947876636309</guid>
      <description>&lt;p&gt;
Alt + Shift + W does not work, version 3.4.2.  Is it a trunk only feature?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21197 (There are two diffrent full screen editors) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:15:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21197#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21197#comment:22/1350947723636924</guid>
      <description>&lt;p&gt;
DFW has its own shortcut, Alt + Shift + W.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22065 (Unable to Log Out with iPad) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:14:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22065#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22065#comment:12/1350947676788487</guid>
      <description>&lt;p&gt;
Thanks for the patch.  Could you guys also look at related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22064" title="#22064: defect (bug): Unable to scroll Rich Editor Help on iPad (closed: maybelater)"&gt;#22064&lt;/a&gt; for a milestone?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21976 (Remove the "standard" fullscreen mode from the default configuration ...) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:11:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21976#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21976#comment:5/1350947490269831</guid>
      <description>&lt;p&gt;
I would like to see the shortcut hooked up to DFW rather than removed.  If it's a conflict with TinyMCE, then could there be a new shortcut?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18734 (Subcategory archive does work with any name as parent category in URL) updated</title>
      
        <dc:creator>juliobox</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:10:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18734#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18734#comment:5/1350947400347389</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Waiting for a fix, i created this hack:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'wp', 'baw_non_duplicate_content' );
function baw_non_duplicate_content()
{
	global $wp_query;
	if( isset( $wp_query-&amp;gt;query_vars['category_name'], $wp_query-&amp;gt;query['category_name'] )
		&amp;amp;&amp;amp; $wp_query-&amp;gt;query_vars['category_name'] != $wp_query-&amp;gt;query['category_name'] ):
		$correct_url = str_replace( $wp_query-&amp;gt;query['category_name'], $wp_query-&amp;gt;query_vars['category_name'], $wp-&amp;gt;request );
		wp_redirect( home_url( $correct_url ), 301 );
		die();
	endif;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21197 (There are two diffrent full screen editors) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 22 Oct 2012 23:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21197#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21197#comment:21/1350947279225398</guid>
      <description>&lt;p&gt;
Is it possible to hook up Alt + Shift + G for DFW?  That would make a lot more sense to me than removing it.  That was how I found DFW in the first place, along with its many related keyboard shortcuts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [22269]: Compress scripts/styles: 3.5-beta2-22269.</title>
      
        <dc:creator>bumpbot</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:58:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22269</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22269/1350946714542190</guid>
      <description>&lt;p&gt;
Compress scripts/styles: 3.5-beta2-22269.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #11282 (Bizarre Behavior When wp-content Missing) updated</title>
      
        <dc:creator>miqrogroove</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:53:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11282#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11282#comment:29/1350946391947101</guid>
      <description>&lt;p&gt;
They are the same bug, that's why I marked &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21931" title="#21931: enhancement: White screen of death if theme can't be found (closed: fixed)"&gt;#21931&lt;/a&gt; as a duplicate of this older one.  You can't just fix it in the installer and then let the site W.S.O.D. at some other time without informing the admin that the site is broken.  I wasn't being selective about which aspects need to be fixed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22255 (Beta Media button disabled after publishing QuickPress post) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:48:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22255#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22255#comment:1/1350946102447113</guid>
      <description>&lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #20971,â€‹20976 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:44:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20971%2C20976</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20971%2C20976/1350945845376923</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20971" title="#20971: defect (bug): Delaying wp_default_scripts() prevents enqueing (closed: fixed)"&gt;#20971&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #22254 ("Do you really want to log out" message after already logged out) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22254#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22254#comment:2/1350945549065401</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5034 (Impossible to have duplicate category slugs with different parents) updated</title>
      
        <dc:creator>thirstcard</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5034#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5034#comment:25/1350945538041087</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20170 (The Incutio XML-RPC Library does not strip invalid XML characters) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:36:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20170#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20170#comment:2/1350945400971826</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21745 (Database Upgrade Redirect Loop) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:33:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21745#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21745#comment:5/1350945212181502</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22258" title="#22258: defect (bug): nocache_headers fail to prevent aggressive caching in Chrome (closed: fixed)"&gt;#22258&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22258 (nocache_headers fail to prevent aggressive caching in Chrome) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22258#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22258#comment:2/1350945209009095</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21745" title="#21745: defect (bug): Database Upgrade Redirect Loop (closed: fixed)"&gt;#21745&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22148 (Customizer Uploader doesn't handle large files properly) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:30:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22148#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22148#comment:4/1350945010170746</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22148 (Customizer Uploader doesn't handle large files properly) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22148#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22148#comment:3/1350944509388466</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22148 (Customizer Uploader doesn't handle large files properly) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 22 Oct 2012 22:15:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22148#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22148#comment:2/1350944140057357</guid>
      <description>&lt;p&gt;
I was able to reproduce this bug and also noticed that if you try to "select a file" it does nothing, no error etc if the file is too large.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 22 Oct 2012 21:56:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:10/1350943014865814</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22258 (nocache_headers fail to prevent aggressive caching in Chrome) updated</title>
      
        <dc:creator>barry</dc:creator>

      <pubDate>Mon, 22 Oct 2012 21:29:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22258#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22258#comment:1/1350941388378477</guid>
      <description>&lt;p&gt;
The same thing happens in Safari 6.0.1 as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16306 (clear output buffer before xml responses to prevent whitespace) closed</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 21:22:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16306#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16306#comment:5/1350940948923279</guid>
      <description>invalid: &lt;p&gt;
This is indeed a bug in the respective plugins and themes triggering this.
&lt;/p&gt;
&lt;p&gt;
I also think that the most likely cause of issues like this is due to use of EOF ?&amp;gt; on PHP files, which has also since been dropped entirely in core in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/19712" title="Lose EOF  ?&amp;gt;. Clean up EOF newlines. fixes #12307"&gt;r19712&lt;/a&gt;, after this ticket was opened, and probably dropped in a ton of plugins by now too.
&lt;/p&gt;
&lt;p&gt;
Since there's been no interest in this for nearly 2 years now too, I'm closing this out. Re-open if you think this is still a valid concern.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>22258.2.diff attached to Ticket #22258</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Mon, 22 Oct 2012 21:21:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22258/22258.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22258/22258.2.diff/1350940869713722</guid>
      <description>&lt;p&gt;
Empty Last-Modified and remove header if PHP &amp;gt;= 5.3
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20976 (jQuery loading last) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 22 Oct 2012 21:20:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20976#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20976#comment:6/1350940851267592</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As George said scripts requiring jQuery should have jQuery as a dependency. Proposing close
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22258.1.diff attached to Ticket #22258</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Mon, 22 Oct 2012 21:20:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22258/22258.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22258/22258.1.diff/1350940822652443</guid>
      <description>&lt;p&gt;
Empty Last-Modified
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22258 (nocache_headers fail to prevent aggressive caching in Chrome) created</title>
      
        <dc:creator>andy</dc:creator>

      <pubDate>Mon, 22 Oct 2012 21:16:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22258</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22258/1350940578565271</guid>
      <description>&lt;p&gt;
In Chrome 22, a response with a valid Last-Modified header will be cached despite Cache-Control and Expires headers. So even though the user is logged in, the resource is cached and the browser sends If-Modified-Since with subsequent requests. This can result in a strange, partially-logged out experience with batcache under certain conditions.
&lt;/p&gt;
&lt;p&gt;
In wp_get_nocache_headers(), the Last-Modified header is set to the current time. Setting its value to the empty string resolves the issue.
&lt;/p&gt;
&lt;p&gt;
I will post two patches: one which only empties the Last-Modified header in the array, another which also removes the header when the header_remove() function is defined (PHP &amp;gt;= 5.3).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 20:25:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:9/1350937536189535</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oh yeah. Well, in the mean time, I replaced &lt;code&gt;.&lt;/code&gt; with &lt;code&gt;:&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Started a proof of concept over here: &lt;a class="ext-link" href="https://github.com/scribu/WordPress/compare/hook-ns/22256"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://github.com/scribu/WordPress/compare/hook-ns/22256&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21737 (Users should have to jump through hoops to set passwords of their ...) updated</title>
      
        <dc:creator>convissor</dc:creator>

      <pubDate>Mon, 22 Oct 2012 20:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21737#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21737#comment:4/1350936760348350</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
These points, and more, are covered by my &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/login-security-solution/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Login Security Solution&lt;/a&gt; plugin.  The plugin has full UTF-8 support and unit tests.  Feel free to use the code or concepts therein for this project.  Let me know if you need help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21829 (Custom Field "Update" button failure) updated</title>
      
        <dc:creator>tahrirsquare</dc:creator>

      <pubDate>Mon, 22 Oct 2012 20:05:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21829#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21829#comment:40/1350936352647368</guid>
      <description>&lt;p&gt;
Disregard my comments. I apologize for the false alarm. The error was caused due to wp-config.php had a UTF-8 encoding. Changing to UTF-8 without BOM fixed it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22206 (Edit attachment display properties in the media modal) reopened</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 20:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22206#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22206#comment:3/1350936241606561</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
After looking for a second, I guessed that the "Insert into post" button likely still worked (and it did), but the point is, I had to stop and think about it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
koopersmith and I had mocked up a second button at the bottom (which is likely less jarring as it feels like less of an AYS). Either way, something needs to be done.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #16854 (wp_query does not handle multiple exclude author properly) updated</title>
      
        <dc:creator>alexdunae</dc:creator>

      <pubDate>Mon, 22 Oct 2012 20:01:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16854#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16854#comment:15/1350936063499847</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:58:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:8/1350935939995937</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21883 (WP_Plugin action/filter concept) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21883#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21883#comment:2/1350935937319743</guid>
      <description>&lt;p&gt;
I don't see why you'd want to have your own 'init' action, but which doesn't necessarily fire at the same time as WP's 'init' action.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19305 (Link title with XML tags breaks preview of post) closed</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:55:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19305#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19305#comment:4/1350935719534143</guid>
      <description>fixed: &lt;p&gt;
I was able to reproduce in 3.2, and confirmed as fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/18660" title="TinyMCE 3.4.5, fixes #18107"&gt;r18660&lt;/a&gt; (between 3.2 and 3.3) with TinyMCE update to 3.4.5. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18107" title="#18107: enhancement: Update TinyMCE (closed: fixed)"&gt;#18107&lt;/a&gt;. Also still works in SVN trunk.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #21324 (Visible Focus within Admin Screens could be much clearer.) closed</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:51:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21324#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21324#comment:61/1350935512482408</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22268" title="Improve visible focus in the admin, props lessbloat, fixes #21324"&gt;[22268]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Improve visible focus in the admin, props lessbloat, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21324" title="#21324: task (blessed): Visible Focus within Admin Screens could be much clearer. (closed: fixed)"&gt;#21324&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [22268]: Improve visible focus in the admin, props lessbloat, fixes #21324</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:51:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22268</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22268/1350935511650973</guid>
      <description>&lt;p&gt;
Improve visible focus in the admin, props lessbloat, fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21324" title="#21324: task (blessed): Visible Focus within Admin Screens could be much clearer. (closed: fixed)"&gt;#21324&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21883 (WP_Plugin action/filter concept) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:50:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21883#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21883#comment:1/1350935452726001</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22256" title="#22256: enhancement: Hook namespacing (closed: wontfix)"&gt;#22256&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:50:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:7/1350935417726190</guid>
      <description>&lt;p&gt;
Hooks will often end up with a dot in them when they have a dynamic name, and frequently of a PHP file. For example, &lt;code&gt;load-post-new.php&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:48:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:6/1350935283905970</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I know! Let's use the &lt;code&gt;\&lt;/code&gt; character as the namespace separator. &amp;lt;/sarcasm-aimed-at-PHP-language-designers&amp;gt;
&lt;/p&gt;
&lt;p&gt;
I haven't see any hook names with dots in them, though.
&lt;/p&gt;
&lt;p&gt;
Anyway, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21883" title="#21883: enhancement: WP_Plugin action/filter concept (closed: maybelater)"&gt;#21883&lt;/a&gt; looks interesting as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21390 (Upload/Insert media revamp) updated</title>
      
        <dc:creator>joostdekeijzer</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:38:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21390#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21390#comment:14/1350934738011379</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:33:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:5/1350934391989245</guid>
      <description>&lt;p&gt;
A problem with using dots is that some hooks will already have dots in their name. I don't know if this means another argument, or some other character or argument overloading, or doing this with a WP_Plugin class that has add_action etc methods.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:31:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:4/1350934300543981</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, I like this. I like this very much.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:25:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:3/1350933955512168</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22257 (Visual editor is locked after inserting an image/a gallery) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:18:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22257</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22257/1350933494091928</guid>
      <description>&lt;p&gt;
From the &lt;a class="ext-link" href="http://wordpress.org/support/topic/add-text-after-inserting-an-image-into-post?replies=3"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;alpha/beta forum&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Create a new post
&lt;/li&gt;&lt;li&gt;Switch to visual editor if not yet
&lt;/li&gt;&lt;li&gt;Insert an image through the new media modal
&lt;/li&gt;&lt;li&gt;Try to add some text to the editor
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
The last step doesn't work in Chrome and Safari. Seems like the editor is locked.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:2/1350933114968552</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:09:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256#comment:1/1350932977828959</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22206 (Edit attachment display properties in the media modal) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:08:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22206#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22206#comment:2/1350932881560495</guid>
      <description>&lt;p&gt;
This is looking really slick.
&lt;/p&gt;
&lt;p&gt;
One thing that made me pause (if only momentarily) was that once I changed my display properties I didn't see a way to save them:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://f.cl.ly/items/111j0k0o2F1V451U1d2k/attachment-properties.jpg"&gt;&lt;img src="http://f.cl.ly/items/111j0k0o2F1V451U1d2k/attachment-properties.jpg" alt="http://f.cl.ly/items/111j0k0o2F1V451U1d2k/attachment-properties.jpg" crossorigin="anonymous" title="http://f.cl.ly/items/111j0k0o2F1V451U1d2k/attachment-properties.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After looking for a second, I guessed that the "Insert into post" button likely still worked (and it did), but the point is, I had to stop and think about it.
&lt;/p&gt;
&lt;p&gt;
Could we do something like this:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://f.cl.ly/items/2h0G382336213E0G1507/attachment-props-proposal.jpg"&gt;&lt;img src="http://f.cl.ly/items/2h0G382336213E0G1507/attachment-props-proposal.jpg" alt="http://f.cl.ly/items/2h0G382336213E0G1507/attachment-props-proposal.jpg" crossorigin="anonymous" title="http://f.cl.ly/items/2h0G382336213E0G1507/attachment-props-proposal.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Which sits just over the top of the first button?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22248 (Classic and Fresh admin styles are inconsistent) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 22 Oct 2012 19:04:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22248#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22248#comment:3/1350932698733816</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:57:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:17/1350932260006012</guid>
      <description>&lt;p&gt;
Actually, namespaces would be useful right now: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22256" title="#22256: enhancement: Hook namespacing (closed: wontfix)"&gt;#22256&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22256 (Hook namespacing) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:56:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22256</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22256/1350932185563874</guid>
      <description>&lt;p&gt;
Currently, callbacks passed to add_action() and add_filter() are already sort of namespaced by the hook name, by priority and by the callback itself. You need to know all of them in order to use &lt;code&gt;remove_action()&lt;/code&gt; successfully.
&lt;/p&gt;
&lt;p&gt;
Acquiring the callback is especially problematic when it's:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;an instance method, and you don't have access to the instance
&lt;/li&gt;&lt;li&gt;a PHP 5.3 closure
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Introducing namespaces for hooks, similar to jQuery's &lt;a class="ext-link" href="http://docs.jquery.com/Namespaced_Events"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;namespaced events&lt;/a&gt;, would not only take care of that problem, but also enable things like removing all callbacks added by plugin X, regardless of hook name or anything else.
&lt;/p&gt;
&lt;p&gt;
Proposed syntax:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'after_setup_theme:twentytwelve', function() {
  // do stuff
}
add_action( 'after_setup_theme:twentytwelve', function() {
  // do more stuff
}
add_filter( 'posts_clauses:p2p', function( $clauses ) {
  // do stuff
}
&lt;/pre&gt;&lt;p&gt;
Later:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// remove specific callbacks added by the Twentytwelve theme
remove_action( 'after_setup_theme:twentytwelve' );
// remove all callbacks added by the P2P plugin
remove_action( '*:p2p' );
&lt;/pre&gt;&lt;p&gt;
Source: &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22250#comment:14"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/ticket/22250#comment:14&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:52:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:16/1350931930272953</guid>
      <description>&lt;p&gt;
Good point there, scribu. I've been leery to use anon functions because I'm not positive what version of PHP users are running. Then again, I'd be leery to use add_action_with_args() for the fact that users then need to determine "do I use remove_action or remove_action_with_args" (or whatever other solution it would have needed).
&lt;/p&gt;
&lt;p&gt;
Thanks for the feedback, everyone!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>custom-fields-bug.jpg attached to Ticket #21829</title>
      
        <dc:creator>tahrirsquare</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:51:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21829/custom-fields-bug.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21829/custom-fields-bug.jpg/1350931880586693</guid>
      <description>&lt;p&gt;
Custom fields bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:48:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:15/1350931701777087</guid>
      <description>&lt;p&gt;
A la &lt;code&gt;jQuery.on('click.mynamespace')&lt;/code&gt;? Sounds fun.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:46:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:14/1350931569165563</guid>
      <description>&lt;p&gt;
Perhaps come a requirements shift to 5.3, we come up with a way to more easily remove closures. Namespacing, anyone?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:13/1350931186110216</guid>
      <description>&lt;p&gt;
Oh, and if you find yourself doing something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;foreach ( get_option( 'footer_sidebars' ) as $sidebar_id ) {
  add_action( 'wp_footer', function() use ( $sidebar_id ) {
    get_sidebar( $sidebar_id );
  } );
}
&lt;/pre&gt;&lt;p&gt;
you should consider refactoring your code so that it looks more like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'wp_footer', function() {
  foreach ( get_option( 'footer_sidebars' ) as $sidebar_id ) {
    get_sidebar( $sidebar_id );
  }
} );
&lt;/pre&gt;&lt;p&gt;
Callbacks are not free.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21829 (Custom Field "Update" button failure) updated</title>
      
        <dc:creator>tahrirsquare</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:33:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21829#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21829#comment:39/1350930784747389</guid>
      <description>&lt;p&gt;
The hotfix plugin does not work any more with Wordpress 3.4.2. It worked fine until I updated PHP to 5.4.7 from 5.3.17. Now, when creating a new custom field it lands in a big pink box with red border, right above the existing custom fields, and in order to create another custom field the post must be updated/saved just like before.
&lt;/p&gt;
&lt;p&gt;
See attached image below.
&lt;/p&gt;
&lt;p&gt;
UPDATE: Disregard my comment. Hotfix works, see my comment below.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:12/1350930771911758</guid>
      <description>wontfix: &lt;p&gt;
Yes, anonymous functions are also hard to unhook, but the syntax is a lot clearer; with add_action_with_args() you just have a mess of parameters.
&lt;/p&gt;
&lt;p&gt;
Either way, it just doesn't make sense to add a helper that would become obsolete after a few releases.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:11/1350930346400189</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we should wait for PHP 5.3 to become more widespread:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'wp_footer', function() {
  get_sidebar( 'footer' );
} );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22255 (Beta Media button disabled after publishing QuickPress post) created</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 18:18:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22255</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22255/1350929931690551</guid>
      <description>&lt;p&gt;
A user that we tested &lt;a class="ext-link" href="http://make.wordpress.org/ui/2012/10/16/i-ran-a-user-through-a-couple-of/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;stumbled onto this one&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;To reproduce:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;From the dashboard publish (or save draft) for a post under QuickPress.
&lt;/li&gt;&lt;li&gt;Then without refreshing the page, try to click the "Beta Media" button.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;strong&gt;Actual:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The page scrolls to the top, but the media modal doesn't appear.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Expected:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The media modal should show, allowing you to add images to a second post.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22254 ("Do you really want to log out" message after already logged out) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 22 Oct 2012 17:49:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22254#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22254#comment:1/1350928160502849</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20170 (The Incutio XML-RPC Library does not strip invalid XML characters) closed</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 17:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20170#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20170#comment:1/1350928154083068</guid>
      <description>invalid: &lt;p&gt;
You should look at your source file encodings a little closer. The problem is actually in your own source code. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/20170/file-encoding-problem.png" title="Attachment 'file-encoding-problem.png' in Ticket #20170"&gt;file-encoding-problem.png&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/20170/file-encoding-problem.png" title="Download"&gt;â€‹&lt;/a&gt; as shown in my editor.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>22254.diff attached to Ticket #22254</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 22 Oct 2012 17:49:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22254/22254.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22254/22254.diff/1350928150786150</guid>
      <description>&lt;p&gt;
send logged out user straight to login form
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>file-encoding-problem.png attached to Ticket #20170</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 17:46:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/20170/file-encoding-problem.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/20170/file-encoding-problem.png/1350928013405013</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #21390,â€‹22085 batch updated</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Mon, 22 Oct 2012 17:40:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=21390%2C22085</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=21390%2C22085/1350927607308270</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22267" title="Correctly assign post_parent to attachments uploaded in the new media ..."&gt;[22267]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Correctly assign post_parent to attachments uploaded in the new media modal. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22085" title="#22085: defect (bug): Correctly assign post_parent to uploaded attachments in the new media modal (closed: fixed)"&gt;#22085&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21390" title="#21390: task (blessed): Upload/Insert media revamp (closed: fixed)"&gt;#21390&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [22267]: Correctly assign post_parent to attachments uploaded in the new media ...</title>
      
        <dc:creator>koopersmith</dc:creator>

      <pubDate>Mon, 22 Oct 2012 17:40:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22267</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22267/1350927606422325</guid>
      <description>&lt;p&gt;
Correctly assign post_parent to attachments uploaded in the new media modal. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22085" title="#22085: defect (bug): Correctly assign post_parent to uploaded attachments in the new media modal (closed: fixed)"&gt;#22085&lt;/a&gt;, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21390" title="#21390: task (blessed): Upload/Insert media revamp (closed: fixed)"&gt;#21390&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #22204 (XML-RPC _insert_post error when updating a post with a thumbnail.) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 17:14:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22204#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22204#comment:2/1350926096875927</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
set_post_thumbnail() can indeed return false if the row wasn't updated because the thumbnail was already set to that ID.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22044 (Twenty Twelve: better support for IE7 and IE8 (don't use mobile menu)) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:22:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22044#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22044#comment:50/1350922921747003</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7013 (Multiple image insert via media uploader) updated</title>
      
        <dc:creator>MikeHansenMe</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:21:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7013#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7013#comment:25/1350922906395788</guid>
      <description>&lt;p&gt;
Perhaps we should not close this until it fully replaces the older uploader. Right now it is accessible via the Beta Media on post/pages. However, the topic of this ticket will no longer be an issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22254 ("Do you really want to log out" message after already logged out) created</title>
      
        <dc:creator>Ov3rfly</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:21:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22254</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22254/1350922866507540</guid>
      <description>&lt;ol&gt;&lt;li&gt;Log into admin area
&lt;/li&gt;&lt;li&gt;Open some page within admin area in a new tab (middle click or "Open link in new tab" or similar)
&lt;/li&gt;&lt;li&gt;Select "Log Out" in menu in one tab
&lt;/li&gt;&lt;li&gt;Normal "You are now logged out." screen appears
&lt;/li&gt;&lt;li&gt;Select "Log Out" in menu in other tab
&lt;/li&gt;&lt;li&gt;The following message appears:
&lt;pre class="wiki"&gt;You are attempting to log out of Blogname
Do you really want to log out?
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The content of this message is wrong as the user is already logged out at this point.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21568 (Update Services_JSON External Library) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:19:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21568#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21568#comment:1/1350922785535482</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:19:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:10/1350922778685315</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22250#comment:9" title="Comment 9"&gt;rzen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22250#comment:5" title="Comment 5"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can see how it might 'save time', but I can also see how it might create an an extensibility barrier.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What sort of extensibility barriers do you foresee?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I already outlined one of them. I view this as skipping the ability-to-filter step, a valid purpose a lot of the "dummy" functions serve.
&lt;/p&gt;
&lt;p&gt;
My understanding of the benefits of something like this is limited, however. I'm curious to see what some of the more experienced folks have to say.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:11:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:9/1350922268957693</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22250#comment:5" title="Comment 5"&gt;DrewAPicture&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can see how it might 'save time', but I can also see how it might create an an extensibility barrier.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What sort of extensibility barriers do you foresee?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6821 (ImageMagick support) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:10:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6821#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6821#comment:92/1350922204094296</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #6814 (Async media crunching) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:09:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6814#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6814#comment:16/1350922166895637</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:08:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:8/1350922135223565</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22250#comment:6" title="Comment 6"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
My main issue with this is if somebody uses it, and does something like this ... perhaps you're spanish and that super important text is english and there's no translation support
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I would argue that's an issue with anything an inexperienced dev uses, not specific to this function. They can pass crummy code and non-localized strings using add_action and add_filter already. However, you presented an excellent piece I overlooked: a simple remove_action equivalent for this function.
&lt;/p&gt;
&lt;p&gt;
What are some other opinions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11282 (Bizarre Behavior When wp-content Missing) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:08:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11282#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11282#comment:28/1350922086757806</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21217 (Encoding problems with uploading media files) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:06:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21217#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21217#comment:7/1350921974035963</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22138 (wp_basename wrong on Windows Systems) updated</title>
      
        <dc:creator>bpetty</dc:creator>

      <pubDate>Mon, 22 Oct 2012 16:05:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22138#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22138#comment:8/1350921950377556</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16819 (Accessibility: Internal Linking behaviour in Editor / TinyMCE) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 15:58:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16819#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16819#comment:10/1350921513946928</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16819#comment:7" title="Comment 7"&gt;stencil&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Perhaps a conditional in the JavaScript that if selection == post title don't auto fill the field?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My 2 cents:
&lt;/p&gt;
&lt;p&gt;
I understand your idea around preventing the link text from ever matching the link title, however, here are my concerns with your proposed solution:
&lt;/p&gt;
&lt;p&gt;
1) In order to replicate this issue you've got to highlight text for a link (i.e. 'My trip to Africa') that also happens to be the same as the title of the post or page that you're linking to.  If this does happen, just change the title attribute in the add link modal to something other than the link text (so you could change 'My trip to Africa' to 'Thoughts on my 6 months in Africa').
&lt;/p&gt;
&lt;p&gt;
2) I don't think we can outright prevent people from making the link text the same as the link title.  If they want to make it the same for whatever reason, they should be able to.  For example, they may have a plugin that relies on the text of the link title in some way.  They should be allowed to set it to whatever they want.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21516 (Make the entire .check-column the click target for the checkbox) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 15:27:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21516#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21516#comment:1/1350919646449146</guid>
      <description>&lt;p&gt;
Looks good to me.  In 21516.2.diff I updated the patch, and made a slight tweak to include this functionality for the "check all" checkboxes in the table header row.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21516.2.diff attached to Ticket #21516</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 15:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21516/21516.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21516/21516.2.diff/1350919544534785</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19788 (i18 problems for Comment section) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 15:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19788#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19788#comment:12/1350918479946338</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/19788#comment:9" title="Comment 9"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For review from Jane:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I can't speak for Jane, but here are my thoughts:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;The help text on the Comments screen says "The small bubble with the number in it shows how many comments that post has received." This is not accurate â€” the bubble shows the number of approved comments only. It is highlighted blue if there are pending comments. What should the new help text say?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Changed it to read, "The small bubble with the number in it shows the number of approved comments that post has received." in 19788.2.diff
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;On the Comments screen, it says "View Post" or "View Page" in the right column. For comments on attachments, should it say "View Attachment"? "View Attachment Page"? "View Attachment Post"?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
This appears to already be set in trunk as "View Attachment Page" (line 59 of wp-includes/post.php), which sounds good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>19788.2.diff attached to Ticket #19788</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 15:04:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/19788/19788.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/19788/19788.2.diff/1350918291008429</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #21324 (Visible Focus within Admin Screens could be much clearer.) updated</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 14:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21324#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21324#comment:60/1350915240454719</guid>
      <description>&lt;p&gt;
21324.14.diff uses 21324.12b.diff (focus with outlines), and corrects CSS to show default browser focus for radios and checkboxes in all browsers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>21324.14.diff attached to Ticket #21324</title>
      
        <dc:creator>lessbloat</dc:creator>

      <pubDate>Mon, 22 Oct 2012 14:12:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21324/21324.14.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21324/21324.14.diff/1350915148128298</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22238 (HiDPI support for non-webkit browsers) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Mon, 22 Oct 2012 13:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22238#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22238#comment:4/1350911485167011</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22238#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead of a never-ending line I would vote for a syntax as &lt;a class="ext-link" href="http://css-tricks.com/snippets/css/retina-display-media-query/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;CSS Tricks proposes&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes please. If/when we add it, let's remember to add it to the CSS coding standards. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20429 (wp-activate is missing doc-blocks) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 22 Oct 2012 12:44:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20429#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20429#comment:6/1350909869132988</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/22266" title="Fix typo in phpdoc. Props SergeyBiryukov. fixes #20429"&gt;[22266]&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Fix typo in phpdoc. Props SergeyBiryukov. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20429" title="#20429: defect (bug): wp-activate is missing doc-blocks (closed: fixed)"&gt;#20429&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [22266]: Fix typo in phpdoc. Props SergeyBiryukov. fixes #20429</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Mon, 22 Oct 2012 12:44:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/22266</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/22266/1350909868100591</guid>
      <description>&lt;p&gt;
Fix typo in phpdoc. Props SergeyBiryukov. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20429" title="#20429: defect (bug): wp-activate is missing doc-blocks (closed: fixed)"&gt;#20429&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #21152 (Kill use of colons in class names) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 12:40:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21152#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21152#comment:23/1350909639846076</guid>
      <description>&lt;p&gt;
Yes, the patch was not committed yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21152 (Kill use of colons in class names) updated</title>
      
        <dc:creator>arena</dc:creator>

      <pubDate>Mon, 22 Oct 2012 12:38:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21152#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21152#comment:22/1350909488494444</guid>
      <description>&lt;p&gt;
custom field ajax not working in  3.5-beta2-22265
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22229 (Plurals in JavaScript) updated</title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Mon, 22 Oct 2012 12:19:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22229#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22229#comment:5/1350908374172037</guid>
      <description>&lt;p&gt;
Nacin, I like the idea.
&lt;/p&gt;
&lt;p&gt;
A couple of notes on the implementation:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;I would hide the big &lt;code&gt;if&lt;/code&gt; in a &lt;code&gt;Translations&lt;/code&gt; method like &lt;code&gt;translate_entry_or_return_entry()&lt;/code&gt;, which instead of &lt;code&gt;false&lt;/code&gt; returns the entry itself. This way you won't need the special case and the code will be easier to follow.
&lt;/li&gt;&lt;li&gt;The default number of plurals and the default expression do not belong to this part of the code. We're dealing with JS here, not with gettext specifics. I have two ideas around this problem:
&lt;ol start="0"&gt;&lt;li&gt;Make &lt;code&gt;nplurals_and_expression_from_header()&lt;/code&gt; and &lt;code&gt;parenthesize_plural_exression()&lt;/code&gt; static. Then just call &lt;code&gt;Gettext_Translations::nplurals_and_expression_from_header( $mo-&amp;gt;get_header( 'Plural-Forms' ) );&lt;/code&gt;. Or better, create an instance method of &lt;code&gt;Gettext_Translations&lt;/code&gt; called &lt;code&gt;nplurals_and_expression()&lt;/code&gt;, which uses the header from the instance.
&lt;/li&gt;&lt;li&gt;We can create a &lt;code&gt;NOOP_Gettext_Translations&lt;/code&gt;, which extends &lt;code&gt;Gettext_Translations&lt;/code&gt; and all the functionality, except actually translating is still there. The note about &lt;code&gt;nplurals_and_expression()&lt;/code&gt; still applies.
&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;I agree with scribu that we shouldn't create a new function each time. I think we should keep the pretty syntax of &lt;code&gt;numItems(5)&lt;/code&gt; (it's pretty and I don't need to remember any other function names) and we should have a function generator, building a single function and just varying on singular/plural.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15578 (Add (Select Image From Attachments) Option In Background SubPanel) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15578#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15578#comment:6/1350907018921303</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #15578,â€‹19840 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:56:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=15578%2C19840</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=15578%2C19840/1350906979891154</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/15578" title="#15578: feature request: Add (Select Image From Attachments) Option In Background SubPanel (closed: duplicate)"&gt;#15578&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #15578 (Add (Select Image From Attachments) Option In Background SubPanel) closed</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:29:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15578#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15578#comment:4/1350905340928177</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #20951 (Add a close button to Widgets) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:21:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20951#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20951#comment:3/1350904871062271</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20951 (Add a close button to Widgets) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:19:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20951#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20951#comment:2/1350904747013739</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20951#comment:1" title="Comment 1"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The chances of accidentally hitting a link in the title of the widget is too great, given that those bars are currently dragged and dropped across the available widgets area, inactive widgets area, and all registered sidebars; and that the title of the widget is already trying to show the title of the widget, which are not always short strings.
&lt;/p&gt;
&lt;p&gt;
Having a specific, clear flow to removing a widget -- you have to expand it, then you have to click a link -- is much less prone to error and bad clicks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes , I agree with :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20978 (Upload a theme like an image) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:16:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20978#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20978#comment:8/1350904613172612</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18842 (wp_nav_menu confuses new developers when it falls through to page listing) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:14:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18842#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18842#comment:3/1350904491266336</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12295 (More support to customize user profile edit page) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:14:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12295#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12295#comment:18/1350904478197501</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #19721 (WordPress should support multiple or nested plugin directories) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:12:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19721#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19721#comment:3/1350904331571555</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #22218,â€‹22250 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:10:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=22218%2C22250</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=22218%2C22250/1350904227102997</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22218" title="#22218: enhancement: Extra add_action() parameter (closed: duplicate)"&gt;#22218&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #22246 (PHP Notice On _remove_theme_support() function) updated</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:02:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22246#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22246#comment:1/1350903740372723</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22253 (Keep widget areas (and widgets) expanded upon page refresh in admin) created</title>
      
        <dc:creator>dgwyer</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:02:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22253</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22253/1350903730888978</guid>
      <description>&lt;p&gt;
This is a minor annoyance but noticeable one.
&lt;/p&gt;
&lt;p&gt;
Every time you reload the Appearance -&amp;gt; Widgets admin page, the widget areas (and widgets) currently expanded become closed when the page is refreshed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>theme.php.patch attached to Ticket #22246</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Mon, 22 Oct 2012 11:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22246/theme.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22246/theme.php.patch/1350903721451683</guid>
      <description>&lt;p&gt;
Using isset() to fix the bug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22218 (Extra add_action() parameter) reopened</title>
      
        <dc:creator>nofearinc</dc:creator>

      <pubDate>Mon, 22 Oct 2012 10:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22218#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22218#comment:7/1350901361210587</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22218#comment:5" title="Comment 5"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As scribu said, we wouldn't want to add anything else to add_action(). It needs to be kept fast and light, and it should be clear what its purpose is. This conflates its purpose.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How about a decorator to add_action/filter? It could be a separate function that helps for the numerous cases when arguments are needed and won't alter the current behavior of add_action/add_filter.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #22238 (HiDPI support for non-webkit browsers) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 22 Oct 2012 10:13:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22238#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22238#comment:3/1350900823413701</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22238#comment:2" title="Comment 2"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Instead of a never-ending line I would vote for a syntax as &lt;a class="ext-link" href="http://css-tricks.com/snippets/css/retina-display-media-query/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;CSS Tricks proposes&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I like that, plus, it has full future compatibility in mind, and thanks to CSS being so nice and ignoring things the parser doesn't understand, shouldn't cause any issues other than a very bad browser..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22238 (HiDPI support for non-webkit browsers) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 22 Oct 2012 10:06:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22238#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22238#comment:2/1350900379382642</guid>
      <description>&lt;p&gt;
Instead of a never-ending line I would vote for a syntax as &lt;a class="ext-link" href="http://css-tricks.com/snippets/css/retina-display-media-query/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;CSS Tricks proposes&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22247 (Ensure post ID evaluates to true before adding "Edit post" tab in admin bar) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 22 Oct 2012 09:25:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22247#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22247#comment:1/1350897954330774</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Mon, 22 Oct 2012 08:34:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:6/1350894898054417</guid>
      <description>&lt;p&gt;
It should be kept in mind that this functionality isn't the only method of doing things, e.g. when designing a car, adding more wheels and mechanisms to go over a hill might work, but so does getting out the car and walking..
&lt;/p&gt;
&lt;p&gt;
My main issue with this is if somebody uses it, and does something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;
function __echo_text( $input ) { echo $input; }
add_action( 'wp_footer', '__echo_text', 10, 'Some super important text that the client hates to such a degree that they want to eat your babies and wear your intestines.' );
&lt;/pre&gt;&lt;p&gt;
Requiring forks of said codebase, and additional maintenance to support changes ( perhaps the plugin or framework developer has decided it is not an issue, or feels that the text in question is necessary for functionality to work, perhaps you're spanish and that super important text is english and there's no translation support ).
&lt;/p&gt;
&lt;p&gt;
Ofc one could add a filter on this, but if so one shouldn't trust the developer at the other end to do this, and it still leaves the issue of what the filter should be called etc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 05:49:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:9/1350884969750434</guid>
      <description>&lt;p&gt;
I've mitigated this problem on BuddyPress's deactivation hook in trunk, which I think is good practice anyways. This doesn't cover the situation where a user deletes the BuddyPress directory on their own (the patches above will cover that case in WordPress core.)
&lt;/p&gt;
&lt;p&gt;
See: &lt;a class="ext-link" href="http://buddypress.trac.wordpress.org/changeset/6436/trunk/bp-core/bp-core-update.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://buddypress.trac.wordpress.org/changeset/6436/trunk/bp-core/bp-core-update.php&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 22 Oct 2012 05:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:15/1350883547197372</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:12" title="Comment 12"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I completely agree, but I think if they're going to be uppercase, then they need to be only settable once so that they act like constants. That's why my personal preference would be to use lowercased properties just as normal properties.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This approach could not support that &lt;em&gt;and&lt;/em&gt; also offer the fast access to the properties.  I guess it could be extended to have &lt;em&gt;"read-only constants"&lt;/em&gt; by storing those in an internal array and thus always using the magic methods for access but the tradeoffs would obviously be slower access. That might be okay for constants not used often.
&lt;/p&gt;
&lt;p&gt;
But even so, I've only seen immutable constants causing trouble vs. helping &lt;em&gt;(such as for testing)&lt;/em&gt;; in contrast I haven't seen any real issues with &lt;code&gt;get_option()&lt;/code&gt; values being mutable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That was for if they could only be set in &lt;code&gt;wp-config.php&lt;/code&gt;, where I can see problems with using includes in the config causing the complicated setter stuff to fail.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I &lt;em&gt;think&lt;/em&gt; this approach bypasses those issues. Maybe, maybe not?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I personally would prefer eliminating the constants and constant-like behaviour (immutability) in favour of simply using properties (also renaming some such as &lt;code&gt;$wp-&amp;gt;db['host'] = 'localhost'&lt;/code&gt; etc.).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed. Obviously. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 22 Oct 2012 05:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:14/1350882931488713</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:13" title="Comment 13"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I really like this, but how do we ensure &lt;code&gt;$wp&lt;/code&gt; is defined before &lt;code&gt;wp-config.php&lt;/code&gt;? If we don't, there'll be warnings (at least) from PHP. I guess adding &lt;code&gt;$wp = (object) array();&lt;/code&gt; to the top of &lt;code&gt;wp-config.php&lt;/code&gt; by default is probably the easiest way.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the rest of the P.O.C. code.  I have it placed in &lt;code&gt;/wp-load.php&lt;/code&gt; just before &lt;code&gt;wp-config.php&lt;/code&gt; is called:
&lt;/p&gt;
&lt;pre class="wiki"&gt;class wp_const {
  var $LEGACY_CONSTANTS = true;
  function __set( $property_name, $value ) {
    if ( $this-&amp;gt;LEGACY_CONSTANTS &amp;amp;&amp;amp; ! defined( $property_name ) ) {
      define( $property_name, $value );
    }
    $this-&amp;gt;$property_name = $value;
  }
  function __get( $property_name ) {
    if ( preg_match( '#^[A-Z_0-9]+$#', $property_name ) ) {
      $this-&amp;gt;$property_name = false;
    }
    return $this-&amp;gt;$property_name;
  }
}
$wp = new wp_const();
&lt;/pre&gt;&lt;p&gt;
Actually, I also have added the &lt;code&gt;var $LEGACY_CONSTANTS&lt;/code&gt; and two magic functions to the &lt;code&gt;WP&lt;/code&gt; class.  Too bad &lt;a class="ext-link" href="http://php.net/manual/en/language.oop5.traits.php"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Traits&lt;/a&gt; are not supported in PHP 5.2...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 22 Oct 2012 05:09:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:13/1350882589814463</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:11" title="Comment 11"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After re-reading your comment I think I see what you are saying. My P.O.C. does the following to deal with the issue:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
 * Early in /wp-settings.php
 */
$wp_const = $wp;
unset( $wp );  // Some functions like register_taxonomy() will use $wp if it exists.
...
$wp = new WP();
/*
 * This immediately follows the preceding line that assigns new WP() to $wp.
 */
foreach( get_object_vars( $wp_const ) as $property_name =&amp;gt; $property_value ) {
  $wp-&amp;gt;$property_name = $property_value;
}
unset( $wp_const );
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;
I really like this, but how do we ensure &lt;code&gt;$wp&lt;/code&gt; is defined before &lt;code&gt;wp-config.php&lt;/code&gt;? If we don't, there'll be warnings (at least) from PHP. I guess adding &lt;code&gt;$wp = (object) array();&lt;/code&gt; to the top of &lt;code&gt;wp-config.php&lt;/code&gt; by default is probably the easiest way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 22 Oct 2012 05:08:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:12/1350882493621892</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:10" title="Comment 10"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What is really wrong with allowing them to be set anywhere, in practice?  After many years experience I'm still looking for a good reason that "constants" need to remain immutable.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I completely agree, but I think if they're going to be uppercase, then they need to be only settable once so that they act like constants. That's why my personal preference would be to use lowercased properties just as normal properties.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Could you elaborate on the potential problems?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That was for if they could only be set in &lt;code&gt;wp-config.php&lt;/code&gt;, where I can see problems with using includes in the config causing the complicated setter stuff to fail. I think that's a complicated path, but I personally would prefer eliminating the constants and constant-like behaviour (immutability) in favour of simply using properties (also renaming some such as &lt;code&gt;$wp-&amp;gt;db['host'] = 'localhost'&lt;/code&gt; etc.). This could be done completely in a backwards compatible manner, since we're inventing these from scratch, so as long as they check for the constants as well, it should be fine, e.g.
&lt;/p&gt;
&lt;pre class="wiki"&gt;class WP {
    public $db = array( 'host' =&amp;gt; '', /* ... */ );
    // ...
    public function set_from_constants() {
        defined('DB_HOST') &amp;amp;&amp;amp; $this-&amp;gt;db['host'] = DB_HOST;
    }
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 22 Oct 2012 05:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:11/1350882378938423</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:7" title="Comment 7"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sounds great, until that all gets obliterated by: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-settings.php#L244"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-settings.php#L244&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
After re-reading your comment I think I see what you are saying. My P.O.C. does the following to deal with the issue:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/*
 * Early in /wp-settings.php
 */
$wp_const = $wp;
unset( $wp );  // Some functions like register_taxonomy() will use $wp if it exists.
...
$wp = new WP();
/*
 * This immediately follows the preceding line that assigns new WP() to $wp.
 */
foreach( get_object_vars( $wp_const ) as $property_name =&amp;gt; $property_value ) {
  $wp-&amp;gt;$property_name = $property_value;
}
unset( $wp_const );
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>22252.2.patch attached to Ticket #22252</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22252/22252.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22252/22252.2.patch/1350881926444567</guid>
      <description>&lt;p&gt;
Compare against transient, loop through themes, check for mismatched roots, delete option if $root = '/theme' to prevent useless database entries
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:58:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:10/1350881904135615</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:8" title="Comment 8"&gt;rmccue&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the configuration file should stick to constants for most things. Allowing setting the properties in that manner would allow them to be set anywhere in the code without a complicated setter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What is really wrong with allowing them to be set anywhere, in practice?  After many years experience I'm still looking for a good reason that "constants" need to remain immutable.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Such a complicated setter would probably be a bad thing too, because I can't see how you could possibly code such a thing without causing huge problems.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you elaborate on the potential problems?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:50:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:9/1350881404765736</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:7" title="Comment 7"&gt;wonderboymusic&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sounds great, until that all gets obliterated by: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-settings.php#L244"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-settings.php#L244&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why would they get obliterated? My proof of concept is working.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:8/1350881237584916</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:8/1350881204321299</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:5" title="Comment 5"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One potential other approach would be to deprecate constants in favor of &lt;code&gt;UPPERCASED&lt;/code&gt; properties on the &lt;code&gt;$wp&lt;/code&gt; object &lt;em&gt;(uppercased properties should not conflict with current or I assume otherwise future potential "non-constant" properties.)&lt;/em&gt; This approach would change &lt;code&gt;WP_DEBUG&lt;/code&gt; to be &lt;code&gt;$wp-&amp;gt;DEBUG&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
On the one hand, I think this might be be confusing, simply because it's a weird sort of syntax (to my eyes at least) to use &lt;code&gt;$wp-&amp;gt;ABC&lt;/code&gt; and that not being a proper constant. However, it is a cool idea, especially with the magic getter/setter. I also think it makes sense to have it under &lt;code&gt;$wp&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think this is clever but I would like to see what some PHP frameworks use to work with constants (for the ones they don't avoid). It'd be nice to see what we can do to reduce the number of constants we have. Those 57 instances have 30 unique constants among them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In most cases, they simply avoid them completely. For example, setting Symfony into debug mode is just another configuration option, not a constant. One way that this could be done in WP is to load the WP class before the configuration, allowing users to set e.g. &lt;code&gt;$wp-&amp;gt;debug = true&lt;/code&gt; in &lt;code&gt;wp-config.php&lt;/code&gt;. This would be a fairly major change, I'd say.
&lt;/p&gt;
&lt;p&gt;
That's essentially the same as Mike's changes &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:6" title="Comment 6"&gt;above&lt;/a&gt;. However, I think the configuration file should stick to constants for most things. Allowing setting the properties in that manner would allow them to be set anywhere in the code without a complicated setter. Such a complicated setter would probably be a bad thing too, because I can't see how you could possibly code such a thing without causing huge problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18753 (Add data to stylesheets) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:38:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18753#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18753#comment:6/1350880712278252</guid>
      <description>&lt;p&gt;
@kobenland I like the goal of this idea. I also feel that the script/style system is more complex that it needs to be and it needs to be simplified. I think it would be better to implement a more general data method that could be used for many purposes rather than adding a function that only gets used a few times. A function like the example below would be capable of storing data related to scripts/styles and practically anything else. Also (loosely related) see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22249" title="#22249: enhancement: Add ability to set or remove attributes on enqueued scripts and styles. (assigned)"&gt;#22249&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Get or set data via key/value pair.
function wp_data ($k = null, $v = null) {
    static $hash; // php.net/manual/en/language.variables.scope.php
    isset($hash) or $hash = array(); // only initiates once
    if ( func_num_args() &amp;gt; 1 )
        return $hash[$k] = $v; // set
    if ( is_scalar($k) )
        return $hash[$k]; // get
    if ( is_null($k) )
        return $hash; // get all
    return $hash = array_merge($hash, (array) $k); // set multi
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>wonderboymusic</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:34:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:7/1350880449068975</guid>
      <description>&lt;p&gt;
Sounds great, until that all gets obliterated by: &lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-settings.php#L244"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-settings.php#L244&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:31:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:6/1350880268336219</guid>
      <description>&lt;p&gt;
Given the proposal above here's what part of a future &lt;code&gt;wp-config.php&lt;/code&gt; might look like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$wp-&amp;gt;WP_DEBUG = true;
$wp-&amp;gt;SAVEQUERIES = true;
$wp-&amp;gt;WP_SITEURL = 'http://www.example.com';
$wp-&amp;gt;WP_HOST = $wp-&amp;gt;WP_SITEURL
// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
$wp-&amp;gt;DB_NAME = 'site_db';
/** MySQL database username */
$wp-&amp;gt;DB_USER = 'site_user';
/** MySQL database password */
$wp-&amp;gt;DB_PASSWORD = 'abcde12345';
/** MySQL hostname */
$wp-&amp;gt;DB_HOST = 'localhost';
/** Database Charset to use in creating database tables. */
$wp-&amp;gt;DB_CHARSET = 'utf8';
/** The Database Collate type. Don't change this if in doubt. */
$wp-&amp;gt;DB_COLLATE = '';
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:31/1350880079685932</guid>
      <description>&lt;p&gt;
Eh, this is just pulling across the infastructure that's already in place for styles.  Hurrah consistency and stuff!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:5/1350879528629036</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Rather than go the direction of creating an access function I'd propose WordPress slowly deprecate all uses of PHP constants in the WordPress ecosystem and use another approach.
&lt;/p&gt;
&lt;p&gt;
One potential other approach would be to deprecate constants in favor of &lt;code&gt;UPPERCASED&lt;/code&gt; properties on the &lt;code&gt;$wp&lt;/code&gt; object &lt;em&gt;(uppercased properties should not conflict with current or I assume otherwise future potential "non-constant" properties.)&lt;/em&gt; This approach would change &lt;code&gt;WP_DEBUG&lt;/code&gt; to be &lt;code&gt;$wp-&amp;gt;DEBUG&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Further for this approach we could:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a magic &lt;code&gt;__get()&lt;/code&gt; method to class &lt;code&gt;WP&lt;/code&gt; that would return &lt;code&gt;false&lt;/code&gt; for any uppercased properties that have not been previously set and set the property as false to avoid future &lt;code&gt;__get()&lt;/code&gt; method calls.
&lt;/li&gt;&lt;li&gt;Add a magic &lt;code&gt;__set()&lt;/code&gt; method to class &lt;code&gt;WP&lt;/code&gt; that would define a PHP constant if not previously defined and if &lt;code&gt;$wp-&amp;gt;LEGACY_CONSTANTS == true&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;A &lt;code&gt;wp_const&lt;/code&gt; class defined in &lt;code&gt;/wp-load.php&lt;/code&gt; to be used as a proxy for setting constants on &lt;code&gt;$wp&lt;/code&gt; prior to the instantiation of &lt;code&gt;WP&lt;/code&gt; and assignment to &lt;code&gt;$wp&lt;/code&gt; that occurs in &lt;code&gt;/wp-settings.php&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This approach would allow:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Access without having to test for existence.
&lt;/li&gt;&lt;li&gt;Fast access to constants, i.e. it would not require the overhead of a function call in most cases.
&lt;/li&gt;&lt;li&gt;Gradual migration, first for core and then for plugins and themes as developers decide to change.
&lt;/li&gt;&lt;li&gt;Display of a "deprecated" message if &lt;code&gt;$wp-&amp;gt;WARN_CONSTANTS == true&lt;/code&gt; by testing &lt;code&gt;get_defined_constants()&lt;/code&gt; in a &lt;code&gt;'shutdown'&lt;/code&gt; hook, or similar.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This approach makes sense because:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The &lt;code&gt;$wp&lt;/code&gt; variable is &lt;em&gt;the&lt;/em&gt; global object in WordPress and real constants are in the same scope.
&lt;/li&gt;&lt;li&gt;It adds very little code and effectively no overhead compared to the current case.
&lt;/li&gt;&lt;li&gt;It is consistent with existing practices as practically every entry-level plugin and theme developer understands the use of "&lt;code&gt;global wp;&lt;/code&gt;"  and/or "&lt;code&gt;$GLOBALS['wp']&lt;/code&gt;.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've implemented a proof-of-concept and it seems to work extremely nicely, better than I could have hoped for, actually.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;If I get positive feedback on this idea I'll post the P.O.C. as a new ticket and a patch.&lt;/strong&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13592 (script_loader_src and style_loader_tag filters) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:13:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13592#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13592#comment:7/1350879197510634</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:30/1350878973637576</guid>
      <description>&lt;p&gt;
I agree there a need for the capability, but I think it'd be simpler to implement it via a applying filter on the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag markup. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22245" title="#22245: feature request: Add Hook: &amp;#34;script_loader_tag&amp;#34; (closed: duplicate)"&gt;#22245&lt;/a&gt; and &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22249" title="#22249: enhancement: Add ability to set or remove attributes on enqueued scripts and styles. (assigned)"&gt;#22249&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Mon, 22 Oct 2012 04:09:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245#comment:5/1350878957861361</guid>
      <description>&lt;p&gt;
@scribu another potential use case is wrapping a script in IE conditionals (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/16024" title="#16024: enhancement: Conditional Comments for JS (closed: fixed)"&gt;#16024&lt;/a&gt;)
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter( 'script_loader_tag', function ( $html, $handle ) {
    return 'html5-shim' === $handle' ? &amp;lt;!--[if lt IE 9]&amp;gt;' . $html . '&amp;lt;![endif]--&amp;gt;' : $html;
}, 12, 2);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:48:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:7/1350877729335970</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've actually encountered this bug when playing around with BP recently. Not sure if it was the same sequence of events or not.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:42:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:6/1350877374457481</guid>
      <description>&lt;p&gt;
Apologies for the multiple edits. Kept thinking of more ways to clarify what's going on.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22234 (Use access modifiers in classes, not the var keyword) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:41:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22234#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22234#comment:4/1350877282747066</guid>
      <description>&lt;p&gt;
All new classes and properties (since 3.2) get proper visibility keywords. For existing properties, I have been following this guideline:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the property is public, declare it as such. If the property is designed to be protected or private but cannot be, keep "var" rather than announcing that it is "public" and keep @access.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I've begin to experiment with something else for wpdb: begin to set older properties as protected or private, but then providing a magic getter/setter to handle those values. That way, the functionality is the same, but A) the declarations and docs are accurate and B) we can throw deprecated property notices (but don't yet).
&lt;/p&gt;
&lt;p&gt;
The pattern wpdb uses might not be perfect for all classes, though, in that PHP's magic methods aren't uniformly used and therefore it might not be backwards compatible for all use cases. (We ran into some issues in hyperdb but got that fixed, and otherwise wpdb access is uncommon.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:41:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:5/1350877270383453</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:33:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:4/1350876792775644</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:3/1350876704422008</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:30:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:2/1350876608212635</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) updated</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:25:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252#comment:1/1350876318860115</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>22252.patch attached to Ticket #22252</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:23:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22252/22252.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22252/22252.patch/1350876211550020</guid>
      <description>&lt;p&gt;
Remove $wp_theme_directories check from switch_theme()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22252 (register_theme_directory() usage can break the current theme) created</title>
      
        <dc:creator>johnjamesjacoby</dc:creator>

      <pubDate>Mon, 22 Oct 2012 03:22:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22252</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22252/1350876129865698</guid>
      <description>&lt;p&gt;
&lt;strong&gt;Problem:&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
It's possible for the active theme and it's roots to become out of sync when performing a specific set of actions, resulting in the site white-screening because of the active theme directory being incorrect.
&lt;/p&gt;
&lt;p&gt;
Hard to explain, so I've included more information below.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Steps to reproduce:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Activate BuddyPress.
&lt;/li&gt;&lt;li&gt;Activate bp-default theme.
&lt;/li&gt;&lt;li&gt;Deactivate BuddyPress.
&lt;/li&gt;&lt;li&gt;Visit Appearance &amp;gt; Themes. (Theme shows as 'Twenty Twelve')
&lt;/li&gt;&lt;li&gt;Visit site: Twenty Twelve appears
&lt;/li&gt;&lt;li&gt;Check DB: stylesheet and template are changed to 'twentytwelve'.
&lt;/li&gt;&lt;li&gt;Check DB: stylesheet_root and template_root still point to '/plugins/buddypress/bp-themes/'.
&lt;/li&gt;&lt;li&gt;Reactivate BuddyPress.
&lt;/li&gt;&lt;li&gt;Visit Appearance &amp;gt; Themes. (Theme shows as 'twentytwelve')
&lt;/li&gt;&lt;li&gt;twentytwelve reports back as broken.
&lt;/li&gt;&lt;li&gt;Visit site: white-screen of doom
&lt;/li&gt;&lt;/ol&gt;&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Stack:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;wp-admin/themes.php:line 107 calls validate_current_theme()
&lt;/li&gt;&lt;li&gt;wp-includes/theme.php:719 calls switch_theme()
&lt;/li&gt;&lt;li&gt;wp-includes/theme.php 682 counts $wp_theme_directories, and skips the roots.
&lt;/li&gt;&lt;li&gt;This results in the _root options pointing to '/plugins/buddypress/bp-themes', and the current stylesheet and template being set as 'twentytwelve'.
&lt;/li&gt;&lt;li&gt;If you re-activate BuddyPress, $wp_theme_directories will now be greater than 1, and the _root options will not get updated.
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
&lt;strong&gt;Possible fixes:&lt;/strong&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove count( $wp_theme_directories ) check from switch_theme(). This forces the theme root to be accurate every time the theme switches, regardless of how many directories are ever registered. In my opinion, this is the most sensible option. (Patch attached)
&lt;/li&gt;&lt;li&gt;Improve search_theme_directories() to update 'stylesheet_root' and 'template_root' when 'theme_roots' transient doesn't match up. This works because we're already looping through the $cached_roots to make sure each theme is valid. The problem here is we're depending on the expiration of the transient, and doing additional logic each time that happens. (No patch attached)
&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;
&lt;p&gt;
The crux of the issue: counting $wp_theme_directories isn't a reliable way to guarantee the current theme and its _root's match. This bug doesn't occur if more than 1 additional theme directory is registered, because switch_theme() will always update the theme root in that circumstance.
&lt;/p&gt;
&lt;p&gt;
By forcing switch_theme() to always save the roots, we're able to bypass the issue completely.
&lt;/p&gt;
&lt;p&gt;
Conversely, the only reason to store the _root's is when register_theme_directory() is used more than once. If it's only used by core to register '/themes', it's never a problem. If it's always used by several plugins, it's never a problem. It's only a problem when switching between it being used more than once, and then only by core.
&lt;/p&gt;
&lt;p&gt;
This results in two additional options (even when there are never multiple theme roots) which sucks, but it always fixes the bug.
&lt;/p&gt;
&lt;p&gt;
If we fix it in search_theme_directories(), we're able to update the _root's when they need it, but we're performing that extra logic on each iteration when the transients expire. Also, because search_theme_directories() has some funky sub-directory checks, it's a messy bit to try and hack in there.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:35:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:5/1350873309598857</guid>
      <description>&lt;p&gt;
Feel free to correct me on any of this.
&lt;/p&gt;
&lt;p&gt;
Isn't it possible that using this helper in core could actually make it more difficult to extend certain functionality? I mean, I'm no great shakes of a developer but it seems like most of the time functions are abstracted so we have the ability to manipulate returned values in callbacks, such as through filters, separate from the actions.
&lt;/p&gt;
&lt;p&gt;
The way I read this is that &lt;code&gt;add_action_with_args()&lt;/code&gt; would essentially allow rolling a callback + args into add_action, without the added abstraction layer. I can see how it might 'save time', but I can also see how it might create an an extensibility barrier.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:27:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:17/1350872870224841</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
What? nacin closed it, and I did too, what is the problem ? :D
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How old are you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:12:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:16/1350871940697472</guid>
      <description>&lt;p&gt;
I added maybelater resolution because "maybe" later someone will come with a better feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:11:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:29/1350871871135455</guid>
      <description>&lt;p&gt;
Added one more revision, this time with twentytwelve integrating these changes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16024.5.diff attached to Ticket #16024</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:10:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16024/16024.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16024/16024.5.diff/1350871842038906</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:09:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:15/1350871773441415</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22244#comment:13" title="Comment 13"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@alexvorn2: I would appreciate you not closing tickets willy-nilly. I know I've been trigger happy myself sometimes, but "This is not a bug." doesn't help.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What? nacin  closed it, and I did too, what is the problem ? :D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>evansolomon</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:4/1350871462402200</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22251#comment:3" title="Comment 3"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This patch conflates not defining a constant with defining it as something that evaluates to false. In core, we make that assumption often, but in a generic function, we may not be able to, which means we might be in a situation where we need multiple functions just to be able to test everything.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It definitely assumes that the distinction is not important.  I agree multiple functions would probably make more sense than just one.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We've reduces the use of the defined &amp;amp;&amp;amp; constant pattern a few times before, notably with WP_DEBUG, which is automatically defined as false if it is not defined before the bootstrap begins to load.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It's been increasing for a while.  The WP_DEBUG change seems to have been in 2.9 (&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/12207" title="Ensure WP_DEBUG is always defined and simplify the checks on it. Fixes ..."&gt;r12207&lt;/a&gt;), which also had the biggest jump in this pattern.  Obviously in that time, lots of new code and features have been added too, so it may well have increased slower than it could have.
&lt;/p&gt;
&lt;pre class="wiki"&gt;2.8 12
2.9 28
3.0 39
3.1 40
3.2 41
3.3 43
3.4 52
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Mon, 22 Oct 2012 02:04:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:4/1350871441196557</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Similar, but different because it leaves add_action alone and lean. Admittedly, the separate helper class is a bit cumbersome, but this is just to get the discussion going.
&lt;/p&gt;
&lt;p&gt;
Edit: ha! Didn't realize the wontfix ticket was only from four days ago, nor that scribu suggested essentially the same code demoed here (courtesy Rarst). Classic!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16024 (Conditional Comments for JS) updated</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:59:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16024#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16024#comment:28/1350871180861797</guid>
      <description>&lt;p&gt;
Added a new patch, without ethitter's non-IE changes (as I think that's out of the scope of the ticket, and should be addressed separately for both scripts AND styles in a subsequent ticket ... bite-sized chunks)
&lt;/p&gt;
&lt;p&gt;
I also added wrapper functions for both $wp_scripts-&amp;gt;add_data() and $wp_styles-&amp;gt;add_data() as per kobenland in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/18753" title="#18753: enhancement: Add data to stylesheets (closed: fixed)"&gt;#18753&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22229 (Plurals in JavaScript) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:55:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22229#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22229#comment:4/1350870912916222</guid>
      <description>&lt;p&gt;
This would work, because the plural expression is the same for all the strings in a particular language.
&lt;/p&gt;
&lt;p&gt;
We could even keep the pretty syntax, but implement the JS function generator in JS, rather than PHP. This would make the code both cleaner and more compact.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>16024.sans-not-ie.with-wrapper-functions.diff attached to Ticket #16024</title>
      
        <dc:creator>georgestephanis</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:54:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16024/16024.sans-not-ie.with-wrapper-functions.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16024/16024.sans-not-ie.with-wrapper-functions.diff/1350870880431421</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22229 (Plurals in JavaScript) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:48:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22229#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22229#comment:3/1350870539307843</guid>
      <description>&lt;p&gt;
Ok, so instead of generating a new JS function for each string, how about we make a single generic JS function that gets run for all the strings? Something like the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.i18n._n(exampleL10n.numItems, 5);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:42:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:14/1350870140734675</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) reopened</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:41:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:13/1350870080159260</guid>
      <description>&lt;p&gt;
@alexvorn2: I would appreciate you not closing tickets willy-nilly. I know I've been trigger happy myself sometimes, but "This is not a bug." doesn't help.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
there is a potential functionality benefit to loading it in the header.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Such as?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:39:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:12/1350869958761515</guid>
      <description>&lt;p&gt;
@scribu Agreed. Exactly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:36:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:11/1350869805760532</guid>
      <description>&lt;p&gt;
@nacin Making the change would force people to write better code. But yea the change would need to be explained with the version release notes. Many themes and plugins circumvent the dependency system because it is so &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/22249"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;hard to customize&lt;/a&gt; or because they have no idea it exists. Even TwentyEleven uses stylesheet &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags directly in its header.php rather than using &lt;code&gt;wp_enqueue_style()&lt;/code&gt;. Regarding jquery.com, follow &lt;a class="ext-link" href="https://github.com/jquery/jquery.com/issues/9"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;this thread&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:36:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:3/1350869773156459</guid>
      <description>&lt;p&gt;
If we are to do something like &lt;code&gt;wp_constant()&lt;/code&gt; it woud probably be so constants are pluggable (for testing purposes). This patch conflates not defining a constant with defining it as something that evaluates to false. In core, we make that assumption often, but in a generic function, we may not be able to, which means we might be in a situation where we need multiple functions just to be able to test everything.
&lt;/p&gt;
&lt;p&gt;
We've reduces the use of the defined &amp;amp;&amp;amp; constant pattern a few times before, notably with WP_DEBUG, which is automatically defined as false if it is not defined before the bootstrap begins to load.
&lt;/p&gt;
&lt;p&gt;
I think this is clever but I would like to see what some PHP frameworks use to work with constants (for the ones they don't avoid). It'd be nice to see what we can do to reduce the number of constants we have. Those 57 instances have 30 unique constants among them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:10/1350869179121050</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) closed</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:26:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:9/1350869170863178</guid>
      <description>maybelater: &lt;p&gt;
This is not a bug.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) reopened</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Mon, 22 Oct 2012 01:16:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:8/1350868605819721</guid>
      <description>&lt;p&gt;
@alexvorn2 The reason many WP-powered sites load jQuery in the head is &lt;em&gt;because&lt;/em&gt; that is the default behavior and because &lt;strong&gt;they don't any better&lt;/strong&gt;. That's exactly the reason why the default should be changed. &lt;a class="ext-link" href="http://ucsdnews.ucsd.edu/newsrel/soc/policydefaults06.asp"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;People perceive the default option as a recommendation.&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The performance benefits of loading scripts in the footer are &lt;a class="ext-link" href="http://stackoverflow.com/a/2105394/770127"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;well-documented&lt;/a&gt;. The only plausible reason to load jQuery in the head would be it you have a UI that relies &lt;em&gt;entirely&lt;/em&gt; on it and you'd rather have users see a blank screen than an FOUC. Edge case.
&lt;/p&gt;
&lt;p&gt;
WP inherits the responsibility of helping guide its users towards the best practices. WP's defaults should favor the industry's best practices.
&lt;/p&gt;
&lt;p&gt;
A lot of people doing something makes it a common practiceâ€”not a best practice. Would you rather take medical advice from 1 surgeon or a 100 laymen holding knives?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>toscho</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:53:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:2/1350867204231120</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:40:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251#comment:1/1350866448669254</guid>
      <description>&lt;p&gt;
Saw it &lt;a class="ext-link" href="https://irclogs.wordpress.org/chanlog.php?channel=wordpress-dev&amp;amp;day=2012-06-20&amp;amp;sort=asc#m409899"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;discussed in IRC&lt;/a&gt; in relation to unit testing. I'm sure it's come up other times, too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22251.patch attached to Ticket #22251</title>
      
        <dc:creator>evansolomon</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:32:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22251/22251.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22251/22251.patch/1350865961981244</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22251 (Helper function to simplify checking for constants) created</title>
      
        <dc:creator>evansolomon</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:32:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22251</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22251/1350865947460459</guid>
      <description>&lt;p&gt;
Love 'em or hate 'em, WordPress uses lots of constants.  As a result, this pattern is all over core and plugins, and occasionally themes:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;if ( defined( 'CONSTANT_NAME' ) &amp;amp;&amp;amp; CONSTANT_NAME )&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Right now on trunk, it's used 57 times (excluding 2 in Akismet).
&lt;/p&gt;
&lt;pre class="wiki"&gt;~/code/wptrunk $ ack "defined\( ?('|\")([^'\"]+)\1 ?\) \&amp;amp;\&amp;amp; \2" -h --ignore-dir=wp-content/plugins/ | wc -l
      57
&lt;/pre&gt;&lt;p&gt;
How about a new function to make that verbose logic a little bit less repetitive.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_constant( $constant ) {
	return defined( $constant ) &amp;amp;&amp;amp; constant( $constant );
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:31:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:3/1350865904736983</guid>
      <description>&lt;p&gt;
This sounds very close to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22218" title="#22218: enhancement: Extra add_action() parameter (closed: duplicate)"&gt;#22218&lt;/a&gt; which was wontfixed. The existing plugin is a good proof of concept, though I'm not sure if core would find extra benefit in it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22248 (Classic and Fresh admin styles are inconsistent) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:31:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22248#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22248#comment:2/1350865903213076</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I believe the color sheets are supposed to sync up line-for-line, with the exception of editor styles in blue (classic). If that's all that's needed to get them matching again, then hooray! If not, this might be the place to do it, although I will warn that patches may need refreshing often due to the frequency of changing code, and now that I took a quick look, is probably pretty involved. Blue could always use love, though.
&lt;/p&gt;
&lt;p&gt;
Also, if we were to do a clean-up patch/commit, it might be a good time to make all the colors lowercase and shorthand where applicable as per the &lt;a class="ext-link" href="http://make.wordpress.org/core/handbook/coding-standards/css/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;CSS coding standards&lt;/a&gt; (in the color sheets only, in this case). Just a thought. I wouldn't make a patch on that at the moment, though :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:27:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:7/1350865647630642</guid>
      <description>wontfix: &lt;p&gt;
jQuery's own sites (jquery.com, jqueryui.com to name two of them) loads jQuery in the header. There is of course a potential performance benefit to loading it in the footer, just as there is a potential functionality benefit to loading it in the header.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, this has the potential to break any code not properly (and completely) using the dependencies system. We have made a number of script enqueueing changes over the past few releases that has caused us accidental grief, so I'd rather not bring it upon ourselves and do a change deliberately.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:25:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:2/1350865524276323</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22229 (Plurals in JavaScript) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:20:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22229#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22229#comment:2/1350865218801890</guid>
      <description>&lt;p&gt;
In WordPress, we register plural strings in a POT file like so:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;_n( '%d string', '%d strings' );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
English has two forms: a singular form (n = 1) and a plural form for n != 1. Other languages have anywhere from one (like Japanese) to four forms (like Slovenian). I'm sure you are familiar with Romanian's three forms.
&lt;/p&gt;
&lt;p&gt;
Using &lt;code&gt;_n()&lt;/code&gt; alone is not sufficient. You also have to pass the number of items, so the proper translation is chosen for the language to which you are translating. So, &lt;code&gt;_n( '%d string', '%d strings', $number_of_strings );&lt;/code&gt;. And, you will get back a string with %d (or %s, if the number could be sufficiently large enough to possibly need comma separators with &lt;code&gt;number_format_i18n()&lt;/code&gt;). This is why we then &lt;code&gt;sprintf()&lt;/code&gt; the result. So:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;printf( _n( '%d string', '%d strings', $number_of_strings ), $number_of_strings );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
Or:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;printf( _n( '%s string', '%s strings', $number_of_strings ), number_format_i18n( $number_of_strings ) );&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
For JavaScript, we obviously do not have access to core's i18n libraries. So we pass strings via the script-loader. For example, &lt;code&gt;postL10n.publish&lt;/code&gt; is &lt;code&gt;__( 'Publish' );&lt;/code&gt;. But in order to translate a plural, we need to know the count of items (&lt;em&gt;n&lt;/em&gt;), which then gets passed to an expression to determine the plural form to be used based.
&lt;/p&gt;
&lt;p&gt;
What &lt;code&gt;wp_js_i18n_plural()&lt;/code&gt; does is provide a function in JS that can be called with the number of items, because these numbers are going to be dynamic. It does this by using the same plural expression (which takes &lt;em&gt;n&lt;/em&gt; and returns the plural to use) and an array of all of the plural forms.
&lt;/p&gt;
&lt;p&gt;
So rather than &lt;code&gt;exampleL10n.numItems&lt;/code&gt; being '%d items', it can be this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;exampleL10n.numItems = function(n) {
	var i = (n != 1),
		t = {"0":"%d item","1":"%d items"};
	if (typeof i === 'boolean') i = i ? 1 : 0;
	return i &amp;gt; 1 ? t[1] : t[i];
}
&lt;/pre&gt;&lt;p&gt;
And then instead of invoking &lt;code&gt;exampleL10n.numItems&lt;/code&gt;, you invoke &lt;code&gt;exampleL10n.numItems(5)&lt;/code&gt;, and get back &lt;code&gt;%d items'. Or, if called with &lt;/code&gt;(1)`, you'd get back '%d item'.
&lt;/p&gt;
&lt;p&gt;
The patch needs some work. One, we need to decide whether the JS function should do the sprintf automatically (my example does not; the patch does). Two, some of this logic needs to make its way back into the pomo classes, as right now it is dependent on Gettext_Translations to function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:6/1350864821401567</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Appeal to popularity is a logical fallacy.
&lt;/p&gt;
&lt;p&gt;
I, for one, would go so far as make $in_footer default to &lt;code&gt;true&lt;/code&gt;, but that's another topic.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) updated</title>
      
        <dc:creator>mordauk</dc:creator>

      <pubDate>Mon, 22 Oct 2012 00:10:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250#comment:1/1350864653659388</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I could definitely get behind this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:49:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:5/1350863376487092</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks! But at the end... I think jQuery should load in the header as default... Because most of the sites do so
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22250.diff attached to Ticket #22250</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:41:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22250/22250.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22250/22250.diff/1350862865395449</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22250 (Useful helper function, add_action_with_args()) created</title>
      
        <dc:creator>rzen</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:40:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22250</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22250/1350862822044656</guid>
      <description>&lt;p&gt;
About a year ago, Rarst released a plugin named Advanced Hooks API (&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/advanced-hooks-api/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/extend/plugins/advanced-hooks-api/&lt;/a&gt;) that adds a number of (experimental) wrappers that allow one to hook more elaborate events without coding intermediary functions. One of these wrappers in particular (add_action_with_args) would save theme and plugin devs an annoying amount of work writing dummy functions to simply hook a callback that requires a few specific params.
&lt;/p&gt;
&lt;p&gt;
I pulled just that functionality out of his plugin, distilled it to it's simplest form, and added it in to plugin.php. I think this functionality has legs, and a number of others agree, but some are not convinced it has a home in core. I would LOVE to see it there, as I said it would eliminate a ton of unnecessary work, but I present it to you who are smarter than me to talk through why it should/shouldn't be.
&lt;/p&gt;
&lt;p&gt;
Here are some sample use-cases: &lt;a class="ext-link" href="https://gist.github.com/3928941"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;https://gist.github.com/3928941&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22249 (Add ability to set or remove attributes on enqueued scripts and styles.) created</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22249</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22249/1350862153569188</guid>
      <description>&lt;p&gt;
I think it should be easier to customize the loading of scripts and styles (easier to customize the markup generated by the script/style system). Proposed solutions:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Solution 1:&lt;/strong&gt; Allow &lt;code&gt;wp_enqueue_script&lt;/code&gt;, &lt;code&gt;wp_enqueue_style&lt;/code&gt;, &lt;code&gt;wp_register_script&lt;/code&gt;, &lt;code&gt;wp_register_style&lt;/code&gt; to accept an array of attributes as the &lt;code&gt;$src&lt;/code&gt; parameter. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp_enqueue_script( 'my-plugin', array(
    'src' =&amp;gt; 'http://example.com/js/app.js'
    'defer' =&amp;gt; ''
    'data-my-plugin' =&amp;gt; 'custom data attr value'
), array('jquery'), null, true );
&lt;/pre&gt;&lt;p&gt;
&lt;strong&gt;Solution 2:&lt;/strong&gt; Add a filter before the markup is generated that allows devs to filter the attributes while they are in array format. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('script_loader_attrs', function ($attrs, $handle) {
    unset ( $attrs['type'] );
    'my-plugin' === $handle and $attrs['data-my-plugin'] = 'plugin data';
    $attrs['src'] = remove_query_arg( $attrs['src'] );
    return $attrs;
}, 12, 2);
&lt;/pre&gt;&lt;p&gt;
In class.wp-scripts.php it might look something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attrs = (array) apply_filters('script_loader_attrs', $attrs, $handle);
&lt;/pre&gt;&lt;p&gt;
and/or:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$attrs = (array) apply_filters("{$handle}_script_loader_attrs", $attrs );
&lt;/pre&gt;&lt;hr /&gt;
&lt;p&gt;
I imagine that solution &lt;strong&gt;2&lt;/strong&gt; would be easier to implement than &lt;strong&gt;1&lt;/strong&gt;, and &lt;strong&gt;2&lt;/strong&gt; allows for themes/plugins to modify scripts/styles w/o re-registering resources.
&lt;/p&gt;
&lt;p&gt;
The key feature of both solutions is the ability to modify the attrs while in array format. There are other ways that one could achieve the same results, but the array is &lt;strong&gt;by far the cleanest&lt;/strong&gt;. Dirty alternatives include:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Use &lt;code&gt;preg_replace()&lt;/code&gt; on the markup after it is generated (see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22245" title="#22245: feature request: Add Hook: &amp;#34;script_loader_tag&amp;#34; (closed: duplicate)"&gt;#22245&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;Use output buffers and PHP's DOMElement interface
&lt;/li&gt;&lt;li&gt;Filter away the "print_scripts_array" and regenerate the markupmanually.)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13592 (script_loader_src and style_loader_tag filters) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:12:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13592#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13592#comment:6/1350861161292543</guid>
      <description>&lt;p&gt;
So what happened to the "script_loader_tag" filter? See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22245" title="#22245: feature request: Add Hook: &amp;#34;script_loader_tag&amp;#34; (closed: duplicate)"&gt;#22245&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:11:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245#comment:4/1350861099641885</guid>
      <description>&lt;p&gt;
@ocean90 There's no explanation in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13592" title="#13592: enhancement: script_loader_src and style_loader_tag filters (closed: fixed)"&gt;#13592&lt;/a&gt; as to why "script_loader_tag" was not added.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 23:07:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:4/1350860876999690</guid>
      <description>&lt;p&gt;
@alexvorn2 It's no problem as long as they include the dependencies array when registering/enqueuing. If 'jquery' is registered in the footer and a plugin in the head properly lists 'jquery' as a dependency then 'jquery' will load in the head.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>alexvorn2</dc:creator>

      <pubDate>Sun, 21 Oct 2012 22:41:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:3/1350859261525270</guid>
      <description>&lt;p&gt;
what about the scripts that load in the header?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12009 (Add support for HTML 5 "async" and "defer" attributes) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 21:56:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12009#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12009#comment:17/1350856574750362</guid>
      <description>&lt;p&gt;
Or, we could just throw our hands in the air: add a 'script_loader_tag' and let plugins add whatever attributes they see fit: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13592" title="#13592: enhancement: script_loader_src and style_loader_tag filters (closed: fixed)"&gt;#13592&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22248 (Classic and Fresh admin styles are inconsistent) updated</title>
      
        <dc:creator>pas5027</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:59:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22248#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22248#comment:1/1350853178488959</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
replaced 4 spaces to tabs, updated order of border rules to be consistant across classic and colors themes
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22248.1.diff attached to Ticket #22248</title>
      
        <dc:creator>pas5027</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:58:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22248/22248.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22248/22248.1.diff/1350853093471513</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13592 (script_loader_src and style_loader_tag filters) updated</title>
      
        <dc:creator>kawauso</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:57:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13592#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13592#comment:5/1350853048752842</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22248 (Classic and Fresh admin styles are inconsistent) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:55:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22248</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22248/1350852927074195</guid>
      <description>&lt;p&gt;
There are a few inconsistencies between the classic and fresh admin themes that need to be brought up to speed.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Tickets #13592,â€‹22245 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=13592%2C22245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=13592%2C22245/1350852497035897</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13592" title="#13592: enhancement: script_loader_src and style_loader_tag filters (closed: fixed)"&gt;#13592&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>22247.diff attached to Ticket #22247</title>
      
        <dc:creator>Joe Anzalone</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:47:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22247/22247.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22247/22247.diff/1350852430043104</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22247 (Ensure post ID evaluates to true before adding "Edit post" tab in admin bar) created</title>
      
        <dc:creator>Joe Anzalone</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:45:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22247</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22247/1350852327155317</guid>
      <description>&lt;p&gt;
This patch checks that a post has an ID set before adding an "Edit post" link in the admin bar on the front-end for individual post pages and static pages.
&lt;/p&gt;
&lt;p&gt;
This can be helpful for plugins that choose to create a "fake" page that does not exist in the database, and set their ID to "0."
&lt;/p&gt;
&lt;p&gt;
An example of such a fake page can be seen on my &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/on-the-fly-youtube-embeds/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;On The Fly YouTube Embeds&lt;/a&gt; plugin which borrows a lot of code from Scott Sherrill-Mix's blog post: &lt;a class="ext-link" href="http://scott.sherrillmix.com/blog/blogger/creating-a-better-fake-post-with-a-wordpress-plugin/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Creating a (Better) Fake Post with a WordPress Plugin&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22246 (PHP Notice On _remove_theme_support() function) created</title>
      
        <dc:creator>alex-ye</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:30:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22246</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22246/1350851420966014</guid>
      <description>&lt;p&gt;
Hi Guys , I just found this PHP Notice on _remove_theme_support() function , Tested On :
&lt;/p&gt;
&lt;p&gt;
1 - WordPress 3.5 Beta 2&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
2 - PHP 5.4
&lt;/p&gt;
&lt;p&gt;
To get this notice on just add child theme to TwentyTwelve and add this simple code on functions.php :
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action ( 'after_setup_theme', 'Nash_setup' , 11 );
function Nash_setup() {
    remove_theme_support ( 'custom-background' );
    remove_theme_support ( 'custom-header' );
} // end Nash_setup()
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:16:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245#comment:2/1350850590752680</guid>
      <description>&lt;pre class="wiki"&gt;add_filter( 'script_loader_tag', function ( $html, $handle ) {
    if ( 'example' !== $handle )
        return $html;
    return str_replace( '&amp;lt;script ', '&amp;lt;script async ', $html );
}, 12, 2);
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 20:08:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245#comment:1/1350850100647390</guid>
      <description>&lt;p&gt;
Example use case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:53:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:2/1350849233620706</guid>
      <description>&lt;p&gt;
@scribu Yes that would be ideal. But even alone it'd still be effective for situations where the only scripts needing jQuery were non-default ones (from themes/plugins).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22245 (Add Hook: "script_loader_tag") created</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:49:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22245</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22245/1350848949276659</guid>
      <description>&lt;p&gt;
There exists a filter for "style_loader_tag" in wp-includes/class.wp-styles.php. A corresponding filter "script_loader_tag" in wp-includes/class.wp-scripts.php would be very useful for customizing script loading.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:31:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244#comment:1/1350847874736674</guid>
      <description>&lt;p&gt;
This would be effective only if we make all the other scripts in Core that depend on jQuery also load in the footer by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7394 (Search: order results by relevance) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:28:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7394#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7394#comment:33/1350847716018206</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's pity. Our search has been pretty bad for a very long time, look at when this ticket was opened :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That can go both ways: if it's been broken for so long, then it's clear that users manage somehow, so waiting a few more months isn't the end of the world.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22244 (jQuery should register in footer by default) created</title>
      
        <dc:creator>ryanve</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:25:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22244</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22244/1350847553614249</guid>
      <description>&lt;p&gt;
jQuery is not needed on a page until just before the first script that depends on it. If scripts dependent on jQuery are registered properly via &lt;code&gt;wp_register_script()&lt;/code&gt; or &lt;code&gt;wp_enqueue_script()&lt;/code&gt;, then the script dependency system is smart enough to know where to load jQuery. Therefore jQuery should be registered in the footer by default (allowing the script dependency system to do its magic). This simple change can be made in wp-includes/script-loader.php in &lt;code&gt;wp_default_scripts()&lt;/code&gt; and will no doubt improve performance on lots of sites. There may be some other default scripts that would benefit from this change too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #21963 (Consolidate post insertion APIs) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21963#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21963#comment:12/1350846625874586</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21963.2.diff attached to Ticket #21963</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:09:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21963/21963.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21963/21963.2.diff/1350846595375651</guid>
      <description>&lt;p&gt;
Freshness for 21963.diff, applies cleanly to trunk now.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #7394 (Search: order results by relevance) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Oct 2012 19:09:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7394#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7394#comment:32/1350846541595674</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/7394#comment:31" title="Comment 31"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Split word cleaning (removal of short words, etc) into a separate patch. This should be considered separately. That probably means we can continue to use _search_terms_tidy() instead of _check_search_terms().
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
It used to be &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21688" title="#21688: enhancement: Add sanity checks and improve performance when searching for posts (closed: duplicate)"&gt;#21688&lt;/a&gt; however sanity checks and removal of one letter terms and stopwords is needed for implementing sorting by relevance.
&lt;/p&gt;
&lt;p&gt;
If you mean separating the "stopwords" functionality in another function, it used to be that way in a previous patch. There might be a possibility to use stopwords somewhere else, so not merging them in &lt;code&gt;_check_search_terms()&lt;/code&gt; makes sense.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;_search_terms_tidy()&lt;/code&gt; was designed to be a callback for &lt;code&gt;array_filter()&lt;/code&gt; and has limitations.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There remain three distinct concerns:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Plugin compatibility: Does this have the potential to break plugins?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Not plugins that implement fulltext index on the posts table. Will look for other plugins that (perhaps) implement something similar.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;Performance: This worked well on WP.com, but they use SSDs, query caching, and have mostly vanilla use cases (ties back into plugin compatibility). Does this cause problems under strain?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
The results from WP.com show no change to the load of MySQL whether it's on the same server or on a dedicated DB server with SSDs, etc. Also ran quite a bit of tests on my tests server and didn't see any MySQL performance problems.
&lt;/p&gt;
&lt;p&gt;
In most cases the ORDER BY would run several more LIKE on the selected rows. While at first look this seems slow, in reality it's very fast. Further the sorting uses only the whole search string if it's too specific (contains many search terms) and has some sensible "sanity limits".
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="3"&gt;&lt;li&gt;Results: Does this result in bad search results on occasion by promoting the wrong things to the top? One example could include P2 auto titles. Yes, there is a filter, but if there are concerns that were raised by WP.com developers, I'd like to work them out here.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Did quite a bit of research while working on this. The sorting was modelled to mimic how the search engines work. This improvement concerns mostly the front-end searches when a visitor to the site uses our search form. The results we return should be similar to the results Google, Bing, etc. return for the site.
&lt;/p&gt;
&lt;p&gt;
It puts heavy emphasis on term matches in the title with full search string matches receiving the highest priority.
&lt;/p&gt;
&lt;p&gt;
In the particular case for P2s, the auto-generated title is the same as the first few words of the content and may not represent the post very well. For that case matches in the title are disabled but full search string matches in the content are still being used to improve the sorting.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Overall, not looking likely for 3.5. This is something that needs further review and needs to land early. Also, unit tests...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's pity. Our search has been pretty bad for a very long time, look at when this ticket was opened :)
&lt;/p&gt;
&lt;p&gt;
The proposed patch makes it many times better both for the site visitors and for the admin. I know the SQL may look scary at first but it's just a simple MySQL functionality. It's not more complicated that a join or a subquery.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22243 (Failure notice if can't write to uploads folder in new Media uploader) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:56:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22243#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22243#comment:1/1350845792405041</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>21870.2.diff attached to Ticket #21870</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:18:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/21870/21870.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/21870/21870.2.diff/1350843514417527</guid>
      <description>&lt;p&gt;
As per the previous talk, forking open the discussed can of worms and removing the error control operator from mysql_query.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #19845 (Drag and drop files into the Visual Editor) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:12:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/19845#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/19845#comment:25/1350843173537901</guid>
      <description>&lt;p&gt;
Been thinking/testing different approaches for the last couple of weeks. This is a nice-to-have, "flashy" feature but when using it for a while there are few things that aren't very good:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Works only in Firefox, WebKit and IE10+. That excludes about 30% of the users. It is possible to make it work for single file in older IE and Opera but is too hacky: need to overlay the editor iframe with an &amp;lt;input type=file /&amp;gt; that is in a separate form on dragenter, then submit that form on change. Of course there will be no progress bar then.
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;It is somewhat awkward to use. For the users to be able to drag files from the desktop to the browser window to the editor, they would need to resize the browser window to look for the files under it or to open another OS window containing the files that will overlay the browser. In both cases the users would "loose" their previous working area.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;
&lt;p&gt;
When using the standard uploader that's not as bad since the only purpose there is uploading. When typing a post/using the editor this doesn't feel right.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;When a file is dragged to the editor iframe there is an indication (the caret is shown) of where the file would be dropped. However the caret position is actually not changed, so after dropping the file it is inserted at the previous caret location. Tried to find a workaround  but seems impossible.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In that terms I'm 50/50 on whether this should be in core or implemented by a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22243 (Failure notice if can't write to uploads folder in new Media uploader) created</title>
      
        <dc:creator>tw2113</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22243</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22243/1350843137601475</guid>
      <description>&lt;p&gt;
Currently there is no indication of failure to write to the uploads directory in the new Media uploader view Add/Edit Post. When the permissions are enough, the images will show up in the lightbox. However, when I don't have enough permissions to write to the folder, the images just disappear without any indication of why.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11515 (Admin needs standardized way of handling messages (notices) displayed ...) updated</title>
      
        <dc:creator>nvwd</dc:creator>

      <pubDate>Sun, 21 Oct 2012 18:08:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11515#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11515#comment:17/1350842934084175</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:57:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:29/1350842275000054</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/20258#comment:28" title="Comment 28"&gt;cliffpaulick&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, 3.5's media uploader and gallery checkboxes are cool, but 3.5 doesn't include a "gallery creator" outside of a post.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That sounds like something outside of both this ticket and the work for 3.5, which is focused on the overlay workflow when editing a post. Not saying that it's not an idea for the future, but I don't know that they're really all that related.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21809 (Edit galleries in the media modal) updated</title>
      
        <dc:creator>aesqe</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:36:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21809#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21809#comment:27/1350840987151333</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21605 (Fix TinyMCE statusbar styling) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:36:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21605#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21605#comment:9/1350840967528155</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21605#comment:8" title="Comment 8"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But, I'd rather just get rid of path...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We've had the path since adding TinyMCE. It is an "advanced" feature but also the only way to select the outer element when several blocks are nested. For example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;p&amp;gt;Some text&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;
&lt;/pre&gt;&lt;p&gt;
The bug described in this ticket seems to be extremely rare. It happens only when several block are nested and each has multiple long-ish class names. I've triggered it while testing/working on the prototype code for the TinyMCE Views but never seen it in a normal post.
&lt;/p&gt;
&lt;p&gt;
Best way to fix this would be to do it with css, however it can only truncate the end of the string, not the beginning. Another option would be not to show the class names or to show only the first when there are several.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16567 (Can't create categories with different names but similar slugs on Edit ...) updated</title>
      
        <dc:creator>ericlewis</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:31:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16567#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16567#comment:14/1350840680930937</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16567#comment:13" title="Comment 13"&gt;technosailor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16567#comment:12" title="Comment 12"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/16567#comment:11" title="Comment 11"&gt;technosailor&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't agree that wp_insert_term should be where the checks are happening. It adds a potentially unneeded query. We should not be doing wp_insert_term if term_exists.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Quite the contrary, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/16567/16567.2.diff" title="Attachment '16567.2.diff' in Ticket #16567"&gt;16567.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/16567/16567.2.diff" title="Download"&gt;â€‹&lt;/a&gt; prevents &lt;code&gt;term_exists()&lt;/code&gt; from being called twice if the term does not exist, since &lt;code&gt;wp_insert_term()&lt;/code&gt; calls it anyway.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then &lt;code&gt;wp_insert_term()&lt;/code&gt; shouldn't be calling it. We shouldn't be doing an insert if there is a collision as that adds a DB call.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Changing the functionality of wp_insert_term seems out of the scope of this ticket.
&lt;/p&gt;
&lt;p&gt;
16567.2.diff works for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>cliffpaulick</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:28/1350840456053702</guid>
      <description>&lt;p&gt;
Yes, 3.5's media uploader and gallery checkboxes are cool, but 3.5 doesn't include a "gallery creator" outside of a post. I added a comment on the ticket you linked to, expanding this thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21390 (Upload/Insert media revamp) updated</title>
      
        <dc:creator>cliffpaulick</dc:creator>

      <pubDate>Sun, 21 Oct 2012 17:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21390#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21390#comment:12/1350840427647360</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I really like 3.5's improved uploader/organizer, but I'd like to see a post-independent 'gallery manager' sort of tab under Media menu. This would serve for creating custom galleries and inserting them into any/multiple post(s). Additionally the same attachment ID (e.g. /wp-content/uploads/picture.jpg) could include the Media manager's default title, alt, and caption attributes or, within each gallery, these 3 attributes could be customized while still serving the same picture.jpg. It'd be good to detect which posts each gallery is inserted into as well (so you don't edit/delete a gallery that is still in use somewhere you didn't expect).
&lt;/p&gt;
&lt;p&gt;
Thanks for all your hard work. Hope my suggestions help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22242 (Automatically set the email for the trac account after logging in) created</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 21 Oct 2012 15:51:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22242</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22242/1350834667977225</guid>
      <description>&lt;p&gt;
The trac installs use the credentials from wordpress.org.
&lt;/p&gt;
&lt;p&gt;
However, after you log in, you need to set your email address manually to get notifications from trac.
&lt;/p&gt;
&lt;p&gt;
I think we'd have a lot less tickets with 'reporter-feedback' hanging around if the email address was automatically populated after a user first logged into trac.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>helenyhou</dc:creator>

      <pubDate>Sun, 21 Oct 2012 15:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:27/1350832018345002</guid>
      <description>&lt;p&gt;
Thinking what's happening with media in 3.5 (&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21390" title="#21390: task (blessed): Upload/Insert media revamp (closed: fixed)"&gt;#21390&lt;/a&gt;) takes care of the include part, and exclude may not be as relevant anymore.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22173 (media uploader closes when adding a featured image) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 21 Oct 2012 11:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22173#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22173#comment:3/1350818501211990</guid>
      <description>fixed</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Oct 2012 10:20:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:2/1350814831239014</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21283" title="#21283: defect (bug): Keyboard focus in the theme customizer should be on left options panel (closed: fixed)"&gt;#21283&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21283 (Keyboard focus in the theme customizer should be on left options panel) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 21 Oct 2012 10:20:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21283#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21283#comment:24/1350814828833613</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/22237" title="#22237: enhancement: Add keyboard shortcuts for collapse/expand, panel-back, and close to ... (closed: fixed)"&gt;#22237&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22241 (inconsistence with transition_post_status with CPT) created</title>
      
        <dc:creator>thomask</dc:creator>

      <pubDate>Sun, 21 Oct 2012 10:03:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22241</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22241/1350813811686863</guid>
      <description>&lt;p&gt;
im playing with transition_post_status filter and it seems it returns different values for posts+pages and for custom post types - for posts and pages it hase those values:
new_status:inherit
old_status:new
&lt;/p&gt;
&lt;p&gt;
and the $post is the auto draft. Then this function is called twice, secondly for the saved post with new post status
&lt;/p&gt;
&lt;p&gt;
for CPT it returns the actual old status and new status and $post is the actual post and it is called just once
&lt;/p&gt;
&lt;p&gt;
actually I prefer the way it works for CPT as it actualy returns the old and new post status, what should be the proper function. But it seems, that the problem is somewhere deeper, e.g. that you are saving posts&amp;amp;pages twice, but not doing it for CPT
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #20258 (Add UI for gallery include/exclude) updated</title>
      
        <dc:creator>cliffpaulick</dc:creator>

      <pubDate>Sun, 21 Oct 2012 07:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20258#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20258#comment:26/1350803446582580</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This functionality is exactly what I'm looking for. I hope it gets added. (following)
I think "galleries" could even be its own sub-menu item under Media (i.e. disconnected from any post). We could create galleries and then use the media button to pick which pre-created gallery we want to insert.
In the gallery manager sub-menu item, it could tell you which posts each gallery is added to so you know if you want to edit/delete it without doing something you regret.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22238 (HiDPI support for non-webkit browsers) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 04:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22238#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22238#comment:1/1350794449606180</guid>
      <description>&lt;p&gt;
I accidentally messed up the webkit line in the first patch, silly copy-paste error. Fixed in .2
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22238.2.diff attached to Ticket #22238</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 04:38:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22238/22238.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22238/22238.2.diff/1350794331142060</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #20778 (get_temp_dir should use the system tmp directory as first choice) reopened</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/20778#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/20778#comment:28/1350791915575425</guid>
      <description>&lt;p&gt;
This could have caused &lt;a class="ext-link" href="http://wordpress.org/support/topic/unable-to-update-2?replies=1"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/topic/unable-to-update-2?replies=1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Looking at the report, &lt;code&gt;'C:\WINDOWS\TEMP\/wordpress-latest.tmp'&lt;/code&gt; contains a &lt;strong&gt;\/&lt;/strong&gt; as a path delimiter, that condition seems to be causing the problem here.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>22240.diff attached to Ticket #22240</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22240/22240.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22240/22240.diff/1350791482664931</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22240 (HiDPI graphic missed for Menu dropdown) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:51:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22240</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22240/1350791469068012</guid>
      <description>&lt;p&gt;
As reported in: &lt;a class="ext-link" href="http://wordpress.org/support/topic/menu-not-retina"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://wordpress.org/support/topic/menu-not-retina&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While most all assets are using retina, if you attemp to edit a menu under appearance &amp;gt; menus and then click on the arrow to see more info about a menu item the arrow used is non retina
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Attached patch also prefixes the :hover variant of the link, I have no idea why it's not prefixed, but with such a generic class name, I thought it best to add it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22239 (wp_ob_end_flush_all() tries to destroy non-destroyable output buffers) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22239#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22239#comment:2/1350790099434488</guid>
      <description>&lt;p&gt;
One option is to just silence the PHP Notice to get the message out of developers faces.. (Ignore the extra &lt;code&gt;ob&lt;/code&gt; in the diff..)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22239.diff attached to Ticket #22239</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:27:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22239/22239.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22239/22239.diff/1350790048891306</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22239 (wp_ob_end_flush_all() tries to destroy non-destroyable output buffers) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:21:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22239#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22239#comment:1/1350789680341265</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22239 (wp_ob_end_flush_all() tries to destroy non-destroyable output buffers) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:20:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22239</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22239/1350789647535113</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_ob_end_flush_all()&lt;/code&gt; currently tries to flush &amp;amp; destroy every PHP Output buffer that is enabled on the current installation.
However, not every type of PHP Output buffer can be destroyed, which will cause a PHP Notice when attempts to do so are made.
An example of this is PHP extensions such as New Relic, or PHP output buffers created with the &lt;code&gt;$erase&lt;/code&gt; flag set to false in &lt;code&gt;ob_start()&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
An example is when New Relic is installed on a host, also &lt;a class="ext-link" href="https://newrelic.com/docs/php/php-agent-faq#rum-obclean"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;see New Relics FAQ entry&lt;/a&gt; on the issue.
&lt;/p&gt;
&lt;pre class="wiki"&gt;( ! ) Notice: ob_end_flush(): failed to send buffer of New Relic auto-RUM (1) in ../trunk/wp-includes/functions.php on line 2641
Call Stack
#	Time	Memory	Function	Location
1	0.8510	4328360	shutdown_action_hook( )	../load.php:0
2	0.8510	4328440	do_action( )	../load.php:556
3	0.8510	4329856	call_user_func_array ( )	../plugin.php:406
4	0.8510	4329888	wp_ob_end_flush_all( )	../plugin.php:406
5	0.8511	4330064	ob_end_flush ( )	../functions.php:2641
&lt;/pre&gt;&lt;p&gt;
Somewhat similar to &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18239" title="#18239: defect (bug): wp_ob_end_flush_all() hangs the output buffering, during plugin ... (new)"&gt;#18239&lt;/a&gt;
I'm not sure of what the ideal solution for this would be for WordPress, but wanted to record the issue being known.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>22238.diff attached to Ticket #22238</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:05:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22238/22238.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22238/22238.diff/1350788702126526</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22238 (HiDPI support for non-webkit browsers) created</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:04:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22238</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22238/1350788662946869</guid>
      <description>&lt;p&gt;
As a follow on to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/21019" title="#21019: task (blessed): Retina All the Things (closed: fixed)"&gt;#21019&lt;/a&gt;, we should reconsider support for non-webkit browsers for HiDPI displays.
Currently, we only use &lt;code&gt;-webkit-min-device-pixel-ratio&lt;/code&gt; in the media queries as per comments 80 through 87 in the previous ticket.
&lt;/p&gt;
&lt;p&gt;
The discussion centering around using only the webkit selector started 3 months ago, a time when only webkit properly supported HiDPI graphics.
Now we have Firefox as well as Opera which support it.
&lt;/p&gt;
&lt;p&gt;
Firefox 18 (End of year) will support it through &lt;code&gt;moz--min-device-pixel-ratio: 1.5&lt;/code&gt; CSS selector, and Opera (Desktop: 12.10 in beta, Mobile latest stable supports it) supports it via &lt;code&gt;-o-min-device-pixel-ratio: 3/2&lt;/code&gt; CSS selector.
&lt;/p&gt;
&lt;p&gt;
As we use vendor prefixes elsewhere (for example, rounded corners) we should also support the wide range of browsers vendor prefixes, as well as the standard fall back to the non-vendor prefix.
&lt;/p&gt;
&lt;p&gt;
Attached is a patch based on the above, and the (small) discussion on the previous ticket. I have only tested it on a Mac w/ non-HiDPI Screen &amp;amp; Opera / Chrome, and on Opera Mobile on a HiDPI screen. Both work as expected.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) updated</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Sun, 21 Oct 2012 03:00:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237#comment:1/1350788405397845</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22237 (Add keyboard shortcuts for collapse/expand, panel-back, and close to ...) created</title>
      
        <dc:creator>designsimply</dc:creator>

      <pubDate>Sun, 21 Oct 2012 02:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22237</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22237/1350788371833695</guid>
      <description>&lt;p&gt;
Can we add a keyboard shortcut to the customizer for collapsing/expanding the left panel?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>