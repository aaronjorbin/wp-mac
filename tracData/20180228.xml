<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #42390 (TinyMCE + Edge input:focus placeholders disappear) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 23:04:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42390#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42390#comment:19/1519859077734342</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
As per @Clorith 's comment I'd propose to move this ticket to 5.0.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41858 (Improve the list table pagination links color contrast) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:59:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41858#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41858#comment:17/1519858773869665</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1519858771000538"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43444 (CSS Editor Error Not Displaying Correctly) created</title>
      
        <dc:creator>nistuj817</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43444</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43444/1519858514580858</guid>
      <description>&lt;p&gt;
Every time I’m making a change in the custom CSS I get this annoying message that should only appear when I’m ready to publish changes. When I click publish and there’s errors, that’s when this notification needs to appear. I get it when I’m in the process of editing CSS and it always throws off my position when and I lose the location of where I was editing. It’s even worse when Inspect Element is pulled up.
&lt;/p&gt;
&lt;p&gt;
It should ONLY be giving me an error message when I’m going to publish the CSS changes. It’s literally notifying me of errors when I’m not finished editing the CSS. When I click “Publish” it needs to be notifying me of errors and then to confirm, not make me lose my placement and give me an error when I’m not even finished writing out what I need to…
&lt;/p&gt;
&lt;p&gt;
Screen capture: &lt;a class="ext-link" href="https://www.youtube.com/watch?v=cWyD4cYfpEA"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.youtube.com/watch?v=cWyD4cYfpEA&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42057 (Add ability to pass a label for the &lt;form&gt; element returned by ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:52:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42057#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42057#comment:14/1519858337362164</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #38677,​43376,​43382 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=38677%2C43376%2C43382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=38677%2C43376%2C43382/1519857360633157</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42767" title="Accessibility: Change the comments &amp;#34;Quick Edit&amp;#34; and &amp;#34;Reply&amp;#34; links to ..."&gt;42767&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Change the comments "Quick Edit" and "Reply" links to buttons.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For better accessibility and semantics, user interface controls that perform an&lt;br /&gt;
action should be buttons. Links should exclusively be used for navigation.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Cheffeid, audrasjb, afercia.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43382" title="#43382: enhancement: Terms list table: the Quick Edit link should be a button (closed: fixed)"&gt;#43382&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38677" title="#38677: enhancement: Semantic elements for non-link links: class-wp-posts-list-table.php (closed: fixed)"&gt;#38677&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43376" title="#43376: defect (bug): Semantic elements for non-link links: class-wp-comments-list-table.php (assigned)"&gt;#43376&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [42767]: Accessibility: Change the comments "Quick Edit" and "Reply" links to ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:36:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42767</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42767/1519857360166267</guid>
      <description>&lt;p&gt;
Accessibility: Change the comments "Quick Edit" and "Reply" links to buttons.
&lt;/p&gt;
&lt;p&gt;
For better accessibility and semantics, user interface controls that perform an
action should be buttons. Links should exclusively be used for navigation.
&lt;/p&gt;
&lt;p&gt;
Props Cheffeid, audrasjb, afercia.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43382" title="#43382: enhancement: Terms list table: the Quick Edit link should be a button (closed: fixed)"&gt;#43382&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38677" title="#38677: enhancement: Semantic elements for non-link links: class-wp-posts-list-table.php (closed: fixed)"&gt;#38677&lt;/a&gt;.
Fixes &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/43376" title="#43376: defect (bug): Semantic elements for non-link links: class-wp-comments-list-table.php (assigned)"&gt;#43376&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #28112 (bulk_edit_posts() function needs an action hook) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:20:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28112#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28112#comment:10/1519856419436860</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17025 (wp_list_authors() is not filterable) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:19:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17025#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17025#comment:25/1519856376735300</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40810 (wp_mail fails to send email on WP auto update when wp-cron is called ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:18:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40810#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40810#comment:14/1519856300031903</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14148 (wp_get_attachment_url() is not url encoding) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:17:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14148#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14148#comment:15/1519856271723950</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42855 (Add ability to filter header, sidebar, searchform, footer and ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:11:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42855#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42855#comment:13/1519855914290926</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42855#comment:12" title="Comment 12"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm saying that they would not be accomplished by filtering the part name, as proposed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am sorry but I have to disagree with that.  But I will instead discuss actions as they work for me as well, assuming they are provided with the name of the "post" template file that was loaded.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
so the current method would be to know the order they are called in so that the next one can do the finish work on the previous.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have done that before for sites when force. But from experience it is very fragile and often conflicts with other plugins. Certainly you are not advocating for this?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or, add an action for &lt;code&gt;all&lt;/code&gt;, and apply logic to the action names that start with &lt;code&gt;get_template_part&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Using the &lt;code&gt;all&lt;/code&gt; action is an anti-pattern because it requires processing for every single hook on a page load, which can measure in the thousands.
&lt;/p&gt;
&lt;p&gt;
If the &lt;code&gt;all&lt;/code&gt; action were sufficient, WordPress would not have added all the different hooks.  Certainly you are not advocating that we write plugins using the overhead of the &lt;code&gt;all&lt;/code&gt; action?
&lt;/p&gt;
&lt;p&gt;
Besides &lt;code&gt;all&lt;/code&gt; cannot see local variables such as the context often passed as parameters to hooks it is not even a substitute in many cases. Including these.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Or, any filtering of the HTML should be done on the client end.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Again, almost anything that needs a named action or filter could filter on the client end. That is handing the surgeon a sledgehammer when they ask for a scalpel, and it is also fraught with incompatibility with other plugins. Certainly you are not advocating for this?
&lt;/p&gt;
&lt;p&gt;
Can you please explain the explicit scenarios that you fear such that you are making proposals that can result in plugins breaking other plugins rather than concur that these hooks are needed and have been needed for a very long time?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34706 (Introduce an edit_post_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:01:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34706#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34706#comment:10/1519855299029203</guid>
      <description>&lt;p&gt;
removed the empty line ;-)
Now need only a check by others :-D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34706.2.diff attached to Ticket #34706</title>
      
        <dc:creator>Mte90</dc:creator>

      <pubDate>Wed, 28 Feb 2018 22:01:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34706/34706.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34706/34706.2.diff/1519855268136321</guid>
      <description>&lt;p&gt;
without empy line
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34706 (Introduce an edit_post_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:57:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34706#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34706#comment:9/1519855053345970</guid>
      <description>&lt;p&gt;
Thanks @danieltj I'll leave this in @Mte90's trusted hands
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34706 (Introduce an edit_post_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:55:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34706#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34706#comment:8/1519854934064958</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34706#comment:7" title="Comment 7"&gt;garrett-eclipse&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks @Mte90 for taking this on, sorry I didn't take a stab at it haven't had time outside of work since I had kids.
&lt;/p&gt;
&lt;p&gt;
The patch looks great.
&lt;/p&gt;
&lt;p&gt;
And I think the main benefit on this hook just like the save_post is to allow for cleaner code without the post_type conditional check.
&lt;/p&gt;
&lt;p&gt;
An excerpt explaining from here;
&lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Action_Reference/save_post"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Action_Reference/save_post&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
NOTE: As of WP 3.7, an alternative action has been introduced, which is called for specific post types: save_post_{post_type}. &amp;gt;Hooking to this action you wouldn't have to check on the post type (ie: if ( $slug != $_POST&lt;a class="missing wiki"&gt;post_type?&lt;/a&gt; ) in the sample above).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hope that's helpful in determining if this should push forward
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All I'd say then is remove the blank line break immediately after the if statement and this hook looks ready to go. My only concern was the number of hooks already available due to the post object being available.
&lt;/p&gt;
&lt;p&gt;
Feel free to remove the close tag, the patch itself is fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42855 (Add ability to filter header, sidebar, searchform, footer and ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:52:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42855#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42855#comment:12/1519854752160835</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42855#comment:9" title="Comment 9"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why can you not see the need to make the output of a theme valid AMP?  Why not for JSON?  Why not for Unit Testing?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not saying that your use cases should not be done, I'm saying that they would not be accomplished by filtering the part name, as proposed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
They would be better done as action hooks, which already exist for these functions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"pre" action hooks exist, but "post" action hooks do not.
So are you saying you would join us in advocating for post action hooks to be added to these functions?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, each of the specific functions has a a "pre" action hook (like &lt;code&gt;get_header&lt;/code&gt; and &lt;code&gt;get_footer&lt;/code&gt;), but nothing after the template part is finished, so the current method would be to know the order they are called in so that the next one can do the finish work on the previous.
Or, add an action for &lt;code&gt;all&lt;/code&gt;, and apply logic to the action names that start with &lt;code&gt;get_template_part&lt;/code&gt;.
Or, any filtering of the HTML should be done on the client end.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34706 (Introduce an edit_post_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>garrett-eclipse</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:52:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34706#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34706#comment:7/1519854735055409</guid>
      <description>&lt;p&gt;
Thanks @Mte90 for taking this on, sorry I didn't take a stab at it haven't had time outside of work since I had kids.
&lt;/p&gt;
&lt;p&gt;
The patch looks great.
&lt;/p&gt;
&lt;p&gt;
And I think the main benefit on this hook just like the save_post is to allow for cleaner code without the post_type conditional check.
&lt;/p&gt;
&lt;p&gt;
An excerpt explaining from here;
&lt;a class="ext-link" href="https://codex.wordpress.org/Plugin_API/Action_Reference/save_post"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Plugin_API/Action_Reference/save_post&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
NOTE: As of WP 3.7, an alternative action has been introduced, which is called for specific post types: save_post_{post_type}. &amp;gt;Hooking to this action you wouldn't have to check on the post type (ie: if ( $slug != $_POST&lt;a class="missing wiki"&gt;post_type?&lt;/a&gt; ) in the sample above).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hope that's helpful in determining if this should push forward
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18584 (Nav menus need more hooks for extensibility (on admin page &amp; in customizer)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:51:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18584#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18584#comment:92/1519854690254600</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by helgatheviking. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519854687000569"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15145 (Add a wp_list_users() template tag) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:50:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15145#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15145#comment:9/1519854645593671</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/15145/15145.2.diff" title="Attachment '15145.2.diff' in Ticket #15145"&gt;15145.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/15145/15145.2.diff" title="Download"&gt;​&lt;/a&gt; naming a variable &lt;code&gt;$return&lt;/code&gt; is potentially confusing, for better code readability I'd suggest to rename it. Also needs some minor coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17019 (add hooks for Media Library attachment counts) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17019#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17019#comment:48/1519854637729290</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519854635000192"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28112 (bulk_edit_posts() function needs an action hook) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28112#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28112#comment:9/1519854404711553</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15145 (Add a wp_list_users() template tag) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:46:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15145#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15145#comment:8/1519854399152995</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519854396000538"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34706 (Introduce an edit_post_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:43:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34706#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34706#comment:6/1519854217747396</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
After reviewing the state of this function within &lt;code&gt;post.php&lt;/code&gt;, I don't think there's a need for a new action here as the existing actions already provide enough to check what the post type is.
&lt;/p&gt;
&lt;p&gt;
In all honesty though, if this was added, I wouldn't have a problem but if you want to trigger an action when a Book (example custom post type) is updated, you could always do something to the effect of:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action( 'edit_post', 'my_edit_action', 10, 2 );
function my_edit_action( $post_id, $post ) {
    if ( 'book' == $post-&amp;gt;post_type ) {
        // do something now...
    }
}
&lt;/pre&gt;&lt;p&gt;
Also, the &lt;code&gt;save_post&lt;/code&gt; and &lt;code&gt;save_post_{$post-&amp;gt;post_type}&lt;/code&gt; hooks are called irrespective of whether it's a post being saved or updated so they should both be able to be used here without issues.
&lt;/p&gt;
&lt;p&gt;
I'll recommend closing this, although feel free to reverse that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36661 (Improve `wp_get_attachment_image()` and ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:41:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36661#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36661#comment:6/1519854115755776</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519854113000261"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28112 (bulk_edit_posts() function needs an action hook) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28112#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28112#comment:8/1519854084663835</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/28112/28112.diff" title="Attachment '28112.diff' in Ticket #28112"&gt;28112.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/28112/28112.diff" title="Download"&gt;​&lt;/a&gt; the docblock needs some coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17025 (wp_list_authors() is not filterable) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17025#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17025#comment:24/1519854003255142</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17025/17025.optimizeforeach.diff" title="Attachment '17025.optimizeforeach.diff' in Ticket #17025"&gt;17025.optimizeforeach.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17025/17025.optimizeforeach.diff" title="Download"&gt;​&lt;/a&gt; needs some coding standards: spacing, empty lines should not have spaces, etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14148 (wp_get_attachment_url() is not url encoding) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14148#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14148#comment:14/1519853834127550</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/14148/14148.2.diff" title="Attachment '14148.2.diff' in Ticket #14148"&gt;14148.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/14148/14148.2.diff" title="Download"&gt;​&lt;/a&gt; needs some coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34706 (Introduce an edit_post_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:36:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34706#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34706#comment:5/1519853817680228</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28112 (bulk_edit_posts() function needs an action hook) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:36:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28112#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28112#comment:7/1519853791960927</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519853789000319"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17025 (wp_list_authors() is not filterable) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:36:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17025#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17025#comment:23/1519853770827594</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14148 (wp_get_attachment_url() is not url encoding) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14148#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14148#comment:13/1519853687452822</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17025 (wp_list_authors() is not filterable) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17025#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17025#comment:22/1519853645951298</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519853643000362"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40810 (wp_mail fails to send email on WP auto update when wp-cron is called ...) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:33:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40810#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40810#comment:13/1519853627333507</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40810/40810.diff" title="Attachment '40810.diff' in Ticket #40810"&gt;40810.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40810/40810.diff" title="Download"&gt;​&lt;/a&gt; needs some coding standards.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14148 (wp_get_attachment_url() is not url encoding) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14148#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14148#comment:12/1519853492212458</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519853489000363"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40810 (wp_mail fails to send email on WP auto update when wp-cron is called ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:30:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40810#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40810#comment:12/1519853407424343</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34706 (Introduce an edit_post_{$post-&gt;post_type} action) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:29:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34706#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34706#comment:4/1519853378375634</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519853375000675"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40810 (wp_mail fails to send email on WP auto update when wp-cron is called ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:28:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40810#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40810#comment:11/1519853311553583</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by mte90. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519853308000609"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4081 (Mark 2.0.10 and 2.1.3 complete and add a 2.1.4 milestone) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4081#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4081#comment:4/1519853251836035</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519853249000345"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43395 (Add Automated E2E Tests for Core Updates) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 21:11:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43395#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43395#comment:3/1519852271250016</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by jeffpaul. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519852268000295"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 20:50:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:2/1519851011567394</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519851008000669"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43400 (Update "WordPress News" widget references) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 20:44:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43400#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43400#comment:2/1519850675482739</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Assigning to mark the &lt;code&gt;good-first-bug&lt;/code&gt; as "claimed".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 20:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:4/1519849456338367</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43392#comment:3" title="Comment 3"&gt;diegoliv&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
We can easily save associative arrays already with &lt;code&gt;update_post_meta()&lt;/code&gt;. Just throw an array as the value and WP automatically saves it into a proper format (a serialized string) on the database. And using &lt;code&gt;get_post_meta()&lt;/code&gt;, your serialized array is automatically converted back into an array.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the exact bit that uses &lt;code&gt;maybe_unserialize()&lt;/code&gt;.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there any strong reason not to allow this same behavior for meta data updated through the REST API?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, if we want to avoid stuff like &lt;code&gt;maybe_json_decode()&lt;/code&gt; :)
&lt;/p&gt;
&lt;p&gt;
I wish there was an easy way to specify the format of an encoded string in the meta table, but there isn't. The only other option is to "guess" the encoding, which is..... subpar.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:41:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438#comment:1/1519846864537022</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43439 (&amp;_embed only embedding first 10 categories) updated</title>
      
        <dc:creator>manyourisms</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:36:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43439#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43439#comment:2/1519846579574831</guid>
      <description>&lt;p&gt;
Wunderbar! Thanks for the clarification on the categories endpoint, sorry to have missed that.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43439#comment:1" title="Comment 1"&gt;kadamwhite&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hitting the category link at &lt;code&gt;wp-json/wp/v2/categories?post=&amp;lt;postId&amp;gt;&lt;/code&gt; and receiving 10 responses is expected; collections maintain standard pagination behavior when using query parameters like &lt;code&gt;post=&lt;/code&gt;, so you can see the next page of responses with &lt;code&gt;&amp;amp;page=2&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Only permitting up to 10 records to be embedded, however, is unexpected. Good catch! The origin of the issue appears to be that we use the REST API internally to embed links collections, and these requests obey the REST API's standard 10-post collection response limit. I'd definitely consider changing this to work in a more predictable way.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43443 (Add a method for confirmation of requests for deleting or anonymizing ...) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:19:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43443</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43443/1519845583513356</guid>
      <description>&lt;p&gt;
To avoid misuse when a request is made to anonymize or delete personal data, we will need to have a simple way of confirming the user's intention.
&lt;/p&gt;
&lt;p&gt;
A good way would be to send an email to the user's known email address. That email will contain a link similar to the reset password link. When that link is clicked, we can send an email to the site's owner/admin informing them about the request.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40677 (Widgets page is not accessible for keyboard users) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:18:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40677#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40677#comment:12/1519845505057999</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've split the issues this ticket aims to solve in 2 separate patches.
&lt;/p&gt;
&lt;h2 id="Keyboardaccessibility"&gt;Keyboard accessibility&lt;/h2&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40677/40677.diff" title="Attachment '40677.diff' in Ticket #40677"&gt;40677.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40677/40677.diff" title="Download"&gt;​&lt;/a&gt; makes the left part of the Widgets screen (the "Available Widgets") operable with a keyboard, manages focus when appropriate, adds label and feedback for screen reader users, improves color contrast. I'm not saying this will make this screen fully accessible but it's an improvement. Looks good to me and it's contained in the &lt;code&gt;admin-widgets&lt;/code&gt; JS which doesn't touch the Customizer. I think it's ready for review and commit. Screenshot:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/v7KLwCCp7H.png"&gt;&lt;img src="https://cldup.com/v7KLwCCp7H.png" alt="https://cldup.com/v7KLwCCp7H.png" crossorigin="anonymous" title="https://cldup.com/v7KLwCCp7H.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id="Headings"&gt;Headings&lt;/h2&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40677/40677-headings.diff" title="Attachment '40677-headings.diff' in Ticket #40677"&gt;40677-headings.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40677/40677-headings.diff" title="Download"&gt;​&lt;/a&gt; it's just a proof of concept, please do not merge. Adding a new heading on the right, for example "Available Sidebars", would be trivial:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/9uqmLitQ-4.png"&gt;&lt;img src="https://cldup.com/9uqmLitQ-4.png" alt="https://cldup.com/9uqmLitQ-4.png" crossorigin="anonymous" title="https://cldup.com/9uqmLitQ-4.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However, all the headings below should be bumped up by one level. It's possible to do that in a slightly hacky way, which doesn't make me so happy. However, things get even more hacky because when adding a widget, or dragging a widget from the left column to the right one and vice-versa, then the widget heading should be changed on the fly, for example from a h3 to a h4 or vice-versa, in order to preserve a correct headings hierarchy. &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40677/40677-headings.diff" title="Attachment '40677-headings.diff' in Ticket #40677"&gt;40677-headings.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40677/40677-headings.diff" title="Download"&gt;​&lt;/a&gt; experiments this approach but I think it's extremely fragile, and I'm really not sure it should be done. Better ideas welcome.
&lt;/p&gt;
&lt;p&gt;
Off the top of my head, an alternative solution could be keeping the current headings unchanged and just prepend to the sidebar names some visually hidden text, for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;span class="screen-reader-text"&amp;gt;Available sidebar: &amp;lt;/span&amp;gt;Blog Sidebar
&amp;lt;span class="screen-reader-text"&amp;gt;Available sidebar: &amp;lt;/span&amp;gt;Footer 1
&amp;lt;span class="screen-reader-text"&amp;gt;Available sidebar: &amp;lt;/span&amp;gt;Footer 2
&lt;/pre&gt;&lt;h2 id="Lastpoint"&gt;Last point&lt;/h2&gt;
&lt;p&gt;
A couple fixes have already been implemented in previous WordPress releases. There's one thing left to do from the original points described in the ticket:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Widgets in areas can't be deactivated with keyboard because we need to drag them back. (Add a link "Deactivate" next to the "Delete" one.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'd recommend to split this in a separate ticket as I think it should be discussed with the Customizer and Design teams.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43442 (Add tools for anonymizing of commenters) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:12:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43442</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43442/1519845160779831</guid>
      <description>&lt;p&gt;
Site visitors and logged-in users that submit comments can request the removal of their personal data.
&lt;/p&gt;
&lt;p&gt;
Ideally we should provide tools for both anonymization of the comments and (easier) deletion of comments by email. Then the sire owner(s) would decide which method suits them best. There is a caveat that once anonymized, the comments cannot be attributed to any user and so a request to delete them will not be possible.
&lt;/p&gt;
&lt;p&gt;
To avoid misuse there should be a confirmation email sent to the commenter with a link similar to the reset password link. After clicking that link another email can be sent to the site owner(s) to perform the action.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #41074 (Create new Dashicons (4.9)) updated</title>
      
        <dc:creator>bahia0019</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41074#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41074#comment:45/1519845010722442</guid>
      <description>&lt;p&gt;
I've added an SVG icon for Instagram. It's formatted like the other SVGs.
I don't know the build process for the set. But I figure those smarter than me can finalize the adoption of it.
I recently had a need for it, and noticed that FB, Twitter, and G+ are all there, but Instagram wasn't. Figured it should be.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/dashicons/pull/272"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/pull/272&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Other people have asked for it as well:
&lt;a class="ext-link" href="https://github.com/WordPress/dashicons/issues/63"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/issues/63&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/dashicons/issues/12"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/issues/12&lt;/a&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/dashicons/issues/136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/dashicons/issues/136&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/34166"&gt;https://core.trac.wordpress.org/ticket/34166&lt;/a&gt;
&lt;a href="https://core.trac.wordpress.org/ticket/32568"&gt;https://core.trac.wordpress.org/ticket/32568&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #41191 (Create browse happy type notice for PHP versions) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:00:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/41191#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/41191#comment:41/1519844439979318</guid>
      <description>&lt;p&gt;
Yesterday, the new API structure was committed (see &lt;a class="ext-link" href="https://meta.trac.wordpress.org/changeset/6806"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://meta.trac.wordpress.org/changeset/6806&lt;/a&gt;). &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/41191/41191.5.diff" title="Attachment '41191.5.diff' in Ticket #41191"&gt;41191.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/41191/41191.5.diff" title="Download"&gt;​&lt;/a&gt; takes that change into account.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43439 (&amp;_embed only embedding first 10 categories) updated</title>
      
        <dc:creator>kadamwhite</dc:creator>

      <pubDate>Wed, 28 Feb 2018 19:00:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43439#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43439#comment:1/1519844434037796</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hitting the category link at &lt;code&gt;wp-json/wp/v2/categories?post=&amp;lt;postId&amp;gt;&lt;/code&gt; and receiving 10 responses is expected; collections maintain standard pagination behavior when using query parameters like &lt;code&gt;post=&lt;/code&gt;, so you can see the next page of responses with &lt;code&gt;&amp;amp;page=2&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Only permitting up to 10 records to be embedded, however, is unexpected. Good catch! The origin of the issue appears to be that we use the REST API internally to embed links collections, and these requests obey the REST API's standard 10-post collection response limit. I'd definitely consider changing this to work in a more predictable way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>41191.5.diff attached to Ticket #41191</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:56:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/41191/41191.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/41191/41191.5.diff/1519844176527700</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>40677-headings.diff attached to Ticket #40677</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:45:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40677/40677-headings.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40677/40677-headings.diff/1519843519734766</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>40677.diff attached to Ticket #40677</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:45:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/40677/40677.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/40677/40677.diff/1519843501843006</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14142 (Custom Walker class for navigation menus) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:27:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14142#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14142#comment:10/1519842456848871</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14142 (Custom Walker class for navigation menus) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14142#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14142#comment:9/1519842438086773</guid>
      <description>&lt;p&gt;
This has re-surfaced in &lt;a class="ext-link" href="https://wordpress.stackexchange.com/q/295461/8521"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.stackexchange.com/q/295461/8521&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43441 (WordPress News and Events widget: WordPress.org/news posts only show ...) created</title>
      
        <dc:creator>hlashbrooke</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:16:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43441</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43441/1519841788001638</guid>
      <description>&lt;p&gt;
In the WordPress News and Events widget, there is only ever one post shown at a time from the WordPress.org/news feed. This same rule doesn't appear to apply to other sources as I often see more than one post from WP Tavern, etc. displayed at a time.
&lt;/p&gt;
&lt;p&gt;
I'm guessing this was done because w.org/news only ever contained release posts and having more than one of those shown at a time was just unnecessary and potentially confusing. These days, however, w.org/news has more varied content - Month in WordPress posts, general announcements, etc.
&lt;/p&gt;
&lt;p&gt;
To give a practical example of where this has caused a problem - a few months ago the Month in WordPress post went out the day before a point release post, which then pushed the Month in WordPress post out of the widget. That month the views for the Month in WordPress were about 80% less than other months. Unfortunately, both of these types of posts are time-sensitive. Month in WordPress needs to be on 1st/2nd of the month and the release posts obviously need to be posted when the release goes out.
&lt;/p&gt;
&lt;p&gt;
I think it would be good if we removed the limitation that is placed on w.org/news to avoid these kinds of conflicts in the future.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:13:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440#comment:1/1519841591174847</guid>
      <description>&lt;p&gt;
As discussed in &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C9695RJBW/p1519836137000439"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; computer generated data like IDs, IP addresses, browser UAs, etc. are not data entered by the user, cannot be reused at another site, and should not be exported.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43440 (Add personal data from comments to personal data export) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 18:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43440</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43440/1519841485881658</guid>
      <description>&lt;p&gt;
The "right to data portability" in GDPR also applies to site visitors that submit comments. The personal data they provide is their name, email address and (optionally) site URL.
&lt;/p&gt;
&lt;p&gt;
For sites to be able to comply with the GDPR we will have to add tools (UI and a method) to both show that data and export it as JSON.
&lt;/p&gt;
&lt;p&gt;
As the only private data is the user email address, thinking that we don't need a confirmation and can simply email the data and the export file to the user at their email.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>many-categories.PNG attached to Ticket #43439</title>
      
        <dc:creator>manyourisms</dc:creator>

      <pubDate>Wed, 28 Feb 2018 17:58:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43439/many-categories.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43439/many-categories.PNG/1519840730109282</guid>
      <description>&lt;p&gt;
Edit post page showing much more than 10 categories for the post.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>10-categories.PNG attached to Ticket #43439</title>
      
        <dc:creator>manyourisms</dc:creator>

      <pubDate>Wed, 28 Feb 2018 17:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43439/10-categories.PNG</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43439/10-categories.PNG/1519840709651233</guid>
      <description>&lt;p&gt;
Response showing it only coming back with 10 categories
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43439 (&amp;_embed only embedding first 10 categories) created</title>
      
        <dc:creator>manyourisms</dc:creator>

      <pubDate>Wed, 28 Feb 2018 17:58:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43439</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43439/1519840686699104</guid>
      <description>&lt;p&gt;
Normally our posts don't have more than 10 categories, but I did notice that when adding more than 10 to a post, a query using &amp;amp;_embed still only embedding the first 10. After searching through the &lt;code&gt;class-wp-rest-server.php&lt;/code&gt; code, it doesn't seem like that should be the case, but alas! I'm too unfamiliar with how it is building the links for a post behind the scenes, but surely it must be happening there if I was to guess.
&lt;/p&gt;
&lt;p&gt;
Hitting the category link href at &lt;code&gt;wp-json/wp/v2/categories?post=&amp;lt;postId&amp;gt;&lt;/code&gt; also only returns 10 categories.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43438 (Add filters and Ajax support for personal data export) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 17:04:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43438</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43438/1519837463012607</guid>
      <description>&lt;p&gt;
It is a GDPR requirement that users should be able to export their private data from one site and (eventually) import/reuse it at another.
&lt;/p&gt;
&lt;p&gt;
As discussed in &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C9695RJBW/p1519836137000439"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt;, this is the data the users entered themselves like name, email, nickname, etc. This is not automatically generated data about the user like ID, IP addresses, browser UA (for comments), etc.
&lt;/p&gt;
&lt;p&gt;
All of this data is already available/visible on the user's profile screen. It also has to be downloadable in a common format like JSON.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43432 (Streamline tests with installation skips) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 16:40:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43432#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43432#comment:1/1519836038118166</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43437 (Add way for registered users to request deletion or anonymization of ...) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 16:04:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43437</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43437/1519833895030265</guid>
      <description>&lt;p&gt;
All registered users can edit or delete most of their data in WordPress like name, nickname, email, site, etc. The only exception is they cannot delete or anonymize their own account.
&lt;/p&gt;
&lt;p&gt;
Generally a registered user can contact an admin and request this, but it would be better to have a standard "procedure" to do that. It will need to be confirmed to avoid misuse.
&lt;/p&gt;
&lt;p&gt;
A good way to do that would be to have a simple button on the user profile screen where the user can request anonymization. Clicking it will email the user a confirmation link, similar to the password reset link. When clicked, it will load wp-admin again and will send email to the site admin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 15:51:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436#comment:1/1519833119866880</guid>
      <description>&lt;p&gt;
Good text for that would probably be:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Save my name, email and site URL in my browser for next time I post a comment.
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43436 (Add opt-in for commenter cookies) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 15:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43436</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43436/1519832728965291</guid>
      <description>&lt;p&gt;
The commenter cookies are a good example of data stored for "convenience". They are not essential, used only to pre-fill the name, email and URL fields of the comment form when the commenter intends to post another comment.
&lt;/p&gt;
&lt;p&gt;
We should add a checkbox to the comments form that will inform the commenter about the cookies and act as opt-in.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 15:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:56/1519832017457607</guid>
      <description>wontfix: &lt;blockquote class="citation"&gt;
&lt;p&gt;
In this instance, @afercia is the person who makes this decision, as one of the Accessibility experts who works on WordPress Core.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Just to clarify I'm the person who's commenting here, but this ticket has been discussed publicly during two accessibility team meetings and the decision was based on a large consensus.
&lt;/p&gt;
&lt;p&gt;
@s3w47m88 I'm not opposed to continue the conversation, if that happens with a respectful, relaxed tone and helps to clarify the issue to everyone. Most of your examples are not conforming, as they're not a "sample value or a brief description of the expected &lt;strong&gt;format&lt;/strong&gt;" with the exception of the email but one could argue that a generic email example doesn't represent the user's email format which could be completely different.
&lt;/p&gt;
&lt;pre class="wiki"&gt;"John Doe"
"Username Here"
"********"
"12 Character Password Here"
"Password is Found In Your Email"
&lt;/pre&gt;&lt;p&gt;
None of those is an example of the expected format (we could debate on "12 Character Password Here").
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There has been NO evidence to support that this has any negative impact
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It has a big impact on the way assistive technologies report these fields to users, and the only guarantee to provide correct information to all users is to meet the specifications. I'd say it impacts also sighted users, as the information provided in a placeholder disappears as soon as you start typing.
&lt;/p&gt;
&lt;p&gt;
As @dd32 pointed out, when there's the need to provide lengthy login details to users, then probably the best way to do that is to put that info in plain text before the login form. Not certainly in the placeholders, since they have a different purpose.
&lt;/p&gt;
&lt;p&gt;
Any software is opinionated, and sometimes there's the need to make assumptions for the greater good. Worth reminding WordPress is already doing this in a lot of places, allowing only certain HTML elements, attributes, and sometimes also checking the attributes value.
&lt;/p&gt;
&lt;p&gt;
Overall I feel we're going in circles and all the argumentations have been clearly explained.
&lt;/p&gt;
&lt;p&gt;
As said, please don't re-open tickets that have been closed by a Core Committer especially when tickets have been largely discussed. Tickets statuses, keywords, tags. etc. are used to generate the Trac reports for managing and triaging tickets and they impact the tickets management flow.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 15:32:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:3/1519831957399478</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43435#comment:2" title="Comment 2"&gt;danieltj&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Would this overwrite existing Privacy Policy pages created through the standard Pages section of &lt;code&gt;wp-admin&lt;/code&gt;?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
No. This ticket is mostly about the mechanism of creating a privacy policy, how to include plugins data in it, and where plugins would display that data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43389 (Add a privacy policy page setting to options-reading.php) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 15:26:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43389#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43389#comment:5/1519831576569100</guid>
      <description>&lt;p&gt;
I'm not convinced we need another "special" page for the privacy policy. These are too complex to implement, have too many edge cases, too many rules that don't make sense for most users that make them hard to set and use.
&lt;/p&gt;
&lt;p&gt;
On the other hand having a WP page will ensure the theme displays it properly.
&lt;/p&gt;
&lt;p&gt;
Perhaps we can use a standard page. It will be created automatically when the site owner creates a privacy policy, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;. We can set the title and the slug according to the site's language. Then we can have &lt;code&gt;get_privacy_policy_content()&lt;/code&gt; that will output the policy text the user created. Can even do it with a shortcode :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>richardkentgates</dc:creator>

      <pubDate>Wed, 28 Feb 2018 14:45:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:55/1519829146295476</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40462#comment:54" title="Comment 54"&gt;s3w47m88&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am still very unclear about something here.
&lt;/p&gt;
&lt;p&gt;
@pento @afercia and @dd32 each of you have repeatidly stated that this ticket's objective is to replace labels with placeholders.
&lt;/p&gt;
&lt;p&gt;
And although it seems @ramiy indicated he does that, that's not what myself, (or from what I've read:) @richardkentgates @johnbillion or @voldemortensen are suggesting, asking or intending.
&lt;/p&gt;
&lt;p&gt;
Do you guys just assume that if you allow developers to specify a Placeholder value it's going to lead to eliminating Label values? Or am I overlooking something with this ticket that is stating it is removing Labels and / or encouraging removing Labels?
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not worth pursuing.
&lt;/p&gt;
&lt;p&gt;
I am new to the WordPress Codex but from what I can tell, I can use wp_authenticate() to submit my own forms. If that isn't the correct function to call, please advise.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 14:33:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:10/1519828409862494</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Wed, 28 Feb 2018 14:28:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:9/1519828095784942</guid>
      <description>&lt;p&gt;
@mukesh27 generally, it's a good practice to keep links out from the translatable strings using sprintf() as gou suggested, but as @SergeyBiryukov pointed out, all the links to the Codex pages need to be translatable. Sometimes, the codex pages have versions in different languages. Translators need a way to change the link to point to the one in their language, if they want.
For example:
&lt;a class="ext-link" href="https://codex.wordpress.org/Users_Screen"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/Users_Screen&lt;/a&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/zh-cn:%E7%94%A8%E6%88%B7%E9%A1%B5%E9%9D%A2"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/zh-cn:%E7%94%A8%E6%88%B7%E9%A1%B5%E9%9D%A2&lt;/a&gt;
&lt;a class="ext-link" href="https://codex.wordpress.org/pt-br:SubPainel_Todos_os_Usu%C3%A1rios"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/pt-br:SubPainel_Todos_os_Usu%C3%A1rios&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 28 Feb 2018 14:01:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:8/1519826508918875</guid>
      <description>&lt;p&gt;
@mukesh27
There is already a &lt;code&gt;__( )&lt;/code&gt; function, which is already used for translation.
No need to &lt;code&gt;sprintf( )&lt;/code&gt; here. See &lt;a class="ext-link" href="https://developer.wordpress.org/reference/functions/__/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/reference/functions/__/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>danieltj</dc:creator>

      <pubDate>Wed, 28 Feb 2018 14:00:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:2/1519826447698163</guid>
      <description>&lt;p&gt;
Would this overwrite existing Privacy Policy pages created through the standard Pages section of &lt;code&gt;wp-admin&lt;/code&gt;? This seems like it would have some overlap with the Meta (more so Plugins) team to ensure plugins that collect any data disclose the fact. I think the main onus is on the site owner, however I think some reasonable steps should be made in ensuring plugins hook into some kind of Privacy screen and disclose what information is sent.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42772 (Have a way to turn off autocomplete of tags in Custom HTML widget) updated</title>
      
        <dc:creator>AndrewKantor</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:41:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42772#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42772#comment:3/1519825319660292</guid>
      <description>&lt;p&gt;
I second this. It's incredibly annoying, especially as it's a relatively new widget and even suggests that users migrate to it from the standard text widget. If you do migrate, you're likely to need to &lt;em&gt;edit&lt;/em&gt; the text, not write from scratch.
&lt;/p&gt;
&lt;p&gt;
Not only is the forced autocomplete annoying, as soon as you start to type the closing tag it autofills it. So I end up with &amp;lt;p&amp;gt;Whatever text&amp;lt;/p&amp;gt;p&amp;gt; because I'm typing that closing tag.
&lt;/p&gt;
&lt;p&gt;
(Honestly it's a great &lt;em&gt;idea&lt;/em&gt;, just a poor implementation. It only works well if you're typing from scratch, not if you're looking to re-use content. It needs a way to turn of autocomplete.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42082 (Support compare custom fields in WP_Meta_Query) updated</title>
      
        <dc:creator>mariovalney</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:32:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42082#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42082#comment:1/1519824759397647</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Fixing the proposed example (the parametes should be the key, not the value):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'key'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'meta_key_one'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'value'&lt;/span&gt;     &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'meta_key_two'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'compare'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'type'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'META_VALUE'&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And proposing another approach to keep consistency in 'type' parameter (because its values are SQL data types) maybe we can add a new parameter (which will be ignored if "value" is presented):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'key'&lt;/span&gt;       &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'meta_key_one'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'value_of'&lt;/span&gt;  &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'meta_key_two'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'compare'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'type'&lt;/span&gt;      &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'NUMERIC'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43389 (Add a privacy policy page setting to options-reading.php) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:31:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43389#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43389#comment:4/1519824691794862</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43435" title="#43435: enhancement: Add settings screen for creating a privacy policy (closed: fixed)"&gt;#43435&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:25:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435#comment:1/1519824322634371</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43389" title="#43389: feature request: Add a privacy policy page setting to options-reading.php (closed: wontfix)"&gt;#43389&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
In slack we discussed few options for this. IMHO the plugins should provide all details, but the site owner(s) should compose and edit the privacy policy. This has several advantages:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Remove duplicates and generally ensure better wording and grammar.
&lt;/li&gt;&lt;li&gt;As parts of the info will be outputted by plugins, it may not be translated in all languages. A site owner will be able to translate and incorporate it.
&lt;/li&gt;&lt;li&gt;Site owners will be able to get legal advice on the whole content of the policy.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:23:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:7/1519824195450019</guid>
      <description>&lt;p&gt;
Why you are close this ticket as we have to add sprintf for translation. understood for target
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43434#comment:5" title="Comment 5"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @mukesh27, welcome to WordPress Trac! Thanks for the patch.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The Codex links need to remain translatable, see &lt;a class="ext-link" href="https://codex.wordpress.org/pt-br:SubPainel_Todos_os_Usuários"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/pt-br:SubPainel_Todos_os_Usuários&lt;/a&gt; for example.
&lt;/li&gt;&lt;li&gt;As per &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23432" title="#23432: task (blessed): Review usage of target=&amp;#34;_blank&amp;#34; in the admin (assigned)"&gt;#23432&lt;/a&gt;, we rather strive to remove usage of &lt;code&gt;target="_blank"&lt;/code&gt;, see &lt;a href="https://core.trac.wordpress.org/query?keywords=~target-blank"&gt;https://core.trac.wordpress.org/query?keywords=~target-blank&lt;/a&gt; for related tickets.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43435 (Add settings screen for creating a privacy policy) created</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:22:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43435</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43435/1519824162533328</guid>
      <description>&lt;p&gt;
Add a page under the Tools menu to make it easier to create comprehensive privacy policy.
&lt;/p&gt;
&lt;p&gt;
By default WordPress doesn't collect any data from visitors unless they post a comment. However many plugins add third party services that collect visitor data. Also most embeds may collect data or add cookies (including from iframes).
&lt;/p&gt;
&lt;p&gt;
A good privacy policy would disclose some or all of the ways a site gathers, uses, discloses, and manages user data (see &lt;a class="ext-link" href="https://en.wikipedia.org/wiki/Privacy_policy"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://en.wikipedia.org/wiki/Privacy_policy&lt;/a&gt;). To be able to create such policy a site owner will need to know how each plugin operates, if it sends data to third parties, if it stores personal data, etc.
&lt;/p&gt;
&lt;p&gt;
Good way to gather all information from core and plugins is to have a separate screen for it. All plugins will have a place to output the necessary details and the site owner will be able to compose the privacy policy based on all information.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:17:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:6/1519823836486632</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;ul&gt;&lt;li&gt;We have to change that link as it's part of coding standard.
&lt;/li&gt;&lt;li&gt;Yes, right now when user click on that help artical then that page open in current tab so needs to open in new tab so user can see that document and not lost there current page.
&lt;/li&gt;&lt;li&gt;Yes but we have to add sprintf so all Locales can replace string if they want.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43434#comment:3" title="Comment 3"&gt;audrasjb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello @mukesh27
&lt;/p&gt;
&lt;p&gt;
Thanks for this ticket.
However, in my opinion:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Similar links are used in many help panels, like &lt;code&gt;widgets.php&lt;/code&gt; for example. Any change on &lt;code&gt;users.php&lt;/code&gt; should be consistent in other screens.
&lt;/li&gt;&lt;li&gt;Target blank is very often a bad idea. At least, it should be identified as "opens-in-a-new-window" links.
&lt;/li&gt;&lt;li&gt;I do not think using sprintf is relevant as some Locales can replace the links with their own translated resources.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:12:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:5/1519823538517882</guid>
      <description>wontfix: &lt;p&gt;
Hi @mukesh27, welcome to WordPress Trac! Thanks for the patch.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The Codex links need to remain translatable, see &lt;a class="ext-link" href="https://codex.wordpress.org/pt-br:SubPainel_Todos_os_Usuários"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://codex.wordpress.org/pt-br:SubPainel_Todos_os_Usuários&lt;/a&gt; for example.
&lt;/li&gt;&lt;li&gt;As per &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/23432" title="#23432: task (blessed): Review usage of target=&amp;#34;_blank&amp;#34; in the admin (assigned)"&gt;#23432&lt;/a&gt;, we rather strive to remove usage of &lt;code&gt;target="_blank"&lt;/code&gt;, see &lt;a href="https://core.trac.wordpress.org/query?keywords=~target-blank"&gt;https://core.trac.wordpress.org/query?keywords=~target-blank&lt;/a&gt; for related tickets.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:08:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:4/1519823298814994</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:3/1519823279265244</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @mukesh27
&lt;/p&gt;
&lt;p&gt;
Thanks for this ticket.
However, in my opinion:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Similar links are used in many help panels, like &lt;code&gt;widgets.php&lt;/code&gt; for example. Any change on &lt;code&gt;users.php&lt;/code&gt; should be consistent in other screens.
&lt;/li&gt;&lt;li&gt;Target blank is very often a bad idea. At least, it should be identified as "opens-in-a-new-window" links.
&lt;/li&gt;&lt;li&gt;I do not think using sprintf is relevant as some Locales can replace the links with their own translated resources.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:07:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:2/1519823238381421</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43433 (mixed-content for install page stylesheets) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 13:04:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43433#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43433#comment:3/1519823089016235</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42409 (Add LIKE support to meta_key comparisons in WP_Meta_Query) updated</title>
      
        <dc:creator>mariovalney</dc:creator>

      <pubDate>Wed, 28 Feb 2018 12:59:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42409#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42409#comment:13/1519822786977353</guid>
      <description>&lt;p&gt;
Thanks for the cleanup, @boonebgorges !
&lt;/p&gt;
&lt;p&gt;
About the "escape_wildcards_key" I've been thinking about the alternative using a filter to avoid a new field. But I'm concerned about a misuse to break all LIKE WP_Queries and/or being a lot verbose to use it for a unique WP_Query call.
&lt;/p&gt;
&lt;p&gt;
About the others operators ('NOT LIKE','IN', 'NOT IN','EXISTS', 'NOT EXISTS') I guess we should work in another ticket as enhancement we should talk about the use cases. For example, if we do:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="s1"&gt;'meta_query'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="s1"&gt;'key'&lt;/span&gt;           &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'compare_key'&lt;/span&gt;   &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'NOT EXISTS'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Will return all posts, if we just add the parameter "as it's" (in meta_value cases). Because every post has at least one [core] meta_key that it's different from "foo".
&lt;/p&gt;
&lt;p&gt;
To create a way to consult if the meta_key foo is not presented we should do a little more code.
&lt;/p&gt;
&lt;p&gt;
(I guess this last point helps to answer the second question: no reason to hold it - for another operators and for wildcard support.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) updated</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Wed, 28 Feb 2018 12:58:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434#comment:1/1519822681683631</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>code.patch attached to Ticket #43434</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Wed, 28 Feb 2018 12:56:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43434/code.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43434/code.patch/1519822562162345</guid>
      <description>&lt;p&gt;
Code patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43434 (Add sprintf function and target attribute in href) created</title>
      
        <dc:creator>mukesh27</dc:creator>

      <pubDate>Wed, 28 Feb 2018 12:55:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43434</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43434/1519822525566264</guid>
      <description>&lt;p&gt;
It is better to use sprintf in static link also add target blank attribute in link so user can redirected to proper document of WordPress.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #28605 (Introduce customize capability for accessing Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 11:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28605#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28605#comment:18/1519818021962457</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1519818019000247"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43433 (mixed-content for install page stylesheets) updated</title>
      
        <dc:creator>mimke</dc:creator>

      <pubDate>Wed, 28 Feb 2018 11:29:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43433#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43433#comment:2/1519817373275125</guid>
      <description>&lt;p&gt;
chrome developer console:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure stylesheet '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure stylesheet '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure stylesheet '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure stylesheet '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure stylesheet '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure stylesheet '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
install.php:8 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure stylesheet 'http://www.example.com/blog/wp-includes/css/buttons.min.css?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:9 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure stylesheet 'http://www.example.com/blog/wp-admin/css/install.min.css?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:10 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure stylesheet 'http://www.example.com/blog/wp-includes/css/dashicons.min.css?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure stylesheet 'http://www.example.com/blog/wp-includes/css/buttons.min.css?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure stylesheet 'http://www.example.com/blog/wp-admin/css/install.min.css?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure stylesheet 'http://www.example.com/blog/wp-includes/css/dashicons.min.css?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure script '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure script '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure script '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure script '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure script '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure script '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
Mixed Content: The page at '&amp;lt;URL&amp;gt;' was loaded over HTTPS, but requested an insecure script '&amp;lt;URL&amp;gt;'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure script 'http://www.example.com/blog/wp-includes/js/jquery/jquery.js?ver=1.12.4'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure script 'http://www.example.com/blog/wp-includes/js/jquery/jquery-migrate.min.js?ver=1.4.1'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure script 'http://www.example.com/blog/wp-includes/js/zxcvbn-async.min.js?ver=1.0'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure script 'http://www.example.com/blog/wp-admin/js/password-strength-meter.min.js?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure script 'http://www.example.com/blog/wp-includes/js/underscore.min.js?ver=1.8.3'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure script 'http://www.example.com/blog/wp-includes/js/wp-util.min.js?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:1 Mixed Content: The page at 'https://www.example.com/blog/wp-admin/install.php?step=1' was loaded over HTTPS, but requested an insecure script 'http://www.example.com/blog/wp-admin/js/user-profile.min.js?ver=4.9.4'. This request has been blocked; the content must be served over HTTPS.
install.php:119 Uncaught ReferenceError: jQuery is not defined
    at install.php:119
&lt;/pre&gt;&lt;p&gt;
my site is on self hosted vps behind &lt;strong&gt;haproxy&lt;/strong&gt; and I redirect http to https with following configuration in haproxy :
&lt;/p&gt;
&lt;pre class="wiki"&gt;redirect scheme https code 301 if !{ ssl_fc }
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39859 (wp.media.view.Modal jumps when you open it) updated</title>
      
        <dc:creator>andreiglingeanu</dc:creator>

      <pubDate>Wed, 28 Feb 2018 11:12:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39859#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39859#comment:33/1519816378813993</guid>
      <description>&lt;p&gt;
Finally removing plugin-land hacks &amp;amp; monkey patches! Thank you!
&lt;a class="ext-link" href="https://github.com/ThemeFuse/Unyson/pull/3221/files"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/ThemeFuse/Unyson/pull/3221/files&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43433 (mixed-content for install page stylesheets) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Wed, 28 Feb 2018 09:08:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43433#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43433#comment:1/1519808939915101</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@mimke Thanks for the ticket, and welcome to WordPress Trac.
&lt;/p&gt;
&lt;p&gt;
Can you let us know a few things in order to determine the cause, please?
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Which mixed content is present on the page? (You can find this in your browser's developer console)
&lt;/li&gt;&lt;li&gt;Do you have a &lt;code&gt;wp-content/install.php&lt;/code&gt; script present which may be interfering?
&lt;/li&gt;&lt;li&gt;Are you running your site behind a reverse proxy, for example via Cloudflare?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42282 (Provide means of executing PHPUnit continuously over watched files in ...) updated</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Wed, 28 Feb 2018 09:06:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42282#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42282#comment:18/1519808788109742</guid>
      <description>&lt;p&gt;
@iandunn, what a great idea! Do you think we should pass on a &lt;code&gt;--filter&lt;/code&gt; as well? To run just one specific test etc. Would be pretty cool to get instant feedback on changed files and run just one test instead of a group.
&lt;/p&gt;
&lt;p&gt;
Although, it's always possible to just make up a temporary group.
&lt;/p&gt;
&lt;p&gt;
Either way it would be possible to have sub-second feedback from tests with &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/43432" title="#43432: enhancement: Streamline tests with installation skips (new)"&gt;#43432&lt;/a&gt; implemented and being able to run as little as just one test.
&lt;/p&gt;
&lt;p&gt;
Great stuff!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43433 (mixed-content for install page stylesheets) created</title>
      
        <dc:creator>mimke</dc:creator>

      <pubDate>Wed, 28 Feb 2018 09:01:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43433</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43433/1519808494422868</guid>
      <description>&lt;p&gt;
I am trying to install wordpress 4.9.1 on my https website but the browser (chrome 64.0.3282.186 &amp;amp; firefox 58.0.2) gives me mixed-content error when loading wp-admin/install.php and the page looks broken.
after installing wordpress I cannot login with my given username and password and default page seems broken too
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>43432.diff attached to Ticket #43432</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Wed, 28 Feb 2018 09:01:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/43432/43432.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/43432/43432.diff/1519808462088942</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #43432 (Streamline tests with installation skips) created</title>
      
        <dc:creator>soulseekah</dc:creator>

      <pubDate>Wed, 28 Feb 2018 09:00:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43432</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43432/1519808421494461</guid>
      <description>&lt;p&gt;
In line with the recent and amazing &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42282" title="#42282: enhancement: Provide means of executing PHPUnit continuously over watched files in ... (closed: fixed)"&gt;#42282&lt;/a&gt; feature I'm proposing we add an environment flag &lt;code&gt;WP_TESTS_SKIP_INSTALL&lt;/code&gt; that does not reinstall WordPress. This shaves off at at least 5-10 seconds per run allowing almost instant feedback.
&lt;/p&gt;
&lt;p&gt;
Usage: &lt;code&gt;WP_TESTS_SKIP_INSTALL=1 phpunit ...&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43431 (Display sidebar in right panel) updated</title>
      
        <dc:creator>hugeman</dc:creator>

      <pubDate>Wed, 28 Feb 2018 08:55:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43431#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43431#comment:2/1519808118313360</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43431#comment:1" title="Comment 1"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hello @hugeman, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. For support questions please use our support forums at &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;. Thanks!
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks you, i'll try
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43431 (Display sidebar in right panel) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 28 Feb 2018 08:31:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43431#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43431#comment:1/1519806673495537</guid>
      <description>invalid: &lt;p&gt;
Hello @hugeman, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software. For support questions please use our support forums at &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support/&lt;/a&gt;. Thanks!
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43431 (Display sidebar in right panel) created</title>
      
        <dc:creator>hugeman</dc:creator>

      <pubDate>Wed, 28 Feb 2018 08:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43431</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43431/1519806572664898</guid>
      <description>&lt;p&gt;
I've create shop page, but i dont know how Display sidebar in right panel like blog?
Can you help me for display sidebar?
&lt;/p&gt;
&lt;p&gt;
Shop page: &lt;a class="ext-link" href="https://www.ruaanhgiare.vn/danh-muc/in-anh/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.ruaanhgiare.vn/danh-muc/in-anh/&lt;/a&gt;
Blog page: &lt;a class="ext-link" href="https://www.ruaanhgiare.vn/bang-gia-rua-anh/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.ruaanhgiare.vn/bang-gia-rua-anh/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #39482 (wp_customize_support_script() has a javascript comment which breaks ...) closed</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Wed, 28 Feb 2018 06:59:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39482#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39482#comment:14/1519801171825293</guid>
      <description>wontfix</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43231 (Wp_Http_Cookie host-only flag) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 05:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43231#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43231#comment:4/1519795230172484</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39482 (wp_customize_support_script() has a javascript comment which breaks ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Wed, 28 Feb 2018 05:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39482#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39482#comment:13/1519794756837411</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39482#comment:11" title="Comment 11"&gt;dylanfitzger&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Site speed is of top concern for me. I use HTML compression on many of my sites, but this comment causes a lot of problems. JS Console error “Uncaught SyntaxError: Unexpected end of input”. Simply removing this comment would save me a lot of headaches. Why aren't we able to fix this issue?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Per &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/39482#comment:9" title="Comment 9"&gt;SergeyBiryukov&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It's not hard, but the same issue could happen in a plugin or theme, which would be hard to track down, so in the long run I think it's better to use proper minification tools that handle JS comments correctly.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Any theme or plugin that outputs a single-line comment will face the same problem. Changing the script in core will fix this one symptom but the underlying problem will remain: the HTML compressor is faulty.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37110 (Update to jQuery 3.*) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Wed, 28 Feb 2018 05:03:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37110#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37110#comment:32/1519794234423600</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #themereview by poena. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/themereview/p1519794232000056"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43419 (esc_html__ function description has an extra full stop) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 04:55:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43419#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43419#comment:4/1519793756830697</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39482 (wp_customize_support_script() has a javascript comment which breaks ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 04:54:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39482#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39482#comment:12/1519793669004721</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #39482 (wp_customize_support_script() has a javascript comment which breaks ...) reopened</title>
      
        <dc:creator>dylanfitzger</dc:creator>

      <pubDate>Wed, 28 Feb 2018 04:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/39482#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/39482#comment:11/1519790678217201</guid>
      <description>&lt;p&gt;
Site speed is of top concern for me. I use HTML compression on many of my sites, but this comment causes a lot of problems. JS Console error “Uncaught SyntaxError: Unexpected end of input”. Simply removing this comment would save me a lot of headaches. Why aren't we able to fix this issue?
&lt;/p&gt;
&lt;p&gt;
Comment at line 3030 of wp-includes/theme.php: “&lt;em&gt; The customizer requires postMessage and CORS (if the site is cross domain)”
&lt;/em&gt;&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #43414 (Deprecate WP_Http::_dispatch_request()) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:47:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43414#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43414#comment:2/1519789635446268</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42766" title="Docs: Mark `WP_Http::_dispatch_request()` as deprecated. It's no ..."&gt;42766&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Mark &lt;code&gt;WP_Http::_dispatch_request()&lt;/code&gt; as deprecated. It's no longer used since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37428" title="HTTP API: Replace internals with Requests library.
Requests is a ..."&gt;[37428]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43414" title="#43414: enhancement: Deprecate WP_Http::_dispatch_request() (reopened)"&gt;#43414&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42766]: Docs: Mark `WP_Http::_dispatch_request()` as deprecated. It's no ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:47:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42766</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42766/1519789634935246</guid>
      <description>&lt;p&gt;
Docs: Mark &lt;code&gt;WP_Http::_dispatch_request()&lt;/code&gt; as deprecated. It's no longer used since &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/37428" title="HTTP API: Replace internals with Requests library.
Requests is a ..."&gt;[37428]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/43414" title="#43414: enhancement: Deprecate WP_Http::_dispatch_request() (reopened)"&gt;#43414&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #43414 (Deprecate WP_Http::_dispatch_request()) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:46:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43414#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43414#comment:1/1519789601622796</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42779 (Docs: add description to the register_admin_color_schemes() function) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42779#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42779#comment:3/1519788466524144</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42765" title="Docs: Add description for `register_admin_color_schemes()`.
Props ..."&gt;42765&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add description for &lt;code&gt;register_admin_color_schemes()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props terriann, danieltj.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42779" title="#42779: defect (bug): Docs: add description to the register_admin_color_schemes() function (closed: fixed)"&gt;#42779&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42765]: Docs: Add description for `register_admin_color_schemes()`.  Props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:27:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42765</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42765/1519788466041391</guid>
      <description>&lt;p&gt;
Docs: Add description for &lt;code&gt;register_admin_color_schemes()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props terriann, danieltj.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42779" title="#42779: defect (bug): Docs: add description to the register_admin_color_schemes() function (closed: fixed)"&gt;#42779&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42266 (i18n: unify "access" error messages in XML-RPC) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:18:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42266#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42266#comment:8/1519787928218961</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42764" title="XML-RPC: Unify permission error messages in `wp_xmlrpc_server`.
Props ..."&gt;42764&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
XML-RPC: Unify permission error messages in &lt;code&gt;wp_xmlrpc_server&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props ramiy.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42266" title="#42266: enhancement: i18n: unify &amp;#34;access&amp;#34; error messages in XML-RPC (closed: fixed)"&gt;#42266&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42764]: XML-RPC: Unify permission error messages in `wp_xmlrpc_server`.  Props ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:18:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42764</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42764/1519787927752733</guid>
      <description>&lt;p&gt;
XML-RPC: Unify permission error messages in &lt;code&gt;wp_xmlrpc_server&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props ramiy.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42266" title="#42266: enhancement: i18n: unify &amp;#34;access&amp;#34; error messages in XML-RPC (closed: fixed)"&gt;#42266&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42968 (Media: Grid View: new upload, file is in the wrong position in the ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Wed, 28 Feb 2018 03:11:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42968#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42968#comment:23/1519787473505002</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>s3w47m88</dc:creator>

      <pubDate>Wed, 28 Feb 2018 02:32:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:54/1519785136445940</guid>
      <description>&lt;p&gt;
I am still very unclear about something here.
&lt;/p&gt;
&lt;p&gt;
@pento @afercia and @dd32 each of you have repeatidly stated that this ticket's objective is to replace labels with placeholders.
&lt;/p&gt;
&lt;p&gt;
And although it seems @ramiy indicated he does that, that's not what myself, (or from what I've read:) @richardkentgates @johnbillion or @voldemortensen are suggesting, asking or intending.
&lt;/p&gt;
&lt;p&gt;
Do you guys just assume that if you allow developers to specify a Placeholder value it's going to lead to eliminating Label values? Or am I overlooking something with this ticket that is stating it is removing Labels and / or encouraging removing Labels?
&lt;/p&gt;
&lt;p&gt;
Thank you.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>s3w47m88</dc:creator>

      <pubDate>Wed, 28 Feb 2018 02:10:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:53/1519783849296371</guid>
      <description>&lt;p&gt;
Thank you for that information @pento - will do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Wed, 28 Feb 2018 02:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:52/1519783551566463</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
After reviewing this ticket, I agree with @afercia and @pento on this one.
&lt;/p&gt;
&lt;p&gt;
Put simply, placeholders are not a viable replacement for labels (although I admit are used as such in many forms, often badly) especially given the accessibility concerns raised.
&lt;/p&gt;
&lt;p&gt;
Looking at &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/40462/40462.5.patch" title="Attachment '40462.5.patch' in Ticket #40462"&gt;40462.5.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/40462/40462.5.patch" title="Download"&gt;​&lt;/a&gt;, given it requires custom code to be written and there's a bunch of workarounds posted here, there doesn't seem to be a good reason to even add support to core to me (which WordPress itself wouldn't use in the name of accessibility).
&lt;/p&gt;
&lt;p&gt;
I personally find the &lt;a class="ext-link" href="https://wordcamp.org/wp-login.php"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;WordCamp.org login screen&lt;/a&gt; to be the best example of how to provide extra contextual login details to end users, it does this by adding information prior to the login fields which explains what accounts to use. A short paragraph will always be more useful to an end-user than 2-3 words in a form field which disappear after focus..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Wed, 28 Feb 2018 01:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:51/1519782971088389</guid>
      <description>&lt;p&gt;
@s3w47m88: Please don't re-open tickets that have been closed by a Core Committer. @afercia has said several times that the ticket can be re-opened at a later date, if we do decide to make this change. For the sake of our ticket management flows, however, this ticket should remain closed.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40462#comment:50" title="Comment 50"&gt;s3w47m88&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can anyone tell me who, exactly, has the authority to approve to deny or accept this patch?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In this instance, @afercia is the person who makes this decision, as one of the Accessibility experts who works on WordPress Core. I can also make that decision, as one of the folks who looks at overall WordPress architecture. In this case, I agree with @afercia's assessment.
&lt;/p&gt;
&lt;p&gt;
That said, I've also asked @dd32, one of the WordPress Lead Developers, to review this ticket and add his thoughts. I'll leave the ticket open pending his review.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43101 (Test to ensure MediaElement SWFs aren't accidentally added to build) updated</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 28 Feb 2018 00:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43101#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43101#comment:9/1519777509042457</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42763" title="External Libraries: Test for MEjs files in `src` instead of `build`.
 ..."&gt;42763&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
External Libraries: Test for MEjs files in &lt;code&gt;src&lt;/code&gt; instead of &lt;code&gt;build&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;build&lt;/code&gt; task doesn't get run during TravisCI jobs, so the &lt;code&gt;build&lt;/code&gt; folder doesn't exist in that context. Because of that, the test added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42762" title="External Libraries: Test that MediaElement SWF files remain deleted.
 ..."&gt;r42762&lt;/a&gt; was failling.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Checking for the files in &lt;code&gt;src&lt;/code&gt; instead achieves the same goal as that commit, but should pass in Travis.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43101" title="#43101: defect (bug): Test to ensure MediaElement SWFs aren't accidentally added to build (closed: fixed)"&gt;#43101&lt;/a&gt;&lt;br /&gt;
See &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1519742993000615"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1519742993000615&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42763]: External Libraries: Test for MEjs files in `src` instead of `build`.  ...</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 28 Feb 2018 00:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42763</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42763/1519777508540467</guid>
      <description>&lt;p&gt;
External Libraries: Test for MEjs files in &lt;code&gt;src&lt;/code&gt; instead of &lt;code&gt;build&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;build&lt;/code&gt; task doesn't get run during TravisCI jobs, so the &lt;code&gt;build&lt;/code&gt; folder doesn't exist in that context. Because of that, the test added in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42762" title="External Libraries: Test that MediaElement SWF files remain deleted.
 ..."&gt;r42762&lt;/a&gt; was failling.
&lt;/p&gt;
&lt;p&gt;
Checking for the files in &lt;code&gt;src&lt;/code&gt; instead achieves the same goal as that commit, but should pass in Travis.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43101" title="#43101: defect (bug): Test to ensure MediaElement SWFs aren't accidentally added to build (closed: fixed)"&gt;#43101&lt;/a&gt;
See &lt;a class="ext-link" href="https://wordpress.slack.com/archives/C02RQBWTW/p1519742993000615"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/C02RQBWTW/p1519742993000615&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42855 (Add ability to filter header, sidebar, searchform, footer and ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 28 Feb 2018 00:12:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42855#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42855#comment:11/1519776750008445</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42855#comment:8" title="Comment 8"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;CORRECTION:&lt;/strong&gt; &lt;code&gt;get_template_part()&lt;/code&gt; does not have a general purpose "pre" action hook.  It's pre hook requires a plugin to have advanced knowledge of the slug, for which an effectively infinite number of permutation could be used.
&lt;/p&gt;
&lt;p&gt;
So we would also need a new general purpose "pre" action hook for &lt;code&gt;get_template_part()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43430 (Copy &amp; Cursor Issue in visual editor) created</title>
      
        <dc:creator>heller_benjamin</dc:creator>

      <pubDate>Wed, 28 Feb 2018 00:01:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43430</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43430/1519776107625112</guid>
      <description>&lt;p&gt;
This is a weird one. If you copy and paste text with multiple lines from an outside document into the visual editor and then use backspace to start putting all the text into one line, the cursor jumps around every-time you remove a line-break. It does not happen in the text editor. I have tried pasting from multiple sources. Please pay close attention to the cursor in my screen-cast.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.dropbox.com/s/svoevea6zw5ntye/Recording%20%2310.mp4?dl=0"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.dropbox.com/s/svoevea6zw5ntye/Recording%20%2310.mp4?dl=0&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42855 (Add ability to filter header, sidebar, searchform, footer and ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Wed, 28 Feb 2018 00:00:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42855#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42855#comment:10/1519776025652774</guid>
      <description>&lt;p&gt;
BTW, @atanasangelovdev I want to thank you for contributing your first ticket.
&lt;/p&gt;
&lt;p&gt;
I do know how agonizing it can feel to make a request here on trac and then have people tell your ideas don't make sense.  I for one want to let you know that not everyone will respond that way.
&lt;/p&gt;
&lt;p&gt;
And I also want you to know that at least one person (me) is glad to see you participate here. Don't let the negative replies scare you aware from participating in the future, please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42855 (Add ability to filter header, sidebar, searchform, footer and ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Tue, 27 Feb 2018 23:55:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42855#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42855#comment:9/1519775753019653</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42855#comment:8" title="Comment 8"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can see your 4th point (perhaps), as a filter, but the others are not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why can you not see the need to make the output of a theme valid AMP?  Why not for JSON?  Why not for Unit Testing?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
They would be better done as action hooks, which already exist for these functions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"pre" action hooks exist, but "post" action hooks do not.
&lt;/p&gt;
&lt;p&gt;
So are you saying you would join us in advocating for post action hooks to be added to these functions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42855 (Add ability to filter header, sidebar, searchform, footer and ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Tue, 27 Feb 2018 22:48:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42855#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42855#comment:8/1519771718338464</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42855#comment:7" title="Comment 7"&gt;MikeSchinkel&lt;/a&gt;:
I can see your 4th point (perhaps), as a filter, but the others are not. They would be better done as action hooks, which already exist for these functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21062 (Add a 'template_file' hook to load_template()) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Tue, 27 Feb 2018 22:31:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21062#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21062#comment:21/1519770695640886</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/21062#comment:20" title="Comment 20"&gt;johnbillion&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm going to re-open this ticket as @MikeSchinkel brought up some good points. Further discussion pending.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Given the discussion on &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/42855" title="#42855: enhancement: Add ability to filter header, sidebar, searchform, footer and ... (new)"&gt;#42855&lt;/a&gt; maybe it's time to restart the discussion?  :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42855 (Add ability to filter header, sidebar, searchform, footer and ...) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Tue, 27 Feb 2018 22:25:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42855#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42855#comment:7/1519770314142863</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42855#comment:6" title="Comment 6"&gt;joyously&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
There are many reasons for what @atanasangelovdev is suggesting that your replies do not anticipate.  For example:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Support for alternate output based on Google AMP and similar technologies.  A plugin could capture the header call, set &lt;code&gt;ob_start()&lt;/code&gt;, run the theme's header, grab its output with &lt;code&gt;ob_get_clean()&lt;/code&gt;, clean up the header to be valid AMP, then output it.  A plugin could do the same with the footer and with all partials.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;Support for alternate output such as JSON. A plugin could to the same above but generate JSON output instead when a URL parameter &lt;code&gt;?json&lt;/code&gt; is added.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Support for testing using similar techniques to above "unit test" a header, a footer, or a partial.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;Output comments to annotate a theme using similar techniques to above for a plugin to specify which header, sidebars and footer were called.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
As the web becomes more complicated, the lack of this type of functionality is hamstringing WordPress from being able to be used in contexts that are beyond the simple &lt;em&gt;"Outputting blog posts for people to view via a desktop browser."&lt;/em&gt; This aspect of WordPress is still in the aughts.
&lt;/p&gt;
&lt;p&gt;
I really wish the people blocking these types of improvements had worked on some of these use-cases to appreciate how limiting these missing bits of control can be.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43098 (Defining WP_UNINSTALL_PLUGIN also when the uninstall handler is ...) updated</title>
      
        <dc:creator>Andy Schmidt</dc:creator>

      <pubDate>Tue, 27 Feb 2018 21:58:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43098#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43098#comment:3/1519768714246883</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/43098#comment:1" title="Comment 1"&gt;manchumahara&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Yet, it would be helpful for method 1 to know that it's running in the "uninstall" context - especially since it would allow to control WHICH code outside of functions actually SHOULD execute during uninstall.
&lt;/p&gt;
&lt;p&gt;
Probably not a "bug", but an unnecessary limitation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) reopened</title>
      
        <dc:creator>s3w47m88</dc:creator>

      <pubDate>Tue, 27 Feb 2018 20:33:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:50/1519763606201844</guid>
      <description>&lt;p&gt;
@afercia you stated that you've not heard a actual use case that doesn't suggest one would remove or repeat the value of the Label. Particularly for the username and password fields. So here's a few:
&lt;/p&gt;
&lt;p&gt;
Some WordPress websites allow the email address as the username, while others do not use the email address as the username. WordPress MultiSite doesn't allow email addresses without modification. The Placeholder value can show that so the user knows what to enter. On some sites my staff and I build we write out the email in the placeholder, other times we put "John Doe", other times we say "Username Here", etc... In other words, developers could put whatever they want and no one knows what will go there except the developer.
&lt;/p&gt;
&lt;p&gt;
As for a password, having the * as the placeholder or descriptive text is a UI / UX choice made by the developer. I choose to use * in the password field for aesthetics even though it's not overtly helpful. Sometimes I put "12 Character Password Here" or "Password is Found In Your Email" because - like @richardkentgates mentioned I deal with surprisingly computer inept people.
&lt;/p&gt;
&lt;p&gt;
What's important to acknowledge and respect here is that no one know what a developer is going to put in those values and to believe we do is an assumption and that is solely based on opinion - instead of confirmed facts.
&lt;/p&gt;
&lt;p&gt;
The facts are that HTML supports placeholders for these fields, and the wp_login_form function exists to allow developers to customize the attributes that area associated with those fields. So, unless you or someone else can provide opinionated evidence that is based on verifiable facts about how accepting this patch is inconsistent with any programming standards it should be promptly accepted.
&lt;/p&gt;
&lt;p&gt;
Most importantly, no one here has the authority to dictate whether or not placeholders are used, how they're used, or why their used. That is out of scope of this submitted patch and should not be discussed here.
&lt;/p&gt;
&lt;p&gt;
And almost as important as that: there is a desire for this functionality by WordPress developers and it has literally NO consequence to anyone who opposes it. There has been NO evidence to support that this has any negative impact unless you're making an assumption about developer intent.
&lt;/p&gt;
&lt;p&gt;
Can anyone tell me who, exactly, has the authority to approve to deny or accept this patch?
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>richardkentgates</dc:creator>

      <pubDate>Tue, 27 Feb 2018 20:00:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:49/1519761624885806</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40462#comment:48" title="Comment 48"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@richardkentgates as also @sami.keijonen pointed out, this ticket is about the login form username / email and password fields. As largely discussed in the previous comments, which I'd recommend to read, seems pretty clear there's no valid use case for a suggestion or hint about the expected format of a password or username. Even the email case is arguable, as users already registered with their email and they're not required to follow an expected format to login.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;I have to drive 45 minutes tomorrow to help a client's CPA log into WP.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;I'm certain this thread will be referenced when arguing the use of placeholders throughout WP as you mentioned in another thread. Unless I should be making my case on every thread that mentions placeholders?
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
You stated...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress shouldn't encourage bad accessibility practices. For this reason, I'd propose to close this ticket as "wontfix", also considering there's a pending effort to review all the placeholders used in core, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40331" title="#40331: defect (bug): The placeholder attribute should not be used as a replacement for a label (new)"&gt;#40331&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So while I realize this pertains to just log in, this thread will be used as a point of argument in the overall topic of placeholders at some point.
&lt;/p&gt;
&lt;p&gt;
We disagree on a fundamental level about the role of an open source CMS. I feel it should cater to the management of the content and obviously, others feel it's a place to make a stand about design practices. The decision to leave this out of the code isn't just deciding best practices where the code of WP is concerned. It's a decision to tell others how to use their websites and I just don't think that is the role of WP. It's not very democratic, despite any insisting to the contrary.
&lt;/p&gt;
&lt;p&gt;
Finding a way to cater to self-determined uses and accessibility at the same time would serve everyone's interest. I don't see a good argument to not go that direction, so it's not just accessibility at question here, it's preferences about design practice we are really arguing here.
&lt;/p&gt;
&lt;p&gt;
---
&lt;/p&gt;
&lt;p&gt;
Let me explain why this matters to me. The only reason I am even following this thread and a few others is that in two months time I am to begin work on a front-end registration and sign in form, complete with reCaptcha. The goal of this is consumer engagement with brands and giving users direct control over MailChimp subscriptions. The front-end sign in being the pertinent topic here.
&lt;/p&gt;
&lt;p&gt;
As ridiculous as it might sound to a seasoned professional like yourself, I work with business owners who have little to no knowledge of the web on a regular basis, and even logging in is a challenge to some. As I've stated, I regularly spend time helping users just logging into a site.
&lt;/p&gt;
&lt;p&gt;
Your arguments to leave this out simply ignores my professional experience and the experience of others who have a LOT of experience working with the general public, some who have accessibility issues in the form of understanding what they're even looking at. Whether you agree or not, there is an intended use for this. I don't work in a lab have expensive research papers. I work in the real world with real business owners every single day.
&lt;/p&gt;
&lt;p&gt;
I'm unfollowing this thread as I don't expect any solution will be allowed and will need to be resolved via workarounds.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37392 (Multisite "Sites" screen: Add links to filter websites by status) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 27 Feb 2018 19:33:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37392#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37392#comment:13/1519760036888728</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by mnelson4. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1519760034000757"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43226 (Crop setting in thumbnails never set when uploading PDF files) updated</title>
      
        <dc:creator>audrasjb</dc:creator>

      <pubDate>Tue, 27 Feb 2018 19:31:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43226#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43226#comment:8/1519759865701813</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>brittantley</dc:creator>

      <pubDate>Tue, 27 Feb 2018 19:13:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:23/1519758821180117</guid>
      <description>&lt;p&gt;
@matthewmcvickar looks like that fixed it! After dealing with some annoying caching issues, my updated style.css is finally rendering everything correctly. Thanks for the help!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>khromov</dc:creator>

      <pubDate>Tue, 27 Feb 2018 18:51:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:22/1519757464981112</guid>
      <description>&lt;p&gt;
@brittantley It looks like the embed isn't being filtered by the &lt;code&gt;embed_oembed_html&lt;/code&gt; filter in my workaround snippet. I'm not sure what causes that, perhaps some sort of caching plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>matthewmcvickar</dc:creator>

      <pubDate>Tue, 27 Feb 2018 18:09:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:21/1519754980843724</guid>
      <description>&lt;p&gt;
@brittantley From looking at the source code, it seems the plugin isn’t having any effect on the Instagram embed. Please try disabling that plugin and instead using the CSS workaround. The CSS workaround worked for my site, and worked when I applied it to your site using my browser's developer tools to inject new CSS. Can you add this CSS to your style.css file and see if it works?
&lt;/p&gt;
&lt;pre class="wiki"&gt;iframe.instagram-media {
    position: static !important;
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>brittantley</dc:creator>

      <pubDate>Tue, 27 Feb 2018 17:47:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:20/1519753679174259</guid>
      <description>&lt;p&gt;
@matthewmcvickar of course haha. &lt;a class="ext-link" href="http://www.brittskibeers.com/colorado-skiing-and-beering/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Here you go&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>matthewmcvickar</dc:creator>

      <pubDate>Tue, 27 Feb 2018 17:45:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:19/1519753504640227</guid>
      <description>&lt;p&gt;
@brittantley That's a preview link for an unpublished post; I can't see it because I'm not logged in to your WordPress admin. You'll have to publish the post in order for me to see it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>brittantley</dc:creator>

      <pubDate>Tue, 27 Feb 2018 17:39:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:18/1519753164143157</guid>
      <description>&lt;p&gt;
@matthewmcvickar &lt;a class="ext-link" href="http://www.brittskibeers.com/?p=477&amp;amp;preview=true"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Here it is&lt;/a&gt;. I currently don't have the modified CSS, but I do have @khromov's plugin enabled. The behavior appears to be erratic: some embeds will randomly work once when the page is loaded while others overlap, and the next rendering of the page will have different behavior.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37812 (404 when using a numeric slug and /%category%/ base) updated</title>
      
        <dc:creator>andrewteg</dc:creator>

      <pubDate>Tue, 27 Feb 2018 17:28:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37812#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37812#comment:4/1519752508167833</guid>
      <description>&lt;p&gt;
@jayhughes are you saying normal browser traffic is working for you? I'm on 4.9.4 and seeing this bug on any post with a numeric slug inside a child (or grandchild) category. We are using /%category%/%postname%/ like @mikejolley
&lt;/p&gt;
&lt;p&gt;
Thanks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43250 (Instagram Links in posts are overlapping) updated</title>
      
        <dc:creator>matthewmcvickar</dc:creator>

      <pubDate>Tue, 27 Feb 2018 17:24:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43250#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43250#comment:17/1519752241197696</guid>
      <description>&lt;p&gt;
@brittantley If you can provide a link to the site where it's not working or your source code, we may be able to help diagnose this. Can you send a link?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42948 (Backbone client sending empty string in X-WP-Nonce header by default ...) updated</title>
      
        <dc:creator>FPCSJames</dc:creator>

      <pubDate>Tue, 27 Feb 2018 17:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42948#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42948#comment:10/1519752030232378</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42948#comment:9" title="Comment 9"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sorry, posted the same ticket number twice… The second one is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43266" title="#43266: enhancement: REST API JavaScript Client: Support an empty string for nonce (closed: fixed)"&gt;#43266&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In that case, I agree - &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43266" title="#43266: enhancement: REST API JavaScript Client: Support an empty string for nonce (closed: fixed)"&gt;#43266&lt;/a&gt; would do it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42948 (Backbone client sending empty string in X-WP-Nonce header by default ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 27 Feb 2018 17:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42948#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42948#comment:9/1519751348619658</guid>
      <description>&lt;p&gt;
Sorry, posted the same ticket number twice… The second one is &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43266" title="#43266: enhancement: REST API JavaScript Client: Support an empty string for nonce (closed: fixed)"&gt;#43266&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42948 (Backbone client sending empty string in X-WP-Nonce header by default ...) updated</title>
      
        <dc:creator>FPCSJames</dc:creator>

      <pubDate>Tue, 27 Feb 2018 16:55:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42948#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42948#comment:8/1519750548892345</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/42948#comment:7" title="Comment 7"&gt;ocean90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43265" title="#43265: defect (bug): REST API JS Client: Extend custom nonce functionality to collections (closed: fixed)"&gt;#43265&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43265" title="#43265: defect (bug): REST API JS Client: Extend custom nonce functionality to collections (closed: fixed)"&gt;#43265&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43265" title="#43265: defect (bug): REST API JS Client: Extend custom nonce functionality to collections (closed: fixed)"&gt;#43265&lt;/a&gt; uses isEmpty() and should cover this I think.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It appears both patches attached to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43265" title="#43265: defect (bug): REST API JS Client: Extend custom nonce functionality to collections (closed: fixed)"&gt;#43265&lt;/a&gt; use isNull() and isUndefined(), not isEmpty(), unless I'm missing something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43429 (Add "In response to ..." before threaded comments in comment feed) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Tue, 27 Feb 2018 14:45:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43429#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43429#comment:1/1519742756620338</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43429 (Add "In response to ..." before threaded comments in comment feed) created</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Tue, 27 Feb 2018 14:44:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43429</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43429/1519742656438736</guid>
      <description>&lt;p&gt;
Imagine this in your feed reader:
&lt;/p&gt;
&lt;p&gt;
Comment 1: WordCamp Miami was awesome!
Comment 2: I do not learn anything. It was boring ... :(
Comment 3: YES, it was!
&lt;/p&gt;
&lt;p&gt;
But Comment 3 is a reply to Comment 1. But we don't see it.
&lt;/p&gt;
&lt;p&gt;
I am thinking about making it to something like that:
&lt;/p&gt;
&lt;p&gt;
Comment 1: WordCamp Miami was awesome!
Comment 2: I do not learn anything. It was boring ... :(
Comment 3: (In response to *Comment 1*.) YES, it was!
&lt;/p&gt;
&lt;p&gt;
There already some places in WordPress which are doing that:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/aaf99e691391cfceb004d848450dbbf3344b1bee/wp-admin/comment.php#L194"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/aaf99e691391cfceb004d848450dbbf3344b1bee/wp-admin/comment.php#L194&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/WordPress/blob/aaf99e691391cfceb004d848450dbbf3344b1bee/wp-admin/edit-form-comment.php#L133"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WordPress/WordPress/blob/aaf99e691391cfceb004d848450dbbf3344b1bee/wp-admin/edit-form-comment.php#L133&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #43101 (Test to ensure MediaElement SWFs aren't accidentally added to build) closed</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Tue, 27 Feb 2018 14:40:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43101#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43101#comment:8/1519742434200493</guid>
      <description>fixed: &lt;p&gt;
Fixed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42762" title="External Libraries: Test that MediaElement SWF files remain deleted.
 ..."&gt;r42762&lt;/a&gt;, but I forgot the &lt;code&gt;#&lt;/code&gt;...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
External Libraries: Test that MediaElement SWF files remain deleted.
&lt;/p&gt;
&lt;p&gt;
The files were removed from Core in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42462" title="External Libraries: Remove unnecessary / obsoleted MediaElement.js ..."&gt;r42462&lt;/a&gt; because they're no longer necessary, and have a history of security issues. They remain upstream, though, so this test makes it explicitly clear that they should not be added back in the future without careful consideration and discussion with the Security team.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Tests_Admin_IncludesUpdateCore::test_new_files_are_not_in_old_files_array_compiled()&lt;/code&gt; would already catch files with the exact same name, but this test will also catch files with new names, just to be extra cautious.
&lt;/p&gt;
&lt;p&gt;
Props iandunn, ocean90, SergeyBiryukov
Fixes 43101
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43417 (Infinite loop in wp_mkdir_p with open_basedir restrictions) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Feb 2018 14:40:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43417#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43417#comment:4/1519742428436019</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [42762]: External Libraries: Test that MediaElement SWF files remain deleted.  ...</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Tue, 27 Feb 2018 14:37:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42762</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42762/1519742235793820</guid>
      <description>&lt;p&gt;
External Libraries: Test that MediaElement SWF files remain deleted.
&lt;/p&gt;
&lt;p&gt;
The files were removed from Core in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42462" title="External Libraries: Remove unnecessary / obsoleted MediaElement.js ..."&gt;r42462&lt;/a&gt; because they're no longer necessary, and have a history of security issues. They remain upstream, though, so this test makes it explicitly clear that they should not be added back in the future without careful consideration and discussion with the Security team.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;Tests_Admin_IncludesUpdateCore::test_new_files_are_not_in_old_files_array_compiled()&lt;/code&gt; would already catch files with the exact same name, but this test will also catch files with new names, just to be extra cautious.
&lt;/p&gt;
&lt;p&gt;
Props iandunn, ocean90, SergeyBiryukov
Fixes 43101
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #30130 (Normalize characters with combining marks to precomposed characters) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Tue, 27 Feb 2018 14:24:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30130#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30130#comment:35/1519741480178258</guid>
      <description>&lt;p&gt;
A processwire module:
&lt;a class="ext-link" href="https://github.com/justb3a/processwire-textformatter-normalizeutf8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/justb3a/processwire-textformatter-normalizeutf8&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
This is using Patchwork as a compatibility layer
&lt;a class="ext-link" href="https://github.com/tchwork/utf8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tchwork/utf8&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Other CMS, like Concretet5 are using this too.
&lt;/p&gt;
&lt;p&gt;
Here is a issue for Typo3 with the same topic:
&lt;a class="ext-link" href="https://forge.typo3.org/issues/57695"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://forge.typo3.org/issues/57695&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
After tweeting to other CMS and some answers it could be solved with the last Apple mac OS 10.13.x
&lt;/p&gt;
&lt;p&gt;
Can anyone with 10.13.x check this?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43428 (Improve CORS headers sent to REST Api requests) created</title>
      
        <dc:creator>andrei.igna</dc:creator>

      <pubDate>Tue, 27 Feb 2018 14:24:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43428</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43428/1519741458789608</guid>
      <description>&lt;p&gt;
Currently some CORS headers are not sent correctly for REST API requests. This doesn't break anything yet, but can be improved for better performance.
&lt;/p&gt;
&lt;p&gt;
The problematic headers are these:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; and &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; need to be sent just to preflight requests, meaning just on requests with OPTIONS method. Now they are sent back on any REST API request, which is unnecessary
&lt;/li&gt;&lt;li&gt;&lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; doesn't need to list the OPTIONS method. Preflight requests are made to check what's allowed, and OPTIONS requests are allowed by default. Current setup says something like 'I allow myself', as the preflight request is already a OPTIONS request
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
There's more detailed info here &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&lt;/a&gt;, but the relevant part is this (it doesn't have an anchor for direct link):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
(Note: as described below, the actual POST request does not include the Access-Control-Request-* headers; they are needed only for the OPTIONS request.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The proposed changes are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Move header &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; from &lt;code&gt;serve_request&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/class-wp-rest-server.php#L239"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api/class-wp-rest-server.php#L239&lt;/a&gt; to &lt;code&gt;rest_send_cors_headers&lt;/code&gt; &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L536"&gt;https://core.trac.wordpress.org/browser/trunk/src/wp-includes/rest-api.php#L536&lt;/a&gt; making it easier to control the CORS headers from only one place, with one hook
&lt;/li&gt;&lt;li&gt;Remove OPTIONS keyword from &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Send &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt; and &lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt; only on request with OPTIONS method (preflight), as it's the place where they are necessary
&lt;/li&gt;&lt;li&gt;While sending the Allow headers, include &lt;code&gt;Access-Control-Max-Age: 600&lt;/code&gt; for caching the preflight requests, thus improving the performance for next requests (less requests between browser &amp;amp; server when requesting same data). Timing can be changed
&lt;/li&gt;&lt;li&gt;&lt;em&gt;Optional&lt;/em&gt; - Include &lt;code&gt;Content-Disposition&lt;/code&gt; in &lt;code&gt;Access-Control-Allow-Headers&lt;/code&gt;, enabling direct file upload (requested in other tickets as well)
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Why?
To follow recommended specs for CORS and make the REST API work as expected with web apps
&lt;/p&gt;
&lt;p&gt;
All proposed changes were tested in the last few months on a fleet of ~500 websites with different web clients for managing WordPress data. Everything works fine
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #7306 (Error 404 with /index.php/%postname%/ permalink strucutre) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 27 Feb 2018 13:55:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7306#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7306#comment:20/1519739722386125</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #mobile by jcasariego. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/mobile/p1519739720000051"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 27 Feb 2018 13:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:48</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:48/1519736626083399</guid>
      <description>&lt;p&gt;
@richardkentgates as also @sami.keijonen pointed out, this ticket is about the login form username / email and password fields. As largely discussed in the previous comments, which I'd recommend to read, seems pretty clear there's no valid use case for a suggestion or hint about the expected format of a password or username. Even the email case is arguable, as users already registered with their email and they're not required to follow an expected format to login.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>sami.keijonen</dc:creator>

      <pubDate>Tue, 27 Feb 2018 12:49:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:47</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:47/1519735759405635</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Users enter (555) 555-5555 but the form is only designed to use 555-555-5555
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a good and proper use case for placeholder, but for phone number. In the login form there are only username/email and password fields.
&lt;/p&gt;
&lt;p&gt;
For password field there is no use for placeholder. For username field placeholder &lt;code&gt;email@example.org&lt;/code&gt; might work but we decided against it in yesterday &lt;code&gt;a11y&lt;/code&gt; meeting.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;User knows own email. If not, placeholder would not help.
&lt;/li&gt;&lt;li&gt;You can also enter username which is hard to give hint via placeholder in the same time as email.
&lt;/li&gt;&lt;li&gt;All the reasons mentioned in this ticket.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14877 (Ability to create exclusive custom taxonomies) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Tue, 27 Feb 2018 12:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14877#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14877#comment:60/1519734862169868</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by benoitchantre. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1519734860000103"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43427 (My website is down for 15 minute at particular time, daily basis on ...) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Feb 2018 12:27:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43427#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43427#comment:2/1519734438977850</guid>
      <description>invalid: &lt;p&gt;
Hi @arunkumarsaw, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
This Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions. Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43064 (wordpress on different port doesn't run customizer) closed</title>
      
        <dc:creator>tpaksu</dc:creator>

      <pubDate>Tue, 27 Feb 2018 12:26:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43064#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43064#comment:3/1519734408175133</guid>
      <description>maybelater: &lt;p&gt;
Hi Weston,
&lt;/p&gt;
&lt;p&gt;
I'm only using it for browsersync to automating CSS/JS development, I'm not always using port 3000 as the site_url. No problem. I don't need that anymore.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #43427 (My website is down for 15 minute at particular time, daily basis on ...) updated</title>
      
        <dc:creator>arunkumarsaw</dc:creator>

      <pubDate>Tue, 27 Feb 2018 12:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43427#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43427#comment:1/1519734329010540</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43427 (My website is down for 15 minute at particular time, daily basis on ...) created</title>
      
        <dc:creator>arunkumarsaw</dc:creator>

      <pubDate>Tue, 27 Feb 2018 12:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43427</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43427/1519734161730770</guid>
      <description>&lt;p&gt;
Working fine on localhost while error is on only server at 18:15 to 18:30(nearby).
My domain is &lt;a class="ext-link" href="https://www.eletimes.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.eletimes.com/&lt;/a&gt;
Warning: Error while sending QUERY packet. PID=1360 in /home/...../wp-includes/wp-db.php on line 1926 Error establishing a database connection
WordPress version : 4.9.4
&lt;/p&gt;
&lt;p&gt;
Please suggest about the problem.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>richardkentgates</dc:creator>

      <pubDate>Tue, 27 Feb 2018 12:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:46</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:46/1519733886419063</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/40462#comment:45" title="Comment 45"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@richardkentgates that's not really the point being discussed here :) Placeholders are supported by assistive technologies. The real point is that the proposed usage is against the specification and harmful for usability and accessibility. So far, there are no valid use cases.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The intended use IS the use case. I don't understand the insistence that there are no valid uses for this.
&lt;/p&gt;
&lt;p&gt;
I'll give you the use case I come across at least once a week...
&lt;/p&gt;
&lt;p&gt;
Users enter (555) 555-5555 but the form is only designed to use 555-555-5555. Or so.and.so@… when the form only accepts soandso@…. Mc'Deal when it will only accept McDeal.
&lt;/p&gt;
&lt;p&gt;
This assistance, or "hinting" or "additional information" is the intended purpose. That's why it's called a placeholder. It holds the place of actual data entry, by example.
&lt;/p&gt;
&lt;p&gt;
I work with seniors every day that cannot understand why forms fail/error and the errors that report aren't always clear enough to help, if any errors actually report aside from a red border. As it is now, tomorrow, I have to drive 45 minutes to Milton Fl so I can help a client get their CPA logged in because they just can't figure ot out.
&lt;/p&gt;
&lt;p&gt;
I think there is a lack of understanding here about how confusing the web still remains for some segments of the population. I don't agree with ignoring those users because a hanful of people have poor practices. Any and all aditional information to users is a good thing, even if some developers/designers choose to break their own websites.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
WordPress shouldn't encourage bad accessibility practices. For this reason, I'd propose to close this ticket as "wontfix", also considering there's a pending effort to review all the placeholders used in core, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/40331" title="#40331: defect (bug): The placeholder attribute should not be used as a replacement for a label (new)"&gt;#40331&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the logic behind the decision here is flawed. If this really is about accecibility and proper use, than maybe the solution should be for WP to manage the placeholder text based on predetermined criteria, rather than just tossing it out completely.
&lt;/p&gt;
&lt;p&gt;
This is pretty much all I can say about this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36971 (Show readme.txt from Themes) updated</title>
      
        <dc:creator>zodiac1978</dc:creator>

      <pubDate>Tue, 27 Feb 2018 11:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36971#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36971#comment:8/1519732447417862</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Themes are recommended to include a readme.txt file, using plugin directory’s readme.txt markdown format. This recommendation will soon become required.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://developer.wordpress.org/themes/release/writing-documentation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/themes/release/writing-documentation/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Maybe this ticket could be revisited if a readme.txt is required.
&lt;/p&gt;
&lt;p&gt;
I'm still convinced that we are violating the attribution requirement if we hide those attributions in a readme.txt which is &lt;strong&gt;not&lt;/strong&gt; shown to any backend user.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Declare licenses of any resources included such as fonts or images.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This requirement from the theme team is typically handled through a readme.txt.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43105 (CSS editor in customizer doesn't support everything) closed</title>
      
        <dc:creator>drivdigital</dc:creator>

      <pubDate>Tue, 27 Feb 2018 10:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43105#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43105#comment:5/1519727444125810</guid>
      <description>worksforme</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Tue, 27 Feb 2018 08:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:45/1519718877559960</guid>
      <description>&lt;p&gt;
@richardkentgates that's not really the point being discussed here :) Placeholders are supported by assistive technologies. The real point is that the proposed usage is against the specification and harmful for usability and accessibility. So far, there are no valid use cases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42948 (Backbone client sending empty string in X-WP-Nonce header by default ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Tue, 27 Feb 2018 06:48:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42948#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42948#comment:7/1519714087772481</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43265" title="#43265: defect (bug): REST API JS Client: Extend custom nonce functionality to collections (closed: fixed)"&gt;#43265&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43266" title="#43266: enhancement: REST API JavaScript Client: Support an empty string for nonce (closed: fixed)"&gt;#43266&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/43266" title="#43266: enhancement: REST API JavaScript Client: Support an empty string for nonce (closed: fixed)"&gt;#43266&lt;/a&gt; uses isEmpty() and should cover this I think.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43366 (_default_wp_die_handler() Need filter code for update css style.) updated</title>
      
        <dc:creator>ravipatel</dc:creator>

      <pubDate>Tue, 27 Feb 2018 04:59:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43366#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43366#comment:2/1519707556026054</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43392 (Support 'object' and 'array' types in register_meta()) updated</title>
      
        <dc:creator>diegoliv</dc:creator>

      <pubDate>Tue, 27 Feb 2018 04:51:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43392#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43392#comment:3/1519707070396632</guid>
      <description>&lt;p&gt;
Hey @azaozz thank you for the response! I think I agree with you regarding &lt;code&gt;maybe_unserialize()&lt;/code&gt; and about handling sanitization yourself if you're returning a more complex object. But what about a simple JSON object? a JSON object is not the same thing as a javascript object. A JS object might have simple properties or functions as properties. This would not be a good object to store in the database, of course. But a plain JSON object is really equivalent as an associative array in PHP. It's just a collection of simple properties like &lt;code&gt;'key' : 'value'&lt;/code&gt;. Returning this kind of object through Ajax, you end up with an associative array anyways (inside the &lt;code&gt;$_POST&lt;/code&gt; or &lt;code&gt;$_REQUEST&lt;/code&gt; globals).
&lt;/p&gt;
&lt;p&gt;
We can easily save associative arrays already with &lt;code&gt;update_post_meta()&lt;/code&gt;. Just throw an array as the value and WP automatically saves it into a proper format (a serialized string) on the database. And using &lt;code&gt;get_post_meta()&lt;/code&gt;, your serialized array is automatically converted back into an array. Is there any strong reason not to allow this same behavior for meta data updated through the REST API?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #40462 (Add placeholders to wp_login_form()) updated</title>
      
        <dc:creator>richardkentgates</dc:creator>

      <pubDate>Tue, 27 Feb 2018 02:53:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/40462#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/40462#comment:44/1519700013173082</guid>
      <description>&lt;p&gt;
Support for placeholders is forthcoming. Since accessibility is the issue and placeholders add additional hinting or information, this advancement in common CMSs would support the goals of screen reading software by adding further assistance to its users. While the progress is currently with accessibility-specific markup, it shows intent and progress toward incorporating these technologies into screen readers. Considering that WordPress development on some issues can take years, I think it would be prudent to incorporate these changes now and allow native development of placeholders in WP core.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/nvaccess/nvda/issues/7004"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/nvaccess/nvda/issues/7004&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.w3.org/TR/html-aria/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.w3.org/TR/html-aria/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.blindbargains.com/bargains.php?m=17611"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.blindbargains.com/bargains.php?m=17611&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #42742 (Add a has_errors() method to WP_Error) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Feb 2018 02:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42742#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42742#comment:6/1519698646833092</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42761" title="General: Introduce `WP_Error::has_errors()` method and use it where ..."&gt;42761&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
General: Introduce &lt;code&gt;WP_Error::has_errors()&lt;/code&gt; method and use it where appropriate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props robdxw, DrewAPicture, SergeyBiryukov.&lt;br /&gt;
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42742" title="#42742: enhancement: Add a has_errors() method to WP_Error (reopened)"&gt;#42742&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42761]: General: Introduce `WP_Error::has_errors()` method and use it where ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Feb 2018 02:30:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42761</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42761/1519698646307574</guid>
      <description>&lt;p&gt;
General: Introduce &lt;code&gt;WP_Error::has_errors()&lt;/code&gt; method and use it where appropriate.
&lt;/p&gt;
&lt;p&gt;
Props robdxw, DrewAPicture, SergeyBiryukov.
Fixes &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/42742" title="#42742: enhancement: Add a has_errors() method to WP_Error (reopened)"&gt;#42742&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Tickets #20602,​43426 batch updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Tue, 27 Feb 2018 02:06:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=20602%2C43426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=20602%2C43426/1519697181690131</guid>
      <description>duplicate: &lt;p&gt;
Hi @tomiastikainen, welcome to WordPress Trac!
&lt;/p&gt;
&lt;p&gt;
Thanks for the ticket, we're already tracking this enhancement in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20602" title="#20602: enhancement: Replace media (closed: wontfix)"&gt;#20602&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #43426 (Media Replace (Upload New File Versions)) created</title>
      
        <dc:creator>tomiastikainen</dc:creator>

      <pubDate>Tue, 27 Feb 2018 01:15:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43426</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43426/1519694117761597</guid>
      <description>&lt;p&gt;
Allow Admininstrator to replace a file in the media library by uploading a new file in its place. There is a plugin for this:
&lt;a class="ext-link" href="https://wordpress.org/plugins/enable-media-replace/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/enable-media-replace/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
However, this should be available also for free WordPress.com users.
&lt;/p&gt;
&lt;p&gt;
PS. To benchmark, see how it's done in Google Drive.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #42282 (Provide means of executing PHPUnit continuously over watched files in ...) closed</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Tue, 27 Feb 2018 00:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42282#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42282#comment:17/1519691493844202</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/42760" title="Build/Test Tools: Add `watch:phpunit` task.
This allow PHPUnit test ..."&gt;42760&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Build/Test Tools: Add &lt;code&gt;watch:phpunit&lt;/code&gt; task.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This allow PHPUnit test groups to run automatically when files are changed, rather than having to be ran manually throughout the development process. This creates a smoother developer experience, and a tighter feedback loop.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props iandunn, netweb, pento&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42282" title="#42282: enhancement: Provide means of executing PHPUnit continuously over watched files in ... (closed: fixed)"&gt;#42282&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [42760]: Build/Test Tools: Add `watch:phpunit` task.  This allow PHPUnit test ...</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Tue, 27 Feb 2018 00:31:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/42760</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/42760/1519691493321297</guid>
      <description>&lt;p&gt;
Build/Test Tools: Add &lt;code&gt;watch:phpunit&lt;/code&gt; task.
&lt;/p&gt;
&lt;p&gt;
This allow PHPUnit test groups to run automatically when files are changed, rather than having to be ran manually throughout the development process. This creates a smoother developer experience, and a tighter feedback loop.
&lt;/p&gt;
&lt;p&gt;
Props iandunn, netweb, pento
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/42282" title="#42282: enhancement: Provide means of executing PHPUnit continuously over watched files in ... (closed: fixed)"&gt;#42282&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #42948 (Backbone client sending empty string in X-WP-Nonce header by default ...) updated</title>
      
        <dc:creator>FPCSJames</dc:creator>

      <pubDate>Tue, 27 Feb 2018 00:12:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/42948#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/42948#comment:6/1519690354861388</guid>
      <description>&lt;p&gt;
I do not have any plugins overriding wp_create_nonce.
&lt;/p&gt;
&lt;p&gt;
I tested your patch, but unfortunately, it did not work. My original suggestion, checking whether the nonce is empty before options.beforeSend is set, does work.
&lt;/p&gt;
&lt;p&gt;
I believe I found the real issue. Keep in mind that in my use case, I'm embedding wp-api.js and my code outside of a WP deployment, so wpApiSettings is statically generated. Right now, that's only defining the root and versionString parameters.
&lt;/p&gt;
&lt;p&gt;
In wp.api.init(), the line:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;attributes.nonce          = args.nonce || wpApiSettings.nonce || '';&lt;/code&gt;
checks to see if init() is called directly with a nonce argument (it's not - undefined), if it's defined in wpApiSettings (it's not - undefined) and defaulting to an empty string otherwise. Therefore, from what I can tell, either that line needs to change to default to null instead of an empty string, or my change of isNull to isEmpty in sync() needs to be applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>