<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #38013 (Static Front Page section/controls should be contextual and allow ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 23:50:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38013#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38013#comment:7/1474156203409831</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38013/38013.2.diff" title="Attachment '38013.2.diff' in Ticket #38013"&gt;38013.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38013/38013.2.diff" title="Download"&gt;​&lt;/a&gt;, switch to letting &lt;code&gt;static_front_page&lt;/code&gt; section be contextual rather than the controls. This makes sense because if there aren't any pages then the “Static Front Page” section shouldn't be there. It also improves compatibility with when the &lt;code&gt;page_on_front&lt;/code&gt; and &lt;code&gt;page_for_posts&lt;/code&gt; controls get proper &lt;code&gt;active_callback&lt;/code&gt;s themselves. See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/29948" title="#29948: enhancement: Use contextual controls (active_callback) API for ... (new)"&gt;#29948&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38013.2.diff attached to Ticket #38013</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 23:47:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38013/38013.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38013/38013.2.diff/1474156060308634</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38083 (Regression: Change in File_Upload_Upgrader::__construct() in WP 4.6.1 ...) created</title>
      
        <dc:creator>DavidAnderson</dc:creator>

      <pubDate>Sat, 17 Sep 2016 23:40:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38083</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38083/1474155624166031</guid>
      <description>&lt;p&gt;
This change - &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38525" title="Upgrade/Install: Sanitize file name in `File_Upload_Upgrader`.
Merge ..."&gt;[38525]&lt;/a&gt; in WP 4.6.1 broke my plugin - &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/upload-larger-plugins/tags/1.4/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.svn.wordpress.org/upload-larger-plugins/tags/1.4/&lt;/a&gt; .
&lt;/p&gt;
&lt;p&gt;
I was using the upgrader_pre_download filter to over-ride the package (i.e. zip) that gets installed. However, the added check now makes that method impossible, because it applies a new consistency check. And specifically, realpath() returns false if the file in the parameter does not exist, causing the check to fail, and wp_die() to be called. If the two paths are compared without realpath() being called, the check would pass (i.e. the second string is indeed a substring of the first)... but because realpath() is introducing an implicit "file must exist" condition, it now fails.
&lt;/p&gt;
&lt;p&gt;
This renders the upgrader_pre_download filter useless for what I was doing, and I've had to go back to a much less elegant method used in the plugin before WP 3.7 to achieve the over-ride. &lt;a class="ext-link" href="https://plugins.svn.wordpress.org/upload-larger-plugins/tags/1.4.1/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://plugins.svn.wordpress.org/upload-larger-plugins/tags/1.4.1/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I don't know if this will have broken any other plugins.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #29948 (Use contextual controls (active_callback) API for ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 23:31:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29948#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29948#comment:9/1474155067328630</guid>
      <description>&lt;p&gt;
A writeup to assist with this: &lt;a class="ext-link" href="https://make.xwp.co/2016/07/24/dependently-contextual-customizer-controls/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://make.xwp.co/2016/07/24/dependently-contextual-customizer-controls/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38014 (blank /wp-admin/index.php after upgrade from 4.5.x, missing Save ...) updated</title>
      
        <dc:creator>scaturan</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:55:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38014#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38014#comment:5/1474152932852611</guid>
      <description>&lt;p&gt;
Actually, I had no resolution from the Support Forums for more than 1 week, so I had resorted here. Will keep looking for clues as to why the behavior exists.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38013 (Static Front Page section/controls should be contextual and allow ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:38:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38013#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38013#comment:6/1474151896070976</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38013/38013.1.diff" title="Attachment '38013.1.diff' in Ticket #38013"&gt;38013.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38013/38013.1.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Activate Static Front Page controls when a new page stub is created.
&lt;/li&gt;&lt;li&gt;Ensure that &lt;code&gt;dropdown-pages&lt;/code&gt; control gets a &lt;code&gt;select&lt;/code&gt; even if there are no pages created.
&lt;/li&gt;&lt;li&gt;Add newly-created page stubs to &lt;code&gt;dropdown-pages&lt;/code&gt; controls.
&lt;/li&gt;&lt;li&gt;Remove &lt;code&gt;active_callback&lt;/code&gt; from section to inherit contextual active state from controls.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38013.1.diff attached to Ticket #38013</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:35:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38013/38013.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38013/38013.1.diff/1474151758286602</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:26:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:2/1474151163309012</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-tinymce by azaozz. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-tinymce/p1474151159000005"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24143 (When define('WP_CONTENT_DIR', 'your-dir') twentythirteen - The theme ...) updated</title>
      
        <dc:creator>somedev</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:24:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24143#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24143#comment:20/1474151095591110</guid>
      <description>&lt;p&gt;
This theme issue seems to persist as of September 17, 2016, and 4.6.1. Themes folder path broken by WP_CONTENT_DIR, as well as many instances of "wp-content" hard coded into the core where it should be the GLOBAL instead, in my estimation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37936 (TinyMCE special character button does not insert non-breaking spaces) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:20:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37936#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37936#comment:1/1474150824814875</guid>
      <description>&lt;p&gt;
Confirmed in both Firefox and Chrome. Also some of the other white space characters (at the end of the list) don't get inserted.
&lt;/p&gt;
&lt;p&gt;
Passing upstream as this is from he default &lt;code&gt;charmap&lt;/code&gt; plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38002 (Customize: provide a path to editing posts created in nav menus) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38002#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38002#comment:4/1474150077227480</guid>
      <description>&lt;p&gt;
Here's a Customize Posts integration with the &lt;code&gt;dropdown-pages&lt;/code&gt; control:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://core.trac.wordpress.org/attachment/ticket/38002/static-front-page-dropdown-pages-controls-with-customize-posts.png"&gt;&lt;img width="300px" crossorigin="anonymous" src="http://core.trac.wordpress.org/raw-attachment/ticket/38002/static-front-page-dropdown-pages-controls-with-customize-posts.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Notice the edit and create buttons.
&lt;/p&gt;
&lt;p&gt;
Pull request that includes this code: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts/pull/272"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts/pull/272&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>static-front-page-dropdown-pages-controls-with-customize-posts.png attached to Ticket #38002</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 22:01:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38002/static-front-page-dropdown-pages-controls-with-customize-posts.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38002/static-front-page-dropdown-pages-controls-with-customize-posts.png/1474149687312195</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38063 (Better discoverability of keyboard shortcuts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:58:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38063#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38063#comment:6/1474149495901842</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yes, this would be a nice addition. We used to have something similar before upgrading to TinyMCE 4.
&lt;/p&gt;
&lt;p&gt;
Will need to figure out how to best manipulate the translated strings from JS while or after loading them in TinyMCE. Looks like they will need 3 states:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Windows/Linux mod key(s).
&lt;/li&gt;&lt;li&gt;Mac mod key(s).
&lt;/li&gt;&lt;li&gt;Maybe hide this on touch devices.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38015 (Customize: Nav menu items should preview using original object title ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38015#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38015#comment:6/1474148989514538</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38618" title="Customize: Ensure nav menu items lacking a label use the title from ..."&gt;38618&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Ensure nav menu items lacking a label use the title from the original object.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Use original title as placeholder for label and in control title. Prevent original title from overriding empty label in initial setting values.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38015" title="#38015: defect (bug): Customize: Nav menu items should preview using original object title ... (closed: fixed)"&gt;#38015&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38618]: Customize: Ensure nav menu items lacking a label use the title from ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:49:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38618</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38618/1474148989024920</guid>
      <description>&lt;p&gt;
Customize: Ensure nav menu items lacking a label use the title from the original object.
&lt;/p&gt;
&lt;p&gt;
Use original title as placeholder for label and in control title. Prevent original title from overriding empty label in initial setting values.
&lt;/p&gt;
&lt;p&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38015" title="#38015: defect (bug): Customize: Nav menu items should preview using original object title ... (closed: fixed)"&gt;#38015&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38081 (Update TinyMCE to 4.4.3) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:36:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38081#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38081#comment:2/1474148177870148</guid>
      <description>&lt;p&gt;
We can update now to 4.4.3, but there will be another version and we will have to update it again before beta to hopefully the version that will ship in WordPress 4.7 and will need most testing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38072 (Eliminate placeholder nav menu items in favor of auto-drafts in Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:34:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38072#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38072#comment:3/1474148087996449</guid>
      <description>&lt;p&gt;
I've opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38082" title="#38082: enhancement: Allow negative (placeholder) IDs in calls to get_metadata (closed: wontfix)"&gt;#38082&lt;/a&gt; specifically for allowing negative IDs in calls to &lt;code&gt;get_metadata&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38082 (Allow negative (placeholder) IDs in calls to get_metadata) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38082#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38082#comment:1/1474148043505575</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38082.0.diff attached to Ticket #38082</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:33:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38082/38082.0.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38082/38082.0.diff/1474148017973070</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38082 (Allow negative (placeholder) IDs in calls to get_metadata) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:33:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38082</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38082/1474148000489481</guid>
      <description>&lt;p&gt;
See &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38072" title="#38072: enhancement: Eliminate placeholder nav menu items in favor of auto-drafts in Customizer (new)"&gt;#38072&lt;/a&gt; for full background. Nav menu items are created in the customizer with negative IDs to serve as placeholders. This allows such nav menu items to be referenced before writing to the database. This works for previewing &lt;code&gt;nav_menu_item&lt;/code&gt; posts, but it turns out to not work for postmeta for such posts. The reason for this is &lt;code&gt;get_metadata&lt;/code&gt; uses &lt;code&gt;absint&lt;/code&gt; as opposed to &lt;code&gt;intval&lt;/code&gt; and so the placeholder nature of the object ID is dropped. Along with this change the &lt;code&gt;get_metadata&lt;/code&gt; function can short-circuit for such negative IDs after the &lt;code&gt;get_{$meta_type}_metadata&lt;/code&gt; filters apply since no such objects would exist in in the database which uses &lt;code&gt;UNSIGNED INTEGER&lt;/code&gt; for ID fields. As such, placeholder meta would only be supplied via filters.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38072 (Eliminate placeholder nav menu items in favor of auto-drafts in Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:21:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38072#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38072#comment:2/1474147294762047</guid>
      <description>&lt;p&gt;
@celloexpressions I'm not sure I understand the dependency on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38015" title="#38015: defect (bug): Customize: Nav menu items should preview using original object title ... (closed: fixed)"&gt;#38015&lt;/a&gt; or terms. Since nav menu items are just posts, then we can use straight &lt;code&gt;auto-draft&lt;/code&gt; as well.
&lt;/p&gt;
&lt;p&gt;
I'm not sure about using hybrid placeholders, other than perhaps a placeholder control could be added which could show some loading indicator and then get replaced with the actual control once the Ajax request completes. This would be similar to how Facebook reduces the sense of latency by showing stories with placeholder content while the page loads.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38080 (Focusing a customizer control from the preview should show the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 17 Sep 2016 21:15:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38080#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38080#comment:1/1474146934747802</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Perhaps the an equally cross theme-compatible to shift-click on mobile devices is long press. The problem with that, however, is there is no tooltip that would show as when hovering is done.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38078 (Wrong transcription of "D with stroke" chars) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 17 Sep 2016 20:55:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38078#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38078#comment:1/1474145750325238</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #15384 (wp-login.php refactor) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/15384#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/15384#comment:37/1474141818355478</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/15384#comment:36" title="Comment 36"&gt;sebastian.pisula&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think that this should be in WordPress 4.6.0
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think that this should be in WordPress 4.7.0 :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37873 (Consolidate customizer CSS) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:40:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37873#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37873#comment:4/1474141231870223</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks for volunteering to take this on @mrahmadawais!
&lt;/p&gt;
&lt;p&gt;
I think the first step is to research duplication of styles and duplication of selectors, and to evaluate the potential areas where things could be consolidated. We're probably best off adding any new common classes as opposed to removing any, to avoid JS issues and minimize back-compat concerns. Any changes will have compatibility implications due to the ability to extend the core UI with custom panels, sections, and controls. In general, we should move away from the &lt;code&gt;accordion-&lt;/code&gt; classes as those are from UI that is no longer used.
&lt;/p&gt;
&lt;p&gt;
I believe that &lt;code&gt;customize-nav-menus.css&lt;/code&gt; was largely duplicated from &lt;code&gt;customize-widgets.css&lt;/code&gt; and intended to all be merged into &lt;code&gt;customize-controls.css&lt;/code&gt; when the menu customizer plugin merged, but that didn't happen with all of the other work that was ongoing at that time.
&lt;/p&gt;
&lt;p&gt;
There are also numerous pending patches that would be impacted by these changes. Depending on how much we want to clean up, it may be best to work on an actual patch during 4.7 RC and commit early for 4.8.
&lt;/p&gt;
&lt;p&gt;
Also, previously and related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30618" title="#30618: enhancement: Clean up Customizer Media Control CSS (closed: fixed)"&gt;#30618&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36733" title="#36733: enhancement: Use a custom customizer section for add-widgets and add-menu-items ... (new)"&gt;#36733&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30713" title="#30713: enhancement: Customizer control subclasses (custom controls) should have all parent ... (closed: maybelater)"&gt;#30713&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36356 (Function signature of wp_parse_url() does not match parse_url()) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36356#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36356#comment:14/1474141120155635</guid>
      <description>&lt;p&gt;
Anyone that has a 5.2 install handy and can help test, please do.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34084 (Automatically log user in after installation) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:35:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34084#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34084#comment:7/1474140908626359</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch looks good to me.  I think we should get this in and have any welcome panel improvements tracked separately.  A welcome panel is still a better experience than a login form.
&lt;/p&gt;
&lt;p&gt;
We can call for testing with multiple password managers on make/core
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:71</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:71/1474140727706090</guid>
      <description>&lt;p&gt;
Can I suggest that the Background Scroll default to scroll? And/or warn users that fixed background images don't work as expected on mobile devices using viewports?
It's a bit confusing to me to see the screen icons at the bottom of the customizer. Do these settings apply only to the type of screen currently selected? So I have to set it 3 times? or something like that? If so, maybe a different default for the mobile view.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31039 (Move retrieve_password() from wp-login.php) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:31:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31039#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31039#comment:3/1474140718713075</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27403 (Improve UI for linking areas of Customizer preview to corresponding ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:30:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27403#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27403#comment:26/1474140655271047</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38080" title="#38080: defect (bug): Focusing a customizer control from the preview should show the ... (closed: fixed)"&gt;#38080&lt;/a&gt; is a prerequisite. We need to make sure that all proposals on this ticket also address the mobile experience.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11210 (Split wp_new_user_notification() into two functions) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:30:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11210#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11210#comment:17/1474140623692152</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I would argue that this is resolved with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34251" title="Move new user notification emails to `add_action()` callbacks.
When a ..."&gt;[34251]&lt;/a&gt;. The function wasn't split in two, but it's pretty trivial to only send one or the other now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38081 (Update TinyMCE to 4.4.3) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:29:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38081#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38081#comment:1/1474140580132253</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37507" title="#37507: defect (bug): Can't delete empty line between visual shortcodes. (closed: fixed)"&gt;#37507&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37808" title="#37808: defect (bug): Zero-width space stripped by TinyMCE again (closed: fixed)"&gt;#37808&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37808 (Zero-width space stripped by TinyMCE again) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:29:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37808#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37808#comment:13/1474140569625410</guid>
      <description>&lt;p&gt;
I've opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38081" title="#38081: defect (bug): Update TinyMCE to 4.4.3 (closed: fixed)"&gt;#38081&lt;/a&gt; to update TinyMCE which should resolve this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37507 (Can't delete empty line between visual shortcodes.) updated</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:28:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37507#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37507#comment:5/1474140498448327</guid>
      <description>&lt;p&gt;
I've opened &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38081" title="#38081: defect (bug): Update TinyMCE to 4.4.3 (closed: fixed)"&gt;#38081&lt;/a&gt; to update TinyMCE which should resolve this issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32563 (Introduce filter for disabling new user notifcation) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:27:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32563#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32563#comment:9/1474140477086840</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32563 (Introduce filter for disabling new user notifcation) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:27:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32563#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32563#comment:8/1474140455986792</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This was actually resolved a different way in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/34251" title="Move new user notification emails to `add_action()` callbacks.
When a ..."&gt;[34251]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38081 (Update TinyMCE to 4.4.3) created</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:27:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38081</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38081/1474140429280968</guid>
      <description>&lt;p&gt;
The new version of TinyMCE fixes a number of issues. Full Changelog: &lt;a class="ext-link" href="https://github.com/tinymce/tinymce/blob/master/changelog.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/tinymce/tinymce/blob/master/changelog.txt&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36678 (Shift-click in Customizer when collapsed does nothing) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:27:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36678#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36678#comment:13/1474140423440148</guid>
      <description>&lt;p&gt;
Follow up for mobile support: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38080" title="#38080: defect (bug): Focusing a customizer control from the preview should show the ... (closed: fixed)"&gt;#38080&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38080 (Focusing a customizer control from the preview should show the ...) created</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:24:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38080</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38080/1474140299490050</guid>
      <description>&lt;p&gt;
When shift-clicking on a partial in the preview, we now open the controls pane if it was collapsed as of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36678" title="#36678: defect (bug): Shift-click in Customizer when collapsed does nothing (closed: fixed)"&gt;#36678&lt;/a&gt;. Similarly, on mobile we should show the controls pane when a control is focused from the preview. This is of course not something users will commonly run into currently, since shift-click typically isn't available on small-screen devices; however, it will be necessary for things like &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27403" title="#27403: enhancement: Improve UI for linking areas of Customizer preview to corresponding ... (closed: fixed)"&gt;#27403&lt;/a&gt; to work.
&lt;/p&gt;
&lt;p&gt;
This should be fixed similarly to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36678" title="#36678: defect (bug): Shift-click in Customizer when collapsed does nothing (closed: fixed)"&gt;#36678&lt;/a&gt;, potentially by leveraging the same &lt;code&gt;paneVisible&lt;/code&gt; value on mobile when the controls are toggled.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31821 (Make interim login URL filterable) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:18:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31821#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31821#comment:3/1474139897412828</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38079 (Add hooks before output for each action in wp-login.php) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38079#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38079#comment:1/1474139777875130</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>38079.patch attached to Ticket #38079</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:14:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38079/38079.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38079/38079.patch/1474139681096466</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38079 (Add hooks before output for each action in wp-login.php) created</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Sat, 17 Sep 2016 19:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38079</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38079/1474139599075037</guid>
      <description>&lt;p&gt;
7 years ago, in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9682" title="#9682: enhancement: Make wp-login.php form pluggable (closed: fixed)"&gt;#9682&lt;/a&gt;,  &lt;code&gt;wp-login.php&lt;/code&gt; was made more pluggable. The thing is, if you just want to change the look (as my plugin "Theme My Login" does), you also have to replicate the logic.
&lt;/p&gt;
&lt;p&gt;
Having an action that fires just before the &lt;code&gt;login_header()&lt;/code&gt; call in each case of the action handler switch should be sufficient. One such hook is already present for one action: &lt;code&gt;lost_password&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
However, the hook &lt;code&gt;register&lt;/code&gt; is already in use for the register link as is the format &lt;code&gt;{$action}_form&lt;/code&gt;. So, I propose using &lt;code&gt;pre_{$action}_form&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Patch incoming.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>joyously</dc:creator>

      <pubDate>Sat, 17 Sep 2016 18:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:32/1474138464678901</guid>
      <description>&lt;p&gt;
If you decide to make the CSS theme-specific, could there also be some sort of indicator that the CSS exists, perhaps on the theme list page? Especially for novices, but also for experts that support novices, it would be so useful to be able to see at a glance which themes are 'tainted'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38078 (Wrong transcription of "D with stroke" chars) created</title>
      
        <dc:creator>Krstarica</dc:creator>

      <pubDate>Sat, 17 Sep 2016 16:28:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38078/1474129691633427</guid>
      <description>&lt;p&gt;
Letters 'Đ' (U+0110, Latin capital letter D with stroke) and 'đ' (U+0111, Latin small letter d with stroke) are transcribed to 'D' and 'd'.
&lt;/p&gt;
&lt;p&gt;
Instead they should be transcribed to: 'DJ' and 'dj', respectively, at least in Serbian language.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) closed</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 16:22:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:16/1474129324923835</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38617" title="Plugins: style the primary action link in the non-js &amp;#34;Installing ..."&gt;38617&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Plugins: style the primary action link in the non-js "Installing Plugin" page.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props curdin, ericlewis, melchoyce, karmatosed.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36430" title="#36430: enhancement: Style links on Installing plugin page (closed: fixed)"&gt;#36430&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38617]: Plugins: style the primary action link in the non-js "Installing ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 16:22:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38617</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38617/1474129323833843</guid>
      <description>&lt;p&gt;
Plugins: style the primary action link in the non-js "Installing Plugin" page.
&lt;/p&gt;
&lt;p&gt;
Props curdin, ericlewis, melchoyce, karmatosed.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36430" title="#36430: enhancement: Style links on Installing plugin page (closed: fixed)"&gt;#36430&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #36430 (Style links on Installing plugin page) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 16:18:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36430#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36430#comment:15/1474129127224213</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13071 (Update bubble appears only at the second load) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 16:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13071#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13071#comment:34/1474128066952963</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/13071/13071.diff" title="Attachment '13071.diff' in Ticket #13071"&gt;13071.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/13071/13071.diff" title="Download"&gt;​&lt;/a&gt; is a first pass / proof-of-concept. I took the opportunity to clean up some JS parts as well. The overall solution seems a bit hacky though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13071.diff attached to Ticket #13071</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:59:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13071/13071.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13071/13071.diff/1474127942879502</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #27314,​37018,​37138,​37448,​37969 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:38:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=27314%2C37018%2C37138%2C37448%2C37969</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=27314%2C37018%2C37138%2C37448%2C37969/1474126721293377</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38616" title="Accessibility: Standardize the remove/delete/cancel links in the Menus ..."&gt;38616&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Standardize the remove/delete/cancel links in the Menus screen and Publish meta boxes.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;submitdelete&lt;/code&gt; CSS class is used in various places across the admin for some&lt;br /&gt;
"red" action links. It is worth simplifying this rule for further improvements&lt;br /&gt;
related to color contrast.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;simplifies a non-standard styling for the "Remove/Cancel" links in the Menus screen
&lt;/li&gt;&lt;li&gt;underlines all the "Move to trash/Delete" red links in all the Publish meta boxes
&lt;/li&gt;&lt;li&gt;fixes CSS classes usage for all the Publish meta boxes primary buttons
&lt;/li&gt;&lt;li&gt;fixes broken layout for the old Link Manager publish meta box
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props karmatosed, hugobaeta, monikarao, afercia.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37969" title="#37969: defect (bug): Menus: simplify the &amp;#34;Remove&amp;#34; and &amp;#34;Cancel&amp;#34; link styling (closed: fixed)"&gt;#37969&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37018" title="#37018: defect (bug): Underline for &amp;#34;Move to Trash&amp;#34; in post editor is missing (closed: fixed)"&gt;#37018&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37448" title="#37448: defect (bug): Primary and secondary buttons need to reset the outline property (closed: fixed)"&gt;#37448&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37138" title="#37138: defect (bug): Audit usage of the buttons CSS classes (closed: fixed)"&gt;#37138&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27314" title="#27314: enhancement: Make sure button-primary has button class (closed: fixed)"&gt;#27314&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38616]: Accessibility: Standardize the remove/delete/cancel links in the Menus ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:38:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38616</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38616/1474126720806023</guid>
      <description>&lt;p&gt;
Accessibility: Standardize the remove/delete/cancel links in the Menus screen and Publish meta boxes.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;submitdelete&lt;/code&gt; CSS class is used in various places across the admin for some
"red" action links. It is worth simplifying this rule for further improvements
related to color contrast.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;simplifies a non-standard styling for the "Remove/Cancel" links in the Menus screen
&lt;/li&gt;&lt;li&gt;underlines all the "Move to trash/Delete" red links in all the Publish meta boxes
&lt;/li&gt;&lt;li&gt;fixes CSS classes usage for all the Publish meta boxes primary buttons
&lt;/li&gt;&lt;li&gt;fixes broken layout for the old Link Manager publish meta box
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Props karmatosed, hugobaeta, monikarao, afercia.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37969" title="#37969: defect (bug): Menus: simplify the &amp;#34;Remove&amp;#34; and &amp;#34;Cancel&amp;#34; link styling (closed: fixed)"&gt;#37969&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37018" title="#37018: defect (bug): Underline for &amp;#34;Move to Trash&amp;#34; in post editor is missing (closed: fixed)"&gt;#37018&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37448" title="#37448: defect (bug): Primary and secondary buttons need to reset the outline property (closed: fixed)"&gt;#37448&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37138" title="#37138: defect (bug): Audit usage of the buttons CSS classes (closed: fixed)"&gt;#37138&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27314" title="#27314: enhancement: Make sure button-primary has button class (closed: fixed)"&gt;#27314&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37018 (Underline for "Move to Trash" in post editor is missing) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:35:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37018#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37018#comment:10/1474126543840035</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37969 (Menus: simplify the "Remove" and "Cancel" link styling) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:32:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37969#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37969#comment:9/1474126355818098</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Refreshed patch. Fixes also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37018" title="#37018: defect (bug): Underline for &amp;#34;Move to Trash&amp;#34; in post editor is missing (closed: fixed)"&gt;#37018&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37969.2.diff attached to Ticket #37969</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:31:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37969/37969.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37969/37969.2.diff/1474126272719403</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34335 (URL shorteners ( redirects) should to be supported by the embed ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:27:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34335#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34335#comment:13/1474126079495766</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17552 (Plugin editor incorrectly calls some files inactive.) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Sat, 17 Sep 2016 15:03:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17552#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17552#comment:21/1474124582780350</guid>
      <description>&lt;p&gt;
+1 for this in 4.7, I've been patching my WordPress sites with this patch and it's works as expected - I haven't found any remaining issues.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37687 (Multisite - Enormous number of update queries during site creation ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sat, 17 Sep 2016 14:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37687#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37687#comment:2/1474122081964547</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I had &lt;code&gt;SAVEQUERIES&lt;/code&gt; enabled while creating a new site and got a fatal error because the memory size was exhausted.
&lt;/p&gt;
&lt;p&gt;
This is the value of &lt;code&gt;$GLOBALS['wpdb']-&amp;gt;queries&lt;/code&gt; before the &lt;code&gt;wpmu_new_blog&lt;/code&gt; action is fired: &lt;a class="ext-link" href="https://gist.github.com/ocean90/016029ea76ce70f574283e0b27910731#file-log-L156"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/ocean90/016029ea76ce70f574283e0b27910731#file-log-L156&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37018 (Underline for "Move to Trash" in post editor is missing) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 13:40:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37018#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37018#comment:9/1474119608313285</guid>
      <description>&lt;p&gt;
Just noticed when moving the Publish meta box below the post into the "normal sortables" there's a stray CSS rule that causes this on &lt;code&gt;:hover&lt;/code&gt;:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/nFKhdYbj83.png"&gt;&lt;img src="https://cldup.com/nFKhdYbj83.png" alt="https://cldup.com/nFKhdYbj83.png" crossorigin="anonymous" title="https://cldup.com/nFKhdYbj83.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37018 (Underline for "Move to Trash" in post editor is missing) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sat, 17 Sep 2016 13:14:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37018#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37018#comment:8/1474118083015102</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Posting here the same screenshots used on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37969" title="#37969: defect (bug): Menus: simplify the &amp;#34;Remove&amp;#34; and &amp;#34;Cancel&amp;#34; link styling (closed: fixed)"&gt;#37969&lt;/a&gt;. Worth noting this change would apply to all the Publish meta boxes: posts, attachments, comments, old link manager (any other?).
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/PE7M8P40Lv.png"&gt;&lt;img src="https://cldup.com/PE7M8P40Lv.png" alt="https://cldup.com/PE7M8P40Lv.png" crossorigin="anonymous" title="https://cldup.com/PE7M8P40Lv.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37877 (Conversion of quotation marks in wp_add_inline_script() results in ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 12:02:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37877#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37877#comment:2/1474113721338510</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
A string containing JavaScript which is passed to wp_add_inline_script() is sometimes rendered invalid when strings within it contain quotation marks.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I cannot seem to reproduce this. See attached test in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37877/37877.diff" title="Attachment '37877.diff' in Ticket #37877"&gt;37877.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37877/37877.diff" title="Download"&gt;​&lt;/a&gt;. The output is &lt;code&gt;&amp;lt;script type='text/javascript'&amp;gt;"Aujourd'hui";&amp;lt;/script&amp;gt;&lt;/code&gt; as expected.
&lt;/p&gt;
&lt;p&gt;
Can you give us some more info? Does the test work on your system?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Interestingly, reversing the quotation marks results in the same output:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The quotation marks you use for the string are irrelevant. PHP will only see what's inside, i.e. &lt;code&gt;'Aujourd\"hui';&lt;/code&gt; in your second example.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37877.diff attached to Ticket #37877</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:56:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37877/37877.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37877/37877.diff/1474113371168375</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:9/1474112597038860</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:42:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:18/1474112522805426</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34113.4.diff attached to Ticket #34113</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:41:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34113/34113.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34113/34113.4.diff/1474112503209987</guid>
      <description>&lt;p&gt;
s/node_view/node
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:38:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:9/1474112329480530</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37722#comment:8" title="Comment 8"&gt;mrahmadawais&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37722#comment:7" title="Comment 7"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@mrahmadawais Thanks for the patch! It would be great if the exact object type (&lt;code&gt;Requests_Utility_CaseInsensitiveDictionary&lt;/code&gt;) could be noted in the doc block instead of simply &lt;code&gt;object&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fixed that in the second patch.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not sure if we need a &lt;code&gt;@since 4.6.0 return value changed […]&lt;/code&gt; entry.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Lost you here, what are you talking about?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was thinking if we need to add a note to inform developers that the return type changed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38027 (Comments feed returns invalid timestamp in http headers when there are ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:37:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38027#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38027#comment:2/1474112263505909</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38027/35788.diff" title="Attachment '35788.diff' in Ticket #38027"&gt;35788.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38027/35788.diff" title="Download"&gt;​&lt;/a&gt; fixes the header for the comments feed by returning the current date in this case. However, posts are likely also affected as soon as the posts list table is empty (rarely the case though).
&lt;/p&gt;
&lt;p&gt;
Also, there's the &lt;code&gt;lastBuildDate&lt;/code&gt; field in the RSS feeds. Ideally, this would be best solved in the &lt;code&gt;get_lastcommentmodified()&lt;/code&gt; and &lt;code&gt;get_lastpostmodified()&lt;/code&gt; functions directly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35788.diff attached to Ticket #38027</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:35:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38027/35788.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38027/35788.diff/1474112144344692</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #17552 (Plugin editor incorrectly calls some files inactive.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:11:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17552#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17552#comment:20/1474110717072230</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24122 (When opening a file in Plugin Editor, show correct plugin in the ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:11:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24122#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24122#comment:13/1474110704828118</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/24122/35788.diff" title="Attachment '35788.diff' in Ticket #24122"&gt;35788.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/24122/35788.diff" title="Download"&gt;​&lt;/a&gt; is an updated patch that solves this issue as well as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17552" title="#17552: defect (bug): Plugin editor incorrectly calls some files inactive. (closed: fixed)"&gt;#17552&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35788" title="#35788: defect (bug): Plugin Editor wrong selected option when file selected (closed: duplicate)"&gt;#35788&lt;/a&gt; for details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35788.diff attached to Ticket #24122</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:11:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24122/35788.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24122/35788.diff/1474110675664407</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #24122,​35788 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:11:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=24122%2C35788</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=24122%2C35788/1474110671549541</guid>
      <description>duplicate: &lt;p&gt;
Replying to SergeyBiryukov:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to swissspidy:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="missing attachment"&gt;35788.diff&lt;/a&gt; correctly passes &lt;code&gt;$plugin&lt;/code&gt; when the main plugin file is needed and &lt;code&gt;$file&lt;/code&gt; when the current file is needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This ticket sounds like a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17552" title="#17552: defect (bug): Plugin editor incorrectly calls some files inactive. (closed: fixed)"&gt;#17552&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24122" title="#24122: defect (bug): When opening a file in Plugin Editor, show correct plugin in the ... (closed: fixed)"&gt;#24122&lt;/a&gt;, no?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ugh, it absolutely is. Thanks!
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #17552 (Plugin editor incorrectly calls some files inactive.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:10:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17552#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17552#comment:19/1474110618961148</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17552/35788.diff" title="Attachment '35788.diff' in Ticket #17552"&gt;35788.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17552/35788.diff" title="Download"&gt;​&lt;/a&gt; is an updated patch that solves this issue as well as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24122" title="#24122: defect (bug): When opening a file in Plugin Editor, show correct plugin in the ... (closed: fixed)"&gt;#24122&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35788" title="#35788: defect (bug): Plugin Editor wrong selected option when file selected (closed: duplicate)"&gt;#35788&lt;/a&gt; for details.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35788.diff attached to Ticket #17552</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sat, 17 Sep 2016 11:09:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17552/35788.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17552/35788.diff/1474110548959974</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37948 (Use `WP_Site` class globally) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Sat, 17 Sep 2016 08:57:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37948#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37948#comment:7/1474102657615745</guid>
      <description>&lt;p&gt;
@MikeSchinkel I don't think we should get into this just yet, but I agree that it might be useful to provide some of that functionality in the future. This might also make sense as it would somehow align with approaches like &lt;a class="ext-link" href="https://github.com/WP-API/wp-api-site-endpoints/issues/14"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/WP-API/wp-api-site-endpoints/issues/14&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
So I think it's a valid use-case, but I don't think we should add anything of it at this point even if we make the class globally available. This would belong to a new ticket anyway. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) closed</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 17 Sep 2016 06:26:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:34/1474093597450710</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38615" title="Media: Improved media titles when created from filename.
Preserves ..."&gt;38615&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Improved media titles when created from filename.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Preserves spaces and generally creates more accurate, cleaner titles from filenames of uploaded media.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38614" title="Media: Improved media titles when created from filename.
Preserves ..."&gt;[38614]&lt;/a&gt; to the 4.6 branch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38615]: Media: Improved media titles when created from filename.  Preserves ...</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 17 Sep 2016 06:26:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38615</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38615/1474093596956646</guid>
      <description>&lt;p&gt;
Media: Improved media titles when created from filename.
&lt;/p&gt;
&lt;p&gt;
Preserves spaces and generally creates more accurate, cleaner titles from filenames of uploaded media.
&lt;/p&gt;
&lt;p&gt;
Merge of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38614" title="Media: Improved media titles when created from filename.
Preserves ..."&gt;[38614]&lt;/a&gt; to the 4.6 branch.
&lt;/p&gt;
&lt;p&gt;
Props joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38072 (Eliminate placeholder nav menu items in favor of auto-drafts in Customizer) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:47:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38072#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38072#comment:1/1474091223489188</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1. I would probably prefer to wait for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38015" title="#38015: defect (bug): Customize: Nav menu items should preview using original object title ... (closed: fixed)"&gt;#38015&lt;/a&gt; so that we could also take a similar approach for new menu terms at the same time. As far as I can remember from the original solution with orphaned drafts, they essentially work the same as auto drafts for nav menu item posts. However, the approach outlined here would be good for parity with the way new pages are managed in menus and eventually for post editing. Now that there isn't an Ajax call to add items, on the user side we'd need to come up with a way to keep that from slowing things down; perhaps we could update all items that were added with a single Ajax call when the add-items panel is closed. Essentially, using a combination of auto drafts and placeholders.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;intval&lt;/code&gt; is probably a good idea for now, as this will require quite a bit of refactoring.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) reopened</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:43:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:33/1474091022760628</guid>
      <description>&lt;p&gt;
With that patch:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Filename: &lt;code&gt;Acer ×freemanii 'Jeffersred' (Autumn Blaze®); 2½ in.jpg&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Title: &lt;code&gt;Acer ×freemanii 'Jeffersred' (Autumn Blaze®); 2½ in&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;Filename: &lt;code&gt;Dette er en test, æøå ÆØÅ &amp;amp; halløj.jpg&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Title: &lt;code&gt;Dette er en test, æøå ÆØÅ &amp;amp; halløj&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Also reopening for 4.6 branch
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) closed</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:32/1474090887549514</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38614" title="Media: Improved media titles when created from filename.
Preserves ..."&gt;38614&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Media: Improved media titles when created from filename.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Preserves spaces and generally creates more accurate, cleaner titles from filenames of uploaded media.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props joemcgill.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [38614]: Media: Improved media titles when created from filename.  Preserves ...</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:41:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38614/1474090887081516</guid>
      <description>&lt;p&gt;
Media: Improved media titles when created from filename.
&lt;/p&gt;
&lt;p&gt;
Preserves spaces and generally creates more accurate, cleaner titles from filenames of uploaded media.
&lt;/p&gt;
&lt;p&gt;
Props joemcgill.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #38015 (Customize: Nav menu items should preview using original object title ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:34:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38015#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38015#comment:5/1474090496797369</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks good to me with those additional fixes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29211 (Customizer: extract a cropped-image control from header images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:25:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29211#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29211#comment:32/1474089904348654</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1474089901000487"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32861 (Site Icon: Provide display for all existing site-icon cropped images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:25:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32861#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32861#comment:9/1474089903879453</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1474089901000487"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36581 (Customizer Header Image Control should extend the cropped image control) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:25:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36581#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36581#comment:1/1474089903796949</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-themes by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-themes/p1474089901000487"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:17:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:62</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:62/1474089426816041</guid>
      <description>&lt;p&gt;
Would it be useful to upload various types of PDFs (ideally generated from different types of software) to this ticket for testing? Or maybe setup an open dropbox/google drive folder somewhere? Probably the most unique examples I can share include sheet music, construction drawings, and construction schedules.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34343 (Customizer: Make panel headers sticky?) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:07:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34343#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34343#comment:18/1474088847543208</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to 4.7 with the project that also includes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29158" title="#29158: task (blessed): Customizer UI Design lacks contrast for visual hierarchy and does not ... (closed: fixed)"&gt;#29158&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34391" title="#34391: defect (bug): Harden panel/section UI code by removing contents from being logically ... (closed: fixed)"&gt;#34391&lt;/a&gt;, making the sliding panels experience better.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:04:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:31/1474088674962398</guid>
      <description>&lt;p&gt;
There are numerous popular CSS plugins, many of which leverage the customizer: &lt;a class="ext-link" href="https://wordpress.org/plugins/search.php?q=css"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/search.php?q=css&lt;/a&gt;. At a glance many (most?) don't sanitize CSS. I should note here that probably the most popular is @johnregan3's, which has over 300,000 active installs (and his work to add customizer support transitioned into working on this for core).
&lt;/p&gt;
&lt;p&gt;
The combined popularity of these plugins is a strong argument for a core need for this functionality, especially when considering that it is an improvement over and extension of the existing code editors in core. If we can move forward with bundling the two libraries we need (CSSTidy and CodeMirror), the core solution will offer a better combination of security and user experience than any plugin currently does (some use the customizer with instant postMessage previewing, some have code editors, some save CSS as posts, some sanitize, but I don't think any do all of those things).
&lt;/p&gt;
&lt;p&gt;
Looks like Tailor also uses CodeMirror; seems like that's a good option here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 17 Sep 2016 05:00:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:83/1474088422157238</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:82" title="Comment 82"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:73" title="Comment 73"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm +1 for everything in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:68" title="Comment 68"&gt;68&lt;/a&gt;. I don't remember specifics of the previous attempt to remove the text color button, do you have a link to any previous discussions there @melchoyce?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looks like I was thinking of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27359" title="#27359: enhancement: Color Picker Missing From WordPress 3.9 (closed: fixed)"&gt;#27359&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh yeah, that rings a bell. We should definitely expect complaints (potentially a vocal minority) if we remove any buttons. However, if there are solid reasons, such as semantics, we have a good argument for the changes and those that really need those buttons can add them with plugins.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37948 (Use `WP_Site` class globally) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 17 Sep 2016 00:51:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37948#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37948#comment:6/1474073504879877</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37948#comment:4" title="Comment 4"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you highlight some others beyond &lt;code&gt;get_blogs_of_user()&lt;/code&gt;? I can somewhat see some of the benefits there, but can also see reasons/ways around them (I think). I didn't look too closely elsewhere, but it would be helpful to have other examples for context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I could envision &lt;code&gt;WP_Site&lt;/code&gt; to have properties of the site available so there is an obvious place to look for them. Compare to:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;WP_HOME&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;WP_SITEURL&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;DB_USER&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;DB_PASSWORD&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;DB_HOST&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;site_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;home_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;admin_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;content_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'name' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'description' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'wpurl' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'url' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'admin_email' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'html_type' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'text_direction' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'language' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'stylesheet_directory' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'language' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'template_url' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'atom_url' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'rdf_url' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'rss_url' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'comments_atom_url' )&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_bloginfo( 'comments_rss2_url' )&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
In addition I could envision these methods (or properties), with some possibly renamed to be more clear:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;plugins()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;active_plugins()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;inactive_plugins()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;mu_plugins()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;plugins_with_updates()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;drop_ins()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;themes()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;allowed_themes()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;current_theme()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;admin_menu()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;background_color()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;background_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;icon_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;background_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;feed_urls()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;current_user()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;users()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;subscribers()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;contributors()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;authors()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;editors()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;administrators()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;roles()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;page_ids()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;archives()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;categories()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;upload_path()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;upload_url()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;upload_subdir()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;upload_basedir()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;upload_baseurl()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;temp_dir()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;theme_mods()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;theme_roots()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;comments_popup_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;index_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;not_found_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;archive_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;post_type_archive_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;author_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;category_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;tag_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;taxonomy_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;date_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;home_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;front_page_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;page_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;paged_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;search_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;single_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;embed_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;singular_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;attachment_template()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;header_image()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;header_textcolor()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;home_path()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;importers()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;index_rel_link()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;intermediate_image_sizes()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;locale()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;locale_stylesheet_uri()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;meta_keys()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;nav_menu_locations()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;num_queries()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;page_statuses()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;plugin_updates()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;post_format_slugs()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;post_format_strings()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;post_mime_types()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;post_statuses()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;random_header_image()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;registered_nav_menus()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;shortcut_link()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;stylesheet_name()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;stylesheet_directory()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;stylesheet_directory_uri()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;stylesheet_uri()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;template_name()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;template_directory()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;template_directory_uri()&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;temp_dir()&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
We &lt;em&gt;might&lt;/em&gt; even consider this as a way to evolve some of the terminology make the it more consistent and easier to understand, e.g. what is the different between &lt;code&gt;site_url()&lt;/code&gt; and &lt;code&gt;home_url()&lt;/code&gt; and when are you supposed to use each?  Or &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;wpurl&lt;/code&gt;?  Or &lt;code&gt;'stylesheet_url'&lt;/code&gt; and &lt;code&gt;'template_url'&lt;/code&gt;?
&lt;/p&gt;
&lt;p&gt;
Of course all of the above it just fodder for discussion. I am not advocating that we implement that list of functions above as-is, just showing that there is a lot of information that could be consider "site" information that normally takes a lot of learning to discover and having it as properties or access methods of a class or object would be nice, especially if we can clean make the terminology consistent and potentially over time deprecate the functions that currently provide this information.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37981 (template_include not working in customizer previewer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 23:16:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37981#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37981#comment:1/1474067765948875</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by jaschaio. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1474067763000804"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>dustinbolton</dc:creator>

      <pubDate>Fri, 16 Sep 2016 21:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:83</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:83/1474060966197289</guid>
      <description>&lt;p&gt;
While also a little late to the game, I also wanted to chime in that we regularly encounter users attempting to move their site to different servers only to be met with difficulty due to certain characters in filenames not playing nicely with their new host.  It's an ongoing problem that we are seeing in greater numbers as international use of WordPress grows and more 'offending' files are uploaded into users' sites every day.  Would love to see this make it in as it's been a growing known issue for 4+ years now. :)
&lt;/p&gt;
&lt;p&gt;
Thanks,
Dustin Bolton
BackupBuddy Developer
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38077 (Facilitating embedding customizer controls outside of sections) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 20:15:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38077#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38077#comment:1/1474056958944366</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37964 (Allow customizer controls to be encapsulated by accepting ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 20:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37964#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37964#comment:2/1474056938863392</guid>
      <description>&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/38077" title="#38077: enhancement: Facilitating embedding customizer controls outside of sections (accepted)"&gt;#38077&lt;/a&gt; (Facilitating embedding customizer controls outside of sections)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29071 (Make it easier to include an instance of the Customizer outside of ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 20:15:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29071#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29071#comment:22/1474056931942807</guid>
      <description>&lt;p&gt;
Related: &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/38077" title="#38077: enhancement: Facilitating embedding customizer controls outside of sections (accepted)"&gt;#38077&lt;/a&gt; (Facilitating embedding customizer controls outside of sections)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38077 (Facilitating embedding customizer controls outside of sections) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 20:14:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38077/1474056890877262</guid>
      <description>&lt;p&gt;
Controls are currently assumed to be always contained within sections in the customizer. This makes it difficult to reuse the controls in other contexts, such as embedding multiple controls inside another control or embedding a control outside the context of the customizer entirely. This will facilitate embedding customize controls on the frontend for contextual editing without having to have the customizer sidebar open or even having to go into &lt;code&gt;customize.php&lt;/code&gt; at all.
&lt;/p&gt;
&lt;p&gt;
Some of the hacks required to get controls to appear outside of the customizer can be seen in &lt;a class="ext-link" href="https://github.com/xwp/standalone-customizer-controls"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/standalone-customizer-controls&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The Media control in particular needs to be updated to remove the logic resize the player controls when the section is expanded. The &lt;code&gt;embed&lt;/code&gt; method (used by widgets) also needs to not wait generally for a contained section to expand.
&lt;/p&gt;
&lt;p&gt;
Key dependency for &lt;a class="reopened ticket" href="http://core.trac.wordpress.org/ticket/29071" title="#29071: enhancement: Make it easier to include an instance of the Customizer outside of ... (reopened)"&gt;#29071&lt;/a&gt; (Make it easier to include an instance of the Customizer outside of customize.php)
&lt;/p&gt;
&lt;p&gt;
Depends on or is closely related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37964" title="#37964: enhancement: Allow customizer controls to be encapsulated by accepting ... (closed: fixed)"&gt;#37964&lt;/a&gt; (Allow customizer controls to be encapsulated by accepting pre-instantiated settings)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #38076 (Network admin plugin pages can be accessed on non-multisite) created</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:56:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38076/1474055767352984</guid>
      <description>&lt;p&gt;
I just noticed that it's theoretically possible to access a plugin-generated page in the network admin panel even if we're not on a multisite setup. The same applies to the user admin panel as well.
&lt;/p&gt;
&lt;p&gt;
To replicate, create a plugin that uses &lt;code&gt;add_menu_page()&lt;/code&gt; with a slug &lt;code&gt;my_test_page&lt;/code&gt;, hooked into &lt;code&gt;network_admin_menu&lt;/code&gt;. Then manually go to the URL &lt;code&gt;http://yourdomain.com/wp-admin/network/admin.php?page=my_test_page&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
This happens because the &lt;code&gt;is_multisite()&lt;/code&gt; check happens only after including the general &lt;code&gt;wp-admin/admin.php&lt;/code&gt; administration bootstrap file which takes care of any plugin pages by itself. The problem is we can't do it before because WordPress hasn't been loaded then. A possible solution would be to split the &lt;code&gt;require_once&lt;/code&gt; statement in &lt;code&gt;wp-admin/network/admin.php&lt;/code&gt; into two, one to load the WordPress core functions, the other to load &lt;code&gt;wp-admin/admin.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I don't think this is a very critical issue, but I thought it should be a ticket. It's very unlikely that anyone tries to access a network admin URL when they don't have a multisite. On the other hand, we catch that in other areas (through &lt;code&gt;! is_multisite()&lt;/code&gt; checks), so we might try to do it here as well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37447 (Remove redundant `is_multisite()` checks in network admin templates) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:35:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37447#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37447#comment:9/1474054550314422</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37447#comment:8" title="Comment 8"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a way we can work in a one line comment above the check in &lt;code&gt;wp-admin/network/admin.php&lt;/code&gt; to clarify its importance?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I added such a note in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37447/37447.2.diff" title="Attachment '37447.2.diff' in Ticket #37447"&gt;37447.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37447/37447.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37447.2.diff attached to Ticket #37447</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:34:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37447/37447.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37447/37447.2.diff/1474054474467957</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38064 (Surveying system to gather user voices) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38064#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38064#comment:8/1474053830289881</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38064#comment:7" title="Comment 7"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Two things: "consensus" means different things to people, and I think even with consensus, there is always a final decision-maker.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, agree.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not all things can result in "facts and hard data" - opinions are not inherently invalid and should not be outright disregarded. Facts and data still need interpretation, which is what I frequently see being written off as "opinion". Besides, why would anecdotal evidence not qualify as some sort of data? It may need to be weighted as less reliable, but it's still information you have at hand.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, agree as well. When such an interpretation is written off as opinion, though, there's always rational arguments you can put forward to demonstrate the reasoning.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I frequently find that circular arguments are happening not because of the actual information at hand, but rather the approach itself. Arguing against something is often far less productive than focusing on why something &lt;strong&gt;should&lt;/strong&gt; be done.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I have come to the conclusion time and time again that arguing against something is much easier (and this is probably in part because of my previous government work). I think this is similar to how theories are proven or disproven in science. Depending on your theory, not even the biggest numbers of positive findings can prove a theory to be true in every case, but a single negative finding is enough to disprove it. But this is rather anecdotal here.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But why not have a tool that allows us to query the users (that opted-in) directly? Why not let them tell you their biggest pain points? Why not let them help you define the priorities?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As stated, I don't want to have people tell me their biggest pain points - I want them to show me what they do and then interpret the data collected. It's not about binding decisions, it's about the kind of data that is valuable to collect in the first place. Admin usage data collection is a blessed project - I've even outlined an MVP. What it needs is the same as what I've advised you to find - an active project owner.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I understand what you are saying. However, the users can only show you what they do based on what you previously built and allowed them to do. As a (silly) example, if your UI is just a big red button labeled "PUSH ME!", your tests will reveal something like: "84% of users push the 'PUSH ME' button. That button is hugely important and a full success.".
&lt;/p&gt;
&lt;p&gt;
Yes, this is a very simplified example, but I want to make a point. Watching users interact with your product is already very much biased in that they will only ever be able, for each of your functions, to either use it or not. How would such data be able to show you if something is completely amiss? Users have been trained and are forced to use what you've already decided to build for them before.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;"People don't want an autoloader" is so nonsensical as to be a non-argument IMO. I mean, really, "people want an autoloader" is just as true of a statement as "people don't want an autoloader" - it is not meaningful in any real way on its own. This isn't an argument around "wanting" an autoloader, it's about whether it makes sense for WordPress core to bundle and/or use one itself. What developers would gain from a bundled autoloader is important in assessing the value of the feature, but it's not about wanting the actual thing itself.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Yes, totally agree. As I had already written in a response on that exact ticket, the end goal is not to have an autoloader be included, the end goal is to have a code base that is optimized to only load code when needed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I responded to your poll in the extreme small minority of "No, it's too early" because it was the closest response to "WordPress core doesn't seem to be structured in a way that actually makes sense with an autoloader and maybe a 5.3 baseline makes more sense first but I don't have any fixed opinion, so I guess this will let me see the results, in any case". That's another problem with those polls - there's no "other" and you can't view the results without choosing something, so who knows how many people just clicked one to get through (it'll bias toward the top option, which the audience itself is already biased toward). Why cite it at all?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You're absolutely right in that PHP 5.3 should be the absolute first step when talking about any modernization of the code base. On my personal list of crucial changes, this was number 1, with the autoloader only being number 3.
&lt;/p&gt;
&lt;p&gt;
However, after looking at a lot of discussions here, looking at the collected stats, and doing some research of my own, I've come to the conclusion PHP 5.2 compatibility will not be removed any time soon. The way I interpret the collected stats, the 5.2 sites do not contain many serious, active sites that are worth protecting, and their absolute number will not drop any further. The percentage was mostly decreasing because the overall number of installations was climbing, and this will soon hit a natural ceiling. So, my guess would be that we will not drop below an "acceptable" percentage threshold in the coming years, if the current criteria remains as is.
&lt;/p&gt;
&lt;p&gt;
That's the exact reason why I initially started commenting on the autoloader ticket. I wanted to prevent designing an autoloader API for WP &amp;amp; plugins/themes when we don't even have namespaces yet. So, I actually agree that it is too early for an autoloader to be included in form of an API. However, we can't start soon enough refactoring the code base, as that is needed, with an autoloader or not. The autoloader is a nice way of making moving files around less painful.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While I heartily agree that WordPress core does not adequately focus on feedback mechanisms, I would be very cautious about the difference between "I'm not being heard" and "I'm not getting my way". If there's a sentiment that "my desire for an autoloader hasn't been heard", I think that is pretty clearly not true - it's the outcome that isn't satisfactory. That's not any less legitimate, but it's a very different thing to focus on improving.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hehe, I guess my ticket does really come off as a "Bah, no one wants my autoloader"-whining, right?
&lt;/p&gt;
&lt;p&gt;
But, truth be told, the input I contributed to particular ticket has garnered more attention than I expected, and the fact that there was even a Composer autoloader committed within Core, even if only briefly, is a bigger achievement for me personally than I could have hoped for. At the very least, people are more aware of the issues at play than before.
&lt;/p&gt;
&lt;p&gt;
This ticket here however is not meant to have any impact on the autoloader one, which was merely the impulse that caused me to have a more "philosophical" moment.
&lt;/p&gt;
&lt;p&gt;
The reflection was more along the lines of: "Wow, half of the discussion in that ticket could probably have been avoided if we would have better tools to get representative data!".
&lt;/p&gt;
&lt;p&gt;
I just hate wasting time, and I not only optimize my code, but also my processes, and my life in general. The way that the discussions in some of the tickets evolve just doesn't feel right to me. I feel like dropped back into a three hour government meeting where everyone speaks, no-one listens&lt;sub&gt; and at the end there's neither agenda nor decisions.
&lt;/sub&gt;&lt;/p&gt;
&lt;p&gt;
Maybe this is just me...
&lt;/p&gt;
&lt;p&gt;
Anyway, thanks already for taking the time to discuss this in a productive way and trying to read between the lines, I really appreciate it. If you estimate that this ticket itself is just another waste of time, and that there's already all the tools we need to make meaningful progress, then please just close this ticket. I probably don't know half of the sources of data that are available to the Core team, so this could well be just a meaningless rant on my part.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22938 (Presentation of hierarchical taxonomy in Media modal should be ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:21:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22938#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22938#comment:19/1474053671637890</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474053668000291"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>dglingren</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:61/1474053287510915</guid>
      <description>&lt;p&gt;
@markoheijnen,
&lt;/p&gt;
&lt;p&gt;
Thanks for your quick response. I am always looking for PDF documents to test with; if you get a failing document that you can share, let me know. MLA also does a lot of PDF parsing to extract IPTC, EXIF and XMP metadata and there are many odd cases that don't work without special code.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36908 (Customizer menus and widgets "search" usability and visual improvements) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:10:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36908#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36908#comment:11/1474053045541970</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36908#comment:10" title="Comment 10"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Tested and the patch works well. @ryankienstra I think the widget search should also have the close icon that's now in menus. The search icon color might be a bit too dark and there might be a bit too much padding-right on it, what do you think @melchoyce? This should be close to if not ready for commit though.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From the screenshot: I think even padding (equal on left and right) works well around icons. It does look like there's a little more padding on the right. I also agree the search icon's a little too dark — I'd try either &lt;code&gt;#72777c1&lt;/code&gt;, or even &lt;code&gt;#b4b9be&lt;/code&gt; if we want to go really light.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:60/1474052548887514</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474052542000264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37840 (Optimize full size images) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37840#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37840#comment:8/1474052548777060</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474052542000264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:02:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:77/1474052548655361</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474052542000264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22363 (Accents in attachment filenames should be sanitized) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:02:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22363#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22363#comment:82/1474052547711641</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474052542000264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:02:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:45/1474052546902710</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474052542000264"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Fri, 16 Sep 2016 19:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:82/1474052493140903</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:73" title="Comment 73"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm +1 for everything in &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:68" title="Comment 68"&gt;68&lt;/a&gt;. I don't remember specifics of the previous attempt to remove the text color button, do you have a link to any previous discussions there @melchoyce?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Looks like I was thinking of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27359" title="#27359: enhancement: Color Picker Missing From WordPress 3.9 (closed: fixed)"&gt;#27359&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:50:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:59/1474051857330390</guid>
      <description>&lt;p&gt;
@dglingren I found later on that I read your message here as I was sure it was on Slack. So I tried out the bulk action and with the invoice PDF I have, it only shows the logo and the rest is removed. So same behavior as others.
But I will look into your plugins code to see if there are things to learn from.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38073 (Deprecate and replace wp_reset_vars()) updated</title>
      
        <dc:creator>MattyRob</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:50:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38073#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38073#comment:2/1474051819292225</guid>
      <description>&lt;p&gt;
Any estimate of how many plugins make a call in this function?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:44</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:44/1474051541851893</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thanks @swissspidy – patch updated to address those two issues in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.11.diff" title="Attachment '22744.11.diff' in Ticket #22744"&gt;22744.11.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.11.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22744.11.diff attached to Ticket #22744</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:44:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22744/22744.11.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22744/22744.11.diff/1474051488535828</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>dglingren</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:58/1474051072158702</guid>
      <description>&lt;p&gt;
@markoheijnen,
&lt;/p&gt;
&lt;p&gt;
I am the Media Library Assistant author and I'd be happy to help you in any way I can. MLA supports image generation in two ways:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The [mla_gallery] shortcode has an mla_viewer parameter that generates images for its gallery display.
&lt;/li&gt;&lt;li&gt;The Media/Assistant admin submenu has a "Thumbnail" bulk action that will generate images for PDF documents and add them to the Media Library as separate items. Then, for example, the new items can be used as the Featured Image for the document to avoid generating the image each time it is displayed in an [mla_gallery] output.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
These options are described in the "Thumbnail Substitution Support, mla_viewer" section of the Settings/Media Library Assistant Documentation tab. Let me know if there's anything I can do to help!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37608 (Undefined index: extension in class-wp-image-editor.php) updated</title>
      
        <dc:creator>JanR</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:24:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37608#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37608#comment:13/1474050261533003</guid>
      <description>&lt;p&gt;
Today I noticed something relevant -I think- in the Media Library: strange behavior when a file name has a &lt;code&gt;%&lt;/code&gt; sign in it. In a very extreme case, double extension it and name your file &lt;code&gt;filename.html%00.png&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
On my dev site: after uploading, it has the following Attachment Details:
&lt;/p&gt;
&lt;p&gt;
WordPress trunk
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
File name: filename.html00.png
File type: image/png
URL &lt;a class="ext-link" href="https://www.vanilla-wp.org/wp-content/uploads/2016/09/filename.html00.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.vanilla-wp.org/wp-content/uploads/2016/09/filename.html00.png&lt;/a&gt;
Title: filename-html%00-png
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
and the View attachment URL goes to &lt;code&gt;about:blank&lt;/code&gt; in Chrome. The HTML code for the link has an additional &lt;code&gt;/&lt;/code&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;a class="view-attachment" href="https://www.vanilla-wp.org/filename-html%00-png/"&amp;gt;View attachment page&amp;lt;/a&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Firefox does not have this behavior and the link is: &lt;code&gt;https://www.vanilla-wp.org/filename-html%00-png/&lt;/code&gt; resulting in a HTTP 400 Bad Request - Invalid URL error. (on IIS).
&lt;/p&gt;
&lt;p&gt;
When I remove the double extension, the upload gives me an error message:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
filename.html%00 This file type is not allowed. Please try another.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In WordPress 4.6.1 (had to remove this test URL):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
File name: filename.html00.png
File type: image/png
URL &lt;a class="ext-link" href="http://www.vanilla-wp.org/test-4.6/wp-content/uploads/2016/09/filename.html00.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.vanilla-wp.org/test-4.6/wp-content/uploads/2016/09/filename.html00.png&lt;/a&gt;
Title: filename-html%00
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
After talking to @joemcgill on Slack, I tested WordPress trunk with &lt;a href="https://core.trac.wordpress.org/attachment/ticket/37989/37989.3.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/37989/37989.3.diff&lt;/a&gt; applied:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
File name: filename.html00.png
File type: image/png
URL &lt;a class="ext-link" href="https://www.vanilla-wp.org/wp-content/uploads/2016/09/filename.html00.png"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.vanilla-wp.org/wp-content/uploads/2016/09/filename.html00.png&lt;/a&gt;
Title: filename.html
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The View attachment URL issue is fixed with the applied diff.
&lt;/p&gt;
&lt;p&gt;
Now if you asked me what correct behavior is, I don't know. But I don't think it's a good idea to base the file type from it's last extension (in case of a double extension).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37948 (Use `WP_Site` class globally) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:16:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37948#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37948#comment:5/1474049817816421</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37948#comment:4" title="Comment 4"&gt;jeremyfelt&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Can you highlight some others beyond &lt;code&gt;get_blogs_of_user()&lt;/code&gt;? I can somewhat see some of the benefits there, but can also see reasons/ways around them (I think). I didn't look too closely elsewhere, but it would be helpful to have other examples for context.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hmm, indeed I couldn't find anything else except &lt;code&gt;get_blogs_of_user()&lt;/code&gt;, so from that point of view it might indeed be a little "too much" to load the class globally only for that one function. Let's say we don't make this class globally available, how would you continue with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37061" title="#37061: enhancement: Use `get_sites()` in `get_blogs_of_user()` (closed: fixed)"&gt;#37061&lt;/a&gt;? Return a different object type on non-multisite like the latest patch does? Or do you have another idea? :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In general - I'm wary of pushing for &lt;code&gt;WP_Site&lt;/code&gt; to exist outside of multisite in the near future due to its close relationship with the &lt;code&gt;wp_blogs&lt;/code&gt; table as well as a handful of its properties that only multisite understands. Of course, it's always possible that this changes in the future. :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think it would be logical to provide the &lt;code&gt;WP_Site&lt;/code&gt; class to non-multisite setups because these actually are a site. While the class is usually filled with data from the &lt;code&gt;wp_blogs&lt;/code&gt; table, it's not restricted to that in its current state, and many parameters can easily be filled with similar data from a non-multisite setup (as we do in &lt;code&gt;get_blogs_of_user()&lt;/code&gt;, and maybe we could even fill the &lt;code&gt;public&lt;/code&gt; property according to the "Discourage search engines..." setting). But I also see your concern as it might become easier to introduce bugs if it's loaded everywhere.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:09:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:57/1474049378059000</guid>
      <description>&lt;p&gt;
Current status is that I'm refreshing the patch so it works again. Will happen in the next 36 hours.
&lt;/p&gt;
&lt;p&gt;
For plugins, I don't know how "Media Library Assistant" should work but it doesn't generate an image for me. "PDF Image Generator" has same mistake as the current code and so do some others that solly only use imagick logic. I will work on a catalog of PDF's we can use. The current one I use is an invoice that I can't share.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38061 (Rename the text window name on the editor) updated</title>
      
        <dc:creator>rseigel</dc:creator>

      <pubDate>Fri, 16 Sep 2016 18:02:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38061#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38061#comment:3/1474048943645207</guid>
      <description>&lt;p&gt;
So call it HTML. Problem solved. Doesn't require years of back and forth to fix. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Fri, 16 Sep 2016 17:37:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:199</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:199/1474047476754783</guid>
      <description>&lt;p&gt;
I would think we should be using register_rest_route rather than WP AJAX, measurements suggest a 15% performance boost there.
&lt;/p&gt;
&lt;p&gt;
Can we make a demonstrative optimisation that we can benchmark to prove these aren't just theoretical improvements? The moment we can say this is a 2% or a 5% improvement this becomes an obvious sell. At the moment we're relying on best practices, personal experience and theory, but we have nothing hard and concrete. Identifying an easy win to demonstrate practically would be a big win
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37608 (Undefined index: extension in class-wp-image-editor.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 17:26:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37608#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37608#comment:12/1474046819555968</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474046817000237"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 17:22:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:31/1474046576156417</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by janr. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1474046302000225"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 17:15:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:30/1474046115343399</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by janr. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1474046044001784"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>lalunecreative</dc:creator>

      <pubDate>Fri, 16 Sep 2016 17:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:10/1474045614605176</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 I'm also adding to this one, our site uses auto updates for bug fixes and features for our custom theme which is currently in a broken state until this gets resolved.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Fri, 16 Sep 2016 16:57:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:81/1474045073407840</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:80" title="Comment 80"&gt;hugobaeta&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why do you say it isn't readily available to the end-user? it seems to be well supported... &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
"Not readily available to end-users" as in "there is no button for it in the WordPress toolbar, so unless you know about the element and how to mark it up, you can't use it."
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not 100% sure, but seems like the right context for it, right @mor10 ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, it would serve that purpose. Which makes me wonder if maybe we should be replacing the Underline button with a Highlight button. After all, highlighting has become really popular on Medium etc.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38064 (Surveying system to gather user voices) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 16 Sep 2016 16:30:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38064#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38064#comment:7/1474043459867106</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38064#comment:5" title="Comment 5"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The point is, when large teams collaborate, there are two ways to productively conclude a discussion:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Participants agree on a consensus.
&lt;/li&gt;&lt;li&gt;An authority takes a decision.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Two things: "consensus" means different things to people, and I think even with consensus, there is always a final decision-maker.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For 1., the discussion needs to follow clear argumentation, where all the arguments that are introduced by each of the sides can either be asserted or refuted. Only facts and hard data can be asserted or refuted, opinions can't. Arguments are asserted or refuted until only the valid ones are left, and these are then weighed against each other to determine whether it's an overall improvement or not.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not all things can result in "facts and hard data" - opinions are not inherently invalid and should not be outright disregarded. Facts and data still need interpretation, which is what I frequently see being written off as "opinion". Besides, why would anecdotal evidence not qualify as some sort of data? It may need to be weighted as less reliable, but it's still information you have at hand.
&lt;/p&gt;
&lt;p&gt;
I frequently find that circular arguments are happening not because of the actual information at hand, but rather the approach itself. Arguing against something is often far less productive than focusing on why something &lt;strong&gt;should&lt;/strong&gt; be done.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But why not have a tool that allows us to query the users (that opted-in) directly? Why not let them tell you their biggest pain points? Why not let them help you define the priorities?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As stated, I don't want to have people tell me their biggest pain points - I want them to show me what they do and then interpret the data collected. It's not about binding decisions, it's about the kind of data that is valuable to collect in the first place. Admin usage data collection is a blessed project - I've even outlined an MVP. What it needs is the same as what I've advised you to find - an active project owner.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Statistically speaking, that poll is complete nonsense, and not much more than a nice graphics, I'm fully aware of that. But against a "People don't want an autoloader" or similar argument, it's the best I could come up with. Should I have tried to run a normal survey with much more nuanced questions against the WP developer base as an unknown? How many responses do you think I would have gotten?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;&lt;li&gt;"People don't want an autoloader" is so nonsensical as to be a non-argument IMO. I mean, really, "people want an autoloader" is just as true of a statement as "people don't want an autoloader" - it is not meaningful in any real way on its own. This isn't an argument around "wanting" an autoloader, it's about whether it makes sense for WordPress core to bundle and/or use one itself. What developers would gain from a bundled autoloader is important in assessing the value of the feature, but it's not about wanting the actual thing itself.
&lt;/li&gt;&lt;li&gt;Yes, I think more valuable data in this instance is qualitative data around the why and how of how developers currently and would like to leverage Composer and autoloading in general, and how the two things do or don't fit with WordPress core. This is why you need a project owner and process. You could collect responses in a GitHub issue, or distribute a survey via word of mouth, or whatever - people need reassurance that it is actually being actively collected and interpreted, and that's what an owner and process should help define. Responses will always be limited and biased in some manner, fretting about that will only guarantee that you never have anything to get a response to at all.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
I responded to your poll in the extreme small minority of "No, it's too early" because it was the closest response to "WordPress core doesn't seem to be structured in a way that actually makes sense with an autoloader and maybe a 5.3 baseline makes more sense first but I don't have any fixed opinion, so I guess this will let me see the results, in any case". That's another problem with those polls - there's no "other" and you can't view the results without choosing something, so who knows how many people just clicked one to get through (it'll bias toward the top option, which the audience itself is already biased toward). Why cite it at all?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, this was not merely pointing at that one ticket. I think that there's a more general sentiment of "not being heard" (by users/devs/specific communities/...) that would be alleviated by better "hearing tools"... ;)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While I heartily agree that WordPress core does not adequately focus on feedback mechanisms, I would be very cautious about the difference between "I'm not being heard" and "I'm not getting my way". If there's a sentiment that "my desire for an autoloader hasn't been heard", I think that is pretty clearly not true - it's the outcome that isn't satisfactory. That's not any less legitimate, but it's a very different thing to focus on improving.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34450 (get_id_from_blogname returns false if the main domain starts with www.) updated</title>
      
        <dc:creator>igmoweb</dc:creator>

      <pubDate>Fri, 16 Sep 2016 16:14:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34450#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34450#comment:7/1474042450689532</guid>
      <description>&lt;p&gt;
@flixos90
&lt;/p&gt;
&lt;p&gt;
I would keep the same return types than before. So yes, I would check &lt;code&gt;if empty( get_sites() ) return null;&lt;/code&gt; to keep backward compatibility and improve documentation for the function.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24661 (remove_accents is not removing combining accents) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Fri, 16 Sep 2016 16:04:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24661#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24661#comment:18/1474041873397342</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi, do you mean put the constant through an &lt;code&gt;apply_filters()&lt;/code&gt;? If so, is there a use case?
&lt;/p&gt;
&lt;p&gt;
Could use just ASCII &lt;code&gt;[A-Za-z]&lt;/code&gt; instead of &lt;code&gt;WP_LATIN_SCRIPT_REGEX_ALT&lt;/code&gt; (and &lt;code&gt;\p{Latin}&lt;/code&gt;), as the stripping here comes after the ASCII mapping, rather than before as in the ICU situation, but against that the &lt;code&gt;$chars&lt;/code&gt; mapping isn't complete.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21676 (Pass a variable to get_template_part()) updated</title>
      
        <dc:creator>shamai</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21676#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21676#comment:57/1474041344662035</guid>
      <description>&lt;p&gt;
I have been using:
&lt;/p&gt;
&lt;pre class="wiki"&gt;include( locate_template( 'template-parts/content.php' ) );
&lt;/pre&gt;&lt;p&gt;
I think it works well…
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16031 (Bulk actions: Reactivate bulk actions hook + add hander hook for all ...) updated</title>
      
        <dc:creator>Veraxus</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:54:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16031#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16031#comment:84/1474041258108113</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've uploaded a new comprehensive patch (16031-4.7.patch) for the latest trunk per the format that @ericlewis and I discussed previously; I've also added a new sample plugin that allows for testing on all admin screens.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38073 (Deprecate and replace wp_reset_vars()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:49:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38073#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38073#comment:1/1474040972275096</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>bulk_action_test.php attached to Ticket #16031</title>
      
        <dc:creator>Veraxus</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:47:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16031/bulk_action_test.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16031/bulk_action_test.php/1474040850791570</guid>
      <description>&lt;p&gt;
Sample plugin for testing 16031-4.7.patch (all screens)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>16031-4.7.patch attached to Ticket #16031</title>
      
        <dc:creator>Veraxus</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:45:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/16031/16031-4.7.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/16031/16031-4.7.patch/1474040739731611</guid>
      <description>&lt;p&gt;
4.7-targeted patch with bulk action handlers
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #29060 (Don't pass around the resetpass key) updated</title>
      
        <dc:creator>jfarthing84</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:42:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29060#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29060#comment:9/1474040579079568</guid>
      <description>&lt;p&gt;
@nacin I know I'm 2 years late to asking but can I get an explanation as to why this change was made?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38063 (Better discoverability of keyboard shortcuts) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38063#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38063#comment:5/1474040417416077</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by mor10. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1474040415000402"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21676 (Pass a variable to get_template_part()) updated</title>
      
        <dc:creator>sayedwp</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:29:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21676#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21676#comment:56/1474039759406005</guid>
      <description>&lt;p&gt;
Well, meanwhile, this can be used which will do the same thing
&lt;/p&gt;
&lt;pre class="wiki"&gt;
/**
 * Load a template part into a template
 *
 * @param string $slug The slug name for the generic template.
 * @param string $name The name of the specialised template.
 * @param array $params Any extra params to be passed to the template part.
 */
function get_template_part_extended( $slug, $name = null, $params = array() ) {
	if ( ! empty( $params ) ) {
		foreach ( (array) $params as $key =&amp;gt; $param ) {
			set_query_var( $key, $param );
		}
	}
	get_template_part( $slug, $name );
}
&lt;/pre&gt;&lt;p&gt;
I use this in my projects sometimes, it makes extra params available in the template part.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>protocol_3.patch attached to Ticket #37300</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Fri, 16 Sep 2016 15:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37300/protocol_3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37300/protocol_3.patch/1474038209605246</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Tickets #37989,​38075 batch updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:50:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=37989%2C38075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=37989%2C38075/1474037413181688</guid>
      <description>duplicate: &lt;p&gt;
Hey there,
&lt;/p&gt;
&lt;p&gt;
Welcome to WordPress Trac!  Thanks for opening this ticket. We're aware of the issue and already working on a fix in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37989" title="#37989: defect (bug): Unexpected change to media title behavior in WP 4.6.1 (closed: fixed)"&gt;#37989&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #38075 (Unsual update at media upload.) created</title>
      
        <dc:creator>blad3d</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:40:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38075/1474036817289000</guid>
      <description>&lt;p&gt;
When updating to Wordpress 4.6.1 (from 4.6) I noted a change on attachments title behavior. For some reason the default attachment title is now sanitized, and this not a good use.
&lt;/p&gt;
&lt;p&gt;
Some of our customers make heavy use of bulk file upload, with names like "Administração GEX Gabarito Preliminar-EXIN-2016.2.pdf" and then insert this name directly on post content. But now, when sanitized the title now are saved as "administracao-gex-gabarito-preliminar-exin-2016.2.pdf" making them to change manually every attachment title.
&lt;/p&gt;
&lt;p&gt;
The "bug" patch: &lt;a href="https://core.trac.wordpress.org/changeset/38539/"&gt;https://core.trac.wordpress.org/changeset/38539/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>SteveNetRivet</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:9/1474035453102861</guid>
      <description>&lt;p&gt;
+1
Our users rely on auto-update of our theme software for bug fixes and feature releases.
Until this is resolved - hopefully in the near future, during 4.6 and not waiting for 4.7 - a large group of our users won't be able to receive our patches.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>steveglick</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:15:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:198</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:198/1474035326342981</guid>
      <description>&lt;p&gt;
I should have read the last comment...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As we don't have an autoloader yet, the code base is not optimized for the use of an autoloader either. This makes performance benchmarks completely pointless, as the result is probably something along the lines of "performance without autoloader + autoloader overhead". The end result we're after is not to have an autoloader be included, but to have a code base that makes proper use of an autoloader. That is what would need to be benchmarked, not "old code + autoloader class".
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was confused why everyone is talking about performance and not benchmarking anything, but this makes sense now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35760 (Provide API for TinyMCE editor to be dynamically instantiated via JS) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:09:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35760#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35760#comment:2/1474034996009624</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-editor by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-editor/p1474034994000399"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>steveglick</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:09:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:197</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:197/1474034969287179</guid>
      <description>&lt;p&gt;
As there's been a lot of discussion around performance benefits, I'm wondering if anyone has done benchmarking on this? Could this autoloader eliminate the need for building our own ajax handlers if we want decent performance on ajax heavy pages? ( See &lt;a class="ext-link" href="https://wp-dreams.com/articles/2014/03/better-ajax-handler-for-wordpress-super-fast-ajax/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wp-dreams.com/articles/2014/03/better-ajax-handler-for-wordpress-super-fast-ajax/&lt;/a&gt; )
&lt;/p&gt;
&lt;p&gt;
If this is a functional patch for 4.6 I could do some testing and run some benchmarks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37843 (`http_api_curl` hook no longer available for adding custom cURL options) updated</title>
      
        <dc:creator>jaredh123</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:09:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37843#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37843#comment:8/1474034961174942</guid>
      <description>&lt;p&gt;
This is affecting us pretty badly too.  We have a percentage of our users unable to get updates from our servers now that we cannot intercept the curl request and customize it.
&lt;/p&gt;
&lt;p&gt;
I would love to see this make it into 4.6.x instead of 4.7, because this feels like a pretty major bug/regression, not a feature.  We'll be hurting for a while if this isn't possible until 4.7.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 14:06:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:43</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:43/1474034798405475</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1474034796000791"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35788 (Plugin Editor wrong selected option when file selected) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:57:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35788#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35788#comment:6/1474034262513874</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35788#comment:5" title="Comment 5"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35788/35788.diff" title="Attachment '35788.diff' in Ticket #35788"&gt;35788.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35788/35788.diff" title="Download"&gt;​&lt;/a&gt; correctly passes &lt;code&gt;$plugin&lt;/code&gt; when the main plugin file is needed and &lt;code&gt;$file&lt;/code&gt; when the current file is needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This ticket sounds like a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/17552" title="#17552: defect (bug): Plugin editor incorrectly calls some files inactive. (closed: fixed)"&gt;#17552&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/24122" title="#24122: defect (bug): When opening a file in Plugin Editor, show correct plugin in the ... (closed: fixed)"&gt;#24122&lt;/a&gt;, no?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35760 (Provide API for TinyMCE editor to be dynamically instantiated via JS) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:55:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35760#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35760#comment:1/1474034114611678</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by westonruter. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1474034111000760"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38074 (comments_template needs a filter for $top_level_args) created</title>
      
        <dc:creator>thomaslhotta</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:43:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38074</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38074/1474033423730653</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
I am making use of the &lt;code&gt;comments_template_query_args&lt;/code&gt; filter to change the way comments are displayed. However the first comments page does not work correctly because &lt;code&gt;$top_level_count&lt;/code&gt; is not calculated with the same changes I made in &lt;code&gt;comments_template_query_args&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I can work around this using the &lt;code&gt;WP_Comment_Query&lt;/code&gt; filters, but it would be a lot nicer if &lt;code&gt;comments_template_query_args&lt;/code&gt; would also effect the calculation of &lt;code&gt;$top_level_count&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:29:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:70/1474032562969494</guid>
      <description>&lt;p&gt;
Personally I think that having the squares in addition to the arrows makes it easier to understand, but at the same time I am worried about overly complex icons.
&lt;/p&gt;
&lt;p&gt;
What we really should do is come up with a couple options, say just arrows, then arrows with squares, then maybe just radio buttons inside the boxes, and run user tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35788 (Plugin Editor wrong selected option when file selected) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:25:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35788#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35788#comment:5/1474032344638766</guid>
      <description>&lt;p&gt;
&lt;code&gt;explode()&lt;/code&gt; isn't really reliable and doesn't solve the root of the problems, which is that &lt;code&gt;$file&lt;/code&gt; and &lt;code&gt;$plugin&lt;/code&gt; are used interchangeably when they in fact shouldn't.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35788/35788.diff" title="Attachment '35788.diff' in Ticket #35788"&gt;35788.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35788/35788.diff" title="Download"&gt;​&lt;/a&gt; correctly passes &lt;code&gt;$plugin&lt;/code&gt; when the main plugin file is needed and &lt;code&gt;$file&lt;/code&gt; when the current file is needed.
&lt;/p&gt;
&lt;p&gt;
This solves quite a few bugs:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The currently selected plugin is always correct, even when editing files in subdirectories.
&lt;/li&gt;&lt;li&gt;Gets rid of &lt;code&gt;wp_reset_vars()&lt;/code&gt;, see  &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/38073" title="#38073: enhancement: Deprecate and replace wp_reset_vars() (assigned)"&gt;#38073&lt;/a&gt;.
&lt;/li&gt;&lt;li&gt;Correctly marks an active plugin as active, even when editing files in subdirectories.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Unfortunately &lt;code&gt;plugin-editor.php&lt;/code&gt; is a mess. There are many many things that should be cleaned up someday, like removing &lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt; tags.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:22:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:42/1474032143771761</guid>
      <description>&lt;p&gt;
I've been working recently on refactoring of my original solution.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;container&lt;/code&gt; is now a set of two jQuery objects as suggested by @westonruter (&lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473792730000673"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core-customize/p1473792730000673&lt;/a&gt;). This way the backwards compatibility should be better, as most of jQuery's methods like &lt;code&gt;find()&lt;/code&gt; should still work well with new panel/section structure.
&lt;/li&gt;&lt;li&gt;Introduced two new properties to the &lt;code&gt;Container&lt;/code&gt;, namely: &lt;code&gt;headContainer&lt;/code&gt; which stores the head or label of the panel/section and &lt;code&gt;contentContainer&lt;/code&gt; which stores the content area of the section/panel (usually &lt;code&gt;ul&lt;/code&gt;).
&lt;/li&gt;&lt;li&gt;Abstracted &lt;code&gt;_animateChangeExpanded()&lt;/code&gt; method so that there is no code duplication now.
&lt;/li&gt;&lt;li&gt;Moved code responsible for screen flickering prevention to the &lt;code&gt;_animateChangeExpanded()&lt;/code&gt; method.
&lt;/li&gt;&lt;li&gt;Removed all unnecessary minor changes in the code, so that the patch itself is more consistent.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Here's the diff: &lt;a href="https://core.trac.wordpress.org/attachment/ticket/34391/34391_4.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/34391/34391_4.diff&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Next, I'm planning to test the patch with @celloexpressions's &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37661" title="#37661: feature request: A New Experience for Discovering, Installing, and Previewing Themes in ... (closed: fixed)"&gt;#37661&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35788.diff attached to Ticket #35788</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:20:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35788/35788.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35788/35788.diff/1474032020650158</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37300 (Add 'urn' to allowed protocols) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:17:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37300#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37300#comment:3/1474031876106297</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:15:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:69</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:69/1474031739056845</guid>
      <description>&lt;p&gt;
@celloexpressions: I've refreshed the patch and added the missing file, see &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22058/22058.4.diff" title="Attachment '22058.4.diff' in Ticket #22058"&gt;22058.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22058/22058.4.diff" title="Download"&gt;​&lt;/a&gt;. It seems that you put some effort into your patch/mockups too so thanks for letting me take the "lead", what you do is really helpful :)
&lt;/p&gt;
&lt;p&gt;
@Kelderic: Maybe changing the wording from "Position" to "Alignment" would help? Or trying out alternate icons? Here's the Align extended toolbar from Open Office. Photoshop/Illustrator does use similar icons for object alignment. Altough I find arrows easier to understand.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://wiki.openoffice.org/w/images/3/35/IG5-12.png"&gt;&lt;img src="https://wiki.openoffice.org/w/images/3/35/IG5-12.png" alt="https://wiki.openoffice.org/w/images/3/35/IG5-12.png" crossorigin="anonymous" title="https://wiki.openoffice.org/w/images/3/35/IG5-12.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>34391_4.diff attached to Ticket #34391</title>
      
        <dc:creator>delawski</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:14:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34391/34391_4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34391/34391_4.diff/1474031697840113</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32417 (Add new core media widget) updated</title>
      
        <dc:creator>Fab1en</dc:creator>

      <pubDate>Fri, 16 Sep 2016 13:13:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32417#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32417#comment:76/1474031588791208</guid>
      <description>&lt;p&gt;
I would be happy to continue the work on this ticket. I don't see exactly what I, as a developer, can do to make this Media Widget happen for 4.7
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22058.4.diff attached to Ticket #22058</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 16 Sep 2016 12:57:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22058/22058.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22058/22058.4.diff/1474030661864348</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38073 (Deprecate and replace wp_reset_vars()) created</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Fri, 16 Sep 2016 12:34:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38073</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38073/1474029275316099</guid>
      <description>&lt;p&gt;
&lt;code&gt;wp_reset_vars()&lt;/code&gt; sets global variables based on &lt;code&gt;$_POST&lt;/code&gt; and &lt;code&gt;$_GET&lt;/code&gt; values. The function is used around 20 times in core and in my opinion this should be zero. Even better, the function should be deprecated.
&lt;/p&gt;
&lt;p&gt;
Why?
&lt;/p&gt;
&lt;p&gt;
First of all, it's easy to shoot yourself in the foot if you forget to properly sanitize the input value. Second, globals set by &lt;code&gt;wp_reset_vars()&lt;/code&gt; aren't explicitly globalized in the files / functions using it. You might stumble upon code like this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;wp_reset_vars&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// 100 lines further down…
&lt;/span&gt;
&lt;span class="c1"&gt;// Where do these come from?!
&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$bar&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
And of course using globals is bad. It's not testable and should be avoided if possible. Sanitized &lt;code&gt;$_GET&lt;/code&gt; / &lt;code&gt;$_POST&lt;/code&gt; values should be used directly instead.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/33837" title="#33837: enhancement: We should avoid Superglobals when possible (assigned)"&gt;#33837&lt;/a&gt;, &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;#37699&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>Kelderic</dc:creator>

      <pubDate>Fri, 16 Sep 2016 12:06:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:68</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:68/1474027586777195</guid>
      <description>&lt;p&gt;
@cdog, these new mockups look great. I think the idea of a compact 9 square position selector is nice and simple.
&lt;/p&gt;
&lt;p&gt;
However, I'm concerned about the arrows going out from the center. I showed it to a few non-technical users and several thought that it was controlling the stretching/sizing of the background, despite the labels.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>oldrup</dc:creator>

      <pubDate>Fri, 16 Sep 2016 12:05:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:28/1474027514303416</guid>
      <description>&lt;p&gt;
Oh thanks - not to be ungrateful, but titles are still sanitized, so if I choose to upload media with the name:
"Dette er en test, æøå ÆØÅ &amp;amp; halløj"
&lt;/p&gt;
&lt;p&gt;
I expect the title to be exactly that, and not
"Dette-er-en-test-æøå-ÆØÅ-halløj"
&lt;/p&gt;
&lt;p&gt;
As a previously poster mentioned, sanitizing the FILENAME makes good sense, but the TITLE should be left unchanged in my opinion.
&lt;/p&gt;
&lt;p&gt;
Btw &lt;a class="ext-link" href="https://wordpress.org/plugins/code-snippets/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/code-snippets/&lt;/a&gt; is great for testing fixes like that without having to edit the files manually.
&lt;/p&gt;
&lt;p&gt;
Anyone able to create a fix, that leaves the title alone?
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37989#comment:27" title="Comment 27"&gt;hcarsten&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37989#comment:26" title="Comment 26"&gt;oldrup&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Am experiencing this issue on all my wp 4.6.1 sites as well - same stuff, uploading PDF files, titles gets sanitized. Must edit and manually fix all titles afterward. Hope this gets fixed :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi,
try my fix comment 20 above. We had the same problem with PDF files also.
&lt;/p&gt;
&lt;p&gt;
best
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>protocol_2.patch attached to Ticket #37300</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Fri, 16 Sep 2016 11:33:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37300/protocol_2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37300/protocol_2.patch/1474025585699163</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37300 (Add 'urn' to allowed protocols) updated</title>
      
        <dc:creator>geekysoft</dc:creator>

      <pubDate>Fri, 16 Sep 2016 11:25:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37300#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37300#comment:2/1474025121053701</guid>
      <description>&lt;p&gt;
@ocean90, I’m sorry for not responding earlier. This went into my Spam folder. Do you still need me revise the patch to include the changelog entry? What version number should I use?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>neodjandre</dc:creator>

      <pubDate>Fri, 16 Sep 2016 10:47:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:37/1474022874061284</guid>
      <description>&lt;p&gt;
I am facing the same problem using:
&lt;/p&gt;
&lt;p&gt;
Nginx + Postfix + Real Cron Jobs
&lt;/p&gt;
&lt;p&gt;
I am receiving these errors:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Error message
phpmailerException: Uncaught exception 'phpmailerException' with message 'Invalid address: wordpress@' in /var/www/html/wp-includes/class-phpmailer.php:946
Stack trace
in PHPMailer::setFrom called at /var/www/html/wp-includes/pluggable.php (352)
in wp_mail called at /var/www/html/wp-includes/user.php (1841)
in wp_update_user called at /var/www/html/wp-admin/includes/user.php (182)
in edit_user called at /var/www/html/wp-admin/user-edit.php (147)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36368 (Add `access_admin` capability) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 16 Sep 2016 10:41:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36368#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36368#comment:5/1474022492791752</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
When was the last time a new primitive capability was introduced? The last few that were introduced (&lt;code&gt;customize&lt;/code&gt;, &lt;code&gt;delete_site&lt;/code&gt;, &lt;code&gt;upload_plugins&lt;/code&gt;, &lt;code&gt;upload_themes&lt;/code&gt;) are all meta capabilities with corresponding mapping in &lt;code&gt;map_meta_cap()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
The reason I ask is because backwards compatibility with custom roles is tough. If an &lt;code&gt;access_admin&lt;/code&gt; cap is introduced, should core add that cap to all roles or just the default roles? What about existing plugins that add a new role with a limited set of caps - if the plugin was activated after this new cap is introduced then a user with that role would not have the &lt;code&gt;access_admin&lt;/code&gt; cap.
&lt;/p&gt;
&lt;p&gt;
It looks like we're kind of stuck with our existing primitive caps and can only ever introduce new meta caps if the cap relates to existing functionality. This is what I'm doing in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35614" title="#35614: enhancement: Cannot check capabilities on single taxonomy terms (closed: fixed)"&gt;#35614&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>hcarsten</dc:creator>

      <pubDate>Fri, 16 Sep 2016 09:42:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:27/1474018963344182</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37989#comment:26" title="Comment 26"&gt;oldrup&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Am experiencing this issue on all my wp 4.6.1 sites as well - same stuff, uploading PDF files, titles gets sanitized. Must edit and manually fix all titles afterward. Hope this gets fixed :)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi,
try my fix comment 20 above. We had the same problem with PDF files also.
&lt;/p&gt;
&lt;p&gt;
best
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37722 (wp_remote_retrieve_headers no longer an array in WordPress 4.6) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 16 Sep 2016 09:35:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37722#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37722#comment:8/1474018535613282</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37722#comment:7" title="Comment 7"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@mrahmadawais Thanks for the patch! It would be great if the exact object type (&lt;code&gt;Requests_Utility_CaseInsensitiveDictionary&lt;/code&gt;) could be noted in the doc block instead of simply &lt;code&gt;object&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fixed that in the second patch.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not sure if we need a &lt;code&gt;@since 4.6.0 return value changed […]&lt;/code&gt; entry.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Lost you here, what are you talking about?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37722.2.diff attached to Ticket #37722</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Fri, 16 Sep 2016 09:34:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37722/37722.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37722/37722.2.diff/1474018463332247</guid>
      <description>&lt;p&gt;
FIX: DocBlock return to object instead of headers' array &amp;amp; PHPCS Errors
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37989 (Unexpected change to media title behavior in WP 4.6.1) updated</title>
      
        <dc:creator>oldrup</dc:creator>

      <pubDate>Fri, 16 Sep 2016 08:16:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37989#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37989#comment:26/1474013785900851</guid>
      <description>&lt;p&gt;
Am experiencing this issue on all my wp 4.6.1 sites as well - same stuff, uploading PDF files, titles gets sanitized. Must edit and manually fix all titles afterward. Hope this gets fixed :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>cdog</dc:creator>

      <pubDate>Fri, 16 Sep 2016 07:55:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:67/1474012504214859</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22058#comment:66" title="Comment 66"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Oh snap! I'm on it, thanks for review!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38064 (Surveying system to gather user voices) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 16 Sep 2016 07:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38064#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38064#comment:6/1474009667041850</guid>
      <description>&lt;p&gt;
In the light of more recent talks and posts on the web, I just now realised that I might be rubbing people completely the wrong way...
&lt;/p&gt;
&lt;p&gt;
I want to clarify here that this is not another "Us vs Them" rant. I highly respect what all the core leads/committers/contributors are doing on a daily basis here (and I'm trying my best to be a small part of that), and they are doing a terrific job!
&lt;/p&gt;
&lt;p&gt;
This is more of an "Us vs Us (with unneeded friction)" post, as I feel that we all ultimately want to make WordPress the best platform we can, and I think we're missing one or two important tools to make these efforts as effective as possible. I just hate wasting time on endless discussions that simply cannot be resolved without additional input/data.
&lt;/p&gt;
&lt;p&gt;
I hope this clarifies the intent of my ticket, in case people took it as an offense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36534 (Media Upload Issue Since 4.5 Upgrade) updated</title>
      
        <dc:creator>mhowellsmead</dc:creator>

      <pubDate>Fri, 16 Sep 2016 07:00:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36534#comment:94</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36534#comment:94/1474009200669073</guid>
      <description>&lt;p&gt;
Found it! After deactivating all of the plugins and reverting to the default Theme, the problem still occurred. Further tests indicated that the JPGs we were working with had been saved in (an invalid) four-colour CMYK format. Although ImageMagick can convert invalid images in this format, the server appears to have a problem with them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) updated</title>
      
        <dc:creator>cklosows</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:51:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:17/1474008691279461</guid>
      <description>&lt;p&gt;
@jeremyfelt Yep, arleady done: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/38070" title="#38070: defect (bug): RegEx to remove double slashes affects query strings as well. (closed: fixed)"&gt;#38070&lt;/a&gt; Thanks for getting back to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38015 (Customize: Nav menu items should preview using original object title ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:45:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38015#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38015#comment:4/1474008341344303</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@celloexpressions I found a couple other situations where &lt;code&gt;original_title&lt;/code&gt; wasn't being used.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Original title wasn't being used as the control title.
&lt;/li&gt;&lt;li&gt;Original title wasn't being used as a &lt;code&gt;placeholder&lt;/code&gt; for the nav label input field.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
And then the original title was being used where it shouldn't, namely when loading the customizer when a nav menu item that had an empty title it would get populate with the original title. So you could save the customizer with a blank title and then reload the customizer and you'd see the navigation label no longer empty.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/38015/38015.1.diff" title="Attachment '38015.1.diff' in Ticket #38015"&gt;38015.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/38015/38015.1.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38015.1.diff attached to Ticket #38015</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:42:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38015/38015.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38015/38015.1.diff/1474008176984994</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:27:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:196</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:196/1474007228771938</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:194" title="Comment 194"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
While I would prefer a composer autoloader, I think that there are points that need addressing that have been raised by others:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;What performance improvements can autoloading provide?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
An autoloader comes with an inherent overhead, and when you load 100% of your classes, the autoloader will be slower than direct requires. When a code base is optimized for autoloading, it will most certainly run faster and consume less memory.
&lt;/p&gt;
&lt;p&gt;
In a very simple performance test (&lt;a class="ext-link" href="http://blog.ircmaxell.com/2012/07/is-autoloading-good-solution.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://blog.ircmaxell.com/2012/07/is-autoloading-good-solution.html&lt;/a&gt;), Anthony Ferrara found out that, &lt;strong&gt;for empty classes&lt;/strong&gt;,  the autoloader is faster once you're using 75% or less of the classes. The heavier your classes are (think &lt;code&gt;WP_Query&lt;/code&gt;), the higher that percentage is. For the WP code, not loading a handful of classes will probably have the autoloader pull ahead in terms of performance.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What problem does this solve?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Only load classes when effectively needed (saves processing time and memory).
&lt;/li&gt;&lt;li&gt;Loading order is irrelevant (makes some procedural logic unnecessary).
&lt;/li&gt;&lt;li&gt;You don't need knowledge about the filesystem layout (of your code, as well as of your dependencies).
&lt;/li&gt;&lt;li&gt;As such, you are free to reorganize your file layout as you see fit without breaking the code.
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
So far, Mike is the main opponent of a Composer based autoloader, but if I read correctly he has no opposition to an autoloader, just the Composer variety. This means there is still work that can be done without addressing that.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Mike has indicated he wanted to work on an autoloader proof of concept but didn't have time in that week. Now that time has passed, I'm curious to see what he's devised. We also have the composer autoloader, and I think both can be used to test and measure performance improvements so that autoloading is an easier sell for those still sceptical
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As we don't have an autoloader yet, the code base is not optimized for the use of an autoloader either. This makes performance benchmarks completely pointless, as the result is probably something along the lines of "performance without autoloader + autoloader overhead". The end result we're after is not to have an autoloader be included, but to have a code base that makes proper use of an autoloader. That is what would need to be benchmarked, not "old code + autoloader class".
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37685 (Creating new multisite blog - wpmu_create_blog tries to execute ...) updated</title>
      
        <dc:creator>fliespl</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:07:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37685#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37685#comment:7/1474006071706167</guid>
      <description>&lt;p&gt;
@flixos90 correct. No themes/plugins installed. Just unpacked wordpress and created multisite.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38064 (Surveying system to gather user voices) updated</title>
      
        <dc:creator>schlessera</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:07:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38064#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38064#comment:5/1474006031938811</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38064#comment:3" title="Comment 3"&gt;jdgrimes&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Note that there is &lt;a class="ext-link" href="https://wordpress.org/ideas/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/ideas/&lt;/a&gt;, although I'm unsure whether any developers ever look at it (and it isn't particularly obvious to users either, I guess).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Wow, I have never seen that one before. But yes, that's already pretty much one of the things I described above. So, now, imagine having this be available from within the dashboard for users, and using the collected data to make informed decisions about the roadmap for the next releases...
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/38064#comment:4" title="Comment 4"&gt;helen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Based on this ticket and your linked post, it seems that your premise is that you're uncertain if WordPress is a democracy or a meritocracy, and that mentions of "the majority" imply some kind of democratic 1:1 voting system. Calling an open source project a meritocracy is loaded for good reason, but the reality remains that WordPress functions as a meritocracy. This is stated clearly in some places, including &lt;a class="ext-link" href="https://wordpress.org/about/security/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the security whitepaper&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I know it is run as a meritocracy, and I indeed fully support this. It is pretty much one of the foundational principles of the entire open source movement.
&lt;/p&gt;
&lt;p&gt;
I guess I have used terms that are too political to convey my message, and what's more, I'm myself not entirely sure whether what I propose would be a good or a bad idea.
&lt;/p&gt;
&lt;p&gt;
The point is, when large teams collaborate, there are two ways to productively conclude a discussion:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Participants agree on a consensus.
&lt;/li&gt;&lt;li&gt;An authority takes a decision.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
The way I feel things are currently run, you either need to be able to achieve 1., or your discussions will turn in circles (or be postponed from release to release), as no-one can or will impose 2.
&lt;/p&gt;
&lt;p&gt;
For 1., the discussion needs to follow clear argumentation, where all the arguments that are introduced by each of the sides can either be asserted or refuted. Only facts and hard data can be asserted or refuted, opinions can't. Arguments are asserted or refuted until only the valid ones are left, and these are then weighed against each other to determine whether it's an overall improvement or not.
&lt;/p&gt;
&lt;p&gt;
This is where the problem lies in my eyes. The needs and wants of the end-users are cited as facts and used as arguments, but most of the time, they are just opinions, as there's no means to verify them. And in the cases where such non-facts are used as arguments, no consensus is possible, so only a final authoritative decisions could properly conclude the discussion. And, as far as I can tell, this is not what happens in most of the cases.
&lt;/p&gt;
&lt;p&gt;
I know that user tests being made for UX changes, for example, and that server data being collected. But why not have a tool that allows us to query the users (that opted-in) directly? Why not let them tell you their biggest pain points? Why not let them help you define the priorities? I don't suggest just using that data and blindly following it. But I think that, in this case, more data is better than less data...
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
"Design for the majority" is a philosophy and a goal, not some kind of literal process or a singularly decisive factor. I recognize that "the majority" constantly gets cited as an argument, but so do a lot of things - it does not inherently make that a good argument at all times. And don't forget, that same philosophies page that describes "design for the majority" contains a reminder about the vocal minority.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I understand that this is not a literal process. But it is a philosophical goal that processes should be shaped by.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't want data collection efforts to center around what people want - certainly people's wants should be heard, but the data collected should be around what they do and how that informs things WordPress should do to better serve the needs that exposes. It seems that you agree with this at some level, and you know the vote you cite is not representative of "the people", so this ticket is extremely confusing to me.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, as I said, additional data should just inform the decisions, not bind them.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That particular poll also exposes a frequent problem with votes, in that nuance and reasoning is lost. Do people want Composer in core because they want to be able to use something that's in core, or do they want it because core can actually use it in an effective way? Is this more of a want than, say, a PHP 5.3 baseline, and could it be a million times better enabled if that were addressed first?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Statistically speaking, that poll is complete nonsense, and not much more than a nice graphics, I'm fully aware of that. But against a "People don't want an autoloader" or similar argument, it's the best I could come up with. Should I have tried to run a normal survey with much more nuanced questions against the WP developer base as an unknown? How many responses do you think I would have gotten?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What's missing in your specific instance is not a voting mechanism, it's a trusted owner to guide the process of discovering needs and defining outcomes. What we do about usage data more broadly in WordPress is a valuable conversation to have and has been happening in fits and starts, but it's not something for a Trac ticket. My suggestion is to focus on getting the specific project that is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt; productively moving before worrying about something like votes. It probably needs regular meetings, contribution direction on GitHub or wherever, focused writing prompts as a means to obtain some qualitative data (e.g. "what would having Composer in WordPress core do for you, and can you show a specific example"), and so on.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, I agree that a Trac ticket is not a good fit, but I thought it would be good enough to get the discussion started. If such a discussion is already happening, then I am sorry for duplicating efforts, as I am not aware of it, and would be happy if you can point me to the correct spot and close this ticket.
&lt;/p&gt;
&lt;p&gt;
Also, this was not merely pointing at that one ticket. I think that there's a more general sentiment of "not being heard" (by users/devs/specific communities/...) that would be alleviated by better "hearing tools"... ;)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you need help wrangling an owner or owners, then please ask for that help - software maintainers aren't just decision makers, they should also be facilitators.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37733 (`cURL error 3: malformed` for remote requests since 4.6) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:06:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37733#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37733#comment:16/1474006010637708</guid>
      <description>&lt;p&gt;
@cklosows Thanks for the report. You're correct in that other double slashes should not be stripped. As this ticket is closed against the 4.6.1 milestone, can you open a new ticket with that information so we can target for 4.6.2?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37948 (Use `WP_Site` class globally) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 16 Sep 2016 06:05:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37948#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37948#comment:4/1474005901164153</guid>
      <description>&lt;p&gt;
Thanks for exploring this, @flixos90.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, there are several functions that return a "site-like" object on non-multisite installs as well.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you highlight some others beyond &lt;code&gt;get_blogs_of_user()&lt;/code&gt;? I can somewhat see some of the benefits there, but can also see reasons/ways around them (I think). I didn't look too closely elsewhere, but it would be helpful to have other examples for context.
&lt;/p&gt;
&lt;p&gt;
In general - I'm wary of pushing for &lt;code&gt;WP_Site&lt;/code&gt; to exist outside of multisite in the near future due to its close relationship with the &lt;code&gt;wp_blogs&lt;/code&gt; table as well as a handful of its properties that only multisite understands. Of course, it's always possible that this changes in the future. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18584 (Nav menus need more hooks for extensibility (on admin page &amp; in customizer)) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 05:56:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18584#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18584#comment:82/1474005398300074</guid>
      <description>&lt;p&gt;
I've been spending some time this week working on a path to finally facilitating custom fields for nav menu items in the customizer.
&lt;/p&gt;
&lt;p&gt;
I have an alpha-state feature plugin that can be played around with: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-nav-menu-item-custom-fields"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-nav-menu-item-custom-fields&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that this plugin has two separate plugins embedded within it: “Customize Nav Menu Item Custom Fields” and “Customize Nav Menu Item Custom Field Examples”. The latter includes an example that adds a basic implementation of @helgatheviking's Nav Menu Roles plugin (allowing a nav menu item's display to be conditional based on whether a user is logged-in, logged-out, or if it should be shown for anyone.) You'll note that, being that the customizer is a JavaScript application, the integration here looks very different than how custom fields might currently be integrated with nav menu items in the nav menus admin page. The integration relies primarily on JavaScript events rather than PHP actions and filters. Example: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-nav-menu-item-custom-fields/tree/master/examples/user-visibility"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-nav-menu-item-custom-fields/tree/master/examples/user-visibility&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that since custom fields for nav menu items are postmeta, this feature plugin depends on Customize Posts which implements the necessary interface to represent postmeta in the customizer. You'll have to use the current &lt;code&gt;develop&lt;/code&gt; branch to test the plugin: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-posts"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-posts&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There is one key limitation currently with the plugin: it isn't possible to manage custom fields for newly-added nav menu items that haven't been saved yet. This is due to how we're using placeholder IDs as opposed to actual IDs, and postmeta aren't able to work with such placeholder IDs in core currently. For more on this, see &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/38072" title="#38072: enhancement: Eliminate placeholder nav menu items in favor of auto-drafts in Customizer (new)"&gt;#38072&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37447 (Remove redundant `is_multisite()` checks in network admin templates) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 16 Sep 2016 05:49:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37447#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37447#comment:8/1474004992196947</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we're okay to remove these. It seems (IMO) like part of &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16272" title="Network admin multisite checks and docs. see #14435."&gt;[16272]&lt;/a&gt; was about applying some consistency to network admin files that didn't have both the &lt;code&gt;is_multisite()&lt;/code&gt; check and the bootstrap documentation. It doesn't really hurt to to have the 2 checks, but the opportunity to reduce code is nice. :)
&lt;/p&gt;
&lt;p&gt;
Is there a way we can work in a one line comment above the check in &lt;code&gt;wp-admin/network/admin.php&lt;/code&gt; to clarify its importance?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38072 (Eliminate placeholder nav menu items in favor of auto-drafts in Customizer) created</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Fri, 16 Sep 2016 05:46:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38072</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38072/1474004766622330</guid>
      <description>&lt;p&gt;
When nav menus were added to the customizer in 4.3, newly-created nav menu items were assigned a random negative integer to represent the ID for that &lt;code&gt;nav_menu_item&lt;/code&gt; post. (This was also true of &lt;code&gt;nav_menu&lt;/code&gt; terms for newly-created nav menus.) Upon saving the customized state, any such &lt;code&gt;nav_menu_item[...]&lt;/code&gt; settings with negative IDs would then get inserted and assigned actual IDs which would then get sent back in the &lt;code&gt;customize_save_response&lt;/code&gt; and the UI then replaces the placeholder nav menu item's control with the newly-inserted nav menu item's control. The key motivation here was to ensure that changes made in the customizer would not have an impact any part of WP until hitting Save. (What happens in the customizer stays in the customizer… until you hit Save.)
&lt;/p&gt;
&lt;p&gt;
Now, aside from a momentary flicker of placeholder nav menu item controls that get replaced with actual nav menu item controls, there is a key disadvantage to using such placeholder nav menu items (with negative post IDs): it is not possible to relate postmeta to them. There is a long-standing ticket &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18584" title="#18584: enhancement: Nav menus need more hooks for extensibility (on admin page &amp;amp; in customizer) (new)"&gt;#18584&lt;/a&gt; for allowing nav menu items to be extensible to add custom fields in the customizer (and in the admin screen). In the call to &lt;code&gt;get_metadata&lt;/code&gt; it has a behavior whereby it passes the supplied post ID through &lt;code&gt;absint&lt;/code&gt; so if any postmeta are attempted to be related to placeholder &lt;code&gt;nav_menu_item&lt;/code&gt; posts, they will fail to be accessed when calling &lt;code&gt;get_post_meta()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Now, in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34923" title="#34923: enhancement: Allow users to more seamlessly create page-based nav menus during ... (closed: fixed)"&gt;#34923&lt;/a&gt; there was the introduction of being able to create stubs for posts and pages inside the customizer so that they can have nav menu items created for them. The stubs created here are &lt;code&gt;auto-draft&lt;/code&gt; posts which ensures that they do not affect other parts of WordPress and they will be automatically garbage-collected if never published. Now, the original Menu Customizer plugin did make an Ajax request for each created new nav menu items but they were &lt;code&gt;nav_menu_item&lt;/code&gt; posts that were not related to a &lt;code&gt;nav_menu&lt;/code&gt; (they were orphaned) rather than being &lt;code&gt;auto-draft&lt;/code&gt;. We could consider going back to making an Ajax request to create each &lt;code&gt;nav_menu_item&lt;/code&gt; (now an &lt;code&gt;auto-draft&lt;/code&gt;) in the same way that is being done for post/page stubs.
&lt;/p&gt;
&lt;p&gt;
A downside of going to using Ajax to create new nav menu items (to reserve an auto-incremented post ID) is that adding a new nav menu item would no longer be instant. However, it would mean that upon save there wouldn't be any rebuild of nav menu item controls replacing placeholders with actuals, and as such it could mean a lot of code could be removed. But the most important benefit of switching to use &lt;code&gt;auto-draft&lt;/code&gt; posts for nav menu items is that postmeta could then be created in the customizer and related to actual post IDs which could then be properly targeted in &lt;code&gt;get_post_metadata&lt;/code&gt;filters.
&lt;/p&gt;
&lt;p&gt;
Alternatively, &lt;code&gt;get_post_meta&lt;/code&gt; could just replace the &lt;code&gt;absint&lt;/code&gt; with a call to &lt;code&gt;intval&lt;/code&gt; and then ensure that the &lt;code&gt;get_post_metadata&lt;/code&gt; filters apply with that negative ID, but then short-circuit if the filter doesn't return with &lt;code&gt;null&lt;/code&gt; (since it wouldn't be able to find entries with negative IDs in the database).
&lt;/p&gt;
&lt;p&gt;
See feature plugin for adding custom fields to the customizer: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-nav-menu-item-custom-fields"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-nav-menu-item-custom-fields&lt;/a&gt;
Note how the plugin has to postpone the presentation of custom fields until a newly-added nav menu item is saved the first time: &lt;a class="ext-link" href="https://github.com/xwp/wp-customize-nav-menu-item-custom-fields/blob/2ad056634441a74ba91982ca88b089297f630971/customize-nav-menu-item-custom-fields.js#L279-L284"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/xwp/wp-customize-nav-menu-item-custom-fields/blob/2ad056634441a74ba91982ca88b089297f630971/customize-nav-menu-item-custom-fields.js#L279-L284&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Dependency for: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/18584" title="#18584: enhancement: Nav menus need more hooks for extensibility (on admin page &amp;amp; in customizer) (new)"&gt;#18584&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36803 (ms-files.php: inconsistent behaviour for upload visibility on archived ...) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 16 Sep 2016 05:31:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36803#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36803#comment:3/1474003894911406</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @antwortzeit, thanks for taking the time to open a ticket. We should be able to provide some more consistency here.
&lt;/p&gt;
&lt;p&gt;
It looks like the safest way would be to add an &lt;code&gt;is_super_admin()&lt;/code&gt; check rather than rely on any other capabilities. Because &lt;code&gt;ms-files.php&lt;/code&gt; uses &lt;code&gt;SHORTINIT&lt;/code&gt;, some of our other options are limited.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38071 (Add status links to network/sites.php) updated</title>
      
        <dc:creator>jeremyfelt</dc:creator>

      <pubDate>Fri, 16 Sep 2016 05:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38071#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38071#comment:4/1474003387812338</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I like the idea of having status links for sites. I didn't spend a lot of time with &lt;code&gt;wp_count_sites()&lt;/code&gt;, but we should probably get some tests written for it. We'll also need to make sure the count cache is cleared when sites are created, updated with another status, or deleted.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38063 (Better discoverability of keyboard shortcuts) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Fri, 16 Sep 2016 03:59:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38063#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38063#comment:4/1473998378721477</guid>
      <description>&lt;p&gt;
Patch above is proof of concept only. In working on it I realized there needs to be some sort of user agent sniffing that differentiates between Windows/Linux and Mac to provide the correct shortcut key combinations. No idea where that would fit.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>38063.patch attached to Ticket #38063</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Fri, 16 Sep 2016 03:58:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/38063/38063.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/38063/38063.patch/1473998288251517</guid>
      <description>&lt;p&gt;
Proof of concept
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>Cybr</dc:creator>

      <pubDate>Fri, 16 Sep 2016 03:45:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:195</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:195/1473997529180111</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:194" title="Comment 194"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;What performance improvements can autoloading provide?
&lt;/li&gt;&lt;li&gt;What problem does this solve?
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
Performance improvements:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;None when every file is required. It's actually about twice as slow, but we're talking microseconds here.
&lt;/li&gt;&lt;li&gt;A lot when only some files are required. When WordPress only requires files and classes it needs, the memory overhead is much lower. Requiring/including files is also the about the slowest thing within PHP.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Problem(s) it solves:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Developers can freely use any class within WordPress without being afraid to crash the system for when the class has been called "too early".
&lt;/li&gt;&lt;li&gt;Memory issues are pretty much gone. For example, on a sitemap, I do not require to load the loop.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Problem(s) it creates:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The known action order is gone. This might not seem like a big deal, but with some things I had to face the issue of a JIT action/filter injection. These JIT injection things might break as some actions are spread over multiple files and classes.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;I'm very much against using Composer.&lt;/strong&gt;
It creates another dependency to which Core needs to fix bugs against.
Updating it also creates issues. For example, why are we still stuck using jQuery 1.x instead of using the much faster 2.x or even 3.x?
Answer: WordPress loves backwards compatibility (a little too much).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38064 (Surveying system to gather user voices) updated</title>
      
        <dc:creator>helen</dc:creator>

      <pubDate>Fri, 16 Sep 2016 03:42:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38064#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38064#comment:4/1473997345168846</guid>
      <description>&lt;p&gt;
Based on this ticket and your linked post, it seems that your premise is that you're uncertain if WordPress is a democracy or a meritocracy, and that mentions of "the majority" imply some kind of democratic 1:1 voting system. Calling an open source project a meritocracy is loaded for good reason, but the reality remains that WordPress functions as a meritocracy. This is stated clearly in some places, including &lt;a class="ext-link" href="https://wordpress.org/about/security/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the security whitepaper&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
"Design for the majority" is a philosophy and a goal, not some kind of literal process or a singularly decisive factor. I recognize that "the majority" constantly gets cited as an argument, but so do a lot of things - it does not inherently make that a good argument at all times. And don't forget, that same philosophies page that describes "design for the majority" contains a reminder about the vocal minority.
&lt;/p&gt;
&lt;p&gt;
I don't want data collection efforts to center around what people want - certainly people's wants should be heard, but the data collected should be around what they do and how that informs things WordPress should do to better serve the needs that exposes. It seems that you agree with this at some level, and you know the vote you cite is not representative of "the people", so this ticket is extremely confusing to me.
&lt;/p&gt;
&lt;p&gt;
That particular poll also exposes a frequent problem with votes, in that nuance and reasoning is lost. Do people want Composer in core because they want to be able to use something that's in core, or do they want it because core can actually use it in an effective way? Is this more of a want than, say, a PHP 5.3 baseline, and could it be a million times better enabled if that were addressed first?
&lt;/p&gt;
&lt;p&gt;
What's missing in your specific instance is not a voting mechanism, it's a trusted owner to guide the process of discovering needs and defining outcomes. What we do about usage data more broadly in WordPress is a valuable conversation to have and has been happening in fits and starts, but it's not something for a Trac ticket. My suggestion is to focus on getting the specific project that is &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/36335" title="#36335: feature request: Next generation: core autoloader proposal (new)"&gt;#36335&lt;/a&gt; productively moving before worrying about something like votes. It probably needs regular meetings, contribution direction on GitHub or wherever, focused writing prompts as a means to obtain some qualitative data (e.g. "what would having Composer in WordPress core do for you, and can you show a specific example"), and so on.
&lt;/p&gt;
&lt;p&gt;
If you need help wrangling an owner or owners, then please ask for that help - software maintainers aren't just decision makers, they should also be facilitators.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 16 Sep 2016 02:41:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:66</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:66/1473993705220678</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Great work here @cdog, I reviewed the patch and didn't see any major issues. A couple of suggested changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Require and register the position control at the top of each corresponding block of customize controls, since it's most closely related to the base control (and we shouldn't separate the site icon control from the cropped image control that it extends).
&lt;/li&gt;&lt;li&gt;Omit the &lt;code&gt;settings&lt;/code&gt; parameter when adding the &lt;code&gt;background_repeat&lt;/code&gt; control, since the setting id matches the control id and will be set automatically.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
It looks like the new file for the background position control was missed in the patch; could you try remaking the patch file to include that? Everyone testing will get a fatal error without that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #38015 (Customize: Nav menu items should preview using original object title ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 16 Sep 2016 02:10:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38015#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38015#comment:3/1473991839421368</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice catch! Tested and the patch looks ready to commit to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36908 (Customizer menus and widgets "search" usability and visual improvements) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Fri, 16 Sep 2016 02:03:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36908#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36908#comment:10/1473991432477922</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested and the patch works well. @ryankienstra I think the widget search should also have the close icon that's now in menus. The search icon color might be a bit too dark and there might be a bit too much padding-right on it, what do you think @melchoyce? This should be close to if not ready for commit though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>hugobaeta</dc:creator>

      <pubDate>Fri, 16 Sep 2016 00:06:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:80/1473984408788188</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:79" title="Comment 79"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;mark&amp;gt;&lt;/code&gt; may well work, but it's not readily available to the end-user. The example shows a text that is being highlighted by the person quoting it, whereas an emphasis or strong emphasis comes from the original author. Different contexts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why do you say it isn't readily available to the end-user? it seems to be well supported... &lt;a class="ext-link" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
According to MDN: "The HTML Mark Element (&amp;lt;mark&amp;gt;) represents highlighted text, i.e., a run of text marked for reference purpose, due to its relevance in a particular context." They also note: "Do not confuse the &amp;lt;mark&amp;gt; element with the &amp;lt;strong&amp;gt; element. The &amp;lt;strong&amp;gt; element is used to denote spans of text of importance in context of the text, when the &amp;lt;mark&amp;gt; element is used to denote spans of text of relevance to a different context."
&lt;/p&gt;
&lt;p&gt;
I'm not 100% sure, but seems like the right context for it, right @mor10 ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>