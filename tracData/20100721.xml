<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14382 (extra pages loading unnecessarily) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:53:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14382#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14382#comment:3/1279756397000000</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14382 (extra pages loading unnecessarily) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:52:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14382#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14382#comment:2/1279756338000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is probably a theme issue. Does it happen with Twentyten also?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14382 (extra pages loading unnecessarily) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:51:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14382#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14382#comment:1/1279756260000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14352 (Fatal error message when trying to access my homepage and/or login to ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:46:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14352#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14352#comment:2/1279755974000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14383 (Custom Permalink Structures Seem To Have Broken) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:46:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14383#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14383#comment:3/1279755967000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14294 (get_permalink() calling get_post_permalink() with post object instead ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:45:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14294#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14294#comment:8/1279755931000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14229 (Can't use strikethrough in TinyMCE under Chrome) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:45:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14229#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14229#comment:3/1279755921000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14303 (Twenty Ten: minor image style edits) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:44:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14303#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14303#comment:3/1279755864000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14298 (Twenty Ten: new description and stylesheet cleanup) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:44:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14298#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14298#comment:13/1279755851000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14383 (Custom Permalink Structures Seem To Have Broken) closed</title>
      
        <dc:creator>truthmedia</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:38:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14383#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14383#comment:2/1279755511000000</guid>
      <description>worksforme: &lt;p&gt;
Well, apparently I just got it to work.  Not sure how.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14384 (wp-admin says "1" Update in sidebar then I click and it disappears) created</title>
      
        <dc:creator>projectoscarwp</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:28:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14384</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14384/1279754883000000</guid>
      <description>&lt;p&gt;
Sometimes when I'm on the Dashboard the Sidebar will show 1 in the "Updates" link so I click it, and then it disappears on the reload and there is no update to be found on the page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14383 (Custom Permalink Structures Seem To Have Broken) updated</title>
      
        <dc:creator>truthmedia</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:22:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14383#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14383#comment:1/1279754525000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Following other examples in the codex, I've tried switching the code to the following, still with the same result.
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Adding new rules
function sectioncats_add_rewrite_rules($rules)
{
	$new_rules = array(
		'[Ss]/([0-9]+)/tags/([^/]+)/page/?([0-9]{1,})/?$' =&amp;gt; 'index.php?' .
			'tag=$matches[2]' .
			'&amp;amp;paged=$matches[3]' .
			'&amp;amp;section_id=$matches[1]',
		'[Ss]/([0-9]+)/tags/([^/]+)/?$' =&amp;gt; 'index.php?' .
			'tag=$matches[2]' .
			'&amp;amp;section_id=$matches[1]',
	);
	$return = $new_rules + $rules;
	return $return;
}
add_filter('rewrite_rules_array','sectioncats_add_rewrite_rules');
function sectioncats_query_vars($public_query_vars) {
    array_push($public_query_vars, 'section_id');
	/*	Note: you do not want to add a variable multiple times.  As in
		the example above, multiple rules can use the same variables
	*/
	return $public_query_vars;
}
add_filter('query_vars', 'sectioncats_query_vars');
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:03:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:8/1279753427000000</guid>
      <description>&lt;p&gt;
I don't think we need Description, Tags or Screenshot fields either.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14381.3.diff attached to Ticket #14381</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:03:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14381/14381.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14381/14381.3.diff/1279753397000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:03:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:29/1279753392000000</guid>
      <description>fixed: &lt;p&gt;
Wrong control.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 21 Jul 2010 23:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:28/1279753363000000</guid>
      <description>&lt;p&gt;
Added the removal of dot segments according to &lt;a class="ext-link" href="http://tools.ietf.org/html/rfc3986#section-6.2.2.3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Path Segment Normalization (RFC 3986 6.2.2.3.)&lt;/a&gt; in the latest &lt;a class="ext-link" href="http://plugins.trac.wordpress.org/browser/normalize-urls/trunk/normalize-urls.php?rev=265492"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;development version&lt;/a&gt; of the &lt;a class="ext-link" href="http://hakre.wordpress.com/plugins/normalize-urls/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Normalize URLs Plugin&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Example request with dot segments and percent-encoded unreserved characters:
&lt;/p&gt;
&lt;pre class="wiki"&gt;# curl -I http://webroot.loc/wordpress/t%61g/././../tag/%61pple
HTTP/1.1 200 OK
Date: Wed, 21 Jul 2010 22:52:51 GMT
Server: Apache
Content-Type: text/html
&lt;/pre&gt;</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14383 (Custom Permalink Structures Seem To Have Broken) created</title>
      
        <dc:creator>truthmedia</dc:creator>

      <pubDate>Wed, 21 Jul 2010 22:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14383</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14383/1279752525000000</guid>
      <description>&lt;p&gt;
Up until WordPress 3, we have been running some code in one of our plugins which changes how WordPress reads tag URL's. Instead of the standard /tags/oranges/ type structure, we've been using something along the lines of /s/37/tags/oranges/ which allowed us to split the site into multiple sections. (for example, the above might show different posts than say /s/25/tags/oranges/)
&lt;/p&gt;
&lt;p&gt;
The code we were using seemed to be working fine up until WordPress 3.0. I have included it below. It is an adapted form of the example found near the bottom of this page of Ryan Boren's Feed Director plugin:
&lt;a class="ext-link" href="http://codex.wordpress.org/Function_Reference/WP_Rewrite"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Function_Reference/WP_Rewrite&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The code we've been using:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_action('generate_rewrite_rules', 'sectioncats_add_rewrite_rules');
function sectioncats_add_rewrite_rules( $wp_rewrite )
{
	$new_rules = array(
		'[Ss]/([0-9]+)/tags/([^/]+)/?$' =&amp;gt; 'index.php?' .
			'tag=' . $wp_rewrite-&amp;gt;preg_index(2) .
			'&amp;amp;section_id=' . $wp_rewrite-&amp;gt;preg_index(1),
		'[Ss]/([0-9]+)/tags/([^/]+)/page/?([0-9]{1,})/?$' =&amp;gt; 'index.php?' .
			'tag=' . $wp_rewrite-&amp;gt;preg_index(2) .
			'&amp;amp;paged=' . $wp_rewrite-&amp;gt;preg_index(3) .
			'&amp;amp;section_id=' . $wp_rewrite-&amp;gt;preg_index(1),
	);
	$wp_rewrite-&amp;gt;rules = $new_rules + $wp_rewrite-&amp;gt;rules;
}
&lt;/pre&gt;&lt;p&gt;
As of WordPress 3, this no longer works. Well... it sorta works in that it keeps the proper section but redirects the browser to /tags/oranges/ (ie back to the default WP structure)
&lt;/p&gt;
&lt;p&gt;
So, my question is, What's the *right* way to do this? I've tried switching to use simple add_rewrite_rule commands, but those don't yield any better results.
&lt;/p&gt;
&lt;p&gt;
Thanks in advance for any help.
James W.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 22:09:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:7/1279750187000000</guid>
      <description>&lt;p&gt;
It seems we need to send more than just version, name, and slug to help with disambiguation. Updated patch to blacklist certain fields and let the rest through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14381.2.diff attached to Ticket #14381</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 22:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14381/14381.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14381/14381.2.diff/1279750119000000</guid>
      <description>&lt;p&gt;
Send more theme fields to api. Blacklist unneeded fields.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12797 (Add comment permalink to plain-text email notification) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 21:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12797#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12797#comment:2/1279748757000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12797 (Add comment permalink to plain-text email notification) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Wed, 21 Jul 2010 21:44:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12797#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12797#comment:1/1279748675000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
+1 to the idea.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14382 (extra pages loading unnecessarily) created</title>
      
        <dc:creator>zengy</dc:creator>

      <pubDate>Wed, 21 Jul 2010 21:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14382</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14382/1279747397000000</guid>
      <description>&lt;p&gt;
I have a WP3 issue that I came across and I thought it should be posted here. I apologize if this has been posted previously. Please let me know if this issue exists as a current known bug.
&lt;/p&gt;
&lt;p&gt;
I am coding a plugin that needs to do something on 'wp_head'. I was noticing that it was executing my code twice. I am now using error_log() to display the post ID and it is displaying the ID of the page I am loading plus another page ID.
&lt;/p&gt;
&lt;p&gt;
This only happens when loading pages that have subpages associated with them. This bug occurs when a custom permalink structure is chosen. It does not happen when using the default permalink structure.
&lt;/p&gt;
&lt;p&gt;
Here are steps to reproduce this issue:
&lt;/p&gt;
&lt;p&gt;
1) Create a new WP3 site and create a .htaccess file.
&lt;/p&gt;
&lt;p&gt;
2) Install and activate this plugin:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?php
/*
* Plugin Name: Post ID Test
*/
function display_post_id() {
	global $post;
	error_log('post id: ' . $post-&amp;gt;ID . ' | post title: ' . $post-&amp;gt;post_title);
}
add_action('wp_head', 'display_post_id');
?&amp;gt;
&lt;/pre&gt;&lt;p&gt;
3) Create the following page hierarchy:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Page 1
  Page 1.1
  Page 1.2
Page 2
&lt;/pre&gt;&lt;p&gt;
4) Change the permalink settings to "Day and Name".
&lt;/p&gt;
&lt;p&gt;
5) Visit the front end for Page 2. Your error log will be something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	[21-Jul-2010 19:59:04] post id: 10 | post title: Page 2
&lt;/pre&gt;&lt;p&gt;
6) Now visit the front end for Page 1. Your error log will be something like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	[21-Jul-2010 20:00:46] post id: 4 | post title: Page 1
	[21-Jul-2010 20:00:47] post id: 6 | post title: Page 1.1
&lt;/pre&gt;&lt;p&gt;
7) Page 1.1 generates the following:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	[21-Jul-2010 20:00:58] post id: 6 | post title: Page 1.1
	[21-Jul-2010 20:00:58] post id: 8 | post title: Page 1.2
&lt;/pre&gt;&lt;p&gt;
I tried this in W 2.9.2 and the issue does not exist.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 21:19:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:6/1279747146000000</guid>
      <description>&lt;p&gt;
That cleans things up a bit.  $current_theme is gone.  Instead the current theme slug is assigned to the 'current_theme' key of the themes array.  This gets rid of all of the local cache junk that was being sent to api under the current_theme key.  The themes array is populated with only the Name and Version for each theme.  That's all I see being used api side.  The last cached update and the new update are in better named $last_update and $new_update variables.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14381.diff attached to Ticket #14381</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 21:15:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14381/14381.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14381/14381.diff/1279746936000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13757 (Passing functions as call by ref parameter should be avoided) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13757#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13757#comment:12/1279745922000000</guid>
      <description>&lt;p&gt;
Maybe we should not change the functions that are used for now (i.e. don't replace array_pop() with end()), but just use the temporary locale variable part of the suggested solution. After all the issue is raised by the call by reference in some versions of PHP and not the used functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:5/1279745405000000</guid>
      <description>&lt;p&gt;
Also, current_theme is being filled with the previous update response and then stuck into the request.  Seems current_theme when sent in the request should not have checked and response fields.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13424 (Admin Dashboard doesn't remember layout prefs) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:46:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13424#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13424#comment:18/1279745214000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13424#comment:16" title="Comment 16"&gt;shidouhikari&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It happens everytime I test upgrade.
&lt;/p&gt;
&lt;p&gt;
If I could just be informed of where layout is stored before and how to port it manually to 3.0, I could try to recover it and move on.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Are you able to detail the steps you use to reproduce?
&lt;/p&gt;
&lt;p&gt;
I assume you do a clean install of 2.9.2, re-order the dash, upgrade to 3.0?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13757 (Passing functions as call by ref parameter should be avoided) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:44:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13757#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13757#comment:11/1279745049000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think we need to soak test this in trunk before backporting to the 3.0 branch and ensure we don't introduce any other subtle bugs.
&lt;/p&gt;
&lt;p&gt;
We are changing the code from returning values to references with the current patch I think due to the implementation details of end and reset.
&lt;/p&gt;
&lt;p&gt;
So I guess it might be better to re-invent in another way.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:43:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:4/1279745002000000</guid>
      <description>&lt;p&gt;
Does api.wordpress.org need any fields other than Name and Version. It seems we are sending a lot of useless data.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:40:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:3/1279744802000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;$current_theme-&amp;gt;active_stylesheet = get_option( 'stylesheet' ); &lt;/code&gt;
Should probably add so we get parent and child theme
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14378 ("See what others are saying..." not showing recent posts from forum) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:34:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14378#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14378#comment:1/1279744452000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Yep, was wondering about that.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:2/1279744298000000</guid>
      <description>&lt;p&gt;
The whole naming convention in this function is a little sucky it seems.
&lt;/p&gt;
&lt;p&gt;
I guess we should clear some of that up too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13816 (There should be built-in index pages for taxonomies) updated</title>
      
        <dc:creator>frankieroberto</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13816#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13816#comment:6/1279744191000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381#comment:1/1279744182000000</guid>
      <description>&lt;p&gt;
Should it use 'stylesheet' instead of 'template'?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13818 (There should be index pages for custom post types) updated</title>
      
        <dc:creator>frankieroberto</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:27:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13818#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13818#comment:8/1279744045000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've just found this plugin, which adds most of the 'missing' functionality I've described here: &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/simple-custom-post-type-archives/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/simple-custom-post-type-archives/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I think the plugin is a good candidate for being incorporated into Core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-includes--update.php.diff attached to Ticket #14381</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:13:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14381/wp-includes--update.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14381/wp-includes--update.php.diff/1279743194000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14381 (WordPress doesn't report the currently active theme) created</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14381</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14381/1279743184000000</guid>
      <description>&lt;p&gt;
In rev &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11714" title="Hide update notification for themes that are updated manually, props ..."&gt;[11714]&lt;/a&gt; WordPress stopped reporting the currently active theme to api.wordpress.org - see ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10220" title="#10220: enhancement: Theme updates don't obsolete when themes are manually updated (closed: fixed)"&gt;#10220&lt;/a&gt; for more history.
&lt;/p&gt;
&lt;p&gt;
I've created a small patch to fix this, while I was in there I renamed the field 'active_theme' instead of 'template' to be more descriptive.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #13934 ($current_user unfounded assumptions) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:10:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13934#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13934#comment:5/1279743025000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15452" title="Use get_current_user() and get_current_user_id() instead of global ..."&gt;[15452]&lt;/a&gt;) Use get_current_user() and get_current_user_id() instead of global current_user object. Props filofo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13934" title="#13934: defect (bug): $current_user unfounded assumptions (closed: fixed)"&gt;#13934&lt;/a&gt; for 3.0.1
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15452]: Use get_current_user() and get_current_user_id() instead of global ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:10:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15452</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15452/1279743022431669</guid>
      <description>&lt;p&gt;
Use get_current_user() and get_current_user_id() instead of global current_user object. Props filofo. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13934" title="#13934: defect (bug): $current_user unfounded assumptions (closed: fixed)"&gt;#13934&lt;/a&gt; for 3.0.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #13958 (Deactivating custom post types/taxonomies breaks nav menus) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:08:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13958#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13958#comment:9/1279742932000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13958#comment:3" title="Comment 3"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;handle-invalid-object-types.13958.diff&lt;/code&gt; is my suggestion on how to handle this situation, both for missing post types and missing taxonomies:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If the menu item is associated with an invalid post or taxonomy type, the menu item:
&lt;ul&gt;&lt;li&gt;Gets an error message for its title
&lt;/li&gt;&lt;li&gt;Gets an empty URL
&lt;/li&gt;&lt;li&gt;Receives the &lt;code&gt;post_status&lt;/code&gt; property of "draft."
&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Front-end Walker displays only those menu items that have "publish" as their &lt;code&gt;post_status&lt;/code&gt; property.
&lt;/li&gt;&lt;li&gt;Edit menu Walker does not care whether menu items have "publish" as their &lt;code&gt;post_status&lt;/code&gt; property.
&lt;/li&gt;&lt;li&gt;Upon saving a menu item that is associated with an invalid post or taxonomy type, &lt;code&gt;wp_update_nav_menu_item&lt;/code&gt; returns an error object, effectively deleting the menu item on save.
&lt;/li&gt;&lt;li&gt;Note that the added error message 'Invalid post type.' is not a new string.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I am cool will all of this apart from:
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13958#comment:3" title="Comment 3"&gt;filosofo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ul&gt;&lt;li&gt;Upon saving a menu item that is associated with an invalid post or taxonomy type, &lt;code&gt;wp_update_nav_menu_item&lt;/code&gt; returns an error object, effectively deleting the menu item on save.
&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;
I would rather than they stayed as draft and were visible on the backend with some message.
&lt;/p&gt;
&lt;p&gt;
I would like us to have a sane behaviour if someone disables a plugin/theme to test something and then goes back.
&lt;/p&gt;
&lt;p&gt;
Don't want all the menu items that would be affected to disappear in that use-case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14186 (gallery_style filter taking more code than just style) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 20:02:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14186#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14186#comment:1/1279742562000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14380 (Caption shortcode inserts inline style forcing width of containing div) created</title>
      
        <dc:creator>iandunn</dc:creator>

      <pubDate>Wed, 21 Jul 2010 19:45:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14380</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14380/1279741521000000</guid>
      <description>&lt;p&gt;
This is related to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9066" title="#9066: defect (bug): editor_plugin.js adds &amp;#34;hard-coded&amp;#34; inline-style for width+10px which ... (closed: fixed)"&gt;#9066&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The problem is that the image caption shortcode inserts an inline style on the containing div which sets the width to an arbitrary value which cannot be overriden by the theme's stylesheet.
&lt;/p&gt;
&lt;p&gt;
The proposed solution is to replace the shortcode function with a custom one which creates the markup without the inline style, but this is undesirable. It adds unnecessary complexity for beginners and is just generally annoying and shouldn't be necessary.
&lt;/p&gt;
&lt;p&gt;
Creating an inline style violates web standards and contradicts the  philosophy behind a theme-based architecture.
&lt;/p&gt;
&lt;p&gt;
The inline style on the div should be removed so that theme developers can style the caption like they would any other element, without having to resort to inconvenient workarounds.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 19:39:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:7/1279741164000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 19:38:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:6/1279741099000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 19:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:5/1279741074000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10220 (Theme updates don't obsolete when themes are manually updated) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Wed, 21 Jul 2010 19:32:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10220#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10220#comment:9/1279740741000000</guid>
      <description>&lt;p&gt;
The changes in rev 11714 made WP no longer report the active theme back.  So we have no way of putting together stats for active themes in WP installs.
&lt;/p&gt;
&lt;p&gt;
I'm working on putting together a diff to fix the situation.  I'll likely raise it as a new ticket and reference this for history.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14092 (Strikethrough from visual editor being ignored/filtered) updated</title>
      
        <dc:creator>rmarks</dc:creator>

      <pubDate>Wed, 21 Jul 2010 18:40:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14092#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14092#comment:7/1279737632000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can confirm this bug exists in Chrome 5.0.396.0 beta.  In my case, the post belongs to site number 2 of a multi-site install running version 3.0.  The strike through is seen after highlighting the text and clicking the strikethrough button, but the markup is filtered when the post is updated.  I was able to toggle to the HTML editor, apply the &amp;lt;del&amp;gt; tag, and successfully Update the post.  I returned to the Visual editor and was able to see the strike through over the text.  Subsequent saves of the post do not cause the strike through to be filtered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13424 (Admin Dashboard doesn't remember layout prefs) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 17:30:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13424#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13424#comment:17/1279733440000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/upgrade.php?rev=15374#L1135"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/trunk/wp-admin/includes/upgrade.php?rev=15374#L1135&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
That's the line that is supposed to be removing these. All of those usermeta options need to be removed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 17:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:15/1279733259000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15451" title="Make posts per page filters consistent and back compat.  Props ..."&gt;[15451]&lt;/a&gt;) Make posts per page filters consistent and back compat.  Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14135" title="#14135: defect (bug): edit_posts_per_page (closed: fixed)"&gt;#14135&lt;/a&gt; for 3.0.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [15451]: Make posts per page filters consistent and back compat.  Props ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 17:27:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15451</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15451/1279733257578347</guid>
      <description>&lt;p&gt;
Make posts per page filters consistent and back compat.  Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14135" title="#14135: defect (bug): edit_posts_per_page (closed: fixed)"&gt;#14135&lt;/a&gt; for 3.0.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 17:27:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:14/1279733227000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15450" title="Make posts per page filters consistent and back compat.  Props ..."&gt;[15450]&lt;/a&gt;) Make posts per page filters consistent and back compat.  Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14135" title="#14135: defect (bug): edit_posts_per_page (closed: fixed)"&gt;#14135&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15450]: Make posts per page filters consistent and back compat.  Props ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 17:27:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15450</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15450/1279733224564407</guid>
      <description>&lt;p&gt;
Make posts per page filters consistent and back compat.  Props wpmuguru. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14135" title="#14135: defect (bug): edit_posts_per_page (closed: fixed)"&gt;#14135&lt;/a&gt; for 3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 16:20:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:4/1279729248000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14368#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your description is not really clear. Do you mean the accepted values for the 'orderby' argument?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
exactly
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 16:17:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:13/1279729076000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14371#comment:12" title="Comment 12"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
As discussed on wp-hackers, if you don't want to see notices, just call error_reporting() in wp-config.php instead of setting WP_DEBUG.
&lt;/p&gt;
&lt;p&gt;
No need to reinvent the wheel. Suggest closing as worksforme.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Scribu, that is what I thought too, but that is not what happens.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
you can set error_reporting() in your wp-config.php file, but it will be overriden in load.php (called by wp-settings.php) by wp_debug_mode();
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
wp_debug_mode() will override whatever you set in wp-config.php .
that is what this patch tries to solve.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14370 (Custom Taxonomies tagging Attachments) updated</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Wed, 21 Jul 2010 15:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14370#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14370#comment:3/1279724857000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14370 (Custom Taxonomies tagging Attachments) updated</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Wed, 21 Jul 2010 15:02:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14370#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14370#comment:2/1279724578000000</guid>
      <description>&lt;p&gt;
1) Create a Taxonomy for &lt;a class="missing attachment"&gt;attachment:image&lt;/a&gt; (such as Matt's Community Tags plugin does)
2) Tag photos with a single tag, that it begins to page (will work as expected with 'post' post_type).
3) No images will show unless ('post_status' =&amp;gt; publish) is used in a query.
4) Click Next Page. A 404 error will occur. (thought it might be a permalink error but it does this without permalink.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14379 (Add cache invalidation to get_blogs_of_user()) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 21 Jul 2010 14:51:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14379</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14379/1279723873000000</guid>
      <description>&lt;p&gt;
Instead of doing proper cache invalidation, get_blogs_of_user() sets a 5 second timeout on its cache. This results in lots of unnecessary queries.  get_blogs_of_user() should set its cache without expiration and do invalidation where needed. Also, it should cache on a list blog ids.  There is no need to cache what the get_blog_details() cache is already caching.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14378 ("See what others are saying..." not showing recent posts from forum) created</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Wed, 21 Jul 2010 14:50:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14378</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14378/1279723818000000</guid>
      <description>&lt;p&gt;
If you look at the latest post under "See what others are saying..." here:
&lt;a class="ext-link" href="http://wordpress.org/extend/plugins/custom-post-type-ui/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/extend/plugins/custom-post-type-ui/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
You'll notice the latest post is "bold question"
&lt;/p&gt;
&lt;p&gt;
However you if actually view the forum section here:
&lt;a class="ext-link" href="http://wordpress.org/tags/custom-post-type-ui?forum_id=10"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/tags/custom-post-type-ui?forum_id=10&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
There are four posts newer than "bold question"  It seems the plugin detail page is not pulling in the most recent posts for the plugin.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #12726 (Add get_post_by_*() functions) updated</title>
      
        <dc:creator>Utkarsh</dc:creator>

      <pubDate>Wed, 21 Jul 2010 14:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12726#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12726#comment:7/1279723430000000</guid>
      <description>&lt;p&gt;
Attached patch fixes a typo, and saves an sql query when $field is name.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>12726.patch attached to Ticket #12726</title>
      
        <dc:creator>Utkarsh</dc:creator>

      <pubDate>Wed, 21 Jul 2010 14:42:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12726/12726.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12726/12726.patch/1279723353000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>ericmann</dc:creator>

      <pubDate>Wed, 21 Jul 2010 14:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:4/1279722379000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
Suggest closing as wontfix.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think one statement about a &lt;em&gt;possible&lt;/em&gt; consequence of this system doesn't automatically mean we should close this as wontfix.  I, for one, would like to see this expanded upon.  A front-end JSON API would make this easy to implement for theme and plug-in authors without requiring it on every site.
&lt;/p&gt;
&lt;p&gt;
We should be thinking of ways to improve WordPress that don't break existing sites and too many people have systems that might not be compatible with a catch-all refactoring of the comment system anyway.
&lt;/p&gt;
&lt;p&gt;
Yes, some people prefer indexed comments over post load time.  But some people prefer optimized post load time over indexed comments.  Why not build the system so it can handle both paradigms?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Wed, 21 Jul 2010 14:13:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:7/1279721593000000</guid>
      <description>&lt;p&gt;
A browser might send a HEAD request in order to determine whether or not the content in cache needs to be updated. If that is the case, then it is the same as exit()ing for the Not modified.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12726 (Add get_post_by_*() functions) updated</title>
      
        <dc:creator>Utkarsh</dc:creator>

      <pubDate>Wed, 21 Jul 2010 12:14:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12726#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12726#comment:6/1279714440000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14110 (Expose height and width attributes to ...) updated</title>
      
        <dc:creator>divinenephron</dc:creator>

      <pubDate>Wed, 21 Jul 2010 11:45:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14110#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14110#comment:3/1279712722000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Evidently it's rude to refactor code in an enhancement request – sorry about that.
I've attached "wp_get_attachment_image_shortened.diff" – a file that contains only the changes that are essential to the enhancement. Is that more acceptable.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp_get_attachment_image_shortened.diff attached to Ticket #14110</title>
      
        <dc:creator>divinenephron</dc:creator>

      <pubDate>Wed, 21 Jul 2010 11:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14110/wp_get_attachment_image_shortened.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14110/wp_get_attachment_image_shortened.diff/1279712484000000</guid>
      <description>&lt;p&gt;
Only the changed that are essential to the enhancement.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14375 (Post pagination should have a show all option) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Wed, 21 Jul 2010 11:35:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14375#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14375#comment:1/1279712157000000</guid>
      <description>&lt;p&gt;
Some people may be using &lt;em&gt;nextpage&lt;/em&gt; to increase page impressions.  They won’t be exuberant with joy if we introduce something like that by default. :-D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10865 (Function to get posts based on post title) closed</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Wed, 21 Jul 2010 11:34:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10865#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10865#comment:7/1279712068000000</guid>
      <description>wontfix: &lt;p&gt;
get_page_by_title() now has a post_type parameter
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #12726 (Add get_post_by_*() functions) updated</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Wed, 21 Jul 2010 11:32:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12726#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12726#comment:5/1279711971000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10865" title="#10865: enhancement: Function to get posts based on post title (closed: wontfix)"&gt;#10865&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9324 (Let wp_link_pages do pagination when static page is used for front page) updated</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Wed, 21 Jul 2010 11:16:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9324#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9324#comment:11/1279710983000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>link-template.patch attached to Ticket #9324</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Wed, 21 Jul 2010 11:12:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9324/link-template.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9324/link-template.patch/1279710755000000</guid>
      <description>&lt;p&gt;
patch updated for 3.0
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #12726 (Add get_post_by_*() functions) updated</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Wed, 21 Jul 2010 10:32:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12726#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12726#comment:4/1279708347000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I added a patch which adds get_post_by().
Should we deprecate get_page_by_path(), get_page_by_title()?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post.patch attached to Ticket #12726</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Wed, 21 Jul 2010 10:18:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/12726/post.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/12726/post.patch/1279707526000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14347 (URLs are not handeled properly) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 21 Jul 2010 10:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14347#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14347#comment:6/1279707266000000</guid>
      <description>wontfix: &lt;p&gt;
&lt;a class="ext-link" href="http://hakre.wordpress.com/plugins/normalize-urls/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Normalize URLs plugin&lt;/a&gt; fixes this issue.
&lt;/p&gt;
&lt;p&gt;
If some developer wants to give this some traction, feel free to reopen. With this plugin, worksforme now.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 21 Jul 2010 10:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:27/1279707202000000</guid>
      <description>&lt;p&gt;
Ref: &lt;a class="ext-link" href="http://hakre.wordpress.com/plugins/normalize-urls/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Normalize URLs plugin&lt;/a&gt; fixes this issue by playing the standards better as in the changes in  &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15437" title="Hex octets are case-insenstive.  Don't 301 when the only octet case ..."&gt;[15437]&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15438" title="Hex octets are case-insenstive.  Don't 301 when only the octet case ..."&gt;[15438]&lt;/a&gt; / &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15444" title="Remove rededundant code. see #14292"&gt;[15444]&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Wed, 21 Jul 2010 09:32:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:7/1279704765000000</guid>
      <description>&lt;p&gt;
@scribu
&lt;/p&gt;
&lt;p&gt;
It is not like that.
&lt;/p&gt;
&lt;p&gt;
First, a translation breaks even if a single space changes in the original:  Fuzzily translated strings are not compiled into the MO file.
&lt;/p&gt;
&lt;p&gt;
Second, in cases like this Translation Memory and fuzzy translations do not help very much:  The interface has no diff to tell you that the only thing changed was a hyphen, so you have to look carefully at both the original string and the fuzzy translation to make certain that the fuzzy translation can be accepted.
&lt;/p&gt;
&lt;p&gt;
@zeo
&lt;/p&gt;
&lt;p&gt;
This and the GNOME HIG are among the things I am looking at for the styleguide.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>zeo</dc:creator>

      <pubDate>Wed, 21 Jul 2010 09:13:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:6/1279703609000000</guid>
      <description>&lt;p&gt;
I raised this issue a while back in wp-polyglots.
&lt;/p&gt;
&lt;p&gt;
WP Codex should have something like &lt;a class="ext-link" href="http://library.gnome.org/devel/gdp-style-guide/nightly/gnome-glossary-generic-terms.html.en"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://library.gnome.org/devel/gdp-style-guide/nightly/gnome-glossary-generic-terms.html.en&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Wed, 21 Jul 2010 09:07:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:26/1279703230000000</guid>
      <description>&lt;p&gt;
For the log: normalizing the path might not be a bad idea. Needs to be properly checked against RFCs first.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14377 (Some YouTube videos are not processed by oEmbed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 09:05:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14377#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14377#comment:1/1279703125000000</guid>
      <description>&lt;p&gt;
Maybe that particular video has embeding disabled?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:5/1279702295000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
It breaks translated strings (too many in this case), adding extra work for translators without any compelling reason.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You have the concept of fuzzy strings, so translations won't be broken. Translators can fix them over time.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:48:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:3/1279702089000000</guid>
      <description>&lt;p&gt;
Your description is not really clear. Do you mean the accepted values for the 'orderby' argument?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14377 (Some YouTube videos are not processed by oEmbed) created</title>
      
        <dc:creator>honza.skypala</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:43:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14377</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14377/1279701792000000</guid>
      <description>&lt;p&gt;
While majority of YouTube videos for oEmbed work fine (i.e. I just enter the URL on a separate line into blog post and I get an embedded video as a result), it does not work in some cases. For example:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.youtube.com/watch?v=eNF2eVjXqy8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.youtube.com/watch?v=eNF2eVjXqy8&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
When I enter this URL into blog post (valid URL for YouTube video), in the displayed post I have the URL, not the embedded video.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14369 (Comment sorting) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:42:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14369#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14369#comment:1/1279701766000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This is something that I'm already working on as part of GSoC:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://gsoc2010.wordpress.com/silviu-cristian-burca-ajaxify-admin/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://gsoc2010.wordpress.com/silviu-cristian-burca-ajaxify-admin/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14370 (Custom Taxonomies tagging Attachments) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:40:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14370#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14370#comment:1/1279701635000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Could you post more detailed steps to reproduce?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:36:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:3/1279701418000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Comments that aren't indexed in search results.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's a deal breaker right there.
&lt;/p&gt;
&lt;p&gt;
I think everyone prefers to have indexed comments rather than to have posts that load a little faster.
&lt;/p&gt;
&lt;p&gt;
Suggest closing as wontfix.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14374 (Concatenate frontend resources) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:32:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14374#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14374#comment:1/1279701122000000</guid>
      <description>&lt;p&gt;
There's a dupe of this somewhere. It relates to extending the WP scripts and styles classes, or depends, to make it core.
&lt;/p&gt;
&lt;p&gt;
Btw, it's not too hard todo with a plugin.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:31:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:12/1279701077000000</guid>
      <description>&lt;p&gt;
As discussed on wp-hackers, if you don't want to see notices, just call error_reporting() in wp-config.php instead of setting WP_DEBUG.
&lt;/p&gt;
&lt;p&gt;
No need to reinvent the wheel. Suggest closing as worksforme.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 21 Jul 2010 08:28:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:6/1279700924000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:5" title="Comment 5"&gt;jacobsantos&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can easily picture a plugin overriding headers after an output buffer gets started or something similar. The patch exits too early.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought the same thing, but I was wrong. The exit()ing is not part of the patch, but already in the code. Also, there is a filter, called 'wp_headers' that a plugin can hook into.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, but that exit call, if i'm recognizing the code above and below, is there to handle 304 / not modified requests.
&lt;/p&gt;
&lt;p&gt;
The wp_headers filter isn't of much use in practice. I can't recall the specific reasons, but I remember firmly dismissing it as useless for anything but unconditionally adding a header.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14376 (admin post.php fails html validation due to use of  "[" in name/id/for ...) created</title>
      
        <dc:creator>anmari</dc:creator>

      <pubDate>Wed, 21 Jul 2010 07:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14376</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14376/1279697874000000</guid>
      <description>&lt;p&gt;
Post.php is causing many many html validation errors due to hidden screen reader text for post meta fields mainly. Not a major problem, but annoying when attempting to validate admin plugin code.
&lt;/p&gt;
&lt;p&gt;
eg:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;label class='screen-reader-text' for='meta[1957][key]'&amp;gt;Key&amp;lt;/label&amp;gt;&amp;lt;input name='meta[1957][key]' id='meta[1957][key]' tabindex='6' type='text' size='20' value='_wp_geo_latitude' /&amp;gt;
character "[" is not allowed in the value of attribute "id"
character "[" is not allowed in the value of attribute "for"
&lt;/pre&gt;&lt;p&gt;
"[" are allowed in the name attribute.  So perhaps one could simply strip them out them for the 'id' and the 'for'?
&lt;/p&gt;
&lt;p&gt;
Other failed validation messages that occur a lot and appear to be wp generated code:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;  ID "_ajax_nonce" already defined
&lt;/li&gt;&lt;li&gt;  reference to non-existent ID "metakeyselect"
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14375 (Post pagination should have a show all option) created</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 21 Jul 2010 07:03:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14375</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14375/1279695809000000</guid>
      <description>&lt;p&gt;
When people use the nextpage html comment tag to paginate posts we should also have a show all link displayed to make it easier for people to read the whole content without pagination.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 21 Jul 2010 06:02:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:2/1279692155000000</guid>
      <description>&lt;p&gt;
s/were one/was one/
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 06:01:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:11/1279692093000000</guid>
      <description>&lt;p&gt;
well, the benefit is that will have more control over what is to be displayed when WP_DEBUG is on.
I would not turn WP_DEBUG on as it works right now, as I need to see error messages on screen, but not that many! (so it is not about not revelaing notices, it is about revealing a reasonable amount)
so in response to that i endup not using WP_DEBUG and i think the whole idea is to use it in development.
&lt;/p&gt;
&lt;p&gt;
Maybe we should give it a little bit of time to see other people's responses...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 21 Jul 2010 06:01:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:1/1279692076000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14372" title="#14372: feature request: Option to load comments asynchronously, for speed (closed: wontfix)"&gt;markjaquith&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The idea is to have an option to not deliver comments in the page's initial HTML request, but to load them with an asynchronous JavaScript call. This would cut down on page generation time, reduce page size, and make page content load and show up faster.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Possibly.  It also means:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Two requests where there were one. (See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14374" title="#14374: feature request: Concatenate frontend resources (closed: duplicate)"&gt;#14374&lt;/a&gt; ?)
&lt;/li&gt;&lt;li&gt;Problems with whatever browsers aren't supporting that particular JS
&lt;/li&gt;&lt;li&gt;Extra bandwidth to request the JS that wasn't needed before.
&lt;/li&gt;&lt;li&gt;Comments that aren't indexed in search results.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This also allows caching plugins to avoid flushing the cache for that page when a new comment is approved. They'd only have to monitor for post content changes. This means more cache hits, which translates into a faster average page load.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This could be addressed directly by the caching plugins. And you still have to flush the comments cache.  And because the comments are now separated from the rest of the page, there are more server requests and more cache-processing overhead.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This solution would need to handle comment permalink requests, and scroll to that comment once the comments were loaded. We'd also have to delay comment-related JS (like threading support) until the comments were loaded.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
All of which suggests lots of extra JS, or JS libraries, etc., that are best left to the discretion of the theme author.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is this core? Can we do it without requiring explicit theme support?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It sounds like something we should make easier for people to implement with plugins and themes, if they can't already:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Perhaps a front-end JSON response API for better JS queries of stuff like comments.
&lt;/li&gt;&lt;li&gt;Improving comments query performance
&lt;/li&gt;&lt;li&gt;Encouraging theme authors to standardize common page element IDs and / or theme action hooks, so plugins can more easily let JS replace elements.
&lt;/li&gt;&lt;li&gt;Setting comment paging to a lower number of comments per page by default.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 21 Jul 2010 05:53:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:10/1279691623000000</guid>
      <description>&lt;p&gt;
I'm wondering if, at the risk of introducing another confusing boolean in this family, WP_DEBUG_NOTICES (default true) is best. It should probably not suppress deprecated notices however.
&lt;/p&gt;
&lt;p&gt;
Then again, I'm really not sure what the benefits are of WP_DEBUG if it doesn't reveal notices as well. You can just as easily change the display_errors and error_log directives to your liking. And, as I said previously, I don't see why our default error reporting threshold would need to be raised.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 05:50:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:9/1279691426000000</guid>
      <description>&lt;p&gt;
Thanks nacin for your time and explanations,
I didn't mean you to repeat yourself ;-)
it is much clearer now.
&lt;/p&gt;
&lt;p&gt;
So...
Shall I submit a new patch that will only work when WP_DEBUG is on.
Do you think WP_DEBUG_LEVEL is a good name?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 21 Jul 2010 05:44:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:8/1279691097000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14371#comment:7" title="Comment 7"&gt;wjm&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Again, errors are displayed because by default wordpress doesn't set display_errors off in non-debuging mode.
That is what may be confusing people.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Perhaps. It is also confusing in the context of WP_DEBUG_DISPLAY, which even if set to *false* does not actually force display_errors off; it only prevents WordPress from forcing it on.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I always had WP_DEBUG off, because if I turned it off, I would get so many E_NOTICE errors that will be impossible to fix. That is confusing too, I think developers stay away from WP_DEBUG because of this,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also probably the case. But the notices are the main aspect to WP_DEBUG. (For deprecated functionality, which are also fired, I would recommend my &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/log-deprecated-notices/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Log Deprecated Notices&lt;/a&gt; plugin which does not require WP_DEBUG to be on.)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol&gt;&lt;li&gt;Shouldn't be setting display_errors off when not in debug mode?
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
We leave it up to the local configuration. It makes sense as WP_DEBUG is not really an on or off state, it's more like an on state or let the server handle itself state.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;ol start="2"&gt;&lt;li&gt;I see it as a security issue to have a fixed file name for the debug.log file. Maybe a constant can be defined to set its filename or maybe use a secret suffix.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
Security by obscurity doesn't do much. It would need to be outside public_html. Point is, WP_DEBUG is designed for development only, and WP_DEBUG_LOG is *certainly* development only. Many do run WP_DEBUG on production, but then use the php.ini directive for error logs, versus WP_DEBUG_LOG.
&lt;/p&gt;
&lt;p&gt;
That said, I would not go so far as to call WP_DEBUG_LOG on a production site (not recommended!) a security issue. It is, but that brings us back to display_errors, which is also a security issue. In an ideal production setup (to me, anyway):
&lt;/p&gt;
&lt;p&gt;
display_errors = false
error_log = path to private log
WP_DEBUG = true
WP_DEBUG_DISPLAY = false
WP_DEBUG_LOG = false (the default)
&lt;/p&gt;
&lt;p&gt;
That's also an ideal setup for development for many, as they then tail the log. (debug.log also works here.)
&lt;/p&gt;
&lt;p&gt;
There's a lot of tickets that discuss these constants, ranging from their initial introduction to tickets similar to this one, where I have gone through long explanations on optimal setups and why things are the way they are.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14374 (Concatenate frontend resources) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 21 Jul 2010 05:34:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14374</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14374/1279690451000000</guid>
      <description>&lt;p&gt;
This comes as a suggestion from Google, who wants to help publishing platforms deliver content faster.
&lt;/p&gt;
&lt;p&gt;
Many WordPress sites suffer from too many separate CSS files and JS files. They could reduce HTTP requests and improve performance by concatenating these together. If we do this in core, we can include plugin resources as well as theme resources.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14373 (In-editor image downsizing uses HTML resizing instead of actual resize) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 21 Jul 2010 05:30:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14373</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14373/1279690244000000</guid>
      <description>&lt;p&gt;
This comes as a suggestion from Google, who wants to help publishing platforms deliver content faster.
&lt;/p&gt;
&lt;p&gt;
When you use the in-editor image downsizing functionality (the percentage slider), it does an HTML downsize. This can lead to bigger image requests than are necessary. An actual resize for local images would result in a more efficient load.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 05:30:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:7/1279690238000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14371#comment:6" title="Comment 6"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
At this point I'm -1 on this (unless it is tied to WP_DEBUG, possibly). There's an obvious potential that it would be misused to simply lower the reporting level instead of suppressing the display of warnings the proper way. Errors should be logged, not displayed, and errors we report (warnings/fatals) by default are the kinds that absolutely should be reported and logged.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I was missing something. thanks Nacin for pointing it out.
I have read your articles about using WP_DEBUG &lt;a class="ext-link" href="http://www.andrewnacin.com/2010/04/23/5-ways-to-debug-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.andrewnacin.com/2010/04/23/5-ways-to-debug-wordpress/&lt;/a&gt; and &lt;a class="ext-link" href="http://www.andrewnacin.com/2010/03/22/deprecated-functions-and-wp_debug/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.andrewnacin.com/2010/03/22/deprecated-functions-and-wp_debug/&lt;/a&gt; and i understand the situation better.
&lt;/p&gt;
&lt;p&gt;
Again, errors are displayed because by default wordpress doesn't set display_errors off in non-debuging mode.
That is what may be confusing people.
&lt;/p&gt;
&lt;p&gt;
I always had WP_DEBUG off, because if I turned it off, I would get so many E_NOTICE errors that will be impossible to fix. That is confusing too, I think developers stay away from WP_DEBUG because of this,
&lt;/p&gt;
&lt;p&gt;
I see it can be very useful to have this feature in conjuction with WP_DEBUG (to avoid the issues stated above) and there may be no need to have it outside of it.
&lt;/p&gt;
&lt;p&gt;
Some ideas come into my mind.
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Shouldn't be setting display_errors off when not in debug mode?
&lt;/li&gt;&lt;li&gt;I see it as a security issue to have a fixed file name for the debug.log file. Maybe a constant can be defined to set its filename or maybe use a secret suffix.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 21 Jul 2010 05:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372/1279689959000000</guid>
      <description>&lt;p&gt;
This comes as a suggestion from Google, who wants to help publishing platforms deliver content faster.
&lt;/p&gt;
&lt;p&gt;
The idea is to have an option to not deliver comments in the page's initial HTML request, but to load them with an asynchronous JavaScript call. This would cut down on page generation time, reduce page size, and make page content load and show up faster.
&lt;/p&gt;
&lt;p&gt;
This also allows caching plugins to avoid flushing the cache for that page when a new comment is approved. They'd only have to monitor for post content changes. This means more cache hits, which translates into a faster average page load.
&lt;/p&gt;
&lt;p&gt;
This solution would need to handle comment permalink requests, and scroll to that comment once the comments were loaded. We'd also have to delay comment-related JS (like threading support) until the comments were loaded.
&lt;/p&gt;
&lt;p&gt;
Is this core? Can we do it without requiring explicit theme support?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 21 Jul 2010 04:46:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:11/1279687573000000</guid>
      <description>&lt;p&gt;
This came up over the wp-hackers list not long ago. My solution was indeed to use after_title and after_widget, but to prevent the improperly formed div if the title was empty, to also use before_widget and before_title:
&lt;/p&gt;
&lt;pre class="wiki"&gt;before_widget - &amp;lt;div class="widget-notitle-content-container"&amp;gt;
before_title - &amp;lt;/div&amp;gt;&amp;lt;h4&amp;gt;
after_title - &amp;lt;/h4&amp;gt;&amp;lt;div class="widget-content-container"&amp;gt;
after_widget - &amp;lt;/div&amp;gt;
&lt;/pre&gt;&lt;p&gt;
&lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-hackers/2010-June/032648.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://lists.automattic.com/pipermail/wp-hackers/2010-June/032648.html&lt;/a&gt;. The rest of the thread surrounds that post.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 21 Jul 2010 04:35:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:10/1279686925000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>10976.widget-content.diff attached to Ticket #10976</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Wed, 21 Jul 2010 04:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10976/10976.widget-content.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10976/10976.widget-content.diff/1279686859000000</guid>
      <description>&lt;p&gt;
Patch to add before_content and after_content to default widgets
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 21 Jul 2010 04:21:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:6/1279686088000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14371#comment:5" title="Comment 5"&gt;wjm&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@Viper007Bond: As it is right now FATAL and WARNING errors are showed in production.
I think it's up to people to decide what they want to show.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not true. Fatals and warnings are &lt;strong&gt;reported&lt;/strong&gt;. As long as WP_DEBUG is not set, then we don't touch the php.ini display_errors directive, which on a production server should be off.
&lt;/p&gt;
&lt;p&gt;
At this point I'm -1 on this (unless it is tied to WP_DEBUG, possibly). There's an obvious potential that it would be misused to simply lower the reporting level instead of suppressing the display of warnings the proper way. Errors should be logged, not displayed, and errors we report (warnings/fatals) by default are the kinds that absolutely should be reported and logged.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 04:15:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:5/1279685738000000</guid>
      <description>&lt;p&gt;
@Viper007Bond: As it is right now FATAL and WARNING errors are showed in production.
I think it's up to people to decide what they want to show.
&lt;/p&gt;
&lt;p&gt;
I only want fatal errors to be displayed in production environments.
Other people will want both.
and some none.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Wed, 21 Jul 2010 04:04:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:4/1279685075000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14371#comment:2" title="Comment 2"&gt;wjm&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I am not sure about that, as WP_DEBUG right now is associated with developement installations not with productions ones, and this level may be used for production servers.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Errors shouldn't be shown in production environments.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 03:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:3/1279683053000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 03:20:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:2/1279682442000000</guid>
      <description>&lt;p&gt;
I am not sure about that, as WP_DEBUG right now is associated with developement installations not with productions ones, and this level may be used for production servers.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 03:15:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:2/1279682118000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 21 Jul 2010 03:13:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371#comment:1/1279682014000000</guid>
      <description>&lt;p&gt;
If we are to do this, what about requiring the use of WP_DEBUG to set this, and then having WP_DEBUG_LEVEL?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>WP_ERROR_REPORTING.diff attached to Ticket #14371</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 03:07:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14371/WP_ERROR_REPORTING.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14371/WP_ERROR_REPORTING.diff/1279681679000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14371 (Allow user to specify error reporting level) created</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 03:06:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14371</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14371/1279681602000000</guid>
      <description>&lt;p&gt;
I have noticed that there is little control over the error reporting level that you can set,
&lt;/p&gt;
&lt;p&gt;
you can set error_reporting() in your wp-config.php file, but it will be overriden in load.php (called by wp-settings.php) by wp_debug_mode();
&lt;/p&gt;
&lt;p&gt;
this introduces a WP_ERROR_REPORTING constant, that will be checked and if set, error reporting will be set to that value.
either in WP_DEBUG mode or not.
&lt;/p&gt;
&lt;p&gt;
so for example the, in the wp-config.php of the production installation, you use it like this,
&lt;/p&gt;
&lt;pre class="wiki"&gt;define( 'WP_ERROR_REPORTING', ( E_CORE_ERROR | E_COMPILE_ERROR | E_ERROR | E_PARSE | E_USER_ERROR ) );
&lt;/pre&gt;&lt;p&gt;
And it will throw no warning messages at all.
&lt;/p&gt;
&lt;p&gt;
This is also useful in conjunction with WP_DEBUG and WP_DEBUG_LOG, as you will be able to specify the error level and also log any errors.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14370 (Custom Taxonomies tagging Attachments) created</title>
      
        <dc:creator>thee17</dc:creator>

      <pubDate>Wed, 21 Jul 2010 02:28:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14370</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14370/1279679332000000</guid>
      <description>&lt;p&gt;
There appears to be an issue where if the custom taxonomy has only &lt;a class="missing attachment"&gt;attachment:image&lt;/a&gt;, &lt;a class="missing attachment"&gt;attachment:audio&lt;/a&gt;, and &lt;a class="missing attachment"&gt;attachment:video&lt;/a&gt; The attachments return nothing found. Only 'post' post types are returned.
&lt;/p&gt;
&lt;p&gt;
adding to a query 'post_status' =&amp;gt; publish, allows it to display the images but does not allow pagination.
&lt;/p&gt;
&lt;p&gt;
WordPress should return all post_types that the Taxonomy is defined for. Somehow ma.tt found a way around this issue. refer to:
&lt;a class="ext-link" href="http://osdir.com/ml/wp-testers/2010-06/msg00317.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://osdir.com/ml/wp-testers/2010-06/msg00317.html&lt;/a&gt;
&lt;a class="ext-link" href="http://wordpress.org/support/topic/383096?replies=29"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/topic/383096?replies=29&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Does not affect pre 3.0
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>comment_sorting.diff attached to Ticket #14369</title>
      
        <dc:creator>mhitza</dc:creator>

      <pubDate>Wed, 21 Jul 2010 02:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14369/comment_sorting.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14369/comment_sorting.diff/1279678334000000</guid>
      <description>&lt;p&gt;
Patch in order to enable comment sorting
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14369 (Comment sorting) created</title>
      
        <dc:creator>mhitza</dc:creator>

      <pubDate>Wed, 21 Jul 2010 02:11:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14369</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14369/1279678302000000</guid>
      <description>&lt;p&gt;
I needed to add comment sorting (in the comment administration interface) for one of my blogs, so I thought maybe it could be useful to share it back to the community.
&lt;/p&gt;
&lt;p&gt;
First time I've gone modifying in the WordPress core, so I can easily see why it wouldn't be accepted, maybe missing some core dev guidlines.
&lt;/p&gt;
&lt;p&gt;
Regards
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14301 (wp_set_post_terms should return wp_set_object_terms) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 21 Jul 2010 00:50:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14301#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14301#comment:3/1279673405000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15449" title="Doc update for [15402]. fixes #14301."&gt;[15449]&lt;/a&gt;) Doc update for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15402" title="Have wp_set_post_terms return wp_set_object_terms. fixes #14301."&gt;[15402]&lt;/a&gt;. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14301" title="#14301: defect (bug): wp_set_post_terms should return wp_set_object_terms (closed: fixed)"&gt;#14301&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15449]: Doc update for [15402]. fixes #14301.</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Wed, 21 Jul 2010 00:50:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15449</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15449/1279673401860241</guid>
      <description>&lt;p&gt;
Doc update for &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15402" title="Have wp_set_post_terms return wp_set_object_terms. fixes #14301."&gt;[15402]&lt;/a&gt;. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14301" title="#14301: defect (bug): wp_set_post_terms should return wp_set_object_terms (closed: fixed)"&gt;#14301&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 21 Jul 2010 00:42:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:13/1279672971000000</guid>
      <description>&lt;p&gt;
I swapped those lines and found I had used the wrong var in includes/post.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14135.3.0.1.diff attached to Ticket #14135</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Wed, 21 Jul 2010 00:42:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14135/14135.3.0.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14135/14135.3.0.1.diff/1279672928000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>get_template_part.5.diff attached to Ticket #13691</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 00:23:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13691/get_template_part.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13691/get_template_part.5.diff/1279671832000000</guid>
      <description>&lt;p&gt;
This removes the need to add an action
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) updated</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Wed, 21 Jul 2010 00:00:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368#comment:1/1279670439000000</guid>
      <description>&lt;p&gt;
sorry, i missed it in the title.
This only has to do with SORTING the results by these fields mentioned.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>query_allowed_keys.patch attached to Ticket #14368</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Tue, 20 Jul 2010 23:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14368/query_allowed_keys.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14368/query_allowed_keys.patch/1279670382000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14368 (make the 'orderby' argument in get_posts() accept all "post" fields) created</title>
      
        <dc:creator>wjm</dc:creator>

      <pubDate>Tue, 20 Jul 2010 23:58:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14368</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14368/1279670321000000</guid>
      <description>&lt;p&gt;
Right now, some post's fields were not accepted when retrieving posts (even though they were documented in codex . for example "name" (slug)  was missing).
&lt;/p&gt;
&lt;p&gt;
this patch sorts the elements in the $allow_keys array (in the same order as the db' s columns) and adds the missing ones, I added every field except the ones that were long text fields (content, excerpt, etc)
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 23:03:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:12/1279667020000000</guid>
      <description>&lt;p&gt;
(Now that I looked...) In _option &amp;amp; _transient functions they are the opposite order- specific first, generic second. We should go for consistency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13691 (Make get_template_part() accept multiple template names) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Tue, 20 Jul 2010 22:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13691#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13691#comment:9/1279665598000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 22:04:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:11/1279663479000000</guid>
      <description>&lt;p&gt;
Out of curiosity, anyone else have a preference for which filter comes first?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 22:03:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:10/1279663428000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks solid.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14367 (wordpress outputs blank html) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14367#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14367#comment:1/1279660442000000</guid>
      <description>invalid: &lt;p&gt;
Sounds like you're missing a theme, or your theme is broken.
&lt;/p&gt;
&lt;p&gt;
Try the support forums: &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14367 (wordpress outputs blank html) created</title>
      
        <dc:creator>yurivict</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:12:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14367</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14367/1279660374000000</guid>
      <description>&lt;p&gt;
I am on FreeBSD-8.1 using the latest in ports wordpress-3.0.0.
&lt;/p&gt;
&lt;p&gt;
When I navigate to /wordpress I get an empty html.
When I navigate to wordpress/wp-admin/ I see admin pages fine, but clicking on the 'XXX Blog' in the top left corner I get the blank html again.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:04:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:4/1279659860000000</guid>
      <description>&lt;p&gt;
out of security reasons I remove the user adminwptrack - everyone could have access to other blogs (it is a multisite feature enabled installation)
&lt;/p&gt;
&lt;p&gt;
but with the admin user I have this problem and with the other editor user it is working fine.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) updated</title>
      
        <dc:creator>lancewillett</dc:creator>

      <pubDate>Tue, 20 Jul 2010 21:01:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:9/1279659716000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10976#comment:3" title="Comment 3"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems this can be added in the &lt;code&gt;widget&lt;/code&gt; method for a simple widget. However adding it globally would not make sense for more complex widgets that output several different elements and don't have distinct &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, this would only be for simple widgets. More complex widgets can generally be styled without a problem based on more complex the HTML output.
&lt;/p&gt;
&lt;p&gt;
Though many widgets do not need an extra wrapper element, some do. In those cases it would be helpful to have widget content before/after hooks available, but empty by default.
&lt;/p&gt;
&lt;p&gt;
Case in point: if you look at the default widgets in &lt;code&gt;/wp-includes/default-widgets.php&lt;/code&gt; you'll see that at least two of the default widgets use an extra wrapper element around the widget content (calendar and tag cloud).
&lt;/p&gt;
&lt;p&gt;
The main benefits I see for adding in the hooks are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The ability to style only the widget content area (avoiding styling the title and overall widget wrapper).
&lt;/li&gt;&lt;li&gt;The ability to specifically target elements inside the widget content area.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This happens often in themes where the widget has multiple block level elements, like a text widget with multiple paragraph elements. The last paragraph element in the widget content might have bottom margin, for example, and if you cannot target only the paragraph elements in the widget content area it's difficult to remove the bottom margin to ensure that the widgets themselves have consistent spacing.
&lt;/p&gt;
&lt;p&gt;
It is possible to target the last element with a &lt;code&gt;last:child&lt;/code&gt; selector, but that isn't supported in older browsers, so having an HTML element is the only way to achieve this until all browsers support CSS3.
&lt;/p&gt;
&lt;p&gt;
As mentioned in the original ticket, the way themes address this now is to add in an extra &lt;code&gt;div&lt;/code&gt; in the "after_title" hook and then close it with the "before_widget" -- the problem is that if the title is empty you end up with an improperly formed &lt;code&gt;div&lt;/code&gt; element.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>demetris</dc:creator>

      <pubDate>Tue, 20 Jul 2010 20:11:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:4/1279656660000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
The latest edition of the Shorter OED (which is not really short if you have seen it, just a shorter version of the 20-volume full version) dropped hyphens by the thousands because “people are not confident about using hyphens anymore, they’re not really sure what they are for”:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.reuters.com/article/idUSHAR15384620070921"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.reuters.com/article/idUSHAR15384620070921&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Now, coming to the proposed patch, I am opposed to changing strings just to unify hyphenated and unhyphenated spellings.  It breaks translated strings (too many in this case), adding extra work for translators without any compelling reason.
&lt;/p&gt;
&lt;p&gt;
But we should certainly standardize on a spelling, not only for email but for other words too, so that we can increase consistency as time goes by.
&lt;/p&gt;
&lt;p&gt;
(I’ve started drafting a style guide that deals with cases like that, among other things, and I believe I will have something ready by the time 3.1 development starts.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) closed</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:48:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:8/1279655336000000</guid>
      <description>invalid: &lt;p&gt;
I can't reproduce anything with that code per se, but it is obvious why is_front_page is returning two different values. Between calls, you call query_posts(), which resets the query object and changes all of the conditionals to reflect the new query.
&lt;/p&gt;
&lt;p&gt;
If you don't want to alter things that low-level, then using get_posts or a new WP_Query will suffice.
&lt;/p&gt;
&lt;p&gt;
Also, if you're going to use &lt;code&gt;$_SERVER['PHP_SELF']&lt;/code&gt;, better not to use it, but if you do, then make sure you escape it. &lt;a class="ext-link" href="http://markjaquith.wordpress.com/2009/09/21/php-server-vars-not-safe-in-forms-or-links/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://markjaquith.wordpress.com/2009/09/21/php-server-vars-not-safe-in-forms-or-links/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:43:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:7/1279655036000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:42:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:6/1279654946000000</guid>
      <description>&lt;pre class="wiki"&gt;&amp;lt;?php
$biq_theme_options = biq_get_theme_options();
get_header('xajax');
global $xajax;
//$xajax = new xajax();
$xajax-&amp;gt;registerFunction('load_latest_post');
$xajax-&amp;gt;processRequest();
echo
'&amp;lt;div id="main_content_container"&amp;gt;' . "\n" .
'  &amp;lt;div id="content_container"&amp;gt;' . "\n";
if ( is_home() )
{
}
var_dump(is_front_page());
if ( is_front_page() )
{
  // check for referer and show two latest posts excerpts
  //biq_check_referer();
  query_posts(array( 'posts_per_page' =&amp;gt; '2', 'category_name' =&amp;gt; 'Blog Post' ));
  echo '  &amp;lt;div id="latest_post_container"&amp;gt;' . "\n";
  echo '    &amp;lt;div id="latest_post"&amp;gt;' . "\n";
  if ( have_posts() )
  {
    while(have_posts())
    {
      the_post();
      $biq_id = get_the_ID();
      echo '    &amp;lt;div ';
      post_class();
      echo ' id="co-post-' . get_the_ID() . '"&amp;gt;' . "\n";
      $result = is_front_page();
      var_dump($result);
      echo 'index.php:' . is_front_page() . ':&amp;lt;br /&amp;gt;' . "\n";
      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="' . get_permalink() . '" rel="bookmark" onclick="xajax_load_latest_post(\'' . get_the_ID() . '\'); return false;" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
//      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="javascript:xajax_load_latest_post(' . get_the_ID() . ')" rel="bookmark" onclick="return !xajax_load_latest_post(' . get_the_ID() . ');" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
//      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="#" rel="bookmark" onclick="xajax_load_latest_post(\'' . get_the_ID() . '\');" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
//      echo '    &amp;lt;h3&amp;gt;&amp;lt;a href="javascript:xajax_load_latest_post(\'' . $biq_id . '\')" rel="bookmark" title="Permalink: ' . the_title( '', '', false) . '"&amp;gt;' . the_title( '', '', false) . '&amp;lt;/a&amp;gt;&amp;lt;/h3&amp;gt;' . "\n";
      the_excerpt();
      echo '    &amp;lt;/div&amp;gt;' . "\n";
    }
  }
  wp_reset_query();
  echo '    &amp;lt;/div&amp;gt;' . "\n";
  echo '  &amp;lt;/div&amp;gt;' . "\n";
}
$biq_amazon_item_list_search = NULL;
$biq_amazon_items_per_page   = NULL;
$biq_amazon_item_list_page   = NULL;
//  process submitted data
//  SORT Order
if ( $_POST['biq_amazon_item_list_search'] )
{
  $biq_amazon_item_list_search = $_POST['biq_amazon_item_list_search'];
}
//  number of items to display
if ( $_POST['amazon_items_ppage'] )
{
  $biq_amazon_items_per_page = intval($_POST['amazon_items_ppage']);
  $_SESSION['amazon_items_ppage'] = $biq_amazon_items_per_page;
}
if ( !$biq_amazon_items_per_page )
{
  if ( $_SESSION['amazon_items_ppage'] )
    $biq_amazon_items_per_page = $_SESSION['amazon_items_ppage'];
  else
    $biq_amazon_items_per_page = 9;
}
//  page number
if ( $_POST['biq_amazon_item_list_page'] )
{
  $biq_amazon_item_list_page = intval($_POST['biq_amazon_item_list_page']);
}
if ( !$biq_amazon_item_list_page OR isset($_POST['biq_amazon_item_list_page_first']))
  $biq_amazon_item_list_page = 1;
//  call to get product items
$query = 'SELECT * FROM amazon_attributes;';
$biq_amazon_product_list = $wpdb-&amp;gt;get_results($query);
if ( $biq_amazon_product_list )
{
  $biq_amazon_product_list_count = count( $biq_amazon_product_list );
  echo '  &amp;lt;div id="content"&amp;gt;' . "\n";
  echo '    &amp;lt;div id="amazon_item_list_header"&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_items_search"&amp;gt;' . "\n";
  echo '        &amp;lt;b&amp;gt;SORT BY&amp;lt;/b&amp;gt; ' . "\n";
  echo '        &amp;lt;form class="form_items_search" action="' . $_SERVER['PHP_SELF'] . '" method="post"&amp;gt;' . "\n";
  echo '          &amp;lt;select name="biq_amazon_item_list_search" size="1"&amp;gt;' . "\n";
  echo '            &amp;lt;option&amp;gt;&amp;lt;a href=""&amp;gt;LOW PRICE&amp;lt;/a&amp;gt;&amp;lt;/option&amp;gt;' . "\n";
  echo '            &amp;lt;option&amp;gt;&amp;lt;a href=""&amp;gt;HIGH PRICE&amp;lt;/a&amp;gt;&amp;lt;/option&amp;gt;' . "\n";
  echo '            &amp;lt;option&amp;gt;&amp;lt;a href=""&amp;gt;DISCOUNT&amp;lt;/a&amp;gt;&amp;lt;/option&amp;gt;' . "\n";
  echo '          &amp;lt;/select&amp;gt;' . "\n";
  echo '        &amp;lt;/form&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_items_count"&amp;gt;' . "\n";
  echo '        ' . $biq_amazon_items_per_page . ' of ' . $biq_amazon_product_list_count . ' SHOES' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_items_ppage"&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_items_ppage" method="post" action=""&amp;gt;Items per Page &amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_items_ppage" name="amazon_items_ppage" value="9" /&amp;gt;&amp;lt;/a&amp;gt; | &amp;lt;/form&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_items_ppage" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_items_ppage" name="amazon_items_ppage" value="18" /&amp;gt;&amp;lt;/a&amp;gt; | &amp;lt;/form&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_items_ppage" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_items_ppage" name="amazon_items_ppage" value="27" /&amp;gt;&amp;lt;/a&amp;gt; | &amp;lt;/form&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '    &amp;lt;/div&amp;gt;' . "\n";
  $biq_amazon_page_count = intval($biq_amazon_product_list_count / $biq_amazon_items_per_page);
  if ( ($biq_amazon_page_count * $biq_amazon_items_per_page) &amp;lt; $biq_amazon_product_list_count )
    $biq_amazon_page_count++;
  if ( isset($_POST['biq_amazon_item_list_page_last']) )
    $biq_amazon_item_list_page = $biq_amazon_page_count;
  $biq_item_counter = $biq_amazon_items_per_page * ($biq_amazon_item_list_page - 1) + 1;
  $biq_amazon_product_list_page_rest = $biq_amazon_product_list_count % $biq_amazon_items_per_page;
  $biq_amazon_page_row_count = $biq_amazon_items_per_page / 3;
  for ( $index = 0; (($index &amp;lt; $biq_amazon_page_row_count)); $index++)
  {
    echo '  &amp;lt;div id="amazon_item_row"&amp;gt;' . "\n";
    for ( $i = 0; (($i &amp;lt; 3) AND ( ($biq_item_counter &amp;lt;= $biq_amazon_product_list_count) )); $i++)
    {
      echo '    &amp;lt;div id="amazon_item_field"&amp;gt;' . "\n";
      echo '      &amp;lt;div id="amazon_item_img"&amp;gt;' . "\n";
      echo '        &amp;lt;a href="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;detail_page_url . '" title="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;title . '" target="_blank"&amp;gt;';
      echo '&amp;lt;img src="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;medium_image_url . '" alt="' . htmlentities($biq_amazon_product_list[$biq_item_counter]-&amp;gt;prod_desc) . '" /&amp;gt;';
      echo '&amp;lt;/a&amp;gt;' . "\n";
      echo '      &amp;lt;/div&amp;gt;' . "\n";
//      echo '      &amp;lt;div class="item_seperator"&amp;gt;&amp;lt;/div&amp;gt;' . "\n";
      echo '      &amp;lt;div id="amazon_item_description"&amp;gt;' . "\n";
      echo '        &amp;lt;a href="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;detail_page_url . '" title="' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;title . '" target="_blank"&amp;gt;' . $biq_amazon_product_list[$biq_item_counter]-&amp;gt;title . '&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;' . "\n";
      echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;brand . '&amp;lt;br /&amp;gt;' . "\n";
      if ( ($biq_amazon_product_list[$biq_item_counter]-&amp;gt;pct_off != NULL) AND ($biq_amazon_product_list[$biq_item_counter]-&amp;gt;pct_off != 0))
      {
        echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;formatted_price . '&amp;lt;br /&amp;gt;' . "\n";
        echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;display_price . ' (' . ($biq_amazon_product_list[$biq_item_counter]-&amp;gt;pct_off * 100) . '% off)' . "\n";
      }
      else
      {
        echo $biq_amazon_product_list[$biq_item_counter]-&amp;gt;display_price . '&amp;lt;br /&amp;gt;' . "\n";
      }
      echo '      &amp;lt;/div&amp;gt;' . "\n";
      echo '    &amp;lt;/div&amp;gt;' . "\n";
      $biq_item_counter++;
    }
    if ( $index &amp;lt; ($biq_amazon_page_row_count - 1))
      echo '    &amp;lt;div class="seperator"&amp;gt;&amp;lt;/div&amp;gt;' . "\n";
    echo '  &amp;lt;/div&amp;gt;' . "\n";
  }
  echo '    &amp;lt;div id="amazon_item_list_footer"&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_item_list_footer_link"&amp;gt;' . "\n";
  echo '        &amp;lt;a href="#top"&amp;gt;Back To Top&amp;lt;/a&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '      &amp;lt;div id="amazon_item_list_footer_nav"&amp;gt;' . "\n";
  echo '        &amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page_first" name="biq_amazon_item_list_page_first" value="" /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/form&amp;gt;' . "\n";
  if ( $biq_amazon_item_list_page &amp;gt; 10 )
    $biq_list_page_start = $biq_amazon_item_list_page - 5;
  else
    $biq_list_page_start = 1;
  for ( $i=$biq_list_page_start; (($i &amp;lt;= $biq_amazon_page_count) AND ($i &amp;lt;= ($biq_list_page_start + 10))); $i++ )
  {
    if ( $i == $biq_amazon_item_list_page )
      echo '&amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page active" name="biq_amazon_item_list_page" value="' . $i . '" /&amp;gt;&amp;lt;/a&amp;gt;  |  &amp;lt;/form&amp;gt;' . "\n";
    else
      echo '&amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page nonactive" name="biq_amazon_item_list_page" value="' . $i . '" /&amp;gt;&amp;lt;/a&amp;gt;  |  &amp;lt;/form&amp;gt;' . "\n";
  }
  echo '        &amp;lt;form class="form_item_list_page" method="post" action=""&amp;gt;&amp;lt;a href=""&amp;gt;&amp;lt;input type="submit" class="input_item_list_page_last" name="biq_amazon_item_list_page_last" value="" /&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;/form&amp;gt;' . "\n";
  echo '      &amp;lt;/div&amp;gt;' . "\n";
  echo '    &amp;lt;/div&amp;gt;' . "\n";
  echo '	&amp;lt;/div&amp;gt;' . "\n";
}
else
{
  echo '  &amp;lt;p&amp;gt;' . __('Sorry, no products available.', 'biq') . '&amp;lt;/p&amp;gt;' . "\n";
}
echo '	&amp;lt;/div&amp;gt;' . "\n\n";
get_sidebar();
get_footer();
?&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:41:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:9/1279654884000000</guid>
      <description>&lt;p&gt;
Added. I also added the post_type to the generic filter.
&lt;/p&gt;
&lt;p&gt;
Even without your explanation above, in the 3.0 cycle we added quite a few of the generic filters because they are useful. So, the generic one should remain here for consistency.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:39:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:3/1279654798000000</guid>
      <description>&lt;p&gt;
each text can be taken - for example:
&lt;/p&gt;
&lt;p&gt;
otto otto rüstung alf alf
&lt;/p&gt;
&lt;p&gt;
will be cut to:
&lt;/p&gt;
&lt;p&gt;
otto otto
&lt;/p&gt;
&lt;p&gt;
character encoding is utf-8.
&lt;/p&gt;
&lt;p&gt;
you can test under:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://wp-theme-t1.it-gnoth.de"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp-theme-t1.it-gnoth.de&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
there is an admin user:
&lt;/p&gt;
&lt;p&gt;
adminwptrack
paswd: wptrack
&lt;/p&gt;
&lt;p&gt;
please let me know when you have finished testing, so I can remove the user.
&lt;/p&gt;
&lt;p&gt;
with this admin user you will have this reported case.
&lt;/p&gt;
&lt;p&gt;
strange is, that with an user as editor it is working correct:
&lt;/p&gt;
&lt;p&gt;
user: wptrack1
paswd: wptrack
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:39:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365#comment:1/1279654796000000</guid>
      <description>&lt;p&gt;
That would definitely create a hole, but you bring up an interesting point. I'd think we'd want to want the settings API leveraged where possible, including say theme options pages that may only be governed by edit_themes or edit_theme_options for cap checks.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>14135.3.diff attached to Ticket #14135</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:37:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14135/14135.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14135/14135.3.diff/1279654674000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:36:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:3/1279654598000000</guid>
      <description>&lt;p&gt;
Also,
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.google.com/trends?q=&amp;#34;e-mail&amp;#34;,+email"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Google Trends&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.thefictiondesk.com/blog/spelling-email-vs-e-mail/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;This blog post&lt;/a&gt; says that the &lt;em&gt;OED&lt;/em&gt; allows "email," and who can argue against the &lt;em&gt;OED&lt;/em&gt;?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:25:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:2/1279653947000000</guid>
      <description>&lt;p&gt;
The AP stylebook is probably being too conservative, if that's what it recommends.  My observation has been that tech-savvy people overwhelmingly use "email" instead of "e-mail," and to confirm it, just compare the number search results for "email" against "e-mail."  Or compare the following searches:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;'site:[URL of a site you respect] "e-mail"&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
against
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;'site:[URL of a site you respect] "email"&lt;/code&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:25:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366#comment:1/1279653921000000</guid>
      <description>&lt;p&gt;
The AP only went from "Web site" to "website" this year. Many assumed they would also drop the hyphen but they didn't, at least this round.
&lt;/p&gt;
&lt;p&gt;
This might be overly pedantic, but I think I'd prefer sans hyphen and I think most technology companies/sites/blogs would agree. It's more progressive and it is certainly the direction it is gravitating to. That said, if we do have a proper spelling buried in the canon somewhere, I think Jane would know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>email.diff attached to Ticket #14366</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:19:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14366/email.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14366/email.diff/1279653559000000</guid>
      <description>&lt;p&gt;
Replace email with e-mail
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14366 (Standardize e-mail, email text) created</title>
      
        <dc:creator>niallkennedy</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:19:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14366</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14366/1279653542000000</guid>
      <description>&lt;p&gt;
WordPress uses "e-mail" and "email" pretty interchangeably for site text, comments, and mail messages. In some cases both forms of the electronic-mail term are used on the same error message!
&lt;/p&gt;
&lt;p&gt;
This patch replaces all instances of "email" in WordPress text with "e-mail" instead. The electronic-mail abbreviation of "e-mail" is the current &lt;a class="ext-link" href="http://www.apstylebook.com/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;AP Stylebook&lt;/a&gt; recommendation. Electronic-mail translates well.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:17:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:5/1279653451000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:4/1279653410000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Please post a snippet of code that reproduces this on any install.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13946 (register new user - multi site feature - user not registered for right blog) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:16:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13946#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13946#comment:2/1279653389000000</guid>
      <description>&lt;p&gt;
thanks for the hint - I still would like to keep this request for the future releases or wordpress.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:8/1279653360000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://core.trac.wordpress.org/browser/branches/2.9/wp-admin/includes/post.php#L853"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://core.trac.wordpress.org/browser/branches/2.9/wp-admin/includes/post.php#L853&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It used to be edit_posts_per_page. We changed it in wp-admin/includes, but didn't change this instance. Really, both spots should have both filters, generic (old) followed by specific (new). Unless I'm missing something -- does that make sense?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:14:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:3/1279653261000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14135 (edit_posts_per_page) updated</title>
      
        <dc:creator>wpmuguru</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:10:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14135#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14135#comment:7/1279653029000000</guid>
      <description>&lt;p&gt;
It was added in 3.0, so it's only covering backward compatibility for 33 days. Anyone using it will also have to use the other filter as well or the page count is off.
&lt;/p&gt;
&lt;p&gt;
Do you want me to redo the patch &amp;amp; put the generic one back and add it to includes/post.php?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10710 (parse_request() of WP should set empty query variables when appropriate) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Tue, 20 Jul 2010 19:00:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10710#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10710#comment:7/1279652455000000</guid>
      <description>&lt;p&gt;
Another reason for this is that when endpoint rewrite rules are generated, they explicitly allow for empty endpoint values (see line 1289ff of &lt;code&gt;wp-includes/rewrite.php&lt;/code&gt;).
&lt;/p&gt;
&lt;p&gt;
So WP rewrite is writing checks that WP query can't cash.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14365 (Admin custom option screen not saved unless user manage_options capability) created</title>
      
        <dc:creator>markauk</dc:creator>

      <pubDate>Tue, 20 Jul 2010 18:54:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14365</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14365/1279652042000000</guid>
      <description>&lt;p&gt;
I have a custom options screen. The menu and sub-menu pages for that screen are set to show only if a user has a custom capability ('be_super_editor') in this case.
&lt;/p&gt;
&lt;p&gt;
The options screen shows or not as expected if a user has or does not have the 'be_super_editor' capability.
&lt;/p&gt;
&lt;p&gt;
However, the options cannot be updated unless the user has 'manage_options' capability as well. This seems to be wrong for two reasons:-
&lt;/p&gt;
&lt;p&gt;
(1) if a capability allows an options screen to be accessed, it is reasonable to assume that the user should be able to make changes to that screen.
&lt;/p&gt;
&lt;p&gt;
(2) giving these users 'manage_options' capability is not a good idea as that allows them to do other things that they shouldn't be able to do (e.g. access wp-admin/options.php directly).
&lt;/p&gt;
&lt;p&gt;
Changing line 30 of wp-admin/options.php from:-
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !current_user_can('manage_options') )
&lt;/pre&gt;&lt;p&gt;
to:-
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( !current_user_can('manage_options') &amp;amp;&amp;amp; 'update' != $action )
&lt;/pre&gt;&lt;p&gt;
fixes the problem, though I don't know enough about the inner workings of WP security to say if this creates any further security/permissions issues.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 20 Jul 2010 18:48:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:5/1279651725000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14348#comment:4" title="Comment 4"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I can easily picture a plugin overriding headers after an output buffer gets started or something similar. The patch exits too early.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I thought the same thing, but I was wrong. The exit()ing is not part of the patch, but already in the code. Also, there is a filter, called 'wp_headers' that a plugin can hook into.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11010 (adapt to https use) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 17:30:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11010#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11010#comment:10/1279647058000000</guid>
      <description>&lt;p&gt;
I am using Internet Explorer 8, which issues warning for mixing HTTP and HTTPS content. However, it does not issue any warning to my blog and the links generated by WordPress do start with &lt;a class="ext-link" href="https://"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I guess it is a theme issue rather than core issue.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11010 (adapt to https use) updated</title>
      
        <dc:creator>brantgurga</dc:creator>

      <pubDate>Tue, 20 Jul 2010 17:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11010#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11010#comment:9/1279646899000000</guid>
      <description>&lt;p&gt;
This is still an issue as far as I can tell. Make sure you aren't letting your browser accept http content on a site accessed by https. That's where the issue is. Wordpress hardcodes to using the http version instead of switching based on how the site is accessed. As a result, you end up with an https page with http content. This allows the http content (if you allow it) to cross that security boundary. This is still happening in 3.0 on my installation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Tue, 20 Jul 2010 17:18:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:4/1279646284000000</guid>
      <description>&lt;p&gt;
I can easily picture a plugin overriding headers after an output buffer gets started or something similar. The patch exits too early.
&lt;/p&gt;
&lt;p&gt;
I suspect anything short of output buffering, running the full WP, and discarding the output, will introduce potential issues. Alternatively we could close as wontfix or worksforme, since that would be what apache does already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12974 (Add support to get_archive_template() for custom content types) updated</title>
      
        <dc:creator>epicalex</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:58:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12974#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12974#comment:16/1279645111000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14360 (Smilies on SSL) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:53:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14360#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14360#comment:1/1279644817000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A simple switch from get_option('site_url') to site_url() will handle that.
&lt;/p&gt;
&lt;p&gt;
And really, the whole thing should instead use includes_url() and then pass that result to the filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10976 (Add before_content and after_content to widget options) reopened</title>
      
        <dc:creator>gordonbrander</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:33:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10976#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10976#comment:8/1279643625000000</guid>
      <description>&lt;p&gt;
Apologies, should have re-opened with last comments.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #11010 (adapt to https use) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:21:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11010#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11010#comment:8/1279642872000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
My WordPress 3.0 with the default Twenty Ten theme works well with both HTTP and HTTPS. Is this issue still valid?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14355 (is_front_page returns false - if used after the loop starts) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Tue, 20 Jul 2010 16:20:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14355#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14355#comment:2/1279642821000000</guid>
      <description>&lt;p&gt;
sorry, it was written wrong - it returns outside true and inside false. and I am using query_posts.
&lt;/p&gt;
&lt;p&gt;
Problem is, that I am showing on my front page an excerpt and I have a customized excerpt function - in that customized excerpt function I am testing if it is front page or not and return different content. (&lt;a class="ext-link" href="http://wp-theme-t1.it-gnoth.de"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp-theme-t1.it-gnoth.de&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
if query posts is teh reason - it should be possible to show different posts on the front page and still the function returns true.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14069 (do_robots() ignores charset setting) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 15:49:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14069#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14069#comment:5/1279640966000000</guid>
      <description>&lt;p&gt;
More important then the actual encoding of the file (okay, if you want that any robot reads it, make it ASCII - period.) is the encoding of the relative URLs used inside the file.
&lt;/p&gt;
&lt;p&gt;
Those should be properly urlencoded.
&lt;/p&gt;
&lt;p&gt;
I made a write-up here: &lt;a class="ext-link" href="http://hakre.wordpress.com/2010/07/20/encoding-of-the-robots-txt-file/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Encoding of the robots.txt file&lt;/a&gt; and the resource ocen90 linked has this useful information as well:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
[M]ake sure the bots can properly read the file and directory path names, regardless of whether it adheres to ASCII standards. When writing directives that include characters unavailable in ASCII, you can "escape" (aka percent-encode) them, which enables the bot to read them.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think this is mostly important for webmasters who really want to care about these issues. My suggestion is to deliver the file in US-ASCII. It then can even mislabled as UTF-8 or Latin-1 as w/o running into any problems as long as the rules created by other parts of the webapplication are correctly urlencoded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14364 ("Now" button for current date in update post published date and time) created</title>
      
        <dc:creator>dovydas</dc:creator>

      <pubDate>Tue, 20 Jul 2010 15:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14364</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14364/1279638960000000</guid>
      <description>&lt;p&gt;
It would be very convenient to have a button called "Now" in "Edit post" window in "Published on: date @ time" section.
&lt;/p&gt;
&lt;p&gt;
Google likes to know when old posts gets updated. So it is recommended to update post "published on:&amp;#34; date when post content is updated. When a user wants to update publishing time and date of a post, he must click &amp;#34;Edit", then manually enter year, month, day, hour and minute of current date and time and then click "Update post". It is quite slow and dull process but it could be automated easily with a new button.
&lt;/p&gt;
&lt;p&gt;
It would be very nice to have a button called "Now" which should automatically fill in year, month, day, hour and minute fields with values of current date and time.
&lt;/p&gt;
&lt;p&gt;
Whenever a user updates post publishing date and time, the date and time that he/she usually enters is current date and time. The "Now" button would be a big time saver for users who update their posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14363 (Atom feed is broken when WordPress is served as application/xhtml+xml) created</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 14:57:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14363</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14363/1279637872000000</guid>
      <description>&lt;p&gt;
Atom feed is broken when WordPress is served as application/xhtml+xml because of the difference in html_type_rss().
&lt;/p&gt;
&lt;p&gt;
The patch attached also deprecates the_excerpt_rss() with a new function called 'the_excerpt_feed'.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14362 (Internal Pingbacks, only once in post) created</title>
      
        <dc:creator>iGraf</dc:creator>

      <pubDate>Tue, 20 Jul 2010 14:43:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14362</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14362/1279637003000000</guid>
      <description>&lt;p&gt;
I use pingbacks to external and internal websites. External websites to ping correctly. Internal pingbacks works only on link!
&lt;/p&gt;
&lt;p&gt;
Example in post: five links to internal posts (own blog)
&lt;/p&gt;
&lt;p&gt;
when i get publishing, only one pingback is in the commentlist. After edit again (without correction), then the next pingback is published on comments.
&lt;/p&gt;
&lt;p&gt;
etc.
&lt;/p&gt;
&lt;p&gt;
Can wordpress publish only ONE internal pingback?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #6109 (Add class attribute for next_posts_link and previous_posts_link) updated</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:50:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/6109#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/6109#comment:6/1279633825000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>link-template.patch attached to Ticket #6109</title>
      
        <dc:creator>sorich87</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:48:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/6109/link-template.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/6109/link-template.patch/1279633714000000</guid>
      <description>&lt;p&gt;
here is a patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>14361.patch attached to Ticket #14361</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:46:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14361/14361.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14361/14361.patch/1279633588000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14361 (the_title does not escape HTML special characters properly) created</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 13:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14361</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14361/1279633552000000</guid>
      <description>&lt;p&gt;
The 'the_title' function does not escape HTML special characters properly, causing invalid HTML.
&lt;/p&gt;
&lt;p&gt;
Test case: "&amp;lt;test&amp;gt;This is a test&amp;lt;/test&amp;gt;"
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #9993 (Rss and atom feeds are dropping some characters) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 12:51:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9993#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9993#comment:14/1279630309000000</guid>
      <description>&lt;p&gt;
Patch updated for 3.1.
&lt;/p&gt;
&lt;p&gt;
"&amp;amp; &amp;gt; test &amp;lt;" now works even without the patch, but "&amp;lt;test&amp;gt;This is a test&amp;lt;/test&amp;gt;" not.
&lt;/p&gt;
&lt;p&gt;
I still think there is no reason for having 'strip_tags' in feed title as they are escaped already.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>9993.patch attached to Ticket #9993</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 12:49:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/9993/9993.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/9993/9993.patch/1279630178000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #9515 (feed_link functions should add a slash before the query when permalink ...) updated</title>
      
        <dc:creator>peaceablewhale</dc:creator>

      <pubDate>Tue, 20 Jul 2010 12:27:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9515#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9515#comment:39/1279628851000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14328 (next page doesn't work when using a template page for front page) reopened</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Tue, 20 Jul 2010 11:16:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14328#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14328#comment:4/1279624615000000</guid>
      <description>&lt;p&gt;
It seems to me that that is inconsistant.
&lt;/p&gt;
&lt;p&gt;
Lets say I have a page template that I set as the front page and it contains The LOOP, and it does 'X' to every post. If I set the 'Blog pages show at most' to 10, then 10 posts will show "X'. If I change the 'Blog pages show at most' to 5, then I will see "X' on the first 5 posts, but when you go to the next page "X" will not happen. This is inconsistent.
&lt;/p&gt;
&lt;p&gt;
Even more the point, if I have two pages in my site and used the same template for both and set one as the front page, what is seen on both pages should be the same. If it is different then - in my mind - there is a bug.
&lt;/p&gt;
&lt;p&gt;
If you allow the front page to be set to a page with a template, then on pagination, you still have use that template.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14328#comment:3" title="Comment 3"&gt;scribu&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's the correct behaviour: the 'Page of Posts' template is only loaded for the front page, not for subsequent paged archives.
&lt;/p&gt;
&lt;p&gt;
You should use home.php if you want that behaviour.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #14360 (Smilies on SSL) created</title>
      
        <dc:creator>tech163</dc:creator>

      <pubDate>Tue, 20 Jul 2010 10:55:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14360</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14360/1279623333000000</guid>
      <description>&lt;p&gt;
When I have smiles in comments, they are not served in SSL, even if I enabled FORCE_SSL_ADMIN in wp-config.
&lt;/p&gt;
&lt;p&gt;
I think this can be fixed by changing:
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$siteurl = get_option( 'siteurl' );
&lt;/pre&gt;&lt;p&gt;
to
&lt;/p&gt;
&lt;pre class="wiki"&gt;	$siteurl = get_option( 'siteurl' );
	if($_SERVER['HTTPS'] == 'on') {
		if(substr($siteurl, 0, 5) == 'http:') {
			$siturl = 'https:' . substr($siteurl, 5);
		}
	}
&lt;/pre&gt;&lt;p&gt;
on line 1427 of /wp-includes/formatting.php.
&lt;/p&gt;
&lt;p&gt;
Can someone else verify that this works?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14357 (get_page_by_path() and get_page_by_title() lack caching) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Tue, 20 Jul 2010 10:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14357#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14357#comment:2/1279620810000000</guid>
      <description>&lt;p&gt;
Similar: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/13170" title="#13170: enhancement: get_term_by() should check object cache (closed: worksforme)"&gt;#13170&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14359 (Support loading mu_plugins from subdirectories) updated</title>
      
        <dc:creator>nacin</dc:creator>

      <pubDate>Tue, 20 Jul 2010 09:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14359#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14359#comment:1/1279618551000000</guid>
      <description>&lt;p&gt;
The issue I see is that many use it like so: a directory of scripts, with files at the root including what must be loaded that happens to be below the top level. This is how any multi-file mu plugin must work currently.
&lt;/p&gt;
&lt;p&gt;
Changing that without it being an opt-in would obviously break quite a bit.
&lt;/p&gt;
&lt;p&gt;
The ability for files in mu-plugins to be visible in the admin is quite new. I wrote the code for it for 3.0; the functionality itself was introduced in 2.8 in core, and in MU years before that. Enabling it to scan plugin headers is a complete afterthought in the general sense.
&lt;/p&gt;
&lt;p&gt;
My point is, even if we scanned subdirectories, files not containing headers would need to be moved down an additional directory anyway (no different from moving a single file up a directory, as it is now) or we would need to store valid plugins in the DB, something we've never done for these -- mu-plugins are completely stateless. Not only do we make headers optional, but they were useless until 3.0.
&lt;/p&gt;
&lt;p&gt;
Simple solution I see is that you simply move up yahoo_example.php to be on the same level as yahoo_example and make sure the php file includes what it needs out of the folder. More complex solution, well, I'm not sure -- it involves a significant rework of a section that, I think, is best kept light and simple so plugins, networks, and Yahoo can build whatever their heart desires on top of it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>13326.1.diff attached to Ticket #13326</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Tue, 20 Jul 2010 09:32:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13326/13326.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13326/13326.1.diff/1279618343000000</guid>
      <description>&lt;p&gt;
Adds $is_iphone to the global declaration
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13326 (WordPress does not function on iPad in View (non HTML Mode)) updated</title>
      
        <dc:creator>simonwheatley</dc:creator>

      <pubDate>Tue, 20 Jul 2010 09:31:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13326#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13326#comment:12/1279618298000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13326#comment:10" title="Comment 10"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13326#comment:9" title="Comment 9"&gt;simonwheatley&lt;/a&gt;:
&lt;/p&gt;
&lt;p&gt;
Unfortunately that won't fix this issue completely. When editing a post we output the content slightly differently depending on whether the Visual or the HTML editor is loaded first. We should handle this in the back-end/PHP as the TinyMCE team suggests.
&lt;/p&gt;
&lt;p&gt;
Patching this should be quite trivial, will add a proposed patch a bit later.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Fair enough. I think the patch needs $is_iphone to be global declaration at the top of the function... I'll post a patch shortly. Otherwise I've tested this on an iPad and it works, thanks!
&lt;/p&gt;
&lt;p&gt;
Any chance we can get a nice small change like this into 3.0.1?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14352 (Fatal error message when trying to access my homepage and/or login to ...) closed</title>
      
        <dc:creator>mrmist</dc:creator>

      <pubDate>Tue, 20 Jul 2010 07:56:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14352#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14352#comment:1/1279612615000000</guid>
      <description>worksforme: &lt;p&gt;
You should really use the forums to diagnose support issues, trac is for reporting bugs.  Check your WordPress directories for deleted files and re-upload wp-includes from zip file if necessary.
&lt;/p&gt;
&lt;p&gt;
If it still doesn't work, start a topic on &lt;a class="ext-link" href="http://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wordpress.org/support/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14359 (Support loading mu_plugins from subdirectories) created</title>
      
        <dc:creator>benward</dc:creator>

      <pubDate>Tue, 20 Jul 2010 05:42:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14359</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14359/1279604564000000</guid>
      <description>&lt;p&gt;
Aim: Enhance the load_mu_plugins mechanism to support loading plugins from inside subdirectories in &lt;code&gt;WPMU_PLUGIN_DIR&lt;/code&gt;, in both initialization and plugins administration interface.
&lt;/p&gt;
&lt;p&gt;
Why: We (Yahoo, hello) are making substantial use of the &lt;code&gt;mu-plugins&lt;/code&gt; mechanism to extend WordPress functionality at a deployment level, adding core product/instance functionality to a as part of the code deployment, rather than features that are enabled through the GUI. (e.g. Authentication, custom input filtering, integration with low level options configuration systems we have.) Each such enhancement is modular, and some wrap additional libraries, so all of our ‘must-use’ plugins are packaged in separate directories. WordPress, as of now, does not load must-use plugins from subdirectories.
&lt;/p&gt;
&lt;p&gt;
Thus, we have one root must-use plugin that recursively loads plugins from subdirectories. This has the disadvantage that those sub-directory plugins then aren't listed in the Plugins UI, and it's all a bit of a hack.
&lt;/p&gt;
&lt;p&gt;
I'm working on a patch to improve the mu-plugin loading to support single-subdirectory loading, _similar_ to regular plugins. The components of this are:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Patch &lt;code&gt;wp-admin/includes/plugin.php:get_plugins()&lt;/code&gt; to accept &lt;code&gt;$plugin_root&lt;/code&gt; as a parameter—either &lt;code&gt;WP_PLUGIN_DIR&lt;/code&gt; or &lt;code&gt;WPMU_PLUGIN_DIR&lt;/code&gt;—and build a cache key using that path rather than fixed &lt;code&gt;plugins&lt;/code&gt; key.
&lt;/li&gt;&lt;li&gt;Patch &lt;code&gt;wp-admin/includes/plugin.php:get_mu_plugins()&lt;/code&gt; to call &lt;code&gt;get_plugins()&lt;/code&gt; specifying &lt;code&gt;WPMU_PLUGIN_DIR&lt;/code&gt; as the &lt;code&gt;$plugin_root&lt;/code&gt;. This loads subdirectory plugins with details into the admin UI.
&lt;/li&gt;&lt;li&gt;From &lt;code&gt;wp-admin/includes/plugin.php:get_plugins()&lt;/code&gt; refactor the recursive directory listing code into a non-admin &lt;code&gt;get_plugins()&lt;/code&gt; method in &lt;code&gt;wp-includes/load.php&lt;/code&gt;, since it is needed to load the mu-plugins.
&lt;/li&gt;&lt;li&gt;Patch &lt;code&gt;load.php:wp_get_mu_plugins()&lt;/code&gt; to grab plugin files from &lt;code&gt;WPMU_PLUGINS_DIR&lt;/code&gt; and subdirectories, using refactoring file-listing function from \&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/3" title="#3: defect (bug): Certain characters in commenter name/email/URI fields are incorrectly ... (closed: fixed)"&gt;#3&lt;/a&gt;.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
In writing this I quickly hit on why WordPress treats mu-plugins so simply already: Regular plugins are examined for metadata to check their validity, regardless of filename, and then active plugins are stored as an option and cached. Since must-use plugins are not stored in an option, and since caching is not a default feature of WordPress, mu-plugin loading cannot require calling &lt;code&gt;/wp-admin/includes/plugin.php:get_plugin_data()&lt;/code&gt; on every load. As such, I'm currently working with a new, but I think more reasonable structure limitation for mu-plugins: That the main file for a subdirectory-based mu-plugin must be named the same as its containing directory: That is, the &lt;code&gt;./yahoo_example&lt;/code&gt; plugin must be initialized by &lt;code&gt;./yahoo_example/yahoo_example.php&lt;/code&gt;. This pattern seems to match how many plugins already package themselves anyway.
&lt;/p&gt;
&lt;p&gt;
That said, I am interested to hear other suggestions on how to load from mu_plugins without introducing a performance hit.
&lt;/p&gt;
&lt;p&gt;
I'm posting this bug to describe my fix. I'm testing the patch at present and will attach it for review/comment after a couple of immediate kinks are ironed out.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 20 Jul 2010 05:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:3/1279603878000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Oops, seemed to have lost my mind sometime a few minutes ago. I'm just going to be other there if you need me. No? Okay then.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Tue, 20 Jul 2010 05:22:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:2/1279603367000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I hope by, "Thanks for reporting" what you mean to say is "that in no way should this patch ever be applied to WordPress and thanks for duplicating something hakre has already bought attention and I believe has a patch for what is appropriate to fixing the issue you have."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14069 (do_robots() ignores charset setting) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:15:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14069#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14069#comment:4/1279595743000000</guid>
      <description>&lt;p&gt;
I'm not the character queen either. Historically the safest route should be US-ASCII (or 7bit ascii). If robots.txt would support the encoding like we have it with URLs, then the robots.txt file can be 100% US-ASCII endocded, and the content it transport can be an urlencoded representation of any other character set then (which would not make much sense, becuase how should a robot determine a charset then?).
&lt;/p&gt;
&lt;p&gt;
To make a longer story short, the charset meta-information as provided by the headers must match with the body encoding of the robots.txt file server response. The suggestion from that bing website can be useful but should not matter here. In the end a blogs admin decides which charset a blog uses. That's the charset robots.txt is encoded in as well. If it's incompatible with robots, then it's the admins choice.
&lt;/p&gt;
&lt;p&gt;
Blogs should be either US-ASCII or UTF-8 btw. You can (but must not) use latin-1 for historical or performance reasons. This is how I would formulate a best practice suggestion.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/14201" title="#14201: defect (bug): Canonical redirect kicks in in case of category/tag base containing ... (new)"&gt;#14201&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14348 (If it's a HEAD request, stop after the head!) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:14:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14348#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14348#comment:1/1279595647000000</guid>
      <description>&lt;p&gt;
Thanks for reporting.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:11:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:2/1279595461000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:10:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:1/1279595448000000</guid>
      <description>&lt;p&gt;
Please provide a smaple text, the exact steps to reproduce and name the encoding setting you have on your blog.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11373 (get_page_by_path() enhancements) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:08:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11373#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11373#comment:9/1279595317000000</guid>
      <description>&lt;p&gt;
See also: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14357" title="#14357: enhancement: get_page_by_path() and get_page_by_title() lack caching (closed: duplicate)"&gt;#14357&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14292 (loop in tags url to same url) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:06:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14292#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14292#comment:25/1279595209000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7095" title="#7095: defect (bug): Japanese Tag Slugs (closed: fixed)"&gt;#7095&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14313 (TAG permalink with chinese (Japanese) character have issue) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 03:06:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14313#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14313#comment:23/1279595194000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7095" title="#7095: defect (bug): Japanese Tag Slugs (closed: fixed)"&gt;#7095&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14062 (some Location headers are using relative url's) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 02:56:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14062#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14062#comment:5/1279594599000000</guid>
      <description>&lt;p&gt;
One way would be to check each call of &lt;code&gt;wp_redirect()&lt;/code&gt;. Another idea I have is to integreate a warning inside my better redirects plugin that does throw warnings if WP_DEBUG is enabled. Can help with plugin development as well.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13955 (Updated / corrected List of HTTP status codes) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 02:54:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13955#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13955#comment:6/1279594449000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13955#comment:3" title="Comment 3"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13955#comment:2" title="Comment 2"&gt;nacin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Why does IANA keep references to obsoleted tracks on their list?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Because those header codes were once defined and need to be blocked in the registry. So a code in the registry does not mean that it can be used only that it once had a meaning - even if for only a short period of time. That's comparable to the entries that are of no use (blocked).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13940 (get_status_header_desc() returns HTTP 1.1 status codes for HTTP 1.0) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Tue, 20 Jul 2010 02:50:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13940#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13940#comment:17/1279594206000000</guid>
      <description>&lt;p&gt;
To rephrase what I wrote in response to Mark, emphasis by me:
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13940#comment:5" title="Comment 5"&gt;hakre&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/13940#comment:3" title="Comment 3"&gt;markjaquith&lt;/a&gt;:
You must not return wrong status-&lt;strong&gt;codes&lt;/strong&gt; (which would invalidate the full phrase) in HTTP 1.0 nor in HTTP 1.1.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As you can see I'm writing about &lt;strong&gt;codes, &lt;em&gt;not&lt;/em&gt; phrases&lt;/strong&gt;. This is the same for the title of this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13326 (WordPress does not function on iPad in View (non HTML Mode)) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:24:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13326#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13326#comment:11/1279589086000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>13326.patch attached to Ticket #13326</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13326/13326.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13326/13326.patch/1279589028000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>14358.patch attached to Ticket #14358</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:09:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/14358/14358.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/14358/14358.patch/1279588150000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14358 (Filter meta widget's "Powered By" text) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Tue, 20 Jul 2010 01:08:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14358</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14358/1279588130000000</guid>
      <description>&lt;p&gt;
For MS installations, site owners may want to change this text. Let's encourage not editing core files.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>