<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #14562 (manage_users_custom_column is both an action and a filter) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 08 Aug 2010 23:39:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14562#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14562#comment:2/1281310756000000</guid>
      <description>&lt;p&gt;
I think we should make ms-users.php use user_row() or at least pass the same parameters in the hook.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14563 (Fail to apply changes to widgets and menu. Fail to apply changes with ...) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 08 Aug 2010 23:33:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14563#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14563#comment:2/1281310402000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
It looks like there's something wrong with ajax requests.
&lt;/p&gt;
&lt;p&gt;
What does &lt;a class="ext-link" href="http://www.dev4press.com/2010/tutorials/general-tutorials/use-firebug-to-track-ajax-requests-and-responses/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Firebug&lt;/a&gt; say?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14564 (Multisite domain mapping.) closed</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 08 Aug 2010 23:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14564#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14564#comment:2/1281310287000000</guid>
      <description>worksforme: &lt;p&gt;
Use the &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wordpress-mu-domain-mapping/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Domain Mapping&lt;/a&gt; plugin.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14565 (After Category Quick Edit Update Parent Category Dropdown) created</title>
      
        <dc:creator>Dempsey</dc:creator>

      <pubDate>Sun, 08 Aug 2010 22:07:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14565</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14565/1281305265000000</guid>
      <description>&lt;p&gt;
On a clean install I went to Posts -&amp;gt; Categories and used Quick Edit to rename 'Uncategorized' to 'Rename-Test' I then went to create a new Category using the form on the left and the Parent drop down still lists 'Uncategorized'.
&lt;/p&gt;
&lt;p&gt;
Should this be updated without have to reload the page?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14564 (Multisite domain mapping.) updated</title>
      
        <dc:creator>sl_bug</dc:creator>

      <pubDate>Sun, 08 Aug 2010 21:49:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14564#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14564#comment:1/1281304197000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14564 (Multisite domain mapping.) created</title>
      
        <dc:creator>sl_bug</dc:creator>

      <pubDate>Sun, 08 Aug 2010 21:49:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14564</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14564/1281304175000000</guid>
      <description>&lt;p&gt;
I want to use different domains on one wordpress installation using multisite function. I installed wordpress and configured multisite to use subdomains. Added subdomain (sub1.example.com) and then i went to 'edit' page. I put domain (newexample.com) instead of sub1.example.com. Everything ok. Site works, but i can't login on this site. Problem in function wp_set_auth_cookie. Constant COOKIE_DOMAIN still pointing on .example.com. I temporary fixed it to extract it from $_SERVER&lt;a class="missing wiki"&gt;HTTP_HOST?&lt;/a&gt;, but could you fix it in next release and add ability to directly add domains instead of only subdomains. Thanks.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Sun, 08 Aug 2010 20:12:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:40/1281298367000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:39" title="Comment 39"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:37" title="Comment 37"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sometimes you will need more than core to develop a complex site - we are not trying to solve 100% of use cases only the more significant ~80%.  The other 20% is where plugins sit in the eco-system so that you can make it your WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Best I'm aware, situations where node2node relationships are desirable include the vast majority of non-trivial/real-life business applications. The keyword here is business: people who pay to get a website that is of any use to them, as opposed to a corporate blog for PR purposes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly.
&lt;/p&gt;
&lt;p&gt;
I wasn't going to continue, but since Denis did... I'd argue that (what in WordPress would be) post-to-post relationships are in the 90th percentile case; certainly not in the 20th percentile.  If we accept the custom post types are WordPress' equivalent of a "relation" (relations are viewed as "tables"&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt;) in the relational model for "large shared data banks" as written about by E. F. Codd in 1970&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt; then this pattern is one of the most fundamental pattern in relational databases that exist.
&lt;/p&gt;
&lt;p&gt;
The "post-to-post" relationship would be implemented simply with a table that allows the creation of a many-to-many connection to store as foreign keys&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5" title="Major updates to default structure, Some minor class/id issues still ..."&gt;[5]&lt;/a&gt; the primary keys&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6" title="Fixed some email things, added whois.
"&gt;[6]&lt;/a&gt; of posts, in our case $post-&amp;gt;ID. This concept is fundamental to every relational database system ever built, not some "&lt;em&gt;edge&lt;/em&gt;" use case.
&lt;/p&gt;
&lt;p&gt;
Because of it's origins WordPress has nailed the blogging pattern and with that pattern has implemented many primary key to foreign key relationships:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;$post-&amp;gt;post_parent TO $post-&amp;gt;ID
&lt;/li&gt;&lt;li&gt;$term_relationships-&amp;gt;object_id TO $post-&amp;gt;ID
&lt;/li&gt;&lt;li&gt;$comment-&amp;gt;comment_post_ID TO $post-&amp;gt;ID
&lt;/li&gt;&lt;li&gt;$postmeta-&amp;gt;post_id TO $post-&amp;gt;ID
&lt;/li&gt;&lt;li&gt;And several more.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Given WordPress implements the blogging pattern so well maybe it's not clear that the missing fundamental component required for implementing generic database-oriented business systems for arbitrary business use-cases is the post-to-post table aka the many-to-many&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/7" title="Fixed whitespace error, cleaned some formatting. Improved grammer on ..."&gt;[7]&lt;/a&gt; table.  Alternately we could build out each new use-case pattern for which people want to use WordPress for much like the blogging use-case pattern was built out but why go that route (aside from it will never happen) when we can simply include the low-level many-to-many functionality and let people build it themselves?
&lt;/p&gt;
&lt;p&gt;
So this is not a stretch nor some obscure need. This is as low a level of fundamental building block as you can get it WordPress and it's the last major one that's missing.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt; &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Relational_model#Relational_model_topics"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Relational_model#Relational_model_topics&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt; &lt;a class="ext-link" href="http://www.seas.upenn.edu/~zives/03f/cis550/codd.pdf"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://www.seas.upenn.edu/~zives/03f/cis550/codd.pdf&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/3" title="*** empty log message ***
"&gt;[3]&lt;/a&gt; &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Relational_model#Examples"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Relational_model#Examples&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/4" title="Some semantic updates
"&gt;[4]&lt;/a&gt; &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Many-to-many_(data_model"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Many-to-many_(data_model&lt;/a&gt;)
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5" title="Major updates to default structure, Some minor class/id issues still ..."&gt;[5]&lt;/a&gt; &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Foreign_key"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Foreign_key&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6" title="Fixed some email things, added whois.
"&gt;[6]&lt;/a&gt; &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Primary_key"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Primary_key&lt;/a&gt;
&lt;/li&gt;&lt;li&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/7" title="Fixed whitespace error, cleaned some formatting. Improved grammer on ..."&gt;[7]&lt;/a&gt; &lt;a class="ext-link" href="http://en.wikipedia.org/wiki/Many-to-many_(data_model"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://en.wikipedia.org/wiki/Many-to-many_(data_model&lt;/a&gt;)
&lt;/li&gt;&lt;/ul&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
One of the more compelling examples Mike gave, IMO, was the one for the law firm. The little I've worked in that field would have had me laugh at the idea of using WP. You &lt;em&gt;can&lt;/em&gt; bend reality to make things fit in taxonomies and meta tables, in order to fit real life situations into an arbitrary schema. But for such a setup you quickly end up ditching WP altogether, in favor of Drupal (barely better) or a php framework.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
LOL! Denis, PLEASE don't tell my client that! :-) :-) :-)  I told them that WordPress would be better than Drupal or a PHP framework and they are paying me by the hour to spend hundreds of hours building on that use-case! (I'm hoping that I'm not proven wrong here.)
&lt;/p&gt;
&lt;p&gt;
FWIW I'm basically building a law firm website plugin that can be used to launch hundreds if not thousands of law firm websites which is the business my client is in; managing websites for larger law firms. My code will be replacing their former custom content management system.
&lt;/p&gt;
&lt;p&gt;
And guess what? I'm developing some potentially really significant functionality I will be launching as plugins where the functionality is targeted at developers and themers not at end users. Said another way, because the company is paying me to build a business system on top of WordPress (a business system which needs robust post-to-post relationships, as almost all business systems built on WordPress will need) I am able to spend lots of time building functionality I can contribute to the community. (You've probably seen my recent helping of people on the wp-hackers list; that knowledge came from being commissioned to delve deep into WordPress and learn it's low-level functionality. Later contributions will be plugins after I can package and document them.)
&lt;/p&gt;
&lt;p&gt;
But this isn't about me and my development; maybe my stuff is all crap; who knows? It's about all the other developers who could be commissioned to build business systems too. And because they would get to focus their time on developing for interesting business use-cases some of them would develop generic tool sets and contribute them back to the community thus growing the use-cases that WordPress can be used for with trivial effort.
&lt;/p&gt;
&lt;p&gt;
But if the only use-case pattern WordPress addresses well is the blogging pattern then the majority of interesting generic toolsets that will be contributed back will continue to be by and large for blogging (I'm not saying WordPress can't currently address those interesting use-cases, it would just be a lot easier if there were a standard way to relate posts to posts.)
&lt;/p&gt;
&lt;p&gt;
There are numerous ways to address this need without requiring the relationships be more complex than a single linking table; I'm just asking for one of them:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Add a &lt;code&gt;wp_post_relationships&lt;/code&gt; table
&lt;/li&gt;&lt;li&gt;Add a "&lt;code&gt;parent_post&lt;/code&gt;" field to &lt;code&gt;wp_postmeta&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Overload &lt;code&gt;wp_term_relationships&lt;/code&gt; by adding a "&lt;code&gt;post_id&lt;/code&gt;" field.
&lt;/li&gt;&lt;li&gt;And I am sure there are other ways to tackle this too.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
FWIW.
&lt;/p&gt;
&lt;p&gt;
-Mike
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14563 (Fail to apply changes to widgets and menu. Fail to apply changes with ...) updated</title>
      
        <dc:creator>LordGordon</dc:creator>

      <pubDate>Sun, 08 Aug 2010 19:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14563#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14563#comment:1/1281295812000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14563 (Fail to apply changes to widgets and menu. Fail to apply changes with ...) created</title>
      
        <dc:creator>LordGordon</dc:creator>

      <pubDate>Sun, 08 Aug 2010 19:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14563</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14563/1281295787000000</guid>
      <description>&lt;p&gt;
I installed a NEW WordPress 3.0.1 (no upgrade) on my hosted domain. I have some problems with menu, widget and quick edit post\page\category\link.
&lt;/p&gt;
&lt;p&gt;
Every time I try to modify widgets (or add things on menu) nothing is saved: I click to save and the waiting icon appears, but never disappear (still remain up). Of course, nothing change on the website.
Same failure when I try to use quick edit on posts (also with quick edit for pages, categoires, links): changes are done only if I open the post editing page, but never change with quick edit.
&lt;/p&gt;
&lt;p&gt;
On the same server I ran wordpress 2.9.1 with no errors.
&lt;/p&gt;
&lt;p&gt;
Freqency: always
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;log in admin panel&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;go to appearance-&amp;gt;widgets&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;try to add, modify or remove widgets&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;click to save&lt;br /&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
OR
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;log in admin panel&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;go to posts&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;select quick edit&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;change the title, or whatever else&lt;br /&gt;
&lt;/li&gt;&lt;li&gt;click to update
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
PHP: 5.2.14 &lt;br /&gt;
MySQL: 5.1.48 &lt;br /&gt;
hosted on Hostgator.com (shared hosting plan)
&lt;/p&gt;
&lt;p&gt;
Theme: Twenty Teen&lt;br /&gt;
(same problem with others themes such as atahualpa, minicard)
&lt;/p&gt;
&lt;p&gt;
Plugins: none (fresh new install)&lt;br /&gt;
(same with actived plugins such as: DBmanager, Login LockDown, Cron-GUI, ...)
&lt;/p&gt;
&lt;p&gt;
Same problem with a newtork install (subdomain based)
&lt;/p&gt;
&lt;p&gt;
Same problem both in 3.0 and 3.0.1 (currently running) with english or italian language installed.
&lt;/p&gt;
&lt;p&gt;
Now I'm running the 3.0.1 network subdomain based with italian language enabled.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14562 (manage_users_custom_column is both an action and a filter) updated</title>
      
        <dc:creator>mikelittle</dc:creator>

      <pubDate>Sun, 08 Aug 2010 16:51:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14562#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14562#comment:1/1281286299000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14562 (manage_users_custom_column is both an action and a filter) created</title>
      
        <dc:creator>mikelittle</dc:creator>

      <pubDate>Sun, 08 Aug 2010 16:51:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14562</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14562/1281286282000000</guid>
      <description>&lt;p&gt;
In wp-admin/includes/template.php function user_row(), filter 'manage_users_custom_column' is called with 3 parameters and is expected to return the contents for the custom column.
&lt;/p&gt;
&lt;p&gt;
However, in wp-admin/ms-users.php, action 'manage_users_custom_column' is called with two parameters and is expected to echo the contents for the custom column.
&lt;/p&gt;
&lt;p&gt;
They both have the same name which is initially confusing, but worse it breaks WordPress.
&lt;/p&gt;
&lt;p&gt;
I tried using two functions
add_filter( 'manage_users_custom_column', 'function1', 10, 3);
and
add_action( 'manage_users_custom_column', 'function2', 10, 2);
&lt;/p&gt;
&lt;p&gt;
But *BOTH* functions are called during the filter processing and *BOTH* functions are called during action processing.
&lt;/p&gt;
&lt;p&gt;
That is, during filter processing, function1 is called with the correct three parameters, then function2 is called with the output of function1 as the first parameter and what should be the first parameter as it's second parameter.
&lt;/p&gt;
&lt;p&gt;
During action processing, function1 is called with the two action parameters (and a warning for the missing third), then function2 is called correctly.
&lt;/p&gt;
&lt;p&gt;
There seem to be two issues here:
1) the action and the filter should not really have the same name. Ideally custom user column functionality in the two places should be brought into line.
&lt;/p&gt;
&lt;p&gt;
2) a registered action should not be called during filter processing and vice versa, but maybe that's a side effect of the names being the same and the behaviour in those circumstances is not defined.
&lt;/p&gt;
&lt;p&gt;
Code to reproduce:
&lt;/p&gt;
&lt;pre class="wiki"&gt;add_filter('manage_users_columns', 'add_users_column');
add_filter('wpmu_users_columns', 'add_users_column');
function add_users_column($column_headers) {
	$column_headers['myextra'] = 'My Extra';
	return $column_headers;
}
add_filter('manage_users_custom_column', 'function1', 10, 3);
function function1($default, $column_name, $user_id) {
	error_log( "function1 called with (default=$default, column_name=$column_name, user_id=$user_id)" );
	if ('myextra' == $column_name) {
		return "function1 called with ($default, $column_name, $user_id)";
	}
	return $default;
}
add_action('manage_users_custom_column', 'function2', 10, 2);
function function2($column_name, $user_id) {
	error_log( "function2 called with (column_name=$column_name, user_id=$user_id)" );
	if ('myextra' == $column_name) {
		echo "(function2 called with $column_name, $user_id)";
	}
}
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>stripslash-passwords.patch attached to Ticket #13655</title>
      
        <dc:creator>johanee</dc:creator>

      <pubDate>Sun, 08 Aug 2010 13:37:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/13655/stripslash-passwords.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/13655/stripslash-passwords.patch/1281274638000000</guid>
      <description>&lt;p&gt;
Fix password handling to correctly stripslash()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #13655 (Login/Install/User Edit should stripslashes() $_POST data) updated</title>
      
        <dc:creator>johanee</dc:creator>

      <pubDate>Sun, 08 Aug 2010 13:36:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13655#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13655#comment:1/1281274561000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Attaching patch to fix this.
&lt;/p&gt;
&lt;p&gt;
All paths for creating / editing users have been tested, including migration of un-stripslashed passwords.
&lt;/p&gt;
&lt;p&gt;
Not directly regarding this issue:
Slashes handling in wp_insert_user, wp_create_user, + callers is rather convoluted (though less so for passwords compared to other fields).
&lt;/p&gt;
&lt;p&gt;
It took more than one read-through of the code to convince myself that user name handling is valid (it all get fixed by a strict sanitize_user() in the end), and I'm still not entirely certain that the user_meta fields could not somehow get it wrong.
&lt;/p&gt;
&lt;p&gt;
It could do with some reorganization, really.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Sun, 08 Aug 2010 11:48:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:39/1281268137000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:37" title="Comment 37"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Sometimes you will need more than core to develop a complex site - we are not trying to solve 100% of use cases only the more significant ~80%.  The other 20% is where plugins sit in the eco-system so that you can make it your WordPress
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Best I'm aware, situations where node2node relationships are desirable include the vast majority of non-trivial/real-life business applications. The keyword here is business: people who pay to get a website that is of any use to them, as opposed to a corporate blog for PR purposes.
&lt;/p&gt;
&lt;p&gt;
Even if you stick to a web content publishing workflow, one can think of use cases:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;a post occasionally ought to have several authors
&lt;/li&gt;&lt;li&gt;a tag or category ought to have multiple parents and children (social psychology belongs in psychology and in sociology, and perhaps in philosophy as well)
&lt;/li&gt;&lt;li&gt;a post comparing products, movies etc ought to be related to several products, movies etc - each posts in their own right
&lt;/li&gt;&lt;li&gt;a product, movie etc could have multiple reviews and comparisons
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
One of the more compelling examples Mike gave, IMO, was the one for the law firm. The little I've worked in that field would have had me laugh at the idea of using WP. You &lt;em&gt;can&lt;/em&gt; bend reality to make things fit in taxonomies and meta tables, in order to fit real life situations into an arbitrary schema. But for such a setup you quickly end up ditching WP altogether, in favor of Drupal (barely better) or a php framework.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14561 (wp-admin/edit.php tags of post are hard to compare) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 08 Aug 2010 11:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14561#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14561#comment:2/1281265352000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14561 (wp-admin/edit.php tags of post are hard to compare) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 08 Aug 2010 11:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14561#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14561#comment:1/1281265344000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm pretty sure you can achieve this using filters.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sun, 08 Aug 2010 09:45:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:38/1281260758000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:36" title="Comment 36"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Makes me wonder if my suggestions are being challenged because they are my suggestions?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you take a look at that thread, no one supported my idea either, not even you. Funny how opinions change, no?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12877 (Modular themes: Apply template hierarchy to folders within a theme) updated</title>
      
        <dc:creator>ramoonus</dc:creator>

      <pubDate>Sun, 08 Aug 2010 09:28:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12877#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12877#comment:22/1281259735000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11058 (Add unregister_taxonomy_for_object_type()) updated</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Sun, 08 Aug 2010 09:07:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11058#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11058#comment:14/1281258467000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>unregister_taxonomy_for_object_type.patch attached to Ticket #11058</title>
      
        <dc:creator>leewillis77</dc:creator>

      <pubDate>Sun, 08 Aug 2010 09:04:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/11058/unregister_taxonomy_for_object_type.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/11058/unregister_taxonomy_for_object_type.patch/1281258295000000</guid>
      <description>&lt;p&gt;
I added a proposed implementation for unregister_taxonomy_for_object_type on &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14482" title="#14482: enhancement: Should be able to unregister_taxonomy_for_object_type (closed: duplicate)"&gt;#14482&lt;/a&gt; (Which has been closed as a dupe of this bug). There was an issue with the patch I provided on that bug, so revised patch is attached here.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #14537 (Support Google Chrome Frame) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 08 Aug 2010 08:38:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14537#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14537#comment:1/1281256737000000</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="http://www.chromium.org/developers/how-tos/chrome-frame-getting-started"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Chrome Frame Guide&lt;/a&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;meta http-equiv="X-UA-Compatible" content="IE=8,chrome=1"&amp;gt;
&lt;/pre&gt;&lt;p&gt;
That's not playing nicely with users even while IE sucks. What about a plugin to spare some bloat or is there actually any need to use Chrome Frame for something specific?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14540 (Should be able to reply to a comment which is in the maximal possible nest) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 08 Aug 2010 08:31:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14540#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14540#comment:8/1281256292000000</guid>
      <description>&lt;p&gt;
I've never heard that admins use the nesting-level setting to disable comments by setting it to zero.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14561 (wp-admin/edit.php tags of post are hard to compare) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Sun, 08 Aug 2010 08:25:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14561</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14561/1281255902000000</guid>
      <description>&lt;p&gt;
To get an overview about tags used between articles on the post listing in the admin is hard to achieve by the user because they appear not to be ordered.
&lt;/p&gt;
&lt;p&gt;
A solution could be to sort them alphabetically. That done, it's easier for the user to compare the usage of tag distribution accross the listing.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sun, 08 Aug 2010 08:24:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:37/1281255885000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14513#comment:36" title="Comment 36"&gt;mikeschinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Just found this &lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-hackers/2010-April/031593.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;from the wp-hackers list from back in April&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;On Apr 17, 2010, at 5:31 PM, scribu wrote:
&amp;gt; To link posts to other posts, I would use a posts2posts table, instead of
&amp;gt; the taxonomy system: fewer tables =&amp;gt; better performance, easier to maintain
&amp;gt; consistency.
&lt;/pre&gt;&lt;p&gt;
Makes me wonder if my suggestions are being challenged because they are my suggestions?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Definitely not - at this point in time I don't see that core needs to add this feature.
&lt;/p&gt;
&lt;p&gt;
Sometimes you will need more than core to develop a complex site - we are not trying to solve 100% of use cases only the more significant ~80%.  The other 20% is where plugins sit in the eco-system so that you can make it your WordPress
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14513 (Time for a wp_post_relationships table?) updated</title>
      
        <dc:creator>mikeschinkel</dc:creator>

      <pubDate>Sun, 08 Aug 2010 03:18:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14513#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14513#comment:36/1281237485000000</guid>
      <description>&lt;p&gt;
Just found this &lt;a class="ext-link" href="http://lists.automattic.com/pipermail/wp-hackers/2010-April/031593.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;from the wp-hackers list from back in April&lt;/a&gt;:
&lt;/p&gt;
&lt;pre class="wiki"&gt;On Apr 17, 2010, at 5:31 PM, scribu wrote:
&amp;gt; To link posts to other posts, I would use a posts2posts table, instead of
&amp;gt; the taxonomy system: fewer tables =&amp;gt; better performance, easier to maintain
&amp;gt; consistency.
&lt;/pre&gt;&lt;p&gt;
Makes me wonder if my suggestions are being challenged because they are my suggestions?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>Kawauso</dc:creator>

      <pubDate>Sun, 08 Aug 2010 02:28:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:23/1281234490000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Adding a plugin submenu with the 'network_admin_menu' hook results in a 'Cannot load [myplugin]' error (in this case to network/plugins.php).
&lt;/p&gt;
&lt;p&gt;
add_submenu_page() adds the hook correctly as 'plugins_page_[myplugin]' but on load, get_plugin_page_hookname() causes the hook to be incorrectly identified as 'admin_page_[myplugin]'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14442 (Import does not populat nav-menus) updated</title>
      
        <dc:creator>DreadLox</dc:creator>

      <pubDate>Sun, 08 Aug 2010 00:23:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14442#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14442#comment:1/1281227012000000</guid>
      <description>&lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Confirmed
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Sun, 08 Aug 2010 00:16:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:10/1281226575000000</guid>
      <description>&lt;p&gt;
From your link:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Disqus uses JavaScript and helps search engines index the comments by displaying the discussion threads on your Disqus community page.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So the comments are being indexed, but it's on Disqus' site.  There's no special guidance that can be applied to XHR-retrieved comments on one's own site.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
As someone who browses with JS (and cookies) turned off by default for security reasons, I think this fad of making comments JS-only creates a bad user experience.  Sites that use Disqus and the like are saying at least one of the following to someone like me:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We don't really care if you can read or contribute to our content.
&lt;/li&gt;&lt;li&gt;We want to force you to expose your client to a third-party site that runs a client-side script and requires a cookie.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
To disable JS, I use the NoScript Firefox add-on, which according to the Mozilla site has been downloaded over 72 million times, so I don't think I'm alone.  Also, with the expanding number of web clients that have limited JS abilities, including many screen readers and phones, the number of people who can't participate in those comments is growing.
&lt;/p&gt;
&lt;p&gt;
I love JavaScript; I'm a JavaScript developer.  However, as with everything it has its place, and it should be used to &lt;em&gt;enhance&lt;/em&gt; not diminish the experience of users.
&lt;/p&gt;
&lt;p&gt;
So let's provide the ammunition people need to do this if they choose, perhaps with an XML or JSON comments query API, but let's not pull the trigger by default.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14372 (Option to load comments asynchronously, for speed) updated</title>
      
        <dc:creator>hotforwords</dc:creator>

      <pubDate>Sat, 07 Aug 2010 23:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14372#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14372#comment:9/1281223804000000</guid>
      <description>&lt;p&gt;
This is very important and needs to be addressed as highly trafficked websites like Mashable use Disqus because Disqus is able to show the first 10 comments with a link to Show All Comments PLUS Disqus is able to index the comments properly as they state here:  &lt;a class="ext-link" href="http://wiki.disqus.net/FAQ#Willsearchenginesstillindexmycomments.3F"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wiki.disqus.net/FAQ#Willsearchenginesstillindexmycomments.3F&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
As they state:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Disqus provides plugins for self-hosted blogs, running software such as WordPress or MovableType, that uses our API to interface with Disqus. Search engines will index this content perfectly.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
So they offer some kind of solution for Self Hosted Blogs that allows for the proper indexing of the comments, they offer another solution for non-self-hosted blogs which puts the comments on the Discus site, but we are not interested in that solution.
&lt;/p&gt;
&lt;p&gt;
Disqus charges $500/mo to integrate comments with your existing comments and existing users, so I cannot justify using them currently, plus is seems a shame to move all commenting outside of Wordpress!
&lt;/p&gt;
&lt;p&gt;
If someone could look at how Disqus is addressing the indexing issue that might be the solution we need.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14212 (Hide more meta boxes by default) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Sat, 07 Aug 2010 22:46:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14212#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14212#comment:3/1281221177000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14544 (Add action to post_comment_status_meta_box()) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 21:06:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14544#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14544#comment:4/1281215168000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/15490" title="Allow plugins to add more options to the comment status meta box ..."&gt;[15490]&lt;/a&gt;) Allow plugins to add more options to the comment status meta box easily. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14544" title="#14544: enhancement: Add action to post_comment_status_meta_box() (closed: fixed)"&gt;#14544&lt;/a&gt; props ryan.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [15490]: Allow plugins to add more options to the comment status meta box ...</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 21:06:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/15490</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/15490/1281215166300457</guid>
      <description>&lt;p&gt;
Allow plugins to add more options to the comment status meta box easily. Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14544" title="#14544: enhancement: Add action to post_comment_status_meta_box() (closed: fixed)"&gt;#14544&lt;/a&gt; props ryan.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #14544 (Add action to post_comment_status_meta_box()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 21:05:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14544#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14544#comment:3/1281215151000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Looks great.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14560 (class 'current-page-parent' is being to the parent page and  to the ...) updated</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14560#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14560#comment:2/1281202445000000</guid>
      <description>&lt;p&gt;
correction the line
Note that PAGE-PARENT has the class 'current-page-parent current-page-parent'.
should be
Note that PAGE-PARENT has the class 'current-page-parent current_page_parent'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14560 (class 'current-page-parent' is being to the parent page and  to the ...) updated</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:32:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14560#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14560#comment:1/1281202368000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14353 (editor cuts off text at first german umlaut) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14353#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14353#comment:10/1281201807000000</guid>
      <description>&lt;p&gt;
it is not a problem of the server or plugins as it happens only with the admin user - when the post is saved and also published. With the other user types editor for example it works without problems.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14481 (Shortcode Enhancements) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:22:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14481#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14481#comment:20/1281201763000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14557" title="#14557: defect (bug): Side by side shortcodes leave one as text (closed: duplicate)"&gt;#14557&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14557 (Side by side shortcodes leave one as text) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:22:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14557#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14557#comment:2/1281201737000000</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/14481" title="#14481: enhancement: Shortcode Enhancements (closed: maybelater)"&gt;#14481&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14560 (class 'current-page-parent' is being to the parent page and  to the ...) created</title>
      
        <dc:creator>juggledad</dc:creator>

      <pubDate>Sat, 07 Aug 2010 17:20:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14560</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14560/1281201603000000</guid>
      <description>&lt;p&gt;
Description: The class 'current-page-parent' is being assigned twice to the parent page and is being assigned to the parent page of other menu items.
&lt;/p&gt;
&lt;p&gt;
To reproduce
&lt;/p&gt;
&lt;p&gt;
1) use the TwentyTen theme
&lt;/p&gt;
&lt;p&gt;
2) add two categories: CAT-PARENT and CAT-CHILD
&lt;/p&gt;
&lt;p&gt;
3) add two pages: PAGE-PARENT and PAGE-CHILD
&lt;/p&gt;
&lt;p&gt;
4) add a menu, add the two categories and two pages and adjust them so the children are under the parents
&lt;/p&gt;
&lt;p&gt;
5) select the PAGE-CHILD and look at the source
&lt;/p&gt;
&lt;p&gt;
Note that the CAT-PARENT has the class 'current-page-parent'
&lt;/p&gt;
&lt;p&gt;
Note that PAGE-PARENT has the class 'current-page-parent current-page-parent'.
&lt;/p&gt;
&lt;p&gt;
Here is the HTML that is generated.
&lt;/p&gt;
&lt;p&gt;
&amp;lt;ul id="menu-cat_test" class="menu"&amp;gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1408" class="menu-item menu-item-type-taxonomy current-page-parent menu-item-1408"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=3&lt;/a&gt;"&amp;gt;CAT-PARENT&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1409" class="menu-item menu-item-type-taxonomy menu-item-1409"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?cat=8"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?cat=8&lt;/a&gt;"&amp;gt;CAT-CHILD&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1413" class="menu-item menu-item-type-post_type current-page-ancestor current-menu-ancestor current-menu-parent current-page-parent current_page_parent current_page_ancestor menu-item-1413"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http:///wp301/?page_id=3"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http:///wp301/?page_id=3&lt;/a&gt;"&amp;gt;PAGE-PARENT&amp;lt;/a&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;ul class="sub-menu"&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;li id="menu-item-1411" class="menu-item menu-item-type-post_type current-menu-item page_item page-item-7 current_page_item menu-item-1411"&amp;gt;&amp;lt;a href="&lt;a class="ext-link" href="http://wp301/?page_id=7"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://wp301/?page_id=7&lt;/a&gt;"&amp;gt;PAGE-CHILD&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
&amp;lt;/li&amp;gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
&amp;lt;/ul&amp;gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14558 (Separate Database Table Support for Custom Post Types) updated</title>
      
        <dc:creator>rahul286</dc:creator>

      <pubDate>Sat, 07 Aug 2010 13:35:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14558#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14558#comment:2/1281188159000000</guid>
      <description>&lt;p&gt;
@Peter (westi)
&lt;/p&gt;
&lt;p&gt;
Of course you know better and I respect ur opinion.
&lt;/p&gt;
&lt;p&gt;
But can register_post_type be extended (as a class) or atleast changed to have enough actions and filter so experienced developers can take some extra efforts where this kind of requirement is critical for this.
&lt;/p&gt;
&lt;p&gt;
I really do not believe in copying lots of codes from core and then patching them up to get desired results. It becomes harder to maintain.
&lt;/p&gt;
&lt;p&gt;
Anyway, thanks for being so quick to reply. :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14465 (Update Plugins Hangs while displaying 'updating') updated</title>
      
        <dc:creator>stevemagruder</dc:creator>

      <pubDate>Sat, 07 Aug 2010 13:02:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14465#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14465#comment:1/1281186149000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I am seeing the exact same problem as reported in both 3.0 and 3.0.1.
&lt;/p&gt;
&lt;p&gt;
I am using Mozilla Firefox 3.6.8 and my host is running:
&lt;/p&gt;
&lt;p&gt;
MySQL 5.0.90-community
PHP 5.2.13
Apache 2.2.15
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 12:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:8/1281184512000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 12:34:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:7/1281184485000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/14556#comment:5" title="Comment 5"&gt;guigouz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you're not using mod_rewrite, wouldn't esc_url() mess with navigation ?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nope. esc_url() is for escaping any type of URL.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14559 (wp_admin_css Filter Broken) created</title>
      
        <dc:creator>tech163</dc:creator>

      <pubDate>Sat, 07 Aug 2010 11:43:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14559</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14559/1281181393000000</guid>
      <description>&lt;p&gt;
I think the wp_admin_css filter is broken. I created a plugin with the following code, and nothing happens (I did activate it though).
&lt;/p&gt;
&lt;pre class="wiki"&gt;function wp_admin_css_blah($test) {
	die($test);
}
add_filter('wp_admin_css', 'wp_admin_css_blah');
&lt;/pre&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #14472 (get_categories - child_of) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Sat, 07 Aug 2010 11:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14472#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14472#comment:7/1281179618000000</guid>
      <description>&lt;p&gt;
what is the status of the problem???
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14471 (wp_create_category not working properly) updated</title>
      
        <dc:creator>christian_gnoth</dc:creator>

      <pubDate>Sat, 07 Aug 2010 11:01:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14471#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14471#comment:6/1281178902000000</guid>
      <description>&lt;p&gt;
can anyone give a feedback about the status of this problem???
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 08:16:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:6/1281168981000000</guid>
      <description>&lt;p&gt;
In future the correct way to report potential security issues is detailed here: &lt;a class="ext-link" href="http://codex.wordpress.org/Security_FAQ"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Security_FAQ&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14558 (Separate Database Table Support for Custom Post Types) closed</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 07 Aug 2010 08:15:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14558#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14558#comment:1/1281168902000000</guid>
      <description>wontfix: &lt;p&gt;
This is not something we would likely consider.
&lt;/p&gt;
&lt;p&gt;
We are happy with storing the custom post types in the existing table structures.
&lt;/p&gt;
&lt;p&gt;
We don't recommend on adding extra tables - in some installation scenarios it isn't even possible.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #14558 (Separate Database Table Support for Custom Post Types) created</title>
      
        <dc:creator>rahul286</dc:creator>

      <pubDate>Sat, 07 Aug 2010 06:55:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14558</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14558/1281164107000000</guid>
      <description>&lt;p&gt;
While working on custom post types, I felt need for this enhancements.
&lt;/p&gt;
&lt;p&gt;
This can be achieved by adding an extra argument to the register_post_type function like below...
&lt;/p&gt;
&lt;pre class="wiki"&gt;register_post_type( 'acme_product',
    array(
      'labels' =&amp;gt; array(
        'name' =&amp;gt; __( 'Products' ),
        'singular_name' =&amp;gt; __( 'Product' )
      ),
      'public' =&amp;gt; true,
      /* Database separation */
     'db_tables' =&amp;gt; array(
        'prefix' =&amp;gt; '', //by default, value of $table_prefix will be used. If user sets this value to something, it will be used as prefix for both of following tables
        'base_prefix' =&amp;gt; '' , //this will control it tables are to be kept sitewide or per blog
        'posts_name' =&amp;gt; 'acme',
        'postmeta_name' =&amp;gt; 'acmemeta',
      ),
  );
&lt;/pre&gt;&lt;p&gt;
This small enhancement (not from coding perspective) will help more plugins authors go for custom post type.
Reasons are - first they will get option to have separate data storage.
Second - if some other badly coded plugin manipulates wp_posts table in some wrong way, it won't have sideeffect on third-party data.
Third - Plugin authors will get more space to experiment as at any time they will be dealing with their own plugin's data.
&lt;/p&gt;
&lt;p&gt;
Of course, one of the goal of this nice feature must be to abstract database layer, but as a developer I feel it would be better if I can have some control over database without loosing power of this new (custom post type) feature.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #11953 (wp_nonce_field() does not pass the result of wp_referer_field()) updated</title>
      
        <dc:creator>neoxx</dc:creator>

      <pubDate>Sat, 07 Aug 2010 05:40:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11953#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11953#comment:4/1281159621000000</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14556 (get_pagenum_link() needs esc_url()) updated</title>
      
        <dc:creator>guigouz</dc:creator>

      <pubDate>Sat, 07 Aug 2010 03:23:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14556#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14556#comment:5/1281151429000000</guid>
      <description>&lt;p&gt;
The code is here - &lt;a class="ext-link" href="http://robertbasic.com/blog/wordpress-paging-navigation/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://robertbasic.com/blog/wordpress-paging-navigation/&lt;/a&gt;
If you're not using mod_rewrite, wouldn't esc_url() mess with navigation ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14082 (wp_nav_menu inserts newline char (carriage return) between &lt;li&gt;) updated</title>
      
        <dc:creator>artworkmonger</dc:creator>

      <pubDate>Sat, 07 Aug 2010 02:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14082#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14082#comment:3/1281148578000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
no, it's not an IE thing. it's present in any browser, any os. just add borders to the &amp;lt;li&amp;gt; tags rendered by wp_nav_menu() and you'll see the spaces.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14435 (Network Admin) updated</title>
      
        <dc:creator>rmccue</dc:creator>

      <pubDate>Sat, 07 Aug 2010 02:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14435#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14435#comment:22/1281146925000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #13449 (Filter Cron URL) updated</title>
      
        <dc:creator>ikailo</dc:creator>

      <pubDate>Sat, 07 Aug 2010 02:02:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/13449#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/13449#comment:5/1281146560000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #11003 (wp_get_object_terms Returns Duplicate Terms) updated</title>
      
        <dc:creator>scribu</dc:creator>

      <pubDate>Sat, 07 Aug 2010 00:06:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/11003#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/11003#comment:12/1281139587000000</guid>
      <description>&lt;p&gt;
How about this: use DISTINCT to remove duplicate terms, but only when $fields != 'all_with_object_id'.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>