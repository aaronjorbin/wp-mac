<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #5408 (No need for unix execute permissions in wp-includes/js/tinymce/plugins/) created</title>
      
        <dc:creator>lapcat</dc:creator>

      <pubDate>Sat, 01 Dec 2007 19:41:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5408</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5408/1196538072000000</guid>
      <description>&lt;p&gt;
The file "wp-includes/js/tinymce/plugins/wordpress/images/toolbars.gif" and all of the non-directory files under "wp-includes/tinymce/plugins/spellchecker" have unix execute permissions.  This is unnecessary, because none of these files are executable, and it's not a good idea from a security standpoint.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #4642 (Enhanced wp-mail.php) updated</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Sat, 01 Dec 2007 18:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4642#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4642#comment:22/1196535338000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Tested with trunk revision 6349, FreeBSD 6.2-RELEASE-p1, MySQL 4.1.20, by sending three email messages, one with publish capability, one without, and one unknown user.  Resulting posts were posted, pending, and pending from admin, respectively.  This is the expected result.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sat, 01 Dec 2007 16:25:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:25/1196526334000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:22" title="Comment 22"&gt;sjmurdoch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If uniqid() isn't unpredictable, it would be possible to brute force the database password (the rest of the fields are pretty easy to guess in most situations). How secure is uniqid() in this usage?
&lt;/p&gt;
&lt;p&gt;
Is there a better way to get unpredictable pseudorandom numbers?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
From my reading of the security, it should be &lt;code&gt;uniqid(microtime(), true)&lt;/code&gt; for better random-ness and security.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 01 Dec 2007 15:05:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:24/1196521520000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:22" title="Comment 22"&gt;sjmurdoch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:18" title="Comment 18"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've uploaded a first pass patch for auth cookies
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It looks like the cookie is of the form:
&lt;code&gt;md5(DB_PASSWORD.DB_USER.DB_NAME.DB_HOST.ABSPATH.$username.uniqid(microtime())&lt;/code&gt;
and the hash of this is stored in the database.
&lt;/p&gt;
&lt;p&gt;
If uniqid() isn't unpredictable, it would be possible to brute force the database password (the rest of the fields are pretty easy to guess in most situations). How secure is uniqid() in this usage?
&lt;/p&gt;
&lt;p&gt;
Is there a better way to get unpredictable pseudorandom numbers?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is the current cookie format in this patch.
&lt;/p&gt;
&lt;p&gt;
It is in no way intended to be the final format - I just wanted something which would generate a hopefully unique cookie per-user for testing the infrastructure changes with WordPress - splitting out the login handling from the cookie verification
&lt;/p&gt;
&lt;p&gt;
We do need to analyse the predictability of the cookies and ideally find a good available source of entropy for our random numbers
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 01 Dec 2007 15:02:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:23/1196521377000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:21" title="Comment 21"&gt;sjmurdoch&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
There are roughly two approaches to dealing with this problem.
&lt;/p&gt;
&lt;p&gt;
Sessions involves a record being kept of each login session, which PHP already has existing infrastructure for this. The down side is that there is a database write for each login, and the size of the session table scales with the number of active sessions. Alternatively there can be a restriction of one session per user, as in westi's patch.
&lt;/p&gt;
&lt;p&gt;
An alternative is to use something along the lines of the &lt;a class="ext-link" href="http://lists.grok.org.uk/pipermail/full-disclosure/2007-November/058611.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;papers&lt;/a&gt; I mentioned earlier. This supports multiple sessions per user, with no need to store extra state. Database writes are only needed on changing the password.
&lt;/p&gt;
&lt;p&gt;
A variant of this is to store the hash post-image of a cookie in the database, which means someone with read access to the database can't generate a valid cookie. The down side of this approach is that some fairly subtle cryptography is needed. I think it's possible to do with MD5, but will need some thought.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I will have a read through those and try to understand how we can implement them.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Sat, 01 Dec 2007 14:42:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:22/1196520172000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:18" title="Comment 18"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I've uploaded a first pass patch for auth cookies
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It looks like the cookie is of the form:
&lt;code&gt;md5(DB_PASSWORD.DB_USER.DB_NAME.DB_HOST.ABSPATH.$username.uniqid(microtime())&lt;/code&gt;
and the hash of this is stored in the database.
&lt;/p&gt;
&lt;p&gt;
If uniqid() isn't unpredictable, it would be possible to brute force the database password (the rest of the fields are pretty easy to guess in most situations). How secure is uniqid() in this usage?
&lt;/p&gt;
&lt;p&gt;
Is there a better way to get unpredictable pseudorandom numbers?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>sjmurdoch</dc:creator>

      <pubDate>Sat, 01 Dec 2007 14:28:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:21/1196519299000000</guid>
      <description>&lt;p&gt;
There are roughly two approaches to dealing with this problem.
&lt;/p&gt;
&lt;p&gt;
Sessions involves a record being kept of each login session, which PHP already has existing infrastructure for this. The down side is that there is a database write for each login, and the size of the session table scales with the number of active sessions. Alternatively there can be a restriction of one session per user, as in westi's patch.
&lt;/p&gt;
&lt;p&gt;
An alternative is to use something along the lines of the &lt;a class="ext-link" href="http://lists.grok.org.uk/pipermail/full-disclosure/2007-November/058611.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;papers&lt;/a&gt; I mentioned earlier. This supports multiple sessions per user, with no need to store extra state. Database writes are only needed on changing the password.
&lt;/p&gt;
&lt;p&gt;
A variant of this is to store the hash post-image of a cookie in the database, which means someone with read access to the database can't generate a valid cookie. The down side of this approach is that some fairly subtle cryptography is needed. I think it's possible to do with MD5, but will need some thought.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5407.diff attached to Ticket #5407</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Sat, 01 Dec 2007 13:07:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5407/5407.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5407/5407.diff/1196514472000000</guid>
      <description>&lt;p&gt;
Improve wp_list_authors() efficiency
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5407 (Improve wp_list_authors efficiency) created</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Sat, 01 Dec 2007 12:49:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5407</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5407/1196513354000000</guid>
      <description>&lt;p&gt;
wp_list_authors() makes multiple queries per registered user.  For example, if a blog has 50 registered users, wp_list_authors() will make over 100 queries, even if there are only a few users who can write posts.
&lt;/p&gt;
&lt;p&gt;
Alexander Concha developed the attached patch which does it all with only one query total (two if "show_fullname" is enabled).  However, he questions if this change belongs in the WP core.  I think it does because it's such a vast improvement over the current extremely inefficient code.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5218 (SAVEQUERIES: log calling function name) updated</title>
      
        <dc:creator>ozh</dc:creator>

      <pubDate>Sat, 01 Dec 2007 12:43:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5218#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5218#comment:9/1196513030000000</guid>
      <description>&lt;p&gt;
Very great stuff! Can we have this for 2.3.2 even ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [95]: remove wp_flag tests</title>
      
        <dc:creator>tellyworth</dc:creator>

      <pubDate>Sat, 01 Dec 2007 10:43:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/95/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/95/tests/1196505820976628</guid>
      <description>&lt;p&gt;
remove wp_flag tests
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 01 Dec 2007 01:19:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:20/1196471981000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:19" title="Comment 19"&gt;darkdragon&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:18" title="Comment 18"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Known issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Only supports a single authentication token for a user so you cannot be logged in from two places at once.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I would term this a feature, but since I'm always signed in at home and usually sign in from various other places, it could become a hassle. What if I'm in a location temporary and leave without the ability to go back? Will there be a time limit of when that token will expire so that I can eventually sign in at another location even if I hadn't signed out at that other place?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you sign in somewhere new then the old token is invalidated.
&lt;/p&gt;
&lt;p&gt;
There is currently no timeout on tokens but for multiple logins to be supported we will need a way of timing tokens out.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>darkdragon</dc:creator>

      <pubDate>Sat, 01 Dec 2007 01:14:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:19/1196471668000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5367#comment:18" title="Comment 18"&gt;westi&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Known issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Only supports a single authentication token for a user so you cannot be logged in from two places at once.
&lt;/li&gt;&lt;/ol&gt;&lt;/blockquote&gt;
&lt;p&gt;
I would term this a feature, but since I'm always signed in at home and usually sign in from various other places, it could become a hassle. What if I'm in a location temporary and leave without the ability to go back? Will there be a time limit of when that token will expire so that I can eventually sign in at another location even if I hadn't signed out at that other place?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 01 Dec 2007 01:00:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:18/1196470814000000</guid>
      <description>&lt;p&gt;
I've uploaded a first pass patch for auth cookies
&lt;/p&gt;
&lt;p&gt;
Major changes to the current mechanism:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Cookie is not based on the password hash
&lt;/li&gt;&lt;li&gt;Cookie is not derived from information stored in the database
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Known issues:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Only supports a single authentication token for a user so you cannot be logged in from two places at once.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>auth.diff attached to Ticket #5367</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Sat, 01 Dec 2007 00:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5367/auth.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5367/auth.diff/1196470684000000</guid>
      <description>&lt;p&gt;
First pass patch for switching to auth cookie
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>xmlrpc.php.diff attached to Ticket #5406</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Fri, 30 Nov 2007 23:26:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5406/xmlrpc.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5406/xmlrpc.php.diff/1196465186000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5406 (Restore XML-RPC wp.suggestCategories return values) created</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Fri, 30 Nov 2007 23:26:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5406</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5406/1196465177000000</guid>
      <description>&lt;p&gt;
&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/5756" title="Add name_like query to get_terms(). Use it in suggestCategories."&gt;[5756]&lt;/a&gt; changed the way data was returned from the wp.suggestCategories XML-RPC method.  The attached patch restores the returned value to its original format, &lt;a class="ext-link" href="http://codex.wordpress.org/XML-RPC_wp#wp.suggestCategories"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/XML-RPC_wp#wp.suggestCategories&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I guess this method doesn't get much use since this change happened some five months ago and I haven't heard anyone complain about this.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5405 (Refactor wp-login.php) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Fri, 30 Nov 2007 23:26:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5405#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5405#comment:1/1196465163000000</guid>
      <description>&lt;p&gt;
Dude. You've totally read my mind.
&lt;/p&gt;
&lt;p&gt;
There have been a couple of times where I'm all like, "Damn it, I'm doing this, I'm refactoring this mess!"
&lt;/p&gt;
&lt;p&gt;
Then looking through everything, I realize it isn't that bad and while there are somethings that would better be in a function, a lot of the code is presentation and can't easily be placed in a function or I can't think of a reason.
&lt;/p&gt;
&lt;p&gt;
However, where I was coming from was refactoring the current stuff, the viewpoint might be to add in additional features or something.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5405 (Refactor wp-login.php) created</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 30 Nov 2007 23:22:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5405</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5405/1196464949000000</guid>
      <description>&lt;p&gt;
wp-login.php has a lot of code in it's case statement and it would be good to refactor it so that the different actions are handled by functions.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5367 (Wordpress cookie authentication vulnerability) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 30 Nov 2007 22:30:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5367#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5367#comment:17/1196461845000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3994 (MetaWeblog metaWeblog.getCategories problem) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Fri, 30 Nov 2007 20:47:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3994#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3994#comment:11/1196455653000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5401 (Strengthen password generation, and make generation function pluggable) updated</title>
      
        <dc:creator>lloydbudd</dc:creator>

      <pubDate>Fri, 30 Nov 2007 20:43:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5401#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5401#comment:2/1196455406000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #3994 (MetaWeblog metaWeblog.getCategories problem) closed</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Fri, 30 Nov 2007 19:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/3994#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/3994#comment:10/1196450831000000</guid>
      <description>wontfix: &lt;p&gt;
As others have noted, the spec if vague on what exactly the returning data structure looks like, most others seem to have implemented it the same way WordPress has, clients have long since adapted to the way WordPress is returning this data.
&lt;/p&gt;
&lt;p&gt;
There doesn't appear to be a compelling reason to change at this point, so I'm closing this as wontfix.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #4642 (Enhanced wp-mail.php) updated</title>
      
        <dc:creator>lexhair</dc:creator>

      <pubDate>Fri, 30 Nov 2007 18:19:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4642#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4642#comment:21/1196446787000000</guid>
      <description>&lt;p&gt;
Thanks to all of you for your consideration. Great job.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5294 ($phpmailer-&gt;Sender line prevents comment notifications from being received) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Fri, 30 Nov 2007 16:08:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5294#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5294#comment:22/1196438933000000</guid>
      <description>&lt;p&gt;
Upgrading to PHP5 shouldn't have caused this issue. Is it possible to downgrade to PHP4 and see that it works? Also, if you still have the old PHP4 installation on another site, see what the &lt;code&gt;phpinfo()&lt;/code&gt; says. Specifically, about send_mail (or sendmail), compare the two, if you can and report back.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5294 ($phpmailer-&gt;Sender line prevents comment notifications from being received) updated</title>
      
        <dc:creator>geoffarnold</dc:creator>

      <pubDate>Fri, 30 Nov 2007 15:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5294#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5294#comment:21/1196437823000000</guid>
      <description>&lt;p&gt;
Just one more data point: I installed 2.3.1, and had no problem with email notifications; then I upgraded to PHP5 (yeah, I know), and started losing most (but not all) notifications. I deleted the infamous line 228, but it didn't help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5404.patch attached to Ticket #5404</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Fri, 30 Nov 2007 15:25:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5404/5404.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5404/5404.patch/1196436329000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5404 (Add pluggable function to enforce password strength) created</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Fri, 30 Nov 2007 15:24:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5404</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5404/1196436275000000</guid>
      <description>&lt;p&gt;
Patch adds an extra option (disabled by default) to force users to chose secure passwords. A plugin replaceable function is called at the appropriate time to check the strength of the password. I realize that this functionality could be achieved through a plugin but I'd like to make the case that the extra security gained against brute force attacks makes it worth including. See also &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4470" title="#4470: enhancement: Password Strength Meter (closed: fixed)"&gt;#4470&lt;/a&gt; (Ideally I should really rewrite the function to replicate that javascript function).
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>5007.patch attached to Ticket #5007</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Fri, 30 Nov 2007 09:43:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5007/5007.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5007/5007.patch/1196415837000000</guid>
      <description>&lt;p&gt;
Standardizes sender address to admin_email
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5007 (Email notifications fail on hosted sites that check sender address) updated</title>
      
        <dc:creator>pishmishy</dc:creator>

      <pubDate>Fri, 30 Nov 2007 09:42:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5007#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5007#comment:16/1196415761000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
There doesn't appear to be any consistency as to when WordPress uses &lt;code&gt;get_option('admin_email')&lt;/code&gt; or &lt;code&gt;"wordpress@" . $_SERVER['SERVER_NAME']&lt;/code&gt; to send mail.
&lt;/p&gt;
&lt;p&gt;
Since the second case is only used twice I suggest standardizing on the first form. We can't guarantee it's a deliverable address, but it is almost certain to be. Simple patch attached.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5032 (Option to disable Canonical Redirects) updated</title>
      
        <dc:creator>meganpru</dc:creator>

      <pubDate>Fri, 30 Nov 2007 09:10:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5032#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5032#comment:6/1196413847000000</guid>
      <description>&lt;p&gt;
Hey thanks, deleting the htaccess file seems to have worked! ALthough I'm not too sure how to proceed, but everything seems to be ok now. So far so good... and I'm new here, so if I have any further problems I'll post in the support forum. Gracias! :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5007 (Email notifications fail on hosted sites that check sender address) updated</title>
      
        <dc:creator>torbens</dc:creator>

      <pubDate>Fri, 30 Nov 2007 08:58:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5007#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5007#comment:15/1196413094000000</guid>
      <description>&lt;i&gt;Priority&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I'm also running into this issue. No mails due to nonexistent wordpress@... address. No documentation on this either in the upgrade guides. Occurs on a major German hoster. Therefore I'm boosting the priority.
&lt;/p&gt;
&lt;p&gt;
I don't quite understand why you guys not simple use the email address specified at '/wp-admin/options-general.php'. It even says "This address is used only for admin purposes."
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5032 (Option to disable Canonical Redirects) updated</title>
      
        <dc:creator>DD32</dc:creator>

      <pubDate>Fri, 30 Nov 2007 08:52:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5032#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5032#comment:5/1196412745000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5032#comment:3" title="Comment 3"&gt;meganpru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Please let me know how to fix my blog! Thanks...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This would probably be better suited to the Support forums IMO.
&lt;/p&gt;
&lt;p&gt;
However, I would be checking that your .htaccess file contains the correct rules, It appears to be redirecting it even if the file exists in the given location.
&lt;/p&gt;
&lt;p&gt;
I would remove your .htaccess file, and then attempt to access your blog again, if you ucan acess it then, load the admin and change the permalink structure/save it again, that should force WP to re-create a correct .htaccess file. (Also check the Site URL and Blog URL while you're in there).
&lt;/p&gt;
&lt;p&gt;
D
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5032 (Option to disable Canonical Redirects) updated</title>
      
        <dc:creator>meganpru</dc:creator>

      <pubDate>Fri, 30 Nov 2007 06:39:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5032#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5032#comment:4/1196404760000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5032#comment:3" title="Comment 3"&gt;meganpru&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
After making the changes to the attached file, I no longer got stuck in a redirect loop, but the styles on my blog totally disappeared. My blog is volksvegan.org. I posted my previous problems &amp;amp; more info here: &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/5089"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.wordpress.org/ticket/5089&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please let me know how to fix my blog! Thanks...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Also, I cannot access the wp-admin folder. When I go to it, I just see my blog, sans styles and formatting. Very odd...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5032 (Option to disable Canonical Redirects) updated</title>
      
        <dc:creator>meganpru</dc:creator>

      <pubDate>Fri, 30 Nov 2007 06:18:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5032#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5032#comment:3/1196403495000000</guid>
      <description>&lt;p&gt;
After making the changes to the attached file, I no longer got stuck in a redirect loop, but the styles on my blog totally disappeared. My blog is volksvegan.org. I posted my previous problems &amp;amp; more info here: &lt;a class="ext-link" href="http://trac.wordpress.org/ticket/5089"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://trac.wordpress.org/ticket/5089&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Please let me know how to fix my blog! Thanks...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5403.patch attached to Ticket #5403</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 30 Nov 2007 06:14:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5403/5403.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5403/5403.patch/1196403273000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5403 (Remove unused variable from previous_post_link()) created</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 30 Nov 2007 06:13:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5403</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5403/1196403238000000</guid>
      <description>&lt;p&gt;
&lt;code&gt;previous_post_link()&lt;/code&gt; contains an unused variable named &lt;code&gt;$pre&lt;/code&gt;. Might as well remove it.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5089 (Canonical Redirect causes continual 301 redirect loop) updated</title>
      
        <dc:creator>meganpru</dc:creator>

      <pubDate>Fri, 30 Nov 2007 05:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5089#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5089#comment:12/1196401317000000</guid>
      <description>&lt;p&gt;
I am having the same problem after updating to 2.3 on my blog: volksvegan.org (the domain is set to go to a folder on my main domain name on my hosting account - meganpru.com/volksvegan/). I was able to edit my settings a second ago, all of the sudden I get stuck in a redirect loop, even when trying to go to my wp-admin page. The address bar keeps going between volksvegan.org and meganpru.com/volksvegan over and over again as well.
&lt;/p&gt;
&lt;p&gt;
Here's the error message:
Too many redirects occurred trying to open “&lt;a class="ext-link" href="http://volksvegan.org/volksvegan/?redirect_to=%25252525252525252Fvolksvegan%25252525252525252Fwp-admin%25252525252525252F"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://volksvegan.org/volksvegan/?redirect_to=%25252525252525252Fvolksvegan%25252525252525252Fwp-admin%25252525252525252F&lt;/a&gt;”. This might occur if you open a page that is redirected to open another page which then is redirected to open the original page.
&lt;/p&gt;
&lt;p&gt;
I was just able to post a new post, and when I tried to change my time zone settings, suddenly I got the error. I'm not all that wordpress-savvy yet, so I'm not sure what I need to do to fix this. It seems to be a common error so I would hope WordPress would fix this!
&lt;/p&gt;
&lt;p&gt;
Please let me know if I should start my own ticket for this... I'm new to this forum... Thanks!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5267 (Filter bloginfo_rss only passes one argument) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 30 Nov 2007 00:14:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5267#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5267#comment:9/1196381654000000</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5267 (Filter bloginfo_rss only passes one argument) updated</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 30 Nov 2007 00:13:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5267#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5267#comment:8/1196381582000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>5267.patch attached to Ticket #5267</title>
      
        <dc:creator>Viper007Bond</dc:creator>

      <pubDate>Fri, 30 Nov 2007 00:12:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5267/5267.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5267/5267.patch/1196381556000000</guid>
      <description>&lt;p&gt;
Props tzafrir
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5267 (Filter bloginfo_rss only passes one argument) reopened</title>
      
        <dc:creator>tzafrir</dc:creator>

      <pubDate>Fri, 30 Nov 2007 00:12:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5267#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5267#comment:7/1196381527000000</guid>
      <description>&lt;p&gt;
apply_filters() isn't passing a 2nd parm, so adding a 2 to add_filter() does nothing.
&lt;/p&gt;
&lt;p&gt;
Reopening by advice of Viper007bond.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item>
   </channel>
</rss>