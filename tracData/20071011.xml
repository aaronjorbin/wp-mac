<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>post_cache.diff attached to Ticket #5182</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 22:00:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5182/post_cache.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5182/post_cache.diff/1192140035000000</guid>
      <description>&lt;p&gt;
Eliminates $page_cache, $post_cache, $post_meta_cache and unifies page and post caching
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5183 (General Meta-Data Table) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 11 Oct 2007 20:31:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5183#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5183#comment:2/1192134715000000</guid>
      <description>&lt;ol&gt;&lt;li&gt;I was thinking about using sanitize_title, but I wondered if there was some reason someone uses this regex in the user meta functions to exclude dashes.
&lt;/li&gt;&lt;li&gt;I've updated the patch to take out the extraneous escape.
&lt;/li&gt;&lt;li&gt;I've updated the patch to use db_insert, but db_update is no good, as it allows you to specify only one column in the where clause.
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>general_meta_table.diff attached to Ticket #5183</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 11 Oct 2007 20:24:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5183/general_meta_table.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5183/general_meta_table.diff/1192134251000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5183 (General Meta-Data Table) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Thu, 11 Oct 2007 20:05:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5183#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5183#comment:1/1192133143000000</guid>
      <description>&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
Some notes from a quick first pass of the patch:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;You need to create (or find) a meta_key sanitization function - duplicated preg_replace's are bad.
&lt;/li&gt;&lt;li&gt;Doesn't -&amp;gt;prepare escape the data for you?/prepa
&lt;/li&gt;&lt;li&gt;db_insert and db_update should probably me used now they exists ;-)
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5183 (General Meta-Data Table) created</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Thu, 11 Oct 2007 19:52:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5183</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5183/1192132327000000</guid>
      <description>&lt;p&gt;
As I &lt;a class="ext-link" href="http://comox.textdrive.com/pipermail/wp-hackers/2007-October/015432.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;proposed on wp-hackers&lt;/a&gt;, it would be great to have a general meta table.
&lt;/p&gt;
&lt;p&gt;
There are at least a couple of benefits to such a table:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;We could have meta-data for comments and categories.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Others have proposed meta tables for the comments (e.g. &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5153" title="#5153: enhancement: Improved workflow for incoming comment processing. (closed: wontfix)"&gt;#5153&lt;/a&gt; and &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/2659" title="#2659: task (blessed): Comment meta (closed: fixed)"&gt;#2659&lt;/a&gt;); rather than
adding meta tables seriatim, a general meta-data table would meet that
need and offer the possibility of actually reducing the total number
of tables.
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It would provide a better place for plugins to store data.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Currently, most plugins---when they don't have enough data to justify
creating their own table---store data in the options table.  I think
there are disadvantages to bloating the options table, one of which is
that WP loads almost all options into the object cache.
&lt;/p&gt;
&lt;p&gt;
My attached patch includes the code necessary get such a table working in WP (aside from decrementing the db_version), and I've tested each of the get_general_meta, update_general_meta, and delete_general_meta functions successfully.
&lt;/p&gt;
&lt;p&gt;
By the way, update_meta and delete_meta would have been cleaner names, but they're already taken for admin post meta stuff.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5182 (Eliminate array caches) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:57:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5182</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5182/1192125427000000</guid>
      <description>&lt;p&gt;
Caches like $post_cache and $page_cache should be removed with the object cache being used instead.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5058 ("Convert All Categories" likely should be removed) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5058#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5058#comment:3/1192125144000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6226]: Lose Convert All Categories button.  It is confusing people.  Props ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6226</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6226/1192125133367433</guid>
      <description>&lt;p&gt;
Lose Convert All Categories button.  It is confusing people.  Props foolswisdom. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5058" title="#5058: defect (bug): &amp;#34;Convert All Categories&amp;#34; likely should be removed (closed: fixed)"&gt;#5058&lt;/a&gt; for 2.3
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5058 ("Convert All Categories" likely should be removed) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:52:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5058#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5058#comment:2/1192125133000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6226" title="Lose Convert All Categories button.  It is confusing people.  Props ..."&gt;[6226]&lt;/a&gt;) Lose Convert All Categories button.  It is confusing people.  Props foolswisdom. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5058" title="#5058: defect (bug): &amp;#34;Convert All Categories&amp;#34; likely should be removed (closed: fixed)"&gt;#5058&lt;/a&gt; for 2.3
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6225]: Lose Convert All Categories button.  It is confusing people.  Props ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6225</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6225/1192125056424161</guid>
      <description>&lt;p&gt;
Lose Convert All Categories button.  It is confusing people.  Props foolswisdom. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5058" title="#5058: defect (bug): &amp;#34;Convert All Categories&amp;#34; likely should be removed (closed: fixed)"&gt;#5058&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5058 ("Convert All Categories" likely should be removed) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:50:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5058#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5058#comment:1/1192125056000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6225" title="Lose Convert All Categories button.  It is confusing people.  Props ..."&gt;[6225]&lt;/a&gt;) Lose Convert All Categories button.  It is confusing people.  Props foolswisdom. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5058" title="#5058: defect (bug): &amp;#34;Convert All Categories&amp;#34; likely should be removed (closed: fixed)"&gt;#5058&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5179 (Use INNER JOIN instead of LEFT JOIN for taxonomy) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:44:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5179#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5179#comment:2/1192124668000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nominating for 2.3.1.  We might like the performance bump there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6224]: Use inner joins instead of left joins for taxonomy.  Inner is faster.  ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6224</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6224/1192124629123560</guid>
      <description>&lt;p&gt;
Use inner joins instead of left joins for taxonomy.  Inner is faster.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5179" title="#5179: defect (bug): Use INNER JOIN instead of LEFT JOIN for taxonomy (closed: fixed)"&gt;#5179&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5179 (Use INNER JOIN instead of LEFT JOIN for taxonomy) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:43:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5179#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5179#comment:1/1192124629000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6224" title="Use inner joins instead of left joins for taxonomy.  Inner is faster.  ..."&gt;[6224]&lt;/a&gt;) Use inner joins instead of left joins for taxonomy.  Inner is faster.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5179" title="#5179: defect (bug): Use INNER JOIN instead of LEFT JOIN for taxonomy (closed: fixed)"&gt;#5179&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5174 (If plugin details cleared while activated, "impossible" to deactivate) updated</title>
      
        <dc:creator>jaredbangs</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:05:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5174#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5174#comment:3/1192122321000000</guid>
      <description>&lt;p&gt;
Yeah, I guess it boils down to the fact that if your file permissions are loose enough to allow plugin code to write and/or modify files you're pretty much screwed in any case, even without this bug(?) / issue.
&lt;/p&gt;
&lt;p&gt;
I wrote a quick proof of concept plugin that does what I talked about above: creates another plugin with the same name, activates it, and then hides itself, so that it appears to the user that they just activated the one they thought they did, and if they try to deactivate, they're really only deactivating the dummy one, while the
original remains active and hidden. I can post it if anyone's interested.
&lt;/p&gt;
&lt;p&gt;
Following up on what santosj said above, it could get even worse and harder to detect. Plugins could have a short line buried within them to download new code and use it to modify some other plugin that the user has already activated (such as akismet) and then clean up its tracks by modifying itself so nothing looks out of the ordinary.
&lt;/p&gt;
&lt;p&gt;
Such behavior can be easily prevented by implementing proper file permissions, but I'm not sure what WP can do about that, other than maybe warn the user if they are open to this vulnerability.
&lt;/p&gt;
&lt;p&gt;
But (getting back to the original bug) it probably would be good for the plugin list to always include active plugins without relying (completely) on the data in the plugin files themselves.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5181 (Refactoring Atom support; baby step #1) created</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Thu, 11 Oct 2007 17:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5181</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5181/1192122268000000</guid>
      <description>&lt;p&gt;
Overall goal is to converge to a single place each where atom entries are created and consumed.  This is a first step.
&lt;/p&gt;
&lt;p&gt;
Move prep_content from wp-app to feed.php; use by both wp-app and feed-atom.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5180 (rev 6221 causes an AtomPub regression) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Thu, 11 Oct 2007 15:21:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5180#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5180#comment:1/1192116081000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5180 (rev 6221 causes an AtomPub regression) created</title>
      
        <dc:creator>rubys</dc:creator>

      <pubDate>Thu, 11 Oct 2007 15:06:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5180</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5180/1192115207000000</guid>
      <description>&lt;p&gt;
Revision 6220 APE output:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://intertwingly.net/stories/2007/09/ape/report.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://intertwingly.net/stories/2007/09/ape/report.html&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Revision HEAD APE output (shows an error starting with rev 6221):
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://intertwingly.net/stories/2007/10/ape/report.html"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://intertwingly.net/stories/2007/10/ape/report.html&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Changeset:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://trac.wordpress.org/changeset/6221"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://trac.wordpress.org/changeset/6221&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5174 (If plugin details cleared while activated, "impossible" to deactivate) updated</title>
      
        <dc:creator>santosj</dc:creator>

      <pubDate>Thu, 11 Oct 2007 14:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5174#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5174#comment:2/1192112987000000</guid>
      <description>&lt;p&gt;
If a plugin were going to do that they would just edit the database plugin option to where they would never be able to deactivate the plugin and force deletion. However, the combination of both could be a problem.
&lt;/p&gt;
&lt;p&gt;
Lets say User goes to activate and run the application. Finds out that the plugin was a little sneaky and is "phoning" home or adding content that wasn't agreed upon.
&lt;/p&gt;
&lt;p&gt;
User goes to deactivate, and on deactivation hook, the plugin readds itself to the plugin option activated list and opens itself and does the above bug trick.
&lt;/p&gt;
&lt;p&gt;
For a normal user this might pose a problem. What this needs to take into account is that if the User really wanted to remove such a plugin, they would only need to remove it, instead of deleting it. If it creates any other files, like say in the akismet folder, and activates itself when activated the first time, then this would pose a security risk.
&lt;/p&gt;
&lt;p&gt;
It might pose a greater security risk if the plugin does nothing bad and installed the another plugin that does that job for it. It might be difficult to track down and WordPress might be assumed at fault.
&lt;/p&gt;
&lt;p&gt;
Really, it depends mostly on user lack of technical knowledge.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5174 (If plugin details cleared while activated, "impossible" to deactivate) updated</title>
      
        <dc:creator>jaredbangs</dc:creator>

      <pubDate>Thu, 11 Oct 2007 05:56:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5174#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5174#comment:1/1192082175000000</guid>
      <description>&lt;p&gt;
Hmm... it's interesting to think of the possibilities here for plugins with less than noble intentions.
&lt;/p&gt;
&lt;p&gt;
Based on what you've described above, a plugin could theoretically (upon initial activation) modify and hide itself to prevent removal and then even download / insert a new dummy plugin file that uses the original name.
&lt;/p&gt;
&lt;p&gt;
This could lead to a situation where a user who goes to deactivate the new plugin could be fooled into believing they've done so, when in reality the original plugin would remain active.
&lt;/p&gt;
&lt;p&gt;
I agree that it seems unlikely, and of course it does require that the user downloads and activates the original plugin in the first place, and (in the scenario I described) have relatively "loose" file and directory permissions on their plugin directory, but I doubt that's very uncommon.
&lt;/p&gt;
&lt;p&gt;
Maybe I'm missing something in all this, but my memory isn't bad enough to have forgotten about all the nasty tricks some of those sponsored themes were pulling a while back, and I could see the same thing potentially being done here if the plugin dev were sneaky about it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6223]: Code cleanup and standardization for functions.php</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Thu, 11 Oct 2007 05:46:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6223</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6223/1192081617483053</guid>
      <description>&lt;p&gt;
Code cleanup and standardization for functions.php
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>left_join.diff attached to Ticket #5179</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 02:12:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5179/left_join.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5179/left_join.diff/1192068749000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5179 (Use INNER JOIN instead of LEFT JOIN for taxonomy) created</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 02:12:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5179</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5179/1192068724000000</guid>
      <description>&lt;p&gt;
We really don't need LEFT JOIN as far as I can tell. Let's use the faster INNER JOIN.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5137 (Taxonomy intersection queries are inefficient) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Thu, 11 Oct 2007 01:24:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5137#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5137#comment:15/1192065860000000</guid>
      <description>fixed: &lt;p&gt;
I think subqueries were introduced in 4.1 and we still have a 4.0 or greater dependency.  When we bump the dependency we can move to subqueries.
&lt;/p&gt;
&lt;p&gt;
I'll open another ticket about using INNER JOINs rather than LEFT JOINs.  Closing this ticket.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6222]: Introducing absint() for casting to an absolute integer. see #4762</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 22:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6222</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6222/1192054278066134</guid>
      <description>&lt;p&gt;
Introducing absint() for casting to an absolute integer. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4762" title="#4762: enhancement: new function: absint() (closed: fixed)"&gt;#4762&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #4762 (new function: absint()) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 22:11:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4762#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4762#comment:3/1192054278000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6222" title="Introducing absint() for casting to an absolute integer. see #4762"&gt;[6222]&lt;/a&gt;) Introducing absint() for casting to an absolute integer. see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4762" title="#4762: enhancement: new function: absint() (closed: fixed)"&gt;#4762&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5178 (New $wpdb methods: insert(), update()) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 22:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5178#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5178#comment:1/1192053701000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6221" title="Introducing db_insert() and db_update(), with immediate usage in ..."&gt;[6221]&lt;/a&gt;) Introducing db_insert() and db_update(), with immediate usage in wp_insert_post().  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5178" title="#5178: enhancement: New $wpdb methods: insert(), update() (closed: fixed)"&gt;#5178&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6221]: Introducing db_insert() and db_update(), with immediate usage in ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 22:01:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6221</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6221/1192053700615158</guid>
      <description>&lt;p&gt;
Introducing db_insert() and db_update(), with immediate usage in wp_insert_post().  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5178" title="#5178: enhancement: New $wpdb methods: insert(), update() (closed: fixed)"&gt;#5178&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5178 (New $wpdb methods: insert(), update()) created</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 21:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5178</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5178/1192053438000000</guid>
      <description>&lt;p&gt;
Ryan proposed these methods to me.  I cleaned them up a bit and added sanitization.
&lt;/p&gt;
&lt;pre class="wiki"&gt;	/**
	 * Insert an array of data into a table
	 * @param string $table WARNING: not sanitized!
	 * @param array $data should not already be SQL-escaped
	 * @return mixed results of $this-&amp;gt;query()
	 */
	function insert($table, $data) {
		$data = add_magic_quotes($data);
		$fields = array_keys($data);
		return $this-&amp;gt;query("INSERT INTO $table (`" . implode('`,`',$fields) . "`) VALUES ('".implode("','",$data)."')");
	}
	/**
	 * Update a row in the table with an array of data
	 * @param string $table WARNING: not sanitized!
	 * @param array $data should not already be SQL-escaped
	 * @param string $where_col the column of the WHERE statement.  WARNING: not sanitized!
	 * @param string $where_val the value of the WHERE statement.  Should not already be SQL-escaped.
	 * @return mixed results of $this-&amp;gt;query()
	 */
	function update($table, $data, $where_col, $where_val){
		$data = add_magic_quotes($data);
		$bits = array();
		foreach ( array_keys($data) as $k )
			$bits[] = "`$k`='$data[$k]'";
		$where_val = $this-&amp;gt;escape($where_val);
		return $this-&amp;gt;query("UPDATE $table SET ".implode(', ',$bits)." WHERE $where_col = '$where_val' LIMIT 1");
	}
&lt;/pre&gt;&lt;p&gt;
First place to use this is in wp_insert_post()
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5137 (Taxonomy intersection queries are inefficient) updated</title>
      
        <dc:creator>foolswisdom</dc:creator>

      <pubDate>Wed, 10 Oct 2007 21:47:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5137#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5137#comment:14/1192052859000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/5137#comment:13" title="Comment 13"&gt;Denis-de-Bernardy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
but if it's just to answer "attach a patch" like you did in your last post, just close the ticket. As much as I like WP, I've absolutely no time to waste writing patches that almost always get discarded.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Denis, you know the routine. If you are finding your issues and patches aren't getting the attention they desire then bring it up on wp-hackers. Some of your tickets aren't good reports because they lack the necessary details, and don't allow myself or anyone else to advocate the problem's correction.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5141 (wp_the_query is not stable) updated</title>
      
        <dc:creator>Nazgul</dc:creator>

      <pubDate>Wed, 10 Oct 2007 21:19:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5141#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5141#comment:5/1192051193000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5137 (Taxonomy intersection queries are inefficient) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 10 Oct 2007 20:25:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5137#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5137#comment:13/1192047946000000</guid>
      <description>&lt;p&gt;
Also, some testing will highlight that inner joins are a lot faster than left joins.
&lt;/p&gt;
&lt;p&gt;
but if it's just to answer "attach a patch" like you did in your last post, just close the ticket. As much as I like WP, I've absolutely no time to waste writing patches that almost always get discarded.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5137 (Taxonomy intersection queries are inefficient) reopened</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Wed, 10 Oct 2007 20:17:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5137#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5137#comment:12/1192047427000000</guid>
      <description>&lt;p&gt;
because if you've the code in there already... just replace:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$post_ids = $wpdb-&amp;gt;get_col($tsql);
(and the stuff that follows)
&lt;/pre&gt;&lt;p&gt;
with:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$where .= " AND $wpdb-&amp;gt;posts.ID IN ( $tsql ) ";
&lt;/pre&gt;&lt;p&gt;
it save a return trip to the sql server and some needless array processing
&lt;/p&gt;
&lt;p&gt;
D.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #4844 (Need set_post_type API) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:46:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4844#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4844#comment:3/1192045563000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4844#comment:2" title="Comment 2"&gt;ryan&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think this needs to use wp_update_post() so that all of the right actions are triggered.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
One advantage to a stand-alone function instead of just using wp_update_post() is that you don't have to know all of the post data first.
&lt;/p&gt;
&lt;p&gt;
Also, other aspects of a post can be changed without going through wp_update_post, such as categories, tags, ping URLs, and post meta-data.
&lt;/p&gt;
&lt;p&gt;
And you keep the API parallel: where there's a get_* there should be a set_* or update_*
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [6220]: check for a match against a lowercase host in wp_safe_redirect().  ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6220</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6220/1192044381410697</guid>
      <description>&lt;p&gt;
check for a match against a lowercase host in wp_safe_redirect().  props BoltClock.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5114" title="#5114: enhancement: wp_safe_redirect() case sensitive for hostnames (closed: fixed)"&gt;#5114&lt;/a&gt; for 2.3.1
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5114 (wp_safe_redirect() case sensitive for hostnames) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:26:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5114#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5114#comment:8/1192044381000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6220" title="check for a match against a lowercase host in wp_safe_redirect().  ..."&gt;[6220]&lt;/a&gt;) check for a match against a lowercase host in wp_safe_redirect().  props BoltClock.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5114" title="#5114: enhancement: wp_safe_redirect() case sensitive for hostnames (closed: fixed)"&gt;#5114&lt;/a&gt; for 2.3.1
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5114 (wp_safe_redirect() case sensitive for hostnames) reopened</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:26:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5114#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5114#comment:7/1192044373000000</guid>
      <description></description>
      <category>reopenedticket</category>
    </item><item>
      <title>Changeset [6219]: check for a match against a lowercase host in wp_safe_redirect().  ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:25:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6219</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6219/1192044323624272</guid>
      <description>&lt;p&gt;
check for a match against a lowercase host in wp_safe_redirect().  props BoltClock.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5114" title="#5114: enhancement: wp_safe_redirect() case sensitive for hostnames (closed: fixed)"&gt;#5114&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5114 (wp_safe_redirect() case sensitive for hostnames) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:25:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5114#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5114#comment:6/1192044323000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6219" title="check for a match against a lowercase host in wp_safe_redirect().  ..."&gt;[6219]&lt;/a&gt;) check for a match against a lowercase host in wp_safe_redirect().  props BoltClock.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5114" title="#5114: enhancement: wp_safe_redirect() case sensitive for hostnames (closed: fixed)"&gt;#5114&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #5114 (wp_safe_redirect() case sensitive for hostnames) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:23:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5114#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5114#comment:5/1192044197000000</guid>
      <description>&lt;p&gt;
5114.3.diff only does the strtolower() if the raw version doesn't match.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5114.3.diff attached to Ticket #5114</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:22:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5114/5114.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5114/5114.3.diff/1192044152000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5114 (wp_safe_redirect() case sensitive for hostnames) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:19:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5114#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5114#comment:4/1192043967000000</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
5114.2.diff adds a strtolower()'d version of the host into the allowed_hosts array.  So you can match by being lowercase or by matching exactly.  Milestone of 2.4 before 2.3.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>5114.2.diff attached to Ticket #5114</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 19:18:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5114/5114.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5114/5114.2.diff/1192043898000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>getcatfeedlink.diff attached to Ticket #5173</title>
      
        <dc:creator>ionfish</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:59:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5173/getcatfeedlink.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5173/getcatfeedlink.diff/1192042760000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Changeset [6218]: Output localized strings before outputting js.  Props mdawaffe. fixes ...</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:51:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6218</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6218/1192042272079939</guid>
      <description>&lt;p&gt;
Output localized strings before outputting js.  Props mdawaffe. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5177" title="#5177: defect (bug): WP_Scripts should localize first, load script second (closed: fixed)"&gt;#5177&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5177 (WP_Scripts should localize first, load script second) closed</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:51:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5177#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5177#comment:1/1192042272000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6218" title="Output localized strings before outputting js.  Props mdawaffe. fixes ..."&gt;[6218]&lt;/a&gt;) Output localized strings before outputting js.  Props mdawaffe. fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5177" title="#5177: defect (bug): WP_Scripts should localize first, load script second (closed: fixed)"&gt;#5177&lt;/a&gt; for trunk
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>5177.diff attached to Ticket #5177</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:25:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5177/5177.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5177/5177.diff/1192040709000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5177 (WP_Scripts should localize first, load script second) created</title>
      
        <dc:creator>mdawaffe</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:24:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5177</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5177/1192040690000000</guid>
      <description>&lt;p&gt;
Currently, WP_Scripts::print_scripts() loads a javascript file, and the echoes out the localized strings.
&lt;/p&gt;
&lt;p&gt;
It should first echo out the localized strings and then load the javascript file, so that the javascript file has immediate access to those strings.
&lt;/p&gt;
&lt;p&gt;
Attached.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #5169 (Posting from email addresses with "hyphen" cannot be assigned to the user) reopened</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:09:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5169#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5169#comment:8/1192039793000000</guid>
      <description>&lt;p&gt;
Nope, still doesn't work.  It leaves the user name part of the From line; the part in quotes.  e.g.:  From line is:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;From: "User Name" &amp;lt;addr@â€¦&amp;gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
But your code sets $author to:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;UserNameaddr@domain.com&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
When the rest of the code needs:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;addr@â€¦&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
The easiest thing to do might be to use the regexp from your first patch to isolate the addr@â€¦ part, &lt;em&gt;then&lt;/em&gt; call sanitize_email and is_email.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #4844 (Need set_post_type API) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:08:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4844#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4844#comment:2/1192039680000000</guid>
      <description>&lt;p&gt;
I think this needs to use wp_update_post() so that all of the right actions are triggered.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4991 (Edit post post_type should actually be the post_type) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:02:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4991#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4991#comment:3/1192039335000000</guid>
      <description>&lt;p&gt;
Since we've already fetched the post, we can use what's already there.  See post_type.diff.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>post_type.diff attached to Ticket #4991</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 10 Oct 2007 18:01:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4991/post_type.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4991/post_type.diff/1192039289000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>search_pages.diff attached to Ticket #5149</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 10 Oct 2007 17:44:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/5149/search_pages.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/5149/search_pages.diff/1192038295000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5149 (Search everything (or almost everything)) updated</title>
      
        <dc:creator>ryan</dc:creator>

      <pubDate>Wed, 10 Oct 2007 17:43:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5149#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5149#comment:2/1192038197000000</guid>
      <description>&lt;p&gt;
We'd have to run two searches then, which seems a waste.  I'd like to keep it at one search query.
&lt;/p&gt;
&lt;p&gt;
As for comments, should we directly include them in the search results or just the posts they are associated with?
&lt;/p&gt;
&lt;p&gt;
Anyhow, here's a quick patch that extends search to pages.  There's no backward-compat filtering done on them yet.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset in tests [53]: DROP the tables before install also to prevent leftover tables to do harm </title>
      
        <dc:creator>nbachiyski</dc:creator>

      <pubDate>Wed, 10 Oct 2007 17:39:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/53/tests</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/53/tests/1192037949921354</guid>
      <description>&lt;p&gt;
DROP the tables before install also to prevent leftover tables to do harm
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5173 (Replace get_category_rss_link with get_category_feed_link) updated</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 16:51:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5173#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5173#comment:6/1192035108000000</guid>
      <description>&lt;p&gt;
Getting better.  On line 150, you need to &lt;code&gt;trailingslashit($link)&lt;/code&gt; (like on the old line 138).  Otherwise, you could get:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://example.com/category/foofeed/atom"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://example.com/category/foofeed/atom&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5169 (Posting from email addresses with "hyphen" cannot be assigned to the user) closed</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 16:46:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5169#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5169#comment:7/1192034781000000</guid>
      <description>fixed: &lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6217" title="Strip From/Reply-To from e-mail before sanitizing in wp-mail.php.  ..."&gt;[6217]&lt;/a&gt;) Strip From/Reply-To from e-mail before sanitizing in wp-mail.php.  Props Bobcat.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5169" title="#5169: defect (bug): Posting from email addresses with &amp;#34;hyphen&amp;#34; cannot be assigned to the user (closed: fixed)"&gt;#5169&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [6217]: Strip From/Reply-To from e-mail before sanitizing in wp-mail.php.  ...</title>
      
        <dc:creator>markjaquith</dc:creator>

      <pubDate>Wed, 10 Oct 2007 16:46:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/6217</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/6217/1192034780774119</guid>
      <description>&lt;p&gt;
Strip From/Reply-To from e-mail before sanitizing in wp-mail.php.  Props Bobcat.  fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5169" title="#5169: defect (bug): Posting from email addresses with &amp;#34;hyphen&amp;#34; cannot be assigned to the user (closed: fixed)"&gt;#5169&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #5169 (Posting from email addresses with "hyphen" cannot be assigned to the user) reopened</title>
      
        <dc:creator>Bobcat</dc:creator>

      <pubDate>Wed, 10 Oct 2007 10:07:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5169#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5169#comment:6/1192010861000000</guid>
      <description>&lt;p&gt;
This patch doesn't work.  All emails get posted by 'admin'.  The problem is that  sanitize_email returns "FromUserNameaddr@domain.com" when the rest of the code expects simply "addr@â€¦" for looking-up the email address.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #5121 (statistics reported back from wordpress 2.3 bugged) updated</title>
      
        <dc:creator>082net</dc:creator>

      <pubDate>Wed, 10 Oct 2007 07:26:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5121#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5121#comment:13/1192001215000000</guid>
      <description>&lt;p&gt;
It works very well and by the root :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4642 (Enhanced wp-mail.php) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Wed, 10 Oct 2007 07:10:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4642#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4642#comment:6/1192000220000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/4642#comment:5" title="Comment 5"&gt;Bobcat&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Uploaded revised patch which sets the post_status based on the author's capabilities, as well as fixes the regexp that extracts the author's email address (this fixes a problem where an email address containing a "-" was not recognized).
&lt;/p&gt;
&lt;p&gt;
I'm done (pending any further comments).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good patch.
&lt;/p&gt;
&lt;p&gt;
The email address sanitization has already changed in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/6212" title="Properly sanitize e-mail addresses in wp-mail.php.  Props giannis1.  ..."&gt;[6212]&lt;/a&gt; for &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/5169" title="#5169: defect (bug): Posting from email addresses with &amp;#34;hyphen&amp;#34; cannot be assigned to the user (closed: fixed)"&gt;#5169&lt;/a&gt; could you update your patch to just do the post_status changes please.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #5160 (REQUEST_URI fix for IIS misses certain configurations) updated</title>
      
        <dc:creator>brh</dc:creator>

      <pubDate>Wed, 10 Oct 2007 03:57:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5160#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5160#comment:13/1191988621000000</guid>
      <description>&lt;p&gt;
Snakefoot's patch works for me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>