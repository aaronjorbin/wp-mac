<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #10481 (No way of determining current WP version when an upgrade is available) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 24 Jul 2009 23:35:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10481</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10481/1248478508000000</guid>
      <description>&lt;p&gt;
When a new WordPress upgrade is available, there is nowhere in the admin area that tells you the version you're currently running (the version number in the footer is replaced with an upgrade message).
&lt;/p&gt;
&lt;p&gt;
I'd like to suggest that the upgrade message in the footer is removed and left as the current version number, as the upgrade alert message shown at the top of the page is sufficient.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10476 (Option to export .zip backup before auto upgrade of wp/plugins) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 23:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10476#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10476#comment:2/1248478195000000</guid>
      <description>&lt;p&gt;
I personally do not see the need for a backup of the WP files and Plugin files.
&lt;/p&gt;
&lt;p&gt;
A simple Database export would suffice for backup purposes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10360 ($_REQUEST's slashes may differ from $_GET/$_POST) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 23:27:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10360#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10360#comment:28/1248478059000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
We all agree that relying upon slashed data in superglobals is bad. Theres no question about it.
&lt;/p&gt;
&lt;p&gt;
This is about CONSISTENCY.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$_POST['something']&lt;/code&gt; should be able to be replaced by &lt;code&gt;$_REQUEST['something']&lt;/code&gt; and act EXACTLY THE SAME. This is not currently happening due to WordPress's Slashing of data in &lt;code&gt;$_GET/$_POST&lt;/code&gt; but NOT in $_REQUEST (Which may be slashed if the server has it enabled, or not slashed otherwise..)
&lt;/p&gt;
&lt;p&gt;
The slashing of data is NOT for this ticket, and another ticket has recently been closed around it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10476 (Option to export .zip backup before auto upgrade of wp/plugins) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Fri, 24 Jul 2009 23:25:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10476#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10476#comment:1/1248477917000000</guid>
      <description>&lt;p&gt;
Definitely a good idea. I imagine people are getting a little lax now the auto upgrader is in core.
&lt;/p&gt;
&lt;p&gt;
The option of a database backup would be good too (or maybe go back to including a database backup plugin in the package?...)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10480 (Need method to display custom errors for quickedit) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Fri, 24 Jul 2009 21:34:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10480</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10480/1248471254000000</guid>
      <description>&lt;p&gt;
Some time ago I wrote &lt;a class="ext-link" href="http://wordpress.org/extend/plugins/wypiekacz/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;Wypiekacz&lt;/a&gt; plugin. It checks if post satisfies some rules. When check result is negative, plugin displays message for the logged user. Unfortunately when post is edited with quickedit, user do not get any error message. It will be good do add mechanism do return custom error message to the client for quickedit.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10478 (Quickediting pending post adds extra column to post list) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Fri, 24 Jul 2009 21:18:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10478#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10478#comment:4/1248470296000000</guid>
      <description>&lt;p&gt;
One more thing to discuss: how this should work for custom post types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10478 (Quickediting pending post adds extra column to post list) updated</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Fri, 24 Jul 2009 21:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10478#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10478#comment:3/1248470216000000</guid>
      <description>&lt;p&gt;
After quick investigation I have found in file inline-edit-post.dev.js two following lines (224-225). Looks that we need to add pending check here too:
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( 'draft' == $('input[name="post_status"]').val() )
	row.find('td.column-comments').hide();
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10462 (WordPress export and import should support sticky post status) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 24 Jul 2009 21:13:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10462#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10462#comment:1/1248470028000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10454 (Add support for setting users_can_register option via XML-RPC and ...) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 24 Jul 2009 21:13:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10454#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10454#comment:2/1248470008000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10478 (Quickediting pending post adds extra column to post list) reopened</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Fri, 24 Jul 2009 21:03:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10478#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10478#comment:2/1248469427000000</guid>
      <description>&lt;p&gt;
Tried this without plugins and with default theme - the same result.
&lt;/p&gt;
&lt;p&gt;
Make sure you open wp-admin/edit.php?post_status=pending page - this bug exhibits on this particular page only.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10479 (Prevent create empty "span" tags one edit media page) created</title>
      
        <dc:creator>Simek</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:59:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10479</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10479/1248469175000000</guid>
      <description>&lt;p&gt;
Prevent create empty "span" tags one edit media page.
&lt;/p&gt;
&lt;p&gt;
Simple patch, probably better solution is available, because I'm not professional PHP programmer.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10477 (jquery ain't working on 2.9-Nightly Build) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10477#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10477#comment:2/1248468209000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10477" title="#10477: defect (bug): jquery ain't working on 2.9-Nightly Build (closed: invalid)"&gt;pbrouwers&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
When I had installed the Nightly Build jquery didn't work anymore.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You mean no Javascript is working in WordPress (jQuery is used extensively in the admin)? More info would certainly be needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10478 (Quickediting pending post adds extra column to post list) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10478#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10478#comment:1/1248467883000000</guid>
      <description>worksforme: &lt;p&gt;
please try it without any plugins, and using the default theme
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10477 (jquery ain't working on 2.9-Nightly Build) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:33:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10477#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10477#comment:1/1248467624000000</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10475 (wp-blog-header.php wiping out $_REQUEST array) closed</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:32:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10475#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10475#comment:2/1248467530000000</guid>
      <description>duplicate: &lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10360" title="#10360: defect (bug): $_REQUEST's slashes may differ from $_GET/$_POST (closed: fixed)"&gt;#10360&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10420 (wp_mail fails to send to multiple recipients) updated</title>
      
        <dc:creator>pkthree</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10420#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10420#comment:4/1248467368000000</guid>
      <description>&lt;p&gt;
patmcnally's idea gets my +1
&lt;/p&gt;
&lt;p&gt;
You could also support both comma separated lists and arrays in the $to variable with this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;// Set destination address(es)
// Accept either a comma-separated list or an array
$to = explode( ',', implode( ',', (array) $to ) );
foreach ( $to as $to_recipient ) {
    $phpmailer-&amp;gt;AddAddress( trim( $to_recipient ) );
}
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10478 (Quickediting pending post adds extra column to post list) created</title>
      
        <dc:creator>sirzooro</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:03:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10478</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10478/1248465816000000</guid>
      <description>&lt;p&gt;
Steps do reproduce:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;create post and move is to Pending state;
&lt;/li&gt;&lt;li&gt;go to Posts / Edit and click on "Pending" to show posts in Pending state only;
&lt;/li&gt;&lt;li&gt;open quickedit form, change something and save changes.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
After save WP will add extra column to the table with posts. It contains link to edit-comments.php?p=ID page.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10477 (jquery ain't working on 2.9-Nightly Build) created</title>
      
        <dc:creator>pbrouwers</dc:creator>

      <pubDate>Fri, 24 Jul 2009 20:01:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10477</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10477/1248465698000000</guid>
      <description>&lt;p&gt;
When I had installed the Nightly Build jquery didn't work anymore.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10424 (change get_filesystem_method()'s code for direct to reflect actual purpose) updated</title>
      
        <dc:creator>filosofo</dc:creator>

      <pubDate>Fri, 24 Jul 2009 19:55:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10424#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10424#comment:6/1248465336000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10424#comment:5" title="Comment 5"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Checking the file owner of the temporary file is not needed.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Except it is. And i'm not going to  explain in this comment today the reasonings of it.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Could you link to an explanation that provides the reasoning?  Because I've searched for it and at least skimmed over all the tickets &lt;a class="ext-link" href="http://core.trac.wordpress.org/ticket/10423#comment:2"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;your search links to&lt;/a&gt;.  The best I could turn up is that it "creates problems," but I haven't yet found what those problems are.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10290 (Images uploaded via WLW do not add to Gallery) updated</title>
      
        <dc:creator>laullon</dc:creator>

      <pubDate>Fri, 24 Jul 2009 18:28:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10290#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10290#comment:8/1248460098000000</guid>
      <description>&lt;p&gt;
It happens too if the post is create by the admin UI.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10476 (Option to export .zip backup before auto upgrade of wp/plugins) created</title>
      
        <dc:creator>williamsba1</dc:creator>

      <pubDate>Fri, 24 Jul 2009 17:53:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10476</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10476/1248457994000000</guid>
      <description>&lt;p&gt;
Has there been any discussion on an option to export WP and plugin files in a zip before the auto upgrade process begins for either?  The upgrade process is so easy now most users don't take proper backups first.
&lt;/p&gt;
&lt;p&gt;
I'd be glad to work on a patch file, but wanted to get thoughts on this feature first?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10475 (wp-blog-header.php wiping out $_REQUEST array) updated</title>
      
        <dc:creator>mitchkramez</dc:creator>

      <pubDate>Fri, 24 Jul 2009 17:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10475#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10475#comment:1/1248456572000000</guid>
      <description>&lt;p&gt;
here's the result with the require commented out:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array
(
    [handle] =&amp;gt; 1
    [MintUnique] =&amp;gt; 1
    [kramez-shoutbox-name] =&amp;gt; mitch
    [wp-settings-time-1] =&amp;gt; 1243301960
    [wp-settings-1] =&amp;gt; m0=c&amp;amp;m1=o&amp;amp;m2=c&amp;amp;m3=c&amp;amp;m4=c&amp;amp;m5=o&amp;amp;m6=c&amp;amp;m7=c&amp;amp;m8=c&amp;amp;m9=c&amp;amp;m10=c&amp;amp;mfold=f&amp;amp;editor=html&amp;amp;imgsize=full
    [wp-settings-time-0] =&amp;gt; 1228958321
    [MintAuth] =&amp;gt; 15ecb76a151e77be34b11a2ebd8f0fd7
    [testvar1] =&amp;gt; 1
    [testvar2] =&amp;gt; 1
    [testvar3] =&amp;gt; 1
)
Array
(
    [postvar] =&amp;gt; 1
)
&lt;/pre&gt;&lt;p&gt;
here's the result with the require in place:
&lt;/p&gt;
&lt;pre class="wiki"&gt;Array
(
    [handle] =&amp;gt; 1
    [postvar] =&amp;gt; 1
)
Array
(
    [postvar] =&amp;gt; 1
)
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10475 (wp-blog-header.php wiping out $_REQUEST array) created</title>
      
        <dc:creator>mitchkramez</dc:creator>

      <pubDate>Fri, 24 Jul 2009 17:16:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10475</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10475/1248455810000000</guid>
      <description>&lt;p&gt;
I'm not sure when this started happening, but i'm guessing 2.8... i've confirmed this with 2.8.1 and 2.8.2:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;?
$_POST['postvar'] = 1;
$_REQUEST['testvar1'] = 1;
$_REQUEST['testvar2'] = 1;
$_REQUEST['testvar3'] = 1;
require_once($_SERVER['DOCUMENT_ROOT'].'/wp-blog-header.php');
?&amp;gt;
&amp;lt;pre&amp;gt;&amp;lt;? print_r($_REQUEST) ?&amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;pre&amp;gt;&amp;lt;? print_r($_POST) ?&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/pre&gt;&lt;p&gt;
if you do try this you'll see your request array is blank after the require... It seems to me this is a bug. If you need to use wp functions outside of wp, you need to include the wp-blog-header.php file... and with custom url rewriting for the other non wp parts of the site storing variables in the request array. If you pass the variable in on the query string it works fine.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10467 (Add a filter for changing where parent templates are located) updated</title>
      
        <dc:creator>josephscott</dc:creator>

      <pubDate>Fri, 24 Jul 2009 16:24:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10467#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10467#comment:6/1248452648000000</guid>
      <description>&lt;p&gt;
+1 to westi's suggestion of just making WP aware of multiple paths that contain themes.  With the appropriate filters and hooks so that plugins and themes can tweak them as needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10467 (Add a filter for changing where parent templates are located) updated</title>
      
        <dc:creator>westi</dc:creator>

      <pubDate>Fri, 24 Jul 2009 15:57:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10467#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10467#comment:5/1248451023000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think it would be better to make the functionality explicit.
&lt;/p&gt;
&lt;p&gt;
So make WordPress understand the concept of a number of directories containing themes.
&lt;/p&gt;
&lt;p&gt;
Give plugins the ability to register_theme_folder() where one or more themes lives
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10467 (Add a filter for changing where parent templates are located) updated</title>
      
        <dc:creator>apeatling</dc:creator>

      <pubDate>Fri, 24 Jul 2009 15:37:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10467#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10467#comment:4/1248449843000000</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;
But it would mean the Core handles most of the work and its done right everytime, not half-baked by a dodgy plugin or 2. (Of course, its not worth protecting against 1 or 2 dodgies, its a fact of life)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
You do have to protect against this. In the second patch I've added a reset to the themes loop that will undo the filtered values. That way it's only possible to filter the values for a specific theme and not mess up any others.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 24 Jul 2009 15:31:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:61</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:61/1248449509000000</guid>
      <description>&lt;p&gt;
Comments on posts in the Trash are  now hidden. This concept seems to me to work well.
&lt;/p&gt;
&lt;p&gt;
We &lt;em&gt;could&lt;/em&gt; make it so that they are shown on the list of comments specific to the deleted post (when you click the comment bubble next to a post) but not on the main comments list, but that would be more complex and possibly confusing.&lt;br /&gt;
It might be a good idea to add a note somewhere - eg above the comments trash - to the effect that comments are not shown on trashed posts, or that might not be necessary.
&lt;/p&gt;
&lt;p&gt;
Unless there are any issues with the interface I think this is basically done now for posts and pages.
&lt;/p&gt;
&lt;p&gt;
Should I extend it to media? And what about links? Personally I don't think trash for links is needed. It might be nice for media though.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>delete-post.3.diff attached to Ticket #4529</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 24 Jul 2009 15:24:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4529/delete-post.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4529/delete-post.3.diff/1248449043000000</guid>
      <description>&lt;p&gt;
Hides comments on posts which are in the trash.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>delete-post.2.diff attached to Ticket #4529</title>
      
        <dc:creator>caesarsgrunt</dc:creator>

      <pubDate>Fri, 24 Jul 2009 12:38:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/4529/delete-post.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/4529/delete-post.2.diff/1248439118000000</guid>
      <description>&lt;p&gt;
Trash for posts and pages, revision 2
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>navjotjsingh</dc:creator>

      <pubDate>Fri, 24 Jul 2009 10:55:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:29/1248432911000000</guid>
      <description>&lt;p&gt;
The content of the post seen is the exact content which I posted. Posted for reference:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[freshfont id=acmesa name="A.C.M.E. Secret Agent Font"]
&amp;lt;h4&amp;gt;Included Fonts:&amp;lt;/h4&amp;gt;
&amp;lt;h4&amp;gt;A.C.M.E. Secret Agent Italic Font&amp;lt;/h4&amp;gt;
[freshfont id=acmesai name="A.C.M.E. Secret Agent Italic Font"]
&amp;lt;h4&amp;gt;A.C.M.E. Secret Agent Bold Font&amp;lt;/h4&amp;gt;
[freshfont name="A.C.M.E. Secret Agent Bold Font" id=acmesab]
&amp;lt;h4&amp;gt;Download&amp;lt;/h4&amp;gt;
[download id="11,12"]
&lt;/pre&gt;&lt;pre class="wiki"&gt;[freshfont id=AARVC___ name="Aarvark Cafe Font"][/freshfont]
 [download id="1,2"]
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 10:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:28/1248431478000000</guid>
      <description>&lt;p&gt;
@navjotjsingh: Without knowing the full raw post content, bit hard to help..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>navjotjsingh</dc:creator>

      <pubDate>Fri, 24 Jul 2009 10:28:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:27/1248431317000000</guid>
      <description>&lt;p&gt;
Here are some of my posts where it does not work on 2.8.2: &lt;a class="ext-link" href="http://www.freshfonts.info/acme-secret-agent-font/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.freshfonts.info/acme-secret-agent-font/&lt;/a&gt; and &lt;a class="ext-link" href="http://www.freshfonts.info/aarvark-cafe-font/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.freshfonts.info/aarvark-cafe-font/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10452 (Wordpress pollutes POST data) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 10:05:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10452#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10452#comment:17/1248429929000000</guid>
      <description>&lt;p&gt;
Not that all hope is lost, Mearly that sanity prevails. People whinge when you break backwards compatility, people complain when you dont, Its easier for the millions of end users to break a lot of back-compat at once, rather than cause an ongoing pain.
&lt;/p&gt;
&lt;p&gt;
/me is going to stop replying to this ticket for everyones sake
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 10:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:26/1248429798000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 10082.3.diff added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;I couldnt see any other way of doing nested shortcodes with the suggested regex of denis's, But I cant see a better way of doing that regex either, Its exactly what i was thinking of changing it to (well close enough i'd have got there)
&lt;/li&gt;&lt;li&gt;Strips out the 2nd use of $tagregex in the regex instead only stopping on the closing tag of the CURRENTLY MATCHED shortcode
&lt;/li&gt;&lt;li&gt;ie. &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/1" title="New repository initialized by cvs2svn."&gt;[1]&lt;/a&gt;&lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/2" title="*** empty log message ***
"&gt;[2]&lt;/a&gt;....&lt;a href="http://core.trac.wordpress.org/2"&gt;2&lt;/a&gt;&lt;a href="http://core.trac.wordpress.org/1"&gt;1&lt;/a&gt; 1 will only match a closing 1 not the closing 2 (Which results in a &lt;a href="http://core.trac.wordpress.org/1"&gt;1&lt;/a&gt; left in the post content otherwise)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
This still needs testing, I've not attempted running the test set yet, other than the test-data posts i've just setup.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10082.3.diff attached to Ticket #10082</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 10:00:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10082/10082.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10082/10082.3.diff/1248429626000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:51:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:25/1248429100000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
attachment 10082.2.diff added
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;&lt;li&gt;Main changes from denis's patch:
&lt;/li&gt;&lt;li&gt;Switches from using \b to  a custom assertion so as to allow shortcodes with - in them
&lt;/li&gt;&lt;li&gt;removes $begin / $end from the return, as its not needed since they only match []'s, which is short-circuited earlier in the function anyway
&lt;/li&gt;&lt;li&gt;+ =&amp;gt; * there somewhere, to allow for [tag]&lt;a href="http://core.trac.wordpress.org/tag"&gt;tag&lt;/a&gt; (previously, it would just not match &lt;a href="http://core.trac.wordpress.org/tag"&gt;tag&lt;/a&gt; with an empty content, leaving a closing shortcode in the post)
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Just looking into the still-valid nested shortcodes now though.. which this patch might not help either
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10082.2.diff attached to Ticket #10082</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:46:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10082/10082.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10082/10082.2.diff/1248428777000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10473 (Shortcode parser in is flawed) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:41:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10473#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10473#comment:5/1248428473000000</guid>
      <description>duplicate: &lt;p&gt;
Issue 1 &amp;amp; 2 are covered by &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt; (even though it has a few bugs)
&lt;/p&gt;
&lt;p&gt;
Issue 3 related to dashes is caused by the use of \b in the regular expression, Which is fixed in a edit to a patch on that ticket i'm about to submit. Closing as a Duplicate of that.
&lt;/p&gt;
&lt;p&gt;
If you've still got any issues with the shortcodes after testing MY patch which i'll add to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt; shortly, open a new ticket with just that issue.. Its just too hard to see if every fine detail you've mentioned is matched.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10473 (Shortcode parser in is flawed) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:29:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10473#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10473#comment:4/1248427768000000</guid>
      <description>&lt;p&gt;
yep, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt; contains many of the issues here.. And some are fixed.. See comment on that ticket on my testing of it shortly.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10452 (Wordpress pollutes POST data) updated</title>
      
        <dc:creator>bilge</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10452#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10452#comment:16/1248427634000000</guid>
      <description>&lt;p&gt;
If he is the lead then this project really has lost all hope. At least something useful has come from this in that I learn this is not an application one should be deploying for clients to use, but I suppose you get what you pay for.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10452 (Wordpress pollutes POST data) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:23:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10452#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10452#comment:15/1248427401000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
So by your own admission, if someone else opened this ticket it wouldn't have been closed, even though that's contrary to the point you were trying to make.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes, In my opinion, If a core Developer (Who i am not, Nor who can i speak on behalf of) opened it, then It'd have been left up to that developer as to close it, or to leave it open if they were to change it in the near future. Given Ryan closed it however.. Probably wouldn't've matered since he's the lead.
&lt;/p&gt;
&lt;p&gt;
My points still stand.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10473 (Shortcode parser in is flawed) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:19:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10473#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10473#comment:3/1248427196000000</guid>
      <description>&lt;p&gt;
see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt;, and related tickets
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10470 (more pages for posts - displayed by category) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:17:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10470#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10470#comment:3/1248427023000000</guid>
      <description>&lt;p&gt;
for trunk, rather.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10452 (Wordpress pollutes POST data) updated</title>
      
        <dc:creator>bilge</dc:creator>

      <pubDate>Fri, 24 Jul 2009 09:10:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10452#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10452#comment:14/1248426633000000</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/10452#comment:13" title="Comment 13"&gt;dd32&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
if a Core Dev  did.. [...] it'd probably sit around open
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
So by your own admission, if someone else opened this ticket it wouldn't have been closed, even though that's contrary to the point you were trying to make.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10473 (Shortcode parser in is flawed) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Fri, 24 Jul 2009 08:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10473#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10473#comment:2/1248423400000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Priority&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This would've been far easier managed as separate tickets. They are all separate issues and some easier fixed than others. (the latter 2 for example are easy, the first is very hard due to regular expressions being used and backtrace limits)
&lt;/p&gt;
&lt;p&gt;
I can confirm your first test data example, It might be relitivly easy to ensure that the start-tag of the current shortcode is not in the matched data. As for the new-lines-within-shortcodes issue, I wouldnt hold your breath there, Texturize is applied to the inside of the shortcodes too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Jul 2009 07:53:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:60/1248421988000000</guid>
      <description>&lt;p&gt;
Changed couple of names to make them a bit more semantic and moved the scheduled delete function to functions.php.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #4529 ("Trash" status for comments and posts) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Jul 2009 07:23:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/4529#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/4529#comment:59/1248420193000000</guid>
      <description>&lt;p&gt;
(In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/11741" title="&amp;#34;Trash&amp;#34; status for comments updates, props caesarsgrunt, see #4529"&gt;[11741]&lt;/a&gt;) "Trash" status for comments updates, props caesarsgrunt, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [11741]: "Trash" status for comments updates, props caesarsgrunt, see #4529</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Fri, 24 Jul 2009 07:23:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/11741</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/11741/1248420191235461</guid>
      <description>&lt;p&gt;
"Trash" status for comments updates, props caesarsgrunt, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/4529" title="#4529: task (blessed): &amp;#34;Trash&amp;#34; status for comments and posts (closed: fixed)"&gt;#4529&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #10126 (Warning upon saving draft page) updated</title>
      
        <dc:creator>tobiasheuken</dc:creator>

      <pubDate>Fri, 24 Jul 2009 04:47:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10126#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10126#comment:20/1248410852000000</guid>
      <description>&lt;p&gt;
I also can see this error when I install a complete NEW blog @ all-inkl.com with the latest original files / latest WP-Version which I can download from wordpress-deutschland.org
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10473 (Shortcode parser in is flawed) updated</title>
      
        <dc:creator>navjotjsingh</dc:creator>

      <pubDate>Fri, 24 Jul 2009 02:18:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10473#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10473#comment:1/1248401927000000</guid>
      <description>&lt;p&gt;
I don't know howcome they are still rendering on your site but here on my live site every shortcode is coming unparsed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>navjotjsingh</dc:creator>

      <pubDate>Fri, 24 Jul 2009 02:13:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:24/1248401585000000</guid>
      <description>&lt;p&gt;
I can even give example of a site where none of the shortcodes are working - not even one!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>comment.php.diff attached to Ticket #10474</title>
      
        <dc:creator>brianwhite</dc:creator>

      <pubDate>Fri, 24 Jul 2009 00:46:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10474/comment.php.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10474/comment.php.diff/1248396371000000</guid>
      <description>&lt;p&gt;
Patch that adds closing quote
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10474 (Missing Quote in comment.php) created</title>
      
        <dc:creator>brianwhite</dc:creator>

      <pubDate>Fri, 24 Jul 2009 00:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10474</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10474/1248396334000000</guid>
      <description>&lt;p&gt;
A single quite is missing in the onclick JavaScript function behind the Spam/Delete/Approve Comment button in /wp-admin/comment.php.  This causes a JavaScript error In Internet Explorer 8 whenever you access the page to approve a moderated comment.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10082 (Shortcodes need a character separating them to work) updated</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Thu, 23 Jul 2009 23:40:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10082#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10082#comment:23/1248392455000000</guid>
      <description>&lt;p&gt;
Opened ticket &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10473" title="#10473: defect (bug): Shortcode parser in is flawed (closed: duplicate)"&gt;#10473&lt;/a&gt;, not exactly the same problem, but would probably be of interest for those who have commented on and contributed to this ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10473 (Shortcode parser in is flawed) created</title>
      
        <dc:creator>godfreykfc</dc:creator>

      <pubDate>Thu, 23 Jul 2009 23:27:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10473</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10473/1248391657000000</guid>
      <description>&lt;p&gt;
There are several critical flaws in the shortcode parser. I'm using 2.8.2. This probably deserves multiple tickets but I think grouping them all here will be easier for the maintainers to follow up (because a single patch that fixes one of the following might break the others):
&lt;/p&gt;
&lt;p&gt;
Problem 1: It doesn't work properly, at all!
&lt;/p&gt;
&lt;p&gt;
Plugin code:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function some_handler($atts, $content){
    return "**BEGIN** Content: '{$content}' **END**";
}
function my_init() {
    add_shortcode('sc', 'some_handler');
}
add_action('init','my_init');
&lt;/pre&gt;&lt;p&gt;
Post content:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1[sc]1
2[sc]with content[/sc]2
3[sc /]3
4[sc]with content[/sc]4
5[sc with="attr"][/sc]5
6[sc with="attr"]and content[/sc]6
7[sc]7
8multiple line content8
9[/sc]9
&lt;/pre&gt;&lt;p&gt;
I apologize if this is a bit hard to read, but the idea is every line should be a self contained shortcode (except 7-9 which is one big fat chunk of short code). I'm adding the line number before and after the tag so that you can see clearly what's going on. (I'm not even testing the single line shortcode fail as described in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/10082" title="#10082: defect (bug): Shortcodes need a character separating them to work (closed: fixed)"&gt;#10082&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Expected HTML output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;1**BEGIN** Content: '' **END**1&amp;lt;br /&amp;gt;
2**BEGIN** Content: 'with content' **END**2&amp;lt;br /&amp;gt;
3**BEGIN** Content: '' **END**3&amp;lt;br /&amp;gt;
4**BEGIN** Content: 'with content' **END**4&amp;lt;br /&amp;gt;
5**BEGIN** Content: '' **END**5&amp;lt;br /&amp;gt;
4**BEGIN** Content: 'and content' **END**4&amp;lt;br /&amp;gt;
7**BEGIN** Content: '7
8multiple line content8
9' **END**9
&lt;/pre&gt;&lt;p&gt;
Should be fairly straight forward. But the ACTUAL HTML output blew my mind...
&lt;/p&gt;
&lt;pre class="wiki"&gt;1**BEGIN** Content: '1&amp;lt;br /&amp;gt;
2[sc]with content' **END**2&amp;lt;br /&amp;gt;
3**BEGIN** Content: '3&amp;lt;br /&amp;gt;
4[sc]with content' **END**4&amp;lt;br /&amp;gt;
5**BEGIN** Content: '[/sc]5&amp;lt;br /&amp;gt;
6[sc with="attr"]and content' **END**6&amp;lt;br /&amp;gt;
7**BEGIN** Content: '7&amp;lt;br /&amp;gt;
8multiple line content8&amp;lt;br /&amp;gt;
9' **END**9
&lt;/pre&gt;&lt;p&gt;
Problem 1.1:
New lines inside a shortcode should not be converted to &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; tags, at least when they are entered in the HTML (non-visual) editor. This is perhaps more of an enhancement than defect, but it makes it pretty much impossible to create shortcodes that would take multiple lines content. If it's a desire behavior for that particular shortcode, it should be up to the author to call a function like nl2br to convert those new lines.
&lt;/p&gt;
&lt;p&gt;
Problem 1.2:
Using the same shortcode back-to-back would make the parse spill, even if they are on different lines. For example, the parser picked up the opening tag from the first line and the closing tag from the second line. What is even more weird is that it happens even when the shortcode tag is self-closed (see line 3-4).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Problem 2:
Incorrect types of arguments being passed into the handler function.
&lt;/p&gt;
&lt;pre class="wiki"&gt;function some_handler($atts, $content = null){
    var_dump($atts);
    var_dump($content);
}
function my_init() {
    add_shortcode('sc', 'some_handler');
}
add_action('init','my_init');
&lt;/pre&gt;&lt;p&gt;
Post content:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[sc]
&lt;/pre&gt;&lt;p&gt;
Output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string '' (length=0)
string '' (length=0)
&lt;/pre&gt;&lt;p&gt;
Problem 2.1:
According to the &lt;a class="ext-link" href="http://codex.wordpress.org/Shortcode_API"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;documentation&lt;/a&gt;, $content should be null when the tag is self-closed and it can be checked by is_null($content). In reality, it doesn't matter if you use &lt;code&gt;[sc]&lt;/code&gt; or &lt;code&gt;[sc /]&lt;/code&gt; or &lt;code&gt;[sc][/sc]&lt;/code&gt;, they would all pass in an empty String instead of null. If this is the desired behavior, the documentation should be updated. (But I believe there are benefits when you can actually distinguish between empty content and no content.)
&lt;/p&gt;
&lt;p&gt;
Problem 2.2:
What makes me stretch my head even more is the behavior when no attributes are given. Intuitively &lt;code&gt;$atts&lt;/code&gt; should be an empty array when no arguments are passed in, so that you can loop through it using iterators like &lt;code&gt;foreach()&lt;/code&gt; without the fear of it throwing an error. (Or at least it should be null..) However, when no arguments are there an empty string is passed in. This does not make a lot of sense, but if for some reason that is the intended behavior then the documentation should be updated too.
&lt;/p&gt;
&lt;p&gt;
Some of you may argue that it doesn't matter because you are suppose to normalize it using &lt;code&gt;shortcode_atts()&lt;/code&gt; before you do anything else, and it seems to handle empty strings just fine. However, this is not always possible. For instance, according to the API, unnamed attributes are supported and they will be passed in as items with numeric keys. However, there aren't any good ways to make &lt;code&gt;shortcode_atts()&lt;/code&gt; keep the numeric-keyed items in the array except naming all of them explicitly in the default, i.e. &lt;code&gt;shortcode_atts(array( 0=&amp;gt;'', 1=&amp;gt;'', 2=&amp;gt;''....),$atts);&lt;/code&gt;. (And even if you're fine with doing that, you can't really pass that normalized array into &lt;code&gt;extract()&lt;/code&gt; because it'd just skip them. This might be considered as a defect of &lt;code&gt;shortcode_atts()&lt;/code&gt;, but I am not going to touch that part. So, in order to extract your unnamed attributes, you would have to loop through the array and do your stuff before passing it into &lt;code&gt;shortcode_atts()&lt;/code&gt;. So the differences between an empty array and an empty string DOES matter.
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Problem 3:
&lt;/p&gt;
&lt;p&gt;
This is by far the most critical flaw of the parser and it does not require much explanation:
&lt;/p&gt;
&lt;pre class="wiki"&gt;function sc_handler($atts, $content = null){
	return "A [sc] shortcode.";
}
function scalar_handler($atts, $content = null){
	return "A [scalar] shortcode.";
}
function sc_extend_handler($atts, $content = null){
	return "A [sc-extend] shortcode.";
}
function my_init() {
  add_shortcode('sc', 'sc_handler');
  add_shortcode('scalar', 'sc_handler');
	add_shortcode('sc-extend', 'sc_extend_handler');
}
add_action('init','my_init');
&lt;/pre&gt;&lt;p&gt;
Post content:
&lt;/p&gt;
&lt;pre class="wiki"&gt;[sc]
[scalar]
[sc-extend]
&lt;/pre&gt;&lt;p&gt;
HTML output:
&lt;/p&gt;
&lt;pre class="wiki"&gt;A [sc] shortcode.
A [scalar] shortcode.
A [sc] shortcode.
&lt;/pre&gt;&lt;p&gt;
If you make it do a &lt;code&gt;var_dump()&lt;/code&gt; on $atts you will have a better idea of what's going on:
&lt;/p&gt;
&lt;p&gt;
[sc]:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string '' (length=0)
&lt;/pre&gt;&lt;p&gt;
[scalar]:
&lt;/p&gt;
&lt;pre class="wiki"&gt;string '' (length=0)
&lt;/pre&gt;&lt;p&gt;
[sc-extend]:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array
  0 =&amp;gt; string '-extend' (length=7)
&lt;/pre&gt;&lt;p&gt;
This is obviously very bad. For example, if someone registered a shortcode 'rss', anything that starts with 'rss' and includes a dash ('rss-fetch' or something) would fail. Throughout my testing, shortcode names with dashes seems to be causing a lot of issues (but according to the documentation it's fully supported, it's even used in oen of the examples). I haven't looked into the code yet, but are we even escaping those dashes before sticking it into the pattern?
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10129 (Tags are not saved) updated</title>
      
        <dc:creator>Beee</dc:creator>

      <pubDate>Thu, 23 Jul 2009 22:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10129#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10129#comment:18/1248388438000000</guid>
      <description>&lt;p&gt;
since WP super cache is compatible up to 2.8.1
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10129 (Tags are not saved) updated</title>
      
        <dc:creator>Beee</dc:creator>

      <pubDate>Thu, 23 Jul 2009 22:12:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10129#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10129#comment:17/1248387134000000</guid>
      <description>&lt;p&gt;
WP super cache or some other one ????
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10467 (Add a filter for changing where parent templates are located) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 23 Jul 2009 21:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10467#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10467#comment:3/1248386390000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
@dd32: That is another option, but it sounds as though it would probably be hacky. Doing it this way at least keeps within the standard way of activating and loading themes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I guess your method would work alright, Just as long as its possible to filter both the source dir for the theme, and be able to inject it into the themes array early enough not to set off any alarm bells over incomplete themes.
&lt;/p&gt;
&lt;p&gt;
The way i see it, My method is mearly a wrapper around the filters you're describing basically, much like the plugin activate hooks. But it would mean the Core handles most of the work and its done right everytime, not half-baked by a dodgy plugin or 2. (Of course, its not worth protecting against 1 or 2 dodgies, its a fact of life)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10471 (Phase out the use of the global keyword) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 23 Jul 2009 21:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10471#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10471#comment:1/1248385866000000</guid>
      <description>&lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt;, &lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I dont think this'll be done anytime soon honestly.
&lt;/p&gt;
&lt;p&gt;
You are right about variable conflicts, and its annoying as hell sometimes, but many themes and plugins also rely upon the global vars being available at this stage, many of the API functions/filters do not pass enough information right now for it to be avoided.
&lt;/p&gt;
&lt;p&gt;
In order to this, its going to require a lot of back-compat breaking and a lot of filter/action re-working (mainly adding args). This can basically be thrown on the pile of items which would be great in core, we just need a release where we can break a lot of back-compat with.
&lt;/p&gt;
&lt;p&gt;
IMO some vars should stay, $post and the like for example, but as many vars which are unexpected should go, along with vars which are actually objects (rewrite, query, etc)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10129 (Tags are not saved) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 23 Jul 2009 21:44:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10129#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10129#comment:16/1248385473000000</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Yes, on ALL my sites
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Then you better start bugging the developer if you wish to continue using it, as its only compatible with WordPress 2.7 at this stage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10129 (Tags are not saved) updated</title>
      
        <dc:creator>Beee</dc:creator>

      <pubDate>Thu, 23 Jul 2009 21:38:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10129#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10129#comment:15/1248385134000000</guid>
      <description>&lt;p&gt;
Yes, on ALL my sites
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10467 (Add a filter for changing where parent templates are located) updated</title>
      
        <dc:creator>apeatling</dc:creator>

      <pubDate>Thu, 23 Jul 2009 17:00:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10467#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10467#comment:2/1248368402000000</guid>
      <description>&lt;p&gt;
@dd32: That is another option, but it sounds as though it would probably be hacky. Doing it this way at least keeps within the standard way of activating and loading themes.
&lt;/p&gt;
&lt;p&gt;
I've updated the patch as the $theme_loc needs to be filtered too so that the "Available Themes" screen accurately reflects the location of the parent template. The variables also need to be unfiltered at the beginning of each iteration, as to not filter the template location of other themes.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>parent_theme_root-2.patch attached to Ticket #10467</title>
      
        <dc:creator>apeatling</dc:creator>

      <pubDate>Thu, 23 Jul 2009 16:59:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10467/parent_theme_root-2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10467/parent_theme_root-2.patch/1248368390000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 23 Jul 2009 16:52:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469#comment:7/1248367973000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9642 (Database Schema Optimizations) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 23 Jul 2009 16:52:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9642#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9642#comment:21/1248367944000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #7415 ("using filesort" in default install) updated</title>
      
        <dc:creator>aaroncampbell</dc:creator>

      <pubDate>Thu, 23 Jul 2009 16:52:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/7415#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/7415#comment:38/1248367925000000</guid>
      <description>&lt;i&gt;Cc&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10472 (Image alt attribute values can contain &amp; in posts) closed</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 23 Jul 2009 16:36:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10472#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10472#comment:2/1248366981000000</guid>
      <description>invalid: &lt;p&gt;
Report in Error.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #10472 (Image alt attribute values can contain &amp; in posts) updated</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 23 Jul 2009 16:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10472#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10472#comment:1/1248366604000000</guid>
      <description>&lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10472 (Image alt attribute values can contain &amp; in posts) created</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 23 Jul 2009 16:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10472</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10472/1248366582000000</guid>
      <description>&lt;p&gt;
I just had this with a 2.8.2. Alt text in manually added images (not a gallery but via the image button) are not properly encoded. In this case '&amp;amp;' was not converted to '&amp;amp;amp;' in the output.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10471 (Phase out the use of the global keyword) created</title>
      
        <dc:creator>prettyboymp</dc:creator>

      <pubDate>Thu, 23 Jul 2009 13:05:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10471</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10471/1248354349000000</guid>
      <description>&lt;p&gt;
I'd like to request phasing out the use of the global keyword in exchange for get current instance methods.  There are a couple reasons for this:&lt;br /&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt; Help reduce development errors by reducing the risk of variable name conflicts.  I've often run into issues where I will name a local variable something before calling a core function that uses a global variable named the same thing. &lt;br /&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt; Clean up duplicate code.  Lines like the below would only need to exist in the get method.
&lt;pre class="wiki"&gt;global $wp_styles;
if ( !is_a($wp_styles, 'WP_Styles') ) $wp_styles = new WP_Styles();
&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
When doing this, the super globals would still need to be available for backwards compatibility.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) updated</title>
      
        <dc:creator>_ck_</dc:creator>

      <pubDate>Thu, 23 Jul 2009 11:48:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469#comment:6/1248349688000000</guid>
      <description>&lt;p&gt;
Thanks for investigating further. Be sure to use realworld database sizes if possible of course.
&lt;/p&gt;
&lt;p&gt;
In theory you could have the best of both worlds, ie. keep the option for SQL_CALC_FOUND_ROWS in the core as a fallback and work around it using a separate COUNT() query when you know it will be faster. This is how bbPress 1.0 currently handles it, since SQL_CALC_FOUND_ROWS was folded back in it's core via backPress.
&lt;/p&gt;
&lt;p&gt;
I suspect this other idea is outside the realm of hope for a near-future improvement, but in theory the total query count should be stored per session, that way during pagination the more expensive total rows query is not repeated on every page load for that user.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #9642 (Database Schema Optimizations) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 23 Jul 2009 11:46:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/9642#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/9642#comment:20/1248349579000000</guid>
      <description>&lt;p&gt;
I was nearly going to query the need for the upgrade patch from here.. ("Why bother touching the old upgrade code.. its working and not used by new installs") But given thats for the 2.0 -&amp;gt; onwards upgrade.. I think that might be a worthy inclusion.
&lt;/p&gt;
&lt;p&gt;
Certainly going to be a lot more efficient than the current loop which could end up with a large number of queries being made.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 23 Jul 2009 11:38:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469#comment:5/1248349126000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I think some investigating+profiling is needed of the WordPress SQL queries, SQL_CALC_FOUND_ROWS may be faster than COUNT() on some queries, and vice versa, but they need to be applied direectly to the WordPress generated queries as well.
&lt;/p&gt;
&lt;p&gt;
Also, While that example doesnt include any joins or complexities, The Query API can easily generate something with taxonomy joins (categories) or added clauses(archives) or joins (Meta tables) or a combination.. IMO it should be optimized for the most common use-cases and the least-performing cases should potentially look for alternate methods perhaps?
&lt;/p&gt;
&lt;p&gt;
Milestone: Future Release for long-standing "low priotity" defects, Current-trunk for all other defects, point release back-porting at commiters discretion. (Generic reply for when I change the milestone)&lt;br /&gt;
Component: Tempted to change to Performance/Optimization as well, Not really a Query "bug" as such..
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) updated</title>
      
        <dc:creator>_ck_</dc:creator>

      <pubDate>Thu, 23 Jul 2009 11:33:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469#comment:4/1248348821000000</guid>
      <description>&lt;p&gt;
It took some digging because of trac's poor search but I found the previous tickets and your work related to this: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/7415" title="#7415: defect (bug): &amp;#34;using filesort&amp;#34; in default install (closed: fixed)"&gt;#7415&lt;/a&gt; &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9642" title="#9642: enhancement: Database Schema Optimizations (closed: maybelater)"&gt;#9642&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It seems like the discussion was never finished or followed through.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) updated</title>
      
        <dc:creator>_ck_</dc:creator>

      <pubDate>Thu, 23 Jul 2009 11:24:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469#comment:3/1248348298000000</guid>
      <description>&lt;p&gt;
Except the queries I am seeing WordPress do with SQL_CALC_FOUND_ROWS are not significantly complex and do not typically use JOINS as meta is appended in a separate query, so COUNT() will still be faster in most cases.
&lt;/p&gt;
&lt;p&gt;
Typical example, benchmark it on a large site
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_NO_CACHE SQL_CALC_FOUND_ROWS  wp_posts.* FROM wp_posts  WHERE 1=1  AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private')  ORDER BY wp_posts.post_date DESC LIMIT 25,25;
SELECT FOUND_ROWS();
&lt;/pre&gt;&lt;p&gt;
vs.
&lt;/p&gt;
&lt;pre class="wiki"&gt;SELECT SQL_NO_CACHE COUNT(0) FROM wp_posts  WHERE 1=1  AND wp_posts.post_type = 'post' AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'private')  ORDER BY wp_posts.post_date DESC
&lt;/pre&gt;&lt;p&gt;
Typically COUNT(*) is also inferior to a single column COUNT(0) but my original workaround idea was a rush job.
&lt;/p&gt;
&lt;p&gt;
I assure you I am seeing SQL_CALC_FOUND_ROWS do bad things in a real-world environment in WordPress. Turn on the slow query log on any busy site and you'll see for yourself.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10470 (more pages for posts - displayed by category) updated</title>
      
        <dc:creator>mch</dc:creator>

      <pubDate>Thu, 23 Jul 2009 10:42:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10470#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10470#comment:2/1248345737000000</guid>
      <description>&lt;p&gt;
I already have that code. Shall i attach  patch file for 2.8.2 ?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10470 (more pages for posts - displayed by category) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 23 Jul 2009 09:45:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10470#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10470#comment:1/1248342323000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10456 (Media UI Improvements for the gallery tab) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Thu, 23 Jul 2009 08:14:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10456#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10456#comment:5/1248336886000000</guid>
      <description>&lt;p&gt;
The title(and half of the first sentence) is a duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9471" title="#9471: defect (bug): Attachments uploaded before post is saved or autosaved get 0 (zero) ... (closed: fixed)"&gt;#9471&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The rest about ajaxified gallery tab was mentioned in another ticket which i cant find, which was closed with the comment along the lines of &lt;em&gt;Click the save changes button to activate it, Doing so also saves the image titles which you've probably added anyway&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10470 (more pages for posts - displayed by category) created</title>
      
        <dc:creator>mch</dc:creator>

      <pubDate>Thu, 23 Jul 2009 07:54:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10470</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10470/1248335645000000</guid>
      <description>&lt;p&gt;
Extension of current option page_for_posts to allows store list of page_id -&amp;gt; caregory_id array.The query is modified to filter only proper category posts when displaying page_for_posts.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 23 Jul 2009 07:27:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469#comment:2/1248334034000000</guid>
      <description>&lt;p&gt;
See in particular these two comments:
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://www.mysqlperformanceblog.com/2007/08/28/to-sql_calc_found_rows-or-not-to-sql_calc_found_rows/#comment-490258"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://www.mysqlperformanceblog.com/2007/08/28/to-sql_calc_found_rows-or-not-to-sql_calc_found_rows/#comment-490258&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 23 Jul 2009 07:16:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469#comment:1/1248333412000000</guid>
      <description>&lt;p&gt;
there was a recent discussion on this one, in a separate ticket, and it was found that SQL_CALC_FOUND_ROWS was faster...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10456 (Media UI Improvements for the gallery tab) updated</title>
      
        <dc:creator>Denis-de-Bernardy</dc:creator>

      <pubDate>Thu, 23 Jul 2009 07:13:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10456#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10456#comment:4/1248333189000000</guid>
      <description>&lt;p&gt;
seems like the very same as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/9471" title="#9471: defect (bug): Attachments uploaded before post is saved or autosaved get 0 (zero) ... (closed: fixed)"&gt;#9471&lt;/a&gt; to me...
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #10469 (use of SQL_CALC_FOUND_ROWS needs to be eliminated) created</title>
      
        <dc:creator>_ck_</dc:creator>

      <pubDate>Thu, 23 Jul 2009 06:24:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10469</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10469/1248330257000000</guid>
      <description>&lt;p&gt;
It's long overdue to rewrite a small part of &lt;a href="https://core.trac.wordpress.org/browser/trunk/wp-includes/query.php"&gt;query.php&lt;/a&gt;, eliminating the use of SQL_CALC_FOUND_ROWS and switching to COUNT(). Doing so will result in significant performance gains on active sites.
&lt;/p&gt;
&lt;p&gt;
SQL_CALC_FOUND_ROWS  has serious performance degradation issues and it's effects was even experienced on wordpress.org over two years ago before it was removed from bbPress.
&lt;/p&gt;
&lt;p&gt;
More here with links to documentation and benchmarks:
&lt;a class="ext-link" href="http://ckon.wordpress.com/2009/07/22/wordpress-still-uses-the-nasty-sql_calc_found_rows/"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://ckon.wordpress.com/2009/07/22/wordpress-still-uses-the-nasty-sql_calc_found_rows/&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
My first rough attempt at a workaround that might be feasible:
&lt;a class="ext-link" href="http://pastebin.com/f45e1f9f6"&gt;&lt;span class="icon"&gt;â€‹&lt;/span&gt;http://pastebin.com/f45e1f9f6&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #10456 (Media UI Improvements for the gallery tab) reopened</title>
      
        <dc:creator>hakre</dc:creator>

      <pubDate>Thu, 23 Jul 2009 05:36:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10456#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10456#comment:3/1248327378000000</guid>
      <description>&lt;p&gt;
Please reference the duplicate.
&lt;/p&gt;
</description>
      <category>reopenedticket</category>
    </item><item>
      <title>Ticket #10468 (wp_clear_scheduled_hook does not work when including an $args parameter) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 23 Jul 2009 04:05:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10468#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10468#comment:1/1248321936000000</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch.
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;wp_clear_scheduled_hook&lt;/code&gt; can currently take multiple values for $args. My patch removes this functionality, but breaking backwards compatibility won't be an issue as this never worked anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>10468.patch attached to Ticket #10468</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 23 Jul 2009 04:03:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/10468/10468.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/10468/10468.patch/1248321826000000</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #10468 (wp_clear_scheduled_hook does not work when including an $args parameter) created</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Thu, 23 Jul 2009 03:53:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/10468</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/10468/1248321189000000</guid>
      <description>&lt;p&gt;
The value for $args that gets passed from &lt;code&gt;wp_clear_scheduled_hook&lt;/code&gt; to &lt;code&gt;wp_unschedule_event&lt;/code&gt; gets changed and therefore nothing will get unscheduled as no jobs will have that argument.
&lt;/p&gt;
&lt;p&gt;
The problem is that the value of the $args parameter is detected using &lt;code&gt;array_slice( func_get_args(), 1 )&lt;/code&gt; and this actually places the value of $args inside an array with one element with the value of $args.
&lt;/p&gt;
&lt;p&gt;
The value of $args passed by &lt;code&gt;wp_clear_scheduled_hook('my_hook','hello')&lt;/code&gt; to &lt;code&gt;wp_unschedule_event&lt;/code&gt; will then look like this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;array
(
    [0] =&amp;gt; hello
)
&lt;/pre&gt;&lt;p&gt;
instead of this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;hello
&lt;/pre&gt;&lt;hr /&gt;
&lt;p&gt;
The function &lt;code&gt;wp_clear_scheduled_hook&lt;/code&gt; is used with the $args parameter in core in three places:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Inside &lt;code&gt;wp_delete_post&lt;/code&gt; to clear any job which might try to publish a future post which has been deleted.
&lt;/li&gt;&lt;li&gt;Inside &lt;code&gt;check_and_publish_future_post&lt;/code&gt; to clear any job which might try to republish a future post which has been published.
&lt;/li&gt;&lt;li&gt;Inside &lt;code&gt;_transition_post_status&lt;/code&gt; to clear any job which might try to publish a future post which has gone back to draft status.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
So according to this bug, these three areas cannot be functioning as expected, as they pass a value in the $args parameter to &lt;code&gt;wp_clear_scheduled_hook&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item>
   </channel>
</rss>