<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #33381 (Strategize the updating of minimum PHP version.) updated</title>
      
        <dc:creator>pedroghandi</dc:creator>

      <pubDate>Sun, 14 Feb 2016 21:31:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33381#comment:67</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33381#comment:67/1455485514597028</guid>
      <description>&lt;p&gt;
Hope you don't mind an opinion of a small plugin dev.
&lt;/p&gt;
&lt;p&gt;
with every wp release i'm invested in keeping up with the codebase. i get email reminders to test and make it compatible with the latest wp.
&lt;/p&gt;
&lt;p&gt;
but then I read these discutions, treating the end users as mindless ones. Users &lt;strong&gt;should&lt;/strong&gt; be responsible for keeping their sites updated. Press "update" for wp, themes, plugins and hosting features. It isn't that hard to flick the switch. It's the least they &lt;strong&gt;can&lt;/strong&gt; do.
&lt;/p&gt;
&lt;p&gt;
I already refrain from using new syntax, new php features, new functions. I have to conditionally run some code for &amp;gt;5.4. Should the need arise, how many EOL versions we need support?
&lt;/p&gt;
&lt;p&gt;
Today I got a user saying that she tested it in php7 and it threw the
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;"Deprecated: Methods with the same name as their class will not be constructors in a future version of PHP"&lt;/em&gt;.
&lt;/p&gt;
&lt;p&gt;
It was on my to-do list, and this just makes me happy that there's feedback. I don't mind putting a extra effort into it.
&lt;/p&gt;
&lt;p&gt;
If a user doesn't know that php5.4 is EOL, we should warn them. Make it obvious, explain why and what will be the benefits of it. Maybe detect who is the host and indicate the host guide to upgrade php versions. If its cpanel, it can't be easier.
&lt;/p&gt;
&lt;p&gt;
If you won't, plugin devs probably will. I already show a warning to users that use wp&amp;lt;4.0, it isn't that hard to warn them about &lt;strong&gt;wrong&lt;/strong&gt; php versions.
&lt;/p&gt;
&lt;p&gt;
thanks,
p.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14761 (unregister_post_type()) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Sun, 14 Feb 2016 21:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14761#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14761#comment:51/1455484411529154</guid>
      <description>&lt;p&gt;
All of the entries, and comments (like the one about &lt;em&gt;undo&lt;/em&gt;) on &lt;a class="ext-link" href="http://english.stackexchange.com/questions/25931/unregister-vs-deregister"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://english.stackexchange.com/questions/25931/unregister-vs-deregister&lt;/a&gt;  may be influential to any naming decision.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35825 (includes_url() in wp-includes/script-loader.php) updated</title>
      
        <dc:creator>TobiasBg</dc:creator>

      <pubDate>Sun, 14 Feb 2016 19:59:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35825#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35825#comment:2/1455479944530511</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
This has been suggested, committed, and been reverted (for performance reasons) in the past: &lt;a href="https://core.trac.wordpress.org/ticket/14157#comment:20"&gt;https://core.trac.wordpress.org/ticket/14157#comment:20&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35832 (Paste action in text field/area context menu in theme customizer ...) created</title>
      
        <dc:creator>xkr47</dc:creator>

      <pubDate>Sun, 14 Feb 2016 19:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35832</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35832/1455479770082838</guid>
      <description>&lt;p&gt;
Twenty Sixteen theme. No plugins activated.
&lt;/p&gt;
&lt;p&gt;
If I go to &lt;code&gt;Appearance -&amp;gt; Customize -&amp;gt; Site Identity&lt;/code&gt; and then right-click in the "Site Title" field and select &lt;code&gt;Paste&lt;/code&gt; from the menu (having some text on the clipboard), the &lt;code&gt;Save&lt;/code&gt; button remains greyed out and cannot be clicked. If I click it anyway, nothing happens and my changes aren't saved.
&lt;/p&gt;
&lt;p&gt;
Ironically, only if I click anywhere &lt;em&gt;outside&lt;/em&gt; both the &lt;code&gt;Site Title&lt;/code&gt; and the &lt;code&gt;Save&lt;/code&gt; button, the button suddenly updates and now shows "Save &amp;amp; Publish" and performs the expected operation when clicked.
&lt;/p&gt;
&lt;p&gt;
This occurs with Firefox 40+ on both Windows and Linux platforms. It occurs both with singleline text fields and multiline text areas. It occurs with other themes too.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35831 (Can't check all on Post) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 14 Feb 2016 19:33:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35831#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35831#comment:1/1455478399241847</guid>
      <description>invalid: &lt;p&gt;
Hi there, and welcome to Trac.
&lt;/p&gt;
&lt;p&gt;
I see that you've got some plugins running and such, and it appears that there is a conflict with one (or more) of these plugins.
&lt;/p&gt;
&lt;p&gt;
As Trac is meant for keeping tabs on bugs and enhancement sin the WordPress core project, would you mind opening a thread on our supports forums at &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support&lt;/a&gt; and one of our volunteers will most likely be able to help you troubleshoot and identify the cause of this.
&lt;/p&gt;
&lt;p&gt;
A great starting point is to disable any plugins you may have to see if that is the cause, then enabling them one at a time to identify when the problem reoccurs. You may also want to change to a default theme (Such as Twenty Sixteen at this time) to rule out this being caused by your theme.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35829 (Separate functions from wp-login.php) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 14 Feb 2016 19:30:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35829#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35829#comment:1/1455478228073883</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Related: &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/31039" title="#31039: enhancement: Move retrieve_password() from wp-login.php (reviewing)"&gt;#31039&lt;/a&gt;, &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/15384" title="#15384: enhancement: wp-login.php refactor (assigned)"&gt;#15384&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wordpress error.png attached to Ticket #35831</title>
      
        <dc:creator>mwindriyanto</dc:creator>

      <pubDate>Sun, 14 Feb 2016 19:14:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35831/wordpress%20error.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35831/wordpress%20error.png/1455477255886025</guid>
      <description>&lt;p&gt;
Error from wp_debug
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35831 (Can't check all on Post) created</title>
      
        <dc:creator>mwindriyanto</dc:creator>

      <pubDate>Sun, 14 Feb 2016 19:13:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35831</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35831/1455477218624974</guid>
      <description>&lt;p&gt;
Hi,
&lt;/p&gt;
&lt;p&gt;
Sorry if i bother you, but in 2 weeks until now i found a bug on wordpress :
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;i can't using check all function on Post to mass edit my Post.
&lt;/li&gt;&lt;li&gt;i can't using quick edit function on Post.
&lt;/li&gt;&lt;li&gt;because of bug no 1 and 2, i can't publish post that somehow missing their schedule.
&lt;/li&gt;&lt;li&gt;after i open Post Tab, suddenly jquery got some problem such as menu don't want to expand even if there are submenu on them.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
This some bug that i found, and for me, this is annoying bug. Please help to solve this problem.
Here i attach the error from wp_debug.
&lt;a style="padding:0; border:none" href="https://www.dropbox.com/s/tl1663il0pd8p8l/wordpress%20error.png?dl=0"&gt;&lt;img src="https://www.dropbox.com/s/tl1663il0pd8p8l/wordpress%20error.png?dl=0" alt="https://www.dropbox.com/s/tl1663il0pd8p8l/wordpress%20error.png" crossorigin="anonymous" title="https://www.dropbox.com/s/tl1663il0pd8p8l/wordpress%20error.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35191 (Remove title attributes: the Tools &gt; Import screen) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 14 Feb 2016 18:25:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35191#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35191#comment:4/1455474335595540</guid>
      <description>&lt;p&gt;
Recap: discussed on Slack, this ticket needs a first design proposal to move on. cc @michaelarestad @melchoyce
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14761 (unregister_post_type()) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sun, 14 Feb 2016 18:23:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14761#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14761#comment:50/1455474213410550</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
The basic issue is that "unregister" isn't really a word. In fact, the only context in which "unregister" is really valid is when describing the state of a post type registration. The action is registration vs deregistration.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I am unconvinced by the "isn't really a word" argument. If it's widely used, then it's a word. And it's used in many places throughout WP: &lt;code&gt;wp_embed_unregister_handler()&lt;/code&gt;, &lt;code&gt;wp_unregister_sidebar_widget()&lt;/code&gt;, &lt;code&gt;unregister_nav_menu()&lt;/code&gt;, &lt;code&gt;unregister_setting()&lt;/code&gt;, as well in other software projects (eg TinyMCE).
&lt;/p&gt;
&lt;p&gt;
I like &lt;code&gt;deregister&lt;/code&gt; a bit more, but it's really just an aesthetic thing; to my ears, &lt;code&gt;deregister&lt;/code&gt; more clearly says that it was once registered and now is not. TBH, both of them sound very awkward, and I don't think there's a "right" one. We should just make an arbitrary decision and standardize for new functions like these. There is no reason to go back and change existing function names.
&lt;/p&gt;
&lt;p&gt;
Given that it's &lt;code&gt;register_post_type()&lt;/code&gt; and &lt;code&gt;register_taxonomy()&lt;/code&gt;, we should not use the &lt;code&gt;wp_&lt;/code&gt; prefix for the new functions.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35567 (New argument `is_embeddable` for `register_post_type()`) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 14 Feb 2016 15:08:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35567#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35567#comment:2/1455462525549337</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
That's an interesting suggestion and I not something that has come up before.
&lt;/p&gt;
&lt;p&gt;
Currently, all publicly viewable posts are embeddable. A new &lt;code&gt;is_embeddable&lt;/code&gt; flag could inherit from the &lt;code&gt;public&lt;/code&gt; property.
&lt;/p&gt;
&lt;p&gt;
I think a patch would be a great base for further discussion.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35824 (Inline svg icons are not displaying when the page is viewed from ...) updated</title>
      
        <dc:creator>aut0poietic</dc:creator>

      <pubDate>Sun, 14 Feb 2016 15:05:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35824#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35824#comment:2/1455462326932230</guid>
      <description>&lt;p&gt;
I can't reproduce the original issue as described (screen shot shows multiple, single-color SVG's working fine in customizer), but I can confirm similar behavior ( SVG's vanish in customizer ) in  Chrome 48.0.2564.103 (64-bit), Firefox 44.0.2, &amp;amp; Safari 9.0.3 - all Mac OS 10.11.3.
&lt;/p&gt;
&lt;p&gt;
I've narrowed it down to the SVG Gradients and SVG Filters. Remove the gradient and the filter then the SVG appears.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;p&gt;
1) Insert this svg into your active theme file ( mine are in the header.php, positioned absolutely ): &lt;a class="ext-link" href="https://gist.github.com/aut0poietic/f95e3c53bfba77b58984"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://gist.github.com/aut0poietic/f95e3c53bfba77b58984&lt;/a&gt;
2) Confirm visible in main site.
3) View theme in customizer.
&lt;/p&gt;
&lt;p&gt;
This behavior occurs if the SVG is used as an placed directly in the page or if added as a symbol displayed with a use xmlns:xlink.
&lt;/p&gt;
&lt;p&gt;
Screen shots:
&lt;/p&gt;
&lt;p&gt;
Visible in Site:
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/u/1061487/svg-customizer-bug-site.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/u/1061487/svg-customizer-bug-site.jpg&lt;/a&gt;
Gone in Customizer:
&lt;a class="ext-link" href="https://dl.dropboxusercontent.com/u/1061487/svg-customizer-bug-c-open.jpg"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://dl.dropboxusercontent.com/u/1061487/svg-customizer-bug-c-open.jpg&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Note that the "stars" in the background are also SVG's, inserted with &amp;lt;use&amp;gt; but I removed their gradients &amp;amp; shadows.
&lt;/p&gt;
&lt;p&gt;
Can't do more than speculate, but I'm guessing that something is either altering the ID's of the gradients in the filter attributes of the destination svg or the id attribute of the source gradient/filter.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #14761 (unregister_post_type()) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 14 Feb 2016 15:02:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/14761#comment:49</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/14761#comment:49/1455462144204947</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think we should rename &lt;code&gt;unregister_post_type()&lt;/code&gt; to &lt;code&gt;deregister_post_type()&lt;/code&gt;. Semantics? Maybe. But I think it's worth discussing.
&lt;/p&gt;
&lt;p&gt;
The basic issue is that "unregister" isn't really a word. In fact, the only context in which "unregister" is really valid is when describing the &lt;em&gt;state&lt;/em&gt; of a post type registration. The &lt;em&gt;action&lt;/em&gt; is registration vs deregistration.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There's also &lt;code&gt;unregister_taxonomy()&lt;/code&gt; which would need to be renamed, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35227" title="#35227: defect (bug): Add unregister_taxonomy() (closed: fixed)"&gt;#35227&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I'm not opposed to renaming these two functions, but I'm also not a native speaker.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35828 (Media library hang when enable_post_data_reading = Off) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 14 Feb 2016 14:40:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35828#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35828#comment:1/1455460854427240</guid>
      <description>wontfix: &lt;p&gt;
Setting &lt;code&gt;enable_post_data_reading&lt;/code&gt; to &lt;code&gt;Off&lt;/code&gt; disables population of the &lt;code&gt;$_POST&lt;/code&gt; superglobal. I can't believe that much of WordPress works with this setting enabled, including saving posts, updating options, or even installing WordPress to begin with. What's it's benefit?
&lt;/p&gt;
&lt;p&gt;
Closing as wontfix for now. If there's a compelling reason why time and effort should be spent supporting this obscure setting, feel free to reopen.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35825 (includes_url() in wp-includes/script-loader.php) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 14 Feb 2016 14:33:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35825#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35825#comment:1/1455460383096074</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35830 (500 Error on custom Post type) closed</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sun, 14 Feb 2016 13:58:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35830#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35830#comment:1/1455458284411131</guid>
      <description>invalid: &lt;p&gt;
Hi there, and welcome to Trac!
&lt;/p&gt;
&lt;p&gt;
Trac is meant for bugs and enhancements for the WordPress core project it self, however this sounds more like a coding error in a theme or plugin.
&lt;/p&gt;
&lt;p&gt;
For help with these things, please do create a topic on our support forums over at &lt;a class="ext-link" href="https://wordpress.org/support"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/support&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A great place to start is by following &lt;a class="ext-link" href="http://codex.wordpress.org/Debugging_in_WordPress"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codex.wordpress.org/Debugging_in_WordPress&lt;/a&gt; before creating your topic, as enabling debugging will show you what is causing the error and where that piece of code is located (which will also be needed for the volunteers at the forums to efficiently help).
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #35830 (500 Error on custom Post type) created</title>
      
        <dc:creator>syslotix</dc:creator>

      <pubDate>Sun, 14 Feb 2016 13:34:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35830</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35830/1455456879931737</guid>
      <description>&lt;p&gt;
Everything is working fine on back-end but when I view posts of custom post type it gives 500 Error
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35389 (HTML Imports) updated</title>
      
        <dc:creator>extendwings</dc:creator>

      <pubDate>Sun, 14 Feb 2016 13:13:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35389#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35389#comment:3/1455455602018305</guid>
      <description>&lt;p&gt;
I've published a plugin for HTML Imports.
&lt;a class="ext-link" href="https://wordpress.org/plugins/wp-html-imports-helper/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wp-html-imports-helper/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35829.diff attached to Ticket #35829</title>
      
        <dc:creator>extendwings</dc:creator>

      <pubDate>Sun, 14 Feb 2016 13:10:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35829/35829.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35829/35829.diff/1455455450944348</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35829 (Separate functions from wp-login.php) created</title>
      
        <dc:creator>extendwings</dc:creator>

      <pubDate>Sun, 14 Feb 2016 13:10:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35829</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35829/1455455410008534</guid>
      <description>&lt;p&gt;
There are some functions in &lt;code&gt;wp-login.php&lt;/code&gt;. But it makes hard to customize login page. (e.g. &lt;a class="ext-link" href="https://github.com/georgestephanis/two-factor/pull/62"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;2FA Feature plugin&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/20279" title="#20279: enhancement: Functions defined in wp-login.php should be moved to a separate file ... (closed: fixed)"&gt;#20279&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35828 (Media library hang when enable_post_data_reading = Off) created</title>
      
        <dc:creator>tomyalmaarif</dc:creator>

      <pubDate>Sun, 14 Feb 2016 11:30:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35828</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35828/1455449453715735</guid>
      <description>&lt;p&gt;
When enable_post_data_reading = Off at PHP, media library always loading and never shown uploaded media
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>35826.1.patch attached to Ticket #35826</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Sun, 14 Feb 2016 09:53:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35826/35826.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35826/35826.1.patch/1455443637271769</guid>
      <description>&lt;p&gt;
Updated patch file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35826 (Customizer: Contain "No Image Set" in dashed border) updated</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Sun, 14 Feb 2016 09:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35826#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35826#comment:4/1455443606248629</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35826#comment:3" title="Comment 3"&gt;westonruter&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@ankit-k-gupta thank you for the patch. I think, however, that the CSS selector should be a bit more specific, scoped by the control's class name perhaps?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@westonruter Thanks for your feedback, I am not expert in CSS, hope this fulfill the requirement for this bug.
Added updated patch.
Thanks :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35826 (Customizer: Contain "No Image Set" in dashed border) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 14 Feb 2016 08:26:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35826#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35826#comment:3/1455438401993202</guid>
      <description>&lt;p&gt;
@ankit-k-gupta thank you for the patch. I think, however, that the CSS selector should be a bit more specific, scoped by the control's class name perhaps?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35826 (Customizer: Contain "No Image Set" in dashed border) updated</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Sun, 14 Feb 2016 08:08:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35826#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35826#comment:2/1455437331808006</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35826.patch attached to Ticket #35826</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Sun, 14 Feb 2016 08:07:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35826/35826.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35826/35826.patch/1455437262421966</guid>
      <description>&lt;p&gt;
added patch
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #30028 (Load Customizer preview iframe with natural URL) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 14 Feb 2016 07:55:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30028#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30028#comment:12/1455436516789582</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35824 (Inline svg icons are not displaying when the page is viewed from ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sun, 14 Feb 2016 07:54:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35824#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35824#comment:1/1455436462096947</guid>
      <description>&lt;i&gt;Description&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I cannot reproduce the issue in Chrome 48, however I can reproduce it in Firefox 43.
&lt;/p&gt;
&lt;p&gt;
I have a feeling that the issue here is similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23225" title="#23225: defect (bug): Customizer is Incompatible with jQuery UI Tabs. (closed: fixed)"&gt;#23225&lt;/a&gt; and will be resolved with the implementation of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/30028" title="#30028: enhancement: Load Customizer preview iframe with natural URL (closed: fixed)"&gt;#30028&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33755 (Add Custom Logo to WordPress Core) updated</title>
      
        <dc:creator>fatmedia</dc:creator>

      <pubDate>Sun, 14 Feb 2016 01:51:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33755#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33755#comment:35/1455414695028079</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/33755#comment:34" title="Comment 34"&gt;melchoyce&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Feature looks good. I agree Logo should appear above Site Title &amp;amp; Tagline.
&lt;/p&gt;
&lt;p&gt;
I think there will definitely be confusion between Site Logos and Site Icons, and part of that isn't that we're adding logos, but that the UI for Site Icons is confusing. You're never really going to see a big, 512x512 image for your Site Icon anywhere — displayed inside the Customizer panel like that, it lacks all context. I think we should bring the preview UI from inside the Media Modal into the panel itself. Attaching a design to demonstrate what I mean.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+100 I agree that the way the Site Icon is presented is a big part of the confusion. It's basically a favicon/bookmark icon and having it presented that way makes it much clearer.
&lt;/p&gt;
&lt;p&gt;
This latest mock-up looks a lot closer to the reality for the majority of sites using these features. I agree user testing will help, but I think this is getting pretty close.
&lt;/p&gt;
&lt;p&gt;
I'm really excited to see progress on this. I think both theme authors and site owners will really appreciate it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29829,​10551 batch updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sun, 14 Feb 2016 01:34:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29829%2C10551</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29829%2C10551/1455413662652250</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29829" title="#29829: feature request: Handling other HTTP header returns, rather than solely 404. (closed: duplicate)"&gt;#29829&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #35826 (Customizer: Contain "No Image Set" in dashed border) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 13 Feb 2016 23:58:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35826#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35826#comment:1/1455407915205238</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32282 (WordPress image cropping is buggy) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:45:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32282#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32282#comment:1/1455403528716396</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I successfully reproduced this bug using the latest trunk from 4.5 and the provided image. After manually setting a crop size of 1500x1000 the image size then changed to 1497x998 once I pressed the crop button, or tried to move the selection area.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/-tX2uK8Tcp.png"&gt;&lt;img src="https://cldup.com/-tX2uK8Tcp.png" alt="https://cldup.com/-tX2uK8Tcp.png" crossorigin="anonymous" title="https://cldup.com/-tX2uK8Tcp.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>logo-and-favicon.jpg attached to Ticket #33755</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:37:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/33755/logo-and-favicon.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/33755/logo-and-favicon.jpg/1455403068935134</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33755 (Add Custom Logo to WordPress Core) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:37:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33755#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33755#comment:34/1455403034116930</guid>
      <description>&lt;p&gt;
Feature looks good. I agree Logo should appear above Site Title &amp;amp; Tagline.
&lt;/p&gt;
&lt;p&gt;
I think there will definitely be confusion between Site Logos and Site Icons, and part of that isn't that we're adding logos, but that the UI for Site Icons is confusing. You're never really going to see a big, 512x512 image for your Site Icon anywhere — displayed inside the Customizer panel like that, it lacks all context. I think we should bring the preview UI from inside the Media Modal into the panel itself. Attaching a design to demonstrate what I mean.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34955,​35193 batch updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:30:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34955%2C35193</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34955%2C35193/1455402612206959</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Duplicate of &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34955" title="#34955: defect (bug): The choices of images to add to srcset shouldn't be via a ratio (closed: fixed)"&gt;#34955&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #35827 (Customizer: Create a dropzone for adding images) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:27:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35827</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35827/1455402431940484</guid>
      <description>&lt;p&gt;
This is a follow-up to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35826" title="#35826: enhancement: Customizer: Contain &amp;#34;No Image Set&amp;#34; in dashed border (closed: fixed)"&gt;#35826&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
On panels that let you upload images (identity, header, background) we should make the "no image set" container a dropzone to drag &amp;amp; drop your images onto. Like the editor, when you drag and drop an image into those dropzones, it would open the media modal and start uploading the image.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>no-image-set-after.png attached to Ticket #35826</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:25:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35826/no-image-set-after.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35826/no-image-set-after.png/1455402321110772</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>no-image-set-before.png attached to Ticket #35826</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:25:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35826/no-image-set-before.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35826/no-image-set-before.png/1455402312187697</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35826 (Customizer: Contain "No Image Set" in dashed border) created</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 13 Feb 2016 22:24:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35826</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35826/1455402297500142</guid>
      <description>&lt;p&gt;
In the Customizer, in panels like Site Identity, Header Image, and Background Image, the "no image set" label seems to just float there. We should add a dashed border to that container div so it looks grounded.
&lt;/p&gt;
&lt;p&gt;
See attached images for before/after.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #34133 (Improve the Moderate Comment screen) updated</title>
      
        <dc:creator>melchoyce</dc:creator>

      <pubDate>Sat, 13 Feb 2016 21:54:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34133#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34133#comment:20/1455400464752760</guid>
      <description>&lt;p&gt;
Can you throw a little extra space between the "Edit" link and the comment? Maybe another 5px? Should help it stand out more. Otherwise, looks good to me.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #24248,​34459 batch updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 13 Feb 2016 21:34:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=24248%2C34459</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=24248%2C34459/1455399243989685</guid>
      <description>duplicate: &lt;p&gt;
Duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/24248" title="#24248: defect (bug): 'guid' not properly escaped (new)"&gt;#24248&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #35329 (Permit rest_do_request() to be used in non-REST API contexts) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Sat, 13 Feb 2016 21:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35329#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35329#comment:10/1455398628601554</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35825.patch attached to Ticket #35825</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Sat, 13 Feb 2016 20:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35825/35825.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35825/35825.patch/1455395157105464</guid>
      <description>&lt;p&gt;
4.5-alpha-36527
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35825 (includes_url() in wp-includes/script-loader.php) created</title>
      
        <dc:creator>sebastian.pisula</dc:creator>

      <pubDate>Sat, 13 Feb 2016 20:25:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35825</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35825/1455395105785082</guid>
      <description>&lt;p&gt;
I think that should be used includes_url() function
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #35816 (Add "after_get_posts" action to `WP_Query::get_posts()`) updated</title>
      
        <dc:creator>lpawlik</dc:creator>

      <pubDate>Sat, 13 Feb 2016 20:10:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35816#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35816#comment:8/1455394246593887</guid>
      <description>&lt;p&gt;
@boonebgorges thank you for taking care of my patch. I like how you implemented initial idea - this looks great and from my internal tests it fully solves our issues however I think that maybe we could add also some action hook when posts are added into lazy loader class. I've modified your patch a bit. I believe that even 100k of posts (actually only ID + post_type) inside &lt;code&gt;WP_Metadata_Lazyloader&lt;/code&gt; won't occupy too much memory however it would be excellent if developers could control it somehow (&lt;code&gt;reset()&lt;/code&gt; method added into &lt;code&gt;WP_Metadata_Lazyloader&lt;/code&gt;)
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;'metadata_lazyloader_posts_added'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;WP_Metadata_Lazyloader&lt;/span&gt; &lt;span class="nv"&gt;$metadata_loader&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$metadata_loader&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
I think that your patch fully solves those issues (I saw that comments should also be fixed as they behave the same as posts) and it would be awesome if it could be merged into core.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31195 (Add a user-friendly way to preview site responsiveness in the Customizer) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 13 Feb 2016 19:51:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31195#comment:93</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31195#comment:93/1455393101902113</guid>
      <description>&lt;p&gt;
Tested &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31195/31195.8.diff" title="Attachment '31195.8.diff' in Ticket #31195"&gt;31195.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31195/31195.8.diff" title="Download"&gt;​&lt;/a&gt;, and it's looking good.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35624 (Use of get_comment() function shows Notice) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 13 Feb 2016 19:14:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35624#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35624#comment:13/1455390842975850</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36527" title="Docs: Add an internal note to the DocBlock for `comment_form_title()` ..."&gt;36527&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Add an internal note to the DocBlock for &lt;code&gt;comment_form_title()&lt;/code&gt; explaining restoration of the &lt;code&gt;$comment&lt;/code&gt; global.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36512" title="Set the `$comment` global in `comment_form_title()`.
In [33963], ..."&gt;[36512]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35624" title="#35624: defect (bug): Use of get_comment() function shows Notice (closed: fixed)"&gt;#35624&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [36527]: Docs: Add an internal note to the DocBlock for `comment_form_title()` ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 13 Feb 2016 19:14:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36527</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36527/1455390841441098</guid>
      <description>&lt;p&gt;
Docs: Add an internal note to the DocBlock for &lt;code&gt;comment_form_title()&lt;/code&gt; explaining restoration of the &lt;code&gt;$comment&lt;/code&gt; global.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36512" title="Set the `$comment` global in `comment_form_title()`.
In [33963], ..."&gt;[36512]&lt;/a&gt;. See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35624" title="#35624: defect (bug): Use of get_comment() function shows Notice (closed: fixed)"&gt;#35624&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35816 (Add "after_get_posts" action to `WP_Query::get_posts()`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 18:15:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35816#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35816#comment:7/1455387347586784</guid>
      <description>&lt;p&gt;
@lpawlik Thanks for sticking with me here :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
What kind of benefits we have by distinguishing WP_Query instances?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, two kinds of benefits, I guess. First, a general separation of concerns. It feels aesthetically weird that doing something inside of one post loop would reach out and touch other query loops. Second, a concern about performance. If you have two loops, one with 5 posts and one with 100, it feels odd that calling &lt;code&gt;get_term_meta()&lt;/code&gt; in the first one would cause termmeta to be loaded for terms belonging to all 105 posts.
&lt;/p&gt;
&lt;p&gt;
But I've taken some time this morning to get some actual numbers behind these hunches. I set up an installation with 10,000 terms, all with some term meta. Then I assigned 10 of these terms to 1,000 different posts. I then ran some profiling where I fired up 100 different &lt;code&gt;WP_Query&lt;/code&gt; objects (basically, paginating through all posts). I was able to reproduce your report of memory overhead from &lt;code&gt;$wp_filter&lt;/code&gt;. I then started working with your patch and I found that very little overhead was associated with the call to &lt;code&gt;update_termmeta_cache()&lt;/code&gt;, which means that my concern about keeping &lt;code&gt;WP_Query&lt;/code&gt; instances separate probably is not warranted. It certainly simplifies the lazyloading logic if we can simply dump all of the posts in a single pot, and it doesn't seem to have serious performance implications in anything but the most extreme cases.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35816/35816.2.diff" title="Attachment '35816.2.diff' in Ticket #35816"&gt;35816.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35816/35816.2.diff" title="Download"&gt;​&lt;/a&gt; builds upon your POC. It shows how it might integrate into WP with file structure, naming, etc. It abstracts the &lt;code&gt;$meta_type&lt;/code&gt; so that the same logic can be used for commentmeta too (though I haven't implemented that yet). And it eliminates the check that causes metadata to be loaded only for those terms belonging to posts attached to the &lt;code&gt;$term_id&lt;/code&gt; (gosh, that's confusing). Instead: the first time that &lt;code&gt;get_term_meta()&lt;/code&gt; is called, termmeta cache is primed for all pending posts.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One extra note: we could keep only post ID and post_type inside WP_Query_Lazy_Load instead of all WP_Post data which would reduce memory requirements.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I implemented this too.
&lt;/p&gt;
&lt;p&gt;
What do you think of this direction?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35816.2.diff attached to Ticket #35816</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 18:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35816/35816.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35816/35816.2.diff/1455386563549009</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 17:07:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:13/1455383264765315</guid>
      <description>&lt;p&gt;
@markoheijnen @DrewAPicture
&lt;/p&gt;
&lt;p&gt;
Ah, ok, I understand now what you meant with the default. Added a default case with a dynamic filter. I haven't combined it with the &lt;code&gt;admin&lt;/code&gt; filter as then we'd get a similar issue with the filter documentation as @SergeyBiryukov pointed out before. This is a new dynamic filter and should be documented as such IMHO.
&lt;/p&gt;
&lt;p&gt;
Also updated the docblock documentation based on @DrewAPicture's feedback. Hope I got it right.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also, if you pass --no-prefix when you generate your git diffs, it won't print out all your personal information in the patch ;-)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the heads-up. Unfortunately this is not an option in the git client I use (which, other than that, is awesome! (GitExtensions for those wondering))
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>32075-improved-patch-v6.2.patch attached to Ticket #32075</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 17:01:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v6.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v6.2.patch/1455382864912680</guid>
      <description>&lt;p&gt;
Added default case &amp;amp; updated docblocks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32075-improved-patch-v6.patch attached to Ticket #32075</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 17:01:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v6.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v6.patch/1455382860799963</guid>
      <description>&lt;p&gt;
Added default case &amp;amp; updated docblocks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #33755 (Add Custom Logo to WordPress Core) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sat, 13 Feb 2016 16:53:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33755#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33755#comment:33/1455382390902795</guid>
      <description>&lt;p&gt;
There is a branch of Twenty Sixteen that can be used to user test this here: &lt;a class="ext-link" href="https://github.com/wordpress/twentysixteen/tree/site-logo"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/wordpress/twentysixteen/tree/site-logo&lt;/a&gt;. @mikeschroder feel free to pass this onto user tests now. Big thanks to @iamtakashi for working with me on this branch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35824 (Inline svg icons are not displaying when the page is viewed from ...) created</title>
      
        <dc:creator>johndoedoe</dc:creator>

      <pubDate>Sat, 13 Feb 2016 16:52:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35824</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35824/1455382328506873</guid>
      <description>&lt;p&gt;
For example if we have inline definition
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"position:absolute"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;symbol&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 14 14"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"icon-money"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;"M12.3 5.5c.1-.3.2-.6.2-1 0-2-2.4-3.5-5.5-3.5S1.5 2.6 1.5 4.5c0 .4.1.7.2 1-.1.3-.2.7-.2 1 0 .4.1.7.2 1-.1.3-.2.7-.2 1 0 2 2.4 3.5 5.5 3.5s5.5-1.5 5.5-3.5c0-.3-.1-.7-.2-1 .1-.3.2-.6.2-1 0-.3-.1-.6-.2-1zM7 8c1.9 0 3.5-.6 4.5-1.5C11.5 7.9 9.4 9 7 9S2.5 7.9 2.5 6.6C3.5 7.5 5.1 8 7 8zm0-6c2.4 0 4.5 1.1 4.5 2.5S9.4 7 7 7 2.5 5.9 2.5 4.5 4.6 2 7 2zm0 9c-2.4 0-4.5-1.1-4.5-2.5 1 1 2.6 1.5 4.5 1.5s3.5-.6 4.5-1.5C11.5 9.9 9.4 11 7 11z"&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&amp;lt;/symbol&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
and then use it like this
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;xmlns:xlink=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xlink"&lt;/span&gt; &lt;span class="na"&gt;xlink:href=&lt;/span&gt;&lt;span class="s"&gt;"#icon-money"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/use&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
when viewed directly - works fine, but from customizer it is not displayed.
However, the externally linked svg icons
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;use&lt;/span&gt; &lt;span class="na"&gt;xmlns:xlink=&lt;/span&gt;&lt;span class="s"&gt;"http://www.w3.org/1999/xlink"&lt;/span&gt; &lt;span class="na"&gt;xlink:href=&lt;/span&gt;&lt;span class="s"&gt;"/img/some-sprite.svg#icon-money"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/use&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
do work fine.
&lt;/p&gt;
&lt;p&gt;
Tested in chrome and firefox.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Sat, 13 Feb 2016 16:51:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:29/1455382277494031</guid>
      <description>&lt;p&gt;
This looks good. I like the version with &lt;code&gt;Cropped display "landscape" =&amp;gt; max-height 100%&lt;/code&gt; - I think a typical PDF is for printing and will have portrait orientation.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sat, 13 Feb 2016 16:31:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:12/1455381097363125</guid>
      <description>&lt;p&gt;
@markoheijnen I think the switch block is fine, especially if new contexts ever get added. I also agree on adding a default, but if one of the two cases in the switch uses the default &lt;code&gt;sdmin&lt;/code&gt; context, then perhaps the combine the default with the case.
&lt;/p&gt;
&lt;p&gt;
@jrf In the DocBlocks, the summaries should use third-person singular verbs and should be a summary, rather than a title. So just remove "WP raise memory limit" and promote "Raises the PHP memory limit for memory intensive processes." to the top as the summary.
&lt;/p&gt;
&lt;p&gt;
Also, if you pass &lt;code&gt;--no-prefix&lt;/code&gt; when you generate your git diffs, it won't print out all your personal information in the patch ;-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 13 Feb 2016 15:02:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:11/1455375738304656</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/32075#comment:10" title="Comment 10"&gt;jrf&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not 100% sure what you mean, but the default for the &lt;code&gt;$filtered_limit&lt;/code&gt; is the &lt;code&gt;WP_MAX_MEMORY_LIMIT&lt;/code&gt; constant which can be set in &lt;code&gt;wp-config.php&lt;/code&gt; and defaults to &lt;code&gt;256M&lt;/code&gt; or the &lt;code&gt;php.ini&lt;/code&gt; memory limit, whichever is higher.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Personally I don't like constants but I do get your point. Say I use a plugin that imports CSV's and that plugin will use this new method &lt;code&gt;wp_raise_memory_limit('csv')&lt;/code&gt;. I will be able to increase it with &lt;code&gt;csv_memory_limit&lt;/code&gt; to 512M when needed.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35718.3.patch attached to Ticket #35718</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:58:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35718/35718.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35718/35718.3.patch/1455375522375687</guid>
      <description>&lt;p&gt;
use sprintf()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:56:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:10/1455375366873039</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
With the current patch the argument $filter isn't set. That should become {$context}_memory_limit.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch. Was an artifact remaining from an earlier version which didn't have the switch. Fixed in v5 of the patch.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Also having a default would be great so people could use it for their own usage.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not 100% sure what you mean, but the default for the &lt;code&gt;$filtered_limit&lt;/code&gt; is the &lt;code&gt;WP_MAX_MEMORY_LIMIT&lt;/code&gt; constant which can be set in &lt;code&gt;wp-config.php&lt;/code&gt; and defaults to &lt;code&gt;256M&lt;/code&gt; or the &lt;code&gt;php.ini&lt;/code&gt; memory limit, whichever is higher.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35681.5.patch attached to Ticket #35681</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:53:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35681/35681.5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35681/35681.5.patch/1455375199312000</guid>
      <description>&lt;p&gt;
use sprintf()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32075-improved-patch-v5.patch attached to Ticket #32075</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:50:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v5.patch/1455375023109357</guid>
      <description>&lt;p&gt;
Fixed filter names
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32075 (Only set WP_MAX_MEMORY_LIMIT by default when its greater than memory_limit) updated</title>
      
        <dc:creator>markoheijnen</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:36:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32075#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32075#comment:9/1455374215061612</guid>
      <description>&lt;p&gt;
With the current patch the argument &lt;code&gt;$filter&lt;/code&gt; isn't set. That should become &lt;code&gt;{$context}_memory_limit&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I do wonder if we can remove the whole switch block. It feels weird to only have it for the docblocks for the filters. Maybe @DrewAPicture has feedback on this. Also having a default would be great so people could use it for their own usage.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35672 (Avoid using HTML tags in translation strings (wp-admin/user-edit.php)) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35672#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35672#comment:5/1455374038585135</guid>
      <description>&lt;p&gt;
The patch also adds translators comment.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35672.2.patch attached to Ticket #35672</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:32:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35672/35672.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35672/35672.2.patch/1455373964307738</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35673.2.patch attached to Ticket #35673</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:29:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35673/35673.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35673/35673.2.patch/1455373765720721</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>35668.3.patch attached to Ticket #35668</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:21:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35668/35668.3.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35668/35668.3.patch/1455373270493399</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35668 (Avoid using HTML tags in translation strings (wp-admin/credits.php)) updated</title>
      
        <dc:creator>ramiy</dc:creator>

      <pubDate>Sat, 13 Feb 2016 14:20:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35668#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35668#comment:7/1455373250971926</guid>
      <description>&lt;p&gt;
Option 7:
&lt;/p&gt;
&lt;pre class="wiki"&gt;&amp;lt;p class="clear"&amp;gt;&amp;lt;?php
	printf(
		/* translators: %s: link to make.wordpress.org */
		__( 'Want to see your name in lights on this page? %s.' ),
		sprintf(
			'&amp;lt;a href="%1$s"&amp;gt;%2$s&amp;lt;/a&amp;gt;',
			esc_url( __( 'https://make.wordpress.org/' ) ),
			__( 'Get involved in WordPress' )
		)
	);
?&amp;gt;&amp;lt;/p&amp;gt;
&lt;/pre&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35816 (Add "after_get_posts" action to `WP_Query::get_posts()`) updated</title>
      
        <dc:creator>lpawlik</dc:creator>

      <pubDate>Sat, 13 Feb 2016 13:40:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35816#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35816#comment:6/1455370827077230</guid>
      <description>&lt;p&gt;
@boonebgorges Yes, you're right that my patch doesn't distinguish between multiple instances of &lt;code&gt;WP_Query&lt;/code&gt; existing at the same time. I'd like to ask you a question as I may not fully understand whole flow here. What kind of benefits we have by distinguishing &lt;code&gt;WP_Query&lt;/code&gt; instances? My point is that if we do as you suggest we will still have the same issue as now. Let me show you our use scenario:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;we were going to index all posts in Elasticsearch so we executed &lt;code&gt;WP_Query&lt;/code&gt; in a loop.
&lt;/li&gt;&lt;/ul&gt;&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;$q = new WP_Query( ...args to get group of posts we need... );
$posts = $q-&amp;gt;get_posts();
foreach( $posts as $post ) {
    $index_data = array(
        'key1' =&amp;gt; $post-&amp;gt;dummy_value_1,
        'post_content' =&amp;gt; apply_filters( 'the_content', $post-&amp;gt;post_content ),
        ....
        'keyX' =&amp;gt; $post-&amp;gt;dummy_value_x
    );
    index_post( $index_data );
}
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Let's assume that we have 45000 posts to index so above loop will be executed 45k times. Each post content contains &lt;code&gt;gallery&lt;/code&gt; shortcode which executes its own &lt;code&gt;WP_Query&lt;/code&gt; (not directly but via &lt;code&gt;get_posts()&lt;/code&gt; function). We will have 45k keys in &lt;code&gt;$this-&amp;gt;queries&lt;/code&gt; inside &lt;code&gt;WP_Lazy_Loader&lt;/code&gt; class and each key will contain collection of &lt;code&gt;WP_Post&lt;/code&gt; items. I am quite sure this is more or less the same as we have now but the only difference is that &lt;code&gt;$wp_filter&lt;/code&gt; doesn't contain all data in favour of huge &lt;code&gt;WP_Lazy_Loader&lt;/code&gt; instance. What are possible issues with not distinguishing between multiple instances of &lt;code&gt;WP_Query&lt;/code&gt;? I think we may add a little overhead with my approach but on the other hand we may reduce memory consumption significantly. As I mentioned above I may not fully understand all possible issues this patch can introduce.
&lt;/p&gt;
&lt;p&gt;
One extra note: we could keep only post &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;post_type&lt;/code&gt; inside &lt;code&gt;WP_Query_Lazy_Load&lt;/code&gt; instead of all &lt;code&gt;WP_Post&lt;/code&gt; data which would reduce memory requirements.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35324-6.diff attached to Ticket #35324</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 13 Feb 2016 11:49:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35324/35324-6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35324/35324-6.diff/1455364193269533</guid>
      <description>&lt;p&gt;
last file was wrong file format, sorry!
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>32075-improved-patch-v4.patch attached to Ticket #32075</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 10:04:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v4.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/32075/32075-improved-patch-v4.patch/1455357853876206</guid>
      <description>&lt;p&gt;
Updated docblocks
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>35324-5.patch attached to Ticket #35324</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 13 Feb 2016 09:49:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35324/35324-5.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35324/35324-5.patch/1455356948142286</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35324 (Post Type Archives support in Nav Menus cannot read description) updated</title>
      
        <dc:creator>mayukojpn</dc:creator>

      <pubDate>Sat, 13 Feb 2016 09:48:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35324#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35324#comment:7/1455356912595957</guid>
      <description>&lt;p&gt;
Thanks &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35324#comment:6" title="Comment 6"&gt;Toro_Unit&lt;/a&gt; for unit test!
&lt;/p&gt;
&lt;p&gt;
I like your approach, but if CPT has own description, your function will overwrite menu item description even though I want to leave it empty.
&lt;/p&gt;
&lt;p&gt;
Can we fix a bug this time and discuss it at new ticket?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31195 (Add a user-friendly way to preview site responsiveness in the Customizer) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 13 Feb 2016 09:22:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31195#comment:92</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31195#comment:92/1455355366427400</guid>
      <description>&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/31195/31195.8.diff" title="Attachment '31195.8.diff' in Ticket #31195"&gt;31195.8.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/31195/31195.8.diff" title="Download"&gt;​&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Fixes the initial load issue by setting the default device when the Customizer is ready.
&lt;/li&gt;&lt;li&gt;Fixes the double iframe issue.
&lt;/li&gt;&lt;li&gt;Fixes a few coding standards and organization issues.
&lt;/li&gt;&lt;li&gt;Fixes the failing PHPUnit test.
&lt;/li&gt;&lt;li&gt;Adds a QUnit test to verify that &lt;code&gt;desktop&lt;/code&gt; is initially set for &lt;code&gt;api.previewedDevice&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds admin color support to the button borders.
&lt;/li&gt;&lt;li&gt;Typecasts the array in &lt;code&gt;customize.php&lt;/code&gt; in the event &lt;code&gt;customize_previewable_devices&lt;/code&gt; has been filtered incorrectly.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I believe the patch is ready for merge, it addresses the remaining issues and some that were not discussed. Great work everyone!
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>31195.8.diff attached to Ticket #31195</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 13 Feb 2016 09:04:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/31195/31195.8.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/31195/31195.8.diff/1455354244596065</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27631 (make "comment-page" slug configurable) updated</title>
      
        <dc:creator>qdinar</dc:creator>

      <pubDate>Sat, 13 Feb 2016 08:31:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27631#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27631#comment:14/1455352278761487</guid>
      <description>&lt;p&gt;
i said " i think /comment-page/n/ is good temporary fix " , but it can be also left so forever, if nobody needs configuring it so that comment page number is at beginning (or middle) of address path.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32678 (Audit toolbar links and content) updated</title>
      
        <dc:creator>paaljoachim</dc:creator>

      <pubDate>Sat, 13 Feb 2016 05:53:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32678#comment:117</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32678#comment:117/1455342816020006</guid>
      <description>&lt;p&gt;
I made a plugin that covers the first main section:
The Frontend - has all the major sections.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/paaljoachim/top-admin-toolbar-plugin"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/paaljoachim/top-admin-toolbar-plugin&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34913 (Unscheduling cron jobs fails when original arguments were not an array.) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 05:23:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34913#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34913#comment:7/1455341002586330</guid>
      <description>&lt;p&gt;
Updated the patch based on feedback from the bug scrub Slack chat. /cc @chriscct7 @stevenkword
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I think the patch should also throw a &lt;code&gt;_doing_it_wrong()&lt;/code&gt; specifically where the plugin authors are doing it wrong
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
There is already a &lt;code&gt;_deprecated_argument()&lt;/code&gt; in place in the &lt;code&gt;wp_clear_scheduled_hook()&lt;/code&gt; function which was added when the function signature was changed.
&lt;/p&gt;
&lt;p&gt;
I could add &lt;code&gt;_doing_it_wrong()&lt;/code&gt; for all instances where the cron arguments are not passed in as an array. That would effectively mean adding it in six (!) places in the cron file.
See the alternative patch (2-b).
&lt;/p&gt;
&lt;p&gt;
Also note: &lt;code&gt;_doing_it_wrong()&lt;/code&gt; expects the WP version to be the version in which the message was added (4.5 (?)), however, the actual change in the function signature occurred in WP 2.1.0 as far as I can see, so IMHO it would make more sense to have 2.1.0 as the version number in the &lt;code&gt;_doing_it_wrong()&lt;/code&gt; call.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
also it'd be nice to get the related ticket (&lt;code&gt; *another* (ancient) bug&lt;/code&gt;), so that ticket can also be updated.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
AFAIK this was never reported before and there is no trac ticket for this bug. I discovered it while working on this issue.
&lt;/p&gt;
&lt;p&gt;
As the last time the version nr of the cron array was changed - and therefore the last time the &lt;code&gt;_upgrade_cron_array()&lt;/code&gt; function was called -, was in 2006, I doubt you will find any reported issues.
&lt;/p&gt;
&lt;p&gt;
The bug, however, becomes relevant for this patch as the cron array version nr will be upped and therefore &lt;code&gt;_upgrade_cron_array()&lt;/code&gt; will now once again be called (once for each install).
&lt;/p&gt;
&lt;p&gt;
Aside from the error notice, the net effect of this bug is cron events disappearing or no longer functioning correctly as the cron array would be mangled after being run through the upgrade function.
&lt;/p&gt;
&lt;p&gt;
In more detail:
The cron array is a nested array with:
(array) timestamps -&amp;gt; (array) hooks -&amp;gt; (array) events -&amp;gt; (array) arguments, where events are saved with as a key the md5-ed serialization of the event arguments and as a value the actual event arguments.
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;_upgrade_cron_array()&lt;/code&gt; function however treated the events array as if it were the arguments array. So if there were two events on a hook, there would only be one event after the upgrade routine and the arguments of that one event would be the previous two events.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
and the new &lt;code&gt;_cron_cast_to_array_helper&lt;/code&gt; needs a docbloc
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Done - see updated patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>0002-b-Fix-issue-34913-with-doing-it-wrong.patch attached to Ticket #34913</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 05:13:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34913/0002-b-Fix-issue-34913-with-doing-it-wrong.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34913/0002-b-Fix-issue-34913-with-doing-it-wrong.patch/1455340384753576</guid>
      <description>&lt;p&gt;
Same as 2a + _doing_it_wrong()
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>0002-a-Fix-issue-34913.patch attached to Ticket #34913</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 13 Feb 2016 05:12:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34913/0002-a-Fix-issue-34913.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34913/0002-a-Fix-issue-34913.patch/1455340335445530</guid>
      <description>&lt;p&gt;
Updated for bug scrub feedback
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35324 (Post Type Archives support in Nav Menus cannot read description) updated</title>
      
        <dc:creator>Toro_Unit</dc:creator>

      <pubDate>Sat, 13 Feb 2016 05:07:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35324#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35324#comment:6/1455340071555546</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>35781.1.patch attached to Ticket #35781</title>
      
        <dc:creator>Ankit K Gupta</dc:creator>

      <pubDate>Sat, 13 Feb 2016 04:55:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35781/35781.1.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35781/35781.1.patch/1455339310180578</guid>
      <description>&lt;p&gt;
Updated patch file
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #32678 (Audit toolbar links and content) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sat, 13 Feb 2016 04:20:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32678#comment:116</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32678#comment:116/1455337236018221</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-multisite by paaljoachim. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-multisite/p1455337233000127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35252 (Add a `{$taxonomy}_term_edit_form_top` action (similar to the post ...) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 04:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35252#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35252#comment:6/1455336008477457</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36526" title="Introduce `{$taxonomy}_term_edit_form_top` action to ..."&gt;36526&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce &lt;code&gt;{$taxonomy}_term_edit_form_top&lt;/code&gt; action to edit-tag-form.php.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This new action gives developers a place to output content at the beginning&lt;br /&gt;
of the form element on edit-tags.php.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props flixos90.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35252" title="#35252: enhancement: Add a `{$taxonomy}_term_edit_form_top` action (similar to the post ... (closed: fixed)"&gt;#35252&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36526]: Introduce `{$taxonomy}_term_edit_form_top` action to ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 04:00:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36526</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36526/1455336007880863</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;{$taxonomy}_term_edit_form_top&lt;/code&gt; action to edit-tag-form.php.
&lt;/p&gt;
&lt;p&gt;
This new action gives developers a place to output content at the beginning
of the form element on edit-tags.php.
&lt;/p&gt;
&lt;p&gt;
Props flixos90.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35252" title="#35252: enhancement: Add a `{$taxonomy}_term_edit_form_top` action (similar to the post ... (closed: fixed)"&gt;#35252&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35252 (Add a `{$taxonomy}_term_edit_form_top` action (similar to the post ...) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:59:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35252#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35252#comment:5/1455335983922331</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35252#comment:4" title="Comment 4"&gt;flixos90&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35252#comment:3" title="Comment 3"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is there a reason why the action has to be dynamic? If we're passing a taxonomy to it, then the dynamic filter name is redundant. See &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/35252/35252.2.diff" title="Attachment '35252.2.diff' in Ticket #35252"&gt;35252.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/35252/35252.2.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not specifically, I was just looking at the other actions within the form most of which are dynamic, so I applied the same pattern to this new one. But your version is perfectly fine too.
&lt;/p&gt;
&lt;p&gt;
In general however, I wonder which way is preferable. If you want to add something to only specific taxonomies, the dynamic approach is better I think because then you only add the filter where you actually need it - but if you want to add to every one, the way you did it would be easier.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
True. I guess all the other actions in this form use the taxonomy name. I'm not a very big fan - it's more confusing to document, and passing the &lt;code&gt;$taxonomy&lt;/code&gt; as an argument rather than as part of the action name gives you lots more flexibility, but I guess we should just go with the flow.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34491 (Introduce a 'publicly_queryable' argument to register_taxonomy) closed</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:50:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34491#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34491#comment:8/1455335438220086</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36525" title="Introduce `publicly_queryable` taxonomy argument.
Taxonomies ..."&gt;36525&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Introduce &lt;code&gt;publicly_queryable&lt;/code&gt; taxonomy argument.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Taxonomies registered as &lt;code&gt;publicly_queryable&lt;/code&gt; can be queried as taxonomy&lt;br /&gt;
archives.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If not provided explicitly, the value of &lt;code&gt;publicly_queryable&lt;/code&gt; is inherited&lt;br /&gt;
from &lt;code&gt;public&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Chouby.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34491" title="#34491: enhancement: Introduce a 'publicly_queryable' argument to register_taxonomy (closed: fixed)"&gt;#34491&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36525]: Introduce `publicly_queryable` taxonomy argument.  Taxonomies ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:50:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36525</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36525/1455335437605150</guid>
      <description>&lt;p&gt;
Introduce &lt;code&gt;publicly_queryable&lt;/code&gt; taxonomy argument.
&lt;/p&gt;
&lt;p&gt;
Taxonomies registered as &lt;code&gt;publicly_queryable&lt;/code&gt; can be queried as taxonomy
archives.
&lt;/p&gt;
&lt;p&gt;
If not provided explicitly, the value of &lt;code&gt;publicly_queryable&lt;/code&gt; is inherited
from &lt;code&gt;public&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props Chouby.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34491" title="#34491: enhancement: Introduce a 'publicly_queryable' argument to register_taxonomy (closed: fixed)"&gt;#34491&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35816 (Add "after_get_posts" action to `WP_Query::get_posts()`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:22:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35816#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35816#comment:5/1455333722697418</guid>
      <description>&lt;p&gt;
@lpawlik This is a promising technique. But it doesn't distinguish between multiple instances of &lt;code&gt;WP_Query&lt;/code&gt; existing at the same time. Say you have two posts in two categories, p1/c1 and p2/c2. Now do this:
&lt;/p&gt;
&lt;pre class="wiki"&gt;$q = new WP_Query( array( 'p' =&amp;gt; $p1 ) );
while ( $q-&amp;gt;have_posts() ) {
    $q-&amp;gt;the_post();
    $nested_q = new WP_Query( array( 'p' =&amp;gt; $p2 ) );
    while ( $nested_q-&amp;gt;have_posts() ) {
        $nested_q-&amp;gt;have_posts();
        get_term_meta( $c2, 'foo' );
    }
}
&lt;/pre&gt;&lt;p&gt;
That call to &lt;code&gt;get_term_meta()&lt;/code&gt; should only prime the cache for the terms belonging to &lt;code&gt;$nested_q&lt;/code&gt; - ie, $c2 - and not those belonging to the parent query - ie, $c1. (If you're not convinced by the nested queries, imagine a dozen queries in serial.)
&lt;/p&gt;
&lt;p&gt;
Your approach could be adapted, by indexing post IDs in the &lt;code&gt;WP_Lazy_Loader&lt;/code&gt; object by an identifier that is unique to the query instance. Something like:
&lt;/p&gt;
&lt;pre class="wiki"&gt;    ...
    if ( $q['update_post_term_cache'] ) {
        handle_lazy_loads( $this );
    }
    ...
class WP_Lazy Loader {
    ...
    function add_posts( WP_Query $query ) {
        $key = _wp_filter_build_unique_id( array( $query, '' ) );
        $this-&amp;gt;queries[ $key ] = $posts;
    }
    ....
    function lazyload_term_meta( $check, $term_id ) {
        ...
        foreach ( $this-&amp;gt;queries as $qposts ) {
            // If term belongs to one of the posts, then prime cache for all post terms in the query
        }
        ...
    }
&lt;/pre&gt;&lt;p&gt;
Does this seem right to you?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>35816.diff attached to Ticket #35816</title>
      
        <dc:creator>lpawlik</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:07:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/35816/35816.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/35816/35816.diff/1455332840214176</guid>
      <description>&lt;p&gt;
POC - More complex solution
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #35816 (Add "after_get_posts" action to `WP_Query::get_posts()`) updated</title>
      
        <dc:creator>lpawlik</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:06:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35816#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35816#comment:4/1455332797833883</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/35816#comment:1" title="Comment 1"&gt;boonebgorges&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@stevegrunwell Thanks very much for the detailed request.
&lt;/p&gt;
&lt;p&gt;
So here's what I'm going to do: I'm going to swap out the &lt;code&gt;updated_term_meta_cache&lt;/code&gt; flags, and replace with &lt;code&gt;remove_filter()&lt;/code&gt;. This ought to fix your immediate issue, since the object will be removed from the &lt;code&gt;$wp_filter&lt;/code&gt; global, and PHP should be able to reclaim the memory space. If you don't mind, I'll ask you to run this against your import scripts, to verify that it's resolving the issue for you. Then we can talk about whether the new action you've suggested still has a use case.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@boonebgorges thank you for your response. The problem with your solution is that if callback is not called then hook still resides in &lt;code&gt;$wp_filter&lt;/code&gt; and it still consumes memory. I just sent to @stevegrunwell more complex patch which seems to be solving the core of the issue. I am attaching it here but please keep in mind that it's still a beta version :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35454,​35816 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:06:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35454%2C35816</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35454%2C35816/1455332764548685</guid>
      <description>&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35454" title="#35454: defect (bug): `lazyload_term_meta` is called many time when calling `get_term_metadata` (closed: duplicate)"&gt;#35454&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Tickets #35454,​35816 batch updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:04:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35454%2C35816</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35454%2C35816/1455332646741528</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36524" title="Improve `WP_Query` lazyloading logic, for better performance.
 ..."&gt;36524&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Improve &lt;code&gt;WP_Query&lt;/code&gt; lazyloading logic, for better performance.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Lazyloading for comment meta and term meta, introduced into &lt;code&gt;WP_Query&lt;/code&gt; in&lt;br /&gt;
4.4, used flags - &lt;code&gt;updated_term_meta_cache&lt;/code&gt; and &lt;code&gt;updated_comment_meta_cache&lt;/code&gt; -&lt;br /&gt;
in an attempt to prevent cache priming from happening more than once per query&lt;br /&gt;
object. This technique was mostly effective, but not entirely efficient, since&lt;br /&gt;
the flag didn't prevent the &lt;code&gt;lazyload_*_meta&lt;/code&gt; callbacks from running. The&lt;br /&gt;
obvious solution - removing the filter callback after it'd be run once - was&lt;br /&gt;
dismissed for 4.4 because of concerns that &lt;code&gt;remove_filter()&lt;/code&gt; could disable&lt;br /&gt;
lazyloading too generally in the context of nested queries, due to the way&lt;br /&gt;
&lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; doesn't always build sufficiently unique IDs for&lt;br /&gt;
similar objects. However, further testing shows that this concern is only valid&lt;br /&gt;
in a very small subset of cases, while the cost of keeping the query objects in&lt;br /&gt;
memory, via the &lt;code&gt;$wp_filter&lt;/code&gt; global, is quite significant. As such, this&lt;br /&gt;
changeset removes the flags in favor of the &lt;code&gt;remove_filter()&lt;/code&gt; technique.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35454" title="#35454: defect (bug): `lazyload_term_meta` is called many time when calling `get_term_metadata` (closed: duplicate)"&gt;#35454&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35816" title="#35816: defect (bug): Add &amp;#34;after_get_posts&amp;#34; action to `WP_Query::get_posts()` (closed: fixed)"&gt;#35816&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [36524]: Improve `WP_Query` lazyloading logic, for better performance.  ...</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 03:04:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36524</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36524/1455332645929212</guid>
      <description>&lt;p&gt;
Improve &lt;code&gt;WP_Query&lt;/code&gt; lazyloading logic, for better performance.
&lt;/p&gt;
&lt;p&gt;
Lazyloading for comment meta and term meta, introduced into &lt;code&gt;WP_Query&lt;/code&gt; in
4.4, used flags - &lt;code&gt;updated_term_meta_cache&lt;/code&gt; and &lt;code&gt;updated_comment_meta_cache&lt;/code&gt; -
in an attempt to prevent cache priming from happening more than once per query
object. This technique was mostly effective, but not entirely efficient, since
the flag didn't prevent the &lt;code&gt;lazyload_*_meta&lt;/code&gt; callbacks from running. The
obvious solution - removing the filter callback after it'd be run once - was
dismissed for 4.4 because of concerns that &lt;code&gt;remove_filter()&lt;/code&gt; could disable
lazyloading too generally in the context of nested queries, due to the way
&lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; doesn't always build sufficiently unique IDs for
similar objects. However, further testing shows that this concern is only valid
in a very small subset of cases, while the cost of keeping the query objects in
memory, via the &lt;code&gt;$wp_filter&lt;/code&gt; global, is quite significant. As such, this
changeset removes the flags in favor of the &lt;code&gt;remove_filter()&lt;/code&gt; technique.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35454" title="#35454: defect (bug): `lazyload_term_meta` is called many time when calling `get_term_metadata` (closed: duplicate)"&gt;#35454&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35816" title="#35816: defect (bug): Add &amp;#34;after_get_posts&amp;#34; action to `WP_Query::get_posts()` (closed: fixed)"&gt;#35816&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #35816 (Add "after_get_posts" action to `WP_Query::get_posts()`) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Sat, 13 Feb 2016 02:55:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35816#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35816#comment:1/1455332106653851</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@stevegrunwell Thanks very much for the detailed request.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35454" title="#35454: defect (bug): `lazyload_term_meta` is called many time when calling `get_term_metadata` (closed: duplicate)"&gt;#35454&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A new action here shouldn't be a problem.
&lt;/p&gt;
&lt;p&gt;
That said, it would be nice to avoid the "catastrophic" consequences to begin with. You mention that the overhead is being caused by PHP keeping the &lt;code&gt;WP_Query&lt;/code&gt; objects in memory. Is this conjecture, or is your profiling telling you this? I ask because there are a number of potential resource-hogs here: &lt;code&gt;call_user_func()&lt;/code&gt; in &lt;code&gt;apply_filters()&lt;/code&gt;; excessive object cache access due to race conditions (see &lt;a href="https://core.trac.wordpress.org/ticket/35454#comment:3"&gt;https://core.trac.wordpress.org/ticket/35454#comment:3&lt;/a&gt;); etc.
&lt;/p&gt;
&lt;p&gt;
The ideal solution is to &lt;code&gt;remove_filter( 'get_term_metadata', array( $this, 'lazyload_term_meta' ), 10, 2 );&lt;/code&gt; after the callback takes place the first time. As you probably saw in the source code, I noted when the lazyload functionality was introduced that it was impossible to &lt;code&gt;remove_filter()&lt;/code&gt; because &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; was not reliably returning unique IDs for similar objects; as a result, calling &lt;code&gt;remove_filter()&lt;/code&gt; in a nested &lt;code&gt;WP_Query&lt;/code&gt; instance could result in lazyloading being disabled for *all* current instances. However, I've been doing some more testing, and while I still think it's possible for &lt;code&gt;_wp_filter_build_unique_id()&lt;/code&gt; to behave like this (something I'll open a separate ticket about), I think it will very rarely have an effect in this case, and it only did during 4.4 development because of the very specific kinds of tests I'd written.
&lt;/p&gt;
&lt;p&gt;
So here's what I'm going to do: I'm going to swap out the &lt;code&gt;updated_term_meta_cache&lt;/code&gt; flags, and replace with &lt;code&gt;remove_filter()&lt;/code&gt;. This ought to fix your immediate issue, since the object will be removed from the &lt;code&gt;$wp_filter&lt;/code&gt; global, and PHP should be able to reclaim the memory space. If you don't mind, I'll ask you to run this against your import scripts, to verify that it's resolving the issue for you. Then we can talk about whether the new action you've suggested still has a use case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #12955 (Add get_post filter) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sat, 13 Feb 2016 02:14:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/12955#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/12955#comment:32/1455329666561175</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/12955#comment:31" title="Comment 31"&gt;chriscct7&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Feedback on the current patch &lt;em&gt;(from &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1452877984010589"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.slack.com/archives/core/p1452877984010589&lt;/a&gt;):&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
The current patch proposes deprecating the ability to call new &lt;code&gt;WP_Post&lt;/code&gt; in favor of calling &lt;code&gt;WP_Post::make_instance()&lt;/code&gt;. I think a better path forward would be to have the &lt;code&gt;__construct()&lt;/code&gt; call &lt;code&gt;make_instance()&lt;/code&gt;, as there are so many plugins (and parts of core using new &lt;code&gt;WP_Post&lt;/code&gt;) then this is going to cause so many issues (it will be like deprecating &lt;code&gt;WP_Widget::WP_Widget&lt;/code&gt; but way worse).
The patch also needs unit tests.
Basically by using &lt;code&gt;make_instance()&lt;/code&gt; the goal is to be able to filter the returned object in &lt;code&gt;get_post()&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Completely agreed that it would be ideal to have the &lt;code&gt;__construct()&lt;/code&gt; call &lt;code&gt;make_instance()&lt;/code&gt;, but unfortunately PHP does not allow specifying the object return value inside a constructor.  A major goal here was to stop &lt;code&gt;get_post()&lt;/code&gt; from changing the object such that the following is always true:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="nv"&gt;$_post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$_post&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$post&lt;/span&gt;  &lt;span class="c1"&gt;// Can currently echo `false`
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Yes it is an issue that plugins use &lt;code&gt;new WP_Post()&lt;/code&gt; but that's the lesser concern.  That they do so does not cause the problem above.
&lt;/p&gt;
&lt;p&gt;
To address your concern we could have a &lt;em&gt;"soft deprecation"&lt;/em&gt; where no warning or error is thrown for numerous releases, as long as &lt;code&gt;get_post()&lt;/code&gt; can be made to not change the object that it is being effectively used to "cast" to &lt;code&gt;WP_Post&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31195 (Add a user-friendly way to preview site responsiveness in the Customizer) updated</title>
      
        <dc:creator>valendesigns</dc:creator>

      <pubDate>Sat, 13 Feb 2016 01:07:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31195#comment:91</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31195#comment:91/1455325648365853</guid>
      <description>&lt;p&gt;
I'll be working on this today to resolve the outstanding issues and add whatever unit tests are missing.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31195 (Add a user-friendly way to preview site responsiveness in the Customizer) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 13 Feb 2016 00:31:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31195#comment:90</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31195#comment:90/1455323487671890</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 13 Feb 2016 00:29:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:28/1455323343300304</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Status&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 13 Feb 2016 00:27:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:7/1455323255640898</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31897 (Update Customizer nonces via Heartbeat API) updated</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 13 Feb 2016 00:20:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31897#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31897#comment:12/1455322811941875</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32681 (Shift-clicking a menu item in the website preview iframe should open ...) closed</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 13 Feb 2016 00:11:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32681#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32681#comment:24/1455322285105656</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36523" title="Customize: Ensure that nav menu items can be shift-clicked to edit in ..."&gt;36523&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Customize: Ensure that nav menu items can be shift-clicked to edit in secondary instances of the same nav menu.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When the same nav menu is shown multiple times on a page, only the first instance of the nav menu will include &lt;code&gt;id&lt;/code&gt; attributes. Subsequent instances will have the &lt;code&gt;id&lt;/code&gt; attributes omitted. However, in both cases the underlying nav menu item's post ID is available among the &lt;code&gt;class&lt;/code&gt; names, so the post ID can be more reliably obtained from &lt;code&gt;class&lt;/code&gt; instead of the &lt;code&gt;id&lt;/code&gt; attribute.  &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36383" title="Customizer: Add shift-click on nav menu items in preview to focus on ..."&gt;[36383]&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32681" title="#32681: feature request: Shift-clicking a menu item in the website preview iframe should open ... (closed: fixed)"&gt;#32681&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [36523]: Customize: Ensure that nav menu items can be shift-clicked to edit in ...</title>
      
        <dc:creator>westonruter</dc:creator>

      <pubDate>Sat, 13 Feb 2016 00:11:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/36523</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/36523/1455322284579226</guid>
      <description>&lt;p&gt;
Customize: Ensure that nav menu items can be shift-clicked to edit in secondary instances of the same nav menu.
&lt;/p&gt;
&lt;p&gt;
When the same nav menu is shown multiple times on a page, only the first instance of the nav menu will include &lt;code&gt;id&lt;/code&gt; attributes. Subsequent instances will have the &lt;code&gt;id&lt;/code&gt; attributes omitted. However, in both cases the underlying nav menu item's post ID is available among the &lt;code&gt;class&lt;/code&gt; names, so the post ID can be more reliably obtained from &lt;code&gt;class&lt;/code&gt; instead of the &lt;code&gt;id&lt;/code&gt; attribute.
&lt;/p&gt;
&lt;p&gt;
Amends &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/36383" title="Customizer: Add shift-click on nav menu items in preview to focus on ..."&gt;[36383]&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32681" title="#32681: feature request: Shift-clicking a menu item in the website preview iframe should open ... (closed: fixed)"&gt;#32681&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #31050 (Better PDF Upload Management) updated</title>
      
        <dc:creator>mikeschroder</dc:creator>

      <pubDate>Sat, 13 Feb 2016 00:06:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31050#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31050#comment:27/1455322018741866</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/31050#comment:24" title="Comment 24"&gt;markoheijnen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Fine with only PDF. Was just checking if we could support more. Fallback can be removed since the same check is inside wp_image_editor_supports.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, nevermind, you are correct -- instantiating with &lt;code&gt;wp_get_image_editor()&lt;/code&gt; uses &lt;code&gt;_wp_image_editor_choose()&lt;/code&gt; internally, which is what &lt;code&gt;wp_image_editor_supports()&lt;/code&gt; runs before loading the image, so we're fine to skip checking for editor support ahead of time, like you did in the previous patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>