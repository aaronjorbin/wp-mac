<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 22:38:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:35/1473115100229589</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29783.2.diff attached to Ticket #29783</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 22:38:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29783/29783.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29783/29783.2.diff/1473115088883561</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37935 (Add post ID among post's post type posts) closed</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 22:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37935#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37935#comment:5/1473114161485862</guid>
      <description>wontfix: &lt;p&gt;
I can't see this as something we want to add. ID's are almost impossible to keep consecutive with how WordPress generates posts. We specifically downplay using IDs within WordPress, so to add an extra one designed to be used like this isn't something we're likely to support.
&lt;/p&gt;
&lt;p&gt;
If you wanted to implement this for a site, it shouldn't be too difficult to achieve, simply hook into the post publishing routine and add it as a post meta item (or slug perhaps, but numeric slugs are fraught with danger) and setup a query based off of that.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #37016 (Minor Fixes: Text color for "Delete" button on widget should be Red) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 22:22:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37016#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37016#comment:18/1473114161066613</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's try to have more red in 4.7 :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 21:50:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:34</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:34/1473112227293736</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>29783.diff attached to Ticket #29783</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 21:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/29783/29783.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/29783/29783.diff/1473112216850950</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34823 (image_send_to_editor filter is not fired when an Image is edited or ...) updated</title>
      
        <dc:creator>adamsilverstein</dc:creator>

      <pubDate>Mon, 05 Sep 2016 21:02:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34823#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34823#comment:6/1473109324256968</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@nicola.peluchetti
&lt;/p&gt;
&lt;p&gt;
Hi! Thanks for the bug report.
&lt;/p&gt;
&lt;p&gt;
Indeed you are correct, the &lt;code&gt;image_send_to_editor&lt;/code&gt; filter is only fired when you insert an image from the media model and could be named more clearly. It is called on the initial insert to construct the HTML for the inserted image. Once we have an image, the edit functionality runs entirely in JavaScript and when you edit image attributes, the editor's existing HTML image element is updated in place - PHP is never called. So in a way this is expected, if poorly documented behavior.
&lt;/p&gt;
&lt;p&gt;
To filter the update image attributes, you'll need to switch over to JavaScript...
&lt;/p&gt;
&lt;p&gt;
Once an image is inserted into the tinymce editor, media editing with the wp media modal is handled in &lt;code&gt;wp-includes/js/tinymce/plugins/wpeditimage/plugin.js&lt;/code&gt;. In the media model, when the user clicks the 'Update' button, the model change triggers a &lt;a href="https://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/js/media-views.js#L5043"&gt;state update&lt;/a&gt; and winds up calling the plugin &lt;a href="https://core.trac.wordpress.org/browser/tags/4.6/src/wp-includes/js/tinymce/plugins/wpeditimage/plugin.js#L356"&gt;updateImage&lt;/a&gt; function to update the editor HTML with any new image attributes.
&lt;/p&gt;
&lt;p&gt;
Immediately after the image is updated in the editor, we trigger a convenient event:
&lt;/p&gt;
&lt;pre class="wiki"&gt;wp.media.events.trigger( 'editor:image-update', {
	editor: editor,
	metadata: imageData,
	image: imageNode
} );
&lt;/pre&gt;&lt;p&gt;
You can hook in here to redo the logic you are accomplishing in PHP... For example, to remove the width/height attributes of the edited image (using tinymce's jQuery object here):
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( wp.media.events ) {
	wp.media.events.on( 'editor:image-update', function( data ) {
		data.editor.$( data.image ).attr( { 'width':  null,  'height': null } );
	} );
}
&lt;/pre&gt;&lt;p&gt;
Will this type of hook suffice for your needs? Regarding the filter - one thing we could do here is to update the docs describing how this filter can be used and when it fires. Care to provide a patch to update the docs?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #25239 ($_SERVER['SERVER_NAME'] not a reliable when generating email host names) updated</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Mon, 05 Sep 2016 20:50:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/25239#comment:35</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/25239#comment:35/1473108659011324</guid>
      <description>&lt;p&gt;
@ocean90 &amp;amp; @dd32 is there a reason for not accepting @jesin's patch?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37945 (If from_email is not set and $_SERVER['SERVER_NAME'] is empty the from ...) updated</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Mon, 05 Sep 2016 20:45:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37945#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37945#comment:3/1473108316633583</guid>
      <description>&lt;p&gt;
@ocean90 thanks for cleaning up my description and pointing out the parent issue.
&lt;/p&gt;
&lt;p&gt;
For completeness sake I'd like to add that if the From header is set explicitly the problem described in this issue will not arise.
&lt;/p&gt;
&lt;p&gt;
I've made a &lt;a class="ext-link" href="https://github.com/BjornW/admin-email-as-from-address"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;small plugin&lt;/a&gt; which explicitly sets the admin_email as the From address (with the From name WordPress). In my case this solved my problem for now.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36012 (Add .current-ancestor class to any relative menu item ancestor) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Sep 2016 20:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36012#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36012#comment:3/1473106655010504</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37946 (Media Uploads Hang using Chrome and HTTP/2) created</title>
      
        <dc:creator>pbarnhart</dc:creator>

      <pubDate>Mon, 05 Sep 2016 19:47:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37946</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37946/1473104837028521</guid>
      <description>&lt;p&gt;
Media uploads - using both the WordPress uploaded and the default browser uploader - hang when the server is using HTTP/2.  Server configured with Apache/2.4.18 (Ubuntu) OpenSSL/1.0.2h - ALPN support confirmed, pagespeed disabled, all plugins turned off.  Functions fine under current version of Microsoft Edge.
&lt;/p&gt;
&lt;p&gt;
When HTTP/2 turned off at server - and no other settings modified - Chrome works fine for image uploaded.  Fairly sure errors did not occur until Chrome disabled NPN support with Chrome 51, previously there were no issues uploading media via Chrome.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 19:36:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:7/1473104203014298</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34880 (Hidden state for Site Title and Tagline) updated</title>
      
        <dc:creator>anevins</dc:creator>

      <pubDate>Mon, 05 Sep 2016 19:24:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34880#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34880#comment:13/1473103452333656</guid>
      <description>&lt;p&gt;
Does hiding the Tagline and Site Title imply disabling the fields? There might be a scenario where you want to hide these fields, but still edit them ready for when you want them enabled. Or as people have pointed out in a recent discussion, edit them in different contexts.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21627 (Filter for custom-background CSS selector) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 05 Sep 2016 19:07:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21627#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21627#comment:20/1473102462325216</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Quickly testing &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/21627/21627.6.diff" title="Attachment '21627.6.diff' in Ticket #21627"&gt;21627.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/21627/21627.6.diff" title="Download"&gt;​&lt;/a&gt;, I was not able to get it to work with Twenty Fifteen, adding &lt;code&gt;'background-selector' =&amp;gt; '#main'&lt;/code&gt;. However, that was likely an error on my end and I think we're close to being ready with this improvement. Moving for 4.7 for consideration.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Mon, 05 Sep 2016 19:06:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:6/1473102378963902</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@swissspidy, as per your suggestion, I have changed the url from server side. Please review the new patch.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37943.2.patch attached to Ticket #37943</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Mon, 05 Sep 2016 19:03:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37943/37943.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37943/37943.2.patch/1473102198024449</guid>
      <description>&lt;p&gt;
Changed url from server side by passing pagenow
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #34880 (Hidden state for Site Title and Tagline) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:53:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34880#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34880#comment:12/1473101621783226</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473101619000172"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34904 (The design of the focus outline on buttons/elements could be improved) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:53:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34904#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34904#comment:24/1473101604293130</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Moving to future release as it is something that should be done and there are some initial proposals here. Hoping there will be some more traction in the next releases.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34904 (The design of the focus outline on buttons/elements could be improved) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:48:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34904#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34904#comment:23/1473101338704951</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473101336000167"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35576 (Menus the "Select All" link should be hidden in the "quick search" tab) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:48:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35576#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35576#comment:13/1473101327545590</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's try this for 4.7 :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35576 (Menus the "Select All" link should be hidden in the "quick search" tab) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:46:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35576#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35576#comment:12/1473101178854980</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473101176000161"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35577 (Menus screen: improve the "View All" tab panels pagination links) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:45:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35577#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35577#comment:3/1473101157815187</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's try this for 4.7 :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35577 (Menus screen: improve the "View All" tab panels pagination links) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:42:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35577#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35577#comment:2/1473100978293041</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473100976000154"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23562 (Using Speech Recognition Software with the Add Media Panel) updated</title>
      
        <dc:creator>GrahamArmfield</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23562#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23562#comment:16/1473100747479412</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/23562#comment:15" title="Comment 15"&gt;afercia&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Either we should make an action plan or close this ticket :) Moving it to Future release, as it is something that at the very least needs a decision.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think there is a piece of work being done to improve media - I read about it on the core blog or WP Tavern (can't remember which).
&lt;/p&gt;
&lt;p&gt;
Maybe efforts should be made to influence that in an accessible way rather than making specific changes to existing functionality which may get trashed in the next major release or one after.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37600 (iOS: Readonly attachment URL is not selectable) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:37:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37600#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37600#comment:8/1473100629883594</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473100627000145"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35578 (Improve the Menus screen "move" links) updated</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:35:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35578#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35578#comment:7/1473100512106950</guid>
      <description>&lt;p&gt;
Patch doesn't seem to be in need of a refresh. Should be good to go for review and further testing. :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:23:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:21/1473099828395440</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473099826000127"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37353 (Unify look and feel of search forms and results across the admin) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:22:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37353#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37353#comment:3/1473099720902441</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by cheffheid. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473099719000124"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35578 (Improve the Menus screen "move" links) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:21:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35578#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35578#comment:6/1473099713785192</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Let's try this for 4.7 :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31818 (Uniform Search Form Display/Experience) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:21:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31818#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31818#comment:17/1473099701202751</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by cheffheid. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473099699000122"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33058 ($wp_filesystem-&gt;exists('') returns a wrong answer (when ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:08:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33058#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33058#comment:7/1473098890979806</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473098888000205"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #21627 (Filter for custom-background CSS selector) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:03:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/21627#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/21627#comment:19/1473098585745009</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473098583000201"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35578 (Improve the Menus screen "move" links) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 18:01:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35578#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35578#comment:5/1473098466439298</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473098464000096"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33064 (Customizer: form inputs need a way to have hidden labels) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:57:18 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33064#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33064#comment:17/1473098238758938</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473098236000194"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #32296 (Customize: Increase width of controls pane to give more room on high ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:52:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/32296#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/32296#comment:42/1473097962585259</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473097961000186"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30741 (Build-out API for adding Customizer Panels, Sections, and Controls ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:48:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30741#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30741#comment:18/1473097706482979</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/30741#comment:16" title="Comment 16"&gt;celloexpressions&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Currently, to remove a control you need to do both &lt;code&gt;control.container.remove();&lt;/code&gt; and &lt;code&gt;api.control.remove( control.id );&lt;/code&gt;. We should create a shortcut where &lt;code&gt;control.remove();&lt;/code&gt; self-destructs. Panels and sections should have similar approaches that also delete children, and we also need to revisit adding controls in JS here.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
See &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/31334" title="#31334: enhancement: Customizer JS API should handle container removal from document and ... (assigned)"&gt;#31334&lt;/a&gt; for that piece.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30741 (Build-out API for adding Customizer Panels, Sections, and Controls ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:46:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30741#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30741#comment:17/1473097568584020</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473097566000163"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36175 (Simplify the Customizer Image Control action buttons) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:45:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36175#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36175#comment:18/1473097534232722</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #31334 (Customizer JS API should handle container removal from document and ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:44:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/31334#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/31334#comment:10/1473097494046065</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473097492000159"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35780 (New data-type: recordable video) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:44:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35780#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35780#comment:13/1473097465680051</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473097463000077"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36175 (Simplify the Customizer Image Control action buttons) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:42:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36175#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36175#comment:17/1473097342953162</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473097341000155"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18584 (Nav menus need more hooks for extensibility (on admin page &amp; in customizer)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:40:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18584#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18584#comment:81/1473097209531983</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473097207000148"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34747 (Provide more flexibility for "You are customizing" text) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:38:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34747#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34747#comment:14/1473097083536129</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473097081000143"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35210 (Add notification area to Customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:34:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35210#comment:84</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35210#comment:84/1473096845259388</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473096843000136"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37848 (Form fields misaligned on export.php) updated</title>
      
        <dc:creator>Cheffheid</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:33:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37848#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37848#comment:5/1473096795304272</guid>
      <description>&lt;i&gt;Type&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37335 (Standardized API for themes to add info/links to the customizer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:32:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37335#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37335#comment:13/1473096778582685</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473096776000132"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36012 (Add .current-ancestor class to any relative menu item ancestor) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:32:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36012#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36012#comment:2/1473096766120361</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473096763000053"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37848 (Form fields misaligned on export.php) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:32:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37848#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37848#comment:4/1473096727047301</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Going to remove the accessibility focus to get this ticket out from the a11y report but will keep following. Thinking any enhancement should be done together with other similar admin screens, see &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/16413" title="#16413: enhancement: Settings page needs HTML refactoring and UI improvements (assigned)"&gt;#16413&lt;/a&gt; and &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/18801" title="#18801: enhancement: Accessibility Enhancements to Settings API (accepted)"&gt;#18801&lt;/a&gt; (though the export screen is not exactly a "Settings page").
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22058 (Improve custom background properties UI) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:32:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22058#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22058#comment:55/1473096723544875</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473096720000128"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29158 (Customizer UI Design lacks contrast for visual hierarchy and does not ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:29:55 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29158#comment:70</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29158#comment:70/1473096595118128</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473096592000118"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18801 (Accessibility Enhancements to Settings API) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:29:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18801#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18801#comment:25/1473096582000703</guid>
      <description>&lt;p&gt;
Not exactly a "settings page" but somehow related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37848" title="#37848: enhancement: Form fields misaligned on export.php (new)"&gt;#37848&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:29:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:78/1473096572025731</guid>
      <description>&lt;p&gt;
Not exactly a "settings page" but somehow related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37848" title="#37848: enhancement: Form fields misaligned on export.php (new)"&gt;#37848&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30738 (JS content templates for base WP_Customize_Control) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:23:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30738#comment:21</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30738#comment:21/1473096217868829</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473096214000084"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>Kent Brockman</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:22:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:33/1473096137674799</guid>
      <description>&lt;p&gt;
@swissspidy:
May the search for filenames become a setting to turn on/off in the Media screen (defaulting to Off to avoid a support rush)? FYI: I have the Media Search Enhanced plugin installed in 30/80 websites. Not bad rate, and the most of them are ecommerce sites. Maybe WooCommerce should incorporate this as a feature instead? :)
In the other hand, no overhead or slow down was noticed by using the feature plugin on sites with nearly 6000 images uploaded. I would expect an even better performance if it is part of the core; is this assumption correct?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18801 (Accessibility Enhancements to Settings API) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:20:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18801#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18801#comment:24/1473096012151065</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473096008000032"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #16413 (Settings page needs HTML refactoring and UI improvements) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:20:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/16413#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/16413#comment:77/1473096011442855</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by sergey. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473096008000032"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #24661 (remove_accents is not removing combining accents) updated</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/24661#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/24661#comment:16/1473095816533928</guid>
      <description>&lt;p&gt;
Refresh of the patch, modified to target only "Mn" non-spacing combining marks, and only if they follow Latin characters. This follows the approach taken by the ICU &lt;a class="ext-link" href="http://www.unicode.org/repos/cldr/trunk/common/transforms/Latin-ASCII.xml"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Latin-ASCII.xml&lt;/a&gt; transliteration rule file. The single-byte case (when PCRE UTF-8/UCP is unavailable) uses regexs generated from the UCD data files &lt;a class="ext-link" href="http://www.unicode.org/Public/9.0.0/ucd/UnicodeData.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;UnicodeData.txt&lt;/a&gt; and &lt;a class="ext-link" href="http://www.unicode.org/Public/9.0.0/ucd/Scripts.txt"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Scripts.txt&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
The patch includes unit tests drawn from the previous ones.
&lt;/p&gt;
&lt;p&gt;
It would address the OP bug report in the parent ticket &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/22363" title="#22363: defect (bug): Accents in attachment filenames should be sanitized (assigned)"&gt;#22363&lt;/a&gt;, assuming &lt;code&gt;remove_accents&lt;/code&gt; is added as a filter on &lt;code&gt;sanitize_file_name&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34391 (Harden panel/section UI code by removing contents from being logically ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:16:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34391#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34391#comment:31/1473095800788291</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473095797000058"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30937 (Add Customizer state persistence in changesets (formerly “transactions”)) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:16:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30937#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30937#comment:52/1473095773045701</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473095770000055"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #28536 (Add browser history and deep linking for navigation in Customizer preview) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:15:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/28536#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/28536#comment:32/1473095746886211</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473095745000052"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37848 (Form fields misaligned on export.php) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:13:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37848#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37848#comment:3/1473095633130903</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473095631000022"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23562 (Using Speech Recognition Software with the Add Media Panel) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:13:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23562#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23562#comment:15/1473095622010155</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Either we should make an action plan or close this ticket :) Moving it to Future release, as it is something that at the very least needs a decision.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>24661.2.patch attached to Ticket #24661</title>
      
        <dc:creator>gitlost</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:13:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/24661/24661.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/24661/24661.2.patch/1473095610324265</guid>
      <description>&lt;p&gt;
Refresh, modified to target only "Mn" chars following Latin chars. Includes unit tests.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:13:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:32</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:32/1473095603785502</guid>
      <description>&lt;p&gt;
Thanks for the updated patch &amp;amp; tests! I'd probably split &lt;code&gt;test_s_should_include_file_names_in_attachment_searces&lt;/code&gt; into 2 tests to have 1 assertion per test method.
&lt;/p&gt;
&lt;p&gt;
The increase in main query time is a good argument against adding this to the front-end as well. Not to mention that visitors likely don't know or care about file names anyway.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:12:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:17/1473095570752008</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/34113#comment:16" title="Comment 16"&gt;akibjorklund&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@swissspidy: What is the purpose of setting the current screen to &lt;code&gt;front&lt;/code&gt; before the assertions? Since &lt;code&gt;$wp_admin_bar-&amp;gt;get_node()&lt;/code&gt; will clone the node, there should not be any effect on the content of the node.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That is being done for cleanup purposes. The screen is changed at the beginning of the method, and needs to changed back afterwards. It's before the assertion because otherwise the cleanup doesn't happen when the assertion fails.
Without a cleanup, this self-contained test will potentially have an impact on other tests, which is far from ideal.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Oh and renaming &lt;code&gt;$node_view&lt;/code&gt; variables to &lt;code&gt;$node_archive&lt;/code&gt; to match the change in node ID would make sense.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Good catch. Simply &lt;code&gt;$node&lt;/code&gt; is preferable in this case.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:09:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:16/1473095379354475</guid>
      <description>&lt;p&gt;
@swissspidy: What is the purpose of setting the current screen to &lt;code&gt;front&lt;/code&gt; before the assertions? Since &lt;code&gt;$wp_admin_bar-&amp;gt;get_node()&lt;/code&gt; will clone the node, there should not be any effect on the content of the node.
&lt;/p&gt;
&lt;p&gt;
Oh and renaming &lt;code&gt;$node_view&lt;/code&gt; variables to &lt;code&gt;$node_archive&lt;/code&gt; to match the change in node ID would make sense.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:08:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:23</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:23/1473095316674477</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473095314000034"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:04:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:20/1473095085706062</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473095083000020"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #23562 (Using Speech Recognition Software with the Add Media Panel) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:04:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/23562#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/23562#comment:14/1473095074022483</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #accessibility by afercia. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/accessibility/p1473095071000010"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37916 (Customize: ability to disable content creation in menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37916#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37916#comment:1/1473094994306926</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473094991000015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37915 (Customize: allow terms to be created in nav menus) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37915#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37915#comment:1/1473094994221000</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473094991000015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37914 (Taxonomy: Allow terms to be previewed before publishing) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 17:03:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37914#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37914#comment:1/1473094994140740</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-customize by celloexpressions. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-customize/p1473094991000015"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35395 (Provide a better gateway for code-based theme customizations with the ...) updated</title>
      
        <dc:creator>johnregan3</dc:creator>

      <pubDate>Mon, 05 Sep 2016 16:34:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35395#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35395#comment:22/1473093259425352</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@celloexpressions @westonruter @joyously
Based on my personal experience with this type of feature, I do agree with @joyously that many users would like to use this feature for theme-independent styles, as most would cover the style of their theme within the theme itself.
&lt;/p&gt;
&lt;p&gt;
Perhaps we should add a subpanel after clicking on "Custom CSS" that allows the user to choose between Theme CSS and General CSS (theme-independent), which would then take them to separate CSS editors.
&lt;/p&gt;
&lt;p&gt;
Your thoughts?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 05 Sep 2016 16:19:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:31</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:31/1473092368981635</guid>
      <description>&lt;p&gt;
Some preliminary testing on a site with ~14k attachments and ~18k posts, this change increased the main query time from 60.7ms to 187.6ms, which may be acceptable since this is only applied in an admin context, but testing on installs with a larger number of posts/attachments would be appreciated.
&lt;/p&gt;
&lt;p&gt;
For the sake of testing, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.7.diff" title="Attachment '22744.7.diff' in Ticket #22744"&gt;22744.7.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.7.diff" title="Download"&gt;​&lt;/a&gt; uses a &lt;code&gt;DISTINCT&lt;/code&gt; query instead of &lt;code&gt;GROUP BY&lt;/code&gt;, which (as I expected) didn't have any measurable performance improvement in my tests but may be worth considering.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22744.7.diff attached to Ticket #22744</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 05 Sep 2016 16:13:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22744/22744.7.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22744/22744.7.diff/1473091999383686</guid>
      <description>&lt;p&gt;
Use DISTINCT query
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37135 (Fluent interface for WP_REST_Response class) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 15:54:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37135#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37135#comment:1/1473090868414977</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by binarykitten. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473090865000076"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37560 (Enable sanitize_callback to return WP_Error) updated</title>
      
        <dc:creator>rachelbaker</dc:creator>

      <pubDate>Mon, 05 Sep 2016 15:44:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37560#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37560#comment:2/1473090284302756</guid>
      <description>&lt;i&gt;Status&lt;/i&gt;, &lt;i&gt;Owner&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37935 (Add post ID among post's post type posts) updated</title>
      
        <dc:creator>mifr45</dc:creator>

      <pubDate>Mon, 05 Sep 2016 15:39:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37935#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37935#comment:4/1473089986062087</guid>
      <description>&lt;p&gt;
@SergeyBiryukov да, я привел плохой пример, извиняюсь. Но если, например, на WordPress сделан образовательный сайт, где ученики решают задачи, отправляя ответы на сервер. Ответ сохраняется как пост с типом "Ответ" и ID, например 555. Но это ID среди всех постов, а для того чтобы вывести ID, например, в заголовке этого типа ("Ответ №25") например, проще использовать именно ID среди ответов. Или в заголовке  задачи (все тот же образовательный сайт) вывести "Задача №100" вместо "Задача про трех кроликов, поедающих морковку". Так пользователям будет проще ориентироваться.
Или другой пример. Сайт какой-нибудь компании (например, по продаже книг). Там есть заказы, которые также могут иметь этот ID среди заказов, чтобы отдавать его, например, на печать квитанции клиенту, и не возникало затруднений, например, на складе.(Будут искать заказ с айди 45, а у записи с айди 45 тип - страница, например).
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Google Translate Translation: Yes, I gave a bad example, I'm sorry. But if, for example, made WordPress educational site where students solve problems by sending answers to the server. A position is stored as a type "A" and the ID, such as ID 555. But among all stations, and to derive ID, for example, the title of this type ( "A №25") for example, it is easy to use among the responses ID . Or the title of (all the same educational website) print "The problem №100" instead of "The problem about the three rabbits eating a carrot." So users will be easier to navigate.
Or another example. The site of some companies (for example, the sale of books). There are orders, which also may have the ID among the orders, to give it, for example, to print a receipt to the customer, and it is difficult, for example, in a warehouse (Will search order with Haydee 45, while recording with Haydee 45 type. - page, for example).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37935 (Add post ID among post's post type posts) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Mon, 05 Sep 2016 15:21:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37935#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37935#comment:3/1473088879044237</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37935#comment:2" title="Comment 2"&gt;mifr45&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
But I think this functionality can help site's readers and users: they don't have to remember post's slug or post's ID to access post's url.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
How is &lt;code&gt;25&lt;/code&gt; different from &lt;code&gt;555&lt;/code&gt; in that context?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37935 (Add post ID among post's post type posts) updated</title>
      
        <dc:creator>mifr45</dc:creator>

      <pubDate>Mon, 05 Sep 2016 14:53:48 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37935#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37935#comment:2/1473087228391324</guid>
      <description>&lt;p&gt;
@dd32, yes, you're understanding me correctly and I see why you don't think that adding this field is a good idea. But I think this functionality can help site's readers and users: they don't have to remember post's slug or post's ID to access post's url. With this feature, permalinks will be like this:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
www.example.com/ticket/25 ('ticket' is a rewrite slug of a custom post type)
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
instead of this:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
www.example.com/ticket/555
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
or this:
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
www.example.com/ticket/tickets-for-mr-brown/
&lt;/p&gt;
&lt;hr /&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #1672 (Support for Technorati Blog Finder) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 14:32:20 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/1672#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/1672#comment:14/1473085940452069</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #events by bornforphp. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/events/p1473085937000033"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37885 (Build out register_setting like register_meta) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 14:15:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37885#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37885#comment:12/1473084952866162</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-restapi by joehoyle. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-restapi/p1473084951000037"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 14:09:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:30</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:30/1473084574568668</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-images by joemcgill. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-images/p1473084572000003"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 05 Sep 2016 14:04:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:29/1473084294035803</guid>
      <description>&lt;p&gt;
Thanks @swissspidy. In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.6.diff" title="Attachment '22744.6.diff' in Ticket #22744"&gt;22744.6.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.6.diff" title="Download"&gt;​&lt;/a&gt; I modified your unit test in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.5.diff" title="Attachment '22744.5.diff' in Ticket #22744"&gt;22744.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.5.diff" title="Download"&gt;​&lt;/a&gt; to also test cases where the post type is passed as a string instead of an array. I also added a test to demonstrate the current behavior of not including searches for attachment filenames in general searches.
&lt;/p&gt;
&lt;p&gt;
I tend to agree that fixing this exclusively for attachment searches is probably fine for this ticket. I'm curious if including the meta value search here will have any significant performance implications for sites containing a large post meta table—something that should also be considered if we decide to change behavior in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27266" title="#27266: defect (bug): Front end search for attachment title cannot succeed (new)"&gt;#27266&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22744.6.diff attached to Ticket #22744</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Mon, 05 Sep 2016 13:50:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22744/22744.6.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22744/22744.6.diff/1473083421145651</guid>
      <description>&lt;p&gt;
Extend unit tests
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 12:59:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:42/1473080357728846</guid>
      <description>&lt;i&gt;Owner&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 12:58:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:41</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:41/1473080309871195</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Nice job!
&lt;/p&gt;
&lt;p&gt;
Feedback for &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/26511.2.diff" title="Attachment '26511.2.diff' in Ticket #26511"&gt;26511.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/26511.2.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;The property &lt;code&gt;$available_languages&lt;/code&gt; has no &lt;code&gt;@since&lt;/code&gt; tag.
&lt;/li&gt;&lt;li&gt;The pomo library is an external library, it shouldn't get &lt;code&gt;@since&lt;/code&gt; tags for a WP version.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;get_available_languages()&lt;/code&gt; returns only core languages, something to keep in mind.
&lt;/li&gt;&lt;li&gt;&lt;code&gt;has_translations_for_locale()&lt;/code&gt; is an odd method. It's only used to check &lt;code&gt;$this-&amp;gt;translations[ $locale ]&lt;/code&gt;. I think we can remove it or should think about a getter/setter method for &lt;code&gt;$this-&amp;gt;translations&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;The actions &lt;code&gt;restore_locale &lt;/code&gt; and &lt;code&gt;switch_locale&lt;/code&gt; are running _after_ the locale has been switched. Should they be named &lt;code&gt;locale_restored&lt;/code&gt; and &lt;code&gt;locale_switched&lt;/code&gt;?
&lt;/li&gt;&lt;li&gt;The function/method name &lt;code&gt;restore_locale()&lt;/code&gt; is ambiguous. Which locale is restored? For multisite we have &lt;code&gt;restore_current_blog()&lt;/code&gt;. The DocBlock for &lt;code&gt;restore_locale()&lt;/code&gt; mentions "previous locale". Maybe name it &lt;code&gt;restore_previous_locale()&lt;/code&gt;?
&lt;/li&gt;&lt;li&gt;When calling &lt;code&gt;load_default_textdomain()&lt;/code&gt; we can pass the locale, this would avoid one &lt;code&gt;get_locale()&lt;/code&gt; call.
&lt;/li&gt;&lt;li&gt;While looking at &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/26511" title="#26511: feature request: Introduce a locale-switching function (closed: fixed)"&gt;#26511&lt;/a&gt;: It's likely that we'll have a new function &lt;code&gt;get_user_locale()&lt;/code&gt; which should probably have it's own filter. Do we need context - site vs. user - support for the switcher? What would be required to make this possible?
&lt;/li&gt;&lt;li&gt; I'm wondering if we really have to cache the translations now that we have &lt;code&gt;_load_textdomain_just_in_time()&lt;/code&gt;. Probably only because not all plugins/themes are using language packs, yet…
&lt;/li&gt;&lt;li&gt;Do we have to care about unloaded text domains? See &lt;code&gt;unload_textdomain()&lt;/code&gt; and the global &lt;code&gt;$l10n_unloaded&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;This really should be tested in combination with &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29783" title="#29783: feature request: User Admin Language (closed: fixed)"&gt;#29783&lt;/a&gt; (needs-refresh). How does this work performance-wise for a regular site with 1 theme and maybe 10 plugins? (This should include one of the big ones like Jetpack or WooCommerce.)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #29783 (User Admin Language) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 12:51:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/29783#comment:33</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/29783#comment:33/1473079868669798</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Mon, 05 Sep 2016 12:47:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:5/1473079661328971</guid>
      <description>&lt;p&gt;
Ok. I shall create another patch like you suggested.
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37943#comment:4" title="Comment 4"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
On Multisite, new plugins can only be installed via &lt;code&gt;wp-admin/network/plugin-install.php&lt;/code&gt;, not &lt;code&gt;wp-admin/plugin-install.php&lt;/code&gt;. That's why &lt;code&gt;wp_ajax_install_plugin()&lt;/code&gt; uses &lt;code&gt;network_admin_url()&lt;/code&gt;. Importers are installed on &lt;code&gt;wp-admin/import.php&lt;/code&gt; though, so that assumption breaks.
&lt;/p&gt;
&lt;p&gt;
Replacing the URL in the JavaScript is not a good idea as it only treats the symptom, not the cause.
&lt;/p&gt;
&lt;p&gt;
We could solve this by passing &lt;code&gt;pagenow&lt;/code&gt; in the Ajax request and change the URL depending on that, like we already do with &lt;code&gt;wp_ajax_search_install_plugins()&lt;/code&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #32394,​35614 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 05 Sep 2016 12:08:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32394%2C35614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32394%2C35614/1473077320377202</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38522" title="Role/Capability: Correct the multisite cap tests after [38521].
See ..."&gt;38522&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Role/Capability: Correct the multisite cap tests after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38521" title="Role/Capability: Split meta and primitive capabilities in the helper ..."&gt;[38521]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35614" title="#35614: enhancement: Cannot check capabilities on single taxonomy terms (closed: fixed)"&gt;#35614&lt;/a&gt;&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32394" title="#32394: enhancement: Tests_User_Capabilities should test all capabilities for each role (closed: fixed)"&gt;#32394&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38522]: Role/Capability: Correct the multisite cap tests after [38521].  See ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 05 Sep 2016 12:08:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38522</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38522/1473077319882832</guid>
      <description>&lt;p&gt;
Role/Capability: Correct the multisite cap tests after &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38521" title="Role/Capability: Split meta and primitive capabilities in the helper ..."&gt;[38521]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35614" title="#35614: enhancement: Cannot check capabilities on single taxonomy terms (closed: fixed)"&gt;#35614&lt;/a&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32394" title="#32394: enhancement: Tests_User_Capabilities should test all capabilities for each role (closed: fixed)"&gt;#32394&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37280 (Remove boldness from update notices) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 05 Sep 2016 12:04:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37280#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37280#comment:8/1473077078751893</guid>
      <description>&lt;p&gt;
thanks @dd32
&lt;/p&gt;
&lt;p&gt;
If we want to keep it simple (not changing tags for JS), all I see left now would be this line:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;$output .= "&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;{$details['message']}&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;";&lt;/code&gt; in &lt;code&gt;template.php L.1480&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
I must not be the one doing the final patch, as always just trying to contribute.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #25239,​37945 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:53:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=25239%2C37945</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=25239%2C37945/1473076434277593</guid>
      <description>duplicate: &lt;p&gt;
Thanks for the report, we're already tracking this issue in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/25239" title="#25239: defect (bug): $_SERVER['SERVER_NAME'] not a reliable when generating email host names (reviewing)"&gt;#25239&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>37945.2.patch attached to Ticket #37945</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:53:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37945/37945.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37945/37945.2.patch/1473076396037328</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37945 (If from_email is not set and $_SERVER['SERVER_NAME'] is empty the from ...) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:48:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37945#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37945#comment:1/1473076097698715</guid>
      <description>&lt;i&gt;Description&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37061 (Use `get_sites()` in `get_blogs_of_user()`) updated</title>
      
        <dc:creator>flixos90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:46:45 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37061#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37061#comment:3/1473076005172439</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37061#comment:2" title="Comment 2"&gt;jorbin&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I don't think having something different returned under MS from single site is a good decision. Seems like something that could cause plugins to have bugs only under one or the other. Or for code originally written for MS to not work and cause confusion when run on single site installs.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I think the real problem is that we are loading the &lt;code&gt;WP_Site&lt;/code&gt; class on Multisite only. I think we should made it compatible with non-multisite installs and load it on every setup which would allow us to fix this issue consistently. After all, every setup has a site - only in a Multisite there is a &lt;code&gt;WP_Network&lt;/code&gt;, but I think the &lt;code&gt;WP_Site&lt;/code&gt; class can be useful on a regular setup as well. Let's think about this and maybe open a ticket.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37295 (PHP 7.1.0: Tests_Query_IsTerm::test_cat_uncat_action_tax() is failing) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:46:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37295#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37295#comment:14/1473076004795314</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Component&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
A &lt;em&gt;fix&lt;/em&gt; for this was committed the other day: &lt;a class="ext-link" href="https://github.com/php/php-src/commit/906456c4106ac74da0688b2481e91e27de3b176b"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/php/php-src/commit/906456c4106ac74da0688b2481e91e27de3b176b&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The warning will remain but the call is no longer aborted.
&lt;/p&gt;
&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37772" title="#37772: defect (bug): Not working &amp;#34;wp_default_styles&amp;#34; on PHP 7.1.0 (closed: fixed)"&gt;#37772&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37625 (Add PHP 7.1 to tested versions in Travis) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:43:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37625#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37625#comment:6/1473075799477823</guid>
      <description>&lt;p&gt;
@jorbin Looks like the PHP 7.1 setup is broken since &lt;a class="ext-link" href="https://travis-ci.org/aaronjorbin/develop.wordpress/jobs/155607823"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://travis-ci.org/aaronjorbin/develop.wordpress/jobs/155607823&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
/home/travis/build.sh: line 45:  3777 Bus error               (core dumped) grunt $WP_TRAVISCI
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Can you take a look?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:34:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:40/1473075297051716</guid>
      <description>&lt;p&gt;
No worries.
&lt;/p&gt;
&lt;p&gt;
Just realized I forgot to properly add &lt;code&gt;remove_action()&lt;/code&gt; in &lt;code&gt;test_restore_locale_action_passes_previous_locale()&lt;/code&gt;. Will do that in the next iteration of the patch, but first it'd be great to get some feedback from someone like @ocean90 :-)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37944 (review of opening tags immediately followed by closing tags of same type) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:34:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37944#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37944#comment:4/1473075273703331</guid>
      <description>&lt;p&gt;
Ok, last chance to keep this ticket alive:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;label&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; in &lt;code&gt;class-wp-editor.php&lt;/code&gt;, L.1436
&lt;/p&gt;
&lt;p&gt;
Do we need this one?
&lt;/p&gt;
&lt;p&gt;
All the others are indispensable placeholders, as I understand now, do I?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37945.patch attached to Ticket #37945</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:33:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37945/37945.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37945/37945.patch/1473075238997307</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:28:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:4/1473074888756243</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
On Multisite, new plugins can only be installed via &lt;code&gt;wp-admin/network/plugin-install.php&lt;/code&gt;, not &lt;code&gt;wp-admin/plugin-install.php&lt;/code&gt;. That's why &lt;code&gt;wp_ajax_install_plugin()&lt;/code&gt; uses &lt;code&gt;network_admin_url()&lt;/code&gt;. Importers are installed on &lt;code&gt;wp-admin/import.php&lt;/code&gt; though, so that assumption breaks.
&lt;/p&gt;
&lt;p&gt;
Replacing the URL in the JavaScript is not a good idea as it only treats the symptom, not the cause.
&lt;/p&gt;
&lt;p&gt;
We could solve this by passing &lt;code&gt;pagenow&lt;/code&gt; in the Ajax request and change the URL depending on that, like we already do with &lt;code&gt;wp_ajax_search_install_plugins()&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37945 (If from_email is not set and $_SERVER['SERVER_NAME'] is empty the from ...) created</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:28:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37945</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37945/1473074886301262</guid>
      <description>&lt;p&gt;
In some WordPress server setups the &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; may not have been setup, so &lt;code&gt;$_SERVER['SERVER_NAME']&lt;/code&gt; is empty.
&lt;/p&gt;
&lt;p&gt;
For example Nginx (see &lt;a class="ext-link" href="http://nginx.org/en/docs/http/server_names.html"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://nginx.org/en/docs/http/server_names.html&lt;/a&gt;) will set the server name to empty if none is set in the configuration, but afaik it is also possible for Apache to set the ServerName to an empty string.
&lt;/p&gt;
&lt;p&gt;
If the from_email address is *also* NOT set this will cause PHPMailer to throw an exception complaining about an invalid address. This will cause an infamous white screen.
&lt;/p&gt;
&lt;p&gt;
In &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32702" title="#32702: defect (bug): Unit tests should set `$_SERVER['SERVER_NAME']` for `wp_mail()` (closed: fixed)"&gt;#32702&lt;/a&gt; this was also mentioned but @boonebgorges thought the test was to blame and fixed the test, but IMHO the test was correct and the code should be fixed.
&lt;/p&gt;
&lt;p&gt;
We need to check if the SERVER_NAME is empty or not. I've attached a patch in which I check to make sure SERVER_NAME is not empty and if it is empty it will resort to using the admin_email address instead. At least this mail address should be valid, although it might still fail to deliver the email sent due to using a different domain than the server WordPress is installed on.
&lt;/p&gt;
&lt;p&gt;
A much better option might be to allow the user to choose the from email address, but apparently this has been considered and at that moment considered a bad idea, see &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/23365" title="#23365: enhancement: Add Option for user defined from_email (closed: wontfix)"&gt;#23365&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:39/1473074587904304</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/26511#comment:37" title="Comment 37"&gt;swissspidy&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Agree, we can get rid of that extra check, although I usually like more strict comparisons.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
In case I'm checking for &lt;strong&gt;presence&lt;/strong&gt;, I'm all strict, too. In this case, however, we check for &lt;strong&gt;absence&lt;/strong&gt;, and furthermore can spare an unnecessary check. That's why I suggested to combine the two checks - which you already implemented. :)
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Regarding &lt;code&gt;$previous_locale&lt;/code&gt;, this won't work because that would make &lt;code&gt;$previous_locale&lt;/code&gt; equal to &lt;code&gt;$locale&lt;/code&gt;. I'm writing a test right now to demonstrate that &lt;code&gt;$previous_locale&lt;/code&gt; is really the previous locale.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, forget my comment on this. It doesn't make any sense. I got distracted while reading your patch and then again while writing the comment here. :) I thought I saw some initialization where it wasn't (yet) needed, but obviously this was not the correct place.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37898 (Prompt message when removing a plugin is sometimes misleading) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 11:02:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37898#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37898#comment:4/1473073363007830</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37898#comment:3" title="Comment 3"&gt;OriginalEXE&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not even the existence of uninstall.php can guarantee that the plugin will remove its data (it could be used for something else), I think that's worth thinking about.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Uhm yes, that's what this file is for. It should definitely &lt;strong&gt;not&lt;/strong&gt; be used for something else.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="ext-link" href="https://developer.wordpress.org/plugins/the-basics/uninstall-methods/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://developer.wordpress.org/plugins/the-basics/uninstall-methods/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #32394,​35614 batch updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=32394%2C35614</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=32394%2C35614/1473073182687285</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38521" title="Role/Capability: Split meta and primitive capabilities in the helper ..."&gt;38521&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Role/Capability: Split meta and primitive capabilities in the helper functions in the roles and capability tests so primitive capability tests can be made more accurate.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35614" title="#35614: enhancement: Cannot check capabilities on single taxonomy terms (closed: fixed)"&gt;#35614&lt;/a&gt;&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32394" title="#32394: enhancement: Tests_User_Capabilities should test all capabilities for each role (closed: fixed)"&gt;#32394&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38521]: Role/Capability: Split meta and primitive capabilities in the helper ...</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:59:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38521</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38521/1473073182211871</guid>
      <description>&lt;p&gt;
Role/Capability: Split meta and primitive capabilities in the helper functions in the roles and capability tests so primitive capability tests can be made more accurate.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35614" title="#35614: enhancement: Cannot check capabilities on single taxonomy terms (closed: fixed)"&gt;#35614&lt;/a&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/32394" title="#32394: enhancement: Tests_User_Capabilities should test all capabilities for each role (closed: fixed)"&gt;#32394&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37259 (the_archive_description() doesn't output a description on author ...) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:59:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37259#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37259#comment:14/1473073169802669</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core by swissspidy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core/p1473073168000051"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37836 (Cannot disable 'Add existing user') updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:57:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37836#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37836#comment:1/1473073076593331</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Version&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Introduced in &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/16294" title="user-new.php revamp.  Separate caps for adding users vs. creating ..."&gt;[16294]&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:53:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:179</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:179/1473072809137557</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:178" title="Comment 178"&gt;GaryJ&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:177" title="Comment 177"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would propose as another strawman that we create &lt;code&gt;wp-includes/classes&lt;/code&gt; and &lt;code&gt;wp-admin/classes&lt;/code&gt; directories and slowly start moving classes that we want to autoload into those two directories, renaming their files to match their classname.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, I would disagree about the &lt;code&gt;classes&lt;/code&gt; naming of those directories, as it semantically excludes the potential future use of interface and traits, without having to add other directories to map to.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
+1
&lt;/p&gt;
&lt;p&gt;
In addition, there still would be classes that do not live in that folder.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34113 (Add a 'View Archive' link to admin bar for post types.) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:52:21 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34113#comment:15</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34113#comment:15/1473072741659007</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/34113/34113.3.diff" title="Attachment '34113.3.diff' in Ticket #34113"&gt;34113.3.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/34113/34113.3.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Make it work for built-int &lt;code&gt;post&lt;/code&gt; post type.
&lt;/li&gt;&lt;li&gt;Change admin bar node ID to &lt;code&gt;archive&lt;/code&gt;, as &lt;code&gt;view&lt;/code&gt; is used for single post view nodes already.
&lt;/li&gt;&lt;li&gt;Adds tests to demonstrate both scenarios: archives link visible vs. not visible.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>34113.3.diff attached to Ticket #34113</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:50:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/34113/34113.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/34113/34113.3.diff/1473072629113872</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:30:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:28/1473071437997065</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/22744#comment:27" title="Comment 27"&gt;joemcgill&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.4.diff" title="Attachment '22744.4.diff' in Ticket #22744"&gt;22744.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.4.diff" title="Download"&gt;​&lt;/a&gt; Accomplishes this task without introducing any new filters. To do so, any time we execute a search query on attachments we modify the JOIN clause to include postmeta, the WHERE clause to include searches for postmeta where &lt;code&gt;_wp_attached_file&lt;/code&gt; is the &lt;code&gt;meta_key&lt;/code&gt; and the GROUP BY clause to avoid returning duplicate posts.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the refreshed patch! In &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.5.diff" title="Attachment '22744.5.diff' in Ticket #22744"&gt;22744.5.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.5.diff" title="Download"&gt;​&lt;/a&gt; I made it work with &lt;code&gt;post_type&lt;/code&gt; being an array too. Added a test to demonstrate it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
One question is whether we should search attachment file names any time &lt;code&gt;attachment&lt;/code&gt; post types are included in a search query, e.g. &lt;code&gt;$q['post_type'] =&amp;gt; array('attachment', 'post')&lt;/code&gt;, or only when exclusively doing searches on attachments? Currently, I'm only doing the latter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Since this ticket is mainly about the media screen, I think fixing it only there for now is fine. It can be considered in &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/27266" title="#27266: defect (bug): Front end search for attachment title cannot succeed (new)"&gt;#27266&lt;/a&gt;, even though that ticket is only slightly connected.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22744.5.diff attached to Ticket #22744</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 10:20:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22744/22744.5.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22744/22744.5.diff/1473070844842028</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 09:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:38</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:38/1473067982387656</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/26511/26511.2.diff" title="Attachment '26511.2.diff' in Ticket #26511"&gt;26511.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/26511/26511.2.diff" title="Download"&gt;​&lt;/a&gt; includes the previous suggestions including a &lt;code&gt;test_restore_locale_action_passes_previous_locale&lt;/code&gt; test.
&lt;/p&gt;
&lt;p&gt;
There's also an incomplete &lt;code&gt;test_switch_to_locale_changes_wp_locale_global&lt;/code&gt; test to assert the &lt;code&gt;$wp_locale&lt;/code&gt; object contains the correct variables. It's incomplete because the translation files in the test directory (introduced in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/35284" title="#35284: enhancement: Unit tests for wp_get_pomo_file_data() (closed: fixed)"&gt;#35284&lt;/a&gt;) do not contain the necessary translations. The easiest way to solve this would be to add translation files for an RTL language.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>26511.2.diff attached to Ticket #26511</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 09:29:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/26511/26511.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/26511/26511.2.diff/1473067796880071</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>GaryJ</dc:creator>

      <pubDate>Mon, 05 Sep 2016 09:16:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:178</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:178/1473066972115028</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:177" title="Comment 177"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I would propose as another strawman that we create &lt;code&gt;wp-includes/classes&lt;/code&gt; and &lt;code&gt;wp-admin/classes&lt;/code&gt; directories and slowly start moving classes that we want to autoload into those two directories, renaming their files to match their classname.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
FWIW, I would disagree about the &lt;code&gt;classes&lt;/code&gt; naming of those directories, as it semantically excludes the potential future use of interface and traits, without having to add other directories to map to.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37787 (WordPress MU 4.5.3 password reset mail doet not work. Other mail does.) updated</title>
      
        <dc:creator>peterwsterling</dc:creator>

      <pubDate>Mon, 05 Sep 2016 09:13:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37787#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37787#comment:6/1473066811209148</guid>
      <description>&lt;p&gt;
@BjornW the issue I was seeing appears to be fixed by this patch:
&lt;a href="https://core.trac.wordpress.org/ticket/37736"&gt;https://core.trac.wordpress.org/ticket/37736&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37787 (WordPress MU 4.5.3 password reset mail doet not work. Other mail does.) updated</title>
      
        <dc:creator>BjornW</dc:creator>

      <pubDate>Mon, 05 Sep 2016 08:55:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37787#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37787#comment:5/1473065743076149</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37787#comment:4" title="Comment 4"&gt;peterwsterling&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is an issue I am finding on WP 4.6 too. Any progress? Can I help? Happy to take direction or provide data/examples/etc...
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Hi @peterwsterling is the problem happening to you on Multisite as well?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Mon, 05 Sep 2016 08:41:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:37/1473064917281754</guid>
      <description>&lt;p&gt;
@tfrommen Agree, we can get rid of that extra check, although I usually like more strict comparisons.
&lt;/p&gt;
&lt;p&gt;
Regarding &lt;code&gt;$previous_locale&lt;/code&gt;, this won't work because that would make &lt;code&gt;$previous_locale&lt;/code&gt; equal to &lt;code&gt;$locale&lt;/code&gt;. I'm writing a test right now to demonstrate that &lt;code&gt;$previous_locale&lt;/code&gt; is really the previous locale.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Mon, 05 Sep 2016 07:00:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:3/1473058824460277</guid>
      <description>&lt;p&gt;
Thanks @netweb
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37943#comment:2" title="Comment 2"&gt;netweb&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@joelcj91 Welcome to Trac, thanks for a great Trac ticket, all the keywords, component, focuses, versions are perfect, detailed reproducible steps and and patch, boom, thanks :)
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>jacobsantos</dc:creator>

      <pubDate>Mon, 05 Sep 2016 06:33:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:82</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:82/1473057186450108</guid>
      <description>&lt;p&gt;
@MikeSchinkel I would like to see what your implementation would be. I know you have your library and it is nice. Does wonderboymusic know about it? I would like to see what you mean in a patch?
&lt;/p&gt;
&lt;p&gt;
My interest in this ticket is merely a curiosity, since I do not intend to contribute any code for reasons. My own fork and experiments seem to prove, at least anecdotally and to myself, that the registry pattern combined with facades makes for extremely powerful and simple code. It is much more clean and the concerns are better separated.
&lt;/p&gt;
&lt;p&gt;
I think that Laravel does enough right while attempting to be as simple as possible, that I would rather imitate it at this point. Or at least up until the evolution of code proves a better way. I also don't understand why functions couldn't also be provided for the archetypes or programmers that may not understand OOP or just don't want to deal with objects.
&lt;/p&gt;
&lt;p&gt;
What is wrong with &lt;code&gt;wp_service_wpdb()&lt;/code&gt;? or &lt;code&gt;wp_service_wordpress_version()&lt;/code&gt;? These functions exist only to return &lt;code&gt;WP::service( 'name' )&lt;/code&gt;. Sure, you will have a lot more functions added, but these functions don't really do anything, so they would be short and testing them would be relatively simple. Just check that when the service is registered, they return the object you are looking for or if the service is not registered, they don't.
&lt;/p&gt;
&lt;p&gt;
Functions, if done right, could allow for a functional paradigm composition, which would allow for beautiful construction of building solutions. I am still experimenting with this concept, so I don't have any conclusion. It is more that creating functions that could be composed is difficult. That and using objects with static methods relieves some of the usefulness of using functions by themselves. I believe Laravel also provides functions that forward to static methods. The documentation only describes the functions, so they are more likely to be used in user code
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
I don't want to discount your experience, even if it conflicts with my beliefs. As much as I would like to believe novice programmers would overcome obstacles given enough time and training. I have known enough people that lacked the intelligence or fortitude to raise above the challenge.
&lt;/p&gt;
&lt;p&gt;
At a certain point, the blame for the student not learning has to be put at the teacher and the methodology employed, until all known methods of teaching and explanation are exhausted. I figure I am just a terrible teacher and part of the reason I don't completely buy-in that novice programmers would be too stupid to put two and two together. Sure some might get some odd number, especially at first while it is still new, but I don't think much of the fundamentals are necessary to eventually conclude 4. Even for the most dense of pupils.
&lt;/p&gt;
&lt;p&gt;
If you say that people have problems with &lt;code&gt;::&lt;/code&gt;, then I will take your word for it, until further evidence proves otherwise. I think with most things, a beginning programmer just has to accept that &lt;code&gt;ClassName::methodName()&lt;/code&gt; just works like &lt;code&gt;functionName()&lt;/code&gt;, except that there is some weird characters in the signature. For the most part, I would just not explain it. When did a theme author care what they were copying, as long as what they were copying just worked?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #26511 (Introduce a locale-switching function) updated</title>
      
        <dc:creator>tfrommen</dc:creator>

      <pubDate>Mon, 05 Sep 2016 05:58:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/26511#comment:36</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/26511#comment:36/1473055137431115</guid>
      <description>&lt;p&gt;
Hey, cool this is moving forward!
&lt;/p&gt;
&lt;p&gt;
Thanks, @swissspidy - and brilliant how you got rid of the extra class. Also, great to see you were able to take most of my patch as is for your version.
&lt;/p&gt;
&lt;p&gt;
Some small improvements:
&lt;/p&gt;
&lt;p&gt;
In &lt;code&gt;WP_Locale_Switcher::switch_to_locale()&lt;/code&gt;, instead of this:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$l10n&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$l10n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$l10n&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;load_default_textdomain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
we could to that (and save an &lt;strong&gt;unnecessary&lt;/strong&gt; extra check):
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nv"&gt;$l10n&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$l10n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;array&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;load_default_textdomain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
Also, in &lt;code&gt;WP_Locale_Switcher::restore_locale()&lt;/code&gt;, move the initialization of &lt;code&gt;$previous_locale&lt;/code&gt; to after the check, so we have this instead:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nb"&gt;array_pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;locales&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// The stack is empty, bail.
&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$previous_locale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;locales&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
If you would like, I can provide a new patch for this.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36264 (Make wpList easier to contribute to) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Mon, 05 Sep 2016 04:44:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36264#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36264#comment:13/1473050654047893</guid>
      <description>&lt;i&gt;Focuses&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@obenland Looks pretty good. It would be nice to have descriptions on all of the &lt;code&gt;@returns&lt;/code&gt; notations in addition to the types.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37935 (Add post ID among post's post type posts) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 03:48:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37935#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37935#comment:1/1473047319546987</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hi @mifr45 and welcome back to Trac,
&lt;/p&gt;
&lt;p&gt;
If I'm understanding correctly, you're proposing adding an additional incremental ID per post type?
For example, post_id = 5 might be custom_post_type_id = 1 if it's the first of that post type?
&lt;/p&gt;
&lt;p&gt;
I personally don't see a valid reason for needing that, and can think of many reasons why using such a field would be a bad idea in practice.
&lt;/p&gt;
&lt;p&gt;
Can you perhaps explain more of what you'd hope to achieve here to aid in determining if it's something we should add to Core?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37280 (Remove boldness from update notices) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:57:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37280#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37280#comment:7/1473044264338509</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37280#comment:5" title="Comment 5"&gt;Presskopp&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ok, if I'm not mistaking, that makes it a patch. But wait! Is there any good in this:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;printf(__('Comment by %s moved to the trash.'), '&amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt;');&lt;/code&gt;
&lt;code&gt;printf(__('Comment by %s marked as spam.'), '&amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt;');&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
If you look at how it's actually used in the UI, the JS fills the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tags in with the commenter's name.
Javascript doesn't understand &lt;code&gt;%s&lt;/code&gt; as a placeholder, so HTML tags are used instead. If we want to remove the bolding of the  username here we'd need to replace it with something such as &lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; and update whatever JS uses it to search for the &lt;code&gt;span&lt;/code&gt; tag rather than &lt;code&gt;strong&lt;/code&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37944 (review of opening tags immediately followed by closing tags of same type) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:52:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37944#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37944#comment:3/1473043970881993</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
There is a &lt;code&gt;return '&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;';&lt;/code&gt; in customize-controls.js , L.509.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah so there is, I had excluded JS from my greps.. That particular case gets content injected into the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elsewhere, as it's just the container for more content from other parts of the control.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #35517 (Work around PHP7 php-ssh2 breakage) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:48:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/35517#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/35517#comment:13/1473043688446619</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37942" title="#37942: defect (bug): ssh2 update failing (closed: duplicate)"&gt;#37942&lt;/a&gt; was marked as a duplicate.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
As I've marked another ticket as a duplicate of this, I'd just like to express my personal thoughts here.
&lt;/p&gt;
&lt;p&gt;
I personally don't really want to touch the internals of this transport, due to it's limited use, and how rare it is that it's supported.
Testing this change on older versions of the extension, interactions with ssh servers, and my experience of changing internals of transports has told me that if you fix it for one configuration, it'll break ten others.
If the PHP Extension-supplied bindings are faulty, the extension should be fixed instead (&lt;a class="ext-link" href="https://bugs.php.net/bug.php?id=71376"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;which it is, hopefully&lt;/a&gt;).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:45:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:14/1473043552326396</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #33742 (Menu Customizer: Adding draft items?) updated</title>
      
        <dc:creator>welcher</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:45:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/33742#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/33742#comment:13/1473043536179202</guid>
      <description>&lt;p&gt;
I did some digging on this and it seems that when &lt;code&gt;WP_Query&lt;/code&gt; is run without a &lt;code&gt;post_status&lt;/code&gt; parameter in the admin, all post types that are available to the admin are queried:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;class-wp-query&lt;/code&gt; ~ line 2345
&lt;/p&gt;
&lt;pre class="wiki"&gt;if ( $this-&amp;gt;is_admin ) {
    // Add protected states that should show in the admin all list.
    $admin_all_states = get_post_stati( array('protected' =&amp;gt; true, 'show_in_admin_all_list' =&amp;gt; true) );
    foreach ( (array) $admin_all_states as $state ) {
        $where .= " OR {$this-&amp;gt;db-&amp;gt;posts}.post_status = '$state'";
    }
}
&lt;/pre&gt;&lt;p&gt;
The above generates SQL like the following:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;AND (wp_posts.post_status = 'publish' OR wp_posts.post_status = 'future' OR wp_posts.post_status = 'draft' OR wp_posts.post_status = 'pending' OR wp_posts.post_status = 'private')&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
As such , the query is exhibiting expected behaviour - just the wrong behaviour for this use case.
&lt;/p&gt;
&lt;p&gt;
At the end of the day, both patches are adding &lt;code&gt;'post_status' =&amp;gt; 'publish'&lt;/code&gt; to the query but @westonruter 's is a more standardized approach. I'd go with it.
&lt;/p&gt;
&lt;p&gt;
I do wonder now however if this needs a filter to allow this behaviour? I can imagine someone out in the wild is using this bug as a feature.
&lt;/p&gt;
&lt;p&gt;
At any rate we should get some unit tests on this too.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #35517,​37942 batch updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=35517%2C37942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=35517%2C37942/1473043433829782</guid>
      <description>duplicate: &lt;p&gt;
@billthor55 Thanks for getting back to me.
&lt;/p&gt;
&lt;p&gt;
I'm going to mark this as a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35517" title="#35517: defect (bug): Work around PHP7 php-ssh2 breakage (new)"&gt;#35517&lt;/a&gt; then.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #37942 (ssh2 update failing) updated</title>
      
        <dc:creator>billthor55</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:02:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37942#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37942#comment:2/1473040973206370</guid>
      <description>&lt;p&gt;
Yes I am using PHP7.  I was having the same problem several months ago on PHP5.  I worked around it then by using the ssh-sftp-updater plugin.  This time both plug-ins failed.
&lt;/p&gt;
&lt;p&gt;
The patch I provided returned valid values for the values I tested.  The update completed as expected with the patch applied.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37189 (In wp_term_query on cache ids) updated</title>
      
        <dc:creator>boonebgorges</dc:creator>

      <pubDate>Mon, 05 Sep 2016 02:02:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37189#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37189#comment:3/1473040928519067</guid>
      <description>&lt;p&gt;
Yes, let's do it.
&lt;/p&gt;
&lt;p&gt;
A couple comments on &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37189/37189.diff" title="Attachment '37189.diff' in Ticket #37189"&gt;37189.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37189/37189.diff" title="Download"&gt;​&lt;/a&gt;:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;It's not necessary to delete the cache incrementor on WP update. WP flushes all caches during the update process.
&lt;/li&gt;&lt;li&gt;When &lt;code&gt;fields&lt;/code&gt; is &lt;code&gt;all&lt;/code&gt;, two queries will take place: &lt;code&gt;SELECT * ... WHERE [query conditions]&lt;/code&gt; and &lt;code&gt;SELECT * ... WHERE t.term_id IN $non_cached_array&lt;/code&gt;. This seems inefficient. Can we fix this so that the first query will be &lt;code&gt;SELECT t.term_id&lt;/code&gt; instead?
&lt;/li&gt;&lt;li&gt;Related: You handle &lt;code&gt;fields=all&lt;/code&gt; one way and and all other values of &lt;code&gt;fields&lt;/code&gt; another. I guess this takes advantage of the fact that &lt;code&gt;t.term_id&lt;/code&gt; is one of the SELECTed fields for each other value of &lt;code&gt;fields&lt;/code&gt;. This seems like a hack to me. Would the hack go away if we were doing a &lt;code&gt;SELECT t.term_id&lt;/code&gt; query for all values of &lt;code&gt;fields&lt;/code&gt;? What do you think is the wisest thing to do here?
&lt;/li&gt;&lt;li&gt;Values of &lt;code&gt;fields&lt;/code&gt; other than 'all' and 'ids' will *set* the cache, but they won't *use* the cache. Can we fix this? Should we?
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37944 (review of opening tags immediately followed by closing tags of same type) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 05 Sep 2016 01:55:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37944#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37944#comment:2/1473040532236443</guid>
      <description>&lt;p&gt;
Ah, ok, now it makes some sense to me.
&lt;/p&gt;
&lt;p&gt;
There is a &lt;code&gt;return '&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;';&lt;/code&gt; in &lt;code&gt;customize-controls.js&lt;/code&gt; , L.509.
&lt;/p&gt;
&lt;p&gt;
Will see if i still find surplus ones.
&lt;/p&gt;
&lt;p&gt;
same with &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;, see
&lt;a href="https://core.trac.wordpress.org/ticket/37280#comment:5"&gt;https://core.trac.wordpress.org/ticket/37280#comment:5&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 05 Sep 2016 01:55:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:177</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:177/1473040502532199</guid>
      <description>&lt;p&gt;
I've attached a strawman classmap generator and example output showing how classmaps can easily be generated without the need for Composer.
&lt;/p&gt;
&lt;p&gt;
The next step would be to implement a simple classmap autoloader to be required at the beginning of &lt;code&gt;wp-settings&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I would propose as another strawman that we create &lt;code&gt;wp-includes/classes&lt;/code&gt; and &lt;code&gt;wp-admin/classes&lt;/code&gt; directories and slowly start moving classes that we want to autoload into those two directories, renaming their files to match their classname.
&lt;/p&gt;
&lt;p&gt;
So for example:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/wp-includes/class-wp-editor.php
&lt;/pre&gt;&lt;p&gt;
Would be moved to:
&lt;/p&gt;
&lt;pre class="wiki"&gt;/wp-includes/classes/_WP_Editors.php
&lt;/pre&gt;&lt;p&gt;
Once all classes were moved into those directories then classmap generation could be handled automatically &lt;em&gt;(if desired)&lt;/em&gt; in a &lt;code&gt;'shutdown'&lt;/code&gt; hook when a constant was set to true, e.g. &lt;code&gt;WP_GENERATE_CLASSMAP&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
In addition I would envision adding a &lt;code&gt;register_autoload_dir()&lt;/code&gt; that would allow plugins and themes to register their own autoload directories and this would allow WordPress to auto-generate their classmaps as well.
&lt;/p&gt;
&lt;p&gt;
I intend to work on this after I finish some other time-critical projects.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37944 (review of opening tags immediately followed by closing tags of same type) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 01:50:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37944#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37944#comment:1/1473040216223497</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; &amp;amp; &lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The ones I can find appear to be needed, based on their locations
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;ul&amp;gt;&amp;lt;/ul&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Appears that this would get filled with &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;'s from an ajax request
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I don't see any of those
&lt;/p&gt;
&lt;p&gt;
All in all, these tags are usually like this within either HTML templates for JS actions, or are used for styling purposes (for example, nested &lt;code&gt;:before&lt;/code&gt;'s.
If you can find any in the UI which have no styling or JS interacting with them, then we can clean them up, but you'll need to list the specific instances of the tags which are unused.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>36335-classmap.2.diff attached to Ticket #36335</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 05 Sep 2016 01:45:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/36335-classmap.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/36335-classmap.2.diff/1473039909977033</guid>
      <description>&lt;p&gt;
wp-classmapgen.php and example generated wp-classmap.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>36335-classmap.diff attached to Ticket #36335</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 05 Sep 2016 01:37:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36335/36335-classmap.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36335/36335-classmap.diff/1473039431049772</guid>
      <description>&lt;p&gt;
wp-classmapgen.php and example generated wp-classmap.php
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37944 (review of opening tags immediately followed by closing tags of same type) created</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Mon, 05 Sep 2016 01:33:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37944</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37944/1473039234492638</guid>
      <description>&lt;p&gt;
Poking the core files I found some of these:
&lt;/p&gt;
&lt;p&gt;
&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; (10 hits in 7 files) and &lt;code&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; (9 hits in 8 files)
&lt;/p&gt;
&lt;p&gt;
We also find &lt;code&gt;&amp;lt;ul&amp;gt;&amp;lt;/ul&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/code&gt;, ...?
&lt;/p&gt;
&lt;p&gt;
I wonder if these can be safely deleted.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 05 Sep 2016 00:33:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:176</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:176/1473035590487805</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:175" title="Comment 175"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That's not true, anybody who has used Composer to set up Core and plugins will tell you so.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Please explain how it would work, because I am in the set of people you say will tell me so &lt;em&gt;(I use Composer to set up Core and plugins, often)&lt;/em&gt;  and I would not tell myself that.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm also not a fan of taking a widespread package, and redistributing one of its core classes with modifications.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree with your statement in general I do not follow the relevance in our debate.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'm not going to derail this ticket any further in an effort to enlighten you
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Convenient.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Mon, 05 Sep 2016 00:24:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:175</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:175/1473035055001702</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;blockquote&gt;
&lt;p&gt;
What compatibility problems?  The plugin cannot use PSR0/4 &lt;strong&gt;AND&lt;/strong&gt; the
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
pre-generated autoloader that is being proposed for inclusion in core
&lt;em&gt;unless the plugin moves its files into the &lt;code&gt;/vendor&lt;/code&gt; directory (or
similar)&lt;/em&gt;, which is a non-starter.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That's not true, anybody who has used Composer to set up Core and plugins will tell you so. I'm also not a fan of taking a widespread package, and redistributing one of its core classes with modifications. It's like taking a 6 pack of hotdog buns and tearing the packaging apart in the shop because you only want 2 for dinner.
&lt;/p&gt;
&lt;p&gt;
It's clear that your understanding of how Composer is being used in WordPress installs, and the difference between the CLI tool, and the autoloader, is incomplete. I'm not going to derail this ticket any further in an effort to enlighten you
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37942 (ssh2 update failing) updated</title>
      
        <dc:creator>dd32</dc:creator>

      <pubDate>Mon, 05 Sep 2016 00:16:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37942#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37942#comment:1/1473034616751489</guid>
      <description>&lt;p&gt;
This looks and sounds like the broken PHP7 extension - &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/35517" title="#35517: defect (bug): Work around PHP7 php-ssh2 breakage (new)"&gt;#35517&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
In short: A faulty version of the extension was released which broke the file wrappers.
&lt;/p&gt;
&lt;p&gt;
@billthor55 can you confirm you're running PHP7?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Mon, 05 Sep 2016 00:01:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:174</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:174/1473033701339739</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:173" title="Comment 173"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That makes no sense, that's not how Composer works, perhaps you've misunderstood use of composer for inclusion of composers entire codebase, something that is not being suggested. The language could be misleading for somebody without knowledge of how Composer is used.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What makes no sense?  My comments on @schlessera's comment, or @schlessera's comment?
&lt;/p&gt;
&lt;p&gt;
If you think the former, please explain how my language is misleading.
&lt;/p&gt;
&lt;p&gt;
If the latter, then of course I agree, but don't shoot the messenger.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
These are the PSR standards, we don't use those, and we don't need to, this ticket discusses classmaps, and the classmap autoloader is what's under discussion. You do not need to put classes in the vendor folder to autoload them, and you do not need to follow PSR conventions.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Exactly. So if we do not need PSR standards then why use a tool that was purpose-built to support PSR standards and bring along all its related baggage?
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is the core autoloader, mu-plugins and plugins are not core, plugin developers can and do handle loading of files themselves, this is a separate topic.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why paint ourselves into a corner like that? It is downright foolish to adopt a solution for just core and ignore how it would eventually be used for plugins and themes especially since we've already pointed out how problematic using it would be for plugins and themes.
&lt;/p&gt;
&lt;p&gt;
To illustrate the mismatch with Composer and WordPress with Plugins and Themes let me quote from the Composer team member's comment &lt;a class="ext-link" href="https://github.com/composer/composer/issues/3852#issuecomment-172937526"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;that I linked&lt;/a&gt; but you evidently missed:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
Pretty much every project except wordpress at this point works in the same way: you have a composer.json and declare the list of plugins you want, and they get installed, and that's that. One autoloader, then some plugins/libraries/whatever packages. If every wordpress plugin embeds a composer autoloader, it's because the ecosystem is broken and wordpress core doesn't give a damn about moving forward. It's not something I am willing to waste time on I'm sorry..
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Some plugin authors may wish to use PSR0/4, and it would prevent compatibility problems if a plugin required a library that used such standards.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
What compatibility problems?  The plugin cannot use PSR0/4 &lt;strong&gt;AND&lt;/strong&gt; the pre-generated autoloader that is being proposed for inclusion in core &lt;em&gt;unless the plugin moves its files into the &lt;code&gt;/vendor&lt;/code&gt; directory (or similar)&lt;/em&gt;, which is a non-starter.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Composer autoloader generation is designed to be used at project &lt;em&gt;(site)&lt;/em&gt; build time. That simply does not match how WordPress plugins and themes work.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
If a site builder wants to use PSR4 to autoload their own plugins classes then they can use Composer and there will be no compatibility problems.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
For example &lt;a class="ext-link" href="https://github.com/rmccue/Requests/blob/master/composer.json"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;rmccue/requests&lt;/a&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
And Requests is a &lt;strong&gt;PHP library&lt;/strong&gt;, it is not a WordPress plugin or theme. And it would be included at &lt;strong&gt;build time&lt;/strong&gt;.  So whoever wants to use it and Composer can with no compatibility problems with a simple core autoloader.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 04 Sep 2016 23:41:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:2/1473032467140151</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
@joelcj91 Welcome to Trac, thanks for a great Trac ticket, all the keywords, component, focuses, versions are perfect, detailed reproducible steps and and patch, boom, thanks :)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Sun, 04 Sep 2016 23:30:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:173</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:173/1473031832803190</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
Not true. From @schlessera's own comments on his proposal we are discussing:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
That makes no sense, that's not how Composer works, perhaps you've misunderstood use of composer for inclusion of composers entire codebase, something that is not being suggested. The language could be misleading for somebody without knowledge of how Composer is used.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Composer champions an approach that places all autoloadable classes into a /vendor/ directory and then maps to the file based on class names.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
These are the PSR standards, we don't use those, and we don't need to, this ticket discusses classmaps, and the classmap autoloader is what's under discussion. You do not need to put classes in the vendor folder to autoload them, and you do not need to follow PSR conventions.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Then within each of /plugins and /mu-plugins there can be a potentially unlimited number of locations to look for classes to autoload.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is the core autoloader, mu-plugins and plugins are not core, plugin developers can and do handle loading of files themselves, this is a separate topic.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
And having core use its own classmap autoloader does not preclude anyone from using Composer's autoloader for PSR0/4 libraries.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
We're not using PSR0/4, neither is it necessary to use such PSR0/4
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Why include (some of) these 10 files when you really only need two trivial files? One containing a trivially simple autoloader and another file containing a trivially simple classmap?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Some plugin authors may wish to use PSR0/4, and it would prevent compatibility problems if a plugin required a library that used such standards. While core doesn't use it, we shouldn't prevent it, or cause issues elsewhere. Or we could generate our own custom autoloader. For example &lt;a class="ext-link" href="https://github.com/rmccue/Requests/blob/master/composer.json"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;rmccue/requests&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
In addition core could load core's classmap and then run hooks to allow plugins and themes to contribute their own classmaps.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I agree, the main ClassLoader object has methods for adding classmaps and other information about where to load things, it should be passed through a filter, if only for debugging purposes
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 04 Sep 2016 23:06:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:172</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:172/1473030385951933</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:171" title="Comment 171"&gt;TJNowell&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Nobody is suggesting we bundle Composer with WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Not true.  From @schlessera's own comments on his proposal we are discussing:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
For the approach I recommended above, Composer would only be used at development time for as long as WP stays at PHP 5.2. After that, you can just as well include Composer with WordPress, it does not need to be installed globally. So, if you want to bake in an autoloader into WordPress Core, why not just use the one that the rest of the PHP world uses?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Composer generated autoloaders are widespread, well known
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
The fact that something is in widespread use is not a reason to use it &lt;strong&gt;when it is not fit for purpose&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
Composer champions an approach that places &lt;strong&gt;all&lt;/strong&gt; autoloadable classes into a &lt;code&gt;/vendor/&lt;/code&gt; directory and then maps to the file based on class names.  WordPress places autoloadable files in at least 5 different general locations and mapping from classname to those locations would require torturous naming conventions, or it would require the Composer autoloader to look into tens if not hundreds of directories:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;code&gt;wp-includes&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-admin&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-content/plugins/&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-content/mu-plugins&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;&lt;code&gt;wp-content/themes/&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Sure, we could collapse &lt;code&gt;wp-admin&lt;/code&gt; into &lt;code&gt;wp-includes by moving all the admin classes into &lt;/code&gt;wp-includes`, but does that really make sense?
&lt;/p&gt;
&lt;p&gt;
Then within each of &lt;code&gt;/plugins&lt;/code&gt; and &lt;code&gt;/mu-plugins&lt;/code&gt; there can be a potentially unlimited number of locations to look for classes to autoload.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;The fact you cannot map classes in WordPress plugins and themes simply by their classnames is the main reasons why Composer is not a good fit as an autoloader for WordPress. And no one on this ticket has acknowledged and addressed this concern.&lt;/strong&gt;
&lt;/p&gt;
&lt;p&gt;
I have been working with this exact problem in WPLib for several years, so I have some strong insight into the problem. I know that had I not gone through this painful effort I would not have recognized the issues with Composer either and would have thought using it to be a great idea.  Matter of fact, I previously did think Composer was a great idea for WordPress.
&lt;/p&gt;
&lt;p&gt;
Autoloader requirements for add-ins turns out to be different than an autoloader for site builders unless WordPress changes the location of plugins and themes to be inside a &lt;code&gt;/vendor/&lt;/code&gt; directory. And even then it would still have an impedance mismatch.
&lt;/p&gt;
&lt;p&gt;
Really &lt;strong&gt;the only approach that works across all of WordPress is a classmap&lt;/strong&gt;, and there is no reason to include a complex Composer autoloader just to get a classmap autoloader.  And having core use its own classmap autoloader does not preclude anyone from using Composer's autoloader for PSR0/4 libraries.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Composer generated autoloaders are ... reliable, well tested,
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
A classmap autoloader is so trivial that it makes this concern moot.
&lt;/p&gt;
&lt;p&gt;
I could provide a working example to illustrate but this discussion is coming at a really bad time for me because I have other hard deadlines over the next 10 days that keep me from devoting the time to it.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This gets you these 10 files:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Why include &lt;em&gt;(some of)&lt;/em&gt; these 10 files when you really only need two &lt;strong&gt;trivial&lt;/strong&gt; files?  One containing a trivially simple autoloader and another file containing a trivially simple classmap?
&lt;/p&gt;
&lt;p&gt;
In addition core could load core's classmap and then run hooks to allow plugins and themes to contribute their own classmaps.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Composer can also be passed a generator that controls what is generated when an autoloader is created. The above list is merely the default.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Yes Composer is flexible, by why go to so much effort to make it contort in ways &lt;a class="ext-link" href="https://github.com/composer/composer/issues/3852#issuecomment-172925273"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;the Composer team choose not to support&lt;/a&gt;? &lt;em&gt;(Go back and read &lt;a class="ext-link" href="https://github.com/composer/composer/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20wordpress%20"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;some of their GitHub discussions&lt;/a&gt;.)&lt;/em&gt;
&lt;/p&gt;
&lt;p&gt;
BTW, I do really like the OP's original proposal of having pluggable autoloaders to make it easy to use PSR0 and PSR4 when &lt;strong&gt;&lt;em&gt;site builders&lt;/em&gt;&lt;/strong&gt; want to use libraries that were designed with  PSR0/4 in mind.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
I'd also advise against including the autoloader in wp-config.php, wp-config.php is for setting constants and configuring, including the autoloader there will necessitate modifying every config file that exists already, as well as handling those scenarios when the file is up one directory, etc
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Agreed there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 04 Sep 2016 22:24:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:81</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:81/1473027856303305</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:80" title="Comment 80"&gt;F J Kaiser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It seems you missed the point with the previous notes and comments about the &lt;em&gt;global state&lt;/em&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Evidently. Please elaborate on the points I missed.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Does the first &lt;code&gt;WP_Registry&lt;/code&gt; suffer from accessing globals? Yes.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I did not call out accessing globals as an issue.  Global state does not have to be held in globals to be problematic.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
If you believe there is a need to discuss the community layer (for e.g. barrier for entry level devs), IDE support or yes-nos for using patterns in general further, I believe that Slack is a better route to address this.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Since Slack is not segmented by ticket, I have no idea what a valid entry point would be where all those interested in the topic would have any reasonable chance of being involved in the discussion. This ticket is about introducing what I would consider harmful idioms and so it seems the right place to discuss it.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) updated</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Sun, 04 Sep 2016 22:12:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943#comment:1/1473027120276855</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>37943.patch attached to Ticket #37943</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Sun, 04 Sep 2016 22:11:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37943/37943.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37943/37943.patch/1473027079929312</guid>
      <description>&lt;p&gt;
Patch to fix this by replacing the link in installImporterSuccess function in updates.js
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Run-Importer.png attached to Ticket #37943</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Sun, 04 Sep 2016 22:07:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37943/Run-Importer.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37943/Run-Importer.png/1473026822359068</guid>
      <description>&lt;p&gt;
Run Importer screen with invalid link
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37943 (Invalid link to the "Run importer" action while installing importer ...) created</title>
      
        <dc:creator>joelcj91</dc:creator>

      <pubDate>Sun, 04 Sep 2016 22:04:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37943</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37943/1473026668087057</guid>
      <description>&lt;p&gt;
In a WordPress multisite installation, when you try to import an XML file, from a sub-site, you will be provided with an invalid link to the "&lt;strong&gt;Run importer&lt;/strong&gt;" page after the installation of the "WordPress Importer" plugin. This bug will not be there if it is not a multisite website or if the "WordPress Importer" plugin is already installed.
&lt;/p&gt;
&lt;p&gt;
Steps to reproduce:
&lt;/p&gt;
&lt;p&gt;
1) Create a Multisite website.
2) Go to one of your sub-sites.
3) Make sure that the "WordPress Importer" plugin is &lt;strong&gt;not installed&lt;/strong&gt; already (&lt;a class="ext-link" href="https://wordpress.org/plugins/wordpress-importer/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://wordpress.org/plugins/wordpress-importer/&lt;/a&gt;).
4) Go to Import section in Tools menu.
5) Click on "Install Now" under WordPress import section.
6) Now the WordPress Importer plugin will be installed though ajax request.
7) After successful installation, "Install Now" link will be replaced with "Run importer" link and also, you will be provided with a message at the top - "Importer installed successfully. Run importer".
8) Expected result is a proper, working link to the importer page., inside the current sub-site. But you can see, since the Multisite plugins are managed from network dashboard, the link returned through the ajax response is invalid, as "/network" is appended in the plugin's link.
9)
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
a) Expected link : mysubsite1/wp-admin/plugins.php?action=activate&amp;amp;plugin=wordpress-importer%2Fwordpress-importer.php&amp;amp;from=import&amp;amp;_wpnonce=123nonce
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
b) Current link : mysubsite1/wp-admin/&lt;strong&gt;network&lt;/strong&gt;/plugins.php?action=activate&amp;amp;plugin=wordpress-importer%2Fwordpress-importer.php&amp;amp;from=import&amp;amp;_wpnonce=123nonce
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
10) This results a 404 error when we click on &lt;strong&gt;Run mporter&lt;/strong&gt;.
&lt;/p&gt;
&lt;p&gt;
Please see the screenshot.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 04 Sep 2016 21:58:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:19/1473026302796250</guid>
      <description>&lt;p&gt;
@karmatosed yeah looks like you're not getting the CSS (and/or maybe JS) changes in the patch - it shouldn't look anything like that :) It should be similar to all of the screenshots I posted.
&lt;/p&gt;
&lt;p&gt;
You could try a hard refresh in your browser, and make sure you're seeing a modified version of &lt;code&gt;customize-controls.css&lt;/code&gt; and &lt;code&gt;customize-controls.js&lt;/code&gt; in the browser inspector after applying the patch. You could also search for &lt;code&gt;#customize-theme-section-navigation&lt;/code&gt; in both files - if that's not there then it's still the old version. And also make sure &lt;code&gt;SCRIPT_DEBUG&lt;/code&gt; is on, etc.
&lt;/p&gt;
&lt;p&gt;
There's also a possibility that something's wrong with the patch - can anyone else test to confirm?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #29158,​33228,​27705 batch updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 04 Sep 2016 21:50:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=29158%2C33228%2C27705</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=29158%2C33228%2C27705/1473025822499495</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38520" title="Accessibility: Improve the Customizer and Theme Installer initial ..."&gt;38520&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Accessibility: Improve the Customizer and Theme Installer initial focus.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The Customizer and Theme Installer open in full overlays that need to receive &lt;br /&gt;
focus. Also, keyboard navigation should be constrained within the overlays. Using&lt;br /&gt;
CSS &lt;code&gt;visibility&lt;/code&gt; to hide all the content except the overlays, makes them the only&lt;br /&gt;
available and focusable content and allows browsers to handle focus natively.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29158" title="#29158: task (blessed): Customizer UI Design lacks contrast for visual hierarchy and does not ... (closed: fixed)"&gt;#29158&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33228" title="#33228: enhancement: Customizer initial focus (closed: fixed)"&gt;#33228&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27705" title="#27705: defect (bug): Keyboard navigation should be constrained to the theme installer overlay (closed: fixed)"&gt;#27705&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [38520]: Accessibility: Improve the Customizer and Theme Installer initial ...</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 04 Sep 2016 21:50:22 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38520</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38520/1473025822009724</guid>
      <description>&lt;p&gt;
Accessibility: Improve the Customizer and Theme Installer initial focus.
&lt;/p&gt;
&lt;p&gt;
The Customizer and Theme Installer open in full overlays that need to receive
focus. Also, keyboard navigation should be constrained within the overlays. Using
CSS &lt;code&gt;visibility&lt;/code&gt; to hide all the content except the overlays, makes them the only
available and focusable content and allows browsers to handle focus natively.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/29158" title="#29158: task (blessed): Customizer UI Design lacks contrast for visual hierarchy and does not ... (closed: fixed)"&gt;#29158&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33228" title="#33228: enhancement: Customizer initial focus (closed: fixed)"&gt;#33228&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/27705" title="#27705: defect (bug): Keyboard navigation should be constrained to the theme installer overlay (closed: fixed)"&gt;#27705&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #27705 (Keyboard navigation should be constrained to the theme installer overlay) updated</title>
      
        <dc:creator>afercia</dc:creator>

      <pubDate>Sun, 04 Sep 2016 21:39:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27705#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27705#comment:9/1473025151986467</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Going to fix this in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/33228" title="#33228: enhancement: Customizer initial focus (closed: fixed)"&gt;#33228&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>EusebiuOprinoiu</dc:creator>

      <pubDate>Sun, 04 Sep 2016 21:31:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:60</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:60/1473024683670569</guid>
      <description>&lt;p&gt;
I gave it some more thought and I think @mor10 has a point about not removing buttons. Even though I find some of them useless, there is no harm in keeping them on the second row.
&lt;/p&gt;
&lt;p&gt;
However, I still believe allowing users to hardcode colors is a mistake. They might force a color that looks good with their current theme at the time they write their content, but as soon as they do a theme change, everything will be most likely a mess. ( That's why the Text Color button is the only one I removed )
&lt;/p&gt;
&lt;p&gt;
I also believe the H1 Heading should be disabled by default, as mentioned before.
&lt;/p&gt;
&lt;p&gt;
That being said, this is my proposal:
&lt;a href="https://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.3.php"&gt;https://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.3.php&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/FoEgn4s.png"&gt;&lt;img src="http://i.imgur.com/FoEgn4s.png" alt="http://i.imgur.com/FoEgn4s.png" crossorigin="anonymous" title="http://i.imgur.com/FoEgn4s.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-test-tinymce-toolbars.3.php attached to Ticket #27159</title>
      
        <dc:creator>EusebiuOprinoiu</dc:creator>

      <pubDate>Sun, 04 Sep 2016 21:27:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.3.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.3.php/1473024436092214</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>Elhisai</dc:creator>

      <pubDate>Sun, 04 Sep 2016 20:23:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:59</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:59/1473020630106717</guid>
      <description>&lt;p&gt;
+1 for keeping align buttons together, they're three different variations on the same parameter,
&lt;/p&gt;
&lt;p&gt;
about strike-trough, I know some (most?) users doesn't use it the way html standards say they should, but it doesn't mean they don't have a valid use case so maybe the solution is to translate it in html with a class and not a semantic tag and keep it on the second line
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36934 (Use of get_the_excerpt($post) is broken if post has no excerpt and you ...) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 04 Sep 2016 20:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36934#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36934#comment:26/1473020603002520</guid>
      <description>&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36934/36934.diff" title="Attachment '36934.diff' in Ticket #36934"&gt;36934.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36934/36934.diff" title="Download"&gt;​&lt;/a&gt; is an improved version of &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/36934/36934a.diff" title="Attachment '36934a.diff' in Ticket #36934"&gt;36934a.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/36934/36934a.diff" title="Download"&gt;​&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Main changes:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Adds an &lt;code&gt;$args&lt;/code&gt; parameter to &lt;code&gt;get_the_content()&lt;/code&gt; to make it more future proof.
&lt;/li&gt;&lt;li&gt;Gets rid of the &lt;code&gt;$pages&lt;/code&gt; and &lt;code&gt;$multipage&lt;/code&gt; globals by moving logic to &lt;code&gt;WP_Post&lt;/code&gt;.
&lt;/li&gt;&lt;li&gt;Adds a test provided by @iandunn in &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37519" title="#37519: defect (bug): Excerpts not retrieved outside loop when raw excerpt is empty (closed: duplicate)"&gt;#37519&lt;/a&gt;.
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>36934.diff attached to Ticket #36934</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 04 Sep 2016 20:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/36934/36934.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/36934/36934.diff/1473020452235949</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #36809 (Remove target="_blank" checkbox in Advanced Link Modal) updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Sun, 04 Sep 2016 20:10:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36809#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36809#comment:13/1473019838206039</guid>
      <description>&lt;p&gt;
@Presskopp - Just submit your patch in this ticket. No need for a second one.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #36809,​37941 batch updated</title>
      
        <dc:creator>Ipstenu</dc:creator>

      <pubDate>Sun, 04 Sep 2016 20:07:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=36809%2C37941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=36809%2C37941/1473019677521507</guid>
      <description>duplicate: &lt;p&gt;
This doesn't need to be a separate ticket at this time.
&lt;/p&gt;
&lt;p&gt;
&lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36809" title="#36809: enhancement: Remove target=&amp;#34;_blank&amp;#34; checkbox in Advanced Link Modal (closed: maybelater)"&gt;#36809&lt;/a&gt; is just going to transmute from fix A to fix B :) Happens all the time.
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>class-wp-filesystem-ssh2.php.patch attached to Ticket #37942</title>
      
        <dc:creator>billthor55</dc:creator>

      <pubDate>Sun, 04 Sep 2016 17:20:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37942/class-wp-filesystem-ssh2.php.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37942/class-wp-filesystem-ssh2.php.patch/1473009614377061</guid>
      <description>&lt;p&gt;
Patch file to use ssh2-sftp-stat for critical methods.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37942 (ssh2 update failing) created</title>
      
        <dc:creator>billthor55</dc:creator>

      <pubDate>Sun, 04 Sep 2016 17:19:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37942</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37942/1473009551325732</guid>
      <description>&lt;p&gt;
ssh2 update reports it is unable to find the wp-content directory.  After a fair bit of testing, I have determined that the ssh2-sftp:// file paths are not reliable for many methods.
&lt;/p&gt;
&lt;p&gt;
I've patched my copy of class-wp-filesystem-ssh2.py to use the ssh2-sftp-stat method to for a number of methods including: exists, is_dir, is_file, getchmod...
&lt;/p&gt;
&lt;p&gt;
In testing this appears to be more reliable.
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>TJNowell</dc:creator>

      <pubDate>Sun, 04 Sep 2016 16:35:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:171</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:171/1473006954312163</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
And then there is the idea of bundling Composer with WordPress. What would
be benefit of that? For people who use composer already, or for end-users
who download and install plugins and themes from WP.org?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Nobody is suggesting we bundle Composer with WordPress, Composer is a CLI tool, and to bundle it with Core would be very unusual. That's not how Composer is meant to be installed or used.
&lt;/p&gt;
&lt;p&gt;
What we're talking about is an autoloader, which is generated as output by the Composer tool, not Composer itself. It was mentioned because Composer generated autoloaders are widespread, well known, reliable, well tested, and have had the attention of some of the biggest companies and most experienced PHP developers alive. It's also in use in a great number of WordPress agencies, plugins, and themes, so there is existing familiarity with how it works, it's not a foreign unknown.
&lt;/p&gt;
&lt;p&gt;
This gets you these 10 files:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;strong&gt;vendor/autoload.php&lt;/strong&gt; - the bootstrapper
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/ClassLoader.php&lt;/strong&gt; - implements a PSR-0, PSR-4 and classmap class loader
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/LICENSE&lt;/strong&gt; - license
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/autoload_classmap.php&lt;/strong&gt; - an array of class names and the files they can be found in
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/autoload_files.php&lt;/strong&gt; - an array of files that will always be loaded immediatley
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/autoload_namespaces.php&lt;/strong&gt; - an array of folder to namespace mappings
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/autoload_psr4.php&lt;/strong&gt; - an array mapping folders to PSR4 namespaces
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/autoload_real.php&lt;/strong&gt; - an autogenerated class with a build specific hash in the name to create the autoloader and fill it with the above files
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/autoload_static.php&lt;/strong&gt; - a map of all classes/namespaces, and their files, an amalgam of the other autoload_*.php array files
&lt;/li&gt;&lt;li&gt;&lt;strong&gt;vendor/composer/installed.json&lt;/strong&gt; - a json file of what is being autoloaded
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Composer can also be passed a generator that controls what is generated when an autoloader is created. The above list is merely the default.
&lt;/p&gt;
&lt;p&gt;
I'm also unsure why we're renaming the vendor folder to wp-vendor, it's strange and non-standard.
&lt;/p&gt;
&lt;p&gt;
I'd also advise against including the autoloader in wp-config.php, wp-config.php is for setting constants and configuring, including the autoloader there will necessitate modifying every config file that exists already, as well as handling those scenarios when the file is up one directory, etc
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37940 (WordPress email subject update) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Sep 2016 16:29:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37940#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37940#comment:2/1473006587909538</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #core-i18n by ramiy. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/core-i18n/p1473006585000002"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37938 (Split Source Parsing Functions from Press This So Can Be Used Globally) updated</title>
      
        <dc:creator>dshanske</dc:creator>

      <pubDate>Sun, 04 Sep 2016 14:55:38 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37938#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37938#comment:2/1473000938145696</guid>
      <description>&lt;p&gt;
@swissspidy If you remember, I chimed in re link previews during the oEmbed discussions, so I completely agree there too.
&lt;/p&gt;
&lt;p&gt;
This should be relatively easy to separate. The code is pretty much written and stable. WP_Press_This will just call another class and focus on the Press This legacy merge and other related things.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>EusebiuOprinoiu</dc:creator>

      <pubDate>Sun, 04 Sep 2016 14:23:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:58</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:58/1472998985674035</guid>
      <description>&lt;p&gt;
I don't think it's a good idea to separate the alignment buttons. People use them all the time and separating them will only bring confusion and frustration. (Related buttons should be grouped together)
&lt;/p&gt;
&lt;p&gt;
I also don't like the idea of displaying the headings out of order. Either hide de H1 heading and allow developers to bring it back using a filter or leave it as it is.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #34157 (Style the increment and decrement buttons for number inputs) updated</title>
      
        <dc:creator>xavortm</dc:creator>

      <pubDate>Sun, 04 Sep 2016 13:16:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/34157#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/34157#comment:4/1472994977708464</guid>
      <description>&lt;p&gt;
I am 95% sure this won't be the solution here, but I went and make a very small view of how these buttons can be changed using jQuery (which is why I am not a big fan of this solution)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="http://codepen.io/xavortm/pen/JRoYLr"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;http://codepen.io/xavortm/pen/JRoYLr&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Other than that, my opinion is that this field should stay the way it is currently. Arrows are not visible by default and are visible on hover.
&lt;/p&gt;
&lt;p&gt;
Also, this article shows how it looks on most browsers - &lt;a class="ext-link" href="https://css-tricks.com/numeric-inputs-a-comparison-of-browser-defaults/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://css-tricks.com/numeric-inputs-a-comparison-of-browser-defaults/&lt;/a&gt; I am personally a fan of Opera and it's easy to click buttons, but as you can see IE is totally different, only having close (empty) button.
&lt;/p&gt;
&lt;p&gt;
Styling the input field buttons will require using some sort of background image, as :after doesn't work on input fields.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>bfintal</dc:creator>

      <pubDate>Sun, 04 Sep 2016 13:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:57</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:57/1472994439630675</guid>
      <description>&lt;p&gt;
Building upon the idea:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Minimal — same as above&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/Htvo5NO.png"&gt;&lt;img src="https://i.imgur.com/Htvo5NO.png" alt="https://i.imgur.com/Htvo5NO.png" crossorigin="anonymous" title="https://i.imgur.com/Htvo5NO.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Full — center button moves to the other alignment buttons for grouping&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/QAZy9TH.jpg"&gt;&lt;img src="http://i.imgur.com/QAZy9TH.jpg" alt="http://i.imgur.com/QAZy9TH.jpg" crossorigin="anonymous" title="http://i.imgur.com/QAZy9TH.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;FormatSelect has no Heading 1 — but it will still have an H1 only if content (in the editor) doesn't yet have an H1 &amp;amp; the post is of &lt;code&gt;post_type&lt;/code&gt; page (and maybe a filter too)&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/VqawM7p.jpg"&gt;&lt;img src="http://i.imgur.com/VqawM7p.jpg" alt="http://i.imgur.com/VqawM7p.jpg" crossorigin="anonymous" title="http://i.imgur.com/VqawM7p.jpg" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
A concern would be that the Toggle Toolbar and its neighboring buttons would move once it is toggled.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37941 (add rel="noopener noreferrer" to any target="_blank") updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 04 Sep 2016 12:50:39 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37941#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37941#comment:2/1472993439164617</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22002 (Favorite plugins in the plugin installer) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Sep 2016 12:15:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22002#comment:37</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22002#comment:37/1472991333027665</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by otto42. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1472991330000395"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37917 (Users without the edit_private_posts capability can still create ...) updated</title>
      
        <dc:creator>akibjorklund</dc:creator>

      <pubDate>Sun, 04 Sep 2016 11:56:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37917#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37917#comment:1/1472990170830979</guid>
      <description>&lt;p&gt;
Hi @ryan.kanner, welcome to the WordPress Trac! Thanks for your report and for taking the time to create a patch.
&lt;/p&gt;
&lt;p&gt;
While your assumption is indeed very reasonable, I think this is at least partly intended behavior. It is just unintuitive and does not allow fine grained enough control. That is, if I'm understanding things right after doing some research on the subject.
&lt;/p&gt;
&lt;p&gt;
Users, who have the capability to &lt;code&gt;publish_posts&lt;/code&gt;, but do not have &lt;code&gt;edit_published_posts&lt;/code&gt;, can publish posts. They just can't edit them afterwards without the capability. Similarly, it makes sense that users cannot edit private posts afterwards without &lt;code&gt;edit_private_posts&lt;/code&gt;. But alas, there is no separate &lt;code&gt;make_posts_private&lt;/code&gt; (the equivalent to &lt;code&gt;publish_posts&lt;/code&gt; for private posts).
&lt;/p&gt;
&lt;p&gt;
When trying to publish or make posts private without &lt;code&gt;publish_posts&lt;/code&gt; their status status is set to &lt;code&gt;pending&lt;/code&gt; in &lt;code&gt;wp-admin/includes/post.php&lt;/code&gt;. XML-RPC does its own similar validation, but throws an error. &lt;a class="ext-link" href="https://github.com/WP-API/WP-API/blob/develop/lib/endpoints/class-wp-rest-posts-controller.php#L880"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;REST API too requires `publish_posts`&lt;/a&gt; for private status.
&lt;/p&gt;
&lt;p&gt;
So the &lt;code&gt;publish_posts&lt;/code&gt; capability is used instead to also cover cases where status is changing to &lt;code&gt;private&lt;/code&gt;. It makes sense, because if this capability is missing, none of the visibility choices would appear. For more fine-grained control, a new capability would have to be introduced. And that would have to be enforced in many more places than on the UI level. XML-RPC and REST API included.
&lt;/p&gt;
&lt;p&gt;
I'm not totally convinced it makes sense to tie &lt;code&gt;publish_posts&lt;/code&gt; with making posts &lt;code&gt;private&lt;/code&gt;, but that is how it works and it is would probably be very hard to change. So if we were to introduce &lt;code&gt;make_posts_private&lt;/code&gt;, then that would have to depend on &lt;code&gt;publish_posts&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
I think the next step would be to hear some arguments why such new capability would need to exist, other than just for completeness (which would be a valid reason to me). What are the use cases for this? What sort of harm is done if people with &lt;code&gt;publish_posts&lt;/code&gt; can also set status to &lt;code&gt;private&lt;/code&gt;? If there is not much harm and the thinking behind the tickets is just to prevent users accidentally setting posts to private, creating a plugin that hides the options with CSS based on for example a custom capability or a user role would do just fine. (It is another issue altogether, but personally I think private posts don't have much use, so they mostly just clutter the UI.)
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37673 (Masonry problem in Safari (also in iOS)) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Sep 2016 11:48:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37673#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37673#comment:4/1472989695801217</guid>
      <description>invalid: &lt;p&gt;
Hi @anatrog, this Trac is used for enhancements and bug reporting for the WordPress core software.
&lt;/p&gt;
&lt;p&gt;
Please try the &lt;a class="ext-link" href="https://wordpress.org/support/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;support forums&lt;/a&gt; to get help with your site.
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #36809 (Remove target="_blank" checkbox in Advanced Link Modal) updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 04 Sep 2016 11:24:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36809#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36809#comment:11/1472988293591718</guid>
      <description>&lt;p&gt;
I made a ticket here &lt;a class="assigned ticket" href="http://core.trac.wordpress.org/ticket/37941" title="#37941: enhancement: add rel=&amp;#34;noopener noreferrer&amp;#34; to any target=&amp;#34;_blank&amp;#34; (assigned)"&gt;#37941&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37941 (add rel="noopener noreferrer" to any target="_blank") updated</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 04 Sep 2016 11:24:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37941#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37941#comment:1/1472988243404999</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Patch is simply adding it to any found instance.
&lt;/p&gt;
&lt;p&gt;
I'm sure it needs more (or less) to be done,
&lt;/p&gt;
&lt;p&gt;
but I don't know which php-files or js-files to touch, to generate this tags for each link with &lt;code&gt;target="_blank"&lt;/code&gt; set.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>37941.diff attached to Ticket #37941</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 04 Sep 2016 11:22:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37941/37941.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37941/37941.diff/1472988155280292</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37941 (add rel="noopener noreferrer" to any target="_blank") created</title>
      
        <dc:creator>Presskopp</dc:creator>

      <pubDate>Sun, 04 Sep 2016 11:20:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37941</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37941/1472988030705075</guid>
      <description>&lt;p&gt;
This is a following ticket to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/36809" title="#36809: enhancement: Remove target=&amp;#34;_blank&amp;#34; checkbox in Advanced Link Modal (closed: maybelater)"&gt;#36809&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
It's about making these links more secure where/when they are used.
&lt;/p&gt;
&lt;p&gt;
see:
&lt;a class="ext-link" href="https://www.jitbit.com/alexblog/256-targetblank---the-most-underestimated-vulnerability-ever/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://www.jitbit.com/alexblog/256-targetblank---the-most-underestimated-vulnerability-ever/&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sun, 04 Sep 2016 10:49:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:80</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:80/1472986199067211</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:79" title="Comment 79"&gt;MikeSchinkel&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Is your point that using &lt;code&gt;WP::get( '&amp;lt;global_state&amp;gt;' )&lt;/code&gt; means that anyone could easily add any new global state without having to modify the &lt;code&gt;WP&lt;/code&gt; class?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It seems you missed the point with the previous notes and comments about the &lt;em&gt;global state&lt;/em&gt;. Does the first &lt;code&gt;WP_Registry&lt;/code&gt; suffer from accessing globals? Yes. But as others have pointed out already, there should be &lt;em&gt;no&lt;/em&gt; access to globals, but instances built, stacked and returned – to get rid of the globals part as this is where this ticket has its focus.
&lt;/p&gt;
&lt;p&gt;
If you believe there is a need to discuss the community layer (for e.g. barrier for entry level devs), IDE support or yes-nos for using patterns in general further, I believe that Slack is a better route to address this. Still &lt;em&gt;briefly summed up results&lt;/em&gt; of such a discussion would make a good fit in here. This ticket already is hard to follow and comes with a 1h+ reading experience, which raises the entry barrier for devs who would like to participate up to a no-no level.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>karmatosed</dc:creator>

      <pubDate>Sun, 04 Sep 2016 10:37:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:18/1472985448261786</guid>
      <description>&lt;p&gt;
@celloexpressions I looked at the patch today and I think before we user test we probably want to tidy up some of the big UI issues. I'm a little concerned at this point that users would get caught up on some of the things over give us experience feedback.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/s4jR3byOp8.png"&gt;&lt;img width="50%" alt="https://cldup.com/s4jR3byOp8.png" title="https://cldup.com/s4jR3byOp8.png" crossorigin="anonymous" src="https://cldup.com/s4jR3byOp8.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Small things like padding and format I think if fixed will at least give the feature a chance.
&lt;/p&gt;
&lt;p&gt;
I also discovered hitches like this, which if not fixed would just confuse in a user test:
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="https://cldup.com/5m3R264Ltf.png"&gt;&lt;img width="50%" alt="https://cldup.com/5m3R264Ltf.png" title="https://cldup.com/5m3R264Ltf.png" crossorigin="anonymous" src="https://cldup.com/5m3R264Ltf.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
The more I explored this, the more I'm thinking something isn't working in the patch or my setup. Perhaps we can start with working out if that is the case?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37673 (Masonry problem in Safari (also in iOS)) updated</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sun, 04 Sep 2016 10:12:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37673#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37673#comment:3/1472983962849592</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Severity&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Hello @anatrog, thank you for reporting this.
&lt;/p&gt;
&lt;p&gt;
I don't think this is something that WordPress can or should fix for you though, it seems related to your theme so maybe this should be reported to the author of the theme you are using?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37938 (Split Source Parsing Functions from Press This So Can Be Used Globally) updated</title>
      
        <dc:creator>swissspidy</dc:creator>

      <pubDate>Sun, 04 Sep 2016 10:06:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37938#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37938#comment:1/1472983614655355</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt;, &lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
Thought the same the other day. A separate class would be very handy for things like automatic link previews.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 04 Sep 2016 09:43:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:79</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:79/1472982204945334</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:78" title="Comment 78"&gt;F J Kaiser&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
That is &lt;em&gt;well-architected&lt;/em&gt; as it is open for extension – without constantly changing the access layer to the code base as soon as a new object gets implemented.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Is your point that using &lt;code&gt;WP::get( '&amp;lt;global_state&amp;gt;' )&lt;/code&gt; means that anyone could easily add any new global state without having to modify the &lt;code&gt;WP&lt;/code&gt; class?
&lt;/p&gt;
&lt;p&gt;
If so, do you believe that making it easy to add global state to an application is a virtue? Especially when you can do so without any place where people would know to go and look for documentation in the source code about your newly added global state?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 04 Sep 2016 09:35:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:170</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:170/1472981730770990</guid>
      <description>&lt;p&gt;
Since I don't think I will have much time over the next week I am going to go ahead adiscuss my concerns with it.
&lt;/p&gt;
&lt;p&gt;
I am definitely in favor of add &lt;code&gt;composer.json&lt;/code&gt; to WordPress. It does not make anything complicated for people who do not use Composer but for those who do use it having it in core makes their lives easier.
&lt;/p&gt;
&lt;p&gt;
Beyond that it seems the primary short-term benefit of using Composer is to generate the classmap? &lt;em&gt;(It can't be because of autoloader generation because if you have a classmap the autoloader is trivial.)&lt;/em&gt;  Is there not any other benefit?
&lt;/p&gt;
&lt;p&gt;
Check me here if I am wrong, but is generating a classmap really that hard? I do it for WPLib and it seems pretty trivial. What am I missing?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
And then there is the idea of bunding Composer with WordPress. What would be benefit of that? For people who use composer already, or for end-users who download and install plugins and themes from WP.org?
&lt;/p&gt;
&lt;p&gt;
If they use Composer already, why would they want to have to worry about incompatible versions?
&lt;/p&gt;
&lt;p&gt;
If they are end-users how would you get Composer to handle the dynamic load scenario of plugins and themes?
&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;
Further, if plugins and themes wanted to use an autoloader would they using their own directories for code storaage, or in the &lt;code&gt;wp-vendor&lt;/code&gt; directory? Would they be responsible to create a project on &lt;code&gt;packagist.org&lt;/code&gt; to point to their code for their plugin, and then the plugin file in the plugins directory would just be a loader for the real plugin in vendors?
&lt;/p&gt;
&lt;p&gt;
Or would each plugin need to define its own package type so they can each map their own includes directory inside &lt;code&gt;composer.json&lt;/code&gt; so that Composer will know to place their autoload files in the right plugin or theme directory?, e.g.
&lt;/p&gt;
&lt;pre class="wiki"&gt;type:yoast-seo =&amp;gt; `wp-content/plugins/wordpress-seo/inc
&lt;/pre&gt;&lt;p&gt;
Frankly, quoting @rmccue:
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
&lt;em&gt;I still think this seems to be a solution (Composer) searching for a problem.&lt;/em&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>F J Kaiser</dc:creator>

      <pubDate>Sun, 04 Sep 2016 09:29:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:78</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:78/1472981397716104</guid>
      <description>&lt;p&gt;
@MikeSchinkel
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
The use of a &lt;code&gt;WP::get( 'whatever' )&lt;/code&gt; seems over-architected and with no benefits I can perceive when we can just as easily use &lt;code&gt;WP::whatever()&lt;/code&gt;. Especially when whatever is known in advance as it is with all existing globals. Better to create hardcoded methods that each have their own PHPDoc and each can trigger autocomplete in an IDE (without requiring complex machinations to get autocomplete to work.)
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Having &lt;code&gt;WP::get( 'dragons' )&lt;/code&gt; is the opposite of &lt;em&gt;over-architected&lt;/em&gt;. That is &lt;em&gt;well-architected&lt;/em&gt; as it is open for extension – without constantly changing the access layer to the code base as soon as a new object gets implemented. What you are searching for is called &lt;em&gt;convenience-architected&lt;/em&gt;. If you believe you need convenience-wrappers, then put a Facade in front of it, as already proposed by @jacobsantos . This is the proper way to hide away complexity.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37898 (Prompt message when removing a plugin is sometimes misleading) updated</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sun, 04 Sep 2016 09:29:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37898#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37898#comment:3/1472981392544509</guid>
      <description>&lt;p&gt;
Not even the existence of uninstall.php can guarantee that the plugin will remove its data (it could be used for something else), I think that's worth thinking about.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 04 Sep 2016 09:23:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:56</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:56/1472981038200184</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:54" title="Comment 54"&gt;bfintal&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is possible to have a page (doesn't apply to posts) without a title. In those cases it is left to the user to "design" the title and wouldn't be able to add an H1 anymore with the suggestions. While I agree that H1 shouldn't be used more than once, maybe we could just leverage that and hide the H1 if 1) there is one already in the content and 2) the post being edited is a page (post_type). This suggestion might be a stretch, but I'm just throwing this idea out there in case there are others who find it useful.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Something like this? Obviously better designed. Just to make sure users do NOT keep adding h1's.
&lt;a style="padding:0; border:none" href="https://i.imgur.com/QPQdhwn.png"&gt;&lt;img src="https://i.imgur.com/QPQdhwn.png" alt="https://i.imgur.com/QPQdhwn.png" crossorigin="anonymous" title="https://i.imgur.com/QPQdhwn.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
@celloexpressions and @mrahmadawais I agree that the center button should be readily accessible there. But what if the center button was moved to be beside the other alignment buttons when in full view?
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
While having the center button with other align button makes all the sense, it's just used a lot and having it in the primary toolbar is important. But putting other align tools there is wasting space since other important elements can be there.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37929 (Add `pre_delete_option` filter) updated</title>
      
        <dc:creator>OriginalEXE</dc:creator>

      <pubDate>Sun, 04 Sep 2016 09:20:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37929#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37929#comment:2/1472980827410266</guid>
      <description>&lt;p&gt;
Interesting idea.
&lt;/p&gt;
&lt;p&gt;
In your patch, maybe you should use
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;! is_null( $skip )
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
instead of
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="x"&gt;null !== $skip
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
to keep it consistent with the null check immediately below.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #36335 (Next generation: core autoloader proposal) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 04 Sep 2016 08:59:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/36335#comment:169</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/36335#comment:169/1472979594803526</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/36335#comment:162" title="Comment 162"&gt;tfrommen&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
The "proposal" is presented in &lt;a class="ext-link" href="https://www.alainschlesser.com/adding-central-autoloader-wordpress/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;this post&lt;/a&gt;.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks.  That was very helpful.
&lt;/p&gt;
&lt;p&gt;
However, the proposal did not summarize so I'm still a bit unclear with what is being proposed.  Let me summarize to see if I can get it right:
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Add &lt;code&gt;composer.json&lt;/code&gt; to WordPress
&lt;/li&gt;&lt;li&gt;Change &lt;code&gt;wp-config.php&lt;/code&gt; to load a Composer autoloader.
&lt;/li&gt;&lt;li&gt;Generate a PHP52 compatible autoloader using &lt;code&gt;xrstf/composer-php52&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Have Composer generate a classmap for &lt;code&gt;wp-includes&lt;/code&gt; directory
&lt;/li&gt;&lt;li&gt;Fix anything in &lt;code&gt;wp-includes&lt;/code&gt; that is not 1 file=1 class.
&lt;/li&gt;&lt;li&gt;Include the generated classmap and autoloader with WordPress core.
&lt;/li&gt;&lt;li&gt;Once we get beyond PHP52, bundle Composer into WordPress core.
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
Did I correctly summarize the proposal that is currently being debated?  If not, what did I get wrong?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 04 Sep 2016 08:25:59 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:77</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:77/1472977559862353</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:73" title="Comment 73"&gt;ChriCo&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
as i see, @schlessera found enough valid arguments for this "discussion" above, so we can continue the work on a integration of a ServiceContainer into WordPress.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Oh wow.  And there I thought &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:73" title="#37699: enhancement: Death to Globals Episode #1: A Registry, A Pattern (new)"&gt;your comment&lt;/a&gt; was one of the most epic bits of trolling ever seen on Trac -- and I was going to comment &lt;em&gt;"Well Played"&lt;/em&gt; -- but instead, you were serious.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>MikeSchinkel</dc:creator>

      <pubDate>Sun, 04 Sep 2016 08:23:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:76</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:76/1472977406416067</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:72" title="Comment 72"&gt;schlessera&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Your main point is that we fail to keep WordPress development be accessible to "lesser-experienced" developers.
I wholeheartedly agree that a codebase needs to be welcoming and offer a learning curve that is not too steep.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Finally. I feel prior to now that this point was falling on deaf ears.  Thank you for recognizing the concern.
&lt;/p&gt;
&lt;p&gt;
Hopefully others can explicitly state if they agree with this or not. If so, then it can be used as one litmus test for a good approach.
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
However, I think that your conclusions are all backwards.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Actually, I think you misunderstood my conclusions based on the two examples you contrasted.
&lt;/p&gt;
&lt;p&gt;
I mostly agreed with all you wrote in #&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:72" title="Comment 72"&gt;comment:72&lt;/a&gt;. I agree that &lt;code&gt;WP::get( 'whatever' )-&amp;gt;do_something;&lt;/code&gt; is better than  &lt;code&gt;$GLOBALS['whatever']-&amp;gt;do_something();&lt;/code&gt;.  And while I disagree with your assertion that lesser skilled people will find is easier I think it is not a step too far and one that we should take if we can minimize the learning required to just one more bit is syntax (e.g. &lt;code&gt;::&lt;/code&gt;).
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
As an aside, I have recent specific experience running monthly WordPress coding workshops for a year. They were ostensibly supposed to be for professional developers but the least skilled people in our group always attended. I really learned a lot about what people who attend WordPress user groups with the intention of learning programming struggle with.
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;
One of key things that trigger them to assume they cannot understand something is &lt;strong&gt;when they see syntax they do not understand&lt;/strong&gt;, especially if they associate it with something they have already decided they can't understand, such as OOP.  For example this is a lot of syntax to learn for a non-programmer and it is intimidating to them: &lt;code&gt;WP::get( 'whatever' )-&amp;gt;do_something;&lt;/code&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
To clarify my specific concerns:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;FOR THIS TICKET:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;The use of a &lt;code&gt;WP::get( 'whatever' )&lt;/code&gt; seems over-architected and with no benefits I can perceive when we can just as easily use &lt;code&gt;WP::whatever()&lt;/code&gt;.  Especially when &lt;code&gt;whatever&lt;/code&gt; is known in advance as it is with all existing globals. Better to create hardcoded methods that each have their own PHPDoc and each can trigger autocomplete in an IDE &lt;em&gt;(without requiring complex machinations to get autocomplete to work.)&lt;/em&gt;
&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;
&lt;strong&gt;GENERAL ISSUES:&lt;/strong&gt;
&lt;/p&gt;
&lt;ol start="2"&gt;&lt;li&gt;For the benefit of archetypes 1 and 2 from #&lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/37699#comment:66" title="Comment 66"&gt;comment:66&lt;/a&gt;, let's please avoid adding in namespaces, interfaces and/or dependency injection that themers and site builders would thus need to learn and understand.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;And let's try to avoid namespaces and interfaces for archetypes 3-6 whenever it could potentially result in 1 and 2 having to learn them.
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="4"&gt;&lt;li&gt;When using dependency injection let's (1) use the $args pattern and not a bunch of positional parameters, and (2) always default to the most common case inside the function/method that uses the dependencies.  Put a one-time burden on the developer of the function/method to deal with as much of the complexity as possible vs. forcing complexity onto tens of not hundreds of thousands of people who have to deal with it daily.
&lt;/li&gt;&lt;/ol&gt;&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;You can always solve a simple problem with a too complex architecture (and preferably wrap a simplification around it). But you will not be able to solve a complex problem with a too simple architecture.&lt;/strong&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I strongly agree with that.
&lt;/p&gt;
&lt;p&gt;
But I also believe that we need to go the extra mile to ensure that complexity does not leak out and burden "lesser-experienced" developers.  Core (and commercial plugin/theme vendors) should make ever effort to make it trivially easy to use WordPress and their products, respectively, even if it means their own code ends up being very complex.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37699 (Death to Globals Episode #1: A Registry, A Pattern) updated</title>
      
        <dc:creator>ChriCo</dc:creator>

      <pubDate>Sun, 04 Sep 2016 08:02:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37699#comment:75</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37699#comment:75/1472976143491908</guid>
      <description>&lt;p&gt;
Howdy.
&lt;/p&gt;
&lt;p&gt;
@jacobsantos i'm replying in a short way here:
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;0. My "implementation&lt;/strong&gt;
Actually it was no implementation at all. I just throwed in some "requirements" with examples, so everyone here can follow. I think we all agree that we need &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;has&lt;/code&gt; and some way to &lt;code&gt;protect&lt;/code&gt; values from overwriting. Also some kind of "creation" (&lt;code&gt;factory&lt;/code&gt;) of new instances should be possible. There's also a mix since you should be able to access the current &lt;code&gt;wpdb&lt;/code&gt;-connection, but it should also be possible to connect to another db (create a new instance of this class).
&lt;/p&gt;
&lt;p&gt;
In addtion, your StorageFactory (or for Pimple its a ServiceProvider) could improve everything. Since we cannot use closures because of PHP 5.2, we have to build something arround it.
I also had a look at your MimicCMS, but i think thats not the "right" or full solution/way here. Also, as i see it does not support PHP 5.2 so there need to be changed some internals. And thats the point: when we're starting to change it, i would prefer use some well known Container - which is already proved by many many many users (nothing against you and props to your work!) - as basis,
&lt;/p&gt;
&lt;p&gt;
&lt;em&gt;Also we should keep in mind:&lt;/em&gt; We've a ton of "APIs" in WordPress and no &lt;em&gt;real&lt;/em&gt; packages (e.G. a package for Query (Term, Post, ..), Customizer, AssetManagent (WP_Dependencies..irks) ...). So to add some Factories/Providers are a hugh mess currently.
&lt;/p&gt;
&lt;p&gt;
A good way would be something like:
&lt;/p&gt;
&lt;div class="wiki-code"&gt;&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;├─&lt;/span&gt; &lt;span class="nx"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;├─&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;WP_Query_Post&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;├─&lt;/span&gt; &lt;span class="nx"&gt;Term&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;WP_Query_Term&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;├─&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;├─&lt;/span&gt; &lt;span class="nx"&gt;composer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;haha&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="nx"&gt;just&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;joke&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;├─&lt;/span&gt; &lt;span class="nx"&gt;Provider&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="err"&gt;├─&lt;/span&gt;  &lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;WP_Query_Provider_Post&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;thats&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Factory&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;implementation&lt;/span&gt; &lt;span class="nx"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;example&lt;/span&gt; &lt;span class="nx"&gt;above&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;
or something similar. It's just a quick example - naming is not fixed and should just show how it could be implemented decoubled from WordPress with own UnitTests (we've no real UnitTests at all in WordPress...they are more like IntegrationTests..)
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;1. To Pimple or not&lt;/strong&gt;
I just mentioned Pimple because it's easy to unterstand, well known, has a very short documention where you can unterstand the complete implementation just by reading some lines. This was just an example, so everyone can get a quick overview what &lt;em&gt;could be&lt;/em&gt; implemented. I'm also not liking the ArrayAccess in Pimple, but thats just my personal opinion and that does not mean anything. I'm open to every other well known, tested and documented Container. And there are a lot of Containers and implementations out there: &lt;a class="ext-link" href="https://github.com/container-interop/container-interop#compatible-projects"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;https://github.com/container-interop/container-interop#compatible-projects&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;2. Seperate it from Core&lt;/strong&gt;
Since we're stucking with PHP 5.2, we're not able to use some existing implementations. This means, we have to put in a lot of effort to build an own implemtation of it with full test coverage.
I totally agree in this point with you, that the ServiceContainer should be seperated from the Core and loaded via composer. Also it should be decoupled from Core to use it on its own (e.G. no usage of WordPress functions/classes such as {{_doing_it_wrong}} or {{WP_Error}}).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mor10</dc:creator>

      <pubDate>Sun, 04 Sep 2016 07:43:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:55</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:55/1472975009693844</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:54" title="Comment 54"&gt;bfintal&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It is possible to have a page (doesn't apply to posts) without a title. In those cases it is left to the user to "design" the title and wouldn't be able to add an H1 anymore with the suggestions. While I agree that H1 shouldn't be used more than once, maybe we could just leverage that and hide the H1 if 1) there is one already in the content and 2) the post being edited is a page (post_type).
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
This is what I was referring to above: If the theme requires an H1 in certain circumstances, there should be an optional filter to activate it when appropriate.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>bfintal</dc:creator>

      <pubDate>Sun, 04 Sep 2016 06:30:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:54</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:54/1472970651230986</guid>
      <description>&lt;p&gt;
It is possible to have a page (doesn't apply to posts) without a title. In those cases it is left to the user to "design" the title and wouldn't be able to add an H1 anymore with the suggestions. While I agree that H1 shouldn't be used more than once, maybe we could just leverage that and hide the H1 if 1) there is one already in the content and 2) the post being edited is a page (post_type). This suggestion might be a stretch, but I'm just throwing this idea out there in case there are others who find it useful.
&lt;/p&gt;
&lt;p&gt;
@celloexpressions and @mrahmadawais I agree that the center button should be readily accessible there. But what if the center button was moved to be beside the other alignment buttons when in full view?
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 04 Sep 2016 05:30:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:202</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:202/1472967004922076</guid>
      <description>&lt;p&gt;
Great news!
&lt;/p&gt;
&lt;p&gt;
I've been doing more testing on W.org and WP.com, everything appears to be working smoothly. As such, the plan is to commit in the coming week. Please don't hold back on trying to break it over the next few days, I'd prefer to fix bugs now, rather than after it rolls out in the nightly. :-)
&lt;/p&gt;
&lt;p&gt;
As @nacin suggested &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/17817#comment:169" title="Comment 169"&gt;a lifetime ago&lt;/a&gt;, the &lt;a class="ext-link" href="https://gist.github.com/jbrinley/eaaad00b52e1316c6904"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;draft post&lt;/a&gt; that @jbrinley wrote will be published on make/core, with some comments around timing for the final keep/revert decision.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>noplanman</dc:creator>

      <pubDate>Sun, 04 Sep 2016 05:02:32 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:201</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:201/1472965352217122</guid>
      <description>&lt;p&gt;
Ok, can confirm that it's working now, great job! :-D
&lt;/p&gt;
&lt;p&gt;
If you need any other testing, just let me know.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #17817 (do_action/apply_filters/etc. recursion on same filter kills underlying call) updated</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 04 Sep 2016 04:29:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/17817#comment:200</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/17817#comment:200/1472963391638141</guid>
      <description>&lt;p&gt;
Oh, good catch @noplanman. I totally forgot to update &lt;code&gt;WP_Hook::do_action()&lt;/code&gt; to keep track of the current priority. :-)
&lt;/p&gt;
&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/17817/17817.18.diff" title="Attachment '17817.18.diff' in Ticket #17817"&gt;17817.18.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/17817/17817.18.diff" title="Download"&gt;​&lt;/a&gt; fixes this, and adds unit tests.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>17817.18.diff attached to Ticket #17817</title>
      
        <dc:creator>pento</dc:creator>

      <pubDate>Sun, 04 Sep 2016 04:28:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/17817/17817.18.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/17817/17817.18.diff/1472963327764592</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Sep 2016 04:08:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:11/1472962092247711</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38519" title="Script Loader: Correct default value for `$src` in ..."&gt;38519&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Script Loader: Correct default value for &lt;code&gt;$src&lt;/code&gt; in &lt;code&gt;wp_enqueue_script()&lt;/code&gt; and &lt;code&gt;wp_enqueue_style()&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props Frank Klein for initial patch.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38519]: Script Loader: Correct default value for `$src` in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 04 Sep 2016 04:08:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38519</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38519/1472962091788922</guid>
      <description>&lt;p&gt;
Script Loader: Correct default value for &lt;code&gt;$src&lt;/code&gt; in &lt;code&gt;wp_enqueue_script()&lt;/code&gt; and &lt;code&gt;wp_enqueue_style()&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
Props Frank Klein for initial patch.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #37661 (A New Experience for Discovering, Installing, and Previewing Themes in ...) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 04 Sep 2016 03:41:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37661#comment:17</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37661#comment:17/1472960495713032</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/37661/37661.1.diff" title="Attachment '37661.1.diff' in Ticket #37661"&gt;37661.1.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/37661/37661.1.diff" title="Download"&gt;​&lt;/a&gt; adds:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Refine UI for users that can't install themes (and multisite), and restore the existing installed themes filter for these users. We need to figure out how to maintain the grid of themes when some of them are hidden (the nth-child approach for margins breaks when elements are hidden).
&lt;/li&gt;&lt;li&gt;Clean up JS events for theme details buttons.
&lt;/li&gt;&lt;li&gt;Delete themes (shiny), which also updates instances of the theme in other sections accordingly.
&lt;/li&gt;&lt;li&gt;Update themes (shiny). We're now patching updates.js as well so we definitely can't use a plugin for testing unfortunately. We also need to define the JS &lt;code&gt;pagenow&lt;/code&gt; global in the customizer now for updates and deletion to work properly. I unfortunately can't test whether the UI is updated appropriately on a successful update, as my internet connection is currently too slow for my local server to download a theme from .org, but update failures are working well.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I also investigated adding theme reviews to the details modal. Per the above discussion in #meta, the themes api doesn't have a way to query theme reviews yet. This may be possible now that the forums have been updated from bbPress 1.x, but we'll explore further in a separate ticket in a future release, and coordinate was needed with the meta team for API support.
&lt;/p&gt;
&lt;p&gt;
That leaves only on more major development task:
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;"Shiny" theme upload ajax action, add new theme control to installed section, focus() control.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
With nearly all of the functionality complete, now is the time for testing to pick up. @karmatosed will be coordinating user tests soon, and anyone who knows how to install a patch is highly encouraged to test the patch and comment here with feedback. Once we go through a round of user testing and design adjustments (I believe @folletto has some suggestions?), we can do a make/core post for additional feedback.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37770 (Docs improvements for 4.7) updated</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 04 Sep 2016 03:40:05 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37770#comment:10</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37770#comment:10/1472960405104148</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/38518" title="Docs: Update the `$message` parameter for `_default_wp_die_handler()` ..."&gt;38518&lt;/a&gt;:
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Docs: Update the &lt;code&gt;$message&lt;/code&gt; parameter for &lt;code&gt;_default_wp_die_handler()&lt;/code&gt; to notate that it can also accept a &lt;code&gt;WP_Error&lt;/code&gt; object.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Additionally, update the &lt;code&gt;$message&lt;/code&gt; parameter description in the DocBlock for &lt;code&gt;wp_die()&lt;/code&gt; to make it explicitly clear messages derived from a passed &lt;code&gt;WP_Error&lt;/code&gt; object will only be evaluated if not performing an Ajax or XML-RPC request (as both default handlers completely ignore &lt;code&gt;WP_Error&lt;/code&gt; object messages).&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [38518]: Docs: Update the `$message` parameter for `_default_wp_die_handler()` ...</title>
      
        <dc:creator>DrewAPicture</dc:creator>

      <pubDate>Sun, 04 Sep 2016 03:40:04 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/38518</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/38518/1472960404631926</guid>
      <description>&lt;p&gt;
Docs: Update the &lt;code&gt;$message&lt;/code&gt; parameter for &lt;code&gt;_default_wp_die_handler()&lt;/code&gt; to notate that it can also accept a &lt;code&gt;WP_Error&lt;/code&gt; object.
&lt;/p&gt;
&lt;p&gt;
Additionally, update the &lt;code&gt;$message&lt;/code&gt; parameter description in the DocBlock for &lt;code&gt;wp_die()&lt;/code&gt; to make it explicitly clear messages derived from a passed &lt;code&gt;WP_Error&lt;/code&gt; object will only be evaluated if not performing an Ajax or XML-RPC request (as both default handlers completely ignore &lt;code&gt;WP_Error&lt;/code&gt; object messages).
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/37770" title="#37770: task (blessed): Docs improvements for 4.7 (closed: fixed)"&gt;#37770&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>37661.1.diff attached to Ticket #37661</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 04 Sep 2016 03:40:03 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37661/37661.1.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37661/37661.1.diff/1472960403931468</guid>
      <description>&lt;p&gt;
Add theme updating and deletion, improve view when users can't install themes, clean up theme details events.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>customize-installed-themes-no-install.png attached to Ticket #37661</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 04 Sep 2016 03:32:12 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/37661/customize-installed-themes-no-install.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/37661/customize-installed-themes-no-install.png/1472959932921497</guid>
      <description>&lt;p&gt;
View for users who can't install themes and on multisite.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #5915 (Same problem as in #252: apop broken if zero occurs in banner in 2.3.3 ...) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 04 Sep 2016 02:59:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/5915#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/5915#comment:12/1472957970349666</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #18792 (Wrong FROM email when using wp_mail and built in mail() function) updated</title>
      
        <dc:creator>netweb</dc:creator>

      <pubDate>Sun, 04 Sep 2016 02:57:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/18792#comment:22</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/18792#comment:22/1472957843517396</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #2852 (Infinite loop in do_robots causes apache to terminate) updated</title>
      
        <dc:creator>slackbot</dc:creator>

      <pubDate>Sun, 04 Sep 2016 02:23:23 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/2852#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/2852#comment:2/1472955803566070</guid>
      <description>&lt;p&gt;
&lt;em&gt;This ticket was mentioned in &lt;a class="ext-link" href="https://make.wordpress.org/chat/"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;Slack&lt;/a&gt; in #forums by netweb. &lt;a class="ext-link" href="https://wordpress.slack.com/archives/forums/p1472955801000295"&gt;&lt;span class="icon"&gt;​&lt;/span&gt;View the logs&lt;/a&gt;.&lt;/em&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>EusebiuOprinoiu</dc:creator>

      <pubDate>Sun, 04 Sep 2016 02:17:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:53/1472955453570947</guid>
      <description>&lt;p&gt;
This is my current and ideal layout for the MCE Editor that I made with TinyMCE Advanced. The first row contains the buttons that I use on a daily basis and the second one those that I rarely use. Everything else was removed.
&lt;/p&gt;
&lt;p&gt;
I believe colors and font sizes don't have a place here because all they do is allow people to ruin even the best-designed themes.
&lt;/p&gt;
&lt;p&gt;
I am also a firm believer the H1 Heading doesn't have a place here as well. I saw many people using it multiple times in their post because "the text was bigger". Only titles should be H1 and this is done by the theme.
&lt;/p&gt;
&lt;p&gt;
&lt;a style="padding:0; border:none" href="http://i.imgur.com/6kuMMIk.png"&gt;&lt;img src="http://i.imgur.com/6kuMMIk.png" alt="http://i.imgur.com/6kuMMIk.png" crossorigin="anonymous" title="http://i.imgur.com/6kuMMIk.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #22744 (Media search doesn't include file name) updated</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 04 Sep 2016 02:12:17 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/22744#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/22744#comment:27/1472955137085981</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
&lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/22744/22744.4.diff" title="Attachment '22744.4.diff' in Ticket #22744"&gt;22744.4.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/22744/22744.4.diff" title="Download"&gt;​&lt;/a&gt; Accomplishes this task without introducing any new filters. To do so, any time we execute a search query on attachments we modify the JOIN clause to include postmeta, the WHERE clause to include searches for postmeta where &lt;code&gt;_wp_attached_file&lt;/code&gt; is the &lt;code&gt;meta_key&lt;/code&gt; and the GROUP BY clause to avoid returning duplicate posts.
&lt;/p&gt;
&lt;p&gt;
One question is whether we should search attachment file names any time &lt;code&gt;attachment&lt;/code&gt; post types are included in a search query, e.g. &lt;code&gt;$q['post_type'] =&amp;gt; array('attachment', 'post')&lt;/code&gt;, or only when exclusively doing searches on attachments? Currently, I'm only doing the latter.
&lt;/p&gt;
&lt;p&gt;
Also, thanks @Kent Brockman for the suggestion to check out the Media Search Enhanced plugin. Doing so helped me get my head around what needed to happen here.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>22744.4.diff attached to Ticket #22744</title>
      
        <dc:creator>joemcgill</dc:creator>

      <pubDate>Sun, 04 Sep 2016 01:56:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/22744/22744.4.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/22744/22744.4.diff/1472954204443654</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sun, 04 Sep 2016 01:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:52</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:52/1472952194926649</guid>
      <description>&lt;p&gt;
I would be okay with the proposal from @mrahmadawais if the center-align button were moved down with the other alignment buttons and the indent/outdent buttons were kept on the top level after lists. I would also prefer for underline to stay in the second row, since it's not semantic and it's there now.
&lt;/p&gt;
&lt;p&gt;
We could do surveys and maybe user tests but it's going to be extremely difficult to quantitatively determine what the best approach is. I don't know how much we could pick up from user testing here, since individuals have bias and any test steps will carry bias in the tools that they direct a user to use. We'll likely end up have to make a decision without that information, and as the ticket initially proposed, basing it largely on semantics seems logical (starting with headings, then emphasis, etc.).
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #37927 (Errors occurring after upgrading to WordPress 4.6) updated</title>
      
        <dc:creator>Pulsar_Media</dc:creator>

      <pubDate>Sun, 04 Sep 2016 01:17:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/37927#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/37927#comment:8/1472951873697131</guid>
      <description>&lt;p&gt;
If i understand correctly that article mentions that the error is related to uppercase characters in the directory name? My theme does not contain uppercase characters in the main theme folder which is labelled "hope-charity-theme-child"
&lt;/p&gt;
&lt;p&gt;
Sorry but i don't believe that article resolves anything.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>wp-test-tinymce-toolbars.2.php attached to Ticket #27159</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 04 Sep 2016 00:53:26 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.2.php</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/27159/wp-test-tinymce-toolbars.2.php/1472950406819086</guid>
      <description>&lt;p&gt;
Icon arrangement proposal!
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 04 Sep 2016 00:52:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:51</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:51/1472950348688394</guid>
      <description>&lt;p&gt;
Well, here's what I propose! The arrangement is shown below and I have added the new plugin file.
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Minimal&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/Htvo5NO.png"&gt;&lt;img src="https://i.imgur.com/Htvo5NO.png" alt="https://i.imgur.com/Htvo5NO.png" crossorigin="anonymous" title="https://i.imgur.com/Htvo5NO.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;Full&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/HEBpWqe.png"&gt;&lt;img src="https://i.imgur.com/HEBpWqe.png" alt="https://i.imgur.com/HEBpWqe.png" crossorigin="anonymous" title="https://i.imgur.com/HEBpWqe.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;FormatSelect has no Heading 1&lt;/strong&gt;
&lt;a style="padding:0; border:none" href="https://i.imgur.com/a8FLLTZ.png"&gt;&lt;img src="https://i.imgur.com/a8FLLTZ.png" alt="https://i.imgur.com/a8FLLTZ.png" crossorigin="anonymous" title="https://i.imgur.com/a8FLLTZ.png" /&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
I write/edit about 50K words every single week, and this arrangement would mean I could rely on the Minimal version of the above screenshots. Would really help.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #27159 (Removing TinyMCE buttons to improve user experience) updated</title>
      
        <dc:creator>mrahmadawais</dc:creator>

      <pubDate>Sun, 04 Sep 2016 00:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/27159#comment:50</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/27159#comment:50/1472948701462869</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:48" title="Comment 48"&gt;azaozz&lt;/a&gt;:
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/27159#comment:47" title="Comment 47"&gt;mor10&lt;/a&gt;:
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks for the info Andrew! I'd love to participate by contributing via that plugin.
&lt;/p&gt;
&lt;p&gt;
Moreover, Morten I strongly agree with the points you raised I came here to talk about exactly the same arrangement and how removing certain buttons would do more harm than good. But after reading your comment I feel that's all I need to say.
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>