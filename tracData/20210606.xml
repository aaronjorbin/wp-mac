<?xml version="1.0"?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0">
  <channel>
    <title>WordPress Trac</title>
    <link>http://core.trac.wordpress.org/timeline</link>
    <description>Trac Timeline</description>
    <language>en-US</language>
    <generator>Trac 1.2.2</generator>
    <image>
      <title>WordPress Trac</title>
      <url>http://core.trac.wordpress.org/chrome/site/your_project_logo.png</url>
      <link>http://core.trac.wordpress.org/timeline</link>
    </image>
    <item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 06 Jun 2021 22:05:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:9</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:9/1623017133570461</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53334#comment:8" title="Comment 8"&gt;jrf&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Conclusion: once WP updates the locked PHPCS version, that particular annotation can be removed from the file in WP as well.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ah, that makes sense now :) Thanks for looking into this and for the clarification!&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52133 (TinyMCE editor doesn't load properly when initializing on Visual Tab ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 Jun 2021 22:03:25 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52133#comment:29</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52133#comment:29/1623017005191180</guid>
      <description>&lt;p&gt;
Related &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52050" title="#52050: defect (bug): White TinyMce editor from wp_editor function on a meta box on WP 5.6 (closed: fixed)"&gt;#52050&lt;/a&gt;. 52133.diff should fix it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52133 (TinyMCE editor doesn't load properly when initializing on Visual Tab ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 Jun 2021 22:01:36 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52133#comment:28</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52133#comment:28/1623016896535696</guid>
      <description>&lt;p&gt;
In 52133.diff: when a TinyMCE instance is in a postbox delay initialization until the window is loaded.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please test asap :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>52133.diff attached to Ticket #52133</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 Jun 2021 21:57:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52133/52133.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52133/52133.diff/1623016649741723</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52133 (TinyMCE editor doesn't load properly when initializing on Visual Tab ...) updated</title>
      
        <dc:creator>azaozz</dc:creator>

      <pubDate>Sun, 06 Jun 2021 21:56:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52133#comment:27</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52133#comment:27/1623016616009756</guid>
      <description>&lt;p&gt;
@metalandcoffee, @spikeuk1, @patkemper thanks for testing!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Yes, I can still reproduce this sometimes when initializing TinyMCE in an (old style) metabox in the block editor. Seems the only way around this that I can think of at the moment would be to delay initialization of TinyMCE in postboxes until the page is fully loaded. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53339 (Inconsistency in allowed characters for a password) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 06 Jun 2021 21:53:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53339#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53339#comment:1/1623016436822873</guid>
      <description>&lt;i&gt;Component&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53343 (Changes in site menu has not been saved.) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sun, 06 Jun 2021 21:32:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53343#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53343#comment:1/1623015129597910</guid>
      <description>invalid: &lt;p&gt;
I'm sorry to hear you are having issues with WordPress. As mentioned on your previous two tickets, this Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please try the support forums to get help with your site: &lt;a class="ext-link" href="https://wordpress.org/support/forums/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/support/forums/&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53343 (Changes in site menu has not been saved.) created</title>
      
        <dc:creator>albtbd</dc:creator>

      <pubDate>Sun, 06 Jun 2021 18:25:01 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53343</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53343/1623003901712329</guid>
      <description>&lt;p&gt;
Top dropdown menu doesn't work as well as no changes in the menu is being saved on the defined location. Problem notifying word press error. my site looks broken, please help me to fix it &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50105 (Remove infinite scrolling behavior from the Media grid) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sun, 06 Jun 2021 18:19:09 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50105#comment:98</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50105#comment:98/1623003549494954</guid>
      <description>&lt;p&gt;
OK. Here's what I'm seeing, I think.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The Media library overrides backbone.sync in &lt;code&gt;media\models\query.js&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Backbone uses .fetch to get data using .sync, so this is overriding the default Backbone return value, using &lt;code&gt;wp.media.ajax&lt;/code&gt; instead. &lt;code&gt;wp.media.ajax&lt;/code&gt; (an alias of &lt;code&gt;wp.ajax.send&lt;/code&gt;) doesn't return an XHR object, but instead returns a promise. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
We could probably pass an option into &lt;code&gt;wp.media.ajax&lt;/code&gt; that gets the XHR object, though I'm not at all sure what additional consequences that could have. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In my quick test, I was able to get an XHR object, but I didn't see the header showing up, but I ran out of time today to try to track down why.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sun, 06 Jun 2021 16:16:00 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:8/1622996160204293</guid>
      <description>&lt;blockquote class="citation"&gt;
&lt;p&gt;
So it looks like updating the VERSION constant would be the only change here, other fixes from 1.8.1 are all in the files not included in WordPress core.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Sounds about right üòÅ&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
It also looks like this line should not be removed from Requests/Utility/FilteredIterator.php:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;@phpcs:disable PHPCompatibility.FunctionNameRestrictions.ReservedFunctionNames.MethodDoubleUnderscore
&lt;/pre&gt;&lt;p&gt;
Removing that causes the PHP compatibility task to fail:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Run phpcs --standard=phpcompat.xml.dist -q --report=checkstyle | cs2pr
Warning: Method name "Requests_Utility_FilteredIterator::__unserialize" is discouraged; PHP has &amp;gt; reserved all method names with a double underscore prefix for future use.
Error: Process completed with exit code 1.
&lt;/pre&gt;&lt;p&gt;
This should probably be reported upstream. cc @jrf&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
@SergeyBiryukov I've looked into this. Both ignore annotations are correct based on the individual project environments.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Requests is already using PHPCS 3.6.0, while WP is still on PHPCS 3.5.5.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The &lt;code&gt;PHPCompatibility.FunctionNameRestrictions.ReservedFunctionNames&lt;/code&gt; sniff uses a list maintained in PHPCS itself to determine which method names are "magic" and to exclude those from being reported by the sniff.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The method name &lt;code&gt;__unserialize&lt;/code&gt; became a magic method in PHP 7.4.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The list with magic method names in PHPCS was updated for the PHP 7.4 change in PHPCS 3.5.6.&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.5.6"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/squizlabs/PHP_CodeSniffer/releases/tag/3.5.6&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Conclusion: once WP updates the locked PHPCS version, that particular annotation can be removed from the file in WP as well.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #50105 (Remove infinite scrolling behavior from the Media grid) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sun, 06 Jun 2021 15:57:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50105#comment:97</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50105#comment:97/1622995070013371</guid>
      <description>&lt;p&gt;
There's a lot of overriding happening in &lt;code&gt;\wp\api.js&lt;/code&gt;; that's where the X-WP-Nonce header is set and fetched.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
It's interesting that the XHR object documented there is not, in fact, an XHR object, and I can't see anything that's overriding fetch on the model. Sync is being extended, but that shouldn't be changing anything about the fetch. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Might be able to follow the path used for adding nonces to get this header. I'm currently looking at that. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 06 Jun 2021 14:37:30 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:40</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:40/1622990250836178</guid>
      <description>&lt;p&gt;
With the current patch the currently installed languages are listed. This means the language picker on the log in screen works the same way as that on the user profile editing screen.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53342 (Number of comments should be an integer) closed</title>
      
        <dc:creator>johnbillion</dc:creator>

      <pubDate>Sun, 06 Jun 2021 14:13:56 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53342#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53342#comment:1/1622988836517918</guid>
      <description>invalid: &lt;p&gt;
Thanks for the report @Djibs13 . &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/blob/aea1ccbab45865a3ba5433f0d8d6496d16ff7c5e/src/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php#L2154"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;There is no `comments` property by default&lt;/a&gt; so it looks like this is being added by a plugin on your site.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
You may want to deactivate your plugins one by one to identify which one is adding that property.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) closed</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 06 Jun 2021 14:04:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:7/1622988293622751</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51078" title="External Libraries: Update the Requests library to version 1.8.1.
 ..."&gt;51078&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
External Libraries: Update the Requests library to version 1.8.1.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This is a minor update, with the most important change being that the version constant in the &lt;code&gt;Requests&lt;/code&gt; class is now correct.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Release notes: &lt;a class="ext-link" href="https://github.com/WordPress/Requests/releases/tag/v1.8.1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/WordPress/Requests/releases/tag/v1.8.1&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For a full list of changes in this update, see the Requests GitHub:&lt;br /&gt;
&lt;a class="ext-link" href="https://github.com/WordPress/Requests/compare/v1.8.0...v1.8.1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/WordPress/Requests/compare/v1.8.0...v1.8.1&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50842" title="External Libraries: Update the Requests library to version `1.8.0`.
 ..."&gt;[50842]&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props kapilpaul, jrf, schlessera, mbabker.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53334" title="#53334: task (blessed): Update Requests library to version 1.8.1 (closed: fixed)"&gt;#53334&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [51078]: External Libraries: Update the Requests library to version 1.8.1.  ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 06 Jun 2021 14:04:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51078</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51078/1622988292603455</guid>
      <description>&lt;p&gt;
External Libraries: Update the Requests library to version 1.8.1.
&lt;/p&gt;
&lt;p&gt;
This is a minor update, with the most important change being that the version constant in the &lt;code&gt;Requests&lt;/code&gt; class is now correct.
&lt;/p&gt;
&lt;p&gt;
Release notes: &lt;a class="ext-link" href="https://github.com/WordPress/Requests/releases/tag/v1.8.1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/WordPress/Requests/releases/tag/v1.8.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
For a full list of changes in this update, see the Requests GitHub:
&lt;a class="ext-link" href="https://github.com/WordPress/Requests/compare/v1.8.0...v1.8.1"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://github.com/WordPress/Requests/compare/v1.8.0...v1.8.1&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
Follow-up to &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/50842" title="External Libraries: Update the Requests library to version `1.8.0`.
 ..."&gt;[50842]&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Props kapilpaul, jrf, schlessera, mbabker.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53334" title="#53334: task (blessed): Update Requests library to version 1.8.1 (closed: fixed)"&gt;#53334&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 06 Jun 2021 14:03:33 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:6/1622988213389803</guid>
      <description>&lt;p&gt;
So it looks like updating the &lt;code&gt;VERSION&lt;/code&gt; constant would be the only change here, other fixes from 1.8.1 are all in the files not included in WordPress core.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53334#comment:4" title="Comment 4"&gt;kapilpaul&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks for the information. I will update the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Thanks! I think that would not be necessary though, I'll make the adjustments on commit :)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 06 Jun 2021 13:41:40 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:5/1622986900144379</guid>
      <description>&lt;p&gt;
It also looks like this line should not be removed from &lt;code&gt;Requests/Utility/FilteredIterator.php&lt;/code&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;@phpcs:disable PHPCompatibility.FunctionNameRestrictions.ReservedFunctionNames.MethodDoubleUnderscore
&lt;/pre&gt;&lt;p&gt;
Removing that causes the &lt;a class="ext-link" href="https://github.com/SergeyBiryukov/wordpress-develop/runs/2757425743?check_suite_focus=true"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;PHP compatibility task&lt;/a&gt; to fail:&lt;br /&gt;
&lt;/p&gt;
&lt;pre class="wiki"&gt;Run phpcs --standard=phpcompat.xml.dist -q --report=checkstyle | cs2pr
Warning: Method name "Requests_Utility_FilteredIterator::__unserialize" is discouraged; PHP has reserved all method names with a double underscore prefix for future use.
Error: Process completed with exit code 1.
&lt;/pre&gt;&lt;p&gt;
This should probably be reported upstream. cc @jrf&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) updated</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sun, 06 Jun 2021 13:29:13 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:4/1622986153398209</guid>
      <description>&lt;p&gt;
@SergeyBiryukov &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks for the information. I will update the patch.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sun, 06 Jun 2021 13:21:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:3/1622985712237486</guid>
      <description>&lt;p&gt;
Thanks for the patch!&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Just noting that &lt;code&gt;Requests/Transport/cacert.pem&lt;/code&gt; should not be included here, as WordPress has its own bundle of CA root certificates in &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.2/src/wp-includes/certificates/ca-bundle.crt"&gt;wp-includes/certificates/ca-bundle.crt&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.2/src/wp-includes/certificates/ca-bundle.crt" title="Download"&gt;‚Äã&lt;/a&gt;, loaded early in &lt;a class="source" href="http://core.trac.wordpress.org/browser/tags/5.7.2/src/wp-includes/class-http.php?marks=11-14#L1"&gt;wp-includes/class-http.php&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/export/HEAD/tags/5.7.2/src/wp-includes/class-http.php#L1" title="Download"&gt;‚Äã&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>DJIBS 2021-06-06 √† 14.46.30.jpg attached to Ticket #53342</title>
      
        <dc:creator>Djibs13</dc:creator>

      <pubDate>Sun, 06 Jun 2021 12:47:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53342/DJIBS%202021-06-06%20%C3%A0%2014.46.30.jpg</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53342/DJIBS%202021-06-06%20%C3%A0%2014.46.30.jpg/1622983669462571</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53342 (Number of comments should be an integer) created</title>
      
        <dc:creator>Djibs13</dc:creator>

      <pubDate>Sun, 06 Jun 2021 12:47:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53342</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53342/1622983657706880</guid>
      <description>&lt;p&gt;
Hello,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the API, the number of comments in a post is indicated as a string when it should be an integer &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53321 (Reset password email should include user's locale in reset link) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sun, 06 Jun 2021 12:40:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53321#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53321#comment:4/1622983249140756</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/ocean90"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;ocean90&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1334#issuecomment-855393077"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;PR #1334&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Committed in &lt;a href="https://core.trac.wordpress.org/changeset/51077"&gt;https://core.trac.wordpress.org/changeset/51077&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53321 (Reset password email should include user's locale in reset link) updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 06 Jun 2021 12:39:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53321#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53321#comment:3/1622983191823889</guid>
      <description>&lt;i&gt;Milestone&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #34281,‚Äã52605,‚Äã53321 batch updated</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 06 Jun 2021 12:39:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=34281%2C52605%2C53321</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=34281%2C52605%2C53321/1622983147257123</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51077" title="Users: Add user‚Äôs locale to password reset link to ensure login screen ..."&gt;51077&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Users: Add user‚Äôs locale to password reset link to ensure login screen matches the language of the email.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props walbo.&lt;br /&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34281" title="#34281: task (blessed): Allow admins to send users a 'Reset Password' link (closed: fixed)"&gt;#34281&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52605" title="#52605: defect (bug): Reset password email sent in wrong language (closed: fixed)"&gt;#52605&lt;/a&gt;.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53321" title="#53321: defect (bug): Reset password email should include user's locale in reset link (closed: fixed)"&gt;#53321&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>batchmodify</category>
    </item><item>
      <title>Changeset [51077]: Users: Add user‚Äôs locale to password reset link to ensure login screen ...</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 06 Jun 2021 12:39:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51077</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51077/1622983146297326</guid>
      <description>&lt;p&gt;
Users: Add user‚Äôs locale to password reset link to ensure login screen matches the language of the email.
&lt;/p&gt;
&lt;p&gt;
Props walbo.
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34281" title="#34281: task (blessed): Allow admins to send users a 'Reset Password' link (closed: fixed)"&gt;#34281&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52605" title="#52605: defect (bug): Reset password email sent in wrong language (closed: fixed)"&gt;#52605&lt;/a&gt;.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53321" title="#53321: defect (bug): Reset password email should include user's locale in reset link (closed: fixed)"&gt;#53321&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>siliconforks</dc:creator>

      <pubDate>Sun, 06 Jun 2021 12:23:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:14/1622982194035058</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53295#comment:13" title="Comment 13"&gt;whitewinterwolf&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;A)&lt;/strong&gt; The &lt;code&gt;allowed_classes&lt;/code&gt; filter has been added to the &lt;code&gt;unserialize()&lt;/code&gt; function by the PHP team with the sole goal to prevent any possibility of malicious code execution triggered by the deserialization process (see &lt;a class="ext-link" href="https://wiki.php.net/rfc/secure_unserialize"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;secure unserialize&lt;/a&gt;). Do you mean that they failed their attempt and that calling &lt;code&gt;unserialized($data, ['allowed_classes' =&amp;gt; false])&lt;/code&gt; is still prone to unsecure deserialization vulnerabilities? Do you have any reference or example?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
My concern is not just with vulnerabilities inside the implementation of &lt;code&gt;is_serialized()&lt;/code&gt; itself, but also in the grander scheme of things - what are the consequences if &lt;code&gt;is_serialized()&lt;/code&gt; gives the wrong answer?  If it returns the wrong result, can this lead to a case where WordPress calls &lt;code&gt;unserialize()&lt;/code&gt; on untrusted user input?&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;B)&lt;/strong&gt; Do you mean that the legacy and new code returns different values for the same serialized object data provided as input? If so, do you have any example?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Well, in the current version of the PR, the PHP 7 branch seems buggy - in particular I believe the &lt;code&gt;'C'&lt;/code&gt; test was intended to test for equality instead of inequality - but even if you fix issues like this, I don't think there's really any way to make it work without introducing a vulnerability.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For example, consider the string &lt;code&gt;O:8:"Example1":1:{s:10:"cache_file";s:15:"../../index.php";}ab84a81d5a516892c86d3a620ac3e714286b8dcdcdebaf67e8112a54ed2514f0&lt;/code&gt;.  My understanding is that this is what serialized data looks like when Snuffleupagus is enabled.  Currently in WordPress, &lt;code&gt;is_serialized()&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; for that.  If you want Snuffleupagus to work with that string, you'll want to change &lt;code&gt;is_serialized()&lt;/code&gt; to return &lt;code&gt;true&lt;/code&gt; - but now the behavior of &lt;code&gt;is_serialized()&lt;/code&gt; has changed.  This means that, with the current version of WordPress, an attacker could input that string as, say, his first name, and that would not be considered serialized data.  But in the future, if WordPress were upgraded to a version with an implementation of &lt;code&gt;is_serialized()&lt;/code&gt; returning &lt;code&gt;true&lt;/code&gt; for that string, it would then be considered serialized data and would be unserialized, potentially causing code execution.&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
&lt;strong&gt;C)&lt;/strong&gt; Do you mean that this function has been stated as &lt;em&gt;"frozen in time"&lt;/em&gt;, so there is by principle no point discussing any change to its content anyway?&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I might be missing something, but I can't think of any way you could change the behavior of &lt;code&gt;is_serialized()&lt;/code&gt; without breaking something or potentially introducing a vulnerability.  (The implementation of &lt;code&gt;is_serialized()&lt;/code&gt; could change, but it would still need to return &lt;code&gt;true&lt;/code&gt; for the same strings and &lt;code&gt;false&lt;/code&gt; for the same strings as it did before.)&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>53341.png attached to Ticket #53341</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 06 Jun 2021 11:43:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53341/53341.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53341/53341.png/1622979838805443</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53341 (Edit user: Error notice for failed password reset strips HTML for ...) created</title>
      
        <dc:creator>ocean90</dc:creator>

      <pubDate>Sun, 06 Jun 2021 11:43:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53341</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53341/1622979821710820</guid>
      <description>&lt;p&gt;
Related: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/34281" title="#34281: task (blessed): Allow admins to send users a 'Reset Password' link (closed: fixed)"&gt;#34281&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52573" title="#52573: defect (bug): user-edit.php throw an empty error notice after clicking the password ... (closed: fixed)"&gt;#52573&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See the attached screenshot, in case of a failure while sending the password reset email, the Ajax response includes a link to &lt;a class="ext-link" href="https://wordpress.org/support/article/resetting-your-password/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/support/article/resetting-your-password/&lt;/a&gt; which is currently not visible in the UI.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53284 (`error()` method passed too many parameters) updated</title>
      
        <dc:creator>sainthkh</dc:creator>

      <pubDate>Sun, 06 Jun 2021 03:17:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53284#comment:6</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53284#comment:6/1622949463912832</guid>
      <description>&lt;p&gt;
I'm sorry for the late reply.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I might need more time and I guess I cannot meet the deadline because:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;the code needs a little bit of refactoring to inject mocks for the test.
&lt;/li&gt;&lt;li&gt;I'm learning how to use phpunit. And it seems that WP phpunit doesn't support some new features.
&lt;/li&gt;&lt;li&gt;I have some other things to do.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
I'll come back to tackle it next week. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Tickets #51192,‚Äã53337 batch updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sun, 06 Jun 2021 01:07:37 GMT</pubDate>
      <link>http://core.trac.wordpress.org/query?id=51192%2C53337</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/query?id=51192%2C53337/1622941657557999</guid>
      <description>duplicate: &lt;p&gt;
@TimothyBlynJacobs Ah, I missed that when browsing the component. I think &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/51192" title="#51192: enhancement: Consider mentioning whether the auto update was forced in the auto ... (accepted)"&gt;#51192&lt;/a&gt; covers this. Closing as a duplicate. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>batchmodify</category>
    </item><item>
      <title>Ticket #52849 (Accessibility/Application passwords: Keyboard navigation issue on user ...) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 21:25:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52849#comment:20</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52849#comment:20/1622928354672220</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
In addition to refreshing against trunk, &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/52849/52849.diff" title="Attachment '52849.diff' in Ticket #52849"&gt;52849.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/52849/52849.diff" title="Download"&gt;‚Äã&lt;/a&gt; has two main edits:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Numbered placeholders in the &lt;code&gt;printf&lt;/code&gt; function so the name and id attributes share &lt;code&gt;%1$s&lt;/code&gt;
&lt;/li&gt;&lt;li&gt;Consistent syntax for the "Add New Application Password" and "Revoke all application passwords" buttons (which includes the name and id attributes)
&lt;/li&gt;&lt;/ul&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>52849.diff attached to Ticket #52849</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 21:23:27 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52849/52849.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52849/52849.diff/1622928207936652</guid>
      <description></description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #38361 (Ability to dismiss notifications in the media modal) closed</title>
      
        <dc:creator>celloexpressions</dc:creator>

      <pubDate>Sat, 05 Jun 2021 19:51:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/38361#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/38361#comment:2/1622922694169073</guid>
      <description>fixed: &lt;p&gt;
I'm not sure when, but this was fixed at some point.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53226 (Password reset screen: `wp_lang` GET parameter is lost when a wrong ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 Jun 2021 19:35:34 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53226#comment:14</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53226#comment:14/1622921734467431</guid>
      <description>&lt;p&gt;
Looking at the latest patch, introducing a new function for a specific parameter like that does not seem like the right approach to me. Once &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43700" title="#43700: enhancement: Language switcher on the login screen (reviewing)"&gt;#43700&lt;/a&gt; is implemented, any code added here might be redundant and would need to be removed or deprecated for backward compatibility.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I think I would prefer a smaller patch like &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53226/53226.2.diff" title="Attachment '53226.2.diff' in Ticket #53226"&gt;53226.2.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53226/53226.2.diff" title="Download"&gt;‚Äã&lt;/a&gt; here to solve the immediate issue, even if it's not a complete solution, and then we can iterate on it in &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43700" title="#43700: enhancement: Language switcher on the login screen (reviewing)"&gt;#43700&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53340 (sites) closed</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 19:26:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53340#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53340#comment:1/1622921179177444</guid>
      <description>invalid: &lt;p&gt;
@shinemag Hi there, welcome to WordPress Trac! Thanks for the ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm sorry to hear you are having issues with your website. Please note that Trac is used for enhancements and bug reporting for the WordPress core software, not for individual support questions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Please use the support forums to get help with your site:&lt;br /&gt;
&lt;a class="ext-link" href="https://wordpress.org/support/forum/how-to-and-troubleshooting/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/support/forum/how-to-and-troubleshooting/&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>closedticket</category>
    </item><item>
      <title>Ticket #53340 (sites) created</title>
      
        <dc:creator>shinemag</dc:creator>

      <pubDate>Sat, 05 Jun 2021 19:21:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53340</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53340/1622920909965421</guid>
      <description>&lt;p&gt;
my site is broken need to fix it.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #51192 (Consider mentioning whether the auto update was forced in the auto ...) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 Jun 2021 19:04:54 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51192#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51192#comment:5/1622919894616255</guid>
      <description>&lt;p&gt;
Related: &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/51695" title="#51695: enhancement: Include Upgrade Notice in post-auto-update emails (new)"&gt;#51695&lt;/a&gt;, &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53337" title="#53337: defect (bug): Upgrades: Add info re forced update to notification email (closed: duplicate)"&gt;#53337&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53226 (Password reset screen: `wp_lang` GET parameter is lost when a wrong ...) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 05 Jun 2021 18:37:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53226#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53226#comment:13/1622918272992157</guid>
      <description>&lt;p&gt;
Seems like a decision needs to be made on this. This patch would solve the immediate bug - where an already-set language preference is lost during the process.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43700" title="#43700: enhancement: Language switcher on the login screen (reviewing)"&gt;#43700&lt;/a&gt; appears to have stalled out, and would be classed as an enhancement, so it's definitely not something that would happen in 5.8.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
@audrasjb Have you taken a look at &lt;a class="reviewing ticket" href="http://core.trac.wordpress.org/ticket/43700" title="#43700: enhancement: Language switcher on the login screen (reviewing)"&gt;#43700&lt;/a&gt;? Does the existing patch for that solve this problem?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #43700 (Language switcher on the login screen) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 05 Jun 2021 18:35:31 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/43700#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/43700#comment:39/1622918131148668</guid>
      <description>&lt;p&gt;
I think that defaulting to only languages that are already installed is a good option. It covers most practical cases. A special micro language pack could be created - but that seems like it would be a larger project to cover a handful of edge cases. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53112 (Twenty Nineteen - Pullquote block editor styling breaks with block ...) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 18:23:42 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53112#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53112#comment:7/1622917422687429</guid>
      <description>&lt;p&gt;
To remove the LTR bias of my previous patch, the text alignment is updated to use &lt;code&gt;inherit&lt;/code&gt; in &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/53112/53112.2.patch" title="Attachment '53112.2.patch' in Ticket #53112"&gt;53112.2.patch&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/53112/53112.2.patch" title="Download"&gt;‚Äã&lt;/a&gt;. So now it should be correct for both language directions.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52649 (Themes admin page: provide labeling context on controls and links) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 05 Jun 2021 18:23:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52649#comment:39</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52649#comment:39/1622917387641754</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I've checked over the patch, and made a small modification to add an additional aria-label on the Delete button. While Delete is in a theme details modal, so the context is available, I think having confirmation immediately before taking a destructive action is beneficial to the user. Otherwise, I think this is good. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>52649.3.diff attached to Ticket #52649</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 05 Jun 2021 18:20:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52649/52649.3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52649/52649.3.diff/1622917253974388</guid>
      <description>&lt;p&gt;
Adds aria-label on the Delete button.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>53112.2.patch attached to Ticket #53112</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 18:17:35 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53112/53112.2.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53112/53112.2.patch/1622917055462618</guid>
      <description>&lt;p&gt;
using &lt;code&gt;text-align: inherit&lt;/code&gt; for left and right pullquotes (plus the max-width)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #53339 (Inconsistency in allowed characters for a password) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sat, 05 Jun 2021 18:10:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53339</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53339/1622916608559582</guid>
      <description>&lt;p&gt;
When a user attempts to reset his or her password using the facility on the front-end, they are able to use the &lt;code&gt;\&lt;/code&gt; character in their new password.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
When a user attempts to change their password at wp-admin &amp;gt; Users &amp;gt; Profile, they aren't able to use the &lt;code&gt;\&lt;/code&gt; character in their password.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This feels like an inconsistency.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Further, I noticed whitespace is stripped from the beginning and end of the password string when using the change password facility at wp-admin &amp;gt; Users &amp;gt; Profile. Note &lt;code&gt;trim()&lt;/code&gt; isn't used in the password reset facility on the front-end.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #50120 ([Multiple Bundled Themes] Custom color palette styles need to be added ...) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 17:36:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/50120#comment:42</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/50120#comment:42/1622914610283732</guid>
      <description>&lt;p&gt;
Testing Twenty Twenty 1.7 with WordPress 5.7 and Gutenberg 10.7.2:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;When text and/or background colors are applied to the paragraph block, the inline style correctly applies that color in the editor (whether the primary color is default or custom).
&lt;/li&gt;&lt;li&gt;If one of the theme's standard colors is applied to text within a paragraph block, that also is correct.
&lt;/li&gt;&lt;li&gt;When the primary color is custom, though, inline text given the standard Accent color class does not match the front end. Because it's only the one color that doesn't match, I made a simpler patch for consideration.
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Custom theme colors could be outside the scope of this ticket, so I would accept closing as fixed on 5.5 with &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/48459" title="Bundled Themes: Add custom color pallettes for block editor.
 ..."&gt;changeset:48459&lt;/a&gt; if that patch is not desirable. Then if any changes are necessary for Twenty Nineteen, those can be part of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/49787" title="#49787: defect (bug): Twenty Nineteen: Text color isn't reflected (new)"&gt;#49787&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>custom-palette-2020-inline-text-accent.png attached to Ticket #50120</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 17:35:51 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50120/custom-palette-2020-inline-text-accent.png</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50120/custom-palette-2020-inline-text-accent.png/1622914551847178</guid>
      <description>&lt;p&gt;
without patch: custom Accent color does not match with inline text
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>50120.2020-simple.patch attached to Ticket #50120</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 17:34:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/50120/50120.2020-simple.patch</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/50120/50120.2020-simple.patch/1622914469716112</guid>
      <description>&lt;p&gt;
adding &lt;code&gt;:root .has-accent-color&lt;/code&gt; in custom Twenty Twenty palette (in addition to &lt;code&gt;.has-accent-color&lt;/code&gt;)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>51189.2.diff attached to Ticket #51189</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 05 Jun 2021 17:04:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/51189/51189.2.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/51189/51189.2.diff/1622912669356318</guid>
      <description>&lt;p&gt;
Updated patch - build comment link using existing comment link function
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52314 (the HTML &lt;title&gt; tag for Edit Post should include the post's title) updated</title>
      
        <dc:creator>joedolson</dc:creator>

      <pubDate>Sat, 05 Jun 2021 16:33:02 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52314#comment:19</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52314#comment:19/1622910782391131</guid>
      <description>&lt;p&gt;
I think 'untitled' is better, probably. In addition to the reasons @sabernhardt called out, it maintains contextual parity with how the title attribute is used when there is a title - the references are equivalent.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I will note that we can have both - there's no reason we can't use 'Edit {post_type} "Untitled"'. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In that case, I'd argue we should re-use the existing 'edit_item' string and append the post title. I don't think there's a translation issue here, since the 'edit_item' string is totally independent from the post title. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thoughts?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52314 (the HTML &lt;title&gt; tag for Edit Post should include the post's title) updated</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:56:58 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52314#comment:18</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52314#comment:18/1622908618317893</guid>
      <description>&lt;p&gt;
I think 'Edit "Untitled"' is appropriate when a post is published without a title, so I made an additional option &lt;a class="attachment" href="http://core.trac.wordpress.org/attachment/ticket/52314/52314-alternate.diff" title="Attachment '52314-alternate.diff' in Ticket #52314"&gt;52314-alternate.diff&lt;/a&gt;&lt;a class="trac-rawlink" href="http://core.trac.wordpress.org/raw-attachment/ticket/52314/52314-alternate.diff" title="Download"&gt;‚Äã&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;If adding a new post, the title tag maintains the pre-existing "Add New Post" text.
&lt;/li&gt;&lt;li&gt;If the post is already published, the new HTML title matches the &lt;a href="https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/class-wp-posts-list-table.php?rev=50804#L1416"&gt;aria-label for each Edit link&lt;/a&gt; that leads to the post editor.
&lt;/li&gt;&lt;li&gt;If a published post does not have a title when the post editor loads, 'Edit "Untitled"' calls more attention to the missing title (without a formal error message).
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
However, if you disagree with me, the other patch (52314-3.diff) simply includes some changes for translation: translating the "Untitled" string, plus matching the new Edit title to the aria-label text.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>52314-alternate.diff attached to Ticket #52314</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:55:28 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52314/52314-alternate.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52314/52314-alternate.diff/1622908528328244</guid>
      <description>&lt;p&gt;
alternate option: keep existing Add New Post title, create the new Edit title when post is already published (even if untitled)
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52560 (Fatal error handler references recovery mode email, which may not have ...) updated</title>
      
        <dc:creator>prbot</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:54:43 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52560#comment:4</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52560#comment:4/1622908483995956</guid>
      <description>&lt;p&gt;
&lt;a class="ext-link" href="https://github.com/aaronjorbin"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;aaronjorbin&lt;/a&gt; commented on &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1054#issuecomment-855258891"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;PR #1054&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Merged in &lt;a href="https://core.trac.wordpress.org/changeset/51076"&gt;https://core.trac.wordpress.org/changeset/51076&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>52314-3.diff attached to Ticket #52314</title>
      
        <dc:creator>sabernhardt</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:54:07 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/52314/52314-3.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/52314/52314-3.diff/1622908447017470</guid>
      <description>&lt;p&gt;
translation updates, also re-using &lt;code&gt;$post_title&lt;/code&gt; variable
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #52560 (Fatal error handler references recovery mode email, which may not have ...) closed</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:45:11 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52560#comment:3</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52560#comment:3/1622907911384348</guid>
      <description>fixed: &lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51076" title="Booststrap/Load: Only reference recovery mode email when it can be ..."&gt;51076&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Booststrap/Load: Only reference recovery mode email when it can be sent.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The recovery mode email is sent from within the WP_Recovery_Mode::handle_error() method, but that method is only called by the fatal error handler if WP_Recovery_Mode has been initialized. This adjusts the message to only say the email has been sent if it can be sent.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Props reynhartono, stevegrunwell for initial plan.&lt;br /&gt;
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52560" title="#52560: defect (bug): Fatal error handler references recovery mode email, which may not have ... (closed: fixed)"&gt;#52560&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>closedticket</category>
    </item><item>
      <title>Changeset [51076]: Booststrap/Load: Only reference recovery mode email when it can be ...</title>
      
        <dc:creator>jorbin</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:45:10 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51076</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51076/1622907910318777</guid>
      <description>&lt;p&gt;
Booststrap/Load: Only reference recovery mode email when it can be sent.
&lt;/p&gt;
&lt;p&gt;
The recovery mode email is sent from within the WP_Recovery_Mode::handle_error() method, but that method is only called by the fatal error handler if WP_Recovery_Mode has been initialized. This adjusts the message to only say the email has been sent if it can be sent.
&lt;/p&gt;
&lt;p&gt;
Props reynhartono, stevegrunwell for initial plan.
Fixes &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52560" title="#52560: defect (bug): Fatal error handler references recovery mode email, which may not have ... (closed: fixed)"&gt;#52560&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #52133 (TinyMCE editor doesn't load properly when initializing on Visual Tab ...) updated</title>
      
        <dc:creator>patkemper</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:30:29 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52133#comment:26</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52133#comment:26/1622907029561643</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/52133#comment:23" title="Comment 23"&gt;azaozz&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Thanks @metalandcoffee and @patkemper for testing. Looks like this may be the same as &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52050" title="#52050: defect (bug): White TinyMce editor from wp_editor function on a meta box on WP 5.6 (closed: fixed)"&gt;#52050&lt;/a&gt;, and perhaps similar to &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52111" title="#52111: defect (bug): Classic Editor - TinyMCE Visual Page editor not working correctly ... (closed: invalid)"&gt;#52111&lt;/a&gt;. Could you please test if &lt;a href="https://core.trac.wordpress.org/attachment/ticket/52111/52111.diff"&gt;https://core.trac.wordpress.org/attachment/ticket/52111/52111.diff&lt;/a&gt; fixes it.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Moving back to the 5.8 milestone pending testing of the possible patch.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Many thanks for the patch. Unfortunately, it does not solve the issue. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53338 (Determine when there is an error submitting the wp-signup.php form) created</title>
      
        <dc:creator>henry.wright</dc:creator>

      <pubDate>Sat, 05 Jun 2021 15:07:19 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53338</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53338/1622905639005788</guid>
      <description>&lt;p&gt;
For both the wp-signup.php user and blog forms there doesn't seem to be a way to determine if an error occurred in the form submission aside from error text being displayed above the form.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If a body class of something like &lt;code&gt;error&lt;/code&gt; is added or something like &lt;code&gt;error=true&lt;/code&gt; is appended to the query string then developers will be able to perform actions or style the page easier.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>whitewinterwolf</dc:creator>

      <pubDate>Sat, 05 Jun 2021 14:55:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:13</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:13/1622904944100935</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53295#comment:12" title="Comment 12"&gt;siliconforks&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Ultimately, the problem is that supporting such third-party tools requires changing the serialization format recognized by WordPress, and I don't think it is possible to do that without introducing a new vulnerability.  This is why "&lt;a href="https://core.trac.wordpress.org/ticket/17375#comment:37"&gt;`is_serialized` is frozen in time&lt;/a&gt;".&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
I'm not sure to exactly understand what you mean:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;A)&lt;/strong&gt; The &lt;code&gt;allowed_classes&lt;/code&gt; filter has been added to the &lt;code&gt;unserialize()&lt;/code&gt; function by the PHP team with the sole goal to prevent any possibility of malicious code execution triggered by the deserialization process (see &lt;a class="ext-link" href="https://wiki.php.net/rfc/secure_unserialize"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;secure unserialize&lt;/a&gt;). Do you mean that they failed their attempt and that calling &lt;code&gt;unserialized($data, ['allowed_classes' =&amp;gt; false])&lt;/code&gt; is still prone to unsecure deserialization vulnerabilities? Do you have any reference or example?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;B)&lt;/strong&gt; Do you mean that the legacy and new code returns different values for the same serialized object data provided as input? If so, do you have any example?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;strong&gt;C)&lt;/strong&gt; Do you mean that this function has been stated as &lt;em&gt;"frozen in time"&lt;/em&gt;, so there is by principle no point discussing any change to its content anyway?&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53337 (Upgrades: Add info re forced update to notification email) updated</title>
      
        <dc:creator>TimothyBlynJacobs</dc:creator>

      <pubDate>Sat, 05 Jun 2021 14:51:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53337#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53337#comment:2/1622904666898314</guid>
      <description>&lt;p&gt;
I think this is a dupe of &lt;a class="accepted ticket" href="http://core.trac.wordpress.org/ticket/51192" title="#51192: enhancement: Consider mentioning whether the auto update was forced in the auto ... (accepted)"&gt;#51192&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53334 (Update Requests library to version 1.8.1) updated</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 05 Jun 2021 14:43:53 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53334#comment:2</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53334#comment:2/1622904233206241</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52133 (TinyMCE editor doesn't load properly when initializing on Visual Tab ...) updated</title>
      
        <dc:creator>spikeuk1</dc:creator>

      <pubDate>Sat, 05 Jun 2021 14:25:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52133#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52133#comment:25/1622903108887374</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/52133#comment:24" title="Comment 24"&gt;metalandcoffee&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
Hi @azaozz - I tested the 52111 patch and it does not seem to fix the issue for me.&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
It didn't work for me either :(&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Did you see the debug error messages I posted on 52111 earlier today? Do you get similar?&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Spike&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52133 (TinyMCE editor doesn't load properly when initializing on Visual Tab ...) updated</title>
      
        <dc:creator>metalandcoffee</dc:creator>

      <pubDate>Sat, 05 Jun 2021 14:18:06 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52133#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52133#comment:24/1622902686990210</guid>
      <description>&lt;p&gt;
Hi @azaozz - I tested the 52111 patch and it does not seem to fix the issue for me.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>53334.diff attached to Ticket #53334</title>
      
        <dc:creator>kapilpaul</dc:creator>

      <pubDate>Sat, 05 Jun 2021 14:14:47 GMT</pubDate>
      <link>http://core.trac.wordpress.org/attachment/ticket/53334/53334.diff</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/attachment/ticket/53334/53334.diff/1622902487327823</guid>
      <description>&lt;p&gt;
Created patch.
&lt;/p&gt;
</description>
      <category>attachment</category>
    </item><item>
      <title>Ticket #51695 (Include Upgrade Notice in post-auto-update emails) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 Jun 2021 13:58:46 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/51695#comment:5</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/51695#comment:5/1622901526900671</guid>
      <description>&lt;p&gt;
Related/duplicate: &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/53337" title="#53337: defect (bug): Upgrades: Add info re forced update to notification email (closed: duplicate)"&gt;#53337&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52627 (Coding Standards fixes for WP 5.8) updated</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 Jun 2021 13:56:50 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52627#comment:45</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52627#comment:45/1622901410946833</guid>
      <description>&lt;p&gt;
In &lt;a class="changeset" href="http://core.trac.wordpress.org/changeset/51075" title="Coding Standards: Use strict comparison in ..."&gt;51075&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;div class="message"&gt;&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/options-media.php&lt;/code&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.&lt;br /&gt;
&lt;/p&gt;
&lt;/div&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Changeset [51075]: Coding Standards: Use strict comparison in ...</title>
      
        <dc:creator>SergeyBiryukov</dc:creator>

      <pubDate>Sat, 05 Jun 2021 13:56:49 GMT</pubDate>
      <link>http://core.trac.wordpress.org/changeset/51075</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/changeset/51075/1622901409965265</guid>
      <description>&lt;p&gt;
Coding Standards: Use strict comparison in &lt;code&gt;wp-admin/options-media.php&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
See &lt;a class="closed ticket" href="http://core.trac.wordpress.org/ticket/52627" title="#52627: task (blessed): Coding Standards fixes for WP 5.8 (closed: fixed)"&gt;#52627&lt;/a&gt;.
&lt;/p&gt;
</description>
      <category>changeset</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>siliconforks</dc:creator>

      <pubDate>Sat, 05 Jun 2021 13:25:57 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:12</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:12/1622899557674541</guid>
      <description>&lt;p&gt;
Replying to &lt;a class="ticket" href="http://core.trac.wordpress.org/ticket/53295#comment:11" title="Comment 11"&gt;whitewinterwolf&lt;/a&gt;:&lt;br /&gt;
&lt;/p&gt;
&lt;blockquote class="citation"&gt;
&lt;p&gt;
This is the safest and cleanest way to do it, and makes WordPress compatible with third-party tools (current WordPress code breaks third-party security software, thus endangering WordPress installations).&lt;br /&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
Ultimately, the problem is that supporting such third-party tools requires changing the serialization format recognized by WordPress, and I don't think it is possible to do that without introducing a new vulnerability.  This is why "&lt;a href="https://core.trac.wordpress.org/ticket/17375#comment:37"&gt;`is_serialized` is frozen in time&lt;/a&gt;".&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #45783 (Upgrades Page: Improve design) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 05 Jun 2021 12:35:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/45783#comment:7</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/45783#comment:7/1622896541623653</guid>
      <description>&lt;i&gt;Summary&lt;/i&gt; changed&lt;br/&gt;</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53337 (Upgrades: Add info re forced update to notification email) updated</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 05 Jun 2021 12:31:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53337#comment:1</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53337#comment:1/1622896312059619</guid>
      <description>&lt;p&gt;
Similar, but not quite a duplicate of &lt;a class="new ticket" href="http://core.trac.wordpress.org/ticket/51695" title="#51695: enhancement: Include Upgrade Notice in post-auto-update emails (new)"&gt;#51695&lt;/a&gt;. A fix there may also fix this. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53337 (Upgrades: Add info re forced update to notification email) created</title>
      
        <dc:creator>kraftbj</dc:creator>

      <pubDate>Sat, 05 Jun 2021 12:20:16 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53337</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53337/1622895616315358</guid>
      <description>&lt;p&gt;
When a plugin or theme update is forced via the &lt;code&gt;autoupdate&lt;/code&gt; flag (e.g. the site would not have normally automatically updated it), the notification email should provide a line informing the site owner that it was part of an auto update. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
This could probably be something like an asterisk following the plugin/theme's name, with a common explainer text that it was part of a security update. &lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Perhaps bonus would be a link to a WordPress.org page explaining it in more detail or confirming that a particular plugin is part of an active auto update. &lt;br /&gt;
&lt;/p&gt;
</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #53295 (Serialized data should be handled as an opaque value) updated</title>
      
        <dc:creator>whitewinterwolf</dc:creator>

      <pubDate>Sat, 05 Jun 2021 10:20:52 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53295#comment:11</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53295#comment:11/1622888452675848</guid>
      <description>&lt;p&gt;
Hi @siliconforks,&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I'm quite familiar with your vulnerability reporting process, as I'm notably the author of the CVE-2021-29504 published two weeks ago for WP-Cli.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I understand there is a debate regarding the use of the &lt;code&gt;unserialize()&lt;/code&gt; function with older PHP versions to check whether some data can be unserialized. That's why, as stated above, I restored the original legacy code for these older PHP versions as this change is not strictly necessary for this ticket.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Newer PHP versions (&amp;gt;= 7.0.0) added the &lt;code&gt;$options&lt;/code&gt; parameter allowing to safely call &lt;code&gt;unserialize()&lt;/code&gt; without running any object related code. This is the safest and cleanest way to do it, and makes WordPress compatible with third-party tools (current WordPress code breaks third-party security software, thus endangering WordPress installations). Note that I also added a specific check for serialized data beginning with a 'C' to remain compatible with the original behavior.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
While I also updated the function description to describe this original behavior, the description update is also not strictly necessary for this ticket so we can choose to keep this undocumented behavior undocumented if you feel its better that way.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #52111 (Classic Editor - TinyMCE Visual Page editor not working correctly ...) updated</title>
      
        <dc:creator>spikeuk1</dc:creator>

      <pubDate>Sat, 05 Jun 2021 08:28:14 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52111#comment:53</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52111#comment:53/1622881694181790</guid>
      <description>&lt;p&gt;
Many thanks @azaozz for your help with this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
I have reverted class-wp-editor.php back the the original version.&lt;br /&gt;
Enabled SCRIPT_DEBUG as per step 2 of &lt;a class="ext-link" href="https://wordpress.org/support/article/using-your-browser-to-diagnose-javascript-errors/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://wordpress.org/support/article/using-your-browser-to-diagnose-javascript-errors/&lt;/a&gt;&lt;br /&gt;
Using Chrome I repeated the action that is causing my problems (saving and edit to a Page using the Visual tab of TinyMCE.&lt;br /&gt;
There was a lot of info in the console but the screen grabs are the errors highlighted (highlit?) in red.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.dropbox.com/s/t3t17rxs8zzrymz/Chrome_Error_Console_1.jpg?dl=0"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://www.dropbox.com/s/t3t17rxs8zzrymz/Chrome_Error_Console_1.jpg?dl=0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a class="ext-link" href="https://www.dropbox.com/s/bohndu8ylzd9dtt/Chrome_Error_Console_2.jpg?dl=0"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;https://www.dropbox.com/s/bohndu8ylzd9dtt/Chrome_Error_Console_2.jpg?dl=0&lt;/a&gt;&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Thanks again&lt;br /&gt;
Spike&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53147 (Twenty Twenty: Theme Causes bbPress/BuddyBoss Main Forum Page to ...) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 05 Jun 2021 07:29:15 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53147#comment:16</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53147#comment:16/1622878155776690</guid>
      <description>&lt;i&gt;Keywords&lt;/i&gt; changed&lt;br/&gt;&lt;p&gt;
I can replicate what you are experiencing, with that information in hand, but I don't thinks this is something that a theme should have to solve.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A lot of plugins could be experiencing issues like this (you already mentioned two), so this is like opening a can of worms if the theme should account for all plugins, instead the plugins them selves can be smart about this.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
A plugin could either add specific Twenty Twenty compatibility code (as an example, WooCommerce does this, although not for this specific issue, they have a folder full of theme-specific modifications), for example by checking if the theme option to show summaries has been chosen, and changing the output via the &lt;code&gt;the_excerpt&lt;/code&gt; conditionally.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Or they could outright filter the &lt;code&gt;the_excerpt&lt;/code&gt; filter always, if a plugin relies on markup to be displayed on a site, to make sure their content is added correctly across themes without being specific to Twenty Twenty.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30854 (`wp_insert_post` doesn't save revision for new published post) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 05 Jun 2021 07:04:24 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30854#comment:25</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30854#comment:25/1622876664351777</guid>
      <description>&lt;p&gt;
I should mention that for testing it for existing content, I created a new topic in the front-end first, then I applied the patch and performed an edit.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The expected scenario is that my content from the &lt;strong&gt;Original content&lt;/strong&gt; should then show up in the revisions after the patch is applied, even if my topic was created without the patch.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The actual result at this time is the same as if the patch had not been applied, and the &lt;strong&gt;Original content&lt;/strong&gt; is lost upon editing.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #30854 (`wp_insert_post` doesn't save revision for new published post) updated</title>
      
        <dc:creator>Clorith</dc:creator>

      <pubDate>Sat, 05 Jun 2021 07:00:08 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/30854#comment:24</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/30854#comment:24/1622876408552573</guid>
      <description>&lt;p&gt;
Applied patch from &lt;a class="ext-link" href="https://github.com/WordPress/wordpress-develop/pull/1336"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;PR 1336&lt;/a&gt; and it does create appropriate revisions for _new_ topics that area created, but as indicated in my initial reply, it does not account for _existing_ posts, which is part of the bigger issue here.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Since revisions are enabled per post type with the &lt;code&gt;supports&lt;/code&gt; section of &lt;code&gt;register_post_type&lt;/code&gt;, I would expect the fix here to work for existing and new content alike when &lt;code&gt;revisions&lt;/code&gt; is added as a supported feature of the given post type.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
--&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
For anyone else looking to work on, and test this, the steps to test it (may be of interest to @hellofromTonya and the testing efforts she's heading up):&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
To start off, you need a test site with the &lt;a class="ext-link" href="https://wordpress.org/plugins/bbpress/"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;bbPress plugin&lt;/a&gt; installed, using it for testing, since it has an interface, and is part of the WordPress project.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Some additional information, this bug is only applicable when _not_ using the post editor in the wp-admin back-end, this is why using bbPress is convenient, since it calls the functions from the front-end and as such is able to replicate the bug reliably from a UI point of view as well.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Create a Forum, since we need a place to create the topics.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Throughout testing I will be using primarily two texts:&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Original content:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Title: &lt;code&gt;Test topic #N&lt;/code&gt; (increasing the number with each test I make)
&lt;/li&gt;&lt;li&gt;Post content: &lt;code&gt;Post with initial content&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Edited content:&lt;br /&gt;
&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Title: (no change)
&lt;/li&gt;&lt;li&gt;Post content: &lt;code&gt;Post with modified content&lt;/code&gt;
&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;
Now visit the front-end of your forum, create a new topic with the &lt;strong&gt;Original content&lt;/strong&gt; from above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After editing, click the &lt;code&gt;Edit&lt;/code&gt; link in the forum topic, and replace your content with the &lt;strong&gt;Edited content&lt;/strong&gt; from above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
If you visit the back-end and look in the &lt;code&gt;Topics&lt;/code&gt; post type, you should see your new topic, but if you open it for editing in the back-end, no revisions section will show up, as there are no revisions yet.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
In the front-end, edit the post a third time, this time enter any text you like, at this point it does not matter what is used, as we have our two baseline texts above.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Visit the back-end again and look at your topic, this time you will see revisions show up, but if you click in to look at them, you will see that there is one revision less than the total amount of edits and the original creation combined, and if you browse the revisions, you will not find the &lt;code&gt;Post with initial content&lt;/code&gt; string, as the entry with &lt;code&gt;Post with modified content&lt;/code&gt; is considered the first post.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
After the patch is applied, if you complete the same steps above, you should see the correct amount of revisions (the total amount of edits you made plus one for the initial topic), and you should also see that the very first revision is the &lt;code&gt;Post with initial content&lt;/code&gt; text.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item><item>
      <title>Ticket #53336 (Deleting CPT post by code (ie in a plugin) redirects to the main post type.) created</title>
      
        <dc:creator>princeofabyss</dc:creator>

      <pubDate>Sat, 05 Jun 2021 01:30:41 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/53336</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/53336/1622856641989132</guid>
      <description>&lt;ol&gt;&lt;li&gt;Create a CPT
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="2"&gt;&lt;li&gt;In functions.php or in a plugin, hook on 'save_post' to perform some calculations upon hitting the &lt;em&gt;Publish&lt;/em&gt; button in WP-Admin...
&lt;/li&gt;&lt;/ol&gt;&lt;ol start="3"&gt;&lt;li&gt;Inside the hook's code include some conditional logic that under certain circumstances it will delete the CPT post that is just being created. Ie study the following piece of code:
&lt;/li&gt;&lt;/ol&gt;&lt;pre class="wiki"&gt;add_action('save_post', 'import_external_data', 10, 2);
function import_external_data($post_id, $post)
{
    if ($post-&amp;gt;post_status == 'publish' &amp;amp;&amp;amp; $post-&amp;gt;post_type == 'movie') {
        // Check if movie exists
        $movies = get_posts(array(
            'numberposts' =&amp;gt; 1,
            'post_status' =&amp;gt; 'publish',
            'post_type' =&amp;gt; 'movie',
            'meta_key' =&amp;gt; 'movie_id',
            'meta_value' =&amp;gt; $post-&amp;gt;post_content,
        ))[0];
        if (empty($movies)) {
            // Various actions take place here
        } else {
            wp_delete_post($post_id, true);
        }
    }
}
&lt;/pre&gt;&lt;ol start="4"&gt;&lt;li&gt;Once the post is deleted you are redirected to the stock post type (?post_type=&amp;lt;CPT_slug&amp;gt; part of the URL is gone)
&lt;/li&gt;&lt;/ol&gt;</description>
      <category>newticket</category>
    </item><item>
      <title>Ticket #52728 (Widgets: Uncaught TypeError in PHP 8 when using objects for settings) updated</title>
      
        <dc:creator>jrf</dc:creator>

      <pubDate>Sat, 05 Jun 2021 00:45:44 GMT</pubDate>
      <link>http://core.trac.wordpress.org/ticket/52728#comment:8</link>
      <guid isPermaLink="false">http://core.trac.wordpress.org/ticket/52728#comment:8/1622853944919614</guid>
      <description>&lt;p&gt;
FYI: this ticket was discussed in &lt;a class="ext-link" href="https://www.youtube.com/watch?v=pweD06LsOxs"&gt;&lt;span class="icon"&gt;‚Äã&lt;/span&gt;today's pair programming session&lt;/a&gt; between @hellofromTonya and me with an impromptu guest appearance from @dlh.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The test in the current patch needs some additional work, which @dlh has graciously agreed to take on.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
The short of it is, that for a test to cover this kind of PHP cross-version change, the test - &lt;strong&gt;without&lt;/strong&gt; the patch applied - should pass on the older PHP versions and fail on PHP 8.0 due to the fatal error. In this particular case, the test will/should probably also throw a warning/fail on PHP 7.4 due to the PHP deprecation warning being thrown.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
Once the validity of the test is confirmed, the source code patch is applied and the test should then pass on all supported PHP versions.&lt;br /&gt;
&lt;/p&gt;
&lt;p&gt;
As things were, the test was failing on older PHP versions &lt;em&gt;without&lt;/em&gt; the patch applied, so didn't sufficiently safeguard the particular PHP change which was intended to be safeguarded.&lt;br /&gt;
&lt;/p&gt;
</description>
      <category>editedticket</category>
    </item>
   </channel>
</rss>